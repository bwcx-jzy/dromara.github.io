const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":338,\"nextId\":338,\"documentIds\":{\"0\":\"v-74bc627b\",\"1\":\"v-74bc627b#idea\",\"2\":\"v-74bc627b#community\",\"3\":\"v-74bc627b#website\",\"4\":\"v-74bc627b#projects\",\"5\":\"v-74bc627b#join\",\"6\":\"v-74bc627b#responsibility\",\"7\":\"v-74bc627b#code-of-conduct\",\"8\":\"v-74bc627b#project-donation\",\"9\":\"v-74bc627b#support\",\"10\":\"v-74bc627b#contact-us\",\"11\":\"v-0aa6c427\",\"12\":\"v-34fd0e9f\",\"13\":\"v-34fd0e9f#dromara-dream-code-book-club-dromara-2020-event-introduction\",\"14\":\"v-34fd0e9f#activity-background\",\"15\":\"v-34fd0e9f#activity-purpose-meaning-and-goal\",\"16\":\"v-34fd0e9f#activity-development\",\"17\":\"v-34fd0e9f#activity-leader-and-main-participants\",\"18\":\"v-34fd0e9f#principal\",\"19\":\"v-34fd0e9f#the-main-participants\",\"20\":\"v-5056f6ff\",\"21\":\"v-5056f6ff#dromara-source-code-reading-soul-2021-first-activity\",\"22\":\"v-5056f6ff#activity-details\",\"23\":\"v-3ff4fd44\",\"24\":\"v-3ff4fd44#dromara-source-code-reading-soul-2021-first-activity\",\"25\":\"v-3ff4fd44#activity-details\",\"26\":\"v-145ac574\",\"27\":\"v-0ae4773c\",\"28\":\"v-0ae4773c#handling-highly-concurrent-transactions-with-hmily\",\"29\":\"v-0ae4773c#_1-performance-issues-with-hmily\",\"30\":\"v-0ae4773c#_2-how-does-hmily-handle-rpc-call-timeouts\",\"31\":\"v-0ae4773c#_3-hmily-s-support-for-cluster-deployment-and-log-recovery-in-cluster-environments\",\"32\":\"v-0ae4773c#_4-hmily-asynchronously-saves-logs-what-if-a-drastic-event-occurs-before-logging\",\"33\":\"v-0ae4773c#hmily-configuration-tuning-for-high-concurrency-scenarios\",\"34\":\"v-381b38dd\",\"35\":\"v-381b38dd#_1-asynchronous-read-write-of-transaction-logs-using-disruptor-disruptor-is-a-lock-free-gc-free-concurrency-framework\",\"36\":\"v-381b38dd#_2-asynchronous-execution-of-confirm-and-cancel-methods\",\"37\":\"v-381b38dd#a-question-might-arise-what-if-the-cancel-or-confirm-methods-themselves-throw-exceptions\",\"38\":\"v-381b38dd#another-question-might-arise-what-if-there-s-an-exception-during-log-storage\",\"39\":\"v-381b38dd#_3-use-of-threadlocal-cache\",\"40\":\"v-381b38dd#_4-usage-of-guava-cache\",\"41\":\"v-381b38dd#these-four-aspects-collectively-make-hmily-an-asynchronous-high-performance-distributed-tcc-framework\",\"42\":\"v-381b38dd#how-to-use-hmily-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo\",\"43\":\"v-381b38dd#_1-for-dubbo-users\",\"44\":\"v-381b38dd#springcloud-users\",\"45\":\"v-381b38dd#motan-users\",\"46\":\"v-381b38dd#hmily-spring-boot-start-this-makes-it-even-easier-you-just-need-to-import-different-jar-packages-according-to-your-rpc-framework\",\"47\":\"v-616fad8c\",\"48\":\"v-616fad8c#page-operation-source-code-analysis\",\"49\":\"v-dd8cb7ba\",\"50\":\"v-dd8cb7ba#_1-prepare-source-code\",\"51\":\"v-dd8cb7ba#_1-1-fork-dromara-soul-repository-to-my-github-cchenxi-soul\",\"52\":\"v-dd8cb7ba#_1-2-clone-the-repository\",\"53\":\"v-dd8cb7ba#_1-3-open-the-source-code-with-idea\",\"54\":\"v-dd8cb7ba#_1-4-compile-the-soul-source-code\",\"55\":\"v-dd8cb7ba#_2-startup-soul\",\"56\":\"v-dd8cb7ba#_2-1-startup-soul-admin-module\",\"57\":\"v-dd8cb7ba#_2-2-startup-soul-bootstrap-module\",\"58\":\"v-dd8cb7ba#_3-test\",\"59\":\"v-dd8cb7ba#_3-1-startup-an-http-backend-service\",\"60\":\"v-dd8cb7ba#_3-1-1-test-the-service\",\"61\":\"v-dd8cb7ba#_3-1-2-test-forward-http-request\",\"62\":\"v-dd8cb7ba#_3-2-startup-two-http-backend-services-to-simulate-load-balance\",\"63\":\"v-dd8cb7ba#_3-2-1-test-the-service\",\"64\":\"v-dd8cb7ba#_3-2-2-test-load-balance\",\"65\":\"v-dd8cb7ba#_3-2-3-press-test\",\"66\":\"v-dd8cb7ba#_3-2-4-problem-in-the-process\",\"67\":\"v-50ca3d88\",\"68\":\"v-50ca3d88#i-initiation-of-the-project\",\"69\":\"v-50ca3d88#ii-introduction-to-divide-plug-in\",\"70\":\"v-50ca3d88#selector\",\"71\":\"v-50ca3d88#selector-rule\",\"72\":\"v-50ca3d88#iii-use-of-divide-plug-in\",\"73\":\"v-50ca3d88#test-gateway-routing\",\"74\":\"v-50ca3d88#test-load-balancing\",\"75\":\"v-3e324050\",\"76\":\"v-0ef5d39e\",\"77\":\"v-0ef5d39e#_1-registration-portal\",\"78\":\"v-0ef5d39e#_2-spring-mvc-register-interface-logic\",\"79\":\"v-0ef5d39e#_2-1-take-a-look-at-the-method-handlerspringmvcselector-to-handle-the-selector\",\"80\":\"v-0ef5d39e#_2-1-1-first-access-to-soul-gateway\",\"81\":\"v-0ef5d39e#_2-1-2-soul-gateway-has-been-accessed\",\"82\":\"v-0ef5d39e#_2-let-s-take-a-look-at-the-method-handlerspringmvcrule-which-handles-the-rule\",\"83\":\"v-0ef5d39e#_3-sum-up\",\"84\":\"v-04b00741\",\"85\":\"v-04b00741#abstractsoulplugin\",\"86\":\"v-04b00741#soulpluginchain\",\"87\":\"v-04b00741#plug-in-project-structure\",\"88\":\"v-04b00741#load-balancing\",\"89\":\"v-04b00741#hash\",\"90\":\"v-04b00741#randomloadbalance\",\"91\":\"v-04b00741#roundrobinloadbalance\",\"92\":\"v-04b00741#webclientplugin\",\"93\":\"v-04b00741#webclientresponseclient\",\"94\":\"v-8dcfc894\",\"95\":\"v-8dcfc894#data-synchronization-between-background-and-gateway-http-long-polling\",\"96\":\"v-8dcfc894#configuration\",\"97\":\"v-8dcfc894#data-changedlistener-system\",\"98\":\"v-8dcfc894#what-are-the-other-synchronization-strategies-doing-at-this-time\",\"99\":\"v-8dcfc894#thinking-on-the-implementation-of-long-polling\",\"100\":\"v-8dcfc894#http-longpollingdata-changedlistener-long-polling-implementation\",\"101\":\"v-8dcfc894#sum-up\",\"102\":\"v-3efd4156\",\"103\":\"v-3efd4156#data-synchronization-between-background-and-gateway-http-long-polling\",\"104\":\"v-3efd4156#pull-data-on-gateway-startup\",\"105\":\"v-3efd4156#the-gateway-polls-to-listen-for-changes\",\"106\":\"v-1a93b306\",\"107\":\"v-1a93b306#_2-1-start-2-systems\",\"108\":\"v-1a93b306#_2-2-page-operation-search-interface\",\"109\":\"v-1a93b306#_2-3-background-interface\",\"110\":\"v-1a93b306#_2-4-publish-the-event\",\"111\":\"v-1a93b306#_2-5-listen-for-events\",\"112\":\"v-1a93b306#_2-5-1-listener-injection\",\"113\":\"v-1a93b306#_2-5-2-listening-event-processing-logic\",\"114\":\"v-1a93b306#_2-6-synchronize-data-to-soul-bootstrap\",\"115\":\"v-1a93b306#data-synchronization-between-background-and-gateway-web-socket\",\"116\":\"v-1a93b306#how-to-establish-web-socket-in-the-background\",\"117\":\"v-1a93b306#how-does-the-gateway-set-up-a-web-socket\",\"118\":\"v-1a93b306#gateway-data-change-call-chain\",\"119\":\"v-1a93b306#tips\",\"120\":\"v-1532a937\",\"121\":\"v-1532a937#java-spi\",\"122\":\"v-1532a937#start-with-a-demo\",\"123\":\"v-1532a937#implementation-of-spi\",\"124\":\"v-1532a937#java-spi-thinking\",\"125\":\"v-1532a937#jdbc-spi-usage\",\"126\":\"v-1532a937#mysql-driver-package-spi\",\"127\":\"v-1532a937#filter-driver-contract-is-greater-than-configuration\",\"128\":\"v-1532a937#summary-mysql-jdbc\",\"129\":\"v-1532a937#jdbc-demo\",\"130\":\"v-1532a937#soul-spi-implementation\",\"131\":\"v-1532a937#java-spi-bug\",\"132\":\"v-1532a937#optimized-extension-loader\",\"133\":\"v-1532a937#enhanced-search-getjoin\",\"134\":\"v-1532a937#multi-tier-cache\",\"135\":\"v-1532a937#tier-1-cache-cachedinstances\",\"136\":\"v-1532a937#layer-2-cache-cachedclasses\",\"137\":\"v-1532a937#second-tier-cache-joininstances\",\"138\":\"v-1532a937#cache-summary\",\"139\":\"v-1532a937#detailed-source-code-analysis-can-be-skipped\",\"140\":\"v-708cded3\",\"141\":\"v-708cded3#introduction\",\"142\":\"v-708cded3#ak-sk-introduction\",\"143\":\"v-708cded3#plugin-usage-take-dubbo-findall-as-an-example\",\"144\":\"v-708cded3#support-added-sign-in-soulbootstrap-s-pom-xml-films\",\"145\":\"v-708cded3#add-appkey-secretkey\",\"146\":\"v-708cded3#configure-selectors-and-regulators\",\"147\":\"v-708cded3#add-the-service-of-obtaining-authentication\",\"148\":\"v-708cded3#adding-authentication-header-information-in-the-gateway\",\"149\":\"v-708cded3#demo-of-the-requested-result\",\"150\":\"v-708cded3#implementation-analysis-of-sign-plug-in\",\"151\":\"v-708cded3#pair-in-java\",\"152\":\"v-c1dba446\",\"153\":\"v-c1dba446#start-soul-admin-and-soul-bootstrap-and-use-zookeeper-to-synchronize-data-to-the-gateway\",\"154\":\"v-c1dba446#i-configuration-environment\",\"155\":\"v-c1dba446#ii-startup-service\",\"156\":\"v-c1dba446#iii-analysis-of-data-synchronization-principle-of-soul-gateway-zookeeper\",\"157\":\"v-c1dba446#iv-summary\",\"158\":\"v-be71f308\",\"159\":\"v-be71f308#start-the-admin-and-gateway-admin-operation-using-zookeeper-to-synchronize-data-to-the-gateway\",\"160\":\"v-be71f308#_1-soul-admin-changes-the-gateway-data-and-tracks-the-data-synchronization-process\",\"161\":\"v-be71f308#_2-how-does-soul-bootstrap-get-zookeeper-data-and-how-does-it-perceive-changes-in-gateway-data\",\"162\":\"v-be71f308#_3-how-does-soul-bootstrap-sense-changes-in-gateway-data\",\"163\":\"v-be71f308#iv-summary\",\"164\":\"v-50c8d66c\",\"165\":\"v-50c8d66c#how-does-soul-admin-synchronize-gateway-data\",\"166\":\"v-50c8d66c#how-does-soul-bootstrap-synchronize-gateway-data\",\"167\":\"v-50c8d66c#sum-up\",\"168\":\"v-6ab4ff1e\",\"169\":\"v-6ab4ff1e#i-introduction\",\"170\":\"v-23b8b296\",\"171\":\"v-23b8b296#plug-in-overview\",\"172\":\"v-23b8b296#plug-in-processing-flow\",\"173\":\"v-23b8b296#host-probe\",\"174\":\"v-23b8b296#_3-1-opportunity-of-exploration\",\"175\":\"v-23b8b296#_3-2-exploration-mission\",\"176\":\"v-23b8b296#_3-3-activity-check\",\"177\":\"v-23b8b296#load-balancing\",\"178\":\"v-23b8b296#sum-up\",\"179\":\"v-23db38ad\",\"180\":\"v-23db38ad#global-plugin-soulcontext-object-wrapper\",\"181\":\"v-23db38ad#divideplugin-routing-plugin\",\"182\":\"v-23db38ad#abstractsoulplugin\",\"183\":\"v-23db38ad#divideplugin\",\"184\":\"v-23db38ad#web-clientplugin-http-request-calling-plug-in\",\"185\":\"v-23db38ad#web-clientresponseplugin-http-result-processing-plug-in\",\"186\":\"v-5412e854\",\"187\":\"v-5412e854#review\",\"188\":\"v-5412e854#learn-to-use\",\"189\":\"v-5412e854#read-the-official-documents-to-have-a-general-understanding-of-it\",\"190\":\"v-5412e854#initial-use\",\"191\":\"v-5412e854#enable-the-corresponding-plug-in\",\"192\":\"v-5412e854#add-current-limit-selectors-rules\",\"193\":\"v-5412e854#interface-corresponding-access\",\"194\":\"v-5412e854#source-code-reading-read-the-source-code-with-questions\",\"195\":\"v-5412e854#how-to-ensure-that-the-redis-configuration-takes-effect-immediately-after-the-page-is-modified-and-the-corresponding-redis-connection-in-the-background-is-changed-immediately\",\"196\":\"v-5412e854#how-is-the-current-limiting-plug-in-implemented-at-the-bottom\",\"197\":\"v-5412e854#debug-call-chain\",\"198\":\"v-5412e854#method-get-keys-id\",\"199\":\"v-5412e854#execute-this-script-keys-scriptargs\",\"200\":\"v-5412e854#analysis-of-lua-current-limiting-algorithm\",\"201\":\"v-221d845b\",\"202\":\"v-221d845b#plug-in-configuration\",\"203\":\"v-221d845b#maven-dependency\",\"204\":\"v-221d845b#scenes\",\"205\":\"v-221d845b#redirect\",\"206\":\"v-221d845b#gateway-self-interface-forwarding\",\"207\":\"v-221d845b#source-code-parsing\",\"208\":\"v-221d845b#reference-link\",\"209\":\"v-338a3aae\",\"210\":\"v-338a3aae#scene-description\",\"211\":\"v-338a3aae#flow-control\",\"212\":\"v-338a3aae#fuse\",\"213\":\"v-338a3aae#fuse-1\",\"214\":\"v-338a3aae#flow-control-1\",\"215\":\"v-034e7f27\",\"216\":\"v-034e7f27#aim\",\"217\":\"v-034e7f27#what-is-resilience4j\",\"218\":\"v-034e7f27#resilience-4j-experience-with-soul\",\"219\":\"v-034e7f27#current-limiting\",\"220\":\"v-034e7f27#fuse\",\"221\":\"v-034e7f27#interpretation-of-resilience4j-plug-in-source-code\",\"222\":\"v-034e7f27#sum-up\",\"223\":\"v-685b5622\",\"224\":\"v-685b5622#aim\",\"225\":\"v-685b5622#introduction-to-the-apache-dubbo-plugin\",\"226\":\"v-685b5622#introduction-to-metadata\",\"227\":\"v-685b5622#apache-dubbo-plugin-configuration\",\"228\":\"v-685b5622#soul-bootstrap-pom-configuration\",\"229\":\"v-685b5622#soul-admin-configuration\",\"230\":\"v-685b5622#dubbo-service-pom-configuration\",\"231\":\"v-685b5622#introduction-to-apache-dubbo-generalization-calls\",\"232\":\"v-685b5622#using-generalized-calls-through-the-api-the-way-the-gateway-is-currently-used\",\"233\":\"v-685b5622#using-generalization-calls-with-spring\",\"234\":\"v-685b5622#generalization-call-implementation-flow\",\"235\":\"v-685b5622#soul-dubbo-plugin-call-resolution\",\"236\":\"v-685b5622#apachdubboplugin-generalization-call-preparation\",\"237\":\"v-685b5622#apachedubboproxyservice\",\"238\":\"v-685b5622#dubboresponseplugin\",\"239\":\"v-685b5622#web-fluxresultutils-returns-results\",\"240\":\"v-685b5622#introduction-to-dubbo-generalization-calls\",\"241\":\"v-685b5622#how-does-the-service-consumer-org-apache-dubbo-rpc-filter-genericimplfilter-intercept-generalized-calls\",\"242\":\"v-685b5622#the-service-provider-intercepts-the-generalization-request-through-generic-filter\",\"243\":\"v-685b5622#sum-up\",\"244\":\"v-685b5622#reference\",\"245\":\"v-5ad9c004\",\"246\":\"v-5ad9c004#project-donation\",\"247\":\"v-5ad9c004#basic-conditions\",\"248\":\"v-5ad9c004#source-repository-impact\",\"249\":\"v-5ad9c004#repository-permissions\",\"250\":\"v-5ad9c004#repository-documentation\",\"251\":\"v-5ad9c004#version-release\",\"252\":\"v-5ad9c004#organization-community\",\"253\":\"v-5ad9c004#donation-project-exit-matters-preliminary-version\",\"254\":\"v-5ad9c004#rights-and-organizational-form\",\"255\":\"v-5ad9c004#the-dromara-committee-has-the-final-interpretation-right-for-the-above-regulations\",\"256\":\"v-5ad9c004#sponsorship-support\",\"257\":\"v-a01977a2\",\"258\":\"v-1500d063\",\"259\":\"v-7026e7d6\",\"260\":\"v-7026e7d6#简介\",\"261\":\"v-7026e7d6#最新域名\",\"262\":\"v-7026e7d6#_1-ui-简化\",\"263\":\"v-7026e7d6#_2-api-文档支持保存和打开\",\"264\":\"v-7026e7d6#_3-apis-放入到右键菜单\",\"265\":\"v-7026e7d6#_4-统计页面加入了版本号\",\"266\":\"v-7026e7d6#更多详情\",\"267\":\"v-1d208a80\",\"268\":\"v-1d208a80#hmily-released-2-0-2-release\",\"269\":\"v-1d208a80#hmily-s-support-for-the-popular-rpc-framework-and-spring\",\"270\":\"v-1d208a80#hmily-has-a-load-balancing-policy-for-user-rpc-clusters-in-version-2-0-2\",\"271\":\"v-1d208a80#documents\",\"272\":\"v-579c0f00\",\"273\":\"v-579c0f00#architecture\",\"274\":\"v-579c0f00#features\",\"275\":\"v-579c0f00#refactoring-part\",\"276\":\"v-579c0f00#solve-bugs\",\"277\":\"v-579c0f00#user-guide\",\"278\":\"v-579c0f00#dependency-changes\",\"279\":\"v-579c0f00#dubbo-rpc-microservices\",\"280\":\"v-579c0f00#hmily-configuration-changes\",\"281\":\"v-579c0f00#next-version\",\"282\":\"v-579c0f00#community\",\"283\":\"v-2ff94cee\",\"284\":\"v-2ff94cee#adjust-hmily-architecture-with-more-reasonable-module-partition\",\"285\":\"v-2ff94cee#gather-the-hmily-community-issue-and-solve-bugs\",\"286\":\"v-2ff94cee#community-building\",\"287\":\"v-2ff94cee#recently\",\"288\":\"v-2ff94cee#at-last\",\"289\":\"v-371e7f5d\",\"290\":\"v-371e7f5d#what-is-hutool\",\"291\":\"v-371e7f5d#_5-8-0-m1\",\"292\":\"v-371e7f5d#❌-incompatible-feature\",\"293\":\"v-371e7f5d#🐣-new-features\",\"294\":\"v-371e7f5d#🐞bug-fixed\",\"295\":\"v-371e7f5d#community-co-construction\",\"296\":\"v-fc5191d2\",\"297\":\"v-fc5191d2#soul-gateway-released-version-1-0-4-release\",\"298\":\"v-fc5191d2#changes-dubbo-usage\",\"299\":\"v-fc5191d2#recommendations-on-using-version-1-0-4\",\"300\":\"v-fc5191d2#if-you-used-version-1-0-2-before-and-want-to-update-to-version-1-0-4\",\"301\":\"v-fc5191d2#for-more-information\",\"302\":\"v-520b5f51\",\"303\":\"v-520b5f51#plugin\",\"304\":\"v-520b5f51#data-synchronization\",\"305\":\"v-520b5f51#for-users\",\"306\":\"v-520b5f51#for-developers\",\"307\":\"v-520b5f51#what-scenarios-of-soul-gateway-are-suitable-and-what-should-you-pay-attention-to\",\"308\":\"v-520b5f51#scenario1-adimistration-back-end\",\"309\":\"v-520b5f51#scenario2-company-entrance-gateway-open-platform\",\"310\":\"v-520b5f51#there-are-many-other-functions\",\"311\":\"v-520b5f51#at-last\",\"312\":\"v-3f0f9f78\",\"313\":\"v-3f0f9f78#experience-the-new-architecture-and-get-a-high-availability-and-high-performance-gateway-in-10-minutes\",\"314\":\"v-3f0f9f78#bootstrap-soul-admin\",\"315\":\"v-3f0f9f78#build-your-own-gateway\",\"316\":\"v-3f0f9f78#experience-plug-in-hot-swap-under-the-new-architecture\",\"317\":\"v-3f0f9f78#features-of-soul-gateway\",\"318\":\"v-3f0f9f78#what-scenarios-of-soul-gateway-are-suitable-and-what-should-you-pay-attention-to\",\"319\":\"v-3f0f9f78#scenario1-adimistration-back-end\",\"320\":\"v-3f0f9f78#scenario2-company-entrance-gateway-open-platform\",\"321\":\"v-3f0f9f78#my-open-source-story\",\"322\":\"v-70665ce4\",\"323\":\"v-70665ce4#changes-in-project-dependencies\",\"324\":\"v-70665ce4#changes-in-configuration-parameters\",\"325\":\"v-70665ce4#changes-in-package-name\",\"326\":\"v-70665ce4#🔧-configuration\",\"327\":\"v-70665ce4#🔨encoding\",\"328\":\"v-70665ce4#✨start-uploading\",\"329\":\"v-70665ce4#🎨other-operations\",\"330\":\"v-0bd23e5c\",\"331\":\"v-0bd23e5c#简介\",\"332\":\"v-0bd23e5c#v1-1-6-更新内容\",\"333\":\"v-0bd23e5c#新增功能\",\"334\":\"v-0bd23e5c#功能优化\",\"335\":\"v-0bd23e5c#问题修复\",\"336\":\"v-0bd23e5c#更新详情\",\"337\":\"v-6dc367c8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,10],\"2\":[1,16],\"3\":[1,11],\"4\":[1,93],\"5\":[1,20],\"6\":[1,38],\"7\":[3,46],\"8\":[2,51],\"9\":[1,43],\"10\":[2,3],\"11\":[1],\"12\":[6,6],\"13\":[9,5],\"14\":[2,31],\"15\":[5,23],\"16\":[2,82],\"17\":[5],\"18\":[1,3],\"19\":[3,3],\"20\":[9,3],\"21\":[9,12],\"22\":[2,70],\"23\":[8,3],\"24\":[9,12],\"25\":[2,68],\"26\":[1],\"27\":[7],\"28\":[6,72],\"29\":[6,93],\"30\":[9,73],\"31\":[13,49],\"32\":[14,91],\"33\":[7,235],\"34\":[8,45],\"35\":[17,138],\"36\":[8,116],\"37\":[15,41],\"38\":[14,59],\"39\":[5,91],\"40\":[5,152],\"41\":[14],\"42\":[14,27],\"43\":[4,217],\"44\":[2,16],\"45\":[2,16],\"46\":[22,153],\"47\":[7],\"48\":[5,517],\"49\":[5,19],\"50\":[4],\"51\":[9],\"52\":[5,8],\"53\":[8],\"54\":[7,19],\"55\":[3],\"56\":[6,45],\"57\":[5,114],\"58\":[2,12],\"59\":[7,53],\"60\":[5,14],\"61\":[7,68],\"62\":[11,16],\"63\":[6,14],\"64\":[5,88],\"65\":[4,113],\"66\":[7,21],\"67\":[6],\"68\":[5,57],\"69\":[6,113],\"70\":[1,117],\"71\":[2,24],\"72\":[6,100],\"73\":[3,33],\"74\":[3,65],\"75\":[2,2],\"76\":[10],\"77\":[3,68],\"78\":[6,89],\"79\":[13,81],\"80\":[7,205],\"81\":[7,238],\"82\":[14,250],\"83\":[3,82],\"84\":[9,61],\"85\":[1,156],\"86\":[1,247],\"87\":[4,207],\"88\":[2,45],\"89\":[1,105],\"90\":[1,80],\"91\":[1,199],\"92\":[1,175],\"93\":[1,78],\"94\":[8],\"95\":[10],\"96\":[1,62],\"97\":[3,218],\"98\":[11,140],\"99\":[7,90],\"100\":[6,277],\"101\":[2,182],\"102\":[8],\"103\":[10,35],\"104\":[5,316],\"105\":[7,259],\"106\":[7,88],\"107\":[4,18],\"108\":[5,33],\"109\":[4,103],\"110\":[5,87],\"111\":[5,71],\"112\":[5,219],\"113\":[6,153],\"114\":[7,148],\"115\":[9],\"116\":[9,84],\"117\":[10,191],\"118\":[5,190],\"119\":[1,59],\"120\":[4,112],\"121\":[2,118],\"122\":[4,132],\"123\":[3,253],\"124\":[3,127],\"125\":[3,16],\"126\":[4,147],\"127\":[7,121],\"128\":[3,85],\"129\":[2,146],\"130\":[3,51],\"131\":[3,102],\"132\":[3,95],\"133\":[4,61],\"134\":[3,57],\"135\":[4,77],\"136\":[4,67],\"137\":[4,58],\"138\":[2,19],\"139\":[8,178],\"140\":[5],\"141\":[1,11],\"142\":[3,23],\"143\":[8],\"144\":[9,23],\"145\":[3],\"146\":[4,4],\"147\":[6,83],\"148\":[7,2],\"149\":[5,13],\"150\":[6],\"151\":[3,129],\"152\":[7],\"153\":[12],\"154\":[3,52],\"155\":[3,159],\"156\":[9,288],\"157\":[2,30],\"158\":[7],\"159\":[13,54],\"160\":[11,44],\"161\":[16,169],\"162\":[10,125],\"163\":[2,1],\"164\":[6,376],\"165\":[8,193],\"166\":[8,130],\"167\":[2,1],\"168\":[6],\"169\":[2,34],\"170\":[8],\"171\":[3,48],\"172\":[4,171],\"173\":[2,86],\"174\":[5,80],\"175\":[4,98],\"176\":[3,103],\"177\":[2,152],\"178\":[2,52],\"179\":[6,309],\"180\":[5,178],\"181\":[3,41],\"182\":[1,241],\"183\":[1,165],\"184\":[7,219],\"185\":[7,169],\"186\":[5],\"187\":[1,58],\"188\":[3],\"189\":[12,81],\"190\":[2],\"191\":[5,46],\"192\":[6,43],\"193\":[3,41],\"194\":[9],\"195\":[21,165],\"196\":[11],\"197\":[3,208],\"198\":[5,48],\"199\":[6,90],\"200\":[6,144],\"201\":[5,42],\"202\":[3,41],\"203\":[2,29],\"204\":[1,14],\"205\":[1,28],\"206\":[4,35],\"207\":[3,237],\"208\":[3,13],\"209\":[5,62],\"210\":[2,147],\"211\":[2,204],\"212\":[1,254],\"213\":[1,149],\"214\":[2,442],\"215\":[5],\"216\":[1,17],\"217\":[4,95],\"218\":[5,139],\"219\":[2,207],\"220\":[1,98],\"221\":[7,219],\"222\":[2,22],\"223\":[6],\"224\":[1,39],\"225\":[6,63],\"226\":[3,164],\"227\":[4],\"228\":[4,29],\"229\":[3,23],\"230\":[4,67],\"231\":[6,44],\"232\":[12,28],\"233\":[5,12],\"234\":[4,98],\"235\":[5,105],\"236\":[4,99],\"237\":[1,127],\"238\":[1,39],\"239\":[4],\"240\":[5,30],\"241\":[15,123],\"242\":[11,178],\"243\":[2,35],\"244\":[1,18],\"245\":[1],\"246\":[2],\"247\":[2,96],\"248\":[3,43],\"249\":[2,36],\"250\":[2,22],\"251\":[2,20],\"252\":[2,38],\"253\":[7,117],\"254\":[4,139],\"255\":[12],\"256\":[2,576],\"257\":[1],\"258\":[1],\"259\":[6],\"260\":[1,68],\"261\":[1,17],\"262\":[3,14],\"263\":[3,1],\"264\":[3,8],\"265\":[2,4],\"266\":[1,4],\"267\":[5],\"268\":[5,38],\"269\":[11,24],\"270\":[15,54],\"271\":[1,28],\"272\":[17,50],\"273\":[1],\"274\":[1,76],\"275\":[2,97],\"276\":[3,62],\"277\":[2,29],\"278\":[2,22],\"279\":[3,28],\"280\":[3,254],\"281\":[2,58],\"282\":[1,30],\"283\":[6,45],\"284\":[8,89],\"285\":[9,83],\"286\":[2,51],\"287\":[1,36],\"288\":[2,75],\"289\":[9,19],\"290\":[3,158],\"291\":[4],\"292\":[3,102],\"293\":[3,153],\"294\":[2,105],\"295\":[3,30],\"296\":[8],\"297\":[8,30],\"298\":[3,29],\"299\":[7,27],\"300\":[14,27],\"301\":[3,20],\"302\":[12,40],\"303\":[1,32],\"304\":[2,31],\"305\":[2,114],\"306\":[2,103],\"307\":[15,24],\"308\":[4,153],\"309\":[7,112],\"310\":[5,15],\"311\":[2,44],\"312\":[13,109],\"313\":[15],\"314\":[3,44],\"315\":[4,86],\"316\":[9,101],\"317\":[4,119],\"318\":[15,24],\"319\":[4,153],\"320\":[7,113],\"321\":[4,210],\"322\":[14,145],\"323\":[4,29],\"324\":[4,43],\"325\":[4,26],\"326\":[2,104],\"327\":[1,18],\"328\":[2,146],\"329\":[2,84],\"330\":[5],\"331\":[1,24],\"332\":[4,5],\"333\":[1,12],\"334\":[1,16],\"335\":[1,8],\"336\":[1,8],\"337\":[1]},\"averageFieldLength\":[4.973372781065087,86.6280944755084],\"storedFields\":{\"0\":{\"h\":\"About\"},\"1\":{\"h\":\"Idea\",\"t\":[\"Let every open source enthusiast, experience the joy of open source.\"]},\"2\":{\"h\":\"Community\",\"t\":[\"Technology stack comprehensive open source co-build, maintain community neutrality, harmony and happiness to do open source.\"]},\"3\":{\"h\":\"Website\",\"t\":[\"https://dromara.org Is Dromara Open Source Community Official Website.\"]},\"4\":{\"h\":\"Projects\",\"t\":[\"Name\",\"star\",\"项目介绍\",\"High Performance One-Stop Distributed Transaction Solution\",\"Strongly Consistent Distributed Transaction Solution.\",\"Reliable Messaging Distributed Transaction Solution.\",\"Lightweight distributed log tag tracking wizard.\",\"High-level, minimalist lightweight HTTP call API framework.\",\"A library of tools to keep Java sweet.\",\"Industry-leading enterprise-class open source IAM identity management and authentication products.\",\"Non-intrusive distributed monitoring, dedicated to application-level monitoring, helps developers quickly locate problems.\",\"Tools dedicated to image composition.\",\"A simple and lightweight low-intrusive online build, automated deployment, daily operation and maintenance, project monitoring software.\",\"The most full-featured Java permission authentication framework ever!\",\"REST API-oriented high-performance authentication authentication framework.\",\"Enterprise production-grade 10 billion daily PV highly available and scalable RPC framework.\",\"All Projects\"]},\"5\":{\"h\":\"Join\",\"t\":[\"Dromara The community welcomes all open source lovers to join, you can contact us by emailing xiaoyu@dromara.org.\"]},\"6\":{\"h\":\"Responsibility\",\"t\":[\"The organization must not engage in illegal or self-interested things\",\"Responsible for the review of new and old donation projects in the community\",\"Responsible for the management of new and old community members\",\"Responsible for the promotion of all incubated projects under the community, publicity and maintenance of the project version update log\",\"Responsible for coordinating and executing the activities of community organizations\"]},\"7\":{\"h\":\"Code of Conduct\",\"t\":[\"Guidelines for donated projects: All projects donated to Dromara community retain all rights and commercialization of the original project, Dromara community does not interfere in any way except to assist in promotion, publicity and operation, but donated projects must not engage in illegal acts or slander the reputation of Dromara community.\",\"Community Member Guidelines: Do not engage in anything that is illegal or detrimental to others\",\"Community projects: do not engage in illegal or detrimental things\"]},\"8\":{\"h\":\"Project Donation\",\"t\":[\"The Dromara Open Source Community Organization has the following minimum requirements for donated projects：\",\"The project must be original and cannot be a Fork version.\",\"The project must be a complete application solution.\",\"The project must have good code comments and continuous improvement of the usage documentation.\",\"The project has a record of actual valid code submissions for at least the last 2 months.\",\"Projects must be approved by the dromara community technical committee\"]},\"9\":{\"h\":\"Support\",\"t\":[\"The Dromara community can only continue to operate and provide better services with the support of everyone. To become a Dromara community sponsor or supporter, please consider supporting:\",\"The Dromara community is committed to full disclosure of all sponsorship support funds received and subsequent use of funds will be limited to Dromara community operating expenses\",\"All Support\"]},\"10\":{\"h\":\"Contact Us\",\"t\":[\"xiaoyu@dromara.org\"]},\"11\":{\"h\":\"Activity\"},\"12\":{\"h\":\"Dromara Dream Code Book Club Introduction\",\"t\":[\"Dromara Dream Code Book Club Introduction\"]},\"13\":{\"h\":\"Dromara Dream Code Book Club（Dromara 2020 event introduction）\",\"t\":[\"Date: Sunday, December 27, 2020\"]},\"14\":{\"h\":\"Activity background\",\"t\":[\"In order to increase the enthusiasm of community participants, promote the construction of the Dromara community, exercise everyone's expressive ability and improve the core strength of technology, the community organized this event in the form of source code reading.\"]},\"15\":{\"h\":\"Activity purpose, meaning and goal\",\"t\":[\"Increase motivation\",\"Improve technical strength and expand everyone's horizons\",\"Exercise language skills\",\"Promote the harmony, unity and progress of the community\",\"Make the Dromara community bigger and bigger\"]},\"16\":{\"h\":\"Activity development\",\"t\":[\"The activity is divided into multiple phases. First, twelve members are selected for a 12-day source code reading, and two online sharing is carried out during the period.\",\"In order to improve everyone's consciousness, we have set up a punishment system. First hand over 500 yuan to the administrator. If homework is not submitted at 8 am the next day, 100 yuan will be deducted for sharing latecomers. Those who ask for leave in advance do not need to be punished.\",\"Each person writes to their homework submission area in text based on the content they read every day.\"]},\"17\":{\"h\":\"Activity leader and main participants\"},\"18\":{\"h\":\"Principal\",\"t\":[\"Cui, Kimming, Xiaoyu\"]},\"19\":{\"h\":\"The main participants\",\"t\":[\"Dromara community member\"]},\"20\":{\"h\":\"Dromara Soul Source Code 01 Reading Sharing Session 02\",\"t\":[\"Dromara Online Activity\"]},\"21\":{\"h\":\"Dromara source code reading (Soul 2021 first activity)\",\"t\":[\"Date: Sunday, February 6, 2021\",\"Time：20:00 – 23:00\",\"Location: Tencent Meeting\"]},\"22\":{\"h\":\"Activity Details\",\"t\":[\"20:00 - 20:10 The opening introduces the recent dream code sharing situation by kimming & 崔\",\"20:10 - 20:25 Introduction to SPI and how Soul SPI is enhanced by zhuming\",\"20:25 - 20:50 Introduction to Reactive Programming by Ztzzz\",\"20:50 - 21:10 Soul Unit Test by yangze\",\"21:10 - 21:25 Fault-tolerant design by jiangwenbo\",\"21:25 - 21:40 Soul Web Flux loading process and processing request analysis by rwby\",\"21:40 - 21:55 Soul current limiting and fusing analysis by liupenghui\",\"21:55 - 22:05 Summary of common Java problems by muou\",\"22:05 - 22:20 How to open a social interface by weikai\",\"22:20 - 22:30 Summary and Community Development Prospects by Xiaoyu\"]},\"23\":{\"h\":\"Dromara Soul source code 01 reading sharing session 01\",\"t\":[\"Dromara Online Activity\"]},\"24\":{\"h\":\"Dromara source code reading (Soul 2021 first activity)\",\"t\":[\"Date: Sunday, January 24, 2021\",\"Time: 15:00 – 17:00\",\"Location: Tencent Meeting\"]},\"25\":{\"h\":\"Activity Details\",\"t\":[\"15:00-15:10 Opening introduction of dream code sharing process by kimming & Cui\",\"15:10-15:25 Soul data synchronization websocket by Ting\",\"15:25-15:50 Http Discovery Sharing by Zhu Ming\",\"15:50-16:10 Analysis based on the Sofa-Rpc protocol by Dongdong\",\"16:10-16:25 Metrics Monitoring by Ge Tianye\",\"16:25-16:40 Http Long Polling Sharing by Du Yuhang\",\"16:40-16:55 Sharing and introducing the overall architecture of data synchronization by Wentao Xia\",\"16:55-17:05 Microkernel Architecture Sharing by Shen Xiangjun\",\"17:05-17:20 Sharing the experience and insights of reading source code by JinZe\",\"17:20-17:30 Summary and Community Development Prospects by Xiaoyu\"]},\"26\":{\"h\":\"Blog\"},\"27\":{\"h\":\"Hmily:Easy Handle Highly Concurrent Distributed Transactions\"},\"28\":{\"h\":\"Handling Highly Concurrent Transactions with Hmily\",\"t\":[\"Let's start with a quick advertisement. Hmily is participating in the Open Source China Annual Popularity Poll at this link. Click the link, search for Hmily, and cast your vote. It's the second one in the 11th row. Thank you, everyone, for your support! Feel free to follow us and submit pull requests to make Hmily even better and more perfect.\",\"GitHub: [https://github.com/yu199195/hmily] Gitee: [https://gitee.com/dromara/hmily]\",\"Now, let's address some questions from the community and clear up some areas of confusion.\"]},\"29\":{\"h\":\"1. Performance Issues with Hmily?\",\"t\":[\"Answer: Hmily uses AOP aspect to bind with your RPC methods. It essentially saves logs (using asynchronous disruptor) and passes some parameters when you make an RPC call. Both confirm and cancel operations are now asynchronous, so its performance is similar to that of your RPC. Remember, Hmily doesn't create transactions; it's just a facilitator for distributed transactions. In the past, Hmily had a performance drop due to a locking mechanism in the AOP aspect, as discussed in an article by the Spring Cloud China community. This issue has been resolved now, and everything is asynchronous. The testing scenario was somewhat unreasonable, as it was a demo under default configurations. In the following sections, I'll explain how to improve Hmily's performance.\"]},\"30\":{\"h\":\"2. How Does Hmily Handle RPC Call Timeouts?\",\"t\":[\"Answer: In a distributed environment, when you invoke an RPC method and it exceeds the timeout, let's say the Dubbo timeout is set to 100ms but your method takes 140ms, your method has succeeded, but for the caller, it appears as a failure. In this case, a rollback is needed. Hmily's approach is as follows: if the caller thinks the operation failed due to a timeout, it won't include the operation in the rollback chain. So, for an RPC interface that times out, it handles its own rollback. A scheduled task handles the rollback because the log is in the \\\"try\\\" phase, and the cancel method is invoked for rollback, achieving eventual consistency.\"]},\"31\":{\"h\":\"3. Hmily's Support for Cluster Deployment and Log Recovery in Cluster Environments?\",\"t\":[\"Answer: Hmily is naturally compatible with cluster deployment as it's bound to your application via AOP aspect. Log recovery in a clustered environment is rarely an issue, unless your entire cluster crashes simultaneously. If your cluster goes down simultaneously and recovers, the logs have a version field; only those that are successfully updated undergo recovery.\"]},\"32\":{\"h\":\"4. Hmily Asynchronously Saves Logs, What If a Drastic Event Occurs Before Logging?\",\"t\":[\"Answer: If you're having such thoughts, you probably haven't delved into the source code or didn't fully understand it. In the AOP aspect, logs are first saved asynchronously, with the state being PRE_TRY. After the try phase execution completes, it's updated to \\\"try\\\". Even in scenarios like sudden JVM exit or power loss right after this line of code is executed, the mechanism stands. Even if you're testing scenarios like stopping the JVM abruptly or killing the service, keep in mind that Hmily can't account for all accidental events. It's best not to put excessive effort into solving these rare occurrences; the ideal solution is to not focus on them.\"]},\"33\":{\"h\":\"Hmily Configuration Tuning for High-Concurrency Scenarios\",\"t\":[\"The following parameters can be optimized for high-concurrency scenarios in Hmily:\",\"serializer: I recommend using Kryo. Hmily also supports Hessian, Protostuff, and JDK serialization. In our tests, the performance was in the order: Kryo > Hessian > Protostuff > JDK.\",\"recoverDelayTime: Delay time for the recovery task (in seconds, default is 120). This parameter should be greater than the timeout set for your RPC calls.\",\"retryMax: Maximum retry count (default is 3). When your service goes down, the recovery task will execute your cancel or confirm method for a maximum of retryMax times.\",\"bufferSize: Disruptor's buffer size. Increase this for high-concurrency scenarios; it should be a power of 2.\",\"consumerThreads: Number of threads for Disruptor's consumer. Increase this for high-concurrency scenarios.\",\"started: Set this to true for the initiator side and false for the participant side.\",\"asyncThreads: Size of the thread pool for asynchronous execution of confirm and cancel methods. Increase this for high-concurrency scenarios.\",\"Next, the most important aspect: configuring the storage of transaction logs. In our stress tests, I recommend using MongoDB, where the performance ranked as follows: MongoDB > Redis Cluster > MySQL > ZooKeeper.\",\"If you're using MongoDB for log storage, configure as follows:\",\" <bean id=\\\"hmilyTransactionBootstrap\\\" class=\\\"com.hmily.tcc.core.bootstrap.HmilyTransactionBootstrap\\\"> <property name=\\\"serializer\\\" value=\\\"kryo\\\"/> <property name=\\\"recoverDelayTime\\\" value=\\\"120\\\"/> <property name=\\\"retryMax\\\" value=\\\"3\\\"/> <property name=\\\"loadFactor\\\" value=\\\"2\\\"/> <property name=\\\"scheduledDelay\\\" value=\\\"120\\\"/> <property name=\\\"scheduledThreadMax\\\" value=\\\"4\\\"/> <property name=\\\"bufferSize\\\" value=\\\"4096\\\"/> <property name=\\\"consumerThreads\\\" value=\\\"32\\\"/> <property name=\\\"started\\\" value=\\\"false\\\"/> <property name=\\\"asyncThreads\\\" value=\\\"32\\\"/> <property name=\\\"repositorySupport\\\" value=\\\"db\\\"/> <property name=\\\"tccDbConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccDbConfig\\\"> <property name=\\\"url\\\" value=\\\"jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8\\\"/> <property name=\\\"driverClassName\\\" value=\\\"com.mysql.jdbc.Driver\\\"/> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> </bean> \",\"Here, I recommend using Kryo. Of course, Hmily also supports Hessian, Protostuff, and JDK serialization. In our tests, the performance was in the order: Kryo > Hessian > Protostuff > JDK.\",\"recoverDelayTime :Delay time for the recovery task (in seconds, default is 120). This parameter should be greater than the timeout set for your RPC calls.\",\"retryMax : Maximum retry count (default is 3). When your service goes down, the recovery task will execute your cancel or confirm method for a maximum of retryMax times.\",\"Disruptor's buffer size. Increase this for high-concurrency scenarios; it should be a power of 2.\",\"consumerThreads: Disruptor's consumer thread count. Increase this for high-concurrency scenarios.\",\"started: Set this to true for the initiator side and false for the participant side.\",\"asyncThreads: Size of the thread pool for asynchronous execution of confirm and cancel methods. Increase this for high-concurrency scenarios.\",\"Next is the most important aspect: configuring the storage of transaction logs. In our stress tests, I recommend using MongoDB, where the performance ranked as follows: MongoDB > Redis Cluster > MySQL > ZooKeeper.\",\"If you're using MongoDB for log storage, configure as follows:\",\" <property name=\\\"repositorySupport\\\" value=\\\"mongodb\\\"/> <property name=\\\"tccMongoConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccMongoConfig\\\"> <property name=\\\"mongoDbUrl\\\" value=\\\"192.168.1.68:27017\\\"/> <property name=\\\"mongoDbName\\\" value=\\\"happylife\\\"/> <property name=\\\"mongoUserName\\\" value=\\\"xiaoyu\\\"/> <property name=\\\"mongoUserPwd\\\" value=\\\"123456\\\"/> </bean> </property> \",\"If you're using Redis for log storage, configure as follows:\",\"Single node Redis:\",\" <property name=\\\"repositorySupport\\\" value=\\\"redis\\\" /> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"hostName\\\" value=\\\"192.168.1.68\\\"/> <property name=\\\"port\\\" value=\\\"6379\\\"/> <property name=\\\"password\\\" value=\\\"\\\"/> </bean> </property> \",\"Redis sentinel mode cluster:\",\"<property name=\\\"repositorySupport\\\" value=\\\"redis\\\"/> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"masterName\\\" value=\\\"aaa\\\"/> <property name=\\\"sentinel\\\" value=\\\"true\\\"/> <property name=\\\"sentinelUrl\\\" value=\\\"192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> \",\"Redis cluster mode:\",\"<property name=\\\"repositorySupport\\\" value=\\\"redis\\\"/> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"cluster\\\" value=\\\"true\\\"/> <property name=\\\"clusterUrl\\\" value=\\\"192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> \",\"If you're using ZooKeeper for log storage, configure as follows:\",\" <property name=\\\"repositorySupport\\\" value=\\\"zookeeper\\\"/> <property name=\\\"tccZookeeperConfig\\\"> <bean class=\\\"om.hmily.tcc.common.config.TccZookeeperConfig\\\"> <property name=\\\"host\\\" value=\\\"192.168.1.73:2181\\\"/> <property name=\\\"sessionTimeOut\\\" value=\\\"100000\\\"/> <property name=\\\"rootPath\\\" value=\\\"/tcc\\\"/> </bean> </property> \",\"The database configuration has been provided above, and I won't introduce the file-based storage approach.\",\"The above is the content shared today, an annotation, and a few configuration lines to easily handle high-concurrency distributed transactions!\"]},\"34\":{\"h\":\"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework\",\"t\":[\"Seamlessly integrates with Spring and Spring Boot.\",\"Seamlessly integrates with Dubbo, Spring Cloud, Motan, and other RPC frameworks.\",\"Supports various transaction log storage methods (Redis, MongoDB, MySQL, etc.).\",\"Offers multiple serialization methods for different types of logs (Kryo, Protostuff, Hessian).\",\"Provides automatic transaction recovery.\",\"Supports embedded transaction dependency propagation.\",\"Zero-intrusion code and flexible configuration.\"]},\"35\":{\"h\":\"1. Asynchronous Read/Write of Transaction Logs Using Disruptor (Disruptor is a Lock-Free, GC-Free Concurrency Framework)\",\"t\":[\"package com.hmily.tcc.core.disruptor.publisher; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.common.enums.EventTypeEnum; import com.hmily.tcc.core.concurrent.threadpool.HmilyThreadFactory; import com.hmily.tcc.core.coordinator.CoordinatorService; import com.hmily.tcc.core.disruptor.event.HmilyTransactionEvent; import com.hmily.tcc.core.disruptor.factory.HmilyTransactionEventFactory; import com.hmily.tcc.core.disruptor.handler.HmilyConsumerDataHandler; import com.hmily.tcc.core.disruptor.translator.HmilyTransactionEventTranslator; import com.lmax.disruptor.BlockingWaitStrategy; import com.lmax.disruptor.IgnoreExceptionHandler; import com.lmax.disruptor.RingBuffer; import com.lmax.disruptor.dsl.Disruptor; import com.lmax.disruptor.dsl.ProducerType; import org.springframework.beans.factory.DisposableBean; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Component; import java.util.concurrent.Executor; import java.util.concurrent.LinkedBlockingQueue; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; import java.util.concurrent.atomic.AtomicInteger; /** * event publisher. * * @author xiaoyu(Myth) */ @Component public class HmilyTransactionEventPublisher implements DisposableBean { private Disruptor<HmilyTransactionEvent> disruptor; private final CoordinatorService coordinatorService; @Autowired public HmilyTransactionEventPublisher(final CoordinatorService coordinatorService) { this.coordinatorService = coordinatorService; } /** * disruptor start. * * @param bufferSize this is disruptor buffer size. * @param threadSize this is disruptor consumer thread size. */ public void start(final int bufferSize, final int threadSize) { disruptor = new Disruptor<>(new HmilyTransactionEventFactory(), bufferSize, r -> { AtomicInteger index = new AtomicInteger(1); return new Thread(null, r, \\\"disruptor-thread-\\\" + index.getAndIncrement()); }, ProducerType.MULTI, new BlockingWaitStrategy()); final Executor executor = new ThreadPoolExecutor(threadSize, threadSize, 0, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), HmilyThreadFactory.create(\\\"hmily-log-disruptor\\\", false), new ThreadPoolExecutor.AbortPolicy()); HmilyConsumerDataHandler[] consumers = new HmilyConsumerDataHandler[threadSize]; for (int i = 0; i < threadSize; i++) { consumers[i] = new HmilyConsumerDataHandler(executor, coordinatorService); } disruptor.handleEventsWithWorkerPool(consumers); disruptor.setDefaultExceptionHandler(new IgnoreExceptionHandler()); disruptor.start(); } /** * publish disruptor event. * * @param tccTransaction {@linkplain com.hmily.tcc.common.bean.entity.TccTransaction } * @param type {@linkplain EventTypeEnum} */ public void publishEvent(final TccTransaction tccTransaction, final int type) { final RingBuffer<HmilyTransactionEvent> ringBuffer = disruptor.getRingBuffer(); ringBuffer.publishEvent(new HmilyTransactionEventTranslator(type), tccTransaction); } @Override public void destroy() { disruptor.shutdown(); } } \",\"The default value of bufferSize here is 4094 * 4, which can be configured based on the user's requirements.\",\" HmilyConsumerDataHandler[] consumers = new HmilyConsumerDataHandler[threadSize]; for (int i = 0; i < threadSize; i++) { consumers[i] = new HmilyConsumerDataHandler(executor, coordinatorService); } disruptor.handleEventsWithWorkerPool(consumers); \",\"Multiple consumers are employed here to process tasks in the queue.\"]},\"36\":{\"h\":\"2.Asynchronous Execution of Confirm and Cancel Methods\",\"t\":[\"package com.hmily.tcc.core.service.handler; import com.hmily.tcc.common.bean.context.TccTransactionContext; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.common.enums.TccActionEnum; import com.hmily.tcc.core.concurrent.threadpool.HmilyThreadFactory; import com.hmily.tcc.core.service.HmilyTransactionHandler; import com.hmily.tcc.core.service.executor.HmilyTransactionExecutor; import org.aspectj.lang.ProceedingJoinPoint; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Component; import java.util.concurrent.Executor; import java.util.concurrent.LinkedBlockingQueue; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; /** * this is transaction starter. * * @author xiaoyu */ @Component public class StarterHmilyTransactionHandler implements HmilyTransactionHandler { private static final int MAX_THREAD = Runtime.getRuntime().availableProcessors() << 1; private final HmilyTransactionExecutor hmilyTransactionExecutor; private final Executor executor = new ThreadPoolExecutor(MAX_THREAD, MAX_THREAD, 0, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), HmilyThreadFactory.create(\\\"hmily-execute\\\", false), new ThreadPoolExecutor.AbortPolicy()); @Autowired public StarterHmilyTransactionHandler(final HmilyTransactionExecutor hmilyTransactionExecutor) { this.hmilyTransactionExecutor = hmilyTransactionExecutor; } @Override public Object handler(final ProceedingJoinPoint point, final TccTransactionContext context) throws Throwable { Object returnValue; try { TccTransaction tccTransaction = hmilyTransactionExecutor.begin(point); try { //execute try returnValue = point.proceed(); tccTransaction.setStatus(TccActionEnum.TRYING.getCode()); hmilyTransactionExecutor.updateStatus(tccTransaction); } catch (Throwable throwable) { //if exception ,execute cancel final TccTransaction currentTransaction = hmilyTransactionExecutor.getCurrentTransaction(); executor.execute(() -> hmilyTransactionExecutor .cancel(currentTransaction)); throw throwable; } //execute confirm final TccTransaction currentTransaction = hmilyTransactionExecutor.getCurrentTransaction(); executor.execute(() -> hmilyTransactionExecutor.confirm(currentTransaction)); } finally { hmilyTransactionExecutor.remove(); } return returnValue; } } \",\"When an exception occurs in the try method's AOP aspect, the cancel method is executed asynchronously using a thread pool. If there is no exception, the confirm method is executed.\"]},\"37\":{\"h\":\"A question might arise: What if the cancel or confirm methods themselves throw exceptions?\",\"t\":[\"Answer: This scenario is quite rare because you've just finished executing the try phase moments ago. Moreover, if such an exception arises, the framework has a built-in scheduling thread pool for recovery, so there's no need to worry.\"]},\"38\":{\"h\":\"Another question might arise: What if there's an exception during log storage?\",\"t\":[\"Answer: First, this is an edge case; second, the log configuration parameters are required during framework startup. Even if log storage fails during runtime, the framework will utilize cached logs, ensuring correct program execution. Lastly, if log storage fails and the system crashes under extremely rare circumstances, well, congratulations, you can consider buying a lottery ticket. The best solution is to not overly concern yourself with such a scenario.\"]},\"39\":{\"h\":\"3.Use of ThreadLocal Cache\",\"t\":[\" /** * transaction begin. * * @param point cut point. * @return TccTransaction */ public TccTransaction begin(final ProceedingJoinPoint point) { LogUtil.debug(LOGGER, () -> \\\"......hmily transaction！start....\\\"); //build tccTransaction final TccTransaction tccTransaction = buildTccTransaction(point, TccRoleEnum.START.getCode(), null); //save tccTransaction in threadLocal CURRENT.set(tccTransaction); //publishEvent hmilyTransactionEventPublisher.publishEvent(tccTransaction, EventTypeEnum.SAVE.getCode()); //set TccTransactionContext this context transfer remote TccTransactionContext context = new TccTransactionContext(); //set action is try context.setAction(TccActionEnum.TRYING.getCode()); context.setTransId(tccTransaction.getTransId()); context.setRole(TccRoleEnum.START.getCode()); TransactionContextLocal.getInstance().set(context); return tccTransaction; } \",\"It's important to understand that the ThreadLocal cache holds transaction information for the initiator method. RPC calls form a chain of invocation, ensuring proper storage.\",\" /** * add participant. * * @param participant {@linkplain Participant} */ public void enlistParticipant(final Participant participant) { if (Objects.isNull(participant)) { return; } Optional.ofNullable(getCurrentTransaction()) .ifPresent(c -> { c.registerParticipant(participant); updateParticipant(c); }); } \"]},\"40\":{\"h\":\"4.Usage of Guava Cache\",\"t\":[\"package com.hmily.tcc.core.cache; import com.google.common.cache.CacheBuilder; import com.google.common.cache.CacheLoader; import com.google.common.cache.LoadingCache; import com.google.common.cache.Weigher; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.core.coordinator.CoordinatorService; import com.hmily.tcc.core.helper.SpringBeanUtils; import org.apache.commons.lang3.StringUtils; import java.util.Optional; import java.util.concurrent.ExecutionException; /** * use google guava cache. * @author xiaoyu */ public final class TccTransactionCacheManager { private static final int MAX_COUNT = 10000; private static final LoadingCache<String, TccTransaction> LOADING_CACHE = CacheBuilder.newBuilder().maximumWeight(MAX_COUNT) .weigher((Weigher<String, TccTransaction>) (string, tccTransaction) -> getSize()) .build(new CacheLoader<String, TccTransaction>() { @Override public TccTransaction load(final String key) { return cacheTccTransaction(key); } }); private static CoordinatorService coordinatorService = SpringBeanUtils.getInstance().getBean(CoordinatorService.class); private static final TccTransactionCacheManager TCC_TRANSACTION_CACHE_MANAGER = new TccTransactionCacheManager(); private TccTransactionCacheManager() { } /** * TccTransactionCacheManager. * * @return TccTransactionCacheManager */ public static TccTransactionCacheManager getInstance() { return TCC_TRANSACTION_CACHE_MANAGER; } private static int getSize() { return (int) LOADING_CACHE.size(); } private static TccTransaction cacheTccTransaction(final String key) { return Optional.ofNullable(coordinatorService.findByTransId(key)).orElse(new TccTransaction()); } /** * cache tccTransaction. * * @param tccTransaction {@linkplain TccTransaction} */ public void cacheTccTransaction(final TccTransaction tccTransaction) { LOADING_CACHE.put(tccTransaction.getTransId(), tccTransaction); } /** * acquire TccTransaction. * * @param key this guava key. * @return {@linkplain TccTransaction} */ public TccTransaction getTccTransaction(final String key) { try { return LOADING_CACHE.get(key); } catch (ExecutionException e) { return new TccTransaction(); } } /** * remove guava cache by key. * @param key guava cache key. */ public void removeByKey(final String key) { if (StringUtils.isNotEmpty(key)) { LOADING_CACHE.invalidate(key); } } } \",\"Among the participants, we used ThreadLocal, but why don't we use it among the participants? There are actually two reasons: First, because try and confirm will not be in the same thread, which will cause ThreadLocal to fail. When considering RPC clusters, it may be load balanced to different machines. Here is a detail:\",\" private static TccTransaction cacheTccTransaction(final String key) { return Optional.ofNullable(coordinatorService.findByTransId(key)).orElse(new TccTransaction()); } \",\"When the Guava Cache doesn't have a particular entry, it queries the log for that entry, ensuring support for clustered environments.\"]},\"41\":{\"h\":\"These four aspects collectively make Hmily an asynchronous, high-performance distributed TCC framework.\"},\"42\":{\"h\":\"How to Use Hmily?（ https://github.com/yu199195/hmily/tree/master/hmily-tcc-demo）\",\"t\":[\"Due to package naming issues, the framework package hasn't been uploaded to the Maven Central Repository. Therefore, users need to clone the code, compile it, and deploy it to their private repository.\"]},\"43\":{\"h\":\"1.For Dubbo Users\",\"t\":[\"Include in your API project:\",\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-annotation</artifactId> <version>{you version}</version> </dependency> \",\"Include in your service provider project:\",\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-dubbo</artifactId> <version>{you version}</version> </dependency> \",\"Configure the startup bean in your XML configuration.\",\" <!-- Aspect configuration, whether to enable AOP aspect--> <aop:aspectj-autoproxy expose-proxy=\\\"true\\\"/> <!--Scan the framework's packages--> <context:component-scan base-package=\\\"com.hmily.tcc.*\\\"/> <!--Startup class attribute configuration--> <bean id=\\\"hmilyTransactionBootstrap\\\" class=\\\"com.hmily.tcc.core.bootstrap.HmilyTransactionBootstrap\\\"> <property name=\\\"serializer\\\" value=\\\"kryo\\\"/> <property name=\\\"recoverDelayTime\\\" value=\\\"120\\\"/> <property name=\\\"retryMax\\\" value=\\\"3\\\"/> <property name=\\\"scheduledDelay\\\" value=\\\"120\\\"/> <property name=\\\"scheduledThreadMax\\\" value=\\\"4\\\"/> <property name=\\\"repositorySupport\\\" value=\\\"db\\\"/> <property name=\\\"tccDbConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccDbConfig\\\"> <property name=\\\"url\\\" value=\\\"jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8\\\"/> <property name=\\\"driverClassName\\\" value=\\\"com.mysql.jdbc.Driver\\\"/> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> </bean> \",\"Of course there are many configuration properties, here I only gave a demo. For details, you can refer to this class:\",\"package com.hmily.tcc.common.config; import com.hmily.tcc.common.enums.RepositorySupportEnum; import lombok.Data; /** * hmily config. * * @author xiaoyu */ @Data public class TccConfig { /** * Resource suffix this parameter please fill in about is the transaction store path. * If it's a table store this is a table suffix, it's stored the same way. * If this parameter is not filled in, the applicationName of the application is retrieved by default */ private String repositorySuffix; /** * log serializer. * {@linkplain com.hmily.tcc.common.enums.SerializeEnum} */ private String serializer = \\\"kryo\\\"; /** * scheduledPool Thread size. */ private int scheduledThreadMax = Runtime.getRuntime().availableProcessors() << 1; /** * scheduledPool scheduledDelay unit SECONDS. */ private int scheduledDelay = 60; /** * retry max. */ private int retryMax = 3; /** * recoverDelayTime Unit seconds * (note that this time represents how many seconds after the local transaction was created before execution). */ private int recoverDelayTime = 60; /** * Parameters when participants perform their own recovery. * 1.such as RPC calls time out * 2.such as the starter down machine */ private int loadFactor = 2; /** * repositorySupport. * {@linkplain RepositorySupportEnum} */ private String repositorySupport = \\\"db\\\"; /** * disruptor bufferSize. */ private int bufferSize = 4096 * 2 * 2; /** * this is disruptor consumerThreads. */ private int consumerThreads = Runtime.getRuntime().availableProcessors() << 1; /** * db config. */ private TccDbConfig tccDbConfig; /** * mongo config. */ private TccMongoConfig tccMongoConfig; /** * redis config. */ private TccRedisConfig tccRedisConfig; /** * zookeeper config. */ private TccZookeeperConfig tccZookeeperConfig; /** * file config. */ private TccFileConfig tccFileConfig; } \"]},\"44\":{\"h\":\"SpringCloud Users\",\"t\":[\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-springcloud</artifactId> <version>{you version}</version> </dependency> \"]},\"45\":{\"h\":\"Motan Users\",\"t\":[\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-motan</artifactId> <version>{you version}</version> </dependency> \"]},\"46\":{\"h\":\"hmily-spring-boot-start - this makes it even easier, you just need to import different jar packages according to your RPC framework.\",\"t\":[\"For Dubbo users, add:\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-dubbo</artifactId> <version>${your version}</version> </dependency> \",\"For Spring Cloud users, add:\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-springcloud</artifactId> <version>${your version}</version> </dependency> \",\"For Motan users, add:\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-motan</artifactId> <version>${your version}</version> </dependency> \",\"Next, configure the settings in your YML file:\",\"hmily: tcc: serializer: kryo recoverDelayTime: 128 retryMax: 3 scheduledDelay: 128 scheduledThreadMax: 10 repositorySupport: db tccDbConfig: driverClassName: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8 username: root password: 123456 #repositorySupport : redis #tccRedisConfig: #masterName: mymaster #sentinel : true #sentinelUrl : 192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379 #password : foobaredbbexONE123 # repositorySupport : zookeeper # host : 92.168.1.73:2181 # sessionTimeOut : 100000 # rootPath : /tcc # repositorySupport : mongodb # mongoDbUrl : 192.168.1.68:27017 # mongoDbName : happylife # mongoUserName : xiaoyu # mongoUserPwd : 123456 # repositorySupport : file # path : /account # prefix : account \",\"Using Hmily is simple. Just annotate your interface methods with @Tcc, and you're good to go.\",\"Please note that due to space constraints, some intricate details have been summarized. For those interested, you can star and fork the project on GitHub and join the WeChat group or QQ group for discussions.\",\"GitHub repository: https://github.com/yu199195/hmily\",\"Thank you once again! If you're interested, you're welcome to provide any valuable PR contributions.\\\"\"]},\"47\":{\"h\":\"Soul Gateway Learning Admin Source Code Analysis\"},\"48\":{\"h\":\"Page Operation Source Code Analysis\",\"t\":[\"Before analyzing the source code, let's take a look at the image below. The plugin list displayed on the page corresponds to requests made to the backend. Based on these backend requests, the corresponding controller class is identified.\",\"Insert Image Description Here\",\"Then, we find the corresponding method. In the image above, it can be seen that here, we access the mapping that is empty by default in the \\\"plugin\\\". We pass in pagination-related parameters and then query the corresponding plugin records in the database.\",\"Insert Image Description Here\",\"The corresponding table in the database is shown in the image below. The \\\"divide\\\" status is enabled. In the previous article, this plugin was used to test the gateway.\",\"Insert Image Description Here\",\"At the same time, a selector is also requested. The requested controller can be seen in the image below. In the previous demonstration, we directly perform CRUD operations on the conditions in the selector on the page. These changes can be reflected in the gateway in real time without the need to restart the gateway. Therefore, in addition to the \\\"query\\\" method, the \\\"create\\\", \\\"delete\\\", and \\\"update\\\" methods have been added. After saving to the database, a \\\"publishEvent\\\" method is triggered. This event allows users to configure rules directly in the Soul backend, achieving real-time effectiveness.\",\"Insert Image Description Here\",\"public int createOrUpdate(final SelectorDTO selectorDTO) { int selectorCount; SelectorDO selectorDO = SelectorDO.buildSelectorDO(selectorDTO); List<SelectorConditionDTO> selectorConditionDTOs = selectorDTO.getSelectorConditions(); if (StringUtils.isEmpty(selectorDTO.getId())) { selectorCount = selectorMapper.insertSelective(selectorDO); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); selectorConditionMapper.insertSelective(SelectorConditionDO.buildSelectorConditionDO(selectorConditionDTO)); }); } else { selectorCount = selectorMapper.updateSelective(selectorDO); //delete rule condition then add selectorConditionMapper.deleteByQuery(new SelectorConditionQuery(selectorDO.getId())); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); SelectorConditionDO selectorConditionDO = SelectorConditionDO.buildSelectorConditionDO(selectorConditionDTO); selectorConditionMapper.insertSelective(selectorConditionDO); }); } publishEvent(selectorDO, selectorConditionDTOs); return selectorCount; } \",\"Synchronization with soul-bootstrap (WebSocket) Source Code Analysis\",\"Previously, it was explained how data is saved to the database after performing operations on the admin page. Spring's built-in reactive programming is used to synchronize the data with the bootstrap project, achieving dynamic refreshing of gateway rules and plugins without requiring a restart. When soul-bootstrap starts, the following log entry is displayed:\",\"2021-01-21 00:33:39.620 INFO 14276 --- [0.0-9095-exec-5] o.d.s.a.l.websocket.WebsocketCollector : websocket on open successful.... \",\"The question is, which entity is it connecting to using WebSockets and how does the connection happen? By examining the code that generates this log entry, we can gain insights. Here's where the log entry is generated: First, let's analyze this code:\",\"Get the requested address from the websocketConfig configuration, which is of course configured in the location shown in the following figure.\",\"After obtaining this configuration address, a timed thread pool is created with a size of urls.length, and a daemon thread with a thread name prefix of \\\"websocket-connect\\\" is created. Why use daemon threads? Because this is just to ensure that the websocket connections of bootstrap and admin are constantly maintained, similar to the function of a heartbeat, so a daemon thread is the best choice.\",\"According to the created client, one by one, go to the address configured in the configuration file, and then print the previously found logs.\",\"Finally, start a thread to check if the client is closed. If it is closed, it will reconnect (the initial interval is 10 seconds, and then it will check every 30 seconds, so if you see multiple connection success logs printed in the console, it means that reconnection has occurred).\",\"Next, let's take a look at how the data operated in the admin background is synchronized to bootstrap. Previously, it was mentioned that after saving or updating data in the background, the publishEvent method is called. This is a method of spring's built-in reactive programming. Since it is reactive, it is event-based, and therefore requires a listener.\",\"Sure enough, the red box in the above picture is familiar, it is a listener related to websocket. If you still don't understand the connection between the listener and the previous publishEvent, then put breakpoints in the listener's code and debug it. For convenience, I clicked on this synchronization of all data here. This enters the DataChangedEventDispatcher class, calls the event-related methods, and in the lower left corner, you can see familiar methods. Yes, it is the aforementioned publishEvent.\",\"Then it will jump to the WebsocketDataChangedListener class. Here, pay attention to the send method in the debugging method.\",\"Use the send method to send the updated data to bootstrap. At this point, how admin synchronizes data to bootstrap is revealed.\",\"Soul-bootstrap data synchronization (zookeeper) source code analysis\",\"Without further ado, let's first look at the picture. Comment out the websocket configuration, open the zookeeper configuration, and start the local or remote zookeeper service. Then start soul-admin. First, enter the run method of the ZookeeperDataInit class. After this method is executed, the strange thing is that it jumps to the WebsocketDataChangedListener class. I don't understand this point. After the onPluginChanged method in this class is executed, it returns to the ZookeeperDataChangedListener class. If it is not deleted, the zkNode node data will be updated. Method for updating zk node. Moreover, the onSelectorChanged, onMetaDataChanged, and onRuleChanged methods will all first go to the corresponding methods in the WebsocketDataChangedListener class, and then enter the methods in the ZookeeperDataChangedListener class. If the plugin data is changed, it will go through the above steps again. The problem of entering two Listener classes for synchronous data has not been solved yet. Suddenly, I thought that there was a dependency on websocket in the pom file, because the websocket configuration in the application.yml file had been commented out (not enable=false), so I commented out this dependency first and then compiled the code. I found that the code did not pass the compilation. Another way is to change websocket to disabled. After the modification, I found that it would not jump to the websocket-related class again. 4. Analysis of soul-bootstrap data synchronization (http) source code\",\"As usual, modify the configuration in the yml file, and then set a breakpoint in the corresponding listener class. If http is used here, the websocket-related class will still be accessed, so it cannot be commented out directly.\",\"Let's take a look at the code inside: There is a constructor here, which instantiates a clients array blocking queue with a size of 1024. A timed task thread pool with a thread number of 1 and a name prefix of \\\"long-polling\\\" background daemon thread (as can be seen from the name, this is used for long polling). A related property configuration In the initialization method, a timed thread is started. After 5 minutes, the refreshLocalCache method for refreshing the local cache is executed every 5 minutes.\",\" private void refreshLocalCache() { this.updateAppAuthCache(); this.updatePluginCache(); this.updateRuleCache(); this.updateSelectorCache(); this.updateMetaDataCache(); } \",\"If the data is manually synchronized, the following related methods will be executed, and they will also be executed through the timed thread pool, but they will be executed immediately. Five minutes later, execute the corresponding refresh method, and print the log.\",\"2021-01-22 01:00:19.007 INFO 20800 --- [-long-polling-2] a.l.h.HttpLongPollingDataChangedListener : http sync strategy refresh config start. 2021-01-22 01:00:19.010 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[APP_AUTH], old: {group='APP_AUTH', md5='d751713988987e9331980363e24189ce', lastModifyTime=1611248118794}, updated: {group='APP_AUTH', md5='d751713988987e9331980363e24189ce', lastModifyTime=1611248419010} 2021-01-22 01:00:19.012 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[PLUGIN], old: {group='PLUGIN', md5='70b269257d47f0f6404ae7b7e976d8f1', lastModifyTime=1611248295740}, updated: {group='PLUGIN', md5='70b269257d47f0f6404ae7b7e976d8f1', lastModifyTime=1611248419012} 2021-01-22 01:00:19.069 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[RULE], old: {group='RULE', md5='5811b56257e31109621976d39fc226aa', lastModifyTime=1611248301607}, updated: {group='RULE', md5='5811b56257e31109621976d39fc226aa', lastModifyTime=1611248419069} 2021-01-22 01:00:19.075 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[SELECTOR], old: {group='SELECTOR', md5='70bad5ebb1cf6e3fc55278eef2df42f3', lastModifyTime=1611248299419}, updated: {group='SELECTOR', md5='70bad5ebb1cf6e3fc55278eef2df42f3', lastModifyTime=1611248419075} 2021-01-22 01:00:19.077 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[META_DATA], old: {group='META_DATA', md5='5f79d821e3b601330631a2d53294fb34', lastModifyTime=1611248302571}, updated: {group='META_DATA', md5='5f79d821e3b601330631a2d53294fb34', lastModifyTime=1611248419077} 2021-01-22 01:00:19.077 INFO 20800 --- [-long-polling-2] a.l.h.HttpLongPollingDataChangedListener : http sync strategy refresh config success. \",\"There are other methods for synchronizing data in soul, which will be analyzed later if there is energy. This is the end of the analysis of the soul-admin source code. If further analysis is conducted, another article will be written separately.\",\"There are still many features in soul-admin that have not been used yet, and there are many interesting things. This article will be continuously updated, and the source code inside will be analyzed in detail when it is used.\",\"On January 20, 2021, analyzed how soul-admin synchronizes data to soul-bootstrap using websocket.\",\"On January 21, 2021, analyzed how soul-admin synchronizes data to soul-bootstrap using zookeeper.\",\"On January 21, 2021, analyzed how soul-admin synchronizes data to soul-bootstrap using http.\"]},\"49\":{\"h\":\"Soul Learning(1) Environment Configuration\",\"t\":[\"soul is a High-Performance Java API Gateway\",\"GitHub：https://github.com/dromara/soul\",\"document：https://dromara.org/zh-cn/docs/soul/soul.html\"]},\"50\":{\"h\":\"1. Prepare source code\"},\"51\":{\"h\":\"1.1. Fork dromara/soul repository to my github cchenxi/soul\"},\"52\":{\"h\":\"1.2. Clone the repository\",\"t\":[\"git clone https://github.com/cchenxi/soul.git \"]},\"53\":{\"h\":\"1.3.Open the source code with idea\"},\"54\":{\"h\":\"1.4. Compile the soul source code\",\"t\":[\"You can compile the project as follows.\",\"mvn clean package install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true \",\"待补，文章内部有报错\"]},\"55\":{\"h\":\"2. Startup soul\"},\"56\":{\"h\":\"2.1. Startup soul-admin module\",\"t\":[\"soul-admin is the management system for soul.\",\"Choose to use MySQL to storage gateway data and modify the datasource config.\",\"待补，文章内部有报错\",\"Run org.dromara.soul.admin.SoulAdminBootstrap.\",\"When success, please visit the website http://localhost:9095/, then jump to the login page, and input the corresponding user name and password to log in.\",\"The user name is admin and the password is 123456.\",\"待补，文章内部有报错\",\"待补，文章内部有报错\"]},\"57\":{\"h\":\"2.2. Startup soul-bootstrap module\",\"t\":[\"soul-bootstrap is the core of soul.\",\"Check the configuration of soul-bootstrap.\",\"待补，文章内部有报错\",\"Please make sure the ip and the port has been configured for soul-admin.\",\"If the console output as follows, it means the startup is successful.\",\"2021-01-14 15:01:15.832 INFO 17943 --- [ main] b.s.s.d.w.WebsocketSyncDataConfiguration : you use websocket sync soul data....... 2021-01-14 15:01:15.924 INFO 17943 --- [ main] o.d.s.p.s.d.w.WebsocketSyncDataService : websocket connection is successful..... 2021-01-14 15:01:16.113 INFO 17943 --- [ main] o.s.b.a.e.web.EndpointLinksResolver : Exposing 2 endpoint(s) beneath base path '/actuator' log4j:WARN No appenders could be found for logger (com.alibaba.dubbo.common.logger.LoggerFactory). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info. 2021-01-14 15:01:17.150 INFO 17943 --- [ main] o.s.b.web.embedded.netty.NettyWebServer : Netty started on port(s): 9195 2021-01-14 15:01:17.154 INFO 17943 --- [ main] o.d.s.b.SoulBootstrapApplication : Started SoulBootstrapApplication in 5.508 seconds (JVM running for 6.762) \"]},\"58\":{\"h\":\"3. Test\",\"t\":[\"Add the soul-examples module to soul's pom.xml for test.\"]},\"59\":{\"h\":\"3.1. Startup an HTTP backend service\",\"t\":[\"Startup soul-examples-http\",\"You can see the dependency in soul-examples-http's pom.xml.\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-client-springmvc</artifactId> <version>${soul.version}</version> </dependency> \",\"Configure the application.yml\",\"soul: http: adminUrl: http://localhost:9095 port: 8188 contextPath: /http appName: http full: false \",\"If soul.http.full=false, you need to add the @SoulSpringMvcClient annotation in controller or controller method.\"]},\"60\":{\"h\":\"3.1.1. Test the service\",\"t\":[\"Visit http://localhost:8188/test/findByUserId?userId=1 and the result as follows.\",\"待补，文章内部有报错\"]},\"61\":{\"h\":\"3.1.2. Test forward HTTP request\",\"t\":[\"Visit http://localhost:9195/http/test/findByUserId?userId=1 and the result as follows.\",\"待补，文章内部有报错\",\"You can see the following information in the console of soul-bootstrap. It means the forward HTTP request is successful.\",\"2021-01-14 20:42:57.123 INFO 29812 --- [work-threads-11] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:42:57.125 INFO 29812 --- [work-threads-11] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:42:57.126 INFO 29812 --- [work-threads-11] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 \"]},\"62\":{\"h\":\"3.2. Startup two HTTP backend services to simulate load balance\",\"t\":[\"Choose Allow parallel run\",\"Change the port to 8189\",\"Startup soul-examples-http again\",\"待补，文章内部有报错\"]},\"63\":{\"h\":\"3.2.1. Test the service\",\"t\":[\"Visit http://localhost:8189/test/findByUserId?userId=1 and the result as follows.\",\"待补，文章内部有报错\"]},\"64\":{\"h\":\"3.2.2. Test load balance\",\"t\":[\"待补，文章内部有报错\",\"Configure two HTTP service in selector\",\"Visit http://localhost:9195/http/test/findByUserId?userId=1 more and more and result as follows.\",\"待补，文章内部有报错 You can see the following information in the console of soul-bootstrap. It means the load balance is successful.\",\"2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8189/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:38.755 INFO 29812 --- [work-threads-23] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:38.756 INFO 29812 --- [work-threads-23] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:38.756 INFO 29812 --- [work-threads-23] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8189/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:40.976 INFO 29812 --- [-work-threads-1] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:40.976 INFO 29812 --- [-work-threads-1] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:40.977 INFO 29812 --- [-work-threads-1] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 \"]},\"65\":{\"h\":\"3.2.3. Press test\",\"t\":[\"Use wrk to press test and compare the two ways as follows.\",\"Visit the backend service directly.\",\"Visit the service via soul.\",\"The performance drops slightly after using the gateway, probably because of the extra layer of forwarding.\",\"➜ soul git:(master) ✗ wrk -t8 -c40 -d30s http://localhost:8189/test/findByUserId\\\\?userId\\\\=1 Running 30s test @ http://localhost:8189/test/findByUserId?userId=1 8 threads and 40 connections Thread Stats Avg Stdev Max +/- Stdev Latency 6.06ms 28.81ms 442.25ms 98.22% Req/Sec 2.05k 493.86 2.84k 74.82% 486269 requests in 30.05s, 51.01MB read Requests/sec: 16179.68 Transfer/sec: 1.70MB ➜ soul git:(master) ✗ wrk -t8 -c40 -d30s http://localhost:9195/http/test/findByUserId\\\\?userId\\\\=1 Running 30s test @ http://localhost:9195/http/test/findByUserId?userId=1 8 threads and 40 connections Thread Stats Avg Stdev Max +/- Stdev Latency 14.37ms 18.11ms 255.66ms 93.06% Req/Sec 459.41 139.11 1.01k 74.23% 109533 requests in 30.09s, 11.49MB read Requests/sec: 3639.60 Transfer/sec: 390.98KB \"]},\"66\":{\"h\":\"3.2.4. Problem in the process\",\"t\":[\"When startup the port of 8189，but the output of console is still 8188.\",\"待补，文章内部有报错\",\"After modify the value of soul.http.port, the problem solved.\",\"待补，文章内部有报错\"]},\"67\":{\"h\":\"Soul Learning(2) Use Divide Plugin\"},\"68\":{\"h\":\"I. Initiation of the Project\",\"t\":[\"Start the soul-bootstrap (9195) and soul-admin (9095) modules. We can see from the bootstrap configuration file that the two modules perform data synchronization through the Web Socket protocol:\",\"picture\",\"You can also see from the bootstrap log:\",\"picture\",\"The so-called data synchronization refers to synchronizing the data configured in soul-admin to the JVM memory in the soul cluster, which is the key to the high performance of the gateway.\",\"After we start the two projects, we can test the divide plug-in through the background management system.\"]},\"69\":{\"h\":\"II. Introduction to divide Plug-in\",\"t\":[\"The divide plug-in is the core processing plug-in for the gateway to process HTTP protocol requests, and is also the only plug-in that is enabled by default:\",\"picture\",\"We can imagine what the gateway does and guess what the divide plug-in might do to handle HTTP requests?\",\"First of all, as a micro-service gateway, there must be a distributed micro-service cluster with multiple business lines behind it, and as a unified entrance to all services, the gateway must have the ability of traffic distribution/routing/load balancing, and the word divide, as its name implies, means distribution and distribution. So we can guess that the divide plug-in is to route and forward HTTP requests according to various rules, which is also the most basic capability of the gateway.\",\"When we open the list of plug-ins on the management interface, we can see that all plug-ins are composed of two parts: ** Selector ** (selector) and ** Selector rule **.\",\"The plug-in design idea is the core design idea of soul gateway, and the two concepts of selector and rule are also the soul of soul gateway. In theory, if we master it well, we can manage the traffic of any access gateway.\",\"A plug-in has multiple selectors, and one selector corresponds to multiple rules. The selector is equivalent to the first screening of traffic, and the rule is the final screening.\"]},\"70\":{\"h\":\"Selector\",\"t\":[\"picture\",\"* ** Name **: Give your selector an easily distinguishable name * ** Type **: custom flow is a custom flow. Full flow is full flow. Custom traffic means that the request will follow your matching methods and conditions below. Full flow does not go. * ** Match mode **: and or or means that the following multiple conditions are combined in the way of and or or. * ** Condition **： * URI: It means that you filter traffic according to the way of URI, and the way of match supports fuzzy matching (/**) * Header: refers to filtering traffic based on the fields in the request header. * Query: refers to filtering traffic based on the query criteria of the URI. * IP: Refers to filtering traffic based on the real IP you request. * Host: refers to filtering traffic based on the real host you request. * Post: Not recommended. * Condition matching: * Match: Fuzzy matching, recommended and URI condition collocation, support restful style matching. （/test/**） * =: The preceding and following values must be equal to match. * RegEx: Regular match, which means that the previous value matches the following regular expression. * Like: string fuzzy match. * ** Whether to open or not **: Open to take effect * ** Print the log **: When opened, the match log is printed when a match is made. * ** Order of execution **: When there are multiple selectors, the one with the smaller execution order is executed first. \"]},\"71\":{\"h\":\"Selector rule\",\"t\":[\"picture\",\"picture\",\"As you can see, the configuration of rules is similar to that of selectors, which can be understood as a more fine-grained custom configuration.\"]},\"72\":{\"h\":\"III. Use of divide plug-in\",\"t\":[\"Without further ado, let's just run the examples module provided by soul to demonstrate the divide plugin.\",\"picture\",\"Notice that we ended up running the soul-examples-http module. The configuration file can use the default or customize the contextPath and appName, as shown in the figure above.\",\"We need to note that the contextPath attribute is very important, which is equivalent to the namespace of all our HTTP requests, and the selector is aligned one by one. Generally speaking, we can configure a service to correspond to a contextPath, and multiple service instances configured with the same contextPath under a service will be automatically mapped to the same selector for load balancing.\",\"After we start the process with port 8188, we can find that the selector and rule corresponding to this instance are automatically configured in the divide plug-in list of the management console:\",\"picture\",\"You can see that the 8188 project address I started is automatically registered:\",\"picture\"]},\"73\":{\"h\":\"Test gateway routing\",\"t\":[\"Test the forwarding without gateway through postman first:\",\"http://localhost:8188/order/findById?id=1 \",\"picture\",\"Then test the forwarding to this interface through the gateway:\",\"http://localhost:9195/my-http/order/findById?id=1 \",\"picture\",\"Looking at the log, we found that it was indeed forwarded to the 8188 interface address through the gateway:\",\"picture\"]},\"74\":{\"h\":\"Test load balancing\",\"t\":[\"We change the port to 8189 and start the second process.\",\"picture\",\"Note that IDEA needs to remove the restriction of Single instance only:\",\"picture\",\"We enter the management console again and find that two configuration addresses appear under the my-http selector:\",\"picture\",\"At this point, we continue to test and find that the load balancing strategy does work:\",\"picture\",\"Today, I just demonstrated the most basic configuration of the divide plug-in, and there are various other rule configurations that can be tried later.\"]},\"75\":{\"h\":\"待补，文章内部有报错\",\"t\":[\"待补，文章内部有报错\"]},\"76\":{\"h\":\"Soul Gateway Learning (2) HTTP Client Access Source Code Parsing\"},\"77\":{\"h\":\"1. Registration portal\",\"t\":[\"When the HTTP user accesses the Soul Gateway, it will call the soul-admin interface to register the interface that needs to be managed by the Soul Gateway. Let's see what we have done today.\",\"First look at the interface information called as follows:\",\"// SpringMvcClientBeanPostProcessor.java /** * Instantiates a new Soul client bean post processor. * * @param soulSpringMvcConfig the soul spring mvc config */ public SpringMvcClientBeanPostProcessor(final SoulSpringMvcConfig soulSpringMvcConfig) { ValidateUtils.validate(soulSpringMvcConfig); this.soulSpringMvcConfig = soulSpringMvcConfig; url = soulSpringMvcConfig.getAdminUrl() + \\\"/soul-client/springmvc-register\\\"; executorService = new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>()); } \"]},\"78\":{\"h\":\"2. Spring mvc-register interface logic\",\"t\":[\"Search \\\"springmvc-register\\\" globally and find the SoulClientController under the soul-admin module. See here. Are we familiar with those who often write CRUD? Ha-ha\",\"// SoulClientController.java /** * Register spring mvc string. * * @param springMvcRegisterDTO the spring mvc register dto * @return the string */ @PostMapping(\\\"/springmvc-register\\\") public String registerSpringMvc(@RequestBody final SpringMvcRegisterDTO springMvcRegisterDTO) { return soulClientRegisterService.registerSpringMvc(springMvcRegisterDTO); } \",\"Service layer implementation class:\",\"// SoulClientRegisterServiceImpl.java @Override @Transactional public String registerSpringMvc(final SpringMvcRegisterDTO dto) { if (dto.isRegisterMetaData()) { MetaDataDO exist = metaDataMapper.findByPath(dto.getPath()); if (Objects.isNull(exist)) { saveSpringMvcMetaData(dto); } } String selectorId = handlerSpringMvcSelector(dto); handlerSpringMvcRule(selectorId, dto); return SoulResultMessage.SUCCESS; } \",\"Dto. IsRegister MetaData () is used to determine whether to register metadata information. I don't know when to use it, and I have doubts.//TODO, go down first.\"]},\"79\":{\"h\":\"2.1 Take a look at the method handlerSpringMvcSelector to handle the Selector.\",\"t\":[\"// SoulClientRegisterServiceImpl.java private String handlerSpringMvcSelector(final SpringMvcRegisterDTO dto) { String contextPath = dto.getContext(); // 根据 contextPath 到数据库里查询，是否已经注册过。 SelectorDO selectorDO = selectorService.findByName(contextPath); String selectorId; String uri = String.join(\\\":\\\", dto.getHost(), String.valueOf(dto.getPort())); if (Objects.isNull(selectorDO)) { // 还没有注册过 selectorId = registerSelector(contextPath, dto.getRpcType(), dto.getAppName(), uri); } else { // 已经注册过，业务系统重启了会到这里 selectorId = selectorDO.getId(); //update upstream String handle = selectorDO.getHandle(); String handleAdd; DivideUpstream addDivideUpstream = buildDivideUpstream(uri); SelectorData selectorData = selectorService.buildByName(contextPath); if (StringUtils.isBlank(handle)) { handleAdd = GsonUtils.getInstance().toJson(Collections.singletonList(addDivideUpstream)); } else { List<DivideUpstream> exist = GsonUtils.getInstance().fromList(handle, DivideUpstream.class); for (DivideUpstream upstream : exist) { if (upstream.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) { return selectorId; } } exist.add(addDivideUpstream); handleAdd = GsonUtils.getInstance().toJson(exist); } selectorDO.setHandle(handleAdd); selectorData.setHandle(handleAdd); // update db selectorMapper.updateSelective(selectorDO); // submit upstreamCheck upstreamCheckService.submit(contextPath, addDivideUpstream); // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, DataEventTypeEnum.UPDATE, Collections.singletonList(selectorData))); } return selectorId; } \"]},\"80\":{\"h\":\"2.1.1 First Access to Soul Gateway\",\"t\":[\"For the new access, the selectorDO cannot be found in the database. Enter the registerSelector method to carefully see which database tables have been inserted with data.\",\"// SoulClientRegisterServiceImpl.java private String registerSelector(final String contextPath, final String rpcType, final String appName, final String uri) { SelectorDTO selectorDTO = SelectorDTO.builder() .name(contextPath) .type(SelectorTypeEnum.CUSTOM_FLOW.getCode()) .matchMode(MatchModeEnum.AND.getCode()) .enabled(Boolean.TRUE) .loged(Boolean.TRUE) .continued(Boolean.TRUE) .sort(1) .build(); if (RpcTypeEnum.DUBBO.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.DUBBO.getName())); } else if (RpcTypeEnum.SPRING_CLOUD.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.SPRING_CLOUD.getName())); selectorDTO.setHandle(GsonUtils.getInstance().toJson(buildSpringCloudSelectorHandle(appName))); } else if (RpcTypeEnum.SOFA.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.SOFA.getName())); selectorDTO.setHandle(appName); } else if (RpcTypeEnum.TARS.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.TARS.getName())); selectorDTO.setHandle(appName); } else { //is divide DivideUpstream divideUpstream = buildDivideUpstream(uri); String handler = GsonUtils.getInstance().toJson(Collections.singletonList(divideUpstream)); selectorDTO.setHandle(handler); selectorDTO.setPluginId(getPluginId(PluginEnum.DIVIDE.getName())); upstreamCheckService.submit(selectorDTO.getName(), divideUpstream); } SelectorConditionDTO selectorConditionDTO = new SelectorConditionDTO(); selectorConditionDTO.setParamType(ParamTypeEnum.URI.getName()); selectorConditionDTO.setParamName(\\\"/\\\"); selectorConditionDTO.setOperator(OperatorEnum.MATCH.getAlias()); selectorConditionDTO.setParamValue(contextPath + \\\"/**\\\"); selectorDTO.setSelectorConditions(Collections.singletonList(selectorConditionDTO)); return selectorService.register(selectorDTO); } \",\"Are you excited to see so many if else? You can think about how to optimize so many if else and PR -.\",\"Having written so much, it is nothing more than encapsulating the Selector DTO object, and finally calling the selectorS ervice. Register (Selector DTO) into the library, and continuing to follow.\",\"// SelectorServiceImpl.java @Override public String register(final SelectorDTO selectorDTO) { SelectorDO selectorDO = SelectorDO.buildSelectorDO(selectorDTO); List<SelectorConditionDTO> selectorConditionDTOs = selectorDTO.getSelectorConditions(); if (StringUtils.isEmpty(selectorDTO.getId())) { selectorMapper.insertSelective(selectorDO); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); // 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？ selectorConditionMapper.insertSelective(SelectorConditionDO .buildSelectorConditionDO(selectorConditionDTO)); }); } publishEvent(selectorDO, selectorConditionDTOs); return selectorDO.getId(); } \",\"You can see that there are two warehousing methods, which insert data into the selector and selector _ condition tables respectively. Here we will not discuss the structure and business significance of the table in detail, and we will add it later.\",\"The publishEvent method, which involves the ApplicationEventPublisher interface, is an implementation of the observer pattern. After the event is published, the subsequent operations are completed through the listener. Here, press No Table first, and then write an article for analysis.\"]},\"81\":{\"h\":\"2.1.2 Soul Gateway has been accessed\",\"t\":[\"Just like Inception, we go back two layers of dreams and go back to the other branch of inserting data. It can be imagined that the system that has been connected to the Soul gateway restarts, or the new node starts to go.\",\"Post the previous code again:\",\"// SoulClientRegisterServiceImpl.java private String handlerSpringMvcSelector(final SpringMvcRegisterDTO dto) { String contextPath = dto.getContext(); // 根据 contextPath 到数据库里查询，是否已经注册过。 SelectorDO selectorDO = selectorService.findByName(contextPath); String selectorId; String uri = String.join(\\\":\\\", dto.getHost(), String.valueOf(dto.getPort())); if (Objects.isNull(selectorDO)) { // 还没有注册过 selectorId = registerSelector(contextPath, dto.getRpcType(), dto.getAppName(), uri); } else { // 已接入的业务系统重启，或新节点启动，会到这里 selectorId = selectorDO.getId(); //update upstream // handle 字段存储这个接口真实节点信息，可能存在多台机器需要负载均衡的场景 String handle = selectorDO.getHandle(); String handleAdd; DivideUpstream addDivideUpstream = buildDivideUpstream(uri); SelectorData selectorData = selectorService.buildByName(contextPath); if (StringUtils.isBlank(handle)) { // 这个接口虽然之前注册过，但第1个服务器节点接入 Soul 时会进来 handleAdd = GsonUtils.getInstance().toJson(Collections.singletonList(addDivideUpstream)); } else { // 如果已经至少有1个服务器节点已接入，会进到这里，判断是否是同一个节点（使用 upstreamUrl 区分），如果相同直接返回 List<DivideUpstream> exist = GsonUtils.getInstance().fromList(handle, DivideUpstream.class); for (DivideUpstream upstream : exist) { if (upstream.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) { return selectorId; } } // 如果不是同一个节点，把新节点加入到 handle 字段中 exist.add(addDivideUpstream); handleAdd = GsonUtils.getInstance().toJson(exist); } selectorDO.setHandle(handleAdd); selectorData.setHandle(handleAdd); // update db 更新数据库 selectorMapper.updateSelective(selectorDO); // submit upstreamCheck upstreamCheckService.submit(contextPath, addDivideUpstream); // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, DataEventTypeEnum.UPDATE, Collections.singletonList(selectorData))); } return selectorId; } \",\"Because the database table structure design has not been studied, according to some known guesses, one selector corresponds to one divide plug-in, which is identified by contextPath (here is \\\"/HTTP\\\"), and one contextPath can deploy multiple server nodes. The node information is stored in the handle field as JSON.\",\"// handle/handleAdd 数据格式 [ { \\\"upstreamHost\\\": \\\"localhost\\\", \\\"protocol\\\": \\\"http://\\\", \\\"upstreamUrl\\\": \\\"10.0.0.12:8188\\\", \\\"weight\\\": 50, \\\"status\\\": true, \\\"timestamp\\\": 0, \\\"warmup\\\": 0 } ] \",\"The next step is to update the database update Selective.\",\"upstreamCheckService.submit(contextPath, addDivideUpstream); The real server node information is cached in a Map (UPSTREAM _ MAP), and there are regular tasks to detect the activity. If the service node is found to be down, it will be eliminated to prevent the request from being sent to the node that has been down.\",\"Then there is the eventPublisher. PublishEvent (), which, like the previous publishEvent method, publishes the event and completes the subsequent operations through the listener. Here, the message of data SelectorData modification is sent through the web socket long connection established with the Soul gateway. The Soul gateway modifies the data according to the message. What data is modified and how to modify it will be analyzed later.\",\"At this point, the handlerSpringMvcSelector method is finally analyzed.\"]},\"82\":{\"h\":\"2.Let's take a look at the method handlerSpringMvcRule, which handles the Rule.\",\"t\":[\"// SoulClientRegisterServiceImpl.java private void handlerSpringMvcRule(final String selectorId, final SpringMvcRegisterDTO dto) { RuleDO ruleDO = ruleMapper.findByName(dto.getRuleName()); if (Objects.isNull(ruleDO)) { registerRule(selectorId, dto.getPath(), dto.getRpcType(), dto.getRuleName()); } } \",\"First, take the name of the rule and go to the rule table to get the data. If the table name has been registered, there is no operation.\",\"Look at the database data, which is the interface address under the business system.\",\"mysql> use soul; Database changed mysql> select * from rule where name = '/http/order/findById' \\\\G *************************** 1. row *************************** id: 1349650371868782592 selector_id: 1349650371302551552 match_mode: 0 name: /http/order/findById enabled: 1 loged: 1 sort: 1 handle: {\\\"loadBalance\\\":\\\"random\\\",\\\"retry\\\":0,\\\"timeout\\\":3000} date_created: 2021-01-14 17:31:39 date_updated: 2021-01-14 17:31:39 1 row in set (0.00 sec) \",\"If you don't get the data, register this rule.\",\"// SoulClientRegisterServiceImpl.java private void registerRule(final String selectorId, final String path, final String rpcType, final String ruleName) { RuleHandle ruleHandle = RuleHandleFactory.ruleHandle(RpcTypeEnum.acquireByName(rpcType), path); RuleDTO ruleDTO = RuleDTO.builder() .selectorId(selectorId) .name(ruleName) .matchMode(MatchModeEnum.AND.getCode()) .enabled(Boolean.TRUE) .loged(Boolean.TRUE) .sort(1) .handle(ruleHandle.toJson()) .build(); RuleConditionDTO ruleConditionDTO = RuleConditionDTO.builder() .paramType(ParamTypeEnum.URI.getName()) .paramName(\\\"/\\\") .paramValue(path) .build(); if (path.indexOf(\\\"*\\\") > 1) { ruleConditionDTO.setOperator(OperatorEnum.MATCH.getAlias()); } else { ruleConditionDTO.setOperator(OperatorEnum.EQ.getAlias()); } ruleDTO.setRuleConditions(Collections.singletonList(ruleConditionDTO)); ruleService.register(ruleDTO); } \",\"In the first line, the corresponding RuleHandle is obtained according to rpcType ( \\\"HTTP\\\"). Here, three types are built in by default. Here, HTTP corresponds to DivideRuleHandle.\",\"// RuleHandleFactory.java public final class RuleHandleFactory { /** * The RpcType to RuleHandle class map. */ private static final Map<RpcTypeEnum, Class<? extends RuleHandle>> RPC_TYPE_TO_RULE_HANDLE_CLASS = new ConcurrentHashMap<>(); /** * The default RuleHandle. */ private static final Class<? extends RuleHandle> DEFAULT_RULE_HANDLE = SpringCloudRuleHandle.class; static { RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.HTTP, DivideRuleHandle.class); RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.DUBBO, DubboRuleHandle.class); RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.SOFA, SofaRuleHandle.class); } /** * Get a RuleHandle object with given rpc type and path. * @param rpcType rpc type. * @param path path. * @return RuleHandle object. */ public static RuleHandle ruleHandle(final RpcTypeEnum rpcType, final String path) { if (Objects.isNull(rpcType)) { return null; } Class<? extends RuleHandle> clazz = RPC_TYPE_TO_RULE_HANDLE_CLASS.getOrDefault(rpcType, DEFAULT_RULE_HANDLE); try { return clazz.newInstance().createDefault(path); } catch (InstantiationException | IllegalAccessException e) { throw new SoulException( String.format(\\\"Init RuleHandle failed with rpc type: %s, rule class: %s, exception: %s\\\", rpcType, clazz.getSimpleName(), e.getMessage())); } } } \",\"Let's construct the RuleDTO object and register the rules.\",\"// RuleServiceImpl.java @Override public String register(final RuleDTO ruleDTO) { RuleDO ruleDO = RuleDO.buildRuleDO(ruleDTO); List<RuleConditionDTO> ruleConditions = ruleDTO.getRuleConditions(); if (StringUtils.isEmpty(ruleDTO.getId())) { ruleMapper.insertSelective(ruleDO); ruleConditions.forEach(ruleConditionDTO -> { ruleConditionDTO.setRuleId(ruleDO.getId()); // 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？ ruleConditionMapper.insertSelective(RuleConditionDO .buildRuleConditionDO(ruleConditionDTO)); }); } publishEvent(ruleDO, ruleConditions); return ruleDO.getId(); } \",\"Insert data into the rule and rule _ condition tables, respectively.\",\"The publishEvent () method sends RuleData data to the Soul gateway through the web socket long connection.\"]},\"83\":{\"h\":\"3.Sum up\",\"t\":[\"At this point, the logical analysis of calling the \\\"/soul-client/springmvc-register\\\" interface is finished, and we summarize as follows:\",\"Process the selector \",\"Add or modify selector and selector _ condition table data, and persist them to MySQL.\",\"Send data change information to Soul gateway through websocket.\",\"Process the rule \",\"Add or modify the data of rule and rule _ condition tables, and persist them to MySQL.\",\"Send data change information to Soul gateway through websocket.\",\"The table structure and field meaning need further study and research. After the websocket is sent to the Soul gateway, what the gateway has done also needs follow-up analysis.\",\"At this point, the registration logic of the HTTP user accessing the Soul gateway is analyzed.\",\"If you have the need to use the gateway in your work, or you have the pursuit of learning the gateway, welcome to analyze and learn with me. Soul Gateway, you deserve it.\"]},\"84\":{\"h\":\"Soul Gateway learning plugin chain and load balancing analysis\",\"t\":[\"Start with a class diagram:\",\"plugin diagram\",\"Two of the most basic plug-in classes are:\",\"SoulPlugin: Defines the interface of the plug-in responsibility. The key method execute() is called by the upper layer. skip() The method can cause some plug-ins to be skipped in some requests.\",\"AbstractPlugin: An abstract class that implements an interface execute(), defines a common execution process, and uses the design pattern of the template method to provide doExecute() an abstract method for the implementation class to write its own logic.\"]},\"85\":{\"h\":\"AbstractSoulPlugin\",\"t\":[\"Specific analysis of the execute() following AbstractSoulPlugin categories:\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String pluginName = named(); final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); // If pluginData.getEnabled() is false, it will skip to the next plugin, only a few plugins will enter this condition (DividePlugin, AlibabaDubboPlugin, etc.) if (pluginData != null && pluginData.getEnabled()) { // Get all selectors on the plugin final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); if (CollectionUtils.isEmpty(selectors)) { return CheckUtils.checkSelector(pluginName, exchange, chain); } // Check whether the request path in the context matches the selector and get the only matching selector data final SelectorData selectorData = matchSelector(exchange, selectors); if (Objects.isNull(selectorData)) { if (PluginEnum.WAF.getName().equals(pluginName)) { return doExecute(exchange, chain, null, null); } return CheckUtils.checkSelector(pluginName, exchange, chain); } if (selectorData.getLoged()) { log.info(\\\"{} selector success match , selector name :{}\\\", pluginName, selectorData.getName()); } // Gets the individual resource rules in the selector final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); if (CollectionUtils.isEmpty(rules)) { if (PluginEnum.WAF.getName().equals(pluginName)) { return doExecute(exchange, chain, null, null); } return CheckUtils.checkRule(pluginName, exchange, chain); } RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { rule = rules.get(rules.size() - 1); } else { // Match the path to obtain a unique rule rule = matchRule(exchange, rules); } if (Objects.isNull(rule)) { return CheckUtils.checkRule(pluginName, exchange, chain); } if (rule.getLoged()) { log.info(\\\"{} rule success match ,rule name :{}\\\", pluginName, rule.getName()); } // Execute methods of subclasses return doExecute(exchange, chain, selectorData, rule); } // Execute the next plug-in on the plug-in chain return chain.execute(exchange); } \",\"Through code analysis, some conclusions can be drawn:\",\"Execute () has two logics: one is the matching of the request path with the selector and the rule, which finally confirms a unique rule and calls the subclass doExecute (); The second is to execute the next plug-in in the plug-in chain.\",\"The execute () actually abstracts a set of rule matching logic, which is used by all the \\\"forwarding type\\\" plug-ins. Currently, I know the forwarding type plug-ins are DividePlugin (HTTP request) and AlibabaDubboPlugin (dubbo request). Other types of plug-ins that do not override the execute () method will go directly to the next plug-in.\"]},\"86\":{\"h\":\"SoulPluginChain\",\"t\":[\"Another point here is the formation and chain call of the plug-in chain. Let's analyze SoulPluginChain this part:\",\"plugin02\",\"The SoulPluginChain interface also defines execute() methods for the caller to use, and its only subclass, DefaultSoulPluginChain, implements chained calls:\",\"public Mono<Void> execute(final ServerWebExchange exchange) { return Mono.defer(() -> { // plugins contains all plugins loaded by the gateway if (this.index < plugins.size()) { // Each time the execute() method is called, the index index increases and is called to the next plug-in SoulPlugin plugin = plugins.get(this.index++); // Determine whether the current plug-in needs to be skipped based on the context Boolean skip = plugin.skip(exchange); if (skip) { return this.execute(exchange); } else { return plugin.execute(exchange, this); } } else { return Mono.empty(); } }); } \",\"It's curious plugins to see where this list of plug-ins comes from. Here's an explanation. DefaultSoulPluginChain is a static inner class of SoulWebHandler. Is plugins an attribute in the Soul Web Handle:\",\"public final class SoulWebHandler implements WebHandler { private List<SoulPlugin> plugins; public SoulWebHandler(final List<SoulPlugin> plugins) { this.plugins = plugins; // ... } @Override public Mono<Void> handle(@NonNull final ServerWebExchange exchange) { // ... return new DefaultSoulPluginChain(plugins).execute(exchange).subscribeOn(scheduler) .doOnSuccess(t -> startTimer.ifPresent(time -> MetricsTrackerFacade.getInstance().histogramObserveDuration(time))); } private static class DefaultSoulPluginChain implements SoulPluginChain { } } \",\"So where did the plugins SoulWeb Handler come from? You can continue to trace back to where its constructor was called:\",\"@Configuration public class SoulConfiguration { @Bean(\\\"webHandler\\\") public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { List<SoulPlugin> pluginList = plugins.getIfAvailable(Collections::emptyList); final List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); soulPlugins.forEach(soulPlugin -> log.info(\\\"loader plugin:[{}] [{}]\\\", soulPlugin.named(), soulPlugin.getClass().getName())); return new SoulWebHandler(soulPlugins); } } \",\"It can be seen that the writing plugins is started by means of Spring Bean, that is, when the container starts, all plug-ins are loaded. Here, the entry parameter is used ObjectProvider to lazily load all beans of the SoulPlugin type (if none of them are used, no error will be reported) and inject them into the SoulWebHandler.\",\"** There's a little hole to watch out for! **\",\"All plug-ins, including DividePlugin, AlibabaDubboPlugin, etc., are configured by the XX PluginConfiguration class in their respective soul-spring-boot-starter-plugin-xx projects to register their own plug-ins as beans, similar to the following example:\",\"@Configuration public class DividePluginConfiguration { @Bean public SoulPlugin dividePlugin() { return new DividePlugin(); } } \",\"Therefore, in the gateway project soul-bootstrap, if you need to use a plug-in, you not only need to open the plug-in in the management background, but also need to confirm whether there is a dependency of the soul-spring-boot-starter-plugin-xx relevant plug-in in the following soul-bootstrappom.xml, for example:\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-divide</artifactId> <version>${project.version}</version> </dependency> \",\"If you have a comment here or it doesn't exist, don't expect to see it on the plugin chain..\"]},\"87\":{\"h\":\"Plug-in project structure\",\"t\":[\"Finally, briefly describe the functions of each plug-in project:\",\"The first is the spring bean startup class project just mentioned, listing a general idea:\",\"soul-spring-boot-starter-plugin-alibaba-dubbo soul-spring-boot-starter-plugin-apache-dubbo soul-spring-boot-starter-plugin-context-path soul-spring-boot-starter-plugin-divide soul-spring-boot-starter-plugin-global soul-spring-boot-starter-plugin-httpclient soul-spring-boot-starter-plugin-hystrix soul-spring-boot-starter-plugin-monitor soul-spring-boot-starter-plugin-ratelimiter soul-spring-boot-starter-plugin-resilience4j soul-spring-boot-starter-plugin-rewrite soul-spring-boot-starter-plugin-sentinel soul-spring-boot-starter-plugin-sign soul-spring-boot-starter-plugin-sofa soul-spring-boot-starter-plugin-springcloud soul-spring-boot-starter-plugin-tars soul-spring-boot-starter-plugin-waf \",\"Their main functions have just been mentioned, registering their own SoulPlugin subclasses as spring beans, and registering spring beans to the PluginData Handler interface called in AbstractSoulPlugin. Provide its own implementation subclass, such as DividePluginDataHandler.\",\"Specific plug-in class project:\",\"soul-plugin-alibaba-dubbo soul-plugin-apache-dubbo soul-plugin-api soul-plugin-base soul-plugin-context-path soul-plugin-divide soul-plugin-global soul-plugin-httpclient soul-plugin-hystrix soul-plugin-monitor soul-plugin-ratelimiter soul-plugin-resilience4j soul-plugin-rewrite soul-plugin-sentinel soul-plugin-sign soul-plugin-sofa soul-plugin-springcloud soul-plugin-tars soul-plugin-waf \",\"Take the soul-plugin-divide DividePlugin and DividePluginDataHandler mentioned just now as examples. And the project also has node information cache manager Upstream Cache Manager, load balancing strategy class LoadBalance and so on.\",\"The function of DividePlugin is to match Http requests. Since there are Http requests, there are naturally forwarding downstream and returning responses. So here we will analyze three plug-ins: DividePlugin, WebClientPlugin, WebClientResponsePlugin.\",\"Let's start with that implementation in doExecute() DividePlugin, where I just keep the core point:\",\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // Get the cluster of service nodes in the cache by selector ID final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); // Call the load balancing method and pass in the policy type to get a unique node DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); // Get the real url of the node and put it in the exchange context String domain = buildDomain(divideUpstream); String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); // Continue to call the next plug-in return chain.execute(exchange); } \",\"As you can see, after executing the DividePlugin doExecute() method, we already have the real path of the downstream service node in the ServerWeb Exchange context, and we just need to request it. But don't worry, the load balancing strategy here is also the key point, and then analyze.\"]},\"88\":{\"h\":\"Load balancing\",\"t\":[\"How to execute the load balancing of Soul Gateway involves not only various strategies (hasn, random, polling), but also the concept of \\\"weight score\\\". The specific configuration of the management background is as follows:\",\"待补，文章内部有报错\",\"待补，文章内部有报错\",\"待补，文章内部有报错\",\"After showing the background configuration, let's take a look at the code implementation of each strategy.\"]},\"89\":{\"h\":\"Hash\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { final ConcurrentSkipListMap<Long, DivideUpstream> treeMap = new ConcurrentSkipListMap<>(); for (DivideUpstream address : upstreamList) { // Each node *VIRTUAL_NODE_NUM(default 5) to make the hash more uniform for (int i = 0; i < VIRTUAL_NODE_NUM; i++) { long addressHash = hash(\\\"SOUL-\\\" + address.getUpstreamUrl() + \\\"-HASH-\\\" + i); treeMap.put(addressHash, address); } } // Obtain a hash value from the current ip address and compare treemap(ordered) to find a location greater than the hash value long hash = hash(String.valueOf(ip)); SortedMap<Long, DivideUpstream> lastRing = treeMap.tailMap(hash); // As long as the service node does not increase or decrease, the node obtained by the same ip address can remain unchanged if (!lastRing.isEmpty()) { return lastRing.get(lastRing.firstKey()); } return treeMap.firstEntry().getValue(); } \",\"The load balancing of the hash algorithm does not use the concept of \\\"weight score\\\", that is to say, for each unknown IP, the probability of each node being accessed is the same. (Of course, multiple calls to the same IP will only access the same node.)\"]},\"90\":{\"h\":\"RandomLoadBalance\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { // Total number int length = upstreamList.size(); // Total weight int totalWeight = 0; // Whether the weights are the same boolean sameWeight = true; for (int i = 0; i < length; i++) { int weight = upstreamList.get(i).getWeight(); // Cumulative total weight totalWeight += weight; if (sameWeight && i > 0 && weight != upstreamList.get(i - 1).getWeight()) { // Calculate whether the ownership weight is the same sameWeight = false; } } if (totalWeight > 0 && !sameWeight) { // If the weights are not the same and the weights are greater than 0, random by the total weights int offset = RANDOM.nextInt(totalWeight); // and determine which segment the random value falls on for (DivideUpstream divideUpstream : upstreamList) { offset -= divideUpstream.getWeight(); if (offset < 0) { return divideUpstream; } } } // Equally random if the weight is the same or if the weight is 0 return upstreamList.get(RANDOM.nextInt(length)); } \",\"When the rule is used random, all the node weights are accumulated and the number is obtained randomly, depending on the weight fragment of the node; If the score is 0 or the same, it is straightforward to randomize the cluster length.\"]},\"91\":{\"h\":\"RoundRobinLoadBalance\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { String key = upstreamList.get(0).getUpstreamUrl(); ConcurrentMap<String, WeightedRoundRobin> map = methodWeightMap.get(key); if (map == null) { methodWeightMap.putIfAbsent(key, new ConcurrentHashMap<>(16)); map = methodWeightMap.get(key); } int totalWeight = 0; long maxCurrent = Long.MIN_VALUE; long now = System.currentTimeMillis(); DivideUpstream selectedInvoker = null; WeightedRoundRobin selectedWRR = null; for (DivideUpstream upstream : upstreamList) { String rKey = upstream.getUpstreamUrl(); // Retrieves the node information in the cache WeightedRoundRobin weightedRoundRobin = map.get(rKey); int weight = upstream.getWeight(); if (weightedRoundRobin == null) { weightedRoundRobin = new WeightedRoundRobin(); weightedRoundRobin.setWeight(weight); map.putIfAbsent(rKey, weightedRoundRobin); } if (weight != weightedRoundRobin.getWeight()) { weightedRoundRobin.setWeight(weight); } // Here is the first key: the score in the cache increases the weight score of the current node long cur = weightedRoundRobin.increaseCurrent(); weightedRoundRobin.setLastUpdate(now); // Select the node with a high cache score if (cur > maxCurrent) { maxCurrent = cur; selectedInvoker = upstream; selectedWRR = weightedRoundRobin; } totalWeight += weight; } if (!updateLock.get() && upstreamList.size() != map.size() && updateLock.compareAndSet(false, true)) { try { ConcurrentMap<String, WeightedRoundRobin> newMap = new ConcurrentHashMap<>(map); newMap.entrySet().removeIf(item -> now - item.getValue().getLastUpdate() > recyclePeriod); methodWeightMap.put(key, newMap); } finally { updateLock.set(false); } } if (selectedInvoker != null) { // Here is the second key: the score in the cache, reducing the total node weight score selectedWRR.sel(totalWeight); return selectedInvoker; } return upstreamList.get(0); } \",\"This algorithm is a bit complicated. Let me explain the core aspect of calculating weights:\",\"Two nodes with a score of 2 and 100 respectively enter, and each of them is kept in the cache, with the score starting from 0.\",\"After the for loop, the scores of the two nodes in the cache will increase based on themselves. Assuming that the following steps are not performed, the cache will be 2 and 100 for the first time, 4 and 200 for the second time, and so on.\",\"The third key step is to select the node cache with the highest score and take \\\"punishment\\\" measures to reduce the cumulative score of all nodes, that is, 102.\",\"According to the steps of this algorithm, nodes that have not been selected, as \\\"growth rewards\\\", will continue to increase on their own basis. The selected node, as a \\\"penalty,\\\" reduces the sum of the weights of the other nodes.\",\"It can be predicted that a node with a small weight will not be selected until a long time later. However, at that moment, it will be punished with great strength, which will lead to a long accumulation of strength once it returns to the pre-liberation period. For nodes with large weight scores, the penalty for being selected each time is very small. Even if the score is too low to be selected after many times, his reward score (itself) is particularly high, and one increase far surpasses other nodes.\"]},\"92\":{\"h\":\"WebClientPlugin\",\"t\":[\"After the DividePlugin plug-in is called, the downstream service node path is determined, and then the Web ClientPlugin plug-in comes into play. It implements the SoulPlugin interface directly and implements the execute() methods (keeping only the core code):\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String urlPath = exchange.getAttribute(Constants.HTTP_URL); // Request type: Get request, orPost request, etc HttpMethod method = HttpMethod.valueOf(exchange.getRequest().getMethodValue()); // Build a shell of the request object and inject the request type and URL WebClient.RequestBodySpec requestBodySpec = webClient.method(method).uri(urlPath); return handleRequestBody(requestBodySpec, exchange, timeout, chain); } private Mono<Void> handleRequestBody(final WebClient.RequestBodySpec requestBodySpec, final ServerWebExchange exchange, final long timeout, final SoulPluginChain chain) { return requestBodySpec.headers(httpHeaders -> { // Add the request header in context... Later is also to add some attributes, do not go into details httpHeaders.addAll(exchange.getRequest().getHeaders()); httpHeaders.remove(HttpHeaders.HOST); }) .contentType(buildMediaType(exchange)) .body(BodyInserters.fromDataBuffers(exchange.getRequest().getBody())) // Start asynchronous http calls to downstream services .exchange() .doOnError(e -> log.error(e.getMessage())) .timeout(Duration.ofMillis(timeout)) // Callback receives the return value .flatMap(e -> doNext(e, exchange, chain)); } // Here is an asynchronous callback method that works in another thread private Mono<Void> doNext(final ClientResponse res, final ServerWebExchange exchange, final SoulPluginChain chain) { // ... // Continue to complete the remaining plug-in chain calls return chain.execute(exchange); } \",\"Take a quick look at handleRequestBody() the implementation of this method in exchange(), here are the key Http calls:\",\"class DefaultWebClient implements WebClient { @Override public Mono<ClientResponse> exchange() { ClientRequest request = (this.inserter != null ? initRequestBuilder().body(this.inserter).build() : initRequestBuilder().build()); // Here is the critical call, which will go to spring-web-reactive return Mono.defer(() -> exchangeFunction.exchange(request) .checkpoint(\\\"Request to \\\" + this.httpMethod.name() + \\\" \\\" + this.uri + \\\" [DefaultWebClient]\\\") .switchIfEmpty(NO_HTTP_CLIENT_RESPONSE_ERROR)); } } \",\"To sum up, the processing of Web ClientPlugin will call the downstream service asynchronously, wait for the response, and then execute the subsequent plug-in chain call in another thread.\"]},\"93\":{\"h\":\"WebClientResponseClient\",\"t\":[\"Finally, the plug-in chain goes to the Web ClientResponseClient link to encapsulate the response information:\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { // Gets the response information stored in the context ServerHttpResponse response = exchange.getResponse(); ClientResponse clientResponse = exchange.getAttribute(Constants.CLIENT_RESPONSE_ATTR); if (Objects.isNull(clientResponse) || response.getStatusCode() == HttpStatus.BAD_GATEWAY || response.getStatusCode() == HttpStatus.INTERNAL_SERVER_ERROR) { Object error = SoulResultWarp.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } else if (response.getStatusCode() == HttpStatus.GATEWAY_TIMEOUT) { Object error = SoulResultWarp.error(SoulResultEnum.SERVICE_TIMEOUT.getCode(), SoulResultEnum.SERVICE_TIMEOUT.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // Various assembly response.setStatusCode(clientResponse.statusCode()); response.getCookies().putAll(clientResponse.cookies()); response.getHeaders().putAll(clientResponse.headers().asHttpHeaders()); return response.writeWith(clientResponse.body(BodyExtractors.toDataBuffers())); })); } \"]},\"94\":{\"h\":\"Soul Gateway Learns Http Long Polling Analysis 01\"},\"95\":{\"h\":\"Data synchronization between background and gateway (Http long polling)\"},\"96\":{\"h\":\"Configuration\",\"t\":[\"** Background information mode switching **\",\"In the previous analysis of Zookeeper synchronization ( Soul Gateway Source Code Analysis-Issue 11 ), we switched through the DataSyncConfiguration configuration class. This time, we have experience and paste the configuration directly.\",\"soul: sync: websocket: enabled: false http: enabled: true \",\"** Gateway information mode switching **\",\"After the background mode switching is completed, the next step is the gateway. Continue to find the parameter settings on the key configuration class. The gateway configuration is also directly posted here.\",\"soul: sync: # websocket: # urls: ws://localhost:9095/websocket http: url: http://localhost:9095 \"]},\"97\":{\"h\":\"Data ChangedListener system\",\"t\":[\"Background data initialization Data SyncConfiguration configures key beans. Take a look at the Http long polling Bean here.\",\"@Configuration public class DataSyncConfiguration { @Configuration @ConditionalOnProperty(name = \\\"soul.sync.http.enabled\\\", havingValue = \\\"true\\\") @EnableConfigurationProperties(HttpSyncProperties.class) static class HttpLongPollingListener { @Bean @ConditionalOnMissingBean(HttpLongPollingDataChangedListener.class) public HttpLongPollingDataChangedListener httpLongPollingDataChangedListener(final HttpSyncProperties httpSyncProperties) { return new HttpLongPollingDataChangedListener(httpSyncProperties); } } } \",\"Http LongPollingData ChangedListener inherit from AbstractData ChangedListener, which are implemented from the interface DataChangedListener.\",\"We should be very familiar with the DataChangedListener interface, which provides many methods of different data type changes for the DataChangedEventDispatcher to call, and this class is an \\\"old friend\\\" as a transit station. Diligent ** Handle event classification and distribution for data synchronization **\",\"public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { // Hold the DataChangedListener collection private List<DataChangedListener> listeners; // Method to notify the DataChangedListener of different event types when an event changes public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } } \",\"public interface DataChangedListener { default void onAppAuthChanged(List<AppAuthData> changed, DataEventTypeEnum eventType) {} default void onPluginChanged(List<PluginData> changed, DataEventTypeEnum eventType) {} default void onSelectorChanged(List<SelectorData> changed, DataEventTypeEnum eventType) {} default void onMetaDataChanged(List<MetaData> changed, DataEventTypeEnum eventType) {} default void onRuleChanged(List<RuleData> changed, DataEventTypeEnum eventType) {} } \",\"After understanding the functions of these two, what does AbstractData ChangedListener do? Take an example of onPluginChanged ():\",\"public abstract class AbstractDataChangedListener implements DataChangedListener, InitializingBean { protected static final ConcurrentMap<String, ConfigDataCache> CACHE = new ConcurrentHashMap<>(); @Override public void onPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { if (CollectionUtils.isEmpty(changed)) { return; } this.updatePluginCache(); this.afterPluginChanged(changed, eventType); } // Modify cache (overwritable) protected void updatePluginCache() { this.updateCache(ConfigGroupEnum.PLUGIN, pluginService.listAll()); } protected <T> void updateCache(final ConfigGroupEnum group, final List<T> data) { String json = GsonUtils.getInstance().toJson(data); ConfigDataCache newVal = new ConfigDataCache(group.name(), json, Md5Utils.md5(json), System.currentTimeMillis()); ConfigDataCache oldVal = CACHE.put(newVal.getGroup(), newVal); log.info(\\\"update config cache[{}], old: {}, updated: {}\\\", group, oldVal, newVal); } // Hook, customize what to do after ending data changes (rewritable) protected void afterPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { } } \",\"For a plug-in data change method (onPluginChanged), AbstractDataChangedListener actually defines a template, so that the subclass can work according to the specified steps, and the details of each step can be implemented by the subclass itself.\",\"Second, if you do not override its cache updates, it is maintained by the class in CACHE.\"]},\"98\":{\"h\":\"What are the other synchronization strategies doing at this time?\",\"t\":[\"After the DataChange dEventDispatcher calls onPluginChanged (), how does the long polling module work? ** Think about what other synchronization methods are doing at this point. **\",\"The web socket pattern, for example, rewrites onPluginChanged () itself to send the websocket information to the holding session, which has a gateway.\",\"public class WebsocketDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> pluginDataList, final DataEventTypeEnum eventType) { WebsocketData<PluginData> websocketData = new WebsocketData<>(ConfigGroupEnum.PLUGIN.name(), eventType.name(), pluginDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } } \",\"Looking at the zookeeper pattern, it also rewrites onPluginChanged () to modify the node information on the zookeeper so that the gateway side will hear their node changes.\",\"public class ZookeeperDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { for (PluginData data : changed) { String pluginPath = ZkPathConstants.buildPluginPath(data.getName()); // delete if (eventType == DataEventTypeEnum.DELETE) { deleteZkPathRecursive(pluginPath); String selectorParentPath = ZkPathConstants.buildSelectorParentPath(data.getName()); deleteZkPathRecursive(selectorParentPath); String ruleParentPath = ZkPathConstants.buildRuleParentPath(data.getName()); deleteZkPathRecursive(ruleParentPath); continue; } //create or update insertZkNode(pluginPath, data); } } } \",\"As you can see, at this juncture, other synchronization strategies are already busy notifying gateways, so Http long polling must also do this.\",\"These two strategies are also different in the way of notification, websocket is a good person to do to the end, directly find the session session to send the information in person. After the zookeeper changes the node information, the gateway monitors the change and then synchronizes.\",\"So how does our Http long polling now notify the gateway? Keep looking..\"]},\"99\":{\"h\":\"Thinking on the Implementation of Long Polling\",\"t\":[\"First think about how I can design long polling by myself?\",\"Normal long polling implementation should be actively requested by the gateway. The background receives the request and holds it. If there is an update, it will return directly. If not, it will be blocked for a certain period of time. And the background is to do a good job of updating the data, hold the time to check whether the data has changed.\",\"There are three points involved here:\",\"How do you know if the data has changed? Do you set a last update time and compare it with the request time of the gateway to see if there is any data modification?\",\"After holding, how does the background know whether the data is updated, repeated traversal or blocked waiting?\",\"Where is the data used for updating? In the case of caching, consider how the background cache interacts with the database.\"]},\"100\":{\"h\":\"Http LongPollingData ChangedListener Long Polling Implementation\",\"t\":[\"Around our thinking, look at how Http LongPollingData ChangedListener is achieved. Let's take a look at the implementation of the parent onPluginChanged ().\",\"public class HttpLongPollingDataChangedListener extends AbstractDataChangedListener { private final ScheduledExecutorService scheduler; @Override protected void afterPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { scheduler.execute(new DataChangeTask(ConfigGroupEnum.PLUGIN)); } } \",\"Http long polling does not directly override onPluginChanged (), but directly uses its parent class, which means that its CACHE is used. In the end, our information acquisition must also be analyzed. Put it aside for the time being.\",\"The following logic will call the afterPluginChanged () method of our implementation, where a timed thread pool is used to run a Runnable task DataChangeTask.\",\"class DataChangeTask implements Runnable { @Override public void run() { // Iterate through clients for (Iterator<LongPollingClient> iter = clients.iterator(); iter.hasNext();) { LongPollingClient client = iter.next(); iter.remove(); // Description Complete response The response is complete client.sendResponse(Collections.singletonList(groupKey)); log.info(\\\"send response with the changed group,ip={}, group={}, changeTime={}\\\", client.ip, groupKey, changeTime); } } } \",\"After the data is changed, the thread pool is used to call this method, take all clients the elements while traversing, and call the method sendResponse (), like marking that the response has been completed.\",\"Let me guess what it does. clients It's likely that the request is held by the gateway, and send response () is likely to actually add response information to the request context. Another key action is to end the hold, allowing the gateway to receive the response and remove the request from the collection.\",\"We now trace the following client generation, which is a BlockingQueue blocking queue in the HttpLongPollingData ChangedListener, which is periodically detected in the LongPolling Client.\",\"class LongPollingClient implements Runnable { @Override public void run() { this.asyncTimeoutFuture = scheduler.schedule(() -> { clients.remove(LongPollingClient.this); List<ConfigGroupEnum> changedGroups = compareChangedGroup((HttpServletRequest) asyncContext.getRequest()); sendResponse(changedGroups); }, timeoutTime, TimeUnit.MILLISECONDS); // Here is the key, indicating the source clients.add(this); } } \",\"Instead of analyzing the detection code block of remove (), you can see the add () in the last sentence, which is clients the source of the data.\",\"Find where LongPollingClient is called. HttpLongPollingData ChangedListener # doLongPolling\",\"public void doLongPolling(final HttpServletRequest request, final HttpServletResponse response) { // ... // listen for configuration changed. // Enable synchronous blocking requests final AsyncContext asyncContext = request.startAsync(); // AsyncContext.settimeout() does not timeout properly, so you have to control it yourself asyncContext.setTimeout(0L); // block client's thread. // The thread pool calls LongPollingClient#run scheduler.execute(new LongPollingClient(asyncContext, clientIp, HttpConstants.SERVER_MAX_HOLD_TIMEOUT)); } \",\"The last sentence here will be called and added client, and there is a key line of code that blocks the request:\",\"final AsyncContext asyncContext = request.startAsync(); \",\"In the LongPolling Client # sendResponse, it has just been analyzed that, in addition to wrapping the injected response information, the held request will also be released.\",\"class LongPollingClient implements Runnable { void sendResponse(final List<ConfigGroupEnum> changedGroups) { // cancel scheduler if (null != asyncTimeoutFuture) { asyncTimeoutFuture.cancel(false); } generateResponse((HttpServletResponse) asyncContext.getResponse(), changedGroups); // The synchronization is complete asyncContext.complete(); } } \",\"After this analysis, we go back to doLongPolling (), where the thread pool calls another key point.\",\"scheduler.execute(new LongPollingClient(asyncContext, clientIp, HttpConstants.SERVER_MAX_HOLD_TIMEOUT)); \",\"The timeout time of 60s is passed to the LongPolling Client here. What is it used for? Remember that piece of code we skipped over at LongPolling Client # run?\",\"class LongPollingClient implements Runnable { @Override public void run() { // Start time. The delay time is based on timeoutTime this.asyncTimeoutFuture = scheduler.schedule(() -> { // Remove the managed connection clients.remove(LongPollingClient.this); List<ConfigGroupEnum> changedGroups = compareChangedGroup((HttpServletRequest) asyncContext.getRequest()); // This method releases the blocked request sendResponse(changedGroups); }, timeoutTime, TimeUnit.MILLISECONDS); clients.add(this); } } \",\"Here we have understood the implementation of the long polling process in the background. Finally, we will see how doLongPolling () is called and find the calling class ConfigController.\",\"@ConditionalOnBean(HttpLongPollingDataChangedListener.class) @RestController @RequestMapping(\\\"/configs\\\") @Slf4j public class ConfigController { @PostMapping(value = \\\"/listener\\\") public void listener(final HttpServletRequest request, final HttpServletResponse response) { longPollingListener.doLongPolling(request, response); } } \",\"It is also basically clear that the background exposes the HTTP path through this Controller for the gateway to call and listen to data changes.\"]},\"101\":{\"h\":\"Sum up\",\"t\":[\"The background exposes the API to the gateway through the Controller layer. When the gateway requests the background, the background does not immediately return a response (whether the data has changed), but holds the request for a maximum of 60 seconds. These held requests are added to the blocking queue as an in-memory cache.\",\"If there is any data change in these 60 seconds, it will be distributed to our HttpLongPollingData ChangedListener through the DataChangedEventDispatcher. All held requests are traversed ** Invoke the thread pool immediately ** in the blocking queue, stuffed with response information and released.\",\"If there is still no data change after 60 seconds, the held request will be released and the corresponding request object of the blocking queue will be removed.\",\"At this point, we have sorted out its most basic long polling logic, then corresponding to the next beginning of thinking, see what conclusions or doubts.\",\"How do you know if the data has changed? Do you set a last update time and compare it with the request time of the gateway to see if there is any data modification?\",\"After holding, how does the background know whether the data is updated, repeated traversal or blocked waiting?\",\"Where is the data used for updating? In the case of caching, consider how the background cache interacts with the database.\",\"In response to point 1, how do we know that the data has changed?\",\"At present, the data change source of our analysis is DataChangedEventDispatcher, which not only informs us when the data changes, but also calls it immediately every time we manually click the background synchronization.\",\"Then there must be something like new and old data comparison. Otherwise, every call will directly release the blocking request of the gateway. This is not possible. White IO consumption is certainly not a good design.\",\"For the second point, we now know that the mode is blocking and waiting, which is AsyncContext used in this way. I have not understood this part, and I will discuss it in an extra chapter.\",\"For the third point, we know that the background configuration must be modified to the database, so the interaction between this cache and the database is also a point worth analyzing. I will continue to analyze these questions in the next chapter.\"]},\"102\":{\"h\":\"Soul Gateway Learns Http Long Polling Analysis 02\"},\"103\":{\"h\":\"Data synchronization between background and gateway (Http long polling)\",\"t\":[\"The last chapter of long polling analysis summarizes the implementation of long polling on the gateway side and the way of data flow.\",\"The overall process of long polling at the gateway end is also divided into two modules: one is pulling at startup, and the other is polling to monitor changes.\"]},\"104\":{\"h\":\"Pull data on gateway startup\",\"t\":[\"After the gateway is started, it will call the interface provided by the background to pull data and send the data to the data processing class of each plug-in\",\"The following shows the processing flow for the gateway to start pulling data: \",\"These several processing steps are dispersed into the method collaborations of the following classes:\",\"02\",\"HttpS yncData Service # start: When the gateway is started, the HttpS yncData Service initialization will call start() a method, which will call the background to pull data and start multiple threads for polling and monitoring (this part will be analyzed in the next module)\",\"public class HttpSyncDataService implements SyncDataService, AutoCloseable { private void start() { // Prevents the CAS operation from being invoked twice if (RUNNING.compareAndSet(false, true)) { // Here is the focus of the process, calling the method to pull data this.fetchGroupConfig(ConfigGroupEnum.values()); int threadSize = serverList.size(); // This will be analyzed in the next module, which will enable thread polling listening according to the background cluster this.executor = new ThreadPoolExecutor(threadSize, threadSize, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(), SoulThreadFactory.create(\\\"http-long-polling\\\", true)); this.serverList.forEach(server -> this.executor.execute(new HttpLongPollingTask(server))); } else { log.info(\\\"soul http long polling was started, executor=[{}]\\\", executor); } } } \",\"HttpS yncData Service # fetchGroup Config: It is only used to repeatedly call the pull data method according to the data type (for the same background, it will be requested many times, and the information of a certain data type will be pulled each time). The data type here refers to plugin, rule, selector, and so on\",\"private void fetchGroupConfig(final ConfigGroupEnum... groups) throws SoulException { for (int index = 0; index < this.serverList.size(); index++) { String server = serverList.get(index); try { // Call the pull data method multiple times according to the passed data type enumeration this.doFetchGroupConfig(server, groups); break; } catch (SoulException e) { if (index >= serverList.size() - 1) { throw e; } log.warn(\\\"fetch config fail, try another one: {}\\\", serverList.get(index + 1)); } } } \",\"HttpS yncData Service # doFetchGroup Config: Request the /configs/fetch background interface, get a certain type of data, and update the cache. Before updating the cache, it will check whether it has changed, and if it has changed, it will end. ** ** (Since it is the first time to start, the cache will definitely be updated when the data is empty, so it will end directly.)\",\"private void doFetchGroupConfig(final String server, final ConfigGroupEnum... groups) { StringBuilder params = new StringBuilder(); for (ConfigGroupEnum groupKey : groups) { params.append(\\\"groupKeys\\\").append(\\\"=\\\").append(groupKey.name()).append(\\\"&\\\"); } // Construct the specific request path to fetch background data String url = server + \\\"/configs/fetch?\\\" + StringUtils.removeEnd(params.toString(), \\\"&\\\"); log.info(\\\"request configs: [{}]\\\", url); String json = null; try { json = this.httpClient.getForObject(url, String.class); } catch (RestClientException e) { String message = String.format(\\\"fetch config fail from server[%s], %s\\\", url, e.getMessage()); log.warn(message); throw new SoulException(message, e); } // Update cache information boolean updated = this.updateCacheWithJson(json); // If there are updates, end the process if (updated) { log.info(\\\"get latest configs: [{}]\\\", json); return; } log.info(\\\"The config of the server[{}] has not been updated or is out of date. Wait for 30s to listen for changes again.\\\", server); ThreadUtils.sleep(TimeUnit.SECONDS, 30); } \",\"HttpS yncData Service # update Cache WithJson: Take out the changed data information from data the response information and send it to the DataRefresh Factory\",\"private DataRefreshFactory factory; public HttpSyncDataService(...){ this.factory = new DataRefreshFactory(pluginDataSubscriber, metaDataSubscribers, authDataSubscribers); } private boolean updateCacheWithJson(final String json) { JsonObject jsonObject = GSON.fromJson(json, JsonObject.class); JsonObject data = jsonObject.getAsJsonObject(\\\"data\\\"); return factory.executor(data); } \",\"DataRefreshFactory # executor: Send the data to all kinds of data refresh classes (the information type is not distinguished here, but all data refresh classes are notified, and optimization can be considered)\",\"public final class DataRefreshFactory { private static final EnumMap<ConfigGroupEnum, DataRefresh> ENUM_MAP = new EnumMap<>(ConfigGroupEnum.class); public DataRefreshFactory(final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { // 注入各类型订阅器到 MAP 中 ENUM_MAP.put(ConfigGroupEnum.PLUGIN, new PluginDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.SELECTOR, new SelectorDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.RULE, new RuleDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.APP_AUTH, new AppAuthDataRefresh(authDataSubscribers)); ENUM_MAP.put(ConfigGroupEnum.META_DATA, new MetaDataRefresh(metaDataSubscribers)); } public boolean executor(final JsonObject data) { final boolean[] success = {false}; // Tureen: 所有数据类型的 DataRefresh 全调用 ENUM_MAP.values().parallelStream().forEach(dataRefresh -> success[0] = dataRefresh.refresh(data)); return success[0]; } } \",\"AbstractData Refresh # refresh: Determine whether to update the cache, and if so, call the method of each type refresh()\",\"@Override public Boolean refresh(final JsonObject data) { boolean updated = false; JsonObject jsonObject = convert(data); if (null != jsonObject) { ConfigData<T> result = fromJson(jsonObject); if (this.updateCacheIfNeed(result)) { updated = true; // Turren: 调用 refresh refresh(result.getData()); } } return updated; } \",\"PluginData Refresh # refresh: Invokes the plugin's subscriber, which in turn notifies all extension related events of the change\",\"@Override protected void refresh(final List<PluginData> data) { if (CollectionUtils.isEmpty(data)) { log.info(\\\"clear all plugin data cache\\\"); pluginDataSubscriber.refreshPluginDataAll(); } else { pluginDataSubscriber.refreshPluginDataAll(); // Turren: HTTP synchronization is used, calling the plugin data subscriber data.forEach(pluginDataSubscriber::onSubscribe); } } \"]},\"105\":{\"h\":\"The gateway polls to listen for changes\",\"t\":[\"When the gateway is started, the thread is also started to make a background monitoring request. The monitoring request makes a while endless loop to poll, and the request will be hijacked on the background side. This is specifically analyzed in the background summary (后台与网关数据同步 (Http 长轮询篇 <二>)).\",\"The following shows the overall process of monitoring data changes by the gateway:\",\"03\",\"The corresponding actual code implementation is as follows:\",\"04\",\"The monitoring process on the ** gateway side is implemented in the HttpSyncDataService class, and will be doFetchGroupConfig() passed to various subscribers at the end. The following process is the same ** as that at startup\",\"HttpS yncData Service # start: Start the thread to execute the Http LongPollingTask Runnable\",\"Http LongPolling Task # run: Turn on cyclic call to poll method.\",\"@Override public void run() { while (RUNNING.get()) { for (int time = 1; time <= retryTimes; time++) { try { doLongPolling(server); } catch (Exception e) { if (time < retryTimes) { log.warn(\\\"Long polling failed, tried {} times, {} times left, will be suspended for a while! {}\\\", time, retryTimes - time, e.getMessage()); ThreadUtils.sleep(TimeUnit.SECONDS, 5); continue; } log.error(\\\"Long polling failed, try again after 5 minutes!\\\", e); ThreadUtils.sleep(TimeUnit.MINUTES, 5); } } } } \",\"Http LongPolling Task # doLongPolling: Get the response result of the listening request. If there is a changed type in the return value, call the data pulling method.\",\"private void doLongPolling(final String server) { // Retrieve data from the cache MultiValueMap<String, String> params = new LinkedMultiValueMap<>(8); for (ConfigGroupEnum group : ConfigGroupEnum.values()) { ConfigData<?> cacheConfig = factory.cacheConfigData(group); String value = String.join(\\\",\\\", cacheConfig.getMd5(), String.valueOf(cacheConfig.getLastModifyTime())); params.put(group.name(), Lists.newArrayList(value)); } // Build the HTTP request information HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED); HttpEntity httpEntity = new HttpEntity(params, headers); String listenerUrl = server + \\\"/configs/listener\\\"; log.debug(\\\"request listener configs: [{}]\\\", listenerUrl); JsonArray groupJson = null; try { String json = this.httpClient.postForEntity(listenerUrl, httpEntity, String.class).getBody(); groupJson = GSON.fromJson(json, JsonObject.class).getAsJsonArray(\\\"data\\\"); } catch (RestClientException e) { String message = String.format(\\\"listener configs fail, server:[%s], %s\\\", server, e.getMessage()); throw new SoulException(message, e); } // Obtain the changed types if (groupJson != null) { ConfigGroupEnum[] changedGroups = GSON.fromJson(groupJson, ConfigGroupEnum[].class); if (ArrayUtils.isNotEmpty(changedGroups)) { log.info(\\\"Group config changed: {}\\\", Arrays.toString(changedGroups)); // Retrieve data of corresponding types from the background this.doFetchGroupConfig(server, changedGroups); } } } \",\"LongPollingClient#doFetchGroupConfig:\",\"This piece of code was analyzed in the previous startup, and the biggest difference between it and the startup is that ** **..\",\"What do you mean? If the gateway goes to fetch the background data and takes it back for comparison, it is found that it has been cheated! There is no change. Just wait for 30s to start the next monitoring. During this period, if there is a data change in the background, there is no way to notify the gateway.\",\"Why is the gateway doing this? Naturally, in order to prevent a large number of useless pull cycles, if there is a problem in the background and the data is constantly notified to change, but there is no actual change, then the gateway will generate a large number of useless network IO and data exchange with the background without delay.\"]},\"106\":{\"h\":\"Soul Gateway Learns WebSocket Data Synchronization Analysis\",\"t\":[\"Fan Jinpeng\",\"In Part 4, we analyzed that after the HTTP user service system accesses the Soul gateway, it will call the registration interface of soul-admin, register all the interface information that needs to be proxied by the gateway to soul-admin, and finally, it will connect through the web socket. Synchronize the interface information received by soul-admin to Soul Gateway (soul-bootstrap). Today, we will continue to analyze how the data is synchronized to soul-bootstrap.\",\"If you don't know the process, you can go out and turn left to see the fourth article.\",\"In order to verify the data synchronization process, there is no need to start the business system. You can just start the soul-admin and soul-bootstrap systems. You can open or close the plug-in on the page to see how this process is implemented.\",\"Link to the official website of data synchronization strategy\"]},\"107\":{\"h\":\"2.1 Start 2 systems\",\"t\":[\"They are all started by default according to the project, and no configuration files need to be modified.\"]},\"108\":{\"h\":\"2.2. Page operation search interface\",\"t\":[\"Start the divide plug-in here, F12, and see which interface soul-admin will be called in the foreground.\",\" open_divide_plugin \",\"You can see that the foreground sends a PUT request to the background: http://localhost:9095/plugin/5.\"]},\"109\":{\"h\":\"2.3 Background interface\",\"t\":[\"Search for this interface in the project\",\"// PluginController.java @RestController @RequestMapping(\\\"/plugin\\\") public class PluginController { ... /** * update plugin. * * @param id primary key. * @param pluginDTO plugin. * @return {@linkplain SoulAdminResult} */ @PutMapping(\\\"/{id}\\\") public SoulAdminResult updatePlugin(@PathVariable(\\\"id\\\") final String id, @RequestBody final PluginDTO pluginDTO) { Objects.requireNonNull(pluginDTO); pluginDTO.setId(id); final String result = pluginService.createOrUpdate(pluginDTO); if (StringUtils.isNoneBlank(result)) { return SoulAdminResult.error(result); } return SoulAdminResult.success(SoulResultMessage.UPDATE_SUCCESS); } ... } \",\"Into the implementation class.\",\"// PluginServiceImpl.java /** * create or update plugin. * * @param pluginDTO {@linkplain PluginDTO} * @return rows */ @Override @Transactional(rollbackFor = Exception.class) public String createOrUpdate(final PluginDTO pluginDTO) { final String msg = checkData(pluginDTO); if (StringUtils.isNoneBlank(msg)) { return msg; } PluginDO pluginDO = PluginDO.buildPluginDO(pluginDTO); DataEventTypeEnum eventType = DataEventTypeEnum.CREATE; if (StringUtils.isBlank(pluginDTO.getId())) { pluginMapper.insertSelective(pluginDO); } else { eventType = DataEventTypeEnum.UPDATE; pluginMapper.updateSelective(pluginDO); } // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, eventType, Collections.singletonList(PluginTransfer.INSTANCE.mapToData(pluginDO)))); return StringUtils.EMPTY; } \",\"It can be seen here that the first half is to operate the database and persist the relevant information; the second half is to publish an event.\"]},\"110\":{\"h\":\"2.4 Publish the event\",\"t\":[\"The event published here is encapsulated by DataChangedEvent, and there is an enumeration in it. There are many types here:\",\"/** * configuration group. * * @author huangxiaofeng */ public enum ConfigGroupEnum { APP_AUTH, PLUGIN, RULE, SELECTOR, META_DATA; ... } \",\"Seeing these types, if you still have an impression of the fourth article, you can see that the types of events sent at that time were SELECTOR and RULE, and now it is PLUGIN. Although the types are different, it does not affect us to continue to analyze the logic behind. Let's continue.\",\"Another eventType is also an enumeration. There are five types: DELETE, CREATE, UPDATE, REFRESH, and MYSELF. In this case, it is UPDATE.\",\"/** * The enum Data event type. * * @author xiaoyu */ public enum DataEventTypeEnum { /** * delete event. */ DELETE, /** * insert event. */ CREATE, /** * update event. */ UPDATE, /** * REFRESH data event type enum. */ REFRESH, /** * Myself data event type enum. */ MYSELF; ... } \"]},\"111\":{\"h\":\"2.5 Listen for events\",\"t\":[\"Locate the code that listens for events:\",\"// DataChangedEventDispatcher.java @Component public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { private ApplicationContext applicationContext; private List<DataChangedListener> listeners; public DataChangedEventDispatcher(final ApplicationContext applicationContext) { this.applicationContext = applicationContext; } @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } } \"]},\"112\":{\"h\":\"2.5.1 Listener injection\",\"t\":[\"You can see that the DataChangedEventDispatcher implements the InitializingBean interface, overrides the afterPropertiesSet method, and uses @ Component when Spring starts. This override method is called after the container is loaded. In the After PropertiesSet method, all the beans of the DataChangedListener type are obtained and placed in the class property listeners.\",\"So the question is, when are these listeners injected into the container?\",\"First look at the definition of the Data ChangedListener interface:\",\"/** * Event listener, used to send notification of event changes, * used to support HTTP, websocket, zookeeper and other event notifications. * * @author huangxiaofeng * @author xiaoyu */ public interface DataChangedListener { /** * invoke this method when AppAuth was received. * * @param changed the changed * @param eventType the event type */ default void onAppAuthChanged(List<AppAuthData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Plugin was received. * * @param changed the changed * @param eventType the event type */ default void onPluginChanged(List<PluginData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Selector was received. * * @param changed the changed * @param eventType the event type */ default void onSelectorChanged(List<SelectorData> changed, DataEventTypeEnum eventType) { } /** * On meta data changed. * * @param changed the changed * @param eventType the event type */ default void onMetaDataChanged(List<MetaData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Rule was received. * * @param changed the changed * @param eventType the event type */ default void onRuleChanged(List<RuleData> changed, DataEventTypeEnum eventType) { } } \",\"It can be seen that there are five methods defined in the interface, which respectively deal with the corresponding processing methods when the data changes of appAuth, plugin, selector, metaData and rule are monitored.\",\"Its inheritance relationship:\",\" DataChangedListener \",\"Because the websocket is used by default, the listener here corresponds to the Web socketData ChangedListener, Alt + F7, and the place where this class is instantiated is the following configuration class:\",\"// DataSyncConfiguration.java @Configuration public class DataSyncConfiguration { /** * http long polling. */ @Configuration @ConditionalOnProperty(name = \\\"soul.sync.http.enabled\\\", havingValue = \\\"true\\\") @EnableConfigurationProperties(HttpSyncProperties.class) static class HttpLongPollingListener { @Bean @ConditionalOnMissingBean(HttpLongPollingDataChangedListener.class) public HttpLongPollingDataChangedListener httpLongPollingDataChangedListener(final HttpSyncProperties httpSyncProperties) { return new HttpLongPollingDataChangedListener(httpSyncProperties); } } /** * The type Zookeeper listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.zookeeper\\\", name = \\\"url\\\") @Import(ZookeeperConfiguration.class) static class ZookeeperListener { @Bean @ConditionalOnMissingBean(ZookeeperDataChangedListener.class) public DataChangedListener zookeeperDataChangedListener(final ZkClient zkClient) { return new ZookeeperDataChangedListener(zkClient); } @Bean @ConditionalOnMissingBean(ZookeeperDataInit.class) public ZookeeperDataInit zookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { return new ZookeeperDataInit(zkClient, syncDataService); } } /** * The type Nacos listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.nacos\\\", name = \\\"url\\\") @Import(NacosConfiguration.class) static class NacosListener { @Bean @ConditionalOnMissingBean(NacosDataChangedListener.class) public DataChangedListener nacosDataChangedListener(final ConfigService configService) { return new NacosDataChangedListener(configService); } } /** * The WebsocketListener(default strategy). */ @Configuration @ConditionalOnProperty(name = \\\"soul.sync.websocket.enabled\\\", havingValue = \\\"true\\\", matchIfMissing = true) @EnableConfigurationProperties(WebsocketSyncProperties.class) static class WebsocketListener { @Bean @ConditionalOnMissingBean(WebsocketDataChangedListener.class) public DataChangedListener websocketDataChangedListener() { return new WebsocketDataChangedListener(); } @Bean @ConditionalOnMissingBean(WebsocketCollector.class) public WebsocketCollector websocketCollector() { return new WebsocketCollector(); } @Bean @ConditionalOnMissingBean(ServerEndpointExporter.class) public ServerEndpointExporter serverEndpointExporter() { return new ServerEndpointExporter(); } } } \",\"There are four data synchronization strategies: HTTP long polling, zookeeper, nacos, and websocket (default strategy).\",\"See the web socket annotation @ ConditionalOnProperty (name = \\\"soul. Sync. Web socket. Enabled\\\", having Value = \\\"true\\\", Match (IfMissing = true), find the following configuration in the configuration file:\",\"soul: sync: websocket: enabled: true \",\"This is where the truth comes out.\",\"If you do not want to use the default synchronization policy of the web socket, you can write the corresponding configuration in the configuration file.\"]},\"113\":{\"h\":\"2.5.2 Listening event processing logic\",\"t\":[\"In order to prevent you from turning back and looking at it, which is inconvenient, I will post the processing logic code here:\",\"// DataChangedEventDispatcher.java @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } \",\"All listeners are traversed here. For the current web socket, there is only one listener, and it is not known when the other multiple cases will appear. It is doubtful here, and we will come back to add (//TODO) when we encounter related cases later.\",\"Different logics are used according to the type of the published event. The types here correspond to the methods defined in the DataChangedListener interface.\",\"The listener here is an instance of the Web socketData ChangedListener, which will enter the corresponding method in the class:\",\"// WebsocketDataChangedListener.java public class WebsocketDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> pluginDataList, final DataEventTypeEnum eventType) { WebsocketData<PluginData> websocketData = new WebsocketData<>(ConfigGroupEnum.PLUGIN.name(), eventType.name(), pluginDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } @Override public void onSelectorChanged(final List<SelectorData> selectorDataList, final DataEventTypeEnum eventType) { WebsocketData<SelectorData> websocketData = new WebsocketData<>(ConfigGroupEnum.SELECTOR.name(), eventType.name(), selectorDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } @Override public void onRuleChanged(final List<RuleData> ruleDataList, final DataEventTypeEnum eventType) { WebsocketData<RuleData> configData = new WebsocketData<>(ConfigGroupEnum.RULE.name(), eventType.name(), ruleDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } @Override public void onAppAuthChanged(final List<AppAuthData> appAuthDataList, final DataEventTypeEnum eventType) { WebsocketData<AppAuthData> configData = new WebsocketData<>(ConfigGroupEnum.APP_AUTH.name(), eventType.name(), appAuthDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } @Override public void onMetaDataChanged(final List<MetaData> metaDataList, final DataEventTypeEnum eventType) { WebsocketData<MetaData> configData = new WebsocketData<>(ConfigGroupEnum.META_DATA.name(), eventType.name(), metaDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } } \",\"As you can see in the code, the data is encapsulated as Web socketData and sent using the WebsocketController. Send method.\"]},\"114\":{\"h\":\"2.6 Synchronize data to soul-bootstrap\",\"t\":[\"// WebsocketCollector.java @Slf4j @ServerEndpoint(\\\"/websocket\\\") public class WebsocketCollector { private static final Set<Session> SESSION_SET = new CopyOnWriteArraySet<>(); private static final String SESSION_KEY = \\\"sessionKey\\\"; /** * On open. * * @param session the session */ @OnOpen public void onOpen(final Session session) { log.info(\\\"websocket on open successful....\\\"); SESSION_SET.add(session); } /** * On message. * * @param message the message * @param session the session */ @OnMessage public void onMessage(final String message, final Session session) { if (message.equals(DataEventTypeEnum.MYSELF.name())) { try { ThreadLocalUtil.put(SESSION_KEY, session); SpringBeanUtils.getInstance().getBean(SyncDataService.class).syncAll(DataEventTypeEnum.MYSELF); } finally { ThreadLocalUtil.clear(); } } } /** * On close. * * @param session the session */ @OnClose public void onClose(final Session session) { SESSION_SET.remove(session); ThreadLocalUtil.clear(); } /** * On error. * * @param session the session * @param error the error */ @OnError public void onError(final Session session, final Throwable error) { SESSION_SET.remove(session); ThreadLocalUtil.clear(); log.error(\\\"websocket collection error: \\\", error); } /** * Send. * * @param message the message * @param type the type */ public static void send(final String message, final DataEventTypeEnum type) { if (StringUtils.isNotBlank(message)) { if (DataEventTypeEnum.MYSELF == type) { try { Session session = (Session) ThreadLocalUtil.get(SESSION_KEY); if (session != null) { session.getBasicRemote().sendText(message); } } catch (IOException e) { log.error(\\\"websocket send result is exception: \\\", e); } return; } for (Session session : SESSION_SET) { try { session.getBasicRemote().sendText(message); } catch (IOException e) { log.error(\\\"websocket send result is exception: \\\", e); } } } } } \",\"The Web socketController uses the @ ServerEndpoint ( \\\"/web socket\\\") annotation, opens a web socket service interface, and waits for a connection.\",\"After the soul-bootstrap is started, the web socket will be connected, and the onOpen method will be triggered to store the Session of this connection information in the Set set of the SESSION _ SET.\",\"In the send method, it will first determine whether the DataEventTypeEnum type is MYSELF. This type can be traced back to 2.3-2.4. This time it is UPDATE. As for when it is MYSELF, it needs to be added later. It is doubtful here (//TODO).\",\"The following for loop iterates through all the web socket connection sessions to send the change data.\",\"At this point, the default web socket synchronization data strategy is clear.\",\"Zhu Ming\"]},\"115\":{\"h\":\"Data synchronization between background and gateway (Web socket)\"},\"116\":{\"h\":\"How to establish Web socket? In the background?\",\"t\":[\" Data SyncConfiguration: As the configuration factory of Spring Bean, various listeners can be constructed according to the configuration information. Including HTTP long polling mode, Zookeeper mode, Nacos mode, Web socket method.\",\"@Configuration public class DataSyncConfiguration { // In the configuration of the soul-admin project, use soul.sync.websocket.enabled to enable or disable WebSocket. @Configuration @ConditionalOnProperty(name = \\\"soul.sync.websocket.enabled\\\", havingValue = \\\"true\\\", matchIfMissing = true) @EnableConfigurationProperties(WebsocketSyncProperties.class) static class WebsocketListener { @Bean @ConditionalOnMissingBean(WebsocketCollector.class) public WebsocketCollector websocketCollector() { return new WebsocketCollector(); } } } \",\"Web socketListener: As DataSyncConfiguration the internal class of, it is responsible for the initialization of the web socket listener. Web socket Collector: It monitors the websocket connection and receives information. Maintain all session sessions connected to the background, and provide send() methods to notify session information.\"]},\"117\":{\"h\":\"How does the gateway set up a Web socket?\",\"t\":[\"06\",\"Web socket SyncData Configuration: As the configuration factory of Spring Bean, it is the gateway's entrance to build Websocket communication. (An independent startup project soul-spring-boot-starter-sync-data-websocket is provided for the gateway to choose freely.)\",\"@Configuration @ConditionalOnClass(WebsocketSyncDataService.class) @ConditionalOnProperty(prefix = \\\"soul.sync.websocket\\\", name = \\\"urls\\\") @Slf4j public class WebsocketSyncDataConfiguration { // Collect all subscribers registered as Beans, such as PluginDataSubscriber, MetaDataSubscriber, AuthDataSubscriber @Bean public SyncDataService websocketSyncDataService(final ObjectProvider<WebsocketConfig> websocketConfig, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use websocket sync soul data.......\\\"); return new WebsocketSyncDataService(websocketConfig.getIfAvailable(WebsocketConfig::new), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } // In the configuration of the soul-bootstrap project, use soul.sync.websocket to configure the backend path for establishing connections @Bean @ConfigurationProperties(prefix = \\\"soul.sync.websocket\\\") public WebsocketConfig websocketConfig() { return new WebsocketConfig(); } } \",\"Web socket SyncData Service: Get all the registered beans WebsocketConfig and the various DataSubscriber subscribers, and build an implemented WebsocketClientSoulWebsocketClient list\",\"SoulWeb socket Client: Websocket The communication class monitors the websocket connection and receives information. After receiving the information from the background, it will notify each subscriber.\",\"public final class SoulWebsocketClient extends WebSocketClient { private final WebsocketDataHandler websocketDataHandler; private void handleResult(final String result) { WebsocketData websocketData = GsonUtils.getInstance().fromJson(result, WebsocketData.class); ConfigGroupEnum groupEnum = ConfigGroupEnum.acquireByName(websocketData.getGroupType()); // Determine the event type of data changes based on the incoming information, such as refresh, update, delete, etc. String eventType = websocketData.getEventType(); String json = GsonUtils.getInstance().toJson(websocketData.getData()); websocketDataHandler.executor(groupEnum, json, eventType); } } \",\"Web socketData Handler: Construct the data processing classes of various implementations AbstractDataHandler and cache them during initialization.\",\"public class WebsocketDataHandler { // Cache all DataHandler data change handling classes private static final EnumMap<ConfigGroupEnum, DataHandler> ENUM_MAP = new EnumMap<>(ConfigGroupEnum.class); public WebsocketDataHandler(final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { ENUM_MAP.put(ConfigGroupEnum.PLUGIN, new PluginDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.SELECTOR, new SelectorDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.RULE, new RuleDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.APP_AUTH, new AuthDataHandler(authDataSubscribers)); ENUM_MAP.put(ConfigGroupEnum.META_DATA, new MetaDataHandler(metaDataSubscribers)); } public void executor(final ConfigGroupEnum type, final String json, final String eventType) { // Call the corresponding DataHandler data processing class based on the data change event type ENUM_MAP.get(type).handle(json, eventType); } } \"]},\"118\":{\"h\":\"Gateway data change call chain\",\"t\":[\"After the entry class SoulWebsocketClient that implements Websocket communication receives the background communication, the executor() method called WebsocketDataHandler matches the information type, and calls the corresponding DataHandlerhandler() to process the information.\",\"07\",\"AbstractDataHandler: The implementation handler() method calls the corresponding event abstract method according to the type of the event (such as refresh, update, create, delete, etc.).\",\"public abstract class AbstractDataHandler<T> implements DataHandler { // Distribute to respective methods based on the data event type (eventType), these methods are implemented by subclasses since different types of metadata handlers have different ways of processing @Override public void handle(final String json, final String eventType) { List<T> dataList = convert(json); if (CollectionUtils.isNotEmpty(dataList)) { DataEventTypeEnum eventTypeEnum = DataEventTypeEnum.acquireByName(eventType); switch (eventTypeEnum) { case REFRESH: case MYSELF: doRefresh(dataList); break; case UPDATE: case CREATE: doUpdate(dataList); break; case DELETE: doDelete(dataList); break; default: break; } } } } \",\"XXX DataHandler: This refers to each implementation class AbstractDataHandler of (such as PluginDataHandler), whose main function is to call its subscriber.\",\"Different DataHandler calls have different subscription methods:\",\"Notification of plug-in metadata changes PluginDataHandler is called onSubscribe()\",\"The notification selector is SelectorDataHandler called onSelectorSubscribe() to change the metadata\",\"Notification rule metadata change RuleDataHandler is invoked onRuleSubscribe()\",\"@RequiredArgsConstructor public class PluginDataHandler extends AbstractDataHandler<PluginData> { private final PluginDataSubscriber pluginDataSubscriber; @Override protected void doUpdate(final List<PluginData> dataList) { // Call onSubscribe() of the subscriber, sending the PluginData data object dataList.forEach(pluginDataSubscriber::onSubscribe); } // ... } \",\"CommonPluginData Subscriber: The onSubscribe() method of the subscriber notifies all classes injected as beans PluginDataHandler (not to be confused with the previous class of the same name, which is soul-plugin-base the interface under. Its implementation classes are in the respective pluggable plug-in packages.\",\" image-20210122172333111 \",\"public class CommonPluginDataSubscriber implements PluginDataSubscriber { // Collect and cache all registered data handlers, such as DividePluginDataHandler under the HTTP plugin divide private final Map<String, PluginDataHandler> handlerMap; // Called for plugin metadata changes @Override public void onSubscribe(final PluginData pluginData) { BaseDataCache.getInstance().cachePluginData(pluginData); Optional.ofNullable(handlerMap.get(pluginData.getName())).ifPresent(handler -> handler.handlerPlugin(pluginData)); } // Called for selector metadata changes @Override public void onSelectorSubscribe(final SelectorData selectorData) { BaseDataCache.getInstance().cacheSelectData(selectorData); Optional.ofNullable(handlerMap.get(selectorData.getPluginName())).ifPresent(handler -> handler.handlerSelector(selectorData)); } // Called for rule metadata changes @Override public void onRuleSubscribe(final RuleData ruleData) { BaseDataCache.getInstance().cacheRuleData(ruleData); Optional.ofNullable(handlerMap.get(ruleData.getPluginName())).ifPresent(handler -> handler.handlerRule(ruleData)); } } \"]},\"119\":{\"h\":\"TIPS\",\"t\":[\"There are two classes PluginDataHandler with the same name under the whole project. One soul-sync-data-websocket of them is under the project, which is used to notify the plug-in metadata change, and the other is under the soul-plugin-base project, which is used to define the metadata update of each type of plug-in.\",\"To summarize the naming meaning of these two classes, ** soul-sync-data-websocket the \\\"plugin\\\" in the lower class name means that the type of metadata is a plug-in class, and soul-plugin-base the \\\"plugin\\\" in the lower class name means that the subclass that inherits it comes from each pluggable plug-in. Such as divide, dubbo plugins, etc. **\"]},\"120\":{\"h\":\"Soul Gateway Learning SPI\",\"t\":[\"When analyzing the load balancing strategy of the divide plug-in, I saw a line of code:\",\"DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); \",\"At that time, it was easy to skip its implementation, and its function was easy to analyze, calling a method that looked like a tool class, passing in a cluster of multiple nodes, and returning a node. This is a load balancer..\",\"But there are a lot of details, the most important of which is the use of the SPI to select specific implementation classes. Take a look at the code for this method:\",\"public class LoadBalanceUtils { public static DivideUpstream selector(final List<DivideUpstream> upstreamList, final String algorithm, final String ip) { // 调用自定义的 SPI 得到一个子类 LoadBalance loadBalance = ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); return loadBalance.select(upstreamList, ip); } } \",\"The latter is to call the select() specific subclass method, according to the different implementation of the subclass, will eventually show a variety of forms. The current subclass implementations are:\",\"HashLoadBalance\",\"RandomLoadBalance\",\"RoundRobinLoadBalance\",\"The key is ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); this line of work.\",\"Before we look at it, let's take a look at the SPI mechanism provided by Java.\"]},\"121\":{\"h\":\"Java SPI\",\"t\":[\"There is such a definition <<高可用可伸缩微服务架构>> 第 3 章 Apache Dubbo 框架的原理与实现 in.\",\"The full name of SPI is Service Provider Interface, which is a built-in service provider discovery function of JDK and a dynamic replacement discovery mechanism. For example, to dynamically add an implementation to an interface at runtime, you only need to add an implementation.\",\"There is also a very vivid brain map in the book, which shows the use of SPI:\",\"08\",\"That is to say, in the implementation of our code, there is no need to write a Factory, use MAP to wrap some subclasses, and the final return type is the parent interface. You only need to define the resource file and specify the parent interface and its subclasses in the file, and then you can get all the defined subclass objects by setting them:\",\"ServiceLoader<Interface> loaders = ServiceLoader.load(Interface.class) for(Interface interface : loaders){ System.out.println(interface.toString()); } \",\"Compared with the ordinary factory pattern, this method is definitely more in line with the principle of opening and closing, adding a new subclass without modifying the factory method, but editing the resource file.\"]},\"122\":{\"h\":\"Start with a Demo\",\"t\":[\"According to the specification of SPI, I built a demo to see the specific implementation effect.\",\" image-20210129095623013 \",\" image-20210129095703911 \",\"A run() method is defined in Animal, and a subclass implements it.\",\"public interface Animal { void run(); } public class Dog implements Animal { @Override public void run() { System.out.println(\\\"狗在跑\\\"); } } public class Horse implements Animal { @Override public void run() { System.out.println(\\\"马在跑\\\"); } } \",\"Use the loading class of SPI to get the execution result of the subclass:\",\"private static void test() { final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\" image-20210129103047851 \",\"After the call, we get the implementation classes previously written in the resource file and successfully invoke their respective run() methods.\",\"At this point, I have a question **, does each call ServiceLoader.load(Animal.class) return the same object? ** If it is, I guess it is loaded into the cache at startup, if not, it may be using reflection at the bottom, and each call has a certain consumption. Let's look at the following experiment:\",\"public static void main(String[] args) { for (int i = 0; i < 2; i++) { test(); System.out.println(\\\"----------\\\"); } } private static void test() { final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\" image-20210129103451844 \",\"The objects in the two calls are different, which makes me worry about its performance, so let's analyze its code first and see how to implement it.\"]},\"123\":{\"h\":\"Implementation of SPI\",\"t\":[\"To find java.util,ServiceLoaders this class, the most striking thing is the directory where we placed the resource files according to the specifications before.\",\"public final class ServiceLoader<S> implements Iterable<S> { private static final String PREFIX = \\\"META-INF/services/\\\"; } \",\"When the debug PREFIX attribute is called, it is found that ServiceLoader.load the lazy loading method is actually used, and the actual return class is not found when it is called, but when it is traversed.\",\"Its lazy loading is implemented in the following code:\",\"public final class ServiceLoader<S> implements Iterable<S> { public static <S> ServiceLoader<S> load(Class<S> service) { // 获取当前的类加载器 (我们自己的通常是弟中弟 AppClassLoader ) ClassLoader cl = Thread.currentThread().getContextClassLoader(); return ServiceLoader.load(service, cl); } public static <S> ServiceLoader<S> load(Class<S> service, ClassLoader loader) { // 调用构造器初始化对象 (说明每次调用都使用新的 ServiceLoader 对象) return new ServiceLoader<>(service, loader); } private ServiceLoader(Class<S> svc, ClassLoader cl) { service = Objects.requireNonNull(svc, \\\"Service interface cannot be null\\\"); loader = (cl == null) ? ClassLoader.getSystemClassLoader() : cl; acc = (System.getSecurityManager() != null) ? AccessController.getContext() : null; // 上面都是将信息放入对象实例属性中, 这行才是关键调用 reload(); } public void reload() { providers.clear(); // 创建懒加载迭代器, 传入关键的接口 Class 以及加载器 lookupIterator = new LazyIterator(service, loader); } } \",\"After the call ServiceLoader.load, the key thing is not done, just pass the interface class and loader to LazyIterator, the implementation class of the iterator.\",\"Seeing this, we can guess that when the object returned by the real iteration call is called, the iterator must be required to complete the search and initialization of the implementation class, while the parameter passing is Class information and loader, and the initialization of the implementation class will obviously be reflection.\",\"Take a look at how LazyIterator is implemented, starting with where it will be called hasNext() in the first place:\",\"private class LazyIterator implements Iterator<S> { public boolean hasNext() { if (acc == null) { return hasNextService(); } else { // ... } } private boolean hasNextService() { if (nextName != null) { return true; } if (configs == null) { try { String fullName = PREFIX + service.getName(); if (loader == null) configs = ClassLoader.getSystemResources(fullName); else // 加载资源文件 configs = loader.getResources(fullName); } catch (IOException x) { fail(service, \\\"Error locating configuration files\\\", x); } } while ((pending == null) || !pending.hasNext()) { if (!configs.hasMoreElements()) { return false; } // 解析出资源文件中写入的实现类类名 pending = parse(service, configs.nextElement()); } // 获取一个类名 nextName = pending.next(); return true; } } \",\" image-20210129111231212 \",\"hasNext() The call can get the name of the class in our resource, write it to the instance property nextName, and return it true so that the iterator can make next() the call.\",\"public S next() { if (acc == null) { return nextService(); } else { // ... } } private S nextService() { if (!hasNextService()) throw new NoSuchElementException(); String cn = nextName; nextName = null; Class<?> c = null; try { // 反射得到 Class 对象 c = Class.forName(cn, false, loader); } catch (ClassNotFoundException x) { fail(service, \\\"Provider \\\" + cn + \\\" not found\\\"); } if (!service.isAssignableFrom(c)) { fail(service, \\\"Provider \\\" + cn + \\\" not a subtype\\\"); } try { // 初始化对象, 并判断是否与接口符合 S p = service.cast(c.newInstance()); // 将初始化的对象放入hash缓存 (关键步骤) providers.put(cn, p); return p; } catch (Throwable x) { fail(service, \\\"Provider \\\" + cn + \\\" could not be instantiated\\\", x); } throw new Error(); // This cannot happen } \",\"Here we understand that after initialization, the object will be put into the cache, and the key is the interface class. There will be no reflection consumption in the second call.\",\"So why do we produce different object instances in the way we test before? The reason is that each call ServiceLoader.load() produces a new ServiceLoader object. We will improve the test method:\",\"public static void main(String[] args) { // 复用 ServiceLoaders final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (int i = 0; i < 2; i++) { test(load); System.out.println(\\\"----------\\\"); } } private static void test(ServiceLoader<Animal> load) { for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\" image-20210129113307494 \"]},\"124\":{\"h\":\"Java SPI Thinking\",\"t\":[\"There are a lot of details that we haven't described in the Java SPI, but that's the main process. Our two previous questions about how to implement and performance can also be answered:\",\"How to implement: Read the resource file through the IO stream, load the corresponding path by reflection and generate a Class object, and put it into the cache after initialization\",\"Performance: The first iteration call will have a reflection call, but when used multiple times, as long as the same ServiceLoader object is used, multiple reflections can be avoided, because the objects in the cache will be reused directly.\",\"At this point, I have a very confused place, before I thought it was very similar to the factory method, but it has an advantage over it, because after adding a subclass, you only need to change the resource file without changing the factory class.\",\"But when I tried to use Java SPI to implement it, I found that it could not achieve this effect. An important reason is ** The individual implementation classes in the resource file are not differentiated ** that I could not filter out the implementation class that I needed to cache in ServiceLoaders.\",\"So where is its usage scenario?\"]},\"125\":{\"h\":\"JDBC SPI Usage\",\"t\":[\"According to the information, the most critical pluggable driver design in JDBC is implemented by SPI.\"]},\"126\":{\"h\":\"Mysql driver package SPI\",\"t\":[\"In each database connection package, the implementation of JDBC mode needs to implement its Driver interface. The practical one is the SPI mode. Let's take a look.\",\" image-20210130202512831 \",\"So how do the JDBC-related classes in the JDK implement this? The key class is DriverManager\",\"public class DriverManager { static { loadInitialDrivers(); } private static void loadInitialDrivers() { // ... AccessController.doPrivileged(new PrivilegedAction<Void>() { public Void run() { // 这里就是 SPI 的实现, 迭代时实际会 Class.forName() 初始化实现类 ServiceLoader<Driver> loadedDrivers = ServiceLoader.load(Driver.class); Iterator<Driver> driversIterator = loadedDrivers.iterator(); try{ while(driversIterator.hasNext()) { driversIterator.next(); } } catch(Throwable t) { // Do nothing } return null; } }); // ... } } \",\"If the static method of DriverManager is called in the code, the above code will be triggered, and what does the initialization of the ** Its function is to initialize all the Driver implementation classes in the SPI resource file. ** implementation class do? Keep looking com.mysql.jdbc.Driver\",\"public class Driver extends NonRegisteringDriver implements java.sql.Driver { static { try { // 调用 DriverManager 的注册方法, 将此 Driver 实现类注册到 JDBC 的 Driver 管理器中 java.sql.DriverManager.registerDriver(new Driver()); } catch (SQLException E) { throw new RuntimeException(\\\"Can't register driver!\\\"); } } } \",\"The registration method of DriverManager is very simple, that is, the input parameters are put into static variables as a global cache.\",\"public class DriverManager { // 缓存 Driver 实现类 private final static CopyOnWriteArrayList<DriverInfo> registeredDrivers = new CopyOnWriteArrayList<>(); public static synchronized void registerDriver(java.sql.Driver driver) throws SQLException { registerDriver(driver, null); } public static synchronized void registerDriver(java.sql.Driver driver, DriverAction da) throws SQLException { if(driver != null) { // 注册到变量中 registeredDrivers.addIfAbsent(new DriverInfo(driver, da)); } else { throw new NullPointerException(); } } } \"]},\"127\":{\"h\":\"Filter Driver: Contract is greater than configuration\",\"t\":[\"In normal use, we will get the connection directly DriverManager.getConnection(url, user, passwd), but there is a question here. We have registered multiple drivers in DriverManager. Why can we determine a unique Driver here?\",\"To find the getConnection() DriverManager first:\",\"public static Connection getConnection(String url, String user, String password) throws SQLException { // ... return (getConnection(url, info, Reflection.getCallerClass())); } private static Connection getConnection( String url, java.util.Properties info, Class<?> caller) throws SQLException { // ... for(DriverInfo aDriver : registeredDrivers) { // isDriverAllowed() 仅是通过 Class.forName() 初始化, 没有甄别作用 if(isDriverAllowed(aDriver.driver, callerCL)) { try { // 最关键的点在这行, 筛选工作其实在实现类自身的 connect() 方法中, 会根据传入的 url 筛选 Connection con = aDriver.driver.connect(url, info); if (con != null) { return (con); } } catch (SQLException ex) { } } else { } } // ... } \",\"See how filtering is implemented in the all-important Mysql Driver (which inherits from NonRegisteringDriver)\",\"public class NonRegisteringDriver implements java.sql.Driver { private static final String URL_PREFIX = \\\"jdbc:mysql://\\\"; private static final String REPLICATION_URL_PREFIX = \\\"jdbc:mysql:replication://\\\"; private static final String MXJ_URL_PREFIX = \\\"jdbc:mysql:mxj://\\\"; public static final String LOADBALANCE_URL_PREFIX = \\\"jdbc:mysql:loadbalance://\\\"; public java.sql.Connection connect(String url, Properties info) throws SQLException { // ... // parseURL() 会匹配 url 是否符合其所在 Driver 的连接方式 // 这里就是采用\\\"约定大于配置\\\"的思想, 通过匹配路径头做筛选 if ((props = parseURL(url, info)) == null) { return null; } // ... } public Properties parseURL(String url, Properties defaults) throws java.sql.SQLException { // ... // 如果 url 不匹配此 Driver 的路径则返回null, 最外层会继续尝试下个 Driver if (!StringUtils.startsWithIgnoreCase(url, URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, MXJ_URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, LOADBALANCE_URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, REPLICATION_URL_PREFIX)) { return null; } // ... } } \"]},\"128\":{\"h\":\"Summary MySQL & JDBC\",\"t\":[\"See here, I think you already understand the implementation of SPI in MySQL & JDBC. Summarize a few points.\",\"The DriverManager in JDBC loads the SPI resource file and java.sql.Driver initializes all the implementation classes.\",\"In fact, when the class is initialized, it will create its own object and inject it into DriverManager for unified management.\",\"The DriverManager filters the managed Drivers by the Driver implementation class itself, which is only responsible for traversing and taking out the available Drivers\",\"The Driver implementation class determines whether it should return itself by passing in the database URL header. If not, return null.. JDBC's DriverManager receives the null call that will continue with the next Driver implementation class.\",\"The MySql driver actual selection scheme is path header matching, which is one of\"]},\"129\":{\"h\":\"JDBC Demo\",\"t\":[\"After writing these analyses, let's look at how to implement a simple demo.\",\"Let's share the way I wrote it before.\",\"static { try { // 反射, 该类加载时会在静态块中, 向 DriverManager 注册 Driver Class.forName(\\\"com.mysql.jdbc.Driver\\\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } } public static void main(String[] args) { try ( final Connection conn = DriverManager.getConnection(url, user, passwd); final Statement stmt = conn.createStatement(); final ResultSet rs = stmt.executeQuery(\\\"select count(1) from test\\\") ) { while (rs.next()) { int count = rs.getInt(\\\"count(1)\\\"); System.out.println(count); } } catch (Exception e) { e.printStackTrace(); } } \",\"Although this can be used, don't you think there is extra code? Look at my new way of writing.\",\"public static void main(String[] args) throws ClassNotFoundException { try ( final Connection conn = DriverManager.getConnection(url, user, passwd); final Statement stmt = conn.createStatement(); final ResultSet rs = stmt.executeQuery(\\\"select count(1) from test\\\") ) { while (rs.next()) { int count = rs.getInt(\\\"count(1)\\\"); System.out.println(count); } } catch (Exception e) { e.printStackTrace(); } } \",\"Only these simple codes are needed. DriverManager.getConnection() When called, the DriverManager will automatically load the implementation class in the SPI, and we do not need to Class.forName() manually call java.mysql.Driver the initialization.\",\"** See here I think you still understand the most important role of SPI. There is no need to explicitly write out the implementation class corresponding to the interface **\",\"So we also have a problem in \\\"Java SPI Thinking\\\" that has been solved. ** How do you distinguish the implementation classes to be used in the SPI? Let the implementation class decide for itself, and the outer call simply iterates over all. **\"]},\"130\":{\"h\":\"SOUL SPI implementation\",\"t\":[\"We have a thorough understanding of the use of SPI in Java, while the SPI in Soul is designed by ourselves, using the design idea of SPI in Dubbo. You can see the associated annotation on the org.dromara.soul.spi.SPI annotation class.\",\"/** * SPI Extend the processing. * All spi system reference the apache implementation of * https://github.com/apache/dubbo/blob/master/dubbo-common/src/main/java/org/apache/dubbo/common/extension. */ \"]},\"131\":{\"h\":\"Java SPI bug\",\"t\":[\"When analyzing the use of Java SPI in the last two modules, some shortcomings were found:\",\"If the ServiceLoader is used improperly ** Does not properly utilize its caching mechanism **, it will cause the class object to be reflected and the instance object to be initialized every time the concrete implementation class is obtained. Not to mention that the performance is over, the object obtained every time is different, which may cause program problems.\",\"That is to say, every time you look for a specific implementation class, you have to iterate over it. Although the use of fewer subclasses has no effect, this way is still silly. In addition, referring to the implementation of JDBC in MySQL driver, we also need to design a more complex filtering mechanism.\",\"So how does the implementation of Soul SPI solve these two problems? The key lies in the next two sub-modules.\",\"Optimized Extension Loader\",\"Enhanced getJoin ()\"]},\"132\":{\"h\":\"Optimized Extension Loader\",\"t\":[\"Let's first look at the overall picture of the SPI implementation project, which is soul-spi:\",\" image-20210130214402997 \",\"The core class is the Extension Loader, which can be said to be the Soul version of the ServiceLoader. It also defines the path location of the SPI resource file.\",\"public final class ExtensionLoader<T> { private static final String SOUL_DIRECTORY = \\\"META-INF/soul/\\\"; } \",\"By examining the callers of its methods, we find the entry method.\",\"public final class ExtensionLoader<T> { private static final Map<Class<?>, ExtensionLoader<?>> LOADERS = new ConcurrentHashMap<>(); public static <T> ExtensionLoader<T> getExtensionLoader(final Class<T> clazz) { // ... // 根据加载类对象取出缓存中数据, 如果没有则新建 ExtensionLoader 对象并放入缓存 ExtensionLoader<T> extensionLoader = (ExtensionLoader<T>) LOADERS.get(clazz); if (extensionLoader != null) { return extensionLoader; } LOADERS.putIfAbsent(clazz, new ExtensionLoader<>(clazz)); return (ExtensionLoader<T>) LOADERS.get(clazz); } } \",\"This method acts like a ServiceLoader load() method and returns a ServiceLoader object.\",\"It's just that the implementation in Soul changes the way it caches the Extension Loader object so that\"]},\"133\":{\"h\":\"Enhanced search getJoin ()\",\"t\":[\"Let's look at the getJoin() Extension Loader method, which I understand as ** Better implementation of ServiceLoader Iterator Edition **. It also does two things that the ServiceLoader iteration did:\",\"Initialize the implementation class in the SPI\",\"Cache the implementation class-> as a Map collection of the form Key-Value\",\"Based on the K-V cache mode, it also made a transformation that I was most looking forward to:\",\"The direct matching of time complexity O(1) to realize class mode\"]},\"134\":{\"h\":\"Multi-tier cache\",\"t\":[\"The reason ExtensionLoader can do this enhanced search without iterating over everything each time is that it relies on three different types of caching.\",\"These three caches are divided into two layers, each of which has different purposes. The overview is as follows:\",\"// 一层缓存 private final Map<String, Holder<Object>> cachedInstances = new ConcurrentHashMap<>(); // 二层缓存之一 private final Holder<Map<String, Class<?>>> cachedClasses = new Holder<>(); // 二层缓存之一 private final Map<Class<?>, Object> joinInstances = new ConcurrentHashMap<>(); \"]},\"135\":{\"h\":\"Tier 1 cache: cachedInstances\",\"t\":[\"The first is the first-tier cache, which is the first thing we come into contact with when searching for the specific implementation class of the interface. If we hit it, we can directly get the object of the implementation class.\",\"private final Map<String, Holder<Object>> cachedInstances = new ConcurrentHashMap<>(); \",\"It key is actually the information we configured in the Soul SPI resource file, such as the resource file of the load balancing implementation class of the Divide plug-in.\",\" image-20210130230250748 \",\"And it value 's the Holder object, which holds the object of the implementation class. When called getJoin(), pass in an identity (such as random) to get the implementation class object.\",\"public T getJoin(final String name) { // ... Holder<Object> objectHolder = cachedInstances.get(name); Object value = objectHolder.getValue(); // ... return (T) value; } \"]},\"136\":{\"h\":\"Layer 2 Cache: cachedClasses\",\"t\":[\"It cachedClasses stores the mapping between the identity (random) and the class object\",\"private final Holder<Map<String, Class<?>>> cachedClasses = new Holder<>(); \",\"How is the cachedClasses cached information populated? Is directly triggered to retrieve the SPI resource file and then parse it into a cachedClasses cache. The specific method is in loadResources()\",\"private void loadResources(final Map<String, Class<?>> classes, final URL url) throws IOException { Properties properties = new Properties(); // 解析资源文件 properties.load(inputStream); properties.forEach((name, classPath) -> { // 读出 K-V 结构并组装成 classes, 外层调用会包装到 cachedClasses loadClass(classes, name, classPath); }); } \"]},\"137\":{\"h\":\"Second-tier cache: joinInstances\",\"t\":[\"The joinInstances cache holds the mapping of class objects to object instances.\",\"private final Map<Class<?>, Object> joinInstances = new ConcurrentHashMap<>(); \",\"This layer of cache will get the class object of the corresponding identifier (random) with the help of the second layer of cache, and cache it into itself through the initialization instance of the class object. The corresponding implementation method is as follow\",\"private T createExtension(final String name) { Class<?> aClass = getExtensionClasses().get(name); Object o = joinInstances.get(aClass); if (o == null) { joinInstances.putIfAbsent(aClass, aClass.newInstance()); } return (T) o; } \"]},\"138\":{\"h\":\"Cache summary\",\"t\":[\"When the implementation class of an interface is loaded through the Extension Loader, the flow chart of the cache call is as follows:\",\"09\"]},\"139\":{\"h\":\"Detailed source code analysis (can be skipped)\",\"t\":[\"// name can be understood as an identifier used to distinguish a specific implementation class in the SPI file. public T getJoin(final String name) { // ... // cachedInstances caches all Holder objects. The value property of the Holder object holds the concrete implementation class. // I understand cachedInstances as the first-level cache. If it hits, it directly returns the desired class. Holder<Object> objectHolder = cachedInstances.get(name); if (objectHolder == null) { cachedInstances.putIfAbsent(name, new Holder<>()); objectHolder = cachedInstances.get(name); } Object value = objectHolder.getValue(); // Double-checked locking: if not hit, call createExtension() if (value == null) { synchronized (cachedInstances) { value = objectHolder.getValue(); if (value == null) { value = createExtension(name); objectHolder.setValue(value); } } } return (T) value; } \",\"private T createExtension(final String name) { // Critical code, searching for the class object corresponding to the identifier. Class<?> aClass = getExtensionClasses().get(name); if (aClass == null) { throw new IllegalArgumentException(\\\"name is error\\\"); } // joinInstances can be understood as the second-level cache, where K-V maps class objects to their initialized instances. Object o = joinInstances.get(aClass); if (o == null) { try { joinInstances.putIfAbsent(aClass, aClass.newInstance()); o = joinInstances.get(aClass); } catch (InstantiationException | IllegalAccessException e) { // ... } } return (T) o; } \",\"public Map<String, Class<?>> getExtensionClasses() { // cachedClasses is the third-level cache, storing the mapping of identifiers to class objects. Map<String, Class<?>> classes = cachedClasses.getValue(); if (classes == null) { synchronized (cachedClasses) { classes = cachedClasses.getValue(); if (classes == null) { // Construct the classes cache, with K-V structure as identifier-class object. classes = loadExtensionClass(); cachedClasses.setValue(classes); } } } return classes; } \",\"private Map<String, Class<?>> loadExtensionClass() { // Get the SPI annotation of the interface. SPI annotation = clazz.getAnnotation(SPI.class); if (annotation != null) { String value = annotation.value(); if (StringUtils.isNotBlank(value)) { cachedDefaultName = value; } } // Construct the classes cache, with K-V structure as identifier-class object. Map<String, Class<?>> classes = new HashMap<>(16); loadDirectory(classes); return classes; } \",\"private void loadDirectory(final Map<String, Class<?>> classes) { String fileName = SOUL_DIRECTORY + clazz.getName(); try { ClassLoader classLoader = ExtensionLoader.class.getClassLoader(); // Read the SPI resource file. Enumeration<URL> urls = classLoader != null ? classLoader.getResources(fileName) : ClassLoader.getSystemResources(fileName); if (urls != null) { while (urls.hasMoreElements()) { URL url = urls.nextElement(); // Construct the classes cache, with K-V structure as identifier-class object. loadResources(classes, url); } } } } \",\"private void loadResources(final Map<String, Class<?>> classes, final URL url) throws IOException { try (InputStream inputStream = url.openStream()) { Properties properties = new Properties(); properties.load(inputStream); // Parse the resource file into K-V structure. properties.forEach((k, v) -> { String name = (String) k; String classPath = (String) v; if (StringUtils.isNotBlank(name) && StringUtils.isNotBlank(classPath)) { try { // Load the class path into classes cache, along with identifier and class path. loadClass(classes, name, classPath); } catch (ClassNotFoundException e) { throw new IllegalStateException(\\\"load extension resources error\\\", e); } } }); } } \",\"private void loadClass(final Map<String, Class<?>> classes, final String name, final String classPath) throws ClassNotFoundException { // Reflect the class path from the resource file into a class object. Class<?> subClass = Class.forName(classPath); // Get the Join annotation of the implementation class. Join annotation = subClass.getAnnotation(Join.class); Class<?> oldClass = classes.get(name); if (oldClass == null) { // Put it into the classes cache as K-V, with identifier as the key and class object as the value. classes.put(name, subClass); } } \"]},\"140\":{\"h\":\"Soul Gateway Learning Sign Plugin\"},\"141\":{\"h\":\"Introduction\",\"t\":[\"The sign plug-in is used to sign and authenticate requests.\"]},\"142\":{\"h\":\"AK/SK Introduction\",\"t\":[\"AK/SK (Access Key ID/Secret Access Key) is the access key, including the access key ID (AK) and the secret access key (SK), which is mainly used to authenticate and authenticate the user's calling behavior.\"]},\"143\":{\"h\":\"Plugin usage-take (/dubbo/findAll) as an example\"},\"144\":{\"h\":\"Support added sign in SoulBootstrap's POM. XML films\",\"t\":[\" <!-- soul sign plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-sign</artifactId> <version>${last.version}</version> </dependency> <!-- soul sign plugin end--> \"]},\"145\":{\"h\":\"Add appKey, secretKey\"},\"146\":{\"h\":\"Configure Selectors and Regulators\",\"t\":[\"Add Selector Add Ruler \"]},\"147\":{\"h\":\"Add the service of obtaining authentication\",\"t\":[\"Add an external access method to your service\",\" @GetMapping(\\\"/authUrl\\\") public String authUrl() { Map<String, String> map = Maps.newHashMapWithExpectedSize(2); //Convert timestamp to string form of milliseconds: String.valueOf(LocalDateTime.now().toInstant(ZoneOffset.of(\\\"+8\\\")).toEpochMilli()) String timetamp = String.valueOf(LocalDateTime.now().toInstant(ZoneOffset.of(\\\"+8\\\")).toEpochMilli()) ; System.out.println(timetamp); map.put(\\\"timestamp\\\",timetamp); //The value should be in the form of a string representing milliseconds map.put(\\\"path\\\", \\\"/dubbo/findAll\\\"); map.put(\\\"version\\\", \\\"1.0.0\\\"); List<String> storedKeys = Arrays.stream(map.keySet() .toArray(new String[]{})) .sorted(Comparator.naturalOrder()) .collect(Collectors.toList()); final String sign = storedKeys.stream() .map(key -> String.join(\\\"\\\", key, map.get(key))) .collect(Collectors.joining()).trim() .concat(\\\"D19CF79F647A465AB9C5C66F430CAD28\\\");//SECRETkey return DigestUtils.md5DigestAsHex(sign.getBytes()).toUpperCase(); } \",\"The following should be noted \"]},\"148\":{\"h\":\"Adding authentication header information in the gateway\",\"t\":[\"image.png\"]},\"149\":{\"h\":\"Demo of the requested result\",\"t\":[\"Passed return 5min timeout return appKey filling error return signature error return disable sign plug-in return \"]},\"150\":{\"h\":\"Implementation Analysis of sign Plug-in\"},\"151\":{\"h\":\"Pair in Java\",\"t\":[\"Simply speaking, pair stores a pair of key values, while map can store multiple pairs of key values. SignPlugin plug-in calls signVerify method in DefaultSignService to judge whether sign plug-in is available. If yes, obtain the soul Context stored in global plug-in and call verify method\",\"if (signData != null && signData.getEnabled()) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; return verify(soulContext, exchange); } \",\"In the verify method, determine whether the request header information is correct. If not, throw the log. Error ( \\\"sign parameters are incomplete, { }\\\", soulContext) exception\",\"if (StringUtils.isBlank(soulContext.getAppKey()) || StringUtils.isBlank(soulContext.getSign()) || StringUtils.isBlank(soulContext.getTimestamp())) { log.error(\\\"sign parameters are incomplete,{}\\\", soulContext); return Pair.of(Boolean.FALSE, Constants.SIGN_PARAMS_ERROR); } \",\"Judge whether the request time is timeout\",\" if (between > delay) { return Pair.of(Boolean.FALSE, String.format(SoulResultEnum.SING_TIME_IS_TIMEOUT.getMsg(), delay)); } \",\"Continue to call the sign method without timeout to get the authentication data, which is configured in soulAdmin\",\"AppAuthData appAuthData = SignAuthDataCache.getInstance().obtainAuthData(soulContext.getAppKey()); \",\"The appAuthData data will be judged later. If the data is wrong, the acquired parameters will not be re-signed to judge whether the incoming data is the same as the re-signed data.\",\"String sigKey = SignUtils.generateSign(appAuthData.getAppSecret(), buildParamsMap(soulContext)); \",\"If all the verification is passed, the authentication access request is completed.\"]},\"152\":{\"h\":\"Soul Gateway Learns Zookeeper Data Synchronization 01\"},\"153\":{\"h\":\"Start soul-admin and soul-bootstrap, and use zookeeper to synchronize data to the gateway\"},\"154\":{\"h\":\"I. Configuration environment\",\"t\":[\"For soul-admin service configuration, restart the service.\",\"soul-admin/src/main/resources/application.yml\",\"soul: sync: zookeeper: url: localhost:2181 sessionTimeout: 5000 connectionTimeout: 2000 \",\"Soul-bootstrap gateway service configuration needs to be restarted\",\"soul-bootstrap/pom.xml\",\"<!--soul data sync start use zookeeper--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-zookeeper</artifactId> <version>${project.version}</version> </dependency> \",\"soul-bootstrap/src/main/resources/application-local.yml\",\"soul: sync: zookeeper: url: localhost:2181 sessionTimeout: 5000 connectionTimeout: 2000 \"]},\"155\":{\"h\":\"II. Startup Service\",\"t\":[\"Start zookeeper\",\"zookeeper ./bin/zkServer.sh start /usr/bin/java ZooKeeper JMX enabled by default Using config: /Documents/soft/zookeeper/bin/../conf/zoo.cfg Starting zookeeper ... STARTED \",\"The soul-admin gateway background service is started. After the service is started, you can see the ZooKeeper request call.\",\" 2021-01-20 17:34:48.752 INFO 64500 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread : Starting ZkClient event thread. 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:zookeeper.version=3.5.6-c11b7e26bc554b8523dc929761dd28808913f091, built on 10/08/2019 20:18 GMT 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:host.name=10.7.254.31 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:java.version=1.8.0_261 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:java.vendor=Oracle Corporation ...... 2021-01-20 17:34:48.806 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error) 2021-01-20 17:34:48.826 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:58214, server: localhost/0:0:0:0:0:0:0:1:2181 2021-01-20 17:34:48.857 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x1000b5e22f50001, negotiated timeout = 5000 2021-01-20 17:34:48.861 INFO 64500 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient : zookeeper state changed (SyncConnected) \",\"The soul-bootstrap gateway service is started. After the service is started, you can see the ZooKeeper request call.\",\"2021-01-20 17:35:58.996 INFO 64583 --- [ main] s.b.s.d.z.ZookeeperSyncDataConfiguration : you use zookeeper sync soul data....... 2021-01-20 17:35:59.003 INFO 64583 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread : Starting ZkClient event thread. ...... 2021-01-20 17:35:59.012 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:user.home=/Users/liquan 2021-01-20 17:35:59.012 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:os.memory.total=310MB 2021-01-20 17:35:59.018 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Initiating client connection, connectString=localhost:2181 sessionTimeout=5000 watcher=org.I0Itec.zkclient.ZkClient@114a5e0 2021-01-20 17:35:59.121 INFO 64583 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000b5e22f50002, negotiated timeout = 5000 2021-01-20 17:35:59.126 INFO 64583 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient : zookeeper state changed (SyncConnected) \",\"View the registration information of soul gateway synchronization on zookeeper\"]},\"156\":{\"h\":\"III. Analysis of data synchronization principle of Soul gateway Zookeeper\",\"t\":[\"After the soul-admin is started, the zkclient. ZkClient org.I0Itec. Is seen in the console, which is used as an entry point for tracing and debugging.\",\"Function of ZookeeperConfiguration: Register zkClient to the Spring container.\",\"// EnableConfigurationProperties Purpose: Enables classes annotated with @ConfigurationProperties. If a configuration class is only annotated with @ConfigurationProperties and not with @Component, then the bean converted from the properties configuration file cannot be obtained in the IOC container. @EnableConfigurationProperties is equivalent to injecting classes that use @ConfigurationProperties. // @ConditionalOnMissingBean If the specified class is missing in the container, perform injection. Opposite of @ConditionalOnBean. /** * ZookeeperConfiguration . * @author xiaoyu(Myth) */ @EnableConfigurationProperties(ZookeeperProperties.class) public class ZookeeperConfiguration { /** * register zkClient in spring ioc. * * @param zookeeperProp the zookeeper configuration * @return ZkClient {@linkplain ZkClient} */ @Bean @ConditionalOnMissingBean(ZkClient.class) public ZkClient zkClient(final ZookeeperProperties zookeeperProp) { return new ZkClient(zookeeperProp.getUrl(), zookeeperProp.getSessionTimeout(), zookeeperProp.getConnectionTimeout()); } } \",\"After the soul-admin is started, it will read the zookeeper configuration information and inject zkClient into the container to establish a connection with the zookeeper. \",\"pic\",\"The afterPropertiesSet method of DataChangedEventDispatcher will be called in the call stack of the instantiated ZkClient.\",\"The org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher acts as an event router, which forwards changed events to each ConfigEventListener.\",\"This class implements the InitializingBean. During the DataChangedEventDispatcher initialization, the afterPropertiesSet method is executed.\",\"The After PropertiesSet method looks for beans in the container whose type is the DataChangedListener. Class.\",\"@Component public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { private ApplicationContext applicationContext; private List<DataChangedListener> listeners; public DataChangedEventDispatcher(final ApplicationContext applicationContext) { this.applicationContext = applicationContext; } @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; ....... default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } ...... @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } } \",\"The execution of the afterPropertiesSet method will find the instantiation of DataChangedListener. Class related classes.\",\"Role of org. Dromara. Soul. Admin. Config. Data SyncConfiguration: Data synchronization configuration class.\",\"ZookeeperData ChangedListener Data Change Listener, which is used to listen to metadata changes and then synchronize to zookeeper.\",\"ZookeeperDataInit zookeeper data initialization. Function: Synchronize initialization data to zookeeper.\",\"/** * The type Zookeeper listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.zookeeper\\\", name = \\\"url\\\") @Import(ZookeeperConfiguration.class) static class ZookeeperListener { /** * Config event listener data changed listener. * @param zkClient the zk client * @return the data changed listener */ @Bean @ConditionalOnMissingBean(ZookeeperDataChangedListener.class) public DataChangedListener zookeeperDataChangedListener(final ZkClient zkClient) { return new ZookeeperDataChangedListener(zkClient); } /** * Zookeeper data init zookeeper data init * @param zkClient the zk client * @param syncDataService the sync data service * @return the zookeeper data init */ @Bean @ConditionalOnMissingBean(ZookeeperDataInit.class) public ZookeeperDataInit zookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { return new ZookeeperDataInit(zkClient, syncDataService); } } \",\"Role of org. Dromara. Soul. Admin. Listener. Zookeeper. ZookeeperDataInit: responsible for synchronizing initialization data to zookeeper. This class implements the CommandLine Runner.\",\"CommandLine Runner: Function: SpringBoot will traverse all entity classes that implement CommandLineRunner and execute the run method after the project is started. If it needs to be executed in a certain order, Then you need to use a @ Order annotation on the entity class (or implement the Order interface) to indicate the order.\",\"The run method calls the syncData Service. SyncAll method.\",\"public class ZookeeperDataInit implements CommandLineRunner { private final ZkClient zkClient; private final SyncDataService syncDataService; /** * Instantiates a new Zookeeper data init. * @param zkClient the zk client * @param syncDataService the sync data service */ public ZookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { this.zkClient = zkClient; this.syncDataService = syncDataService; } @Override public void run(final String... args) { String pluginPath = ZkPathConstants.PLUGIN_PARENT; String authPath = ZkPathConstants.APP_AUTH_PARENT; String metaDataPath = ZkPathConstants.META_DATA; if (!zkClient.exists(pluginPath) && !zkClient.exists(authPath) && !zkClient.exists(metaDataPath)) { syncDataService.syncAll(DataEventTypeEnum.REFRESH); } } } \",\"5、org.dromara.soul.admin.service.sync.SyncDataServiceImpl\",\"The syncAll method invokes the event publisher to publish an event of DataEventTypeEnum. REFRESH.\",\"/** * The type sync data service. * @author xiaoyu(Myth) */ @Service(\\\"syncDataService\\\") public class SyncDataServiceImpl implements SyncDataService { // Publishes events, informing all listeners related to this event. private final ApplicationEventPublisher eventPublisher; ...... @Override public boolean syncAll(final DataEventTypeEnum type) { appAuthService.syncData(); List<PluginData> pluginDataList = pluginService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, type, pluginDataList)); List<SelectorData> selectorDataList = selectorService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, type, selectorDataList)); List<RuleData> ruleDataList = ruleService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.RULE, type, ruleDataList)); metaDataService.syncData(); return true; } ...... } \",\"pic\",\"After the event is published, the onApplicationEvent method of the org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher class will listen to the change of the event and traverse all listeners to synchronize the data. The listener implementation class here is ZookeeperData ChangedListener, which synchronizes data to zookeeper through zkClient according to the corresponding event type.\",\"pic\",\"Soul-admin initialization to data to zookeeper mind map\",\"pic\"]},\"157\":{\"h\":\"IV. Summary\",\"t\":[\"When the soul-admin is started, it will synchronize the gateway data rule, metaData, selector, plugin, etc. To the zookeeper. The data change will publish the DataChangedEvent event, and the listening event will synchronize the data to the zookeeper.\",\" Soul gateway data synchronization principle \"]},\"158\":{\"h\":\"Soul Gateway Learns Zookeeper Data Synchronization 02\"},\"159\":{\"h\":\"Start the admin? And Gateway. Admin operation, using zookeeper to synchronize data to the gateway\",\"t\":[\"The soul-admin previous article startup process is the entry. After analyzing the soul-admin startup, the gateway data rule, metaData, selector, plugin, etc. Will be synchronized to the zookeeper.\",\"The data change will publish the DataChangedEvent event, and the listening event will synchronize the data to the zookeeper. This article follows the previous article to continue to track the source code and analyze the principle of zookeeper synchronizing data to the gateway:\",\"Soul-admin changes the gateway data and tracks the data synchronization process.\",\"How soul-bootstrap gets zookeeper data and how it senses changes in gateway data.\"]},\"160\":{\"h\":\"1. Soul-admin changes the gateway data and tracks the data synchronization process\",\"t\":[\"Try to change the status of the divide plug-in in the background of the gateway, debug tracking.\",\"pic\",\"After the plug-in is updated, a Data ChangedEvent event will be issued.\",\"pic\",\"Org. Dromara. Soul. Admin. Listener. DataChangedEventDispatcher -- > onApplicationEvent () is responsible for listening to events.\",\"pic\",\"The org. Dromara. Soul. Admin. Listener. Zookeeper. ZookeeperData ChangedListener is responsible for synchronizing data to zookeeper.\",\"pic\"]},\"161\":{\"h\":\"2. How does soul-bootstrap get zookeeper data and how does it perceive changes in gateway data.\",\"t\":[\"Soul-bootstrap dependency\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-zookeeper</artifactId> <version>${project.version}</version> </dependency> \",\"Soul-bootstrap will automatically inject org. Dromara. Soul. Spring. Boot. Sync. Data. Zookeeper. ZookeeperSyncData Configuration after startup.\",\"Inject ZkClient into the container by reading the Zookeeper configuration.\",\"The SyncData Service injects the data synchronization service bean into the container and obtains the ZkClient (zookeeper client) from the Spring container. Plugin Subscriber, metaSubscribers, authSubscribers.\",\"public class ZookeeperSyncDataConfiguration { /** * Sync data service sync data service. * @param zkClient the zk client * @param pluginSubscriber the plugin subscriber * @param metaSubscribers the meta subscribers * @param authSubscribers the auth subscribers * @return the sync data service */ @Bean public SyncDataService syncDataService(final ObjectProvider<ZkClient> zkClient, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use zookeeper sync soul data.......\\\"); return new ZookeeperSyncDataService(zkClient.getIfAvailable(), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } /** * register zkClient in spring ioc. * @param zookeeperConfig the zookeeper configuration * @return ZkClient {@linkplain ZkClient} */ @Bean public ZkClient zkClient(final ZookeeperConfig zookeeperConfig) { return new ZkClient(zookeeperConfig.getUrl(), zookeeperConfig.getSessionTimeout(), zookeeperConfig.getConnectionTimeout()); } } \",\"Initialize the org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData Service, that is, after the soul-bootstrap is started, the data will be obtained from the zookeeper and synchronized to the memory.\",\"watcherData()--> watcherAll() --> watcherPlugin() --> cachePluginData()。\",\"The zkClient. SubscribeData Changes () monitors the modification and deletion of the contents of the current node and its child nodes.\",\"public class ZookeeperSyncDataService implements SyncDataService, AutoCloseable { private final ZkClient zkClient; private final PluginDataSubscriber pluginDataSubscriber; private final List<MetaDataSubscriber> metaDataSubscribers; private final List<AuthDataSubscriber> authDataSubscribers; /** * Instantiates a new Zookeeper cache manager. * @param zkClient the zk client * @param pluginDataSubscriber the plugin data subscriber * @param metaDataSubscribers the meta data subscribers * @param authDataSubscribers the auth data subscribers */ public ZookeeperSyncDataService(final ZkClient zkClient, final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { this.zkClient = zkClient; this.pluginDataSubscriber = pluginDataSubscriber; this.metaDataSubscribers = metaDataSubscribers; this.authDataSubscribers = authDataSubscribers; watcherData(); watchAppAuth(); watchMetaData(); } ...... private void watcherData() { final String pluginParent = ZkPathConstants.PLUGIN_PARENT; List<String> pluginZKs = zkClientGetChildren(pluginParent); for (String pluginName : pluginZKs) { watcherAll(pluginName); } zkClient.subscribeChildChanges(pluginParent, (parentPath, currentChildren) -> { if (CollectionUtils.isNotEmpty(currentChildren)) { for (String pluginName : currentChildren) { watcherAll(pluginName); } } }); } ...... private void watcherPlugin(final String pluginName) { String pluginPath = ZkPathConstants.buildPluginPath(pluginName); if (!zkClient.exists(pluginPath)) { zkClient.createPersistent(pluginPath, true); } cachePluginData(zkClient.readData(pluginPath)); subscribePluginDataChanges(pluginPath, pluginName); } } \",\"The debug process\",\"pic\"]},\"162\":{\"h\":\"3. How does soul-bootstrap sense changes in gateway data\",\"t\":[\"Put a breakpoint on the org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData ServicecacheRuleData method, update the plug-in rule, and observe whether the breakpoint is entered.\",\"private void cacheRuleData(final RuleData ruleData) { Optional.ofNullable(ruleData) .ifPresent(data -> Optional.ofNullable(pluginDataSubscriber).ifPresent(e -> e.onRuleSubscribe(data))); } \",\"Soul-admin operates in the background to change the divide plug-in rules. First, soul-admin will publish the event and listen to the event to update the data synchronously to zookeeper.\",\"pic\",\"Soul-bootstrap has indeed received an update of the plug-in data. According to the \\\"zookeeper synchronization principle\\\" introduced by Soul's official website, it mainly relies on the watch mechanism of zookeeper.\",\"Org. Dromara. Soul. Sync. Data. Zookeeper. ZookeeperSyncData Service:\",\"The zkClient. SubscribeData Changes () monitors the modification and deletion of the contents of the current node and its child nodes.\",\"zkClient.subscribeChildChanges(groupParentPath, (parentPath, currentChildren) -> { if (CollectionUtils.isNotEmpty(currentChildren)) { List<String> addSubscribePath = addSubscribePath(childrenList, currentChildren); // Get the newly added node data and subscribe to that node addSubscribePath.stream().map(addPath -> { String realPath = buildRealPath(parentPath, addPath); cacheRuleData(zkClient.readData(realPath)); return realPath; }).forEach(this::subscribeRuleDataChanges); } }); private void subscribeRuleDataChanges(final String path) { zkClient.subscribeDataChanges(path, new IZkDataListener() { @Override public void handleDataChange(final String dataPath, final Object data) { cacheRuleData((RuleData) data); } @Override public void handleDataDeleted(final String dataPath) { unCacheRuleData(dataPath); } }); } \",\"pic\"]},\"163\":{\"h\":\"IV. Summary\",\"t\":[\"pic\"]},\"164\":{\"h\":\"Soul Gateway Learns Nacos Data Synchronization\",\"t\":[\"This article analyzes the principle of Nacos data synchronization.\",\"Configure the environment first\",\"soul-adminsoul-admin/src/main/resources/application.yml\",\"soul: sync: nacos: url: localhost:8848 namespace: 1c10d748-af86-43b9-8265-75f487d20c6c # acm: # enabled: false # endpoint: acm.aliyun.com # namespace: # accessKey: # secretKey: \",\"Soul-admin/POM. XML, where the default configuration is available\",\"<dependency> <groupId>com.alibaba.nacos</groupId> <artifactId>nacos-client</artifactId> <version>${nacos-client.version}</version> </dependency> \",\"soul-bootstrapsoul-bootstrap/src/main/resources/application-local.yml\",\"soul: sync: nacos: url: localhost:8848 namespace: 1c10d748-af86-43b9-8265-75f487d20c6c # acm: # enabled: false # endpoint: acm.aliyun.com # namespace: # accessKey: # secretKey: \",\"Soul-bootstrap/POM. XML. The following configuration is not available by default and needs to be added manually\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-nacos</artifactId> <version>${project.version}</version> </dependency> \",\"Start the service\",\"1、Start nacos 2、Start soul-admin 3、Start soul-bootstrap \",\"The above looks quite smooth. This process has encountered a pit. The soul-bootstrap cannot be started and the null pointer exception is reported. The following is a detailed record. First of all, soul-admin will not actively synchronize the gateway data to nacos after it is started. It needs to be synchronized manually, which is not mentioned on the official website. This problem has been bothering me for a long time. Finally, I saw other students in the group encounter the same problem and refer to their articles to solve it. Here is a record of the solution process.\",\"Soul-bootstrap encountered the following error, NullPointerException, when starting.\",\"When the soul-bootstrap is started, it will go to nacos to get the gateway data, see the breakpoint below, and get the empty data.\",\"Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 2021-01-25 16:49:06.052 ERROR 5273 --- [ main] o.s.boot.SpringApplication : Application run failed org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'nacosSyncDataService' defined in class path resource [org/dromara/soul/springboot/starter/sync/data/nacos/NacosSyncDataConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.dromara.soul.sync.data.api.SyncDataService]: Factory method 'nacosSyncDataService' threw exception; nested exception is java.lang.NullPointerException ...... at org.dromara.soul.bootstrap.SoulBootstrapApplication.main(SoulBootstrapApplication.java:37) [classes/:na] Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.dromara.soul.sync.data.api.SyncDataService]: Factory method 'nacosSyncDataService' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] ... 19 common frames omitted Caused by: java.lang.NullPointerException: null at org.dromara.soul.sync.data.nacos.handler.NacosCacheHandler.updateMetaDataMap(NacosCacheHandler.java:128) ~[classes/:na] at org.dromara.soul.sync.data.nacos.handler.NacosCacheHandler.watcherData(NacosCacheHandler.java:167) ~[classes/:na] at org.dromara.soul.sync.data.nacos.NacosSyncDataService.start(NacosSyncDataService.java:59) ~[classes/:na] at org.dromara.soul.sync.data.nacos.NacosSyncDataService.<init>(NacosSyncDataService.java:49) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration.nacosSyncDataService(NacosSyncDataConfiguration.java:66) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7.CGLIB$nacosSyncDataService$0(<generated>) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7$$FastClassBySpringCGLIB$$3830e886.invoke(<generated>) ~[classes/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7.nacosSyncDataService(<generated>) ~[classes/:na] ...... at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] ... 20 common frames omitted \",\"pic\",\"Go to nacos to check whether there is gateway data. According to the configured \\\"namespace: 1c10d748-af86-43b9-8265-75f487d20c6c\\\", there is nothing.\",\"pic\",\"pic\",\"Try to go to soul-admin for manual synchronization, but nacos cannot see the data. You must manually create the namespace \\\"1c10d748-af86-43b9-8265-75f487d20c6c\\\", as shown in the following figure.\",\"pic\",\"Go to soul-admin to manually synchronize the data, and you will see the configuration information of the gateway on nacos. At this time, soul-bootstrap still cannot be started, because there is still a lack of metadata information. Only dubbo and spring cloud services have metadata, while HTTP does not have metadata, so we have to start the dubbo service. Then synchronize the metadata in soul-admin.\",\"pic\",\"Soul-admin Click Synchronize Data to synchronize the metadata to nacos\",\"pic\",\"Soul-admin Click Synchronize Data to synchronize the authentication data to nacos\",\"pic\",\"At this point, nacos has seen all the gateway data\",\"pic\",\"Start the soul-bootstrap again, and finally start it successfully.\",\"2021-01-25 17:56:54.798 INFO 10051 --- [ main] o.d.s.w.configuration.SoulConfiguration : load plugin:[monitor] [org.dromara.soul.plugin.monitor.MonitorPlugin] 2021-01-25 17:56:54.798 INFO 10051 --- [ main] o.d.s.w.configuration.SoulConfiguration : load plugin:[response] [org.dromara.soul.plugin.httpclient.response.WebClientResponsePlugin] 2021-01-25 17:56:54.990 INFO 10051 --- [ main] d.s.s.s.s.d.n.NacosSyncDataConfiguration : you use nacos sync soul data....... 2021-01-25 17:56:58.890 INFO 10051 --- [ main] o.s.b.a.e.web.EndpointLinksResolver : Exposing 2 endpoint(s) beneath base path '/actuator' 2021-01-25 17:56:59.758 INFO 10051 --- [ main] o.s.b.web.embedded.netty.NettyWebServer : Netty started on port(s): 9195 2021-01-25 17:56:59.764 INFO 10051 --- [ main] o.d.s.b.SoulBootstrapApplication : Started SoulBootstrapApplication in 8.401 seconds (JVM running for 9.95) \",\"Summary:\",\"After configuration, I feel that using nacos to synchronize data is not very friendly. There are many pitfalls in the configuration process. First of all, soul-admin will not actively synchronize gateway data to nacos, and manual synchronization is required. Soul-bootstrap must rely on all of the gateway configuration data soul. Plugin, soul. Selector, soul. Selector, soul. Meta, and soul. Auth. If the gateway only proxies the HTTP service (no metadata), the soul-bootstrap cannot be started. There is no detailed explanation on the official website, which is not very friendly to Xiaobai.\",\"We know that soul-admin will not automatically synchronize data to nacos after startup, and manual operation is required.\",\"Let's analyze the data synchronization process of soul-admin, nacos, and soul-bootstrap.\"]},\"165\":{\"h\":\"How does soul-admin synchronize gateway data?\",\"t\":[\"After the plug-in information is updated, a DataChangedEvent event will be released.\",\"/** * create or update plugin * @param pluginDTO {@linkplain PluginDTO} * @return rows */ @Override @Transactional(rollbackFor = Exception.class) public String createOrUpdate(final PluginDTO pluginDTO) { ...... // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, eventType, Collections.singletonList(PluginTransfer.INSTANCE.mapToData(pluginDO)))); return StringUtils.EMPTY; } \",\"The listening event processing class DataChangedEventDispatcher is responsible for calling the specific listening implementation class to process the DataChangedEvent event. The specific implementation class here is NacosData ChangedListener.\",\"org.dromara.soul.admin.listener.DataChangedEventDispatcher\",\"After the DataChangedEventDispatcher is initialized, it will execute afterPropertiesSet () to obtain all beans with DataChangedListener. Class in the container\",\" @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } \",\"After the DataChangedEventDispatcher monitors the change event, it will execute onApplicationEvent to traverse all listening classes to process the listening event. Here is NacosDataChangedListener, as shown in the following debug figure.\",\" @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { ...... case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; ...... default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } \",\"pic\",\"NacosData ChangedListener will execute onRuleChanged, and updateRuleMap will first synchronize the gateway data to the memory, and then synchronize to nacos through publishConfig.\",\"org.dromara.soul.admin.listener.nacos.NacosDataChangedListener\",\"// Execute the listening event @Override public void onRuleChanged(final List<RuleData> changed, final DataEventTypeEnum eventType) { updateRuleMap(getConfig(RULE_DATA_ID)); switch (eventType) { ...... default: changed.forEach(rule -> { List<RuleData> ls = RULE_MAP .getOrDefault(rule.getSelectorId(), new ArrayList<>()) .stream() .filter(s -> !s.getId().equals(rule.getSelectorId())) .sorted(RULE_DATA_COMPARATOR) .collect(Collectors.toList()); ls.add(rule); RULE_MAP.put(rule.getSelectorId(), ls); }); break; } publishConfig(RULE_DATA_ID, RULE_MAP); } // Synchronize to memory private void updateRuleMap(final String configInfo) { JsonObject jo = GsonUtils.getInstance().fromJson(configInfo, JsonObject.class); Set<String> set = new HashSet<>(RULE_MAP.keySet()); ...... RULE_MAP.keySet().removeAll(set); } // Synchronize to Nacos @SneakyThrows private void publishConfig(final String dataId, final Object data) { configService.publishConfig(dataId, GROUP, GsonUtils.getInstance().toJson(data)); } \",\"pic\",\"DataChangedEventDispatcher and NacosData ChangedListener Class Inheritance Relationship\",\"pic\",\"pic\",\"Summary\",\"For example, soul-admin updates the gateway data and publishes a DataChangedEvent event, and the eventPublisher. PublishEvent (new DataChangedEvent ()).\",\"The DataChange dEventDispatcher -- > onApplicationEvent () method listens to events and determines that the listening class is NacosData ChangedListener.\",\"NacosData ChangedListener -- > onRuleChanged () handles the event\",\"Synchronize to memory update RuleMap (RULE _ DATA _ ID)\",\"Sync to nacos publishConfig (RULE _ DATA _ ID, RULE _ MAP)\"]},\"166\":{\"h\":\"How does soul-bootstrap synchronize gateway data?\",\"t\":[\"Soul-bootstrap adds nacos dependency soul-spring-boot-starter-sync-data-nacos, which will automatically inject NacosSyncDataConfiguration after the service is started.\",\"org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration\",\"The NacosSyncData Service is responsible for reading and synchronizing the nacos gateway data\",\"@Configuration @ConditionalOnClass(NacosSyncDataService.class) @ConditionalOnProperty(prefix = \\\"soul.sync.nacos\\\", name = \\\"url\\\") @Slf4j public class NacosSyncDataConfiguration { // Inject the Nacos data synchronization service @Bean public SyncDataService nacosSyncDataService(final ObjectProvider<ConfigService> configService, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use nacos sync soul data.......\\\"); return new NacosSyncDataService(configService.getIfAvailable(), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } // Inject Nacos client configuration service @Bean public ConfigService nacosConfigService(final NacosConfig nacosConfig) throws Exception { Properties properties = new Properties(); ...... return NacosFactory.createConfigService(properties); } // Inject Nacos configuration @Bean @ConfigurationProperties(prefix = \\\"soul.sync.nacos\\\") public NacosConfig nacosConfig() { return new NacosConfig(); } } \",\"2、org.dromara.soul.sync.data.nacos.NacosSyncDataService\",\"Initialization executes start\",\"The watcherData is responsible for listening to the nacos gateway data\",\"UpdatePluginMap synchronize gateway data to memory\",\"public void start() { ...... watcherData(RULE_DATA_ID, this::updateRuleMap); ...... } @SneakyThrows private String getConfigAndSignListener(final String dataId, final Listener listener) { return configService.getConfigAndSignListener(dataId, GROUP, 6000, listener); } protected void watcherData(final String dataId, final OnChange oc) { Listener listener = new Listener() { @Override public void receiveConfigInfo(final String configInfo) { oc.change(configInfo); } ...... }; oc.change(getConfigAndSignListener(dataId, listener)); LISTENERS.getOrDefault(dataId, new ArrayList<>()).add(listener); } \",\"pic\",\"NacosSyncData Service Class Diagram\",\"pic\",\"Summary\",\"Soul-bootstrap starts to automatically inject NacosSyncDataConfiguration into the container\",\"The NacosSyncDataConfiguration class will inject the NacosSyncData Service into the container.\",\"NacosSyncData Service -- > start () -- > watcherData () listens to nacos and synchronizes gateway data to memory 4、watcherData() --> updatePluginMap()\"]},\"167\":{\"h\":\"Sum up\",\"t\":[\"pic\"]},\"168\":{\"h\":\"Soul Gateway Learning Plugin Chain Implementation\"},\"169\":{\"h\":\"I. Introduction\",\"t\":[\"** Plugins are the soul of Soul. **\",\"Soul uses the idea of plug-in design to realize the hot plug of plug-ins, and it is very easy to expand. Built-in rich plug-in support, authentication, current limiting, fuse, firewall and so on.\\n待补，文章内部有报错\"]},\"170\":{\"h\":\"Soul Gateway Learning Divide Plugin Source Code Interpretation\"},\"171\":{\"h\":\"Plug-in overview\",\"t\":[\"** Plug-in positioning **\",\"The divide plug-in is an HTTP forward proxy plug-in, and all HTTP requests are load balanced by the plug-in (the specific load balancing policy is specified in the rule).\",\"** Effective time **\",\"When the rpcType of the request header is HTTP and the plug-in is enabled, it will match the rules according to the request parameters, and finally be handed over to the downstream plug-in for responsive proxy invocation.\"]},\"172\":{\"h\":\"Plug-in processing flow\",\"t\":[\"First, review the general process of the request processing plug-in (AbstractSoulPlugin # execute):\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { // Get plugin data String pluginName = named(); final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); if (pluginData != null && pluginData.getEnabled()) { // Obtain selector data final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); ... // Match selector final SelectorData selectorData = matchSelector(exchange, selectors); ... // Obtain rule data final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); ... // Match rule RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { //get last rule = rules.get(rules.size() - 1); } else { rule = matchRule(exchange, rules); } ... // Execute custom processing return doExecute(exchange, chain, selectorData, rule); } // Continue executing plugin chain processing return chain.execute(exchange); } \",\"The AbstractSoulPlugin first matches the corresponding selector and rule, and then executes the custom processing of the plug-in if the match is passed.\",\"Take a look at the custom processing flow of the divide plug-in (DividePlugin # doExecute):\",\"protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { ... // Prepare rule handling object (internally holds: load balancing algorithm name, retry count, and timeout) final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // Get the list of available services for the selector final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); ... // Select the specific service instance IP to be distributed (load balancing) final String ip = Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress(); DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); ... //Set HTTP URL, timeout, and retry count String domain = buildDomain(divideUpstream); String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); exchange.getAttributes().put(Constants.HTTP_TIME_OUT, ruleHandle.getTimeout()); exchange.getAttributes().put(Constants.HTTP_RETRY, ruleHandle.getRetry()); // Continue executing downstream of the plugin chain return chain.execute(exchange); } \",\"The DividePlugin first obtains the list of available services corresponding to the selector, then performs load balancing to select the target server instance IP to be distributed, and finally sets the final URL, timeout time, and retry times for the downstream of the plug-in chain to process.\",\"** Notice **\",\"The divide plug-in itself is only responsible for selecting the server instance to be distributed according to the selector, rules, and load balancing strategy, and does not directly initiate an HTTP request to the back-end service.\"]},\"173\":{\"h\":\"Host probe\",\"t\":[\"As mentioned above, divide needs to obtain the list of services. Take a look at the obtained implementation (UpstreamCacheManager # findUpstreamListBySelectorId):\",\"public List<DivideUpstream> findUpstreamListBySelectorId(final String selectorId) { return UPSTREAM_MAP_TEMP.get(selectorId); } \",\"The list of surviving services is obtained internally through the UPSTREAM _ MAP _ TEMP.\",\"Two hash tables are maintained within the Upstream Cache Manager:\",\"UPSTREAM_MAP：\",\"The full service hash table is responsible for storing full upstream service information, where key is the selector ID, and value is the list of services using the same selector.\",\"UPSTREAM_MAP_TEMP：\",\"The temporary service hash table is responsible for storing the upstream service information of the activity, the key is the selector ID, and the value is the service list using the same selector.\",\"In the previous chapters, we mentioned that the submit method updates the UPSTREAM _ MAP and UPSTREAM _ MAP _ TEMP at the same time during data synchronization, but how to maintain the UPSTREAM _ MAP _ TEMP when the subsequent service is offline? Everything has to start with IP exploration.\"]},\"174\":{\"h\":\"3.1 Opportunity of exploration\",\"t\":[\"The time to explore is from the initialization of the Upstream Cache Manager:\",\"private UpstreamCacheManager() { // Health check switch check boolean check = Boolean.parseBoolean(System.getProperty(\\\"soul.upstream.check\\\", \\\"false\\\")); if (check) { // Start scheduled health check task new ScheduledThreadPoolExecutor(1, SoulThreadFactory.create(\\\"scheduled-upstream-task\\\", false)) .scheduleWithFixedDelay(this::scheduled, 30, Integer.parseInt(System.getProperty(\\\"soul.upstream.scheduledTime\\\", \\\"30\\\")), TimeUnit.SECONDS); } } \",\"When the Upstream Cache Manager is initialized, if the probe switch is turned on, the timed probe task will be created. Here, it is executed once every 30 seconds by default.\",\"There are two configuration parameters involved here:\",\"Soul. Upstream. Check detection switch: default value is true, and if set to false, it means no detection\",\"Soul. Upstream. ScheduledTime detection interval, 10 seconds by default\"]},\"175\":{\"h\":\"3.2. Exploration mission\",\"t\":[\"Next, let's look at the implementation of the probe task (Upstream Cache Manager # scheduled):\",\"private void scheduled() { if (UPSTREAM_MAP.size() > 0) { UPSTREAM_MAP.forEach((k, v) -> { // Perform health check List<DivideUpstream> result = check(v); if (result.size() > 0) { UPSTREAM_MAP_TEMP.put(k, result); } else { UPSTREAM_MAP_TEMP.remove(k); } }); } } \",\"The task is responsible for traversing and registering the full service hash table one by one and checking the service activity:\",\"If the survival number is greater than 0, the survival service hash table is updated\",\"Otherwise, removing the corresponding content of the survival service hash table\",\"Continue to see the service list liveness check process (Upstream Cache Manager # check):\",\"private List<DivideUpstream> check(final List<DivideUpstream> upstreamList) { List<DivideUpstream> resultList = Lists.newArrayListWithCapacity(upstreamList.size()); for (DivideUpstream divideUpstream : upstreamList) { // Check service liveness final boolean pass = UpstreamCheckUtils.checkUrl(divideUpstream.getUpstreamUrl()); if (pass) { // Update service status if (!divideUpstream.isStatus()) { divideUpstream.setTimestamp(System.currentTimeMillis()); divideUpstream.setStatus(true); ... } // Record surviving services resultList.add(divideUpstream); } else { // Update service status divideUpstream.setStatus(false); ... } } return resultList; } \",\"It is responsible for traversing the service list, checking the activity of each service according to the URL and registering the surviving services.\"]},\"176\":{\"h\":\"3.3 Activity check\",\"t\":[\"Service liveness check implementation (Upstream CheckUtils # checkUrl):\",\"public static boolean checkUrl(final String url) { ... // Check if the URL is in IP + port format if (checkIP(url)) { // Process IP and port String[] hostPort; if (url.startsWith(HTTP)) { final String[] http = StringUtils.split(url, \\\"\\\\\\\\/\\\\\\\\/\\\"); hostPort = StringUtils.split(http[1], Constants.COLONS); } else { hostPort = StringUtils.split(url, Constants.COLONS); } // Test if the host can be connected return isHostConnector(hostPort[0], Integer.parseInt(hostPort[1])); } else { // Test if the host is reachable return isHostReachable(url); } } \",\"Check if the URL is in IP + port format:\",\"If it is in IP + port format, test whether the host can be connected\",\"Otherwise, test whether the host is reachable\",\"Test whether the host is connectable (Upstream CheckUtils # isHostConnector):\",\"private static boolean isHostConnector(final String host, final int port) { try (Socket socket = new Socket()) { socket.connect(new InetSocketAddress(host, port)); } catch (IOException e) { return false; } return true; } \",\"Test IP connectivity through socket connection.\",\"Test whether the host is reachable (UpstreamCheckUtils # isHostReachable):\",\"private static boolean isHostReachable(final String host) { try { return InetAddress.getByName(host).isReachable(1000); } catch (IOException ignored) { } return false; } \",\"Non IP + port format URL Try to use domain name format to test if the host is reachable.\",\"On the whole, the server information that the divide plug-in gets from the cache comes from data synchronization and is updated regularly and actively by the probe task.\"]},\"177\":{\"h\":\"Load balancing\",\"t\":[\"As mentioned above, divide selects the service IP for final distribution through the load balancing algorithm. Let's take a look at the implementation of load balancing (LoadBalan ceUtils # selector):\",\"public static DivideUpstream selector(final List<DivideUpstream> upstreamList, final String algorithm, final String ip) { LoadBalance loadBalance = ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); return loadBalance.select(upstreamList, ip); } \",\"Internally, the Extension Loader is used to implement the SPI mechanism, and then the corresponding load balancing algorithm is loaded through the algorithm name to execute the load balancing calculation and finally distribute to the service IP.\",\"The soul gateway supports three load balancing strategies by default\",\"HASH (needs to be calculated, and there may be imbalance)\",\"RANDOM (simplest and fastest, almost average under a large number of requests)\",\"ROUND _ ROBIN (need to record the status, which has a certain impact, and there is not much difference in the results between random and polling under large data volume)\",\"The default is RANDOM random algorithm, and the algorithm processing is as follows (RandomLoadBalance # doSelect):\",\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { int totalWeight = calculateTotalWeight(upstreamList); boolean sameWeight = isAllUpStreamSameWeight(upstreamList); // If weights are inconsistent, randomize based on total weight if (totalWeight > 0 && !sameWeight) { return random(totalWeight, upstreamList); } // Randomize based on the number of services return random(upstreamList); } \",\"Judging whether the weights of the services in the service list are consistent:\",\"If the weights are not consistent, they will be randomized according to the total weight\",\"Otherwise, random by number of services\",\"Randomize details by total weight (RandomLoadBalance # random):\",\"private DivideUpstream random(final int totalWeight, final List<DivideUpstream> upstreamList) { // Generate a random number based on the total weight int offset = RANDOM.nextInt(totalWeight); // Determine which segment the random value falls into for (DivideUpstream divideUpstream : upstreamList) { offset -= getWeight(divideUpstream); if (offset < 0) { return divideUpstream; } } return upstreamList.get(0); } \"]},\"178\":{\"h\":\"Sum up\",\"t\":[\"Processing flow of divide plug-in:\",\"Get a list of available services\",\"The list of services originally came from soul-admin data synchronization\",\"By default, the list of available services is actively updated every 30 seconds.\",\"Load balancing\",\"Load balancing algorithm for loading target by extension loader\",\"Execute a specific balancing strategy\",\"Returns a final selection of service information\",\"Set the URL information of the final service\",\"To be processed downstream of the plug-in chain\"]},\"179\":{\"h\":\"Soul Gateway Learning Http Request Adventure\",\"t\":[\"In the Soul Request Processing Overview article, we learned that Soul handles requests in ** Excute of Default SoulPluginChain ** a library, where it executes a plug-in chain pattern to complete the request processing.\",\"We have generally combed the injected ** plugins ** plug-ins, but even so, we still can't see the whole picture. For this reason, we have specially combed the classes involved in the soul plug-ins. The overall results are shown in the following figure.\",\"As you can see in the teasing article, the core classes are ** SoulPlugin、PluginEnum、PluginDataHandler、MetaDataSubscriber **. In the teasing request related article, we only need to focus on the SoulPlugin and PluginEnum classes at present.\",\"Now that we have some understanding of the SoulPlugin class, what is the main purpose of the PluginEnum enumeration class?\",\"PluginEnum: An enumeration class for plug-ins\",\"Property\",\"Action\",\"code\",\"The smaller the order of plug-in execution, the earlier the execution.\",\"role\",\"The role has not found a physical reference address at this time\",\"name\",\"Plug-in name\",\"In fact, it is not difficult to find that the current ** Plugins for Default SoulPluginChain ** plug-in has a fixed order of execution, so where is the order of execution of this plug-in defined?\",\"Finally, it can be traced back to the ** SoulConfiguration ** class.\",\" public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { // ... final List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); return new SoulWebHandler(soulPlugins); } \",\"Sort out the related references of the entire PluginEnum class, and sort out the following table. It is not difficult to see the order relationship between plug-ins.\",\"Level\",\"Action\",\"Level 1\",\"Only GlobalPlugin Global Plugin\",\"Level 2 to 8\",\"It can be understood as a pre-processing plug-in before the request is initiated\",\"Level 9 to 11\",\"It can be understood as different call processing for the way of the caller.\",\"Level 12\",\"Only MonitorPlugin monitor plug-in\",\"Level 13\",\"It is a response-related plug-in for processing the results returned by each caller.\",\"In the previous review, we have already understood the general process of soul processing requests.\",\"1.GloBalPlugin performs global initialization\",\"2.Some plug-ins process the request according to rules such as authentication, current limiting, and fusing\",\"3.Select the calling mode suitable for you to assemble the parameters and initiate the call.\",\"4.Monitor\",\"5.Process the result of the call\",\"The following demo code screenshot is from the HTTP demo under soul-examples, and the interface address called is the http://127.0.0.1:9195/http/test/findByUserId?userId=10.\",\"Bury the point in the ** Excute of Default SoulPluginChain ** method to see what classes an HTTP request call goes through?\",\"public Mono<Void> execute(final ServerWebExchange exchange) { return Mono.defer(() -> { if (this.index < plugins.size()) { SoulPlugin plugin = plugins.get(this.index++); Boolean skip = plugin.skip(exchange); if (skip) { System.out.println(\\\"Skipped plugin: \\\"+plugin.getClass().getName().replace(\\\"org.dromara.soul.plugin.\\\",\\\"\\\")); return this.execute(exchange); } System.out.println(\\\"Not skipped plugin: \\\"+plugin.getClass().getName().replace(\\\"org.dromara.soul.plugin.\\\",\\\"\\\")); return plugin.execute(exchange, this); } return Mono.empty(); }); } \",\"The unskipped plug-ins for the final output are as follows:\",\"Plug-ins that are not skipped are global. Global Plugin. Plug-ins that are not skipped are sign. SignPlugin. Plug-ins that are not skipped are WAF. WafPlugin. Plug-ins that are not skipped are ratelimiter. Rate LimiterPlugin. Plug-ins that are not skipped are hystrix. Hystrix Plugin. The plug-in that was not skipped was resilience4j.Resilience4JPlugin Plug-ins that are not skipped are divide. DividePlugin. Plug-ins that are not skipped are HTTP client. Web ClientPlugin. Plug-ins that are not skipped are Alibaba. Dubbo. Param. Body ParamPlugin. Plug-ins that are not skipped are monitor. MonitorPlugin. Plug-ins that are not skipped are HTTP client. Response. Web ClientResponsePlugin. \",\"Here is a little puzzle, why this Alibaba. Dubbo. Param. BodyParamPlugin plug-in will be executed, temporarily ignored, and tracked later.\",\"We found that the general flow of the plug-in executed by a gateway call for an HTTP request was consistent with our guess. For now, let's just pick the key points, namely ** GlobalPlugin、DividePlugin、WebClientPlugin、WebClientResponsePlugin **.\",\"Initiate a Debug call to track the actions of each of the four plug-ins in turn.\"]},\"180\":{\"h\":\"Global Plugin SoulContext Object Wrapper\",\"t\":[\"The plug-in's excute method for GlobalPlugin looks like this\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { final ServerHttpRequest request = exchange.getRequest(); final HttpHeaders headers = request.getHeaders(); final String upgrade = headers.getFirst(\\\"Upgrade\\\"); SoulContext soulContext; if (StringUtils.isBlank(upgrade) || !\\\"websocket\\\".equals(upgrade)) { soulContext = builder.build(exchange); } else { final MultiValueMap<String, String> queryParams = request.getQueryParams(); soulContext = transformMap(queryParams); } exchange.getAttributes().put(Constants.CONTEXT, soulContext); return chain.execute(exchange); } \",\"It is not difficult to see that the main purpose of the excute method of GlobalPlugin is to encapsulate an ** The SoulContext object ** exchange object and put it into the exchange (the exchange object is a shared object on the entire plug-in chain, and after a plug-in is executed, it is passed to the next plug-in. I understand it as a ThreadLocal-like object.\",\"So what are the properties of the SoulContext object?\",\"property\",\"Meaning\",\"module\",\"Each RPCType has a different value for the preceding address of the gateway call when HTTP is called.\",\"method\",\"Method name after cutting (when RpcType is HTTP)\",\"rpcType\",\"RPC call types include Http, dubbo, sofa, and so on\",\"httpMethod\",\"Http calls currently only support get, post,\",\"sign\",\"Currently, we do not know the specific function of the authentication related attributes, which may be related to the SignPlugin plug-in.\",\"timestamp\",\"Timestamp\",\"appKey\",\"Currently, we do not know the specific function of the authentication related attributes, which may be related to the SignPlugin plug-in.\",\"path\",\"Path refers to the full path of the call to the soul Gateway (when RpcType is HTTP)\",\"contextPath\",\"Consistent with module value (when RPCType is HTTP)\",\"realUrl\",\"Consistent with the value of method (when RpcType is HTTP)\",\"dubboParams\",\"Parameters for dubbo?\",\"startDateTime\",\"The start time is suspected to be combined with the monitoring plug-in and the statistical indicator module.\",\"After executing the Global Plugin, the final encapsulated SoulContext object looks like this. \",\"The parameter encapsulation of SoulContext of other RPCTypes can be traced by viewing the ** DefaultSoulContext Builder build ** method. Since this article mainly traces HTTP calls, it is not redundant to discuss here.\"]},\"181\":{\"h\":\"DividePlugin Routing Plugin\",\"t\":[\"After the GlobalPlugin plug-in is executed, it is finally packaged into one ** The SoulContext object ** and placed in ** ServerWebExchange ** for use by the downstream call chain.\",\"Next, let's take a look ** Divide Plugin ** at what kind of role it plays in the whole chain call process?\"]},\"182\":{\"h\":\"AbstractSoulPlugin\",\"t\":[\"By tracing back to the source code ** The DividePlugin plug-in inherits from the AbstractSoulPlugin class, which implements the SoulPlugin interface **.\",\"So ** AbstractSoulPlugin ** what extensions have been made? Let's tease out the methods of this class.\",\"method\",\"Action\",\"excute\",\"Implemented in the SoulPlugin interface, plays a role ** The role of the template approach ** in AbstractSoulPlugin\",\"doexcute\",\"Implemented ** Abstract method ** by various subclasses\",\"matchSelector\",\"Match selector\",\"filterSelector\",\"Filter selector\",\"matchRule\",\"Matching rules\",\"filterRule\",\"Filter rules\",\"handleSelectorIsNull\",\"Handle null selector case\",\"handleRuleIsNull\",\"Handle null rule case\",\"selectorLog\",\"Selector log printing\",\"ruleLog\",\"Rule log printing\",\"Look at ** excute ** the specific function of the method.\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String pluginName = named(); // Obtain corresponding plugin final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); // Check if the plugin is enabled if (pluginData != null && pluginData.getEnabled()) { // Obtain all selectors under the plugin final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); if (CollectionUtils.isEmpty(selectors)) { return handleSelectorIsNull(pluginName, exchange, chain); } // Match selector final SelectorData selectorData = matchSelector(exchange, selectors); if (Objects.isNull(selectorData)) { return handleSelectorIsNull(pluginName, exchange, chain); } // Log selector selectorLog(selectorData, pluginName); final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); if (CollectionUtils.isEmpty(rules)) { return handleRuleIsNull(pluginName, exchange, chain); } RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { rule = rules.get(rules.size() - 1); } else { // Match rule rule = matchRule(exchange, rules); } if (Objects.isNull(rule)) { return handleRu![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f523f655f0014d288b7a4502cc6a08d1~tplv-k3u1fbpfcp-watermark.image)leIsNull(pluginName, exchange, chain); } // Log rule ruleLog(rule, pluginName); // Execute subclass-specific implementation return doExecute(exchange, chain, selectorData, rule); } return chain.execute(exchange); } \",\"The final flow chart is as follows: \",\"PS: In the above flow chart, there is no specific method-level processing.\",\"However, there are still several points that need to be explained:\",\"1.The plug-in data, selector data, and rule data are all obtained from ** BaseDataCache **. This class is the class that will be affected in the data synchronization process.\",\"2.Selector type. When the SpringMvc project is used to register an interface, an isFull option will be set to true to represent the global proxy. In the global proxy mode, only one selector \\\\ rule (referring to all interfaces of the proxy) will be registered, so the corresponding processing here is rule. Size () -1.\",\"3.For the selection of selector and rule, the actual processing is much more complicated. Considering that it is to introduce the general logic of a request process, it will not be elaborated here. If you are interested, you can check it ** Match Strategy, AbstractMatchStrategy and their related implementation classes ** (a separate article will be explained later). The corresponding page here is as follows: \",\"To sort out ** Exeute method of AbstractSoulPlugin ** the function, after the guidance of the above flow chart, we already know that the function of this method is to select the plug-in -- > select the selector -- > select the rule, and finally hand over to the method of the ** doexcute ** subclass.\",\"Next, let's take a ** The doexcute of DividePlugin ** look at what the method does.\"]},\"183\":{\"h\":\"DividePlugin\",\"t\":[\"protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // Obtain rule handling data final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // Obtain injected addresses under this selector final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); if (CollectionUtils.isEmpty(upstreamList)) { log.error(\\\"divide upstream configuration error： {}\\\", rule.toString()); Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } final String ip = Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress(); // Choose an address based on the load balancing strategy corresponding to the rule DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); if (Objects.isNull(divideUpstream)) { log.error(\\\"divide has no upstream\\\"); Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // set the http url String domain = buildDomain(divideUpstream); // Assemble the real calling address String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); // Set timeout and retry count exchange.getAttributes().put(Constants.HTTP_TIME_OUT, ruleHandle.getTimeout()); exchange.getAttributes().put(Constants.HTTP_RETRY, ruleHandle.getRetry()); return chain.execute(exchange); } \",\"After the above code is sorted out, the general logic is as follows:\",\"1.Obtain the registration address corresponding to the selector, and the corresponding page data is as follows \",\"2.Obtain the load balancing policy according to the handle field of the rule, and select the real call address (** LoadBalanceUtils **), retry times and timeout time. The corresponding page data is as follows. \",\"3.The real call address, timeout, and number of retries are passed to ** ServerWebExchange ** for use by the downstream call chain. Demo of debug: PS: We don't see where the parameters are in the above theme logic? Where is this parameter encapsulated? The answer ** In the build RealURL method ** is obtained from ** exchange ** the context.\"]},\"184\":{\"h\":\"Web ClientPlugin Http request calling plug-in\",\"t\":[\"Next, let's look at how Soul initiates the request call.\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // Obtain the real address String urlPath = exchange.getAttribute(Constants.HTTP_URL); if (StringUtils.isEmpty(urlPath)) { Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // Obtain the timeout period long timeout = (long) Optional.ofNullable(exchange.getAttribute(Constants.HTTP_TIME_OUT)).orElse(3000L); // Obtain the retry count int retryTimes = (int) Optional.ofNullable(exchange.getAttribute(Constants.HTTP_RETRY)).orElse(0); log.info(\\\"The request urlPath is {}, retryTimes is {}\\\", urlPath, retryTimes); HttpMethod method = HttpMethod.valueOf(exchange.getRequest().getMethodValue()); WebClient.RequestBodySpec requestBodySpec = webClient.method(method).uri(urlPath); return handleRequestBody(requestBodySpec, exchange, timeout, retryTimes, chain); } \",\"In the web Client ** excute ** method, three things are done\",\"1.Take out the properties you put into exchange from the Divide plugin. ** Real address of the call, timeout, number of retries **.\",\"2.Encapsulates an ** RequestBodySpec ** object (something that doesn't recognize responsive programming)\",\"3.A ** handleRequestBody ** method was called\",\"Know ** handleRequestBody ** the method first\",\"private Mono<Void> handleRequestBody(final WebClient.RequestBodySpec requestBodySpec, final ServerWebExchange exchange, final long timeout, final int retryTimes, final SoulPluginChain chain) { return requestBodySpec.headers(httpHeaders -> { httpHeaders.addAll(exchange.getRequest().getHeaders()); httpHeaders.remove(HttpHeaders.HOST); }) .contentType(buildMediaType(exchange)) .body(BodyInserters.fromDataBuffers(exchange.getRequest().getBody())) .exchange() // Log on failure .doOnError(e -> log.error(e.getMessage())) // Set timeout .timeout(Duration.ofMillis(timeout)) // Set request retry strategy .retryWhen(Retry.onlyIf(x -> x.exception() instanceof ConnectTimeoutException) .retryMax(retryTimes) .backoff(Backoff.exponential(Duration.ofMillis(200), Duration.ofSeconds(20), 2, true))) // Handle after request completes .flatMap(e -> doNext(e, exchange, chain)); } \",\"In this method, it can be generally understood as\",\"The request header from exchange is placed in the request header for this call.\",\"Set the contentType\",\"Set the timeout\",\"Set the failure response\",\"Set the retry scenario and retry times\",\"Processing of final results. Need to see another one ** The doNext method ** in the process\",\"The general logic is to determine whether the request is successful or not, and put the result of the request into exchange for the downstream plug-in to process.\",\"private Mono<Void> doNext(final ClientResponse res, final ServerWebExchange exchange, final SoulPluginChain chain) { if (res.statusCode().is2xxSuccessful()) { exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.SUCCESS.getName()); } else { exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.ERROR.getName()); } exchange.getAttributes().put(Constants.CLIENT_RESPONSE_ATTR, res); return chain.execute(exchange); } \",\"PS: Although we don't understand responsive programming, it doesn't affect us to read the code.\"]},\"185\":{\"h\":\"Web ClientResponsePlugin Http Result Processing Plug-in\",\"t\":[\"The excute method of this implementation has no core logic, which is to judge the status code of the request and return different data formats to the front end according to the status code.\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { ServerHttpResponse response = exchange.getResponse(); ClientResponse clientResponse = exchange.getAttribute(Constants.CLIENT_RESPONSE_ATTR); if (Objects.isNull(clientResponse) || response.getStatusCode() == HttpStatus.BAD_GATEWAY || response.getStatusCode() == HttpStatus.INTERNAL_SERVER_ERROR) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } if (response.getStatusCode() == HttpStatus.GATEWAY_TIMEOUT) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_TIMEOUT.getCode(), SoulResultEnum.SERVICE_TIMEOUT.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } response.setStatusCode(clientResponse.statusCode()); response.getCookies().putAll(clientResponse.cookies()); response.getHeaders().putAll(clientResponse.headers().asHttpHeaders()); return response.writeWith(clientResponse.body(BodyExtractors.toDataBuffers())); })); } \",\"At this point, an Http request call based on the Soul gateway is largely over.\",\"Combing HTTP request call flow\",\"Global Plugin encapsulates the Soul Context object\",\"The front plug-in handles operations such as fusing and current-limiting authentication.\",\"The Divide plug-in selects the real address of the corresponding call, the number of retries, and the timeout period.\",\"The Web Client plug-in makes the actual Http call\",\"The Web ClientResponse plug-in processes the corresponding result and returns to the foreground.\",\"Based on the general flow of Http calls, we can roughly guess that the flow based on other RPC calls is to replace the plug-in that initiates the request and the plug-in that returns the result processing.\",\"In the above, we also mentioned the selection ** LoadBalanceUtils ** of routing rules, selectors and the processing ** MatchStrategy ** of rules.\",\"After that, a new chapter will be opened to unveil the mystery of RPC generalization call, routing, selector and rule matching step by step.\"]},\"186\":{\"h\":\"Soul Gateway Learning RateLimiter Plugin\"},\"187\":{\"h\":\"Review\",\"t\":[\"In the previous article on HTTP requests, the processing flow of Soul plug-ins was generally combed, and the specific functions of DividePlugin, GlobalPlugin, WebClientPlugin and WebCilent ResponsePlugin plug-ins were also learned. In the process of sorting out, it is found that there ** Order of precedence ** are Soul plug-ins, and many pre-plug-in operations have been done before the DividePlugin plug-in, which includes the topics ** Rate LimiterPlugin ** we analyzed in this chapter (one of them).\"]},\"188\":{\"h\":\"Learn to use\"},\"189\":{\"h\":\"Read the official documents to have a general understanding of it.\",\"t\":[\"The rate Limiter plug-in\",\"Through the reading of official documents, we know the ** RateLimiterPlugin ** two core points ** Speed, capacity **.\",\"The following explanation comes from the official document.\",\"Capacity: is the maximum number of requests a user is allowed to execute in one second. This is the number of tokens the token bucket can hold.\",\"Rate: This is how many requests per second you allow the user to execute and any requests that are dropped. This is the fill rate of the token bucket.\",\"It can be seen that ** RateLimiterPlugin ** the core of current limiting lies in ** Token bucket algorithm ** its implementation.\",\"PS: There are four common implementations ** Token bucket algorithm ** of the current limiting algorithm, ** Funnel algorithm **, ** Counter (fixed window) algorithm **, ** Sliding window algorithm **. See the corresponding blog introduction for details.\"]},\"190\":{\"h\":\"Initial use\"},\"191\":{\"h\":\"Enable the corresponding plug-in\",\"t\":[\"At the Soul gateway ** System Management-Plug-in Management **, change the status to the enabled status. Note that redis related configuration needs to be filled in here. The Soul token bucket is based on redis.\",\"Why is Soul's token bucket algorithm based on redis?\",\"In the case of cluster deployment, the token bucket algorithm of a single machine can not meet the current limiting function in the cluster state.\"]},\"192\":{\"h\":\"Add current limit selectors, rules,\",\"t\":[\"At the Soul Gateway ** List of plug-ins **, select rate _ limiter to add the rule and selector configuration. If you don't know how to add it, you can read the matching logic of the selector \\\\ rule first. The capacity and rate added here are both 1, mainly to verify whether the plug-in is enabled.\"]},\"193\":{\"h\":\"Interface corresponding access\",\"t\":[\"Call http://127.0.0.1:9195/http/test/findByUserId?userId=10 to access. When the rate is higher than 1, the following interface returns the result, which means the plug-in is successfully used.\",\"{ \\\"code\\\": 429, \\\"message\\\": \\\"You have been restricted, please try again later!\\\", \\\"data\\\": null } \"]},\"194\":{\"h\":\"Source Code Reading Read the source code with questions\"},\"195\":{\"h\":\"How to ensure that the redis configuration takes effect immediately after the page is modified, and the corresponding redis connection in the background is changed immediately.\",\"t\":[\"The answer is that natural data synchronization is closely related.\",\"When modifying the configuration of the plug-in, an event notification of plug-in data change is also issued. When combing the overall process of Soul Gateway synchronization data, it has been known that the modified plug-in data not only changes the data in the JVM cache, but also distributes the corresponding plug-in. As shown in the following figure , for ** RateLimiterPlugin ** the interface that is mainly implemented ** handlePlugin **, what exactly does this corresponding implementation do?\",\"The specific method is as follows ** Rate LimiterPluginData Handler handlerPlugin **.\",\"public void handlerPlugin(final PluginData pluginData) { if (Objects.nonNull(pluginData) && pluginData.getEnabled()) { // Load rate limiting plugin configuration RateLimiterConfig rateLimiterConfig = GsonUtils.getInstance().fromJson(pluginData.getConfig(), RateLimiterConfig.class); // Check if Redis connection value needs to be reloaded if (Objects.isNull(Singleton.INST.get(ReactiveRedisTemplate.class)) || Objects.isNull(Singleton.INST.get(RateLimiterConfig.class)) || !rateLimiterConfig.equals(Singleton.INST.get(RateLimiterConfig.class))) { LettuceConnectionFactory lettuceConnectionFactory = createLettuceConnectionFactory(rateLimiterConfig); lettuceConnectionFactory.afterPropertiesSet(); RedisSerializer<String> serializer = new StringRedisSerializer(); RedisSerializationContext<String, String> serializationContext = RedisSerializationContext.<String, String>newSerializationContext().key(serializer).value(serializer).hashKey(serializer).hashValue(serializer).build(); ReactiveRedisTemplate<String, String> reactiveRedisTemplate = new ReactiveRedisTemplate<>(lettuceConnectionFactory, serializationContext); Singleton.INST.single(ReactiveRedisTemplate.class, reactiveRedisTemplate); Singleton.INST.single(RateLimiterConfig.class, rateLimiterConfig); } } } \",\"There are several key points in the above code:\",\"In the above code, the configuration of the current limiting plug-in and the corresponding redisTemplate instance are put into the corresponding map of the Singleton. INST.\",\"When the plug-in data is received, judging whether a redis connection instance and a current limiting configuration instance exist, judging whether the current current limiting configuration instance is consistent with the transmitted current limiting instance, if not, considering that the configuration is changed, and re-initializing the current limiting instance and the connection pool instance to be put into the map of the Singleton. INST, Hot deployment of changes to the redis configuration is thus guaranteed.\",\"The code in the if judgment is encapsulated into a corresponding redis connection pool based on SpringDataRedis.\",\"The PS: Singleton. INST is a singleton pattern implemented by enumeration.\"]},\"196\":{\"h\":\"How is the current limiting plug-in implemented at the bottom?\"},\"197\":{\"h\":\"Debug call chain\",\"t\":[\"** RateLimiterPlugin ** Because of the need to limit the flow of specific rules, it is still implemented ** AbstractSoulPlugin **, and the methods and functions that have been ** An excute of AbstractSoulPlugin ** combed before are still used, so I will not repeat the explanation here. You can watch the Http call process . Deepen the impression of this class.\",\"The focus of this section is to see what specific ** doexcute ** methods have done.\",\" protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final String handle = rule.getHandle(); final RateLimiterHandle limiterHandle = GsonUtils.getInstance().fromJson(handle, RateLimiterHandle.class); return redisRateLimiter.isAllowed(rule.getId(), limiterHandle.getReplenishRate(), limiterHandle.getBurstCapacity()) .flatMap(response -> { if (!response.isAllowed()) { // Return error message with 429 error code exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); Object error = SoulResultWrap.error(SoulResultEnum.TOO_MANY_REQUESTS.getCode(), SoulResultEnum.TOO_MANY_REQUESTS.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } return chain.execute(exchange); }); } \",\"In the above code, it can be seen that whether the token is successfully obtained is judged by ** redisRateLimiter.isAllowed **. The method is as follows\",\" public Mono<RateLimiterResponse> isAllowed(final String id, final double replenishRate, final double burstCapacity) { if (!this.initialized.get()) { throw new IllegalStateException(\\\"RedisRateLimiter is not initialized\\\"); } // Get the Redis key List<String> keys = getKeys(id); //The parameters required for encapsulating the execution of a Lua script. The first parameter is the rate, the second parameter is the capacity, the third parameter is the current 10-digit timestamp, and the fourth parameter is a fixed value of 1, which represents the number of tokens requested. List<String> scriptArgs = Arrays.asList(replenishRate + \\\"\\\", burstCapacity + \\\"\\\", Instant.now().getEpochSecond() + \\\"\\\", \\\"1\\\"); //Execute the Lua script Flux<List<Long>> resultFlux = Singleton.INST.get(ReactiveRedisTemplate.class).execute(this.script, keys, scriptArgs); return resultFlux.onErrorResume(throwable -> Flux.just(Arrays.asList(1L, -1L))) .reduce(new ArrayList<Long>(), (longs, l) -> { longs.addAll(l); return longs; }).map(results -> { //'allowed' indicates the execution result (1 for success) boolean allowed = results.get(0) == 1L; Long tokensLeft = results.get(1); RateLimiterResponse rateLimiterResponse = new RateLimiterResponse(allowed, tokensLeft); log.info(\\\"RateLimiter response:{}\\\", rateLimiterResponse.toString()); return rateLimiterResponse; }).doOnError(throwable -> log.error(\\\"Error determining if user allowed from redis:{}\\\", throwable.getMessage())); } \"]},\"198\":{\"h\":\"Method get Keys (ID)\",\"t\":[\"This method is to obtain the keys that redis needs to operate. Two types of keys are obtained in the following format:\",\"The particularly long number in the middle is ** Rule ID **, because the smallest granularity of the current limit is the rule.\",\"The first timestamp record I ** Timestamp of the last call **\",\"The second token records that ** The number of tokens remaining after the last call was completed **\"]},\"199\":{\"h\":\"execute(this.script, keys, scriptArgs）\",\"t\":[\"Executing the Lua script keys passes the return value of getKeys (ID), and scriptArgs passes the required parameters\",\"By reading the above code, we know that the specific implementation of the current limit rule is handed over to the specific Lua script.\",\"PS: It needs to be reminded here that the current limiting algorithm is a token bucket algorithm. There are two general implementations of the token bucket algorithm. One is that a thread continuously generates tokens. When a request comes in, it first obtains tokens from the corresponding queue. However, this token generation method will consume a lot of performance when the threshold is set to be particularly large. Therefore, there is a second token bucket algorithm, The number of tokens is calculated in real time as they are acquired, and soul is based on the second implementation.\"]},\"200\":{\"h\":\"Analysis of Lua Current Limiting Algorithm\",\"t\":[\"-- Key to store the remaining token count for the current rule local tokens_key = KEYS[1] -- Key for the timestamp of the last call for the current rule local timestamp_key = KEYS[2] -- Rate local rate = tonumber(ARGV[1]) -- Capacity local capacity = tonumber(ARGV[2]) -- Current timestamp local now = tonumber(ARGV[3]) -- Value is 1 local requested = tonumber(ARGV[4]) -- Calculate fill time by dividing capacity by rate local fill_time = capacity/rate -- Calculate TTL by rounding down fill time * 2 local ttl = math.floor(fill_time*2) -- Get the current token count local last_tokens = tonumber(redis.call(\\\"get\\\", tokens_key)) if last_tokens == nil then -- Set token count to the configured capacity if it's not present last_tokens = capacity end -- Get the timestamp of the last call local last_refreshed = tonumber(redis.call(\\\"get\\\", timestamp_key)) if last_refreshed == nil then last_refreshed = 0 end -- Calculate the time difference between the last call and the current call local delta = math.max(0, now-last_refreshed) -- Calculate the current remaining token count local filled_tokens = math.min(capacity, last_tokens+(delta*rate)) -- Check if there are enough tokens (at least 1) available local allowed = filled_tokens >= requested local new_tokens = filled_tokens local allowed_num = 0 if allowed then -- Consume one token new_tokens = filled_tokens - requested allowed_num = 1 end -- Use setex to set the key's TTL and new value redis.call(\\\"setex\\\", tokens_key, ttl, new_tokens) redis.call(\\\"setex\\\", timestamp_key, ttl, now) return { allowed_num, new_tokens } \",\"It is recommended to understand the role of Lua ** KEYS ARGS ** and the understanding of keys [1] and argv [1] in redis Lua.\",\"The overall logic of the Lua code is still very clear, and I can't explain it in detail here. The code comments have been completed.\",\"I have two doubts here.\",\"Is the calculation of the ** ttl ** parameter multiplied by 2 for fear that it is not an integer? , so the \\\\ * 2 take the minimum operation?\",\"Is last _ tokens + (* Rate), where the delta parameter is the subtraction of two ten-bit timestamps, but the rate is generated in seconds, shouldn't it be last _ tokens + ( (delta/1000)? * deltarate) the core code for the calculation of ** filled_tokens ** parameters?\"]},\"201\":{\"h\":\"Soul Gateway Learning Redirect Plugin\",\"t\":[\"When the Soul gateway makes a proxy call to the target service, it can use redirect the plug-in to redirect the request. There are two scenarios: one is to redirectUrl configure it as a third-party URL address and directly use 308 it to forward and jump, and the other is redirectUrl to forward the configuration beginning with / to the gateway itself.\"]},\"202\":{\"h\":\"Plug-in configuration\",\"t\":[\"In soul-admin – > Plug-in Management – > redirect, set to on.\",\"Dependencies added redirectmaven in soul-bootstrap the project's pom.xml files.\",\"Set the selector rule in the soul- admin background. Only the matching request will be forwarded and redirected. Please see for details: Selector and Rule Configuration.\"]},\"203\":{\"h\":\"Maven dependency\",\"t\":[\"Add the plug-in dependency in the soul-bootstrap project pom.xml file.\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-redirect</artifactId> <version>${last.version}</version> </dependency> \"]},\"204\":{\"h\":\"Scenes\",\"t\":[\"As the name implies, redirect a plug-in is uri a redirection and redirection of.\"]},\"205\":{\"h\":\"Redirect\",\"t\":[\"When we Rule configure the custom path, it should be a reachable service path.\",\"When the request is matched, the service jump will be performed 308 according to the user-defined path Soul gateway.\",\"Redirect configuration\"]},\"206\":{\"h\":\"Gateway self-interface forwarding\",\"t\":[\"When the matching rules are met, the service internally forwards using DispatcherHandler the internal interface.\",\"To realize the gateway's own interface forwarding, we need to start with the prefix in the configuration path /. The specific configuration is shown in the following figure.\",\"Self-interface forwarding\"]},\"207\":{\"h\":\"Source Code Parsing\",\"t\":[\"Before parsing redirect the redirect source code, it's important to understand that the Soul Gateway is based on the SpringBoot WebFlux implementation, where WebFlux requests are handled by default DispatcherHandler if nothing is configured by default. This is the responsive MVC processing core. Take a look at the initialization:\",\"protected void initStrategies(ApplicationContext context) { Map<String, HandlerMapping> mappingBeans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerMapping.class, true, false); ArrayList<HandlerMapping> mappings = new ArrayList(mappingBeans.values()); AnnotationAwareOrderComparator.sort(mappings); // handlerMapping related this.handlerMappings = Collections.unmodifiableList(mappings); Map<String, HandlerAdapter> adapterBeans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerAdapter.class, true, false); // handlerAdapter related this.handlerAdapters = new ArrayList(adapterBeans.values()); AnnotationAwareOrderComparator.sort(this.handlerAdapters); Map<String, HandlerResultHandler> beans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerResultHandler.class, true, false); // resultHandler related this.resultHandlers = new ArrayList(beans.values()); AnnotationAwareOrderComparator.sort(this.resultHandlers); } \",\"After that, we are familiar with the MVC core processing DispatcherHandler#handle method.\",\"public Mono<Void> handle(ServerWebExchange exchange) { return this.handlerMappings == null ? this.createNotFoundError() : Flux.fromIterable(this.handlerMappings).concatMap((mapping) -> { return mapping.getHandler(exchange); }).next().switchIfEmpty(this.createNotFoundError()).flatMap((handler) -> { return this.invokeHandler(exchange, handler); }).flatMap((result) -> { return this.handleResult(exchange, result); }); } \",\"To figure out how to handle it by default DispatcherHandler, let's talk about Soul Gateway, SoulWebHandler which implements the WebHandler interface. And then BeanName replace that previously DispatcherHandler registered default proces handler with the declaration webHandler.\",\"@Bean(\\\"webHandler\\\") public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { List<SoulPlugin> pluginList = plugins.getIfAvailable(Collections::emptyList); List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); soulPlugins.forEach(soulPlugin -> log.info(\\\"load plugin:[{}] [{}]\\\", soulPlugin.named(), soulPlugin.getClass().getName())); return new SoulWebHandler(soulPlugins); } \",\"So far, we understand that the default request has been SoulWebHandler#handle processed. What if we need to forward it to the gateway itself MVC? The following is DispatcherHandler injected during initialization RedirectPlugin, and then DispatcherHandler distributed according to the specific request. The specific core code is as follows:\",\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final String handle = rule.getHandle(); final RedirectHandle redirectHandle = GsonUtils.getInstance().fromJson(handle, RedirectHandle.class); if (Objects.isNull(redirectHandle) || StringUtils.isBlank(redirectHandle.getRedirectURI())) { log.error(\\\"uri redirect rule can not configuration: {}\\\", handle); return chain.execute(exchange); } // Handle self-forwarding paths starting with \\\"/\\\" if (redirectHandle.getRedirectURI().startsWith(ROOT_PATH_PREFIX)) { ServerHttpRequest request = exchange.getRequest().mutate() .uri(Objects.requireNonNull(UriUtils.createUri(redirectHandle.getRedirectURI()))).build(); ServerWebExchange mutated = exchange.mutate().request(request).build(); return dispatcherHandler.handle(mutated); } else { // Perform a 308 redirect ServerHttpResponse response = exchange.getResponse(); response.setStatusCode(HttpStatus.PERMANENT_REDIRECT); response.getHeaders().add(HttpHeaders.LOCATION, redirectHandle.getRedirectURI()); return response.setComplete(); } } \"]},\"208\":{\"h\":\"Reference link:\",\"t\":[\" Design of Spring Web Flux and Analysis of Its Operation Principle \",\" Spring Web Flux operation principle \"]},\"209\":{\"h\":\"Soul Gateway Learning Sentinel Plugin\",\"t\":[\"Fuse and flow control are very necessary functions in the service gateway. The soul uses different mature components to implement this part of the function, and users can choose according to their preferences. This article will introduce how to use the Sentinel component of Ali to realize the fuse and flow control functions in soul. This article will first introduce the scenario and significance of fuse and flow control. It then describes how to configure the use of the sentinel plug-in for flow control and fusing on the soul. Finally, it briefly analyzes how soul uses the Sentinel component from the source code level.\"]},\"210\":{\"h\":\"Scene description\",\"t\":[\"As the entrance of the traffic, the service gateway has the responsibility to protect the subsequent services. The following two scenarios that are seriously harmful to services are often encountered in production, and they are also issues that business gateways must pay attention to. One situation is that during large-scale promotions such as Double 11 or Double 12, the request volume of the interface is several times higher than usual. If the capacity is not well evaluated, this surge of requests can easily lead to the complete unavailability of the entire service. This kind of downtime is often caused not by loopholes in business logic, but by too many requests and insufficient resources. Another situation is that there are some core services in the whole service system, and multiple business processes depend on this service. However, all services have unstable processing or service damage, resulting in long request processing time or frequent exceptions. Excluding the case of business BUG, it may be a sudden and very random block. Generally, it will be automatically repaired if the request volume is slowed down, but if it is not protected, there will be a domino effect that causes the entire service to be unavailable. This scenario is slightly different from the first scenario, in which the actual traffic does have an unmanageable peak, while the second scenario mainly considers the chain reaction caused by the inevitable and unpredictable jitter of the service itself.\"]},\"211\":{\"h\":\"Flow control\",\"t\":[\"For the first scenario, our usual practice is to carry out flow control. The core idea is that the service gateway ensures that the number of requests to the back is the amount that the service can bear. The redundant requests are directly rejected or added to the waiting queue to ensure that the service will not be suspended, and most of the requests can still be processed normally. When considering the strategy of flow control, we should mainly consider the following questions:\",\"By what angle is the flow controlled?\",\"What is the threshold?\",\"What is the flow control strategy?\",\"For the first problem, the normal idea is to monitor traffic through QPS, that is, flow control when the number of requests per second exceeds a certain limit. But in fact, there is another way to monitor traffic from the number of concurrency. This control scenario is also very meaningful. For example, when the downstream application causes service instability and response delay increase for some reason, it means that the throughput of the gateway decreases and more threads are occupied. In extreme cases, it even leads to the exhaustion of the thread pool. In a sense, flow control through concurrency can protect the gateway service itself to a certain extent. For the second question, the threshold is easy to understand, which is the boundary of triggering flow control. If we consider from QPS, it is how many times per second to start flow control. If we consider from the number of concurrency, it is how many times the number of threads requesting context exceeds. For the third problem, we generally have the following three solutions:\",\"Reject directly. This strategy is well understood as rejecting the service directly when the QPS is above the threshold without transmitting the request to a subsequent service.\",\"This strategy is aimed at the scenario that when the system is in a low water level for a long time, there may be a sudden increase in flow, and directly pulling the system to a high water level may instantly crush the system. The way to start preheating is to slowly increase the threshold, gradually increase the threshold within a certain period of time until it reaches the setting, and give the cold system a preheating time to avoid the cold system being crushed. Requests that exceed the threshold are also rejected.\",\"Queuing at a constant speed. The core idea of this strategy is to let requests pass at fixed intervals. When a request comes, if the time interval between the current request and the last passed request is not less than a preset value, the current request is passed; Otherwise, the expected passing time of the current request is calculated. If the expected passing time of the request is less than the timeout time preset by the rule, the request will wait until the preset time comes (queuing for processing). If the expected passage time exceeds the maximum queuing time, the request will be rejected directly.\"]},\"212\":{\"h\":\"Fuse\",\"t\":[\"For the second scenario, the usual way to deal with it is to set the service fuse. Simply put, when a service we detect is abnormal, we will not access it so as not to cause more pressure on it by more requests. After a period of time, if the service is detected to be restored, the traffic will be sent back. We first need to determine whether the service is unstable or jittery. Then think about what we should do if we find a service that is shaking. How to judge whether the service is back to normal. We can generally judge whether the service is unstable in the following three ways.\",\"Slow call proportion: when the number of requests in the unit statistical time is greater than the set minimum number of requests, and the request exceeding the maximum tolerance time is greater than the threshold, it is judged that the service is abnormal, and the fuse is triggered;\",\"Abnormal proportion: when the proportion of abnormal requests in the unit statistical time is greater than the threshold, we determine that the service is abnormal and trigger the fuse;\",\"Abnormal number: when the number of abnormal requests in unit time reaches the threshold, it is determined that the service is abnormal, and the fuse is triggered;\",\"When we judge that the service is abnormal through the above three indicators and fuse the service, we can choose to report an error directly for the request within a certain period of time (within the fuse duration), without blocking the upstream service, and let the requester decide how to deal with it. Or directly trigger service degradation. Service degradation can be roughly understood as requesting a simplified version of this business, which omits many non-core processes and only ultimately ensures that the process is processed (ultimately consistent). Like a real circuit breaker, a service circuit breaker will automatically recover. Generally, after the fuse is triggered, the service is in the fuse state for a period of time and does not provide services, and then it enters the half-open state. If the following small number of requests do not report errors and the response time is reasonable, the service is restored. If it is still abnormal, it continues to fuse.\",\"Sentinel is Alibaba's open source traffic control component for distributed service architecture, which mainly takes traffic as the starting point to help you ensure the stability of microservices from multiple dimensions such as traffic control, fuse degradation, and system adaptive protection. Soul, as an excellent open source gateway in China, integrates Sentinel into its own system as a plug-in, so that users can use the flow control and service fuse functions provided by Sentinel through simple configuration. The following is a brief description of how to configure the use of the sentinel plug-in in soul.\",\"First, log in to the soul management platform and configure the plug-in in the \\\"plug-in list\\\" -- > \\\"sentinel\\\". The configuration of \\\"Selector\\\" is not the focus of this article and will not be introduced. Click \\\"Add Rules\\\" to make specific settings, as shown in the following figure.\",\"In this configuration page, \\\"Name\\\", \\\"Matching Mode\\\", \\\"Condition\\\", \\\"Log Printing\\\", and \\\"Whether to Enable\\\" and \\\"Execution Order\\\" are general configurations of the soul plug-in and will not be described here. What we need to focus on is the configuration items in \\\"processing\\\". These configuration items can be divided into two groups. The first four options are about fuse configuration, and the last four options are about flow control configuration. In soul, we can set the flow control and fuse policy for a group of requests at the same time. Next, we will focus on how to use each configuration item.\"]},\"213\":{\"h\":\"Fuse\",\"t\":[\"First of all, let's look at the configuration related to the fuse. It has four configuration items: \\\"fuse threshold\\\", \\\"whether to open the fuse\\\", \\\"fuse window size\\\" and the unnamed service exception judgment method. Fuse switch indicates whether to open the fuse (1 open \\\\ 0 not open). The fuse window size refers to the number of seconds after triggering the fuse to enter the half-open state. In the half-open state, if the request is normal, it will enter the normal state. If the request is still abnormal, it will continue to fuse. The fusing judgment mode and fusing threshold need to be combined. In soul, three service exception determination methods of sentinel are used. They are:\",\"Slow call percentage. In this mode, the threshold is the number of milliseconds that are determined to be slow calls. The ratio of slow call is 1 by default and cannot be changed, that is, the fuse will be triggered if the threshold is exceeded within the unit statistical time. This mode is the default mode for sentinel.\",\"Exception proportion, in this mode, the threshold refers to the upper limit of the proportion of exception requests in the unit statistical time, and a number of [0.0, 1.0] needs to be filled in, indicating 0% -100%\",\"Exception number policy. In this mode, the threshold refers to the upper limit of the number of exception requests per unit of statistical time.\",\"It should be noted that soul uses the default parameters of sentinel for the unit statistics duration (statIntervalMs) and the minimum number of fusing requests (minRequestAmount). One second and five times respectively. The unit duration specifies the exception judgment, with 1 second as the statistical range, and the next second starts counting again. The minimum number of requests means that if the number of requests is less than 5 in 1 second, the fuse will not be triggered even if the threshold is reached.\",\"The configuration as shown in the figure above means that the fuse configuration is turned on. If 5 requests of this service are abnormal within 1 second, the fuse will be turned on for 10 seconds. After 10 seconds, the service will enter the half-open state. If the requests are normal, the service will become normal. If the requests are still abnormal, the fuse will continue to be turned on. If the service is requested during the fuse period, the soul gateway will directly return the request error, and the protection back-end service will not receive the request again.\"]},\"214\":{\"h\":\"Flow control\",\"t\":[\"There are five configurations related to flow control, which are \\\"flow control effect\\\", \\\"current limit threshold\\\", \\\"flow control switch\\\" and \\\"current limit threshold type\\\" from top to bottom and from left to right. The first is the type of throttling. We can choose \\\"QPS\\\" or \\\"Number of concurrent threads\\\". This parameter specifies from which angle we set the threshold of throttling. The threshold is the upper limit of the QPS or the number of threads, and the throttling policy is initiated when this threshold is reached. The specific current limiting strategy is configured in \\\"flow control effect\\\". In the flow control strategy, we can select \\\"direct rejection\\\", \\\"warm up\\\", \\\"uniform queuing\\\" and \\\"warm up + uniform queuing\\\". Direct rejection is better understood, that is, after the number of QPS or threads reaches the threshold, redundant requests are returned directly with errors. Warm-up means that the threshold gradually increases to the specified threshold within 10 seconds, that is, the threshold for the first 2-3 seconds is lower than the set threshold, but the threshold is gradually increased and reaches the specified threshold after 10 seconds, so that the system can have a warm-up process. If the request exceeds the threshold, the soul gateway will report an error and return directly. The uniform queue mode will strictly control the time interval of each request. If the flow control type is QPS and the threshold is 10, soul will control to transmit one request to the back-end service every 100ms. The extra requests will enter the waiting queue first, and each request will wait for 500ms at most. If the estimated waiting time of the request exceeds 500ms, it will report an error and return directly. It should be noted that if the flow limit type is the number of concurrent threads, then the flow control effect can only be \\\"direct rejection\\\". As shown in the figure below, this configuration indicates that the soul gateway will ensure that the QPS of this service does not exceed 10, and redundant requests will report errors directly.\",\"It should be noted that the Sentinel component runs independently in each gateway of the soul. If the gateway is a cluster, the amount actually transmitted to the following services needs to be multiplied by the number of soul gateway services during flow control. That is, if our soul gateway deploys three nodes, all requests are evenly distributed to each node through nginx. The flow control configured for one interface is 10 qps, so the actual QPS to be processed by the backward service is 10 \\\\ * 3. Fuse also needs to consider this situation, only when a service on three nodes triggers a fuse, then the service will not receive any more requests.\",\"The source code of Sentinel plug-in in soul mainly includes three parts, \\\"Sentinel Rule Handle\\\" is responsible for processing the processing logic when the Sentinel rule is synchronized from the management node, and \\\"Sentine lPlugin\\\" the processing logic of the plug-in \\\". \\\"SentinelFallback Handler\\\" for the processing logic that triggered the flow control or fuse. \\\". Let me take a look at them one by one. First is \\\"Sentine lRuleHandle\\\" \\\", the source code is as follows:\",\"public class SentinelRuleHandle implements PluginDataHandler { @Override public void handlerRule(final RuleData ruleData) { // Process new sentinel configuration SentinelHandle sentinelHandle = GsonUtils.getInstance().fromJson(ruleData.getHandle(), SentinelHandle.class); sentinelHandle.checkData(sentinelHandle); // Get all existing flow control configurations and delete configurations with the same resourceName as the new configuration List<FlowRule> flowRules = FlowRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList()); if (sentinelHandle.getFlowRuleEnable() == Constants.SENTINEL_ENABLE_FLOW_RULE) { // If flow control is enabled // Set sentinel flow control rules based on the configuration FlowRule rule = new FlowRule(getResourceName(ruleData)); // Set threshold rule.setCount(sentinelHandle.getFlowRuleCount()); // Flow control mode: QPS or thread rule.setGrade(sentinelHandle.getFlowRuleGrade()); // Flow control behavior: 0. default(reject directly), 1. warm up, 2. rate limiter, 3. warm up + rate limiter rule.setControlBehavior(sentinelHandle.getFlowRuleControlBehavior()); flowRules.add(rule); } // Update all flow control configurations FlowRuleManager.loadRules(flowRules); // Get all existing circuit breaker configurations and delete configurations with the same resourceName as the new configuration List<DegradeRule> degradeRules = DegradeRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList()); if (sentinelHandle.getDegradeRuleEnable() == Constants.SENTINEL_ENABLE_DEGRADE_RULE) { // If circuit breaker is enabled // Set sentinel circuit breaker rules based on the configuration DegradeRule rule = new DegradeRule(getResourceName(ruleData)); // Set circuit breaker threshold rule.setCount(sentinelHandle.getDegradeRuleCount()); // Basis for circuit breaker judgment 0: average RT, 1: exception ratio, 2: exception count rule.setGrade(sentinelHandle.getDegradeRuleGrade()); // Circuit breaker time window rule.setTimeWindow(sentinelHandle.getDegradeRuleTimeWindow()); degradeRules.add(rule); } // Update all circuit breaker configurations DegradeRuleManager.loadRules(degradeRules); } @Override public void removeRule(final RuleData ruleData) { // Remove specified rule FlowRuleManager.loadRules(FlowRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList())); DegradeRuleManager.loadRules(DegradeRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList())); } @Override public String pluginNamed() { return PluginEnum.SENTINEL.getName(); } /** * return sentinel resource name. * * @param ruleData ruleData * @return string string */ public static String getResourceName(final RuleData ruleData) { return ruleData.getSelectorId() + \\\"_\\\" + ruleData.getName(); } } \",\"The Sentine lPlugin \\\"of the plug-in execution logic code is as follow\",\"public class SentinelPlugin extends AbstractSoulPlugin { // Handler for exception handling private final SentinelFallbackHandler sentinelFallbackHandler; public SentinelPlugin(final SentinelFallbackHandler sentinelFallbackHandler) { this.sentinelFallbackHandler = sentinelFallbackHandler; } @Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // Generate sentinel resource name from plugin configuration, which corresponds to one flow control or circuit breaker strategy String resourceName = SentinelRuleHandle.getResourceName(rule); // Verify sentinel plugin's configuration information SentinelHandle sentinelHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), SentinelHandle.class); sentinelHandle.checkData(sentinelHandle); // Introduce Sentinel's official Transformer and delegate the request to Sentinel for handling return chain.execute(exchange).transform(new SentinelReactorTransformer<>(resourceName)) .doOnSuccess(v -> { HttpStatus status = exchange.getResponse().getStatusCode(); if (status == null || !status.is2xxSuccessful()) { exchange.getResponse().setStatusCode(null); throw new SentinelFallbackException(status == null ? HttpStatus.INTERNAL_SERVER_ERROR : status); } }) //If Sentinel triggers flow control or circuit breaker and causes an error, call sentinelFallbackHandler to return an error message .onErrorResume(throwable -> sentinelFallbackHandler.fallback(exchange, UriUtils.createUri(sentinelHandle.getFallbackUri()), throwable)); } // Plugin name: sentinel @Override public String named() { return PluginEnum.SENTINEL.getName(); } // Order: 45 @Override public int getOrder() { return PluginEnum.SENTINEL.getCode(); } public static class SentinelFallbackException extends HttpStatusCodeException { public SentinelFallbackException(final HttpStatus statusCode) { super(statusCode); } } } \",\"Exception handling is Sentine lFallbackHandler \\\". In the soul, whether it is the processing of the request after the fuse or the request under flow control, the soul will directly return an error\",\"public class SentinelFallbackHandler implements FallbackHandler { @Override public Mono<Void> generateError(final ServerWebExchange exchange, final Throwable throwable) { Object error; if (throwable instanceof DegradeException) { // Circuit breaker triggered // Set HTTP status to 500 exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); // Set request body error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); } else if (throwable instanceof FlowException) { // Flow control error, indicating that the client should retry // Set HTTP status to 429 exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); // Set request body error = SoulResultWrap.error(SoulResultEnum.TOO_MANY_REQUESTS.getCode(), SoulResultEnum.TOO_MANY_REQUESTS.getMsg(), null); } else if (throwable instanceof BlockException) { // Parent class of FlowException, indicating that the service is blocked // Set HTTP status to 429 exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); // Set request body error = SoulResultWrap.error(SoulResultEnum.SENTINEL_BLOCK_ERROR.getCode(), SoulResultEnum.SENTINEL_BLOCK_ERROR.getMsg(), null); } else { return Mono.error(throwable); } return WebFluxResultUtils.result(exchange, error); } } \",\"The soul gateway encapsulates an excellent flow control component, sentinel, which provides users with easy-to-use flow control and fuse functions. It should be noted that when soul uses sentinel, some parameters are configured by default. If there is a need to modify, you need to adjust the source code by yourself. Secondly, the soul gateway can be deployed in a distributed manner, but distributed flow control is not used when sentinel is used, and the flow control of each soul gateway node for the same resource is independent but identical.\"]},\"215\":{\"h\":\"Soul Gateway Learning Resilience4j Plugin\"},\"216\":{\"h\":\"Aim\",\"t\":[\"What is Resilience4J?\",\"Resilience 4j experience with soul \",\"Current-limiting\",\"Fuse\",\"Interpretation of Resilience4J Plug-in Source Code\"]},\"217\":{\"h\":\"What is Resilience4j?\",\"t\":[\"Resilience4J is the recommended fault tolerance scheme of Spring Cloud Gateway. It is a lightweight fault tolerance library.\",\"It borrows from Hystrix and uses JDK8 functional programming, namely lambda expressions.\",\"In contrast, Netflix Hystrix has a compilation dependency on Archaius. Resilience4j You don't need to reference all the dependencies. You can reference the relevant modules according to the functions you need. Hystrix will not be updated. Spring offers an alternative to Netflix Hystrix, namely Resilence4J\",\"Resilience4J provides a range of usability features that enhance microservices:\",\"Circuit Breaker\",\"Rate Limiter\",\"Isolation based on semaphore\",\"Cache\",\"Time limiter\",\"Request to restart Retry\",\"Official Dependency Package\",\" <dependency> <groupId>io.github.resilience4j</groupId> <artifactId>resilience4j-circuitbreaker</artifactId> <version>${resilience.version}</version> </dependency> \"]},\"218\":{\"h\":\"Resilience 4j experience with soul\",\"t\":[\"First, open Resilience4j in the soul-admin console plug-in management.\",\"Add dependency in soul gateway\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-ratelimiter</artifactId> <version>${project.version}</version> </dependency> \",\"Start three services, a soul-admin, a soul-bootstrap, and a soul-examples-http\",\"Find Resilience4j in the plug-in list on the soul-admin console and customize the configuration, as shown in the following figure. \",\" Introduction to the configuration of soul official website \",\"* Resilience4j Processing in Detail: * timeoutDurationRate：Timeout for waiting to acquire tokens, in milliseconds, default value: 5000. * limitRefreshPeriod：Time interval for refreshing tokens, in milliseconds, default value: 500. * limitForPeriod：Number of tokens refreshed each time, default value: 50. * circuitEnable：Whether to enable circuit breaker, 0: off, 1: on, default value: 0. * timeoutDuration：Timeout for circuit breaker, in milliseconds, default value: 30000. * fallbackUri：URI for fallback handling. * slidingWindowSize：Size of the sliding window, default value: 100. * slidingWindowType：Type of the sliding window, 0: based on count, 1: based on time, default value: 0. * minimumNumberOfCalls：Minimum number of requests to trigger circuit breaker, circuit breaker statistics will be calculated only if this threshold is exceeded, default value: 100. * waitIntervalFunctionInOpenState：Duration for which the circuit breaker remains open, in milliseconds, default value: 10. * permittedNumberOfCallsInHalfOpenState：Size of the circular buffer in the half-open state, circuit breaker calculation will be performed only if this number is reached, default value: 10. * failureRateThreshold：Percentage of error rate, circuit breaker will only open if this threshold is reached, default value: 50. * automaticTransitionFromOpenToHalfOpenEnabled：Whether to automatically transition from open state to half-open state, true: yes, false: no, default value: false. \"]},\"219\":{\"h\":\"Current-limiting\",\"t\":[\"The parameter configuration is checked as follows. If the parameter value is less than the default value, the default value will be directly assigned, so it is convenient to directly modify the configuration of the source code for testing the effect: the number of tokens refreshed each time is 2, the time interval for refreshing tokens is 1 s, and the timeout time is 1 s.\",\" /** * check filed default value. * * @param resilience4JHandle {@linkplain Resilience4JHandle} * @return {@linkplain Resilience4JHandle} */ public Resilience4JHandle checkData(final Resilience4JHandle resilience4JHandle) { resilience4JHandle.setTimeoutDurationRate(Math.max(resilience4JHandle.getTimeoutDurationRate(), Constants.TIMEOUT_DURATION_RATE)); //resilience4JHandle.setLimitRefreshPeriod(Math.max(resilience4JHandle.getLimitRefreshPeriod(), Constants.LIMIT_REFRESH_PERIOD)); //resilience4JHandle.setLimitForPeriod(Math.max(resilience4JHandle.getLimitForPeriod(), Constants.LIMIT_FOR_PERIOD)); // Set the number of tokens refreshed each time to 2, and the time interval for refreshing tokens to 1 second resilience4JHandle.setLimitRefreshPeriod(1000); resilience4JHandle.setLimitForPeriod(2); resilience4JHandle.setTimeoutDuration(1000); resilience4JHandle.setCircuitEnable(Math.max(resilience4JHandle.getCircuitEnable(), Constants.CIRCUIT_ENABLE)); //resilience4JHandle.setTimeoutDuration(Math.max(resilience4JHandle.getTimeoutDuration(), Constants.TIMEOUT_DURATION)); resilience4JHandle.setFallbackUri(!\\\"0\\\".equals(resilience4JHandle.getFallbackUri()) ? resilience4JHandle.getFallbackUri() : \\\"\\\"); resilience4JHandle.setSlidingWindowSize(Math.max(resilience4JHandle.getSlidingWindowSize(), Constants.SLIDING_WINDOW_SIZE)); resilience4JHandle.setSlidingWindowType(Math.max(resilience4JHandle.getSlidingWindowType(), Constants.SLIDING_WINDOW_TYPE)); resilience4JHandle.setMinimumNumberOfCalls(Math.max(resilience4JHandle.getMinimumNumberOfCalls(), Constants.MINIMUM_NUMBER_OF_CALLS)); resilience4JHandle.setWaitIntervalFunctionInOpenState(Math.max(resilience4JHandle.getWaitIntervalFunctionInOpenState(), Constants.WAIT_INTERVAL_FUNCTION_IN_OPEN_STATE)); resilience4JHandle.setPermittedNumberOfCallsInHalfOpenState(Math.max(resilience4JHandle.getPermittedNumberOfCallsInHalfOpenState(), Constants.PERMITTED_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE)); resilience4JHandle.setFailureRateThreshold(Math.max(resilience4JHandle.getFailureRateThreshold(), Constants.FAILURE_RATE_THRESHOLD)); return resilience4JHandle; } \",\"Use SuperBenchmarker tool, 4 threads, execute 10s\",\"C:\\\\Users\\\\v-yanb07>sb -u http://localhost:9195/http/test/findByUserId?userId=1 -c 4 -N 10 Starting at 2021-03-14 15:46:28 [Press C to stop the test] 23 (RPS: 1) ---------------Finished!---------------- Finished at 2021-03-14 15:46:51 (took 00:00:23.0477097) 24 (RPS: 1) Status 200: 25 RPS: 2.2 (requests/second) Max: 2020ms Min: 472ms Avg: 1677ms 50% below 1994ms 60% below 1997ms 70% below 1999ms 80% below 1999ms 90% below 2001ms 95% below 2019ms 98% below 2020ms 99% below 2020ms 99.9% below 2020ms \",\"Output log\",\"2021-03-14 12:16:35.252 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:36.249 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:36.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:37.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:37.250 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:38.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:38.250 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:39.252 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : Current limiting test 2021-03-14 12:16:39.252 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : Current limiting test \",\"The console log outputs two lines per second to verify that the throttling is in effect\"]},\"220\":{\"h\":\"Fuse\",\"t\":[\"From the configuration information, we know that the fuse is off by default, and we need to open it.\",\"Soul-examples-http Add sleep time at call interface\",\" @GetMapping(\\\"/findByUserId\\\") public UserDTO findByUserId(@RequestParam(\\\"userId\\\") final String userId) throws Exception{ UserDTO userDTO = new UserDTO(); userDTO.setUserId(userId); userDTO.setUserName(\\\"hello world\\\"); log.info(\\\"Current limiting test\\\"); int i = RandomUtils.nextInt(1,3); if(i %2==0){ //throw new Exception(\\\"Exception thrown\\\"); Thread.currentThread().sleep(2000); } return userDTO; } \",\"Resilience4JHandle # checkData Manually set the timeout to 1s\",\" resilience4JHandle.setTimeoutDuration(1000); \",\"The pos interface calls \",\"http://localhost:9195/http/test/findByUserId?userId=1\",\"In case of multiple requests, some requests return normal data, and some requests return the following data, indicating that the timeout fuse is effective.\",\"{ \\\"code\\\": 500, \\\"message\\\": \\\"Internal Server Error\\\", \\\"data\\\": \\\"404 NOT_FOUND\\\" } \"]},\"221\":{\"h\":\"Interpretation of Resilience4J Plug-in Source Code\",\"t\":[\"The soul gateway Resilience4j plug-in source code uses a reactive programming lot of methods. First, you need to understand responsive programming.\",\"Resilience4J Plug-in Directory Structure\",\"└─resilience4j │ Resilience4JPlugin.java // Plugin processing, core class │ ├─build │ Resilience4JBuilder.java // Build Resilience4JConf object │ ├─conf │ Resilience4JConf.java │ ├─executor │ CombinedExecutor.java // Limiter and circuit breaker executor │ Executor.java │ RateLimiterExecutor.java // Limiter executor │ ├─factory │ Resilience4JRegistryFactory.java // Build limiter and circuit breaker objects │ └─handler Resilience4JHandler.java \",\"Resilience4JPlugn # doExecuteResilience4JPlugn inherits AbstractSoulPlugin like other soul plug-ins. As long as it is enabled, it will go to the core method doExecute through the chain mechanism.\",\" @Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // Get configuration information object Resilience4JHandle resilience4JHandle = GsonUtils.getGson().fromJson(rule.getHandle(), Resilience4JHandle.class); // Check configuration information, assign default values if they're less than defaults resilience4JHandle = resilience4JHandle.checkData(resilience4JHandle); // circuitEnable configuration: 1 enables circuit breaker component, otherwise use limiter component if (resilience4JHandle.getCircuitEnable() == 1) { return combined(exchange, chain, rule); } return rateLimiter(exchange, chain, rule); } \",\"Current Limiting Resilience4JPlugin # rateLimiter\",\" private Mono<Void> rateLimiter(final ServerWebExchange exchange, final SoulPluginChain chain, final RuleData rule) { return ratelimiterExecutor.run( // chain.execute(exchange) calls subsequent plugins chain.execute(exchange), fallback(ratelimiterExecutor, exchange, null), Resilience4JBuilder.build(rule)) .onErrorResume(throwable -> ratelimiterExecutor.withoutFallback(exchange, throwable)) // Called by ratelimiterExecutor.run @Override public <T> Mono<T> run(final Mono<T> toRun, final Function<Throwable, Mono<T>> fallback, final Resilience4JConf conf) { // Limiter component RateLimiter rateLimiter = Resilience4JRegistryFactory.rateLimiter(conf.getId(), conf.getRateLimiterConfig()); // Limiting execution Mono<T> to = toRun.transformDeferred(RateLimiterOperator.of(rateLimiter)); if (fallback != null) { // Execute fallback return to.onErrorResume(fallback); } return to; } // to.onErrorResume(fallback); default Mono<Void> fallback(ServerWebExchange exchange, String uri, Throwable t) { if (StringUtils.isBlank(uri)) { return withoutFallback(exchange, t); } DispatcherHandler dispatcherHandler = SpringBeanUtils.getInstance().getBean(DispatcherHandler.class); ServerHttpRequest request = exchange.getRequest().mutate().uri(Objects.requireNonNull(UriUtils.createUri(uri))).build(); ServerWebExchange mutated = exchange.mutate().request(request).build(); // Execute the fallback return dispatcherHandler.handle(mutated); } \",\"Fuse Resilience 4JPlugin # combined\",\" private Mono<Void> combined(final ServerWebExchange exchange, final SoulPluginChain chain, final RuleData rule) { Resilience4JConf conf = Resilience4JBuilder.build(rule); return combinedExecutor.run( chain.execute(exchange).doOnSuccess(v -> { HttpStatus status = exchange.getResponse().getStatusCode(); if (status == null || !status.is2xxSuccessful()) { exchange.getResponse().setStatusCode(null); throw new CircuitBreakerStatusCodeException(status == null ? HttpStatus.INTERNAL_SERVER_ERROR : status); } }), fallback(combinedExecutor, exchange, conf.getFallBackUri()), conf); } // Executed in combinedExecutor#run public <T> Mono<T> run(final Mono<T> run, final Function<Throwable, Mono<T>> fallback, final Resilience4JConf resilience4JConf) { RateLimiter rateLimiter = Resilience4JRegistryFactory.rateLimiter(resilience4JConf.getId(), resilience4JConf.getRateLimiterConfig()); CircuitBreaker circuitBreaker = Resilience4JRegistryFactory.circuitBreaker(resilience4JConf.getId(), resilience4JConf.getCircuitBreakerConfig()); //Circuit breaker operation Mono<T> to = run.transformDeferred(CircuitBreakerOperator.of(circuitBreaker)) // Limiting operation .transformDeferred(RateLimiterOperator.of(rateLimiter)) // Set timeout .timeout(resilience4JConf.getTimeLimiterConfig().getTimeoutDuration()) // Throw timeout exception if timeout occurs .doOnError(TimeoutException.class, t -> circuitBreaker.onError( resilience4JConf.getTimeLimiterConfig().getTimeoutDuration().toMillis(), TimeUnit.MILLISECONDS, t)); if (fallback != null) { to = to.onErrorResume(fallback); } return to; } \"]},\"222\":{\"h\":\"Sum up\",\"t\":[\"The soul gateway provides current limiting and fusing, and the fusing is off by default\",\"If the parameter value is less than the default value, the default value will be used directly\"]},\"223\":{\"h\":\"Soul Gateway Learning Apache Dubbo Plugin\"},\"224\":{\"h\":\"Aim\",\"t\":[\"Introduction to the Apache Dubbo Plugin \",\"Introduction to metadata\",\"Apache Dubbo Plugin Configuration \",\"Bootstrap POM configuration\",\"Soul-admin Configuration\",\"Dubbo service POM configuration\",\"Introduction to Apache Dubbo Generalization Calls \",\"Using Generalization Calls via the API\",\"Using generalized calls with spring\",\"Generalization call implementation flow\",\"Soul Dubbo Plugin Call Resolution \",\"ApachDubboPlugin Generalization Call Preparation\",\"ApacheDubboProxySerivce\",\"DubboResponsePlugin\",\"Web FluxResultUtils returns results\",\"Introduction to Dubbo Generalization Calls\",\"Sum up\",\"Reference\"]},\"225\":{\"h\":\"Introduction to the Apache Dubbo Plugin\",\"t\":[\"Apache Dubbo is a high-performance and lightweight open source Java service framework, which mainly provides six core capabilities: high-performance RPC invocation for interface agents, intelligent fault tolerance and load balancing, automatic service registration and discovery, high scalability, run-time traffic scheduling, and visual service governance and operation and maintenance. The Dubbo plug-in in the gateway is mainly used to convert Http requests to Dubbo protocol, and it is also the key for the gateway to implement Dubbo generalization calls. Dubbo plug-ins need to cooperate metadata to implement Dubbo calls.\"]},\"226\":{\"h\":\"Introduction to metadata\",\"t\":[\"The function of metadata is to get the real request path and methodNameparameterTypes prepare for the generalization call during the protocol conversion.\",\"In the database, we have a separate table to store Dubbo meta information. Through the data synchronization scheme, the data of this table will be synchronized to the JVM memory of the gateway\",\"The table is structured as follows\",\"CREATE TABLE IF NOT EXISTS `meta_data` ( `id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'id', `app_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Application Name', `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Path, should be unique', `path_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Path description', `rpc_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'RPC type', `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'Service Name', `method_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'Method Name', `parameter_types` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'Parameter Types, comma-separated', `rpc_ext` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'RPC extension information in JSON format', `date_created` datetime(0) NOT NULL COMMENT 'Creation Time', `date_updated` datetime(0) NOT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT 'Update Time', `enabled` tinyint(4) NOT NULL DEFAULT 0 COMMENT 'Enable State', PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic; \",\"The path field is mainly used to match a piece of data according to your path field when requesting the gateway, and then carry out the subsequent processing process.\",\"rpc_ext Field If the proxy interface is a Dubbo service interface of type and the field is set groupversion, the information will be stored rpc_ext in\",\"Each Dubbo interface method will deal with a piece of metadata. Compared with Spring Cloud and HTTP, only one piece of/contextPath/\\\\ ** is stored and none is stored respectively.\"]},\"227\":{\"h\":\"Apache Dubbo Plugin Configuration\"},\"228\":{\"h\":\"Soul-bootstrap POM configuration\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-apache-dubbo</artifactId> <version>${project.version}</version> </dependency> <dependency> <groupId>org.apache.dubbo</groupId> <artifactId>dubbo</artifactId> <version>2.7.5</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-client</artifactId> <version>${curator.version}</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-framework</artifactId> <version>${curator.version}</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-recipes</artifactId> <version>${curator.version}</version> </dependency> \"]},\"229\":{\"h\":\"Soul-admin Configuration\",\"t\":[\"Log in to soul-admin background, open the switch of Dubbo configuration option on the plug-in management page, and fill in the connection address of the registry.\"]},\"230\":{\"h\":\"Dubbo service POM configuration\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-client-apache-dubbo</artifactId> <version>${soul.version}</version> </dependency> \",\"@SoulDubboClient(path = \\\"/insert\\\", desc = \\\"Insert a row of data\\\") public DubboTest insert(final DubboTest dubboTest) { dubboTest.setName(\\\"hello world Soul Apache Dubbo: \\\" + dubboTest.getName()); return dubboTest; } \",\"The proxied service uses the soul-spring-boot-starter-client-apache-dubbo provided client dependencies and @SoulDubboClient annotations to register the interface name, parameter type, and parameter content to the soul-admin end at startup, and then the backend admin synchronizes the data to the bootstrap end.\"]},\"231\":{\"h\":\"Introduction to Apache Dubbo Generalization Calls\",\"t\":[\"The generalized interface calling mode is mainly used when the client does not have an API interface and a model class element. All POJOs in the parameters and return values are represented by Map. It is usually used for framework integration and can be implemented by calling all services through GenericS.\"]},\"232\":{\"h\":\"Using generalized calls through the API (the way the gateway is currently used)\",\"t\":[\"ReferenceConfig<GenericService> reference = new ReferenceConfig<>(); reference.setGeneric(true); reference.setApplication(applicationConfig); reference.setRegistry(registryConfig); reference.setInterface(metaData.getServiceName()); reference.setProtocol(\\\"dubbo\\\"); \",\"The gateway uses the generic call through API declaration and registration.\"]},\"233\":{\"h\":\"Using Generalization Calls with Spring\",\"t\":[\"<dubbo:reference id=\\\"barService\\\" interface=\\\"com.foo.BarService\\\" generic=\\\"true\\\" /> \"]},\"234\":{\"h\":\"Generalization call implementation flow\",\"t\":[\"+-------------------------------------------+ +-------------------------------------------+ | consumer 端 | | provider 端 | | | | | | | | | | | | | | | | | | +------------------+ | | +--------------+ | | |GenericImplFilter | | Invocation | |GenericFilter | | | +----> | +-------------------------> | | | | | +------------------+ | | +--------------+ | | +-----------+ | | | +-----------+ | | | | | | | | | | | |Client | | | +--> | Service | | | | | | | | | | | +-----------+ | | +-------+---+ | | | | | | | ^ +------------------+ | | +--------------+ | | | | |GenericImplFilter | | | |GenericFilter | <----------+ | | +-------------+ | <-------------------------+ | | | +------------------+ | | +--------------+ | | | | | | | | | | | | | | | | | +-------------------------------------------+ +-------------------------------------------+ \",\"GenericService This interface is very similar to Java's reflection call. You only need to provide the name of the method called, the type of the parameter, and the value of the parameter to call the corresponding method directly.\",\"Generic Filter: responsible for the conversion of provider-side parameters \",\"Converts the parameters of the hashMap structure to the corresponding Pojo when called\",\"The return result is to convert Pojo to hashMap.\",\"GenericImpl Filter: It is responsible for the conversion of consumer side parameters and converting Pojo to hashMap interface.\",\"/** * Generic service interface * * @export */ public interface GenericService { /** * Generic invocation * * @param method Method name, e.g., findPerson. If there are overloaded methods, include the parameter list, e.g., findPerson(java.lang.String) * @param parameterTypes Parameter types * @param args Parameter list * @return invocation result * @throws GenericException Exception thrown by the method */ Object $invoke(String method, String[] parameterTypes, Object[] args) throws GenericException; default CompletableFuture<Object> $invokeAsync(String method, String[] parameterTypes, Object[] args) throws GenericException { Object object = $invoke(method, parameterTypes, args); if (object instanceof CompletableFuture) { return (CompletableFuture<Object>) object; } return CompletableFuture.completedFuture(object); } } \"]},\"235\":{\"h\":\"Soul Dubbo Plugin Call Resolution\",\"t\":[\"When a service request is initiated, the method of the Handle class is entered SoulWebHandler first (as to why it becomes the request entry to query by itself, this article will not explain). The following is the plugins plug-in chain call from DefaultSoulPluginChain the class.\",\"@Override public Mono<Void> handle(@NonNull final ServerWebExchange exchange) { return new DefaultSoulPluginChain(plugins).execute(exchange).subscribeOn(scheduler); } \",\"@Override public Mono<Void> execute(final ServerWebExchange exchange) { // Reactive programming return Mono.defer(() -> { // Check if the current index is less than the number of plugins if (this.index < plugins.size()) { // Get a plugin from plugins one by one SoulPlugin plugin = plugins.get(this.index++); // Check if this plugin should be skipped Boolean skip = plugin.skip(exchange); if (skip) { return this.execute(exchange); } return plugin.execute(exchange, this); } return Mono.empty(); }); } \",\"This chapter focuses only on Apache Dubbo, so we'll focus on the invocation of the Dubbo plug-in. Through the Debug gateway program, we know that it is actually judged and called one by one according to the above order. Let's focus on ApacheDubboPlugin\"]},\"236\":{\"h\":\"ApachDubboPlugin Generalization Call Preparation\",\"t\":[\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { // Get dubbo_params data String body = exchange.getAttribute(Constants.DUBBO_PARAMS); // Get attribute value from exchange context SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // Get attribute value from exchange metaData MetaData metaData = exchange.getAttribute(Constants.META_DATA); // Check if metaData is incorrect, if so, return an error response if (!checkMetaData(metaData)) { assert metaData != null; log.error(\\\" path is :{}, meta data have error.... {}\\\", soulContext.getPath(), metaData.toString()); exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); Object error = SoulResultWrap.error(SoulResultEnum.META_DATA_ERROR.getCode(), SoulResultEnum.META_DATA_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // Check if parameterTypes and body in metaData are empty, if so, return a body error response if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) { exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); Object error = SoulResultWrap.error(SoulResultEnum.DUBBO_HAVE_BODY_PARAM.getCode(), SoulResultEnum.DUBBO_HAVE_BODY_PARAM.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // Perform asynchronous call to Dubbo GenericsService with exchange, body, and metaData final Mono<Object> result = dubboProxyService.genericInvoker(body, metaData, exchange); return result.then(chain.execute(exchange)); } \",\"First, check the parameters required by the generalization call.\"]},\"237\":{\"h\":\"ApacheDubboProxyService\",\"t\":[\"public Mono<Object> genericInvoker(final String body, final MetaData metaData, final ServerWebExchange exchange) throws SoulException { // issue(https://github.com/dromara/soul/issues/471), add dubbo tag route String dubboTagRouteFromHttpHeaders = exchange.getRequest().getHeaders().getFirst(Constants.DUBBO_TAG_ROUTE); if (StringUtils.isNotBlank(dubboTagRouteFromHttpHeaders)) { RpcContext.getContext().setAttachment(CommonConstants.TAG_KEY, dubboTagRouteFromHttpHeaders); } // Get reference based on metaData path ReferenceConfig<GenericService> reference = ApplicationConfigCache.getInstance().get(metaData.getPath()); if (Objects.isNull(reference) || StringUtils.isEmpty(reference.getInterface())) { ApplicationConfigCache.getInstance().invalidate(metaData.getPath()); reference = ApplicationConfigCache.getInstance().initRef(metaData); } // et the instance of GenericService for generic invocation based on reference GenericService genericService = reference.get(); Pair<String[], Object[]> pair; if (ParamCheckUtils.dubboBodyIsEmpty(body)) { pair = new ImmutablePair<>(new String[]{}, new Object[]{}); } else { // Organize parameter types and values for Dubbo generic invocation based on body and parameterTypes pair = dubboParamResolveService.buildParameter(body, metaData.getParameterTypes()); } // Perform asynchronous call using the default $invokeAsync method of GenericService CompletableFuture<Object> future = genericService.$invokeAsync(metaData.getMethodName(), pair.getLeft(), pair.getRight()); return Mono.fromFuture(future.thenApply(ret -> { if (Objects.isNull(ret)) { ret = Constants.DUBBO_RPC_RESULT_EMPTY; } // After successful invocation, copy the result and type to attributes of the exchange exchange.getAttributes().put(Constants.DUBBO_RPC_RESULT, ret); exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.SUCCESS.getName()); return ret; })).onErrorMap(exception -> exception instanceof GenericException ? new SoulException(((GenericException) exception).getExceptionMessage()) : new SoulException(exception)); } \"]},\"238\":{\"h\":\"DubboResponsePlugin\",\"t\":[\"@Override public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { final Object result = exchange.getAttribute(Constants.DUBBO_RPC_RESULT); if (Objects.isNull(result)) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } Object success = SoulResultWrap.success(SoulResultEnum.SUCCESS.getCode(), SoulResultEnum.SUCCESS.getMsg(), JsonUtils.removeClass(result)); return WebFluxResultUtils.result(exchange, success); })); } \"]},\"239\":{\"h\":\"Web FluxResultUtils returns results\"},\"240\":{\"h\":\"Introduction to Dubbo Generalization Calls\",\"t\":[\"Dubbo generalized invocation is mainly divided into two parts, namely, how to use GenericImplFilter the consumer side to intercept the generalized invocation, and how to use GenericFilter the service provider side to serialize the generalized parameters after intercepting the request and then request the specific service.\"]},\"241\":{\"h\":\"How does the service consumer org. Apache. Dubbo. RPC. Filter. GenericImplFilter intercept generalized calls?\",\"t\":[\"@Activate(group = CommonConstants.CONSUMER, value = GENERIC_KEY, order = 20000) public class GenericImplFilter implements Filter, Filter.Listener { @Override public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException { // ... Omitted non-core code // Check if it's a generic call if (isMakingGenericCall(generic, invocation)) { // Get the generic parameters Object[] args = (Object[]) invocation.getArguments()[2]; // If it's nativeJava mode if (ProtocolUtils.isJavaGenericSerialization(generic)) { for (Object arg : args) { if (!(byte[].class == arg.getClass())) { error(generic, byte[].class.getName(), arg.getClass().getName()); } } // If it's bean mode } else if (ProtocolUtils.isBeanGenericSerialization(generic)) { for (Object arg : args) { if (!(arg instanceof JavaBeanDescriptor)) { error(generic, JavaBeanDescriptor.class.getName(), arg.getClass().getName()); } } } // Set attachment for server-side invocation invocation.setAttachment( GENERIC_KEY, invoker.getUrl().getParameter(GENERIC_KEY)); } // Perform remote invocation return invoker.invoke(invocation); } private boolean isMakingGenericCall(String generic, Invocation invocation) { return (invocation.getMethodName().equals($INVOKE) || invocation.getMethodName().equals($INVOKE_ASYNC)) && invocation.getArguments() != null && invocation.getArguments().length == 3 && ProtocolUtils.isGeneric(generic); } } \",\"GenericImpl Filter implements the interface Filter (I will not introduce the Filter in Dubbo) and then executes the Invoke method. The invoke method mainly does the following things:\",\"Parameter validation to check whether the call is a generalized call\",\"Get the generalization parameters\",\"Determine the generalization calling mode: traverse each parameter, and then determine whether the generalization mode of the parameter is native Java or bean in turn\",\"Initiates a remote call\"]},\"242\":{\"h\":\"The service provider intercepts the generalization request through Generic Filter.\",\"t\":[\"@Activate(group = CommonConstants.PROVIDER, order = -20000) public class GenericFilter implements Filter, Filter.Listener { @Override public Result invoke(Invoker<?> invoker, Invocation inv) throws RpcException { // Parameter validation if ((inv.getMethodName().equals($INVOKE) || inv.getMethodName().equals($INVOKE_ASYNC)) && inv.getArguments() != null && inv.getArguments().length == 3 && !GenericService.class.isAssignableFrom(invoker.getInterface())) { // Get parameter name, type, and value String name = ((String) inv.getArguments()[0]).trim(); String[] types = (String[]) inv.getArguments()[1]; Object[] args = (Object[]) inv.getArguments()[2]; try { // Get the called method using reflection Method method = ReflectUtils.findMethodByMethodSignature(invoker.getInterface(), name, types); Class<?>[] params = method.getParameterTypes(); if (args == null) { args = new Object[params.length]; } // Get the generic type used for the generic reference, true or bean or nativejava String generic = inv.getAttachment(GENERIC_KEY); if (StringUtils.isBlank(generic)) { generic = RpcContext.getContext().getAttachment(GENERIC_KEY); } // If generic=true, deserialize parameters using the true method if (StringUtils.isEmpty(generic) || ProtocolUtils.isDefaultGenericSerialization(generic) || ProtocolUtils.isGenericReturnRawResult(generic)) { args = PojoUtils.realize(args, params, method.getGenericParameterTypes()); // If generic=nativejava, deserialize parameters using the nativejava method } else if (ProtocolUtils.isJavaGenericSerialization(generic)) { for (int i = 0; i < args.length; i++) { if (byte[].class == args[i].getClass()) { try (UnsafeByteArrayInputStream is = new UnsafeByteArrayInputStream((byte[]) args[i])) { args[i] = ExtensionLoader.getExtensionLoader(Serialization.class) .getExtension(GENERIC_SERIALIZATION_NATIVE_JAVA) .deserialize(null, is).readObject(); } catch (Exception e) { throw new RpcException(\\\"Deserialize argument [\\\" + (i + 1) + \\\"] failed.\\\", e); } } else { throw new RpcException(...); } } // If generic=bean, deserialize parameters using the bean method } else if (ProtocolUtils.isBeanGenericSerialization(generic)) { for (int i = 0; i < args.length; i++) { if (args[i] instanceof JavaBeanDescriptor) { args[i] = JavaBeanSerializeUtil.deserialize((JavaBeanDescriptor) args[i]); } else { throw new RpcException(...); } } } ... // Pass the current request to the next Filter in the FilterChain and return the result RpcInvocation rpcInvocation = new RpcInvocation(method, invoker.getInterface().getName(), args, inv.getAttachments(), inv.getAttributes()); rpcInvocation.setInvoker(inv.getInvoker()); rpcInvocation.setTargetServiceUniqueName(inv.getTargetServiceUniqueName()); return invoker.invoke(rpcInvocation); } catch (NoSuchMethodException e) { throw new RpcException(e.getMessage(), e); } catch (ClassNotFoundException e) { throw new RpcException(e.getMessage(), e); } } // If it's not a generic call, pass the request directly to the next Filter in the FilterChain return invoker.invoke(inv); } } \",\"The above is the general process of how the Dubbo service provider intercepts the generalization request and processes it:\",\"Parameter check to determine whether the request is a generalized call\",\"Get the parameter name, parameter type, parameter value,\",\"Use reflection to get the method called, and the generalization used true or or\",\"Deserialize the generalization parameters based on the generalization method\",\"Pass the request, including the called method, parameters and context information, to the next Filter in the FilterChain, and return the Result\",\"According to the generalization method, deserialize the Result and return it to the service consumer\"]},\"243\":{\"h\":\"Sum up\",\"t\":[\"The above is the analysis of how to configure the Dubbo plug-in to the entire call process, and then respectively introduce the details of how the service consumer and service provider intercept the generalized call process and serialize the parameters. I hope it will be helpful to you.\"]},\"244\":{\"h\":\"Reference\",\"t\":[\"https://my.oschina.net/u/4564034/blog/4409382\",\"https://qsli.github.io/2018/05/02/dubbo-generic-invoke/\"]},\"245\":{\"h\":\"Donation\"},\"246\":{\"h\":\"Project Donation\"},\"247\":{\"h\":\"Basic Conditions\",\"t\":[\"Dromara open source community organization has the following basic requirements for donated projects:\",\"Projects must be original and cannot be Fork versions.\",\"Projects must be complete application solutions.\",\"Projects must have good code comments and continuously improved documentation.\",\"Projects must be hosted on the Gitee platform with Stars exceeding 100.\",\"Projects must have valid code submission records in the past 2 months.\",\"Projects must be approved by the dromara community organization's jury.\",\"Preference is given to Gitee recommended projects or those that have obtained GVP. (GVP projects need to contact Gitee official staff to cancel GVP before transferring to the organization, and restore GVP after a successful transfer)\",\"Priority is given to projects in the fields of container tools, microservice frameworks and tools, distributed transactions, distributed middleware, big data processing, artificial intelligence, IoT, and development/testing/operations related tool chains.\"]},\"248\":{\"h\":\"Source Repository Impact\",\"t\":[\"Currently, donated projects are handled by transferring to the dromara organization repository. After the project is transferred, the following impacts will occur:\",\"gitee ：https://gitee.com/dromara/repository-name\",\"github：https://github.com/dromara/repository-name\",\"If there are absolute path references (images, files, etc.) in the project source code, they need to be changed to relative paths.\"]},\"249\":{\"h\":\"Repository Permissions\",\"t\":[\"The head of the dromara organization will set super admin permissions for the new project leader.\",\"Project PMC/Committers will be invited to join the dromara organization and set relevant read and write permissions. The project is independently submitted and operated.\",\"Project PMC/Committers will be assigned emails with the suffix @dromara.org.\"]},\"250\":{\"h\":\"Repository Documentation\",\"t\":[\"In principle, you need to contact the person in charge of the dromara official website and update the transfer document at https://dromara.org.\"]},\"251\":{\"h\":\"Version Release\",\"t\":[\"In principle, the next version is required to change the package name prefix to org.dromara and be published to the MAVEN repository.\"]},\"252\":{\"h\":\"Organization/Community\",\"t\":[\"The head or secretary of the dromara open source organization invites you to join the dromara community group and makes an announcement to all members.\",\"The dromara open source community's official account releases a welcome article and synchronizes it to the technical community.\",\"The original repository community group adds the dromara-xxx prefix.\"]},\"253\":{\"h\":\"Donation Project Exit Matters (Preliminary Version)\",\"t\":[\"The dromara community organization always has a positive, open and tolerant attitude. If the author of the donated project cannot identify with the development philosophy of the organization after joining the dromara organization or wants to transfer to another organization/person, they can apply to the dromara jury for exit. Exit application process:\",\"The project author needs to write the reason for the project exit in writing or email and email it to pmc@dromara.org.\",\"After the dromara jury receives the application, they will communicate with the project author as soon as possible to confirm the exit intention. If the author insists on exiting, it will be approved for processing.\",\"Please note that if the project applying for exit is a GVP project, you need to contact the Gitee official staff to cancel the GVP and then transfer it back to your personal name. After a successful transfer, contact the Gitee official staff to restore it. Non-GVP projects can be operated directly.\",\"After the project exits, the dromara organization will push announcements on major platforms and community groups to inform, and archive the project's historical records.\",\"Finally, we hope that project authors can communicate with us before considering exiting the dromara organization, point out where the dromara organization is doing poorly, so that we can improve and develop together.\"]},\"254\":{\"h\":\"Rights and Organizational Form\",\"t\":[\"Each sub-project team within the community shares all open source resources, including but not limited to the organizational brand, community official account, official community, exclusive accounts and channels of mainstream technical websites and media.\",\"In principle, each project is self-governing, and the organizational committee is composed of the main person in charge of each project.\",\"Relevant decision-making matters of the dromara organization (designating and modifying rules, joining or exiting projects, etc.) need to be voted on by the organizational committee before execution. Daily affairs are handled by the organization's permanent head.\",\"After making a decision at the organizational level, each project's management team must unconditionally obey the organization, or cooperate with the work and tasks of other projects, so that the entire organization is consistent in terms of publicity activities, task assignments, etc.\",\"The dromara open source organization entered a trial operation from March 2021 to March 2022. This principle is the trial operation guide for the organization. Each sub-project has complete autonomy and management rights during this period, as well as the copyright and actual ownership of the sub-brand of the project, without violating the law, moral principles, plagiarism infringement, and harm to the organization and not having a bad impact on the community and users.\",\"During the trial run, the community will establish a formal committee. For the subsequent development of the community, the management and authority constraints of the sub-projects will be officially launched and will\"]},\"255\":{\"h\":\"The dromara committee has the final interpretation right for the above regulations.\"},\"256\":{\"h\":\"Sponsorship/Support\",\"t\":[\"Join the Knowledge Planet\",\"Dromara community's continuous operation and provision of higher quality services couldn’t be possible without everyone’s support. If you want to become a sponsor or supporter of the Dromara community, please consider contacting:\",\"xiaoyu@dromara.org\",\"Dromara community promises that all received sponsorship and support funds will be fully disclosed, and subsequent funds will only be used for Dromara community operational expenses. For sponsoring anything, you can contact xiaoyu@dromara.org. Current sponsors are (for sponsors without a displayed name, default: Anonymous):\",\"Sponsor\",\"Sponsorship Amount (Yuan)\",\"Message\",\"Sponsorship Date\",\"连洁\",\"20\",\"小小赞赏\",\"2023-05-26\",\"一夏千晨\",\"50\",\"一包辣条奉上\",\"2023-05-22\",\"无名\",\"50\",\"2023-05-22\",\"无名\",\"100\",\"五一快乐(勿回应)\",\"2023-04-29\",\"meta.木予\",\"10\",\"2023-04-26\",\"无名\",\"100\",\"纯粹赞助(无需回应)\",\"2023-04-24\",\"Java 开发小王\",\"1\",\"很强\",\"2023-04-20\",\"令狐冲\",\"10\",\"加油\",\"2023-04-12\",\"如愿\",\"10\",\"猫大人帅哥，祝社区越来越好\",\"2023-04-04\",\"cszj\",\"100\",\"帮助很大，希望越来越好\",\"2023-04-03\",\"海子\",\"50\",\"感谢诸位无私的奉献\",\"2023-04-02\",\"西岭千秋雪\",\"50\",\"2023-03-29\",\"是白菜\",\"1\",\"2023-03-28\",\"泛微网络刘启成\",\"50\",\"学习 ee，对我非常有帮助，感谢\",\"2023-03-27\",\"无名\",\"10\",\"加油！\",\"2023-03-19\",\"无名\",\"100\",\"加油！\",\"2023-03-16\",\"Yyy\",\"1\",\"2023-03-01\",\"无名\",\"100\",\"2023-02-28\",\"Evan\",\"20\",\"2023-02-26\",\"朔\",\"10\",\"钱不多，但是心意是满满的，加油！\",\"2023-02-24\",\"无名\",\"200\",\"2023-02-05\",\"方\",\"28.88\",\"新年快乐，感谢开源\",\"2023-01-21\",\"无名\",\"200\",\"祝社区的兄弟姐妹们新年快乐\",\"2023-01-21\",\"无名\",\"0.26\",\"2023-01-11\",\"无名\",\"50\",\"2023-01-06\",\"紫气东来\",\"50\",\"感谢开源，坚持信念\",\"2022-12-14\",\"枫原万耶\",\"16.66\",\"2022-11-13\",\"岁月无声\",\"10.24\",\"希望越来越好\",\"2022-11-10\",\"邵昌明\",\"20\",\"买雪糕吃\",\"2022-11-02\",\"无名\",\"1\",\"2022-10-27\",\"大熊同学\",\"9.9\",\"希望我们开源社区长长久久！\",\"2022-10-26\",\"曙光\",\"50\",\"2022-10-25\",\"无名\",\"1\",\"Zdp 奉上\",\"2022-10-04\",\"无名\",\"200\",\"2022-09-28\",\"无名\",\"200\",\"2022-09-28\",\"无名\",\"200\",\"2022-09-28\",\"晚风\",\"100\",\"从接触 hutool 开始就喜欢上了，太好用了\",\"2022-09-08\",\"无名\",\"100\",\"支持开源，加油！\",\"2022-09-07\",\"陈乐辉\",\"100\",\"祝开源的路上越走越远\",\"2022-08-12\",\"阿超\",\"50\",\"开源就是人人为我，我为人人\",\"2022-07-27\",\"QZWML\",\"10\",\"2022-07-22\",\"无名\",\"100\",\"2022-06-30\",\"Eclipse\",\"20\",\"支持！\",\"2022-06-28\",\"朋云\",\"10\",\"2022-06-24\",\"红豆生南国\",\"10\",\"吃个雪糕\",\"2022-06-22\",\"修理工\",\"80\",\"代码规范，值得学习，用的方便，强烈推荐\",\"2022-05-27\",\"苗对我很重要\",\"10\",\"2022-05-19\",\"王磊\",\"50\",\"2022-05-19\",\"Hi\",\"10.24\",\"感谢开发\",\"2022-04-24\",\"哈哈\",\"66.66\",\"支持猫大人，祝社区越来越好~\",\"2022-04-14\",\"liming\",\"50\",\"祝社区越来越好!\",\"2022-04-14\",\"胡泰室\",\"50\",\"祝社区越来越好\",\"2022-04-14\",\"金卫信曾小燕\",\"10.24\",\"2022-04-14\",\"Chris\",\"150\",\"2022-04-12\",\"无名\",\"100\",\"2022-04-05\",\"青衫烟雨客\",\"10\",\"2022-03-20\",\"Zack\",\"20\",\"省了我好多事，太 nb 了！！支持下\",\"2022-03-10\",\"许伟超\",\"10\",\"感恩，尽我绵薄之力\",\"2022-03-09\",\"无名\",\"10\",\"虽然钱不多，但是我会一直打赏\",\"2022-03-09\",\"_\",\"20\",\"虎年吉祥\",\"2022-02-03\",\"无名\",\"166\",\"祝社区能做的越来越好\",\"2022-01-17\",\"吴南方\",\"20\",\"希望 hutool 能做的越来越好\",\"2022-01-09\",\"忘忧\",\"50\",\"2021-12-30\",\"达\",\"5\",\"hutool 省了很多重复造轮子的时间，特别棒，小小心意赞助一下\",\"2021-12-24\",\"吃瓜群众丙\",\"100\",\"为往圣继绝学。加油吧，少年。\",\"2021-12-23\",\"早点下班吧\",\"10\",\"2021-12-14\",\"Amiron 今天早睡了吗\",\"20\",\"2021-12-02\",\"phantom\",\"100\",\"2021-11-30\",\"无名\",\"11.27\",\"感谢，表示支持\",\"2021-11-27\",\"夏和顺顺\",\"50\",\"为往圣继绝学\",\"2021-11-25\",\"Chris\",\"100\",\"2021-11-24\",\"光明星辰\",\"50\",\"辣条钱\",\"2021-11-04\",\"无名\",\"3\",\"辣条钱\",\"2021-10-29\",\"奥利弗\",\"15\",\"2021-10-13\",\"XXXL\",\"50\",\"聊表心意，祝越来越好\",\"2021-09-30\",\"用用\",\"20\",\"2021-09-17\",\"宋不醒\",\"10\",\"加油\",\"2021-09-10\",\"🐶\",\"20\",\"聊表心意，有大用了\",\"2021-08-24\",\"Coffee\",\"10\",\"冲冲\",\"2021-07-29\",\"aliyu\",\"10\",\"aly\",\"2021-07-22\",\"段大志\",\"20\",\"国产开源蒸蒸日上\",\"2021-07-14\",\"喜世\",\"20\",\"感谢铁锚助教辛勤解答问题\",\"2021-06-28\",\"Group\",\"1.00\",\"蚊子腿也是肉\",\"2021-06-08\",\"大大的时间小小的我\",\"20\",\"2021-05-26\",\"Leo\",\"15\",\"真心不错，加油！\",\"2021-05-20\",\"辉辉同学\",\"66.66\",\"hutool 工具个人认为是封神佳作，顶礼膜拜！\",\"2021-05-19\",\"0X17\",\"100\",\"2021-05-16\",\"鑫爷\",\"16.8\",\"fans99\",\"2021-05-11\",\"こうう\",\"3\",\"2021-05-06\",\"一只想要奋斗的咸鱼\",\"66\",\"2021-04-29\",\"锄禾\",\"20\",\"能力有限，聊表心意\",\"2021-04-27\",\"然而\",\"64\",\"越开源越进步\",\"2021-04-23\",\"路，还很远\",\"20\",\"国产开源牛逼\",\"2021-04-23\",\"纳兰-曼孚\",\"20\",\"2021-04-15\",\"Stone\",\"200\",\"跟着猫大人搞开源，芜湖起飞\",\"2021-04-14\",\"疯子\",\"200\",\"国产开源,加油!\",\"2021-04-14\",\"tom\",\"50\",\"祝越来越好\",\"2021-04-14\",\"子豪 sirius\",\"50\",\"支持猫大人\",\"2021-04-14\",\"Sissie\",\"50\",\"感谢开源，支持喵大人\",\"2021-04-14\",\"WilliamSky\",\"50\",\"感谢开源，支持喵大人\",\"2021-04-14\",\"Sink\",\"10\",\"向大佬致敬\",\"2021-04-14\",\"石启蒙\",\"10\",\"祝开源社区越来越好\",\"2021-04-14\",\"吴俊杰_ken\",\"66.88\",\"学习加交流，社区越来越好\",\"2021-04-13\",\"正是在下李某人\",\"20\",\"猫大人牛批\",\"2021-04-13\",\"Zhw\",\"400\",\"做大做强，再创辉煌\",\"2021-04-13\",\"彭伟伦\",\"20\",\"猫大人的华子\",\"2021-04-13\",\"心中的明月\",\"30\",\"Tshirt 好漂亮，好想要\",\"2021-04-13\",\"刘进\",\"20\",\"撸下胸毛\",\"2021-04-13\",\"黄灿达\",\"20\",\"支持\",\"2021-04-13\",\"赵镇\",\"33\",\"做大做强，再创辉煌\",\"2021-04-13\",\"kimmking\",\"2000\",\"祝福社区越来越好\",\"2021-04-12\",\"John\",\"400\",\"猫大人抽华子\",\"2021-04-12\",\"Charlyfeng\",\"10\",\"为往圣继绝学\",\"2021-04-12\",\"梁胜芳\",\"6.66\",\"祝组织越来越好\",\"2021-04-12\",\"Chris\",\"200\",\"祝福社区越来越好\",\"2021-04-11\",\"Jtiag\",\"20\",\"做大做强\",\"2021-04-02\",\"Nelson\",\"66\",\"做大做强，走向辉煌\",\"2021-04-02\",\"好方\",\"60\",\"我们一起学猫叫，一起喵喵喵喵喵~\",\"2021-04-02\",\"哼干嘛\",\"20\",\"加入的第一个组织，感谢猫大人\",\"2021-04-01\",\"静晓晨曦\",\"20\",\"支持猫大人，祝福社区越来越好\",\"2021-03-31\",\"Attract\",\"20\",\"聊表心意，祝福社区越来越好\",\"2021-03-31\",\"杨大侠\",\"60\",\"跟着猫大人搞开源\",\"2021-03-31\",\"ian\",\"200\",\"Dromara 最棒\",\"2021-03-31\",\"白\",\"20\",\"2021-03-31\",\"静静\",\"80\",\"强\",\"2021-03-31\",\"blizzard\",\"20\",\"感谢猫大人花费巨大的心血\",\"2021-03-31\",\"Jenkins\",\"100\",\"参加开源，共建社区\",\"2021-03-31\",\"Sean\",\"128\",\"祝社区越走越远\",\"2021-03-31\",\"肖邦\",\"20\",\"全力支持参与开源贡献自己的微博力量\",\"2021-03-31\",\"Ted 丶 L\",\"100\",\"祝社区越办越好\",\"2021-03-31\",\"hb\",\"60\",\"支持开源\",\"2021-03-31\",\"大黄蜂\",\"60\",\"感谢猫大人，请猫大人抽根华子\",\"2021-03-30\",\"半盏清茶\",\"20\",\"越来越好\",\"2021-03-30\",\"小旭\",\"20\",\"2021-03-30\",\"阳有白\",\"60\",\"请猫大人喝几吨白开水\",\"2021-03-30\",\"韩小波\",\"20\",\"中国开源加油\",\"2021-03-30\",\"Vilochen\",\"60\",\"希望猫大人的开源组织越来越壮大\",\"2021-03-30\",\"滴流乱转的小胖子\",\"60\",\"向猫大人老师致敬\",\"2021-03-30\",\"泊\",\"20\",\"支持猫大人的开源\",\"2021-03-30\",\"赵瑞\",\"20\",\"2021-03-30\",\"心想事成\",\"1\",\"2021-03-30\",\"李\",\"20\",\"支持一下\",\"2021-03-30\",\"Yul\",\"20\",\"2021-03-30\",\"bing\",\"20\",\"2021-03-30\",\"榕\",\"20\",\"2021-03-30\",\"keepCarry\",\"160\",\"dromara 永存\",\"2021-03-30\",\"xiaochun\",\"20\",\"猫大人加油，看好你哦\",\"2021-03-30\",\"梁超-ISAAC\",\"20\",\"支持支持\",\"2021-03-30\",\"子豪 sirius\",\"20\",\"支持开源\",\"2021-03-30\",\"瓦让\",\"80\",\"大家一起加油\",\"2021-03-30\",\"wyj\",\"20\",\"支持支持\",\"2021-03-30\",\"小小的太阳\",\"20\",\"猫大人牛批\",\"2021-03-30\",\"小雨淅淅\",\"20\",\"请猫大人喝奶茶\",\"2021-03-30\",\"苦了芥末\",\"20\",\"2021-03-30\",\"成龙\",\"50\",\"谢谢猫大人对于开源的贡献，感谢引路\",\"2021-03-30\",\"Chasen\",\"80\",\"哈哈，支持支持\",\"2021-03-30\",\"Menglg\",\"20\",\"2021-03-30\",\"闫兵\",\"66.66\",\"2021-03-30\",\"王一飞\",\"60\",\"2021-03-30\",\"张民鹏\",\"60\",\"祝 Dromara 社区越办越好\",\"2021-03-30\",\"Jasper\",\"60\",\"猫大人牛逼！\",\"2021-03-30\",\"子不语\",\"60\",\"一直想做开源，这也是离我最近的社区，社区加油！\",\"2021-03-30\",\"阿行\",\"20\",\"猫大人的小迷弟\",\"2021-03-30\",\"Wincher\",\"10.24\",\"为往圣继绝学\",\"2021-03-30\",\"Marcus\",\"20\",\"一个人可能走的更快，但一群人会走得更远\",\"2021-03-30\",\"欧葵\",\"60\",\"猫大人加油\",\"2021-03-30\",\"有。无。\",\"20\",\"2021-03-30\",\"哲一\",\"20\",\"2021-03-30\",\"刘耿华\",\"66\",\"猫大人牛逼\",\"2021-03-30\",\"乔帝鸽\",\"20\",\"做大做强，再创辉煌\",\"2021-03-30\",\"和尘同光\",\"20\",\"请猫大人喝咖啡\",\"2021-03-30\",\"~zZZachary\",\"60\",\"2021-03-30\",\"唐甜\",\"20\",\"跟着猫大人做开源\",\"2021-03-30\",\"小程故事多\",\"60\",\"加油，一如既往的支持\",\"2021-03-30\",\"东东\",\"60\",\"做大做强\",\"2021-03-30\",\"Truing\",\"20\",\"猫大人牛逼\",\"2021-03-30\",\"sikm\",\"20\",\"为往圣继绝学，大风起不可当石立\",\"2021-03-30\",\"One Day\",\"299\",\"2021-03-30\",\"jihe\",\"20\",\"开源冲\",\"2021-03-30\",\"豆豆\",\"99.99\",\"支持开源\",\"2021-03-30\",\"斯普特尼克\",\"60\",\"祝社区越来越繁荣\",\"2021-03-30\",\"orange\",\"20\",\"猫大人帅气\",\"2021-03-30\",\"钟如雷\",\"200\",\"请老板抽和天下\",\"2021-03-30\",\"Goku\",\"20\",\"加油，愿社区越来越好\",\"2021-03-30\",\"Try Everything\",\"20\",\"支持猫大人\",\"2021-03-30\",\"郡鸿\",\"20\",\"支持猫大人，支持开源\",\"2021-03-30\",\"FangQ\",\"20\",\"猫大人加油，Dromara 加油\",\"2021-03-30\",\"cycle\",\"120\",\"愿中国的开源事业越来越好，猫大人及其同仁们威武\",\"2021-03-30\",\"夜羽\",\"20\",\"向开源精神，脱帽致敬\",\"2021-03-30\",\"SUDONG\",\"80\",\"2021-03-30\",\"婷\",\"20\",\"猫大人牛批，超大声！\",\"2021-03-30\",\"Tusi\",\"20\",\"2021-03-30\",\"任富飞\",\"88\",\"越来越好\",\"2021-03-30\",\"时间会咬人\",\"60\",\"再接再励，做大做强\",\"2021-03-30\",\"sakila\",\"60\",\"猫大人抽华子\",\"2021-03-30\",\"虎宝\",\"66.66\",\"婷宝&虎宝，崔猫求疵\",\"2021-03-30\",\"一条小青龙\",\"20\",\"请猫大人吃鸡排\",\"2021-03-30\",\"徐培\",\"60\",\"请猫大人抽华子\",\"2021-03-30\",\"pengshao\",\"20\",\"猫大人加油\",\"2021-03-30\",\"F.C\",\"20\",\"猫大人威武，祝 Dromara 社区越办越好\",\"2021-03-30\",\"hellboy0621\",\"66.66\",\"为往圣继绝学\",\"2021-03-30\",\"吴哭哭\",\"60\",\"精神股东\",\"2021-03-30\",\"不忘初心\",\"120\",\"2021-03-29\",\"陈宏\",\"20\",\"2021-03-29\",\"恬恬好甜\",\"20\",\"2021-03-29\",\"瑞\",\"120\",\"2021-03-29\",\"Uncle George\",\"10.24\",\"2021-03-29\",\"Tree\",\"20\",\"2021-03-29\",\"Shallwetalk\",\"20\",\"2021-03-29\",\"莫生\",\"60\",\"请猫大人抽包华子\",\"2021-03-29\",\"YEZJ\",\"20\",\"2021-03-29\",\"Silent\",\"60\",\"2021-03-29\",\"SIGN\",\"20\",\"猫大人的狸猫\",\"2021-03-29\",\"张*\",\"20\",\"2021-03-29\",\"荼九\",\"66\",\"2021-03-29\",\"？\",\"20\",\"2021-03-29\",\"睡觉大王小汤\",\"1\",\"2021-03-29\",\"守候\",\"20\",\"猫大人牛逼\",\"2021-03-29\",\"Bruce\",\"10\",\"2021-03-29\",\"晏鹏\",\"10.24\",\"猫大人加油\",\"2021-03-29\",\"一条小路的距离\",\"20\",\"猫大人的华子\",\"2021-03-29\",\"嘉宝\",\"80\",\"请师父喝咖啡\",\"2021-03-29\",\"PeiXy\",\"60\",\"猫大人的胸毛\",\"2021-03-29\",\"L3nvy\",\"13\",\"猫大人 lol 分队第一塞拉斯\",\"2021-03-29\",\"comforyo\",\"20\",\"2021-03-29\",\"莫白\",\"9.99\",\"感恩\",\"2021-03-29\",\"做成一件小事\",\"20\",\"猫大人的小学徒\",\"2021-03-29\",\"zendwang\",\"20\",\"2021-03-29\",\"星尘\",\"9.99\",\"气氛搞起来\",\"2021-03-29\",\"萧\",\"60\",\"为往圣继绝学\",\"2021-03-29\",\"陈龙\",\"20\",\"开源无敌，拒绝 996\",\"2021-03-29\",\"**涛\",\"50\",\"2021-03-29\",\"yarne\",\"66.66\",\"共同的事业，深深的友情\",\"2021-03-29\",\"E.S.\",\"60\",\"大锅，喝阔落！\",\"2021-03-29\",\"东江 DJ\",\"20\",\"2021-03-29\",\"ZhW\",\"20\",\"2021-03-29\",\"Mr...犯\",\"20\",\"2021-03-29\",\"林\",\"20\",\"2021-03-29\",\"天地\",\"20\",\"2021-03-29\",\"项峥\",\"20\",\"猫大人牛逼\",\"2021-03-29\",\"Easley\",\"200\",\"猫大人牛逼\",\"2021-03-29\",\"秦旭\",\"60\",\"2021-03-29\",\"Neal\",\"20\",\"猫大人的错别字检查员\",\"2021-03-29\",\"Chovi.Wu\",\"10.24\",\"表哥加油\",\"2021-03-29\",\"Niverkk\",\"20\",\"2021-03-29\",\"～阿槑～\",\"20\",\"2021-03-29\",\"Witt\",\"20\",\"支持猫大人\",\"2021-03-29\",\"屈仁能\",\"218.88\",\"猫大人家的菜鸟\",\"2021-03-29\",\"侯瑞哲\",\"20\",\"请猫大人喝咖啡\",\"2021-03-29\",\"Phoenix\",\"20\",\"感谢猫大人带我们认识开源\",\"2021-03-29\",\"黄放\",\"20\",\"为往圣继绝学\",\"2021-03-29\",\"那会\",\"20\",\"感谢猫大人\",\"2021-03-29\",\"Liquid\",\"20\",\"2021-03-29\",\"audi\",\"15\",\"喵小喵\",\"2021-03-29\",\"KaitoShy\",\"6.66\",\"2021-03-29\",\"氺\",\"20\",\"2021-03-29\",\"Ncy\",\"20\",\"喵喵喵\",\"2021-03-29\",\"HelloWorld\",\"20\",\"靡不有初，鲜克有终\",\"2021-03-29\",\"孙龙\",\"60\",\"2021-03-29\",\"maybe\",\"10.24\",\"2021-03-29\",\"biao\",\"20\",\"2021-03-29\",\"BetterWp\",\"66.66\",\"跟着猫大人冲\",\"2021-03-29\",\"502819\",\"20\",\"猫大人威武霸气\",\"2021-03-29\",\"Z\",\"10\",\"猫大人抽华子\",\"2021-03-29\",\"陈曦\",\"66.66\",\"2021-03-29\",\"一朵云\",\"20\",\"2021-03-29\",\"姜吉宁\",\"60\",\"做大做强\",\"2021-03-29\",\"飞鸿雪泥\",\"60\",\"开源万岁\",\"2021-03-29\"]},\"257\":{\"h\":\"Members\"},\"258\":{\"h\":\"News\"},\"259\":{\"h\":\"Fast Request 2023.2.1-Release\"},\"260\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。 Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。 它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生，3 秒调完 Spring 接口不是梦，所以少年，赶紧上号吧\",\"倾听用户的声音，不断提升自我，本次Restful Fast Request更新主要内容如下：\",\"新功能、优化项、修复项\",\"最新域名\",\"UI 简化\",\"api 文档支持保存和打开\",\"bilibili 视频教程直达\",\"自动域名优化\",\"Map 解析优化\",\"show apis 放入到右键菜单\",\"统计页面加入了版本号\",\"url 和 curl 拷贝有 environment 变量的时候 url 没替换变量\",\"curl 以 form-urlencoded 和-d 形式导入解析错乱\"]},\"261\":{\"h\":\"最新域名\",\"t\":[\"申请了域名，叫api buddy，翻译过来是API 伴侣，也挺好记。原老版本功能文档将不再服务！\",\"api-buddy.cn -> 中文站，映射到 gitee pages\",\"api-buddy.com -> 英文站，映射到 github pages\"]},\"262\":{\"h\":\"1.UI 简化\",\"t\":[\"将老版本横向的 3 个组件(method 下拉框,url 输入框,响应下拉框)简化为 1 个,并且移除响应下拉框.增加简捷度\",\"urlInputWithMethod\"]},\"263\":{\"h\":\"2.api 文档支持保存和打开\",\"t\":[\"openDoc\"]},\"264\":{\"h\":\"3.apis 放入到右键菜单\",\"t\":[\"前一个版本在 Controller 中任意位置右键唤起Generate，选择Show apis即可展示当前控制器中的所有 API ，现在直接放入右键减少层级\",\"showApis\"]},\"265\":{\"h\":\"4.统计页面加入了版本号\",\"t\":[\"pluginVersion\",\"还有非常多的细节优化不再一一描述，赶紧升级吧！\"]},\"266\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->这里\",\"看完还不赶紧上号？\"]},\"267\":{\"h\":\"Hmily released 2.0.2-Release\"},\"268\":{\"h\":\"Hmily released 2.0.2-Release\",\"t\":[\"Resolved the issue of SpringCloud using Hystrix to configure thread pool.\",\"New issue with SpringCloud embedded transaction calls.\",\"Added Hmily load balancing strategy.\",\"Other bug fixes and code optimizations.\",\"Remove unnecessary third-party JAR packages.\",\"Introduction of zero intrusion mode.\"]},\"269\":{\"h\":\"Hmily's support for the popular RPC framework and Spring.\",\"t\":[\"Dubbo 2.7.0 for all versions below.\",\"SpringCloud Dalston and above, including support for Finchley and Greenwich\",\"All versions of Motan.\",\"All Spring versions up to 3.0.\"]},\"270\":{\"h\":\"Hmily has a load-balancing policy for user RPC clusters in version 2.0.2.\",\"t\":[\"Hmily provides its own implementation of the load-balancing strategy, only for interfaces with @Hmily added\",\"Dubbo cluster configuration with loadbalance=\\\"hmily\\\"\",\" <dubbo:reference timeout=\\\"50000\\\" interface=\\\"org.dromara.hmily.demo.dubbo.account.api.service.AccountService\\\" id=\\\"accountService\\\" retries=\\\"0\\\" check=\\\"false\\\" actives=\\\"20\\\" loadbalance=\\\"hmily\\\"/> \",\"Spring Cloud added to the caller's YML configuration file:\",\"hmily ： ribbon: rule enabled : true \"]},\"271\":{\"h\":\"Documents\",\"t\":[\"Official document: https://dromara.org/website/zh-cn/docs/hmily/index.html\",\"Github: https://github.com/yu199195/hmily\",\"Gitee: https://gitee.com/dromara/hmily\",\"Welcome to Star Fork, provide excellent code and suggestions.\"]},\"272\":{\"h\":\"One year later, the dromara team released version 2.1.1 of the new architecture Hmily distributed transaction framework\",\"t\":[\"Thank you guys for your support all the way, and keep everyone waiting. In this version, our team refactored the entire project, reasonably divided functional modules, added configuration centers, adjusted the underlying storage structure, solved difficult bugs, and supported other new features, and absorbed more outstanding open source community members to join in.\"]},\"273\":{\"h\":\"Architecture\"},\"274\":{\"h\":\"Features\",\"t\":[\"High availability·: Supports abnormal transaction rollback and overtime transaction recovery in distributed scenarios to prevent transaction suspension.\",\"Ease of use: Provide zero-invasive Spring-Boot, Spring-Namespace to quickly integrate with business systems.\",\"High performance: Decentralized design, fully integrated with business systems, naturally supports cluster deployment.\",\"Observability: Performance monitoring of multiple metrics by Metrics, as well as admin management UI .\",\"Multiple RPCs: support Dubbo, SpringCloud, Motan, Sofa-rpc and other well-known RPC frameworks.\",\"Log storage: Support Mysql, Oracle, Mongodb, Redis, Zookeeper, etc.\",\"Complex scenarios: Support RPC nested call transactions.\"]},\"275\":{\"h\":\"Refactoring part\",\"t\":[\"Module division:\",\"Extract the SPI custom module and It's open-the-box.\",\"SPI module that defines multiple storage methods for transaction logs.\",\"SPI module that defines multiple serialization methods for transaction logs.\",\"Add configuration center, support various mainstream configuration centers (Nacos, Apollo, Zookeeper, etc.), and support dynamic refresh of configuration.\",\"Add metrics module to monitor various information at runtime.\",\"Remove the core transaction execution module.\",\"Extract multiple RPC support modules.\",\"Extract the Spring and Spring Boot support modules.\",\"On the dependent package version:\",\"Guava upgraded to 2.9.0.\",\"Curator upgraded to 5.1.0.\",\"Code quality:\",\"Strict check-style code inspection, adhering to the principle of elegance and simplicity (talk is cheap, show you code).\",\"openness :\",\"The community pursues the basic principles of simplicity, happiness, and harmony.\",\"Goal:\",\"Create a high-availability, high-performance, easy-to-use financial-level distributed transaction solution.\"]},\"276\":{\"h\":\"Solve bugs:\",\"t\":[\"The Dubbo framework does not support the use of annotations (spring-boot-starter-dubbo).\",\"The Motan framework does not support the use of annotations.\",\"If Spring Cloud users use Feign and Hystrix to integrate Hmily, the thread switching problem occurs.\",\"In extreme cases, the transaction log serialization is abnormal.\",\"If timeout happen in try , It will cause the transaction suspension bug.\",\"When the confirm and cancel phases are abnormal, the transaction fails to rollback.\",\"In the transaction log storage, two modes of synchronous and asynchronous are supported for users to choose.\"]},\"277\":{\"h\":\"User guide\",\"t\":[\"For Hmily users, it only takes three steps to achieve the BASE transaction between RPC service calls\",\"Add the maven dependencies supported by Hmily for various RPC.\",\"Add Hmily configuration.\",\"Add @Hmily annotation to RPC interface method.\"]},\"278\":{\"h\":\"Dependency changes\",\"t\":[\"There is no change to the dependencies, only the version needs to be upgraded to 2.1.0. Here are examples of Dubbo microservices.\"]},\"279\":{\"h\":\"Dubbo RPC microservices\",\"t\":[\"Dubbo interface service dependency.\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-annotation</artifactId> <version>2.1.0</version> </dependency> \",\"Dubbo service provider depends on version<2.7.\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-dubbo</artifactId> <version>2.1.0</version> </dependency> or <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-spring-boot-starter-dubbo</artifactId> <version>2.1.0</version> </dependency> \"]},\"280\":{\"h\":\"Hmily configuration changes\",\"t\":[\"In the new version 2.1.0, the hmily-config module has been added to support local and registry modes. The user first needs to create a new file named hmily.yml under the project resouce file. The default path is the project's resource directory, it can also be specified with -Dhmily.conf, or the configuration can be placed in the user.dir directory. Priority level -Dhmily.conf> user.dir> resource. The file format is as follows (The local mode of configuration):\",\" server: configMode: local appName: account-dubbo config: appName: account-dubbo serializer: kryo contextTransmittalMode: threadLocal scheduledThreadMax: 16 scheduledRecoveryDelay: 60 scheduledCleanDelay: 60 scheduledPhyDeletedDelay: 600 scheduledInitDelay: 30 recoverDelayTime: 60 cleanDelayTime: 180 limit: 200 retryMax: 10 bufferSize: 8192 consumerThreads: 16 asyncRepository: true autoSql: true phyDeleted: true storeDays: 3 repository: mysql repository: database: driverClassName: com.mysql.jdbc.Driver url : jdbc:mysql://127.0.0.1:3306/hmily?useUnicode=true&characterEncoding=utf8 username: root password: maxActive: 20 minIdle: 10 connectionTimeout: 30000 idleTimeout: 600000 maxLifetime: 1800000 \",\"If you want to use Nacos as configuration center:\",\"hmily: server: configMode: nacos appName: xxxxx remote: nacos: server: 192.168.3.22:8848 dataId: hmily.properties group: DEFAULT_GROUP timeoutMs: 6000 fileExtension: yml passive: true \",\"If you want use Apollo as configuration center：\",\"hmily: server: configMode: apollo appName: xxxx remote: apollo: appId: hmily-xxxxx configService: http://192.168.3.22:8080 namespace: byin_hmily secret: fileExtension: yml passive: true env: dev meta: http://192.168.3.22:808 \",\"If you want to know more configuration methods and detailed explanations of configuration content, please refer to: https://dromara.org/zh-cn/docs/hmily/config.html .\",\"Changes in the use of annotation methods\",\"In the previous version, RPC interface and implementation only need to add @Hmily annotation, but now It need to be changed, you need to add @Hmily in the RPC interface method, which is used to identify this is a Hmily distributed transaction interface method , besides, you need to add @HmilyTCC to the implementation of the interface, and then specify the method names of confirm and cancel.\",\"Example (say method in Dubbo needs to participate in distributed transactions):\",\"public interface HelloService { @Hmily void say(String hello); } public class HelloServiceImpl implements HelloService { @HmilyTCC(confirmMethod = \\\"sayConfrim\\\", cancelMethod = \\\"sayCancel\\\") public void say(String hello) { System.out.println(\\\"hello world\\\"); } public void sayConfrim(String hello) { System.out.println(\\\" confirm hello world\\\"); } public void sayCancel(String hello) { System.out.println(\\\" cancel hello world\\\"); } } \",\"Example (say method in springcloud needs to participate in distributed transactions):\",\"Spring-cloud service caller FeignClient.\",\"@FeignClient(value = \\\"helle-service\\\") public interface HelloService { @Hmily @RequestMapping(\\\"/helle-service/sayHello\\\") void say(String hello); } \",\"Spring-cloud provider.\",\"@RestController public class HelloController { private final HelloService helloService ; @Autowired public AccountController(HelloService helloService) { this.helloService= helloService; } @RequestMapping(\\\"/sayHello\\\") public void payment(String hello) { return helloService.say(hello); } } public interface HelloService { void say(String hello); } public class HelloServiceImpl implements HelloService { @HmilyTCC(confirmMethod = \\\"sayConfrim\\\", cancelMethod = \\\"sayCancel\\\") public void say(String hello) { System.out.println(\\\"hello world\\\"); } public void sayConfrim(String hello) { System.out.println(\\\" confirm hello world\\\"); } public void sayCancel(String hello) { System.out.println(\\\" cancel hello world\\\"); } } \",\"Changes in transaction log storage structure\",\"Users don't need to care about using or upgrading, the framework will be initialized by default.\"]},\"281\":{\"h\":\"Next version\",\"t\":[\"Because of the adjustment of the architecture, it will be easier to support other modes. In the next version, TAC mode (try-auto-cancel) will be released, which will greatly simplify the use of the framework. You need only to care about the development of confirm and cancel methods, and It's provide better compatibility with the transformation of the old system. Don't worry about additional development tasks, just leave everything to Hmily!\",\"It will support Brpc.\",\"It will support Tars-rpc.\"]},\"282\":{\"h\":\"Community\",\"t\":[\"We uphold the principle of harmony and happiness. If you have ideas and want to contribute to community, come and join us!\",\"Github: https://github.com/dromara/hmily\",\"Gitee: https://gitee.com/dromara/hmily\",\"QQ group: 162614487\"]},\"283\":{\"h\":\"Hmily distributed transaction restart monthly report\",\"t\":[\"Hmily is a flexible distributed transaction architecture with high performance, high avalibility and ease to use. At present, it provides support for Dubbo, Spring-Cloud, Motan, GRPC and other RPC frameworks. In terms of ease of use, it provides zero-intrusive rapid integration of Spring-Boot and Spring-Namespace, with the goal of building a distributed transaction solution of financial level.\"]},\"284\":{\"h\":\"Adjust Hmily architecture with more reasonable module partition\",\"t\":[\"Architecture:\",\"全景图\",\"Architecture adjustment:\",\"Pull out the core execution module, support a variety of transaction mode and mixed use of TCC mode, TAC mode.\",\"The core module removes dependencies on Spring.\",\"Define implementations of various SPI interfaces.\",\"New hmily-rpc : aggregates support for various RPC frameworks.\",\"Added hmily-spi : Hmily framework custom SPI mechanism implementation.\",\"New hmily-bom : resolves version dependency management conflicts.\",\"Added hmily-metrics: monitoring JVM, thread, transaction health, time, etc.\",\"New hmily-TCC : Core implementation of TCC pattern.\",\"Added hmily-TCC : Core implementation of TAC mode.\",\"**SPI module partition: **\",\"Added hmily-repository: transaction log storage module with support (MySQL, Oracle, PostgreSQL, SQL Server, ZooKeeper, Redis, MongoDB, File).\",\"Added hmily-serializer: transaction log serializer module, support (Hessian, JDK, Kryo, Protobuf)\",\"Added hmily-config: config module to support (local mode, Zookeeper, Nacos, Apollo, Etcd).\",\"Added hmily-tac-SQLParser: SQL parsing module under TAC mode\"]},\"285\":{\"h\":\"Gather the Hmily Community Issue and solve bugs.\",\"t\":[\"hmily-bug\",\"For example, in the community, it is gather the problems reported by the community, as well as to cooperate with the community for developing new version.\",\"**Solve bug: **\",\"Dubbo framework does not support annotation (spring-boot-starter-dubbo)\",\"The Motan framework does not support the use of annotations\",\"Exceptions in Spring-Cloud users when integrating Hmily with Hystrix using Feign.\",\"Transaction log serialization exception.\",\"Timeout exception transaction suspension bug.\",\"Transaction timing recovers bugs.\",\"**Added function: **\",\"build: Added travis-ci feature\",\"Transaction log support: Oracle, PostgreSQL, Sqlsever, Mongo, Zookeeper, File, Redis.\",\"Configuration module: new configuration center support for Apollo, ETCD, and Nacos\",\"Demo: Added Motan-RPC to use Hmily distributed transaction.\"]},\"286\":{\"h\":\"Community building\",\"t\":[\"The community adheres to the principles of simplicity, pleasure, elegance, and harmony.\",\"Code guidelines: The code follows the HMILY-CHECKSTYLE standard, and there is plenty of room for flexibility. Talk is cheap,show you code.\",\"Open rule: I hope everyone here can offer good ideas, we can discuss together, review code repeatedly, think about solving bugs, grow happily.\"]},\"287\":{\"h\":\"Recently\",\"t\":[\"Hmily-2.1.0 of the latest architecture will be released (TCC mode only will be supported).\",\"Configuration module\",\"Configuration dynamic refresh function, support all configuration centers.\",\"TAC mode:\",\"sql-parser: accessing Apache-Shardingsphere, Apache-Calcite.\",\"SQL-revert: Under development.\"]},\"288\":{\"h\":\"At last\",\"t\":[\"Good to be here for the season, at this point in time, Hmily-2.2.0 will be released, which will fully support TAC, TCC modes. TAC(Transaction Auto Rollback): With this mode, users no longer have to worry about writing reverse cancel methods like TCC. Greatly reduce the use cost and learning cost. TCC : Stability, reliability has been greatly strengthened, completely solve the problem of transaction suspension.\",\"More RPC framework support: BRPC and more.\",\"Support XA mode.\",\"Github: https://github.com/dromara/hmily\",\"Gitee: https://github.com/shuaiqiyu/hmily\",\"QQ group: 162614487\"]},\"289\":{\"h\":\"Hutool-5.8.0.M1 released, attempting milestone release\",\"t\":[\"Hutool is a small but complete Java utility class library that provides elegant, efficient and convenient tool methods.\"]},\"290\":{\"h\":\"What is Hutool\",\"t\":[\"! [architecture panorama] (/ assets/img/architecture/hutool - framework. PNG)\",\"Originally, this version should have been 5.7.23, but the user raised some issues, which must be resolved by modifying the original code structure:\",\"For example, when the MongoDB client is packaged, the packaged tool class has to be modified due to incompatible modifications to its driver.\",\"The part of the code involved in Bean copy (BeanCopier), due to a parameter failure, thought it was just a simple bug, and later found that there was a problem with the whole design... You can imagine the extent of the crash, liver spent two nights refactoring this part of the code.\",\"When I modified the code, I found that there were many design problems in many parts, and I made small refactoring by the way.\",\"In order to solve the possible impact of each major version upgrade on old users, this version is released in a milestone way, the version is M1 (feel to send a CPU to the user), and it is also to solve the problem of each \\\"radical\\\" upgrade of Hutool (after all, old age, to be stable).\",\"Purchase instead of donation, if you want to support Hutool, you can go to the Hutool home page and click -> click into the surrounding stores to buy Hutool peripheral to support Hutool. Oh, this is more affordable than donation (after all, I do not know how to thank the donor, it is a moral burden...)\",\"Thank you to the Hutool members who discussed and solved a lot of issues together in this release: @阿超 @Cherryrum @Husky\"]},\"291\":{\"h\":\"5.8.0.M1\"},\"292\":{\"h\":\"❌ Incompatible feature\",\"t\":[\"• 【db 】 【 Not backward compatible 】 Added MongoDB4.x support Return MongoClient change (pr#568@Gitee) • 【json】【Possible compatibility issues】 Modify JSONObject structure, inherited from MapWrapper • 【core】【Possible compatibility issues】 Rebuild BeanCopier, create XXXCopier, and delete XXXValueProvider • 【core】【Possible compatibility issues】URLEncoder is deprecated, URLEncoderUtil uses RFC3986 • 【core】【Possible compatibility issues】 Base32 separate encoding and decoding in order to reduce data load, support Hex mode • 【core】【Possible compatibility issues】 Base58 separate encoding and decoding • 【core】【Possible compatibility issues】 Base62 separate encoding and decoding, added inverted mode support • 【core】【compatibility issues】 PunyCode parameter changed from String to Charsequence • 【cron 】 【 Possible compatibility issues 】SimpleValueParser was renamed AbsValueParser and changed to abstract • 【poi 】 【 Possible compatibility problem 】ExcelUtil.getBigWriter Change the return value to BigExcelWriter • 【core】【Possible compatibility issues】 Opt.ofEmptyAble argument changed from List to Collection subclass (pr#580@Gitee) • 【json】【Possible compatibility issues】 When converting JSON to Bean, use JSON's own Settings instead of the default (issue#2212@Github) • 【json】【Possible compatibility issues】isOrder is discarded in JSONConfig, and is all ordered by default\"]},\"293\":{\"h\":\"🐣 New features\",\"t\":[\"• 【http 】 HttpRequest.form is in TableMap mode (issue#I4W427@Gitee) • 【core 】 AnnotationUtil adds getAnnotationAlias (pr#554@Gitee) • 【core 】 FileUtil.extName added special handling for tar.gz (issue#I4W5FS@Gitee) • 【crypto 】 Add XXTEA implementation (issue#I4WH2X@Gitee) • 【core 】 Add Table implementation (issue#2179@Github) • 【core 】 Add UniqueKeySet (issue#I4WUWR@Gitee) • 【core 】 Extension of conversion from Arabic numerals to Chinese to par value of invoice (pr#570@Gitee) • [core] ArrayUtil adds replace method (pr#570@Gitee) • 【core 】 CsvReadConfig Add the custom title line number (issue#2180@Github) • 【core 】 FileAppender Optimizes initial List size (pr#2197@Github) • 【core 】 Base32 adds pad support (pr#2195@Github) • 【core 】 Adds setFields methods to Dict (pr#578@Gitee) • 【db 】 New index related interface to db.meta (pr#563@Gitee) • 【db 】 The length of Column#typeName is removed from the column of Oracle (pr#563@Gitee). • 【poi 】 Optimize ExcelReader for read-only mode (pr#2204@Gitee) • 【poi 】 Optimizes ExcelBase and puts alias in • 【core 】 Improved StrUtil#startWith and endWith performance • 【cron 】 Add CronPatternParser and MatcherTable • 【http 】 GlobalHeaders add system attributes allowUnsafeServerCertChange、allowUnsafeRenegotiation • 【http 】 UserAgentUtil parsing, add MiUI/XiaoMi browser judgment logic (pr#581@Gitee) • 【core 】 FileAppender Add lock structure (pr#2211@Github) • 【poi 】 ExcelReader added construction (pr#2213@Github) • 【core 】 MapUtil provides change function, EnumUtil provides getBy function, enumeration field mapping through lambda (pr#583@Gitee) • 【core 】 CompareUtil adds comparingIndexed (pr#585@Gitee). • 【db 】 DruidDataSource build with custom parameters (issue#I4ZKCW@Gitee) • 【poi 】 ExcelWriter adds addImg overload (issue#2218@Github) • 【bloomFilter】 Added FuncFilter • 【http 】 Added GlobalInterceptor（issue#2217）\"]},\"294\":{\"h\":\"🐞Bug fixed\",\"t\":[\"• 【core 】 Fix ObjectUtil.hasNull passing null returns true (pr#555@Gitee) • 【core 】 Fix NumberConverter number conversion issue (issue#I4WPF4@Gitee) • 【core 】 Fixing problems with ReflectUtil.getMethods Obtaining interface methods (issue#I4WUWR@Gitee) • 【core 】 Fix uppercase conversion issue in NamingCase (pr#572@Gitee) • 【http 】 Fix to GET parameter carrying issue (issue#2189@Github) • 【core 】 Fix the parent path error of FileUtil and FileCopier relative paths (pr#2188@Github) • 【core 】 Fixed invalid fieldNameEditor in CopyOptions (issue#2202@Github) • 【json 】 Fix JSON parsing of Map.Entry • 【core 】 Fix MapConverter map and map conversion compatibility issues • 【poi 】 Solves POI-5.2.x compatibility issues when sax reads • 【core 】 Fixed the intersection problem of judging two time intervals (pr#2210@Github) • 【http 】 Fix tag deletion issue (issue#I4Z7BV@Gitee) • 【core 】 Fix file name with * in Win (pr#584@Gitee) • 【core 】 FileUtil.getMimeType added rar and 7z support (issue#I4ZBN0@Gitee) • 【json 】 JSON fixed invalid transient Settings (issue#2212@Github) • 【core 】 Fix IterUtil.getElementType getting null (issue#2222@Github) • 【core 】 Fix lunar calendar to Gregorian calendar in leap month error (issue#I4ZSGJ@Gitee)\"]},\"295\":{\"h\":\"Community co-construction\",\"t\":[\"We uphold the principle of harmony and happiness, code first, if you have ideas, are willing to grow with us, contribute together, come and join us!\",\"github:https://github.com/dromara/hutool\",\"gitee:https://gitee.com/dromara/hutool\"]},\"296\":{\"h\":\"Soul Gateway released version 1.0.4-RELEASE\"},\"297\":{\"h\":\"Soul Gateway released version 1.0.4-RELEASE\",\"t\":[\"Fix the bug that appeared in the Soul-admin of version 1.0.3.\",\"The serialization method supports custom extensions. The default serialization method has been changed from Kroy to Java serialization method.\",\"Dubbo support.\"]},\"298\":{\"h\":\"Changes Dubbo usage\",\"t\":[\"In the previous version (1.0.2 or 1.0.3), the parameters of Dubbo are passed through the header, and in the 1.0.4 version it is passed through the body.\",\"Relevant document information has been updated.\"]},\"299\":{\"h\":\"Recommendations on using version 1.0.4\",\"t\":[\"Version 1.0.4 supports user-defined plug-in, and supports regular expression matching.\",\"The change of Dubbo parameter transfer and it would be more friendly to use.\"]},\"300\":{\"h\":\"If you used version 1.0.2 before and want to update to version 1.0.4.\",\"t\":[\"Add role field in the plug-in table.\",\"Restart the Soul-admin of version 1.0.4.\",\"Perform synchronization of all plug-ins (because of serialization changes)\",\"Start the soul-web service of version 1.0.4.\"]},\"301\":{\"h\":\"For more information\",\"t\":[\"QQ group: 429951241\",\"Official website document: https://dromara.org/website/zh-cn/docs/soul/soul.html\",\"Github: https://github.com/Dromara/soul\",\"Gitee: https://gitee.com/dromara/soul\"]},\"302\":{\"h\":\"How convenient is the 2.1.X version of Soul Gateway?\",\"t\":[\"It has been a year since I open sourced Soul gateway in October last year, and received many suggestions from you guys in community. It has provided very rich functions after optimization, many of functions are highly cusmized, visualized, and highly extensible, now let's make a summary.\"]},\"303\":{\"h\":\"Plugin\",\"t\":[\"Provides various plug-ins, such as signature, monitoring, rate limiting, circuit breaker, Http proxy, Dubbo proxy, Websocket, etc.\",\"Support users to quickly develop plug-ins.\",\"All plug-in data and switch state support dynamic changes.\"]},\"304\":{\"h\":\"Data Synchronization\",\"t\":[\"Provides three different data synchronization strategies: Http long polling, Zookeeper, and Websocket, allowing users to choose freely.\",\"It is recommended to use Websocket, which is the lightest and more efficient in a cluster environment.\"]},\"305\":{\"h\":\"For Users\",\"t\":[\"First of all, we provide a client package that is convenient for users to access. Users can quickly register their projects to the Soul gateway.\",\"By default, users don't need to care about Soul Gateway's selectors, rules and other configurations.\",\"The user's previous interface is completely zero intrusion, It is only need to change to the domain name of the Soul gateway.\",\"For Dubbo users, the conversion from Http protocol to Dubbo protocol is almost completed by Http.\",\"Soul gataway uses the Http protocol, so it is destined to be cross-language, It is feasible for .Net programmers, PHP programmers to interact with Java program.\",\"For example, if you have a Dubbo interface, the parameter definition is a java bean,\",\"public void insert(final DubboTest dubboTest) { } public class DubboTest implements Serializable { private String id; private String name; } \",\"If you use the Soul gateway to call this method, your Http parameter is to pass a json string in the body, which is no different from a normal http call.\",\"{ \\\"id\\\": \\\"123\\\", \\\"name\\\": \\\"xiaoyu\\\" } \"]},\"306\":{\"h\":\"For Developers\",\"t\":[\"With more and more users, the situation of each company is different. Soul gateway in 2.1.X version are more extensible, making it convenient for developers .\",\"For example, there are may things could be extensible, such as Plug-ins, Filters, Dubbo parameter parser, iphost parser, return results, etc. We know that the default return result of the soul gateway is:\",\"{ \\\"code\\\": 200, \\\"message \\\": \\\"成功!\\\", \\\"data\\\": \\\"helloWorld!\\\" } \",\"However, when using the Soul gateway to call your business system, your business system may define the result that is not confirm the above structure. Maybe your field is called msg, which will cause a different structure and bring confusion to the front-end processing. We have noticed this thing: https://github.com/Dromara/soul/issues/109, now it has been optimized, users can customize the return results to define, the specifics depend on the Soul document.\"]},\"307\":{\"h\":\"What scenarios of Soul gateway are suitable, and what should you pay attention to?\",\"t\":[\"First of all, I think we should follow pragmatism, when you need to use it , then you have monmentum to know it. Thus, where are you need Soul?\"]},\"308\":{\"h\":\"Scenario1: Adimistration back-end\",\"t\":[\"First of all, as rising popularity of microservices, our back-end is divided into many micro-services. I believe that your companies has a back-end management system. I guess they generally have the following architecture.\",\"soul-rpc\",\"It may cause some troubles as follows:\",\"The developers of every microservice are developing based on this, which will become more and more cumbersome.\",\"How to publish without downtime? If you want to publish the commodity module, all other modules will not be able to work at this time.\",\"If a certain module interface requires a lot of requests (multiple deployments are required), and another module does not need it, how can you split it?\",\"Some people may say I can disassemble them into a few web projects. But this will bring new troubles, where to do load balance? Where to do unified certification?\",\"Soul gateway solves all the above problems very well, just register your microservice to Soul gateway. You can do whatever you want. For example, the order module has 2 nodes, and you want to release a new version, you can send request to one of them in the gateway, and update the version in the other node. When the update complete, let the request go though both two nodes. So Java programmer can also do the jod of system operation engineer.\",\"If you need unified authentication, you only need to add an authentication plug-in suitable for your business to the gateway.\",\"soul-admin\"]},\"309\":{\"h\":\"Scenario2: Company entrance gateway (open platform)\",\"t\":[\"If a company wants to do open-platform or an entrance gateway， authentication, rate limiting, circuit breaker, monitoring are indispensable.\",\"If your company is in Dubbo system, when developers have written the Dubbo service, there is no need to add a new web project to provide an interface.\",\"If an interface attacked by a large amount of request, how do you deal with it?\",\"Soul is here to solve the trouble above, this is the purpose of the design. Let’s take a look at the overall architecture diagram.\",\"soul-framework\",\"Soul gateway is implemented using reactive programming. Just look at the weather vane Spring, responsive programming is definitely an important direction in the future. When I was in 2014, I wrote for loop every day. The leader told me to use lambda expressions, which would be the trend of the future. Nowadays, if you are a java programmer but don't know lambda expression, you are out.\",\"soul-framework\"]},\"310\":{\"h\":\"There are many other functions\",\"t\":[\"Support websocket proxy.\",\"Support file upload and download.\",\"You can customize your plug-in development.\"]},\"311\":{\"h\":\"At last\",\"t\":[\"Github: https://github.com/Dromara/soul\",\"Gitee: https://gitee.com/dromara/soul\",\"Document: https://dromara.org/zh-cn/docs/soul/soul.html\",\"QQ group: 429951241\",\"Finally, Soul3.0 has been open sourced, which has been verified in the double 11 concurrency scene for 2 years. I hope It will help you guys.\"]},\"312\":{\"h\":\"【Soul gateway version2.2.0 release】Make high-performance gateways so easy!\",\"t\":[\"Let's take a look at the new features first, and then I would like to share my story.\",\"Completely pluggable architecture design, plug-in hot swap.\",\"Fully supports all versions of Dubbo, Alibaba-Dubbo, Apache-Dubbo.\",\"Support Dubbo generalization call, multi-parameter, complex parameter interface.\",\"Enhance the monitor plug-in and remove the Influxdb, add metrics such as memory, CPU, QPS, TPS, response delay, and support access to Prometheus.\",\"The SpringCloud plugin supports Eureka and Nacos two registration centers.\",\"The waf plugin is enhanced to support black or white lists and mixed modes.\",\"Remove the Hystrix circuit breaker to be an independent plug-in.\",\"Fix the Zookeeper data synchronization bug, and add the data synchronization method implemented by Nacos.\",\"Support multiple kinds of soul-client, such as traditional Spring and Springboot.\",\"Optimize the soul-admin user interface.\",\"Fix load balancing algorithm bug.\",\"Fix uploading large files bug.\",\"etc.\"]},\"313\":{\"h\":\"Experience the new architecture and get a high-availability and high-performance gateway in 10 minutes!\"},\"314\":{\"h\":\"Bootstrap soul-admin\",\"t\":[\"Please download soul-admin.jar, and bootstrap it.\",\"Please access http://localhost:9095/index.html , and the default user name is admin, password is 123456。\",\"> wget https://yu199195.github.io/jar/soul-admin.jar > java -jar soul-admin.jar --spring.datasource.url=\\\"jdbc:mysql://你的url:3306/soul?useUnicode=true&characterEncoding=utf-8&useSSL=false\\\" --spring.datasource.username='you username' --spring.datasource.password='you password' \"]},\"315\":{\"h\":\"Build your own gateway\",\"t\":[\"Firstly, you should create an empty Springboot project, please refer to soul-bootstrap. You can also visit the Spring official website :[https://spring.io/quickstart]\",\"Secondly, please add Maven dependency like follows：\",\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-webflux</artifactId> <version>2.2.2-RELEASE</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> <version>2.2.2-RELEASE</version> </dependency> <!--soul gateway start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-gateway</artifactId> <version>2.2.0</version> </dependency> <!--soul data sync start use websocket--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-websocket</artifactId> <version>2.2.0</version> </dependency> \",\"Please add the following configuration to your application.yaml:\",\"spring: main: allow-bean-definition-overriding: true management: health: defaults: enabled: false soul : sync: websocket : urls: ws://localhost:9095/websocket //Set to youe soul-admin address. \"]},\"316\":{\"h\":\"Experience plug-in hot swap under the new architecture\",\"t\":[\"Q: If I want to use circuit breaker, what should I do?\",\"A: You can add the following dependencies in pom.xml, please access https://dromara.org/zh-cn/docs/soul/soul.html for details.\",\" <!-- soul hystrix plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-hystrix</artifactId> <version>2.2.0</version> </dependency> <!-- soul hystrix plugin end--> \",\"Q: How can I use Dubbo service?\",\"A: If you are using Alibaba-Dubbo, then you should add the following dependencies in pom.xml.\",\" <!--soul alibaba dubbo plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-alibaba-dubbo</artifactId> <version>2.2.0</version> </dependency> <!-- soul alibaba dubbo plugin end--> \",\"If you are using Apache-Dubbo, then you should add the following dependencies in pom.xml.\",\" <!--soul apache dubbo plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-apache-dubbo</artifactId> <version>2.2.0</version> </dependency> <!-- soul apache dubbo plugin end--> \",\"For your inference: https://dromara.org/zh-cn/docs/soul/user-dubbo.html.\",\"Q: What if I want to use the rate limiter function?\",\"A: You can add the following dependencies, for your inference: https://dromara.org/zh-cn/docs/soul/plugin-rateLimiter.html\",\" <!-- soul ratelimiter plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-ratelimiter</artifactId> <version>2.2.0</version> </dependency> <!-- soul ratelimiter plugin end--> \",\"Q: What should I do if I don’t want to use some plug-ins?\",\"A: You can disable or enable the plug-in in the soul-admin. That is hot pluggable.\",\"All in all, If you want to use some plug-ins, then you can add the Maven dependency in pom.xml, but this is not called hot pluggable.\"]},\"317\":{\"h\":\"Features of Soul Gateway\",\"t\":[\"I think the biggest feature is traffic screening and control. No matter how complex the request is, traffic can be filtered, and processed according to various selectors, rules, and matching methods. This process is completely visualized, customized and effective immediately, without any changes to the program.\",\"Configurations is configured in the soul-admin and will be synchronized to the JVM memory of each Soul gateway node. This is also one of the keypoints to the high performance of the Soul gateway cluster. By the way, Http long polling, websocket, and Zookeeper are used to implement cache synchronization between Soul admin and Soul gateway.\",\"Soul gateway uses Reactor code to achieve the independent thread scheduling with low consumption. When we open 10 plug-ins, the delay of all traffic passing through the gateway is 1~2ms.\",\"The plug-in mechanism provides functions such as rate limiting, circuit breaker, black and white list, authentication, etc.\",\"Soul gateway supports A/B test, blue and green release (because all traffic is controlled, this is easy to do).\"]},\"318\":{\"h\":\"What scenarios of Soul gateway are suitable, and what should you pay attention to?\",\"t\":[\"First of all, I think we should follow pragmatism, when you need to use it , then you have monmentum to know it. Thus, where are you need Soul?\"]},\"319\":{\"h\":\"Scenario1: Adimistration back-end\",\"t\":[\"First of all, as rising popularity of microservices, our back-end is divided into many micro-services. I believe that your companies has a back-end management system. I guess they generally have the following architecture.\",\"soul-admin\",\"It may cause some troubles as follows:\",\"The developers of every microservice are developing based on this, which will become more and more cumbersome.\",\"How to publish without downtime? If you want to publish the commodity module, all other modules will not be able to work at this time.\",\"If a certain module interface requires a lot of requests (multiple deployments are required), and another module does not need it, how can you split it?\",\"Some people may say I can disassemble them into a few web projects. But this will bring new troubles, where to do load balance? Where to do unified certification?\",\"Soul gateway solves all the above problems very well, just register your microservice to Soul gateway. You can do whatever you want. For example, the order module has 2 nodes, and you want to release a new version, you can send request to one of them in the gateway, and update the version in the other node. When the update complete, let the request go though both two nodes. So Java programmer can also do the jod of system operation engineer.\",\"If you need unified authentication, you only need to add an authentication plug-in suitable for your business to the gateway.\"]},\"320\":{\"h\":\"Scenario2: Company entrance gateway (open platform)\",\"t\":[\"If a company wants to do open-platform or an entrance gateway， authentication, rate limiting, circuit breaker, monitoring are indispensable.\",\"If your company is in Dubbo system, when developers have written the Dubbo service, there is no need to add a new web project to provide an interface.\",\"If an interface attacked by a large amount of request, how do you deal with it?\",\"Soul is here to solve the trouble above, this is the purpose of the design. Let’s take a look at the overall architecture diagram.\",\"soul-framework\",\"Soul gateway is implemented using reactive programming. Just look at the weather vane Spring, responsive programming is definitely an important direction in the future. When I was in 2014, I wrote for loop every day. The leader told me to use lambda expressions, which would be the trend of the future. Nowadays, if you are a java programmer but don't know lambda expression, you are out.\"]},\"321\":{\"h\":\"My open source story\",\"t\":[\"I started writing open source projects when I was in 2017. At first, I discussed distributed transactions \\\"LCN\\\" with Wang Liang. Later, I wrote distributed transaction middleware such as Hmily, Raincat, Myth, etc., and then wrote the Soul gateway, I have encountered many interesting things along the way, but also suffered from many novice users. The general feeling is that high extensiable, and pluggable design are really important for a good open source project. Here are some cases.\",\"Case 1: Soul gateway only supports Zookeeper at the beginning of data synchronization. Some users have reported that we do not have Zookeeper, What should we do?\",\"Case 2: Soul gateway supports Dubbo, but some users are Alibaba-Dubbo and some users are Apache-Dubbo, What should we do?\",\"Case 3: The clients provided by soul at the beginning are all based on Springboot. Some users are traditional Spring. What should we do?\",\"So plug-in design and SPI pluggable design is imperative.\",\"SPI VS pluggability\",\"It is true that the SPI expansion is the cornerstone of pluggability, but they are not completely equivalent. Give an example: If we store a piece of data first, then you have set the SPI interface, and there are many ways to achieve it, such as Mysql, Mongodb, Elasticseach, Zookeeper, etc. Now you have to consider whether to combine it in the project or put it in different Projects, packaged and loaded on demand? These are all things to be considered, so the SPI method cannot be a sure card.\",\"checkStyle\",\"Strict code specification is not only a respect for framework users in source code learning but alos an open source attitude.\",\"Strict code specifications make people look comfortable and make it easier for people to understand the entire code.\",\"I do hope that when you submit a PR, the local installation should be successful.\",\"Participate in open source\",\"At present, I mainly focus on Apache ShardingSphere, which is the first top-level project on database sub-database and sub-table organized by Chinese in Apache. Welcome everyone to participate. https://github.com/apache/shardingsphere.\",\"The Chinese people lag far behind in terms of open source and technology as large as chips and as small as MATLAB. I also hope that everyone has an open source mentality, participates in open source, learns technology, propagates ideas, and continues to learn for the future!\"]},\"322\":{\"h\":\"Welcome X File Storage to join dromara open source community, one-stop file storage\",\"t\":[\"Originally known as X Spring File Storage, it has been donated to the dromara open source organization\",\"One line of code stores files locally, FTP, SFTP, WebDAV, Alibaba Cloud OSS, Huawei Cloud OBS, Qiniu Cloud Kodo, Tencent Cloud COS, Baidu Cloud BOS, Youpai Cloud USS, MinIO, Amazon S3, Google Cloud Storage, Kingsoft Cloud KS3, Meituan Cloud MSS, JD Cloud OSS, Tianyi Cloud OOS, Mobile Cloud EOS, Woyun OSS, NetEase Shufan NOS, Ucloud US3, Qingyun QingStor, Ping An Cloud OBS, Shouyun OSS, IBM COS, and other storage platforms compatible with the S3 protocol. View all supported storage platforms\",\"💡 After connecting to Alist through WebDAV, you can use common storage services such as Baidu Cloud Disk, Tianyi Cloud Disk, Alibaba Cloud Disk, and Thunder Cloud Disk. Check Storage Platforms Supported by Alist\",\"GitHub：https://github.com/dromara/x-file-storage Gitee：https://gitee.com/dromara/x-file-storage\",\"Document1：https://x-file-storage.dromara.org Document2：https://x-file-storage.xuyanwu.cn Document3：https://spring-file-storage.xuyanwu.cn\",\"Change project name, change package name, optimize project structure\",\"Added the ability to directly read the HttpServletRequest stream for uploading, so the file does not fall to disk and is faster\",\"Added support for Metadata\",\"Optimize ACL exception handling\",\"Optimize file deletion logic\",\"Fixed the issue of ResetException occasionally occurring when uploading files to Amazon S3\",\"Donate to dromara open source community\"]},\"323\":{\"h\":\"Changes in project dependencies\",\"t\":[\"Versions before 2.0.0\",\"<dependency> <groupId>cn.xuyanwu</groupId> <artifactId>spring-file-storage</artifactId> <version>1.0.3</version> </dependency> \",\"2.0.0 and later versions\",\"<dependency> <groupId>org.dromara.x-file-storage</groupId> <artifactId>x-file-storage-spring</artifactId> <version>2.0.0</version> </dependency> \"]},\"324\":{\"h\":\"Changes in configuration parameters\",\"t\":[\"Versions before 2.0.0\",\"spring: file-storage: #File storage configuration default-platform: huawei-obs-1 #Default storage platform used thumbnail-suffix: \\\".min.jpg\\\" #Thumbnail suffix, such as [.min.jpg] [.png] #The configuration of the corresponding platform is written here, pay attention to the indentation to be aligned \",\"2.0.0 and later versions\",\"dromara: x-file-storage: #File storage configuration default-platform: huawei-obs-1 #Default storage platform used thumbnail-suffix: \\\".min.jpg\\\" #Thumbnail suffix, such as [.min.jpg] [.png] #The configuration of the corresponding platform is written here, pay attention to the indentation to be aligned \"]},\"325\":{\"h\":\"Changes in package name\",\"t\":[\"Versions before 2.0.0\",\"cn.xuyanwu.spring.file.storage cn.xuyanwu.spring.file.storage.spring \",\"2.0.0 and later versions\",\"org.dromara.x.file.storage.core org.dromara.x.file.storage.spring \",\"Click Quick Start to view how to use all storage platforms!\"]},\"326\":{\"h\":\"🔧 Configuration\",\"t\":[\"Here we take Alibaba Cloud OSS as an example. pom.xml is introduced into this project. The default here is the SpringBoot environment. For other environments, please refer to Use alone without SpringBoot\",\"<!--Introduce this project --> <dependency> <groupId>org.dromara.x-file-storage</groupId> <artifactId>x-file-storage-spring</artifactId> <version>2.0.0</version> </dependency> <!--Introduce Alibaba Cloud OSS SDK. If you use other storage platforms, introduce the corresponding SDK --> <dependency> <groupId>com.aliyun.oss</groupId> <artifactId>aliyun-sdk-oss</artifactId> <version>3.16.1</version> </dependency> \",\"Add the following basic configuration to the application.yml configuration file\",\"dromara: x-file-storage: #File storage configuration default-platform: aliyun-oss-1 #Default storage platform aliyun-oss: - platform: aliyun-oss-1 # Storage platform identification enable-storage: true # Enable storage access-key: ?? secret-key: ?? end-point: ?? bucket-name: ?? domain: ?? # Access the domain name, pay attention to the \\\"/\\\" ending, for example: https://abc.oss-cn-shanghai.aliyuncs.com/ base-path: test/ # base path \"]},\"327\":{\"h\":\"🔨Encoding\",\"t\":[\"Add the @EnableFileStorage annotation to the startup class\",\"@EnableFileStorage @SpringBootApplication public class SpringFileStorageTestApplication { public static void main(String[] args) { SpringApplication.run(SpringFileStorageTestApplication.class,args); } } \"]},\"328\":{\"h\":\"✨Start uploading\",\"t\":[\"Supports File, MultipartFile, byte[], InputStream, URL, URI, String, HttpServletRequest, and large files will be automatically uploaded in parts. If you want to support more methods, please read the File Adapter chapter\",\"@RestController public class FileDetailController { @Autowired private FileStorageService fileStorageService;//注入实列 /** * upload files */ @PostMapping(\\\"/upload\\\") public FileInfo upload(MultipartFile file) { //Only this line of code is needed to upload successfully return fileStorageService.of(file).upload(); } /** * Upload the file and return the file url successfully */ @PostMapping(\\\"/upload2\\\") public String upload2(MultipartFile file) { FileInfo fileInfo = fileStorageService.of(file) .setPath(\\\"upload/\\\") //Save to a relative path. For the convenience of management, you don’t need to write it. .setObjectId(\\\"0\\\") //Associated object id. For the convenience of management, you don’t need to write it. .setObjectType(\\\"0\\\") //Associated object type. For convenience of management, you don’t need to write it. .putAttr(\\\"role\\\",\\\"admin\\\") //Save some attributes, which can be obtained and used in aspects, saved upload records, customized storage platforms, etc. You don't need to write them .upload(); //Upload the file to the corresponding place return fileInfo == null ? \\\"Upload failed!\\\" : fileInfo.getUrl(); } /** * Upload pictures and return file information successfully *Image processing uses https://github.com/coobird/thumbnailator */ @PostMapping(\\\"/upload-image\\\") public FileInfo uploadImage(MultipartFile file) { return fileStorageService.of(file) .image(img -> img.size(1000,1000)) //Adjust the image size to 1000*1000 .thumbnail(th -> th.size(200,200)) //Generate a 200*200 thumbnail .upload(); } /** * Upload files to the designated storage platform and return file information successfully */ @PostMapping(\\\"/upload-platform\\\") public FileInfo uploadPlatform(MultipartFile file) { return fileStorageService.of(file) .setPlatform(\\\"aliyun-oss-1\\\") //Use the specified storage platform .upload(); } /** * Directly read the file in HttpServletRequest for upload, and successfully return the file information * There are some precautions when using this method. Please check the Basic Functions-Upload chapter of the document. */ @PostMapping(\\\"/upload-request\\\") public FileInfo uploadPlatform(HttpServletRequest request) { return fileStorageService.of(request).upload(); } } \"]},\"329\":{\"h\":\"🎨Other operations\",\"t\":[\"//Manually construct file information, which can be used for other operations FileInfo fileInfo = new FileInfo() .setPlatform(\\\"huawei-obs-1\\\") .setBasePath(\\\"test/\\\") .setPath(\\\"aa/\\\") .setFilename(\\\"image.png\\\") .setThFilename(\\\"image.png.min.jpg\\\"); //Does the file exist? boolean exists = fileStorageService.exists(fileInfo); //download byte[] bytes = fileStorageService.download(fileInfo).bytes(); //delete fileStorageService.delete(fileInfo); //Other more operations \",\"If you save file records to the database, you can also operate based on the URL more conveniently. For details, please read Save Upload Records Chapter\",\"//Get the FileInfo object directly from the database, making it easier to perform other operations FileInfo fileInfo = fileStorageService.getFileInfoByUrl(\\\"https://abc.def.com/test/aa/image.png\\\"); //Does the file exist? boolean exists = fileStorageService.exists(\\\"https://abc.def.com/test/aa/image.png\\\"); //download byte[] bytes = fileStorageService.download(\\\"https://abc.def.com/test/aa/image.png\\\").bytes(); //delete fileStorageService.delete(\\\"https://abc.def.com/test/aa/image.png\\\"); //Other more operations \",\"Click Quick Start to view how to use all storage platforms!\"]},\"330\":{\"h\":\"zyplayer-doc 1.1.6-Release\"},\"331\":{\"h\":\"简介\",\"t\":[\"zyplayer-doc是一款适合企业和个人私有化部署使用的 WIKI 知识库管理系统，提供在线化的知识库管理功能，专为私有化部署而设计，最大程度上保证企业或个人的数据安全。\",\"可用于企业内部协作的知识库、规章制度，企业对外的产品帮助文档，个人笔记、WIKI 知识库等场景使用。\",\"提供有富文本和 Markdown 格式的编辑器，具有附件、评论和历史版本的功能，同时可将编写的文档一键开启分享，提供有界面友好的开放文档查看功能。\",\"体验地址：https://zyplayer.com\",\"在线文档：https://doc.zyplayer.com\"]},\"332\":{\"h\":\"V1.1.6 更新内容\",\"t\":[\"参与本次更新的社区成员有：@sh1yu@diant ，感谢大家的贡献与辛勤付出！同时期待更多小伙伴的参与~\"]},\"333\":{\"h\":\"新增功能\",\"t\":[\"文档管理页面优化，更简洁和现代化\",\"新增模板管理功能\",\"新增文档移动和复制功能\",\"修改页面新建和附件保存逻辑\",\"增加达梦数据库支持\",\"db 模块 tab 页面增加右键菜单\",\"sql 执行器增加上下布局拖拽\"]},\"334\":{\"h\":\"功能优化\",\"t\":[\"Word 文档导出优化\",\"添加 rewriteBatchedStatements=true 提高批量操作数据库效率\",\"db 模块全局滚动条美化\",\"sql 执行器页面易用性优化\",\"db 模块增加节流、防抖函数，有效提升页面性能\",\"修改模块化加载，可以通过配置文件控制加载哪些模块，同时前端有对应显示\",\"其他各种细节优化\"]},\"335\":{\"h\":\"问题修复\",\"t\":[\"#I85QPE 处理附件列表问题，优化文件上传逻辑\",\"修改数据互导查询总条数时某些数据库将别名大写了的问题\",\"修复 oracle 数据库字段大小混写导致表数据结果页面报错问题\"]},\"336\":{\"h\":\"更新详情\",\"t\":[\"WIKI 文档查看管理页面\",\"1.png\",\"WIKI 文档编辑页面\",\"2.png\",\"WIKI 开放文档查看页面\",\"3.png\"]},\"337\":{\"h\":\"Projects\"}},\"dirtCount\":0,\"index\":[[\"数据库字段大小混写导致表数据结果页面报错问题\",{\"1\":{\"335\":1}}],[\"数据格式\",{\"1\":{\"81\":1}}],[\"优化文件上传逻辑\",{\"1\":{\"335\":1}}],[\"优化项\",{\"1\":{\"260\":1}}],[\"处理附件列表问题\",{\"1\":{\"335\":1}}],[\"问题修复\",{\"0\":{\"335\":1}}],[\"其他各种细节优化\",{\"1\":{\"334\":1}}],[\"防抖函数\",{\"1\":{\"334\":1}}],[\"执行器页面易用性优化\",{\"1\":{\"334\":1}}],[\"执行器增加上下布局拖拽\",{\"1\":{\"333\":1}}],[\"提高批量操作数据库效率\",{\"1\":{\"334\":1}}],[\"提供有界面友好的开放文档查看功能\",{\"1\":{\"331\":1}}],[\"提供有富文本和\",{\"1\":{\"331\":1}}],[\"提供在线化的知识库管理功能\",{\"1\":{\"331\":1}}],[\"添加\",{\"1\":{\"334\":1}}],[\"功能优化\",{\"0\":{\"334\":1}}],[\"页面增加右键菜单\",{\"1\":{\"333\":1}}],[\"模块增加节流\",{\"1\":{\"334\":1}}],[\"模块全局滚动条美化\",{\"1\":{\"334\":1}}],[\"模块\",{\"1\":{\"333\":1}}],[\"增加达梦数据库支持\",{\"1\":{\"333\":1}}],[\"增加简捷度\",{\"1\":{\"262\":1}}],[\"同时前端有对应显示\",{\"1\":{\"334\":1}}],[\"同时期待更多小伙伴的参与~\",{\"1\":{\"332\":1}}],[\"同时可将编写的文档一键开启分享\",{\"1\":{\"331\":1}}],[\"参与本次更新的社区成员有\",{\"1\":{\"332\":1}}],[\"参加开源\",{\"1\":{\"256\":1}}],[\"在线文档\",{\"1\":{\"331\":1}}],[\"体验地址\",{\"1\":{\"331\":1}}],[\"评论和历史版本的功能\",{\"1\":{\"331\":1}}],[\"具有附件\",{\"1\":{\"331\":1}}],[\"格式的编辑器\",{\"1\":{\"331\":1}}],[\"知识库等场景使用\",{\"1\":{\"331\":1}}],[\"知识库管理系统\",{\"1\":{\"331\":1}}],[\"企业对外的产品帮助文档\",{\"1\":{\"331\":1}}],[\"规章制度\",{\"1\":{\"331\":1}}],[\"专为私有化部署而设计\",{\"1\":{\"331\":1}}],[\"🎨other\",{\"0\":{\"329\":1}}],[\"✨start\",{\"0\":{\"328\":1}}],[\"你的url\",{\"1\":{\"314\":1}}],[\"成功\",{\"1\":{\"306\":1}}],[\"成龙\",{\"1\":{\"256\":1}}],[\"🔨encoding\",{\"0\":{\"327\":1}}],[\"🔧\",{\"0\":{\"326\":1}}],[\"💡\",{\"1\":{\"322\":1}}],[\"🐞bug\",{\"0\":{\"294\":1}}],[\"🐣\",{\"0\":{\"293\":1}}],[\"🐶\",{\"1\":{\"256\":1}}],[\"❌\",{\"0\":{\"292\":1}}],[\"看完还不赶紧上号\",{\"1\":{\"266\":1}}],[\"看好你哦\",{\"1\":{\"256\":1}}],[\"更简洁和现代化\",{\"1\":{\"333\":1}}],[\"更新详情\",{\"0\":{\"336\":1}}],[\"更新内容\",{\"0\":{\"332\":1}}],[\"更新数据库\",{\"1\":{\"81\":1}}],[\"更多详情\",{\"0\":{\"266\":1}}],[\"赶紧升级吧\",{\"1\":{\"265\":1}}],[\"赶紧上号吧\",{\"1\":{\"260\":1}}],[\"现在直接放入右键减少层级\",{\"1\":{\"264\":1}}],[\"选择show\",{\"1\":{\"264\":1}}],[\"前一个版本在\",{\"1\":{\"264\":1}}],[\"并且移除响应下拉框\",{\"1\":{\"262\":1}}],[\"并判断是否与接口符合\",{\"1\":{\"123\":1}}],[\"个人笔记\",{\"1\":{\"331\":1}}],[\"个\",{\"1\":{\"262\":1}}],[\"个组件\",{\"1\":{\"262\":1}}],[\"响应下拉框\",{\"1\":{\"262\":1}}],[\"输入框\",{\"1\":{\"262\":1}}],[\"下拉框\",{\"1\":{\"262\":1}}],[\"英文站\",{\"1\":{\"261\":1}}],[\"映射到\",{\"1\":{\"261\":2}}],[\"原老版本功能文档将不再服务\",{\"1\":{\"261\":1}}],[\"也挺好记\",{\"1\":{\"261\":1}}],[\"伴侣\",{\"1\":{\"261\":1}}],[\"翻译过来是api\",{\"1\":{\"261\":1}}],[\"叫api\",{\"1\":{\"261\":1}}],[\"申请了域名\",{\"1\":{\"261\":1}}],[\"形式导入解析错乱\",{\"1\":{\"260\":1}}],[\"以\",{\"1\":{\"260\":1}}],[\"以及加载器\",{\"1\":{\"123\":1}}],[\"没替换变量\",{\"1\":{\"260\":1}}],[\"没有甄别作用\",{\"1\":{\"127\":1}}],[\"变量的时候\",{\"1\":{\"260\":1}}],[\"拷贝有\",{\"1\":{\"260\":1}}],[\"统计页面加入了版本号\",{\"0\":{\"265\":1},\"1\":{\"260\":1}}],[\"放入到右键菜单\",{\"0\":{\"264\":1},\"1\":{\"260\":1}}],[\"自动域名优化\",{\"1\":{\"260\":1}}],[\"自动生成\",{\"1\":{\"260\":1}}],[\"视频教程直达\",{\"1\":{\"260\":1}}],[\"文档编辑页面\",{\"1\":{\"336\":1}}],[\"文档查看管理页面\",{\"1\":{\"336\":1}}],[\"文档导出优化\",{\"1\":{\"334\":1}}],[\"文档管理页面优化\",{\"1\":{\"333\":1}}],[\"文档支持保存和打开\",{\"0\":{\"263\":1},\"1\":{\"260\":1}}],[\"文章内部有报错\",{\"0\":{\"75\":1},\"1\":{\"54\":1,\"56\":3,\"57\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"66\":2,\"75\":1,\"88\":3,\"169\":1}}],[\"简化为\",{\"1\":{\"262\":1}}],[\"简化\",{\"0\":{\"262\":1},\"1\":{\"260\":1}}],[\"简介\",{\"0\":{\"260\":1,\"331\":1}}],[\"修复\",{\"1\":{\"335\":1}}],[\"修复项\",{\"1\":{\"260\":1}}],[\"修改数据互导查询总条数时某些数据库将别名大写了的问题\",{\"1\":{\"335\":1}}],[\"修改模块化加载\",{\"1\":{\"334\":1}}],[\"修改页面新建和附件保存逻辑\",{\"1\":{\"333\":1}}],[\"修理工\",{\"1\":{\"256\":1}}],[\"新增文档移动和复制功能\",{\"1\":{\"333\":1}}],[\"新增模板管理功能\",{\"1\":{\"333\":1}}],[\"新增功能\",{\"0\":{\"333\":1}}],[\"新功能\",{\"1\":{\"260\":1}}],[\"新年快乐\",{\"1\":{\"256\":1}}],[\"本次restful\",{\"1\":{\"260\":1}}],[\"倾听用户的声音\",{\"1\":{\"260\":1}}],[\"所以少年\",{\"1\":{\"260\":1}}],[\"所有数据类型的\",{\"1\":{\"104\":1}}],[\"接口不是梦\",{\"1\":{\"260\":1}}],[\"秒调完\",{\"1\":{\"260\":1}}],[\"为简化\",{\"1\":{\"260\":1}}],[\"为往圣继绝学\",{\"1\":{\"256\":8}}],[\"界面内更快更高效得调试你的\",{\"1\":{\"260\":1}}],[\"存储你的\",{\"1\":{\"260\":1}}],[\"检查服务器响应\",{\"1\":{\"260\":1}}],[\"它有一个漂亮的界面来完成请求\",{\"1\":{\"260\":1}}],[\"它是一个强大的\",{\"1\":{\"260\":1}}],[\"搜索工具\",{\"1\":{\"260\":1}}],[\"管理工具\",{\"1\":{\"260\":1}}],[\"管理器中\",{\"1\":{\"126\":1}}],[\"调试而生\",{\"1\":{\"260\":1}}],[\"调试工具\",{\"1\":{\"260\":1}}],[\"调用构造器初始化对象\",{\"1\":{\"123\":1}}],[\"调用自定义的\",{\"1\":{\"120\":1}}],[\"调用\",{\"1\":{\"104\":1,\"126\":1}}],[\"和\",{\"1\":{\"260\":3}}],[\"和尘同光\",{\"1\":{\"256\":1}}],[\"可以通过配置文件控制加载哪些模块\",{\"1\":{\"334\":1}}],[\"可以根据已有的方法帮助您快速\",{\"1\":{\"260\":1}}],[\"可用于企业内部协作的知识库\",{\"1\":{\"331\":1}}],[\"可能存在多台机器需要负载均衡的场景\",{\"1\":{\"81\":1}}],[\"工具包插件\",{\"1\":{\"260\":1}}],[\"工具个人认为是封神佳作\",{\"1\":{\"256\":1}}],[\"插件帮助你在\",{\"1\":{\"260\":1}}],[\"插件\",{\"1\":{\"260\":1}}],[\"飞鸿雪泥\",{\"1\":{\"256\":1}}],[\"姜吉宁\",{\"1\":{\"256\":1}}],[\"孙龙\",{\"1\":{\"256\":1}}],[\"鲜克有终\",{\"1\":{\"256\":1}}],[\"靡不有初\",{\"1\":{\"256\":1}}],[\"喵喵喵\",{\"1\":{\"256\":1}}],[\"喵小喵\",{\"1\":{\"256\":1}}],[\"氺\",{\"1\":{\"256\":1}}],[\"那会\",{\"1\":{\"256\":1}}],[\"黄放\",{\"1\":{\"256\":1}}],[\"黄灿达\",{\"1\":{\"256\":1}}],[\"侯瑞哲\",{\"1\":{\"256\":1}}],[\"屈仁能\",{\"1\":{\"256\":1}}],[\"～阿槑～\",{\"1\":{\"256\":1}}],[\"表哥加油\",{\"1\":{\"256\":1}}],[\"表示支持\",{\"1\":{\"256\":1}}],[\"秦旭\",{\"1\":{\"256\":1}}],[\"项峥\",{\"1\":{\"256\":1}}],[\"项目介绍\",{\"1\":{\"4\":1}}],[\"天地\",{\"1\":{\"256\":1}}],[\"林\",{\"1\":{\"256\":1}}],[\"犯\",{\"1\":{\"256\":1}}],[\"东江\",{\"1\":{\"256\":1}}],[\"东东\",{\"1\":{\"256\":1}}],[\"喝阔落\",{\"1\":{\"256\":1}}],[\"深深的友情\",{\"1\":{\"256\":1}}],[\"共同的事业\",{\"1\":{\"256\":1}}],[\"共建社区\",{\"1\":{\"256\":1}}],[\"涛\",{\"1\":{\"256\":1}}],[\"拒绝\",{\"1\":{\"256\":1}}],[\"萧\",{\"1\":{\"256\":1}}],[\"气氛搞起来\",{\"1\":{\"256\":1}}],[\"星尘\",{\"1\":{\"256\":1}}],[\"做成一件小事\",{\"1\":{\"256\":1}}],[\"做大做强\",{\"1\":{\"256\":8}}],[\"莫白\",{\"1\":{\"256\":1}}],[\"莫生\",{\"1\":{\"256\":1}}],[\"分队第一塞拉斯\",{\"1\":{\"256\":1}}],[\"嘉宝\",{\"1\":{\"256\":1}}],[\"晏鹏\",{\"1\":{\"256\":1}}],[\"守候\",{\"1\":{\"256\":1}}],[\"睡觉大王小汤\",{\"1\":{\"256\":1}}],[\"荼九\",{\"1\":{\"256\":1}}],[\"张\",{\"1\":{\"256\":1}}],[\"张民鹏\",{\"1\":{\"256\":1}}],[\"瑞\",{\"1\":{\"256\":1}}],[\"恬恬好甜\",{\"1\":{\"256\":1}}],[\"陈曦\",{\"1\":{\"256\":1}}],[\"陈龙\",{\"1\":{\"256\":1}}],[\"陈宏\",{\"1\":{\"256\":1}}],[\"陈乐辉\",{\"1\":{\"256\":1}}],[\"不断提升自我\",{\"1\":{\"260\":1}}],[\"不忘初心\",{\"1\":{\"256\":1}}],[\"不匹配此\",{\"1\":{\"127\":1}}],[\"精神股东\",{\"1\":{\"256\":1}}],[\"徐培\",{\"1\":{\"256\":1}}],[\"虎宝\",{\"1\":{\"256\":2}}],[\"虎年吉祥\",{\"1\":{\"256\":1}}],[\"再接再励\",{\"1\":{\"256\":1}}],[\"再创辉煌\",{\"1\":{\"256\":3}}],[\"时间会咬人\",{\"1\":{\"256\":1}}],[\"时会进来\",{\"1\":{\"81\":1}}],[\"任富飞\",{\"1\":{\"256\":1}}],[\"超大声\",{\"1\":{\"256\":1}}],[\"婷宝\",{\"1\":{\"256\":1}}],[\"婷\",{\"1\":{\"256\":1}}],[\"脱帽致敬\",{\"1\":{\"256\":1}}],[\"夜羽\",{\"1\":{\"256\":1}}],[\"愿中国的开源事业越来越好\",{\"1\":{\"256\":1}}],[\"愿社区越来越好\",{\"1\":{\"256\":1}}],[\"郡鸿\",{\"1\":{\"256\":1}}],[\"请点击\",{\"1\":{\"266\":1}}],[\"请求\",{\"1\":{\"260\":1}}],[\"请求和导出\",{\"1\":{\"260\":1}}],[\"请师父喝咖啡\",{\"1\":{\"256\":1}}],[\"请老板抽和天下\",{\"1\":{\"256\":1}}],[\"请猫大人抽包华子\",{\"1\":{\"256\":1}}],[\"请猫大人抽华子\",{\"1\":{\"256\":1}}],[\"请猫大人抽根华子\",{\"1\":{\"256\":1}}],[\"请猫大人吃鸡排\",{\"1\":{\"256\":1}}],[\"请猫大人喝咖啡\",{\"1\":{\"256\":2}}],[\"请猫大人喝奶茶\",{\"1\":{\"256\":1}}],[\"请猫大人喝几吨白开水\",{\"1\":{\"256\":1}}],[\"钟如雷\",{\"1\":{\"256\":1}}],[\"斯普特尼克\",{\"1\":{\"256\":1}}],[\"豆豆\",{\"1\":{\"256\":1}}],[\"跟着猫大人冲\",{\"1\":{\"256\":1}}],[\"跟着猫大人做开源\",{\"1\":{\"256\":1}}],[\"跟着猫大人搞开源\",{\"1\":{\"256\":2}}],[\"唐甜\",{\"1\":{\"256\":1}}],[\"乔帝鸽\",{\"1\":{\"256\":1}}],[\"刘耿华\",{\"1\":{\"256\":1}}],[\"刘进\",{\"1\":{\"256\":1}}],[\"哲一\",{\"1\":{\"256\":1}}],[\"有效提升页面性能\",{\"1\":{\"334\":1}}],[\"有\",{\"1\":{\"256\":1}}],[\"有大用了\",{\"1\":{\"256\":1}}],[\"欧葵\",{\"1\":{\"256\":1}}],[\"阿行\",{\"1\":{\"256\":1}}],[\"阿超\",{\"1\":{\"256\":1,\"290\":1}}],[\"社区加油\",{\"1\":{\"256\":1}}],[\"社区越办越好\",{\"1\":{\"256\":2}}],[\"社区越来越好\",{\"1\":{\"256\":1}}],[\"子不语\",{\"1\":{\"256\":1}}],[\"子豪\",{\"1\":{\"256\":2}}],[\"王一飞\",{\"1\":{\"256\":1}}],[\"王磊\",{\"1\":{\"256\":1}}],[\"闫兵\",{\"1\":{\"256\":1}}],[\"谢谢猫大人对于开源的贡献\",{\"1\":{\"256\":1}}],[\"苦了芥末\",{\"1\":{\"256\":1}}],[\"瓦让\",{\"1\":{\"256\":1}}],[\"梁超\",{\"1\":{\"256\":1}}],[\"梁胜芳\",{\"1\":{\"256\":1}}],[\"永存\",{\"1\":{\"256\":1}}],[\"榕\",{\"1\":{\"256\":1}}],[\"李\",{\"1\":{\"256\":1}}],[\"心想事成\",{\"1\":{\"256\":1}}],[\"心中的明月\",{\"1\":{\"256\":1}}],[\"赵瑞\",{\"1\":{\"256\":1}}],[\"赵镇\",{\"1\":{\"256\":1}}],[\"泊\",{\"1\":{\"256\":1}}],[\"滴流乱转的小胖子\",{\"1\":{\"256\":1}}],[\"韩小波\",{\"1\":{\"256\":1}}],[\"阳有白\",{\"1\":{\"256\":1}}],[\"小程故事多\",{\"1\":{\"256\":1}}],[\"小雨淅淅\",{\"1\":{\"256\":1}}],[\"小旭\",{\"1\":{\"256\":1}}],[\"小小的太阳\",{\"1\":{\"256\":1}}],[\"小小心意赞助一下\",{\"1\":{\"256\":1}}],[\"小小赞赏\",{\"1\":{\"256\":1}}],[\"越来越好\",{\"1\":{\"256\":2}}],[\"越开源越进步\",{\"1\":{\"256\":1}}],[\"半盏清茶\",{\"1\":{\"256\":1}}],[\"丶\",{\"1\":{\"256\":1}}],[\"全景图\",{\"1\":{\"284\":1}}],[\"全力支持参与开源贡献自己的微博力量\",{\"1\":{\"256\":1}}],[\"全调用\",{\"1\":{\"104\":1}}],[\"肖邦\",{\"1\":{\"256\":1}}],[\"强\",{\"1\":{\"256\":1}}],[\"强烈推荐\",{\"1\":{\"256\":1}}],[\"静静\",{\"1\":{\"256\":1}}],[\"静晓晨曦\",{\"1\":{\"256\":1}}],[\"白\",{\"1\":{\"256\":1}}],[\"杨大侠\",{\"1\":{\"256\":1}}],[\"哼干嘛\",{\"1\":{\"256\":1}}],[\"走向辉煌\",{\"1\":{\"256\":1}}],[\"撸下胸毛\",{\"1\":{\"256\":1}}],[\"好方\",{\"1\":{\"256\":1}}],[\"好想要\",{\"1\":{\"256\":1}}],[\"好漂亮\",{\"1\":{\"256\":1}}],[\"彭伟伦\",{\"1\":{\"256\":1}}],[\"猫大人家的菜鸟\",{\"1\":{\"256\":1}}],[\"猫大人\",{\"1\":{\"256\":1}}],[\"猫大人威武霸气\",{\"1\":{\"256\":1}}],[\"猫大人威武\",{\"1\":{\"256\":1}}],[\"猫大人及其同仁们威武\",{\"1\":{\"256\":1}}],[\"猫大人帅气\",{\"1\":{\"256\":1}}],[\"猫大人帅哥\",{\"1\":{\"256\":1}}],[\"猫大人的错别字检查员\",{\"1\":{\"256\":1}}],[\"猫大人的小学徒\",{\"1\":{\"256\":1}}],[\"猫大人的小迷弟\",{\"1\":{\"256\":1}}],[\"猫大人的胸毛\",{\"1\":{\"256\":1}}],[\"猫大人的狸猫\",{\"1\":{\"256\":1}}],[\"猫大人的华子\",{\"1\":{\"256\":2}}],[\"猫大人牛逼\",{\"1\":{\"256\":6}}],[\"猫大人牛批\",{\"1\":{\"256\":3}}],[\"猫大人加油\",{\"1\":{\"256\":5}}],[\"猫大人抽华子\",{\"1\":{\"256\":3}}],[\"正是在下李某人\",{\"1\":{\"256\":1}}],[\"吴哭哭\",{\"1\":{\"256\":1}}],[\"吴俊杰\",{\"1\":{\"256\":1}}],[\"吴南方\",{\"1\":{\"256\":1}}],[\"石启蒙\",{\"1\":{\"256\":1}}],[\"疯子\",{\"1\":{\"256\":1}}],[\"芜湖起飞\",{\"1\":{\"256\":1}}],[\"曼孚\",{\"1\":{\"256\":1}}],[\"纳兰\",{\"1\":{\"256\":1}}],[\"国产开源\",{\"1\":{\"256\":1}}],[\"国产开源牛逼\",{\"1\":{\"256\":1}}],[\"国产开源蒸蒸日上\",{\"1\":{\"256\":1}}],[\"还有非常多的细节优化不再一一描述\",{\"1\":{\"265\":1}}],[\"还很远\",{\"1\":{\"256\":1}}],[\"还没有注册过\",{\"1\":{\"79\":1,\"81\":1}}],[\"路\",{\"1\":{\"256\":1}}],[\"然而\",{\"1\":{\"256\":1}}],[\"能力有限\",{\"1\":{\"256\":1}}],[\"能做的越来越好\",{\"1\":{\"256\":1}}],[\"锄禾\",{\"1\":{\"256\":1}}],[\"こうう\",{\"1\":{\"256\":1}}],[\"鑫爷\",{\"1\":{\"256\":1}}],[\"顶礼膜拜\",{\"1\":{\"256\":1}}],[\"辉辉同学\",{\"1\":{\"256\":1}}],[\"真心不错\",{\"1\":{\"256\":1}}],[\"大锅\",{\"1\":{\"256\":1}}],[\"大风起不可当石立\",{\"1\":{\"256\":1}}],[\"大家一起加油\",{\"1\":{\"256\":1}}],[\"大黄蜂\",{\"1\":{\"256\":1}}],[\"大大的时间小小的我\",{\"1\":{\"256\":1}}],[\"大熊同学\",{\"1\":{\"256\":1}}],[\"蚊子腿也是肉\",{\"1\":{\"256\":1}}],[\"喜世\",{\"1\":{\"256\":1}}],[\"段大志\",{\"1\":{\"256\":1}}],[\"冲冲\",{\"1\":{\"256\":1}}],[\"宋不醒\",{\"1\":{\"256\":1}}],[\"用用\",{\"1\":{\"256\":1}}],[\"用的方便\",{\"1\":{\"256\":1}}],[\"聊表心意\",{\"1\":{\"256\":4}}],[\"奥利弗\",{\"1\":{\"256\":1}}],[\"辣条钱\",{\"1\":{\"256\":2}}],[\"光明星辰\",{\"1\":{\"256\":1}}],[\"夏和顺顺\",{\"1\":{\"256\":1}}],[\"今天早睡了吗\",{\"1\":{\"256\":1}}],[\"早点下班吧\",{\"1\":{\"256\":1}}],[\"少年\",{\"1\":{\"256\":1}}],[\"吃瓜群众丙\",{\"1\":{\"256\":1}}],[\"吃个雪糕\",{\"1\":{\"256\":1}}],[\"特别棒\",{\"1\":{\"256\":1}}],[\"省了很多重复造轮子的时间\",{\"1\":{\"256\":1}}],[\"省了我好多事\",{\"1\":{\"256\":1}}],[\"达\",{\"1\":{\"256\":1}}],[\"忘忧\",{\"1\":{\"256\":1}}],[\"虽然钱不多\",{\"1\":{\"256\":1}}],[\"尽我绵薄之力\",{\"1\":{\"256\":1}}],[\"感恩\",{\"1\":{\"256\":2}}],[\"感谢大家的贡献与辛勤付出\",{\"1\":{\"332\":1}}],[\"感谢引路\",{\"1\":{\"256\":1}}],[\"感谢猫大人带我们认识开源\",{\"1\":{\"256\":1}}],[\"感谢猫大人花费巨大的心血\",{\"1\":{\"256\":1}}],[\"感谢猫大人\",{\"1\":{\"256\":3}}],[\"感谢铁锚助教辛勤解答问题\",{\"1\":{\"256\":1}}],[\"感谢开发\",{\"1\":{\"256\":1}}],[\"感谢开源\",{\"1\":{\"256\":4}}],[\"感谢\",{\"1\":{\"256\":2}}],[\"感谢诸位无私的奉献\",{\"1\":{\"256\":1}}],[\"许伟超\",{\"1\":{\"256\":1}}],[\"了\",{\"1\":{\"256\":1}}],[\"太\",{\"1\":{\"256\":1}}],[\"太好用了\",{\"1\":{\"256\":1}}],[\"青衫烟雨客\",{\"1\":{\"256\":1}}],[\"金卫信曾小燕\",{\"1\":{\"256\":1}}],[\"胡泰室\",{\"1\":{\"256\":1}}],[\"哈哈\",{\"1\":{\"256\":2}}],[\"苗对我很重要\",{\"1\":{\"256\":1}}],[\"值得学习\",{\"1\":{\"256\":1}}],[\"代码规范\",{\"1\":{\"256\":1}}],[\"红豆生南国\",{\"1\":{\"256\":1}}],[\"朋云\",{\"1\":{\"256\":1}}],[\"支持支持\",{\"1\":{\"256\":3}}],[\"支持一下\",{\"1\":{\"256\":1}}],[\"支持喵大人\",{\"1\":{\"256\":2}}],[\"支持下\",{\"1\":{\"256\":1}}],[\"支持猫大人的开源\",{\"1\":{\"256\":1}}],[\"支持猫大人\",{\"1\":{\"256\":6}}],[\"支持\",{\"1\":{\"256\":2}}],[\"支持开源\",{\"1\":{\"256\":5}}],[\"我们一起学猫叫\",{\"1\":{\"256\":1}}],[\"我们自己的通常是弟中弟\",{\"1\":{\"123\":1}}],[\"我为人人\",{\"1\":{\"256\":1}}],[\"祝\",{\"1\":{\"256\":2}}],[\"祝组织越来越好\",{\"1\":{\"256\":1}}],[\"祝福社区越来越好\",{\"1\":{\"256\":4}}],[\"祝开源社区越来越好\",{\"1\":{\"256\":1}}],[\"祝开源的路上越走越远\",{\"1\":{\"256\":1}}],[\"祝越来越好\",{\"1\":{\"256\":2}}],[\"祝社区越来越繁荣\",{\"1\":{\"256\":1}}],[\"祝社区越来越好~\",{\"1\":{\"256\":1}}],[\"祝社区越来越好\",{\"1\":{\"256\":3}}],[\"祝社区越办越好\",{\"1\":{\"256\":1}}],[\"祝社区越走越远\",{\"1\":{\"256\":1}}],[\"祝社区能做的越来越好\",{\"1\":{\"256\":1}}],[\"祝社区的兄弟姐妹们新年快乐\",{\"1\":{\"256\":1}}],[\"开放文档查看页面\",{\"1\":{\"336\":1}}],[\"开源万岁\",{\"1\":{\"256\":1}}],[\"开源无敌\",{\"1\":{\"256\":1}}],[\"开源冲\",{\"1\":{\"256\":1}}],[\"开源就是人人为我\",{\"1\":{\"256\":1}}],[\"开始就喜欢上了\",{\"1\":{\"256\":1}}],[\"开发小王\",{\"1\":{\"256\":1}}],[\"从接触\",{\"1\":{\"256\":1}}],[\"晚风\",{\"1\":{\"256\":1}}],[\"奉上\",{\"1\":{\"256\":1}}],[\"曙光\",{\"1\":{\"256\":1}}],[\"希望猫大人的开源组织越来越壮大\",{\"1\":{\"256\":1}}],[\"希望\",{\"1\":{\"256\":1}}],[\"希望我们开源社区长长久久\",{\"1\":{\"256\":1}}],[\"希望越来越好\",{\"1\":{\"256\":2}}],[\"买雪糕吃\",{\"1\":{\"256\":1}}],[\"邵昌明\",{\"1\":{\"256\":1}}],[\"岁月无声\",{\"1\":{\"256\":1}}],[\"枫原万耶\",{\"1\":{\"256\":1}}],[\"坚持信念\",{\"1\":{\"256\":1}}],[\"紫气东来\",{\"1\":{\"256\":1}}],[\"方\",{\"1\":{\"256\":1}}],[\"方法中\",{\"1\":{\"127\":1}}],[\"但一群人会走得更远\",{\"1\":{\"256\":1}}],[\"但是我会一直打赏\",{\"1\":{\"256\":1}}],[\"但是心意是满满的\",{\"1\":{\"256\":1}}],[\"但第1个服务器节点接入\",{\"1\":{\"81\":1}}],[\"钱不多\",{\"1\":{\"256\":1}}],[\"朔\",{\"1\":{\"256\":1}}],[\"对我非常有帮助\",{\"1\":{\"256\":1}}],[\"对象并放入缓存\",{\"1\":{\"132\":1}}],[\"对象\",{\"1\":{\"123\":2}}],[\"学习加交流\",{\"1\":{\"256\":1}}],[\"学习\",{\"1\":{\"256\":1}}],[\"泛微网络刘启成\",{\"1\":{\"256\":1}}],[\"西岭千秋雪\",{\"1\":{\"256\":1}}],[\"海子\",{\"1\":{\"256\":1}}],[\"帮助很大\",{\"1\":{\"256\":1}}],[\"如愿\",{\"1\":{\"256\":1}}],[\"如果没有则新建\",{\"1\":{\"132\":1}}],[\"如果\",{\"1\":{\"127\":1}}],[\"如果不是同一个节点\",{\"1\":{\"81\":1}}],[\"如果相同直接返回\",{\"1\":{\"81\":1}}],[\"如果已经至少有1个服务器节点已接入\",{\"1\":{\"81\":1}}],[\"加入的第一个组织\",{\"1\":{\"256\":1}}],[\"加油吧\",{\"1\":{\"256\":1}}],[\"加油\",{\"1\":{\"256\":11}}],[\"加载资源文件\",{\"1\":{\"123\":1}}],[\"令狐冲\",{\"1\":{\"256\":1}}],[\"很强\",{\"1\":{\"256\":1}}],[\"无\",{\"1\":{\"256\":1}}],[\"无需回应\",{\"1\":{\"256\":1}}],[\"无名\",{\"1\":{\"256\":22}}],[\"纯粹赞助\",{\"1\":{\"256\":1}}],[\"木予\",{\"1\":{\"256\":1}}],[\"勿回应\",{\"1\":{\"256\":1}}],[\"五一快乐\",{\"1\":{\"256\":1}}],[\"一朵云\",{\"1\":{\"256\":1}}],[\"一条小路的距离\",{\"1\":{\"256\":1}}],[\"一条小青龙\",{\"1\":{\"256\":1}}],[\"一如既往的支持\",{\"1\":{\"256\":1}}],[\"一个人可能走的更快\",{\"1\":{\"256\":1}}],[\"一直想做开源\",{\"1\":{\"256\":1}}],[\"一起喵喵喵喵喵~\",{\"1\":{\"256\":1}}],[\"一只想要奋斗的咸鱼\",{\"1\":{\"256\":1}}],[\"一包辣条奉上\",{\"1\":{\"256\":1}}],[\"一夏千晨\",{\"1\":{\"256\":1}}],[\"一层缓存\",{\"1\":{\"134\":1}}],[\"连洁\",{\"1\":{\"256\":1}}],[\"$invokeasync\",{\"1\":{\"234\":1,\"237\":2}}],[\"$invoke\",{\"1\":{\"234\":2,\"241\":2,\"242\":2}}],[\"^\",{\"1\":{\"234\":1}}],[\"端\",{\"1\":{\"234\":2}}],[\"`enabled`\",{\"1\":{\"226\":1}}],[\"`date\",{\"1\":{\"226\":2}}],[\"`parameter\",{\"1\":{\"226\":1}}],[\"`path\",{\"1\":{\"226\":1}}],[\"`path`\",{\"1\":{\"226\":1}}],[\"`method\",{\"1\":{\"226\":1}}],[\"`meta\",{\"1\":{\"226\":1}}],[\"`service\",{\"1\":{\"226\":1}}],[\"`rpc\",{\"1\":{\"226\":2}}],[\"`app\",{\"1\":{\"226\":1}}],[\"`id`\",{\"1\":{\"226\":2}}],[\"└─handler\",{\"1\":{\"221\":1}}],[\"└─resilience4j\",{\"1\":{\"221\":1}}],[\"├─factory\",{\"1\":{\"221\":1}}],[\"├─executor\",{\"1\":{\"221\":1}}],[\"├─conf\",{\"1\":{\"221\":1}}],[\"├─build\",{\"1\":{\"221\":1}}],[\"│\",{\"1\":{\"221\":12}}],[\"~zzzachary\",{\"1\":{\"256\":1}}],[\"~\",{\"1\":{\"164\":13}}],[\"外层调用会包装到\",{\"1\":{\"136\":1}}],[\"结构并组装成\",{\"1\":{\"136\":1}}],[\"读出\",{\"1\":{\"136\":1}}],[\"解析优化\",{\"1\":{\"260\":1}}],[\"解析资源文件\",{\"1\":{\"136\":1}}],[\"解析出资源文件中写入的实现类类名\",{\"1\":{\"123\":1}}],[\"二层缓存之一\",{\"1\":{\"134\":2}}],[\"向开源精神\",{\"1\":{\"256\":1}}],[\"向猫大人老师致敬\",{\"1\":{\"256\":1}}],[\"向大佬致敬\",{\"1\":{\"256\":1}}],[\"向\",{\"1\":{\"129\":1}}],[\"该类加载时会在静态块中\",{\"1\":{\"129\":1}}],[\"反射\",{\"1\":{\"129\":1}}],[\"反射得到\",{\"1\":{\"123\":1}}],[\"最大程度上保证企业或个人的数据安全\",{\"1\":{\"331\":1}}],[\"最新域名\",{\"0\":{\"261\":1},\"1\":{\"260\":1}}],[\"最棒\",{\"1\":{\"256\":1}}],[\"最外层会继续尝试下个\",{\"1\":{\"127\":1}}],[\"最关键的点在这行\",{\"1\":{\"127\":1}}],[\"通过匹配路径头做筛选\",{\"1\":{\"127\":1}}],[\"约定大于配置\",{\"1\":{\"127\":1}}],[\"筛选\",{\"1\":{\"127\":1}}],[\"筛选工作其实在实现类自身的\",{\"1\":{\"127\":1}}],[\"仅是通过\",{\"1\":{\"127\":1}}],[\"注入实列\",{\"1\":{\"328\":1}}],[\"注入各类型订阅器到\",{\"1\":{\"104\":1}}],[\"注册\",{\"1\":{\"129\":1}}],[\"注册到变量中\",{\"1\":{\"126\":1}}],[\"实现类\",{\"1\":{\"126\":1}}],[\"实现类注册到\",{\"1\":{\"126\":1}}],[\"缓存\",{\"1\":{\"126\":1}}],[\"将老版本横向的\",{\"1\":{\"262\":1}}],[\"将此\",{\"1\":{\"126\":1}}],[\"将初始化的对象放入hash缓存\",{\"1\":{\"123\":1}}],[\"的路径则返回null\",{\"1\":{\"127\":1}}],[\"的思想\",{\"1\":{\"127\":1}}],[\"的连接方式\",{\"1\":{\"127\":1}}],[\"的\",{\"1\":{\"126\":1,\"260\":1}}],[\"的注册方法\",{\"1\":{\"126\":1}}],[\"的实现\",{\"1\":{\"126\":1}}],[\"初始化\",{\"1\":{\"127\":1}}],[\"初始化实现类\",{\"1\":{\"126\":1}}],[\"初始化对象\",{\"1\":{\"123\":1}}],[\"迭代时实际会\",{\"1\":{\"126\":1}}],[\"复用\",{\"1\":{\"123\":1}}],[\"关键步骤\",{\"1\":{\"123\":1}}],[\"获取一个类名\",{\"1\":{\"123\":1}}],[\"获取当前的类加载器\",{\"1\":{\"123\":1}}],[\"传入关键的接口\",{\"1\":{\"123\":1}}],[\"创建懒加载迭代器\",{\"1\":{\"123\":1}}],[\"上面都是将信息放入对象实例属性中\",{\"1\":{\"123\":1}}],[\"说明每次调用都使用新的\",{\"1\":{\"123\":1}}],[\"马在跑\",{\"1\":{\"122\":1}}],[\"狗在跑\",{\"1\":{\"122\":1}}],[\"框架的原理与实现\",{\"1\":{\"121\":1}}],[\"章\",{\"1\":{\"121\":1}}],[\"第\",{\"1\":{\"121\":1}}],[\"得到一个子类\",{\"1\":{\"120\":1}}],[\"长轮询篇\",{\"1\":{\"105\":1}}],[\"后台与网关数据同步\",{\"1\":{\"105\":1}}],[\"中任意位置右键唤起generate\",{\"1\":{\"264\":1}}],[\"中文站\",{\"1\":{\"261\":1}}],[\"中国开源加油\",{\"1\":{\"256\":1}}],[\"中\",{\"1\":{\"104\":1}}],[\"|client\",{\"1\":{\"234\":1}}],[\"|genericfilter\",{\"1\":{\"234\":2}}],[\"|genericimplfilter\",{\"1\":{\"234\":2}}],[\"||\",{\"1\":{\"93\":2,\"123\":1,\"151\":2,\"180\":1,\"185\":2,\"195\":2,\"207\":1,\"214\":1,\"221\":1,\"237\":1,\"241\":1,\"242\":3}}],[\"|\",{\"1\":{\"82\":1,\"139\":1,\"234\":114}}],[\"字段中\",{\"1\":{\"81\":1}}],[\"字段存储这个接口真实节点信息\",{\"1\":{\"81\":1}}],[\"把新节点加入到\",{\"1\":{\"81\":1}}],[\"区分\",{\"1\":{\"81\":1}}],[\"使用\",{\"1\":{\"81\":1}}],[\"判断是否是同一个节点\",{\"1\":{\"81\":1}}],[\"会匹配\",{\"1\":{\"127\":1}}],[\"会根据传入的\",{\"1\":{\"127\":1}}],[\"会进到这里\",{\"1\":{\"81\":1}}],[\"会到这里\",{\"1\":{\"81\":1}}],[\"这也是离我最近的社区\",{\"1\":{\"256\":1}}],[\"这里就是采用\",{\"1\":{\"127\":1}}],[\"这里就是\",{\"1\":{\"126\":1}}],[\"这里在\",{\"1\":{\"80\":1,\"82\":1}}],[\"这行才是关键调用\",{\"1\":{\"123\":1}}],[\"这个接口虽然之前注册过\",{\"1\":{\"81\":1}}],[\"或新节点启动\",{\"1\":{\"81\":1}}],[\"已接入的业务系统重启\",{\"1\":{\"81\":1}}],[\"已经注册过\",{\"1\":{\"79\":1}}],[\"是白菜\",{\"1\":{\"256\":1}}],[\"是否符合其所在\",{\"1\":{\"127\":1}}],[\"是否已经注册过\",{\"1\":{\"79\":1,\"81\":1}}],[\"是不是可以考虑挪出去一次性批量插入\",{\"1\":{\"80\":1,\"82\":1}}],[\"层插入数据\",{\"1\":{\"80\":1,\"82\":1}}],[\"循环里调用\",{\"1\":{\"80\":1,\"82\":1}}],[\"业务系统重启了会到这里\",{\"1\":{\"79\":1}}],[\"到数据库里查询\",{\"1\":{\"79\":1,\"81\":1}}],[\"根据加载类对象取出缓存中数据\",{\"1\":{\"132\":1}}],[\"根据\",{\"1\":{\"79\":1,\"81\":1}}],[\"✗\",{\"1\":{\"65\":2}}],[\"➜\",{\"1\":{\"65\":2}}],[\"待补\",{\"0\":{\"75\":1},\"1\":{\"54\":1,\"56\":3,\"57\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"66\":2,\"75\":1,\"88\":3,\"169\":1}}],[\"7z\",{\"1\":{\"294\":1}}],[\"798\",{\"1\":{\"164\":2}}],[\"7\",{\"1\":{\"155\":1,\"219\":5,\"228\":1,\"269\":1,\"279\":1,\"290\":1}}],[\"764\",{\"1\":{\"164\":1}}],[\"761\",{\"1\":{\"155\":4}}],[\"762\",{\"1\":{\"57\":1}}],[\"70\",{\"1\":{\"219\":1}}],[\"70mb\",{\"1\":{\"65\":1}}],[\"70bad5ebb1cf6e3fc55278eef2df42f3\",{\"1\":{\"48\":2}}],[\"70b269257d47f0f6404ae7b7e976d8f1\",{\"1\":{\"48\":2}}],[\"74\",{\"1\":{\"65\":2}}],[\"758\",{\"1\":{\"164\":1}}],[\"75f487d20c6c\",{\"1\":{\"164\":4}}],[\"752\",{\"1\":{\"155\":1}}],[\"756\",{\"1\":{\"64\":2}}],[\"755\",{\"1\":{\"64\":1}}],[\"73\",{\"1\":{\"33\":1,\"46\":1}}],[\"qingstor\",{\"1\":{\"322\":1}}],[\"qingyun\",{\"1\":{\"322\":1}}],[\"qiniu\",{\"1\":{\"322\":1}}],[\"q\",{\"1\":{\"316\":4}}],[\"qzwml\",{\"1\":{\"256\":1}}],[\"qsli\",{\"1\":{\"244\":1}}],[\"qps\",{\"1\":{\"211\":3,\"214\":8,\"312\":1}}],[\"qq\",{\"1\":{\"46\":1,\"282\":1,\"288\":1,\"301\":1,\"311\":1}}],[\"quality\",{\"1\":{\"256\":1,\"275\":1}}],[\"quite\",{\"1\":{\"37\":1,\"164\":1}}],[\"quickstart\",{\"1\":{\"315\":1}}],[\"quick\",{\"1\":{\"28\":1,\"92\":1,\"325\":1,\"329\":1}}],[\"quickly\",{\"1\":{\"4\":1,\"274\":1,\"303\":1,\"305\":1}}],[\"queuing\",{\"1\":{\"211\":3,\"214\":2}}],[\"queue\",{\"1\":{\"35\":1,\"48\":1,\"100\":1,\"101\":3,\"199\":1,\"211\":1,\"214\":2}}],[\"queryparams\",{\"1\":{\"180\":2}}],[\"query\",{\"1\":{\"48\":2,\"70\":2,\"235\":1}}],[\"queries\",{\"1\":{\"40\":1}}],[\"question\",{\"0\":{\"37\":1,\"38\":1},\"1\":{\"48\":1,\"112\":1,\"122\":1,\"127\":1,\"211\":1}}],[\"questions\",{\"0\":{\"194\":1},\"1\":{\"28\":1,\"101\":1,\"124\":1,\"211\":1}}],[\"xuyanwu<\",{\"1\":{\"323\":1}}],[\"xuyanwu\",{\"1\":{\"322\":2,\"325\":2}}],[\"xa\",{\"1\":{\"288\":1}}],[\"x\",{\"0\":{\"302\":1,\"322\":1},\"1\":{\"123\":5,\"184\":2,\"292\":1,\"294\":1,\"306\":1,\"322\":5,\"323\":1,\"324\":1,\"325\":2,\"326\":2}}],[\"xxtea\",{\"1\":{\"293\":1}}],[\"xxxvalueprovider\",{\"1\":{\"292\":1}}],[\"xxxcopier\",{\"1\":{\"292\":1}}],[\"xxxx\",{\"1\":{\"280\":1}}],[\"xxxxx\",{\"1\":{\"280\":2}}],[\"xxxl\",{\"1\":{\"256\":1}}],[\"xxx\",{\"1\":{\"118\":1,\"252\":1}}],[\"xx\",{\"1\":{\"86\":3}}],[\"xml\",{\"0\":{\"144\":1},\"1\":{\"43\":1,\"58\":1,\"59\":1,\"86\":1,\"154\":1,\"164\":2,\"202\":1,\"203\":1,\"316\":4,\"326\":1}}],[\"xiaomi\",{\"1\":{\"293\":1}}],[\"xiaochun\",{\"1\":{\"256\":1}}],[\"xiaobai\",{\"1\":{\"164\":1}}],[\"xiaoyu\",{\"1\":{\"5\":1,\"10\":1,\"18\":1,\"22\":1,\"25\":1,\"33\":1,\"35\":1,\"36\":1,\"40\":1,\"43\":1,\"46\":1,\"110\":1,\"112\":1,\"156\":2,\"256\":2,\"305\":1}}],[\"xiangjun\",{\"1\":{\"25\":1}}],[\"xia\",{\"1\":{\"25\":1}}],[\"+plugin\",{\"1\":{\"179\":2}}],[\"+8\",{\"1\":{\"147\":2}}],[\"+=\",{\"1\":{\"90\":1,\"91\":1}}],[\"+\",{\"1\":{\"35\":1,\"65\":2,\"77\":1,\"80\":1,\"89\":3,\"92\":4,\"97\":1,\"104\":3,\"105\":1,\"111\":1,\"112\":1,\"113\":1,\"123\":7,\"139\":1,\"156\":1,\"165\":1,\"176\":4,\"197\":3,\"200\":2,\"214\":4,\"230\":1,\"234\":40,\"242\":3,\"260\":2}}],[\"==\",{\"1\":{\"85\":1,\"91\":2,\"93\":3,\"98\":1,\"114\":1,\"123\":6,\"127\":1,\"137\":1,\"139\":8,\"172\":1,\"182\":1,\"185\":3,\"197\":1,\"200\":2,\"207\":1,\"214\":4,\"221\":3,\"241\":2,\"242\":3,\"328\":1}}],[\"=1\",{\"1\":{\"65\":2}}],[\"=\",{\"1\":{\"35\":11,\"36\":7,\"39\":2,\"40\":4,\"43\":9,\"48\":5,\"70\":1,\"77\":3,\"78\":2,\"79\":11,\"80\":6,\"81\":11,\"82\":10,\"85\":8,\"86\":5,\"87\":6,\"89\":5,\"90\":9,\"91\":20,\"92\":5,\"93\":4,\"97\":6,\"98\":4,\"100\":10,\"104\":22,\"105\":13,\"109\":6,\"111\":3,\"112\":12,\"113\":5,\"114\":4,\"116\":3,\"117\":8,\"118\":2,\"120\":2,\"121\":1,\"122\":3,\"123\":20,\"126\":4,\"127\":7,\"129\":8,\"132\":4,\"134\":3,\"135\":3,\"136\":2,\"137\":3,\"139\":29,\"147\":4,\"151\":5,\"155\":4,\"156\":13,\"161\":7,\"162\":2,\"165\":6,\"166\":5,\"172\":14,\"174\":1,\"175\":3,\"176\":4,\"177\":5,\"179\":3,\"180\":6,\"182\":8,\"183\":10,\"184\":8,\"185\":4,\"195\":5,\"197\":9,\"200\":19,\"207\":14,\"214\":14,\"220\":2,\"221\":17,\"226\":4,\"230\":2,\"232\":1,\"234\":1,\"235\":2,\"236\":8,\"237\":8,\"238\":3,\"241\":5,\"242\":18,\"260\":1,\"280\":5,\"328\":1,\"329\":6}}],[\"90\",{\"1\":{\"219\":1}}],[\"9095\",{\"1\":{\"48\":1,\"56\":1,\"59\":1,\"68\":1,\"96\":2,\"108\":1,\"314\":1,\"315\":1}}],[\"95\",{\"1\":{\"164\":1,\"219\":1}}],[\"9\",{\"1\":{\"164\":1,\"179\":1,\"219\":1,\"256\":4,\"275\":1}}],[\"99\",{\"1\":{\"219\":2,\"256\":4}}],[\"990\",{\"1\":{\"164\":1}}],[\"996\",{\"1\":{\"155\":1,\"256\":1}}],[\"977\",{\"1\":{\"64\":1}}],[\"976\",{\"1\":{\"64\":2}}],[\"93\",{\"1\":{\"33\":2,\"46\":1,\"65\":1}}],[\"924\",{\"1\":{\"57\":1}}],[\"92\",{\"1\":{\"33\":2,\"46\":2}}],[\"9195\",{\"1\":{\"57\":1,\"61\":1,\"64\":1,\"65\":2,\"68\":1,\"73\":1,\"164\":1,\"179\":1,\"193\":1,\"219\":1,\"220\":1}}],[\"91\",{\"1\":{\"33\":2,\"46\":1}}],[\"98kb\",{\"1\":{\"65\":1}}],[\"98\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"65\":1,\"219\":1}}],[\"<dubbo\",{\"1\":{\"233\":1,\"270\":1}}],[\"<dependency>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":2,\"326\":2}}],[\"<string\",{\"1\":{\"195\":1}}],[\"<s>\",{\"1\":{\"123\":2}}],[\"<generated>\",{\"1\":{\"164\":3}}],[\"<groupid>cn\",{\"1\":{\"323\":1}}],[\"<groupid>com\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"164\":1,\"326\":1}}],[\"<groupid>io\",{\"1\":{\"217\":1}}],[\"<groupid>org\",{\"1\":{\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":1,\"203\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":1,\"326\":1}}],[\"<init>\",{\"1\":{\"164\":1}}],[\"<=\",{\"1\":{\"105\":1}}],[\"<二>\",{\"1\":{\"105\":1}}],[\"<t>\",{\"1\":{\"97\":1,\"132\":1,\"221\":2}}],[\"<context\",{\"1\":{\"43\":1}}],[\"<artifactid>aliyun\",{\"1\":{\"326\":1}}],[\"<artifactid>x\",{\"1\":{\"323\":1,\"326\":1}}],[\"<artifactid>spring\",{\"1\":{\"315\":2,\"323\":1}}],[\"<artifactid>soul\",{\"1\":{\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":1,\"203\":1,\"218\":1,\"228\":1,\"230\":1,\"315\":2,\"316\":4}}],[\"<artifactid>curator\",{\"1\":{\"228\":3}}],[\"<artifactid>dubbo<\",{\"1\":{\"228\":1}}],[\"<artifactid>resilience4j\",{\"1\":{\"217\":1}}],[\"<artifactid>nacos\",{\"1\":{\"164\":1}}],[\"<artifactid>hmily\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"279\":3}}],[\"<aop\",{\"1\":{\"43\":1}}],[\"<version>3\",{\"1\":{\"326\":1}}],[\"<version>1\",{\"1\":{\"323\":1}}],[\"<version>2\",{\"1\":{\"228\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":1,\"326\":1}}],[\"<version>$\",{\"1\":{\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":4,\"230\":1}}],[\"<version>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1}}],[\"<<高可用可伸缩微服务架构>>\",{\"1\":{\"121\":1}}],[\"<<\",{\"1\":{\"36\":1,\"43\":2}}],[\"<\",{\"1\":{\"33\":13,\"35\":2,\"43\":10,\"44\":2,\"45\":2,\"46\":6,\"59\":2,\"86\":3,\"89\":1,\"90\":2,\"104\":1,\"105\":1,\"122\":1,\"123\":1,\"144\":4,\"154\":3,\"161\":2,\"164\":4,\"177\":1,\"179\":1,\"203\":2,\"217\":2,\"218\":2,\"228\":9,\"230\":2,\"234\":2,\"235\":1,\"242\":2,\"279\":3,\"315\":6,\"316\":12,\"323\":2,\"326\":4}}],[\"<property\",{\"1\":{\"33\":43,\"43\":11}}],[\"<bean\",{\"1\":{\"33\":7,\"43\":2}}],[\">这里\",{\"1\":{\"266\":1}}],[\">>>\",{\"1\":{\"134\":1,\"136\":1}}],[\">>\",{\"1\":{\"132\":1,\"136\":1,\"139\":7}}],[\">=\",{\"1\":{\"104\":1,\"200\":1}}],[\">\",{\"1\":{\"33\":62,\"35\":1,\"36\":2,\"39\":2,\"40\":1,\"43\":18,\"48\":2,\"80\":1,\"82\":2,\"86\":4,\"90\":2,\"91\":3,\"92\":4,\"93\":1,\"100\":2,\"104\":2,\"105\":1,\"118\":3,\"123\":1,\"127\":1,\"132\":1,\"133\":1,\"134\":1,\"136\":1,\"137\":2,\"139\":4,\"144\":2,\"147\":1,\"151\":1,\"154\":1,\"160\":1,\"161\":4,\"162\":4,\"165\":4,\"166\":3,\"175\":3,\"177\":1,\"179\":1,\"182\":2,\"184\":4,\"185\":1,\"197\":5,\"202\":2,\"207\":4,\"212\":1,\"214\":6,\"221\":3,\"233\":1,\"234\":3,\"235\":1,\"237\":3,\"238\":1,\"241\":1,\"242\":2,\"261\":2,\"270\":1,\"290\":1,\"314\":2,\"315\":2,\"316\":8,\"326\":2,\"328\":2}}],[\"4409382\",{\"1\":{\"244\":1}}],[\"442\",{\"1\":{\"65\":1}}],[\"471\",{\"1\":{\"237\":1}}],[\"472ms\",{\"1\":{\"219\":1}}],[\"46\",{\"1\":{\"219\":2}}],[\"460\",{\"1\":{\"64\":3}}],[\"4jplugin\",{\"1\":{\"221\":1}}],[\"4j\",{\"0\":{\"218\":1},\"1\":{\"216\":1}}],[\"4564034\",{\"1\":{\"244\":1}}],[\"45\",{\"1\":{\"214\":1}}],[\"459\",{\"1\":{\"65\":1}}],[\"43b9\",{\"1\":{\"164\":4}}],[\"49\",{\"1\":{\"164\":2}}],[\"49mb\",{\"1\":{\"65\":1}}],[\"493\",{\"1\":{\"65\":1}}],[\"41\",{\"1\":{\"65\":1}}],[\"486269\",{\"1\":{\"65\":1}}],[\"48\",{\"1\":{\"64\":18,\"155\":9}}],[\"429951241\",{\"1\":{\"301\":1,\"311\":1}}],[\"429\",{\"1\":{\"193\":1,\"197\":1,\"214\":2}}],[\"42\",{\"1\":{\"61\":3}}],[\"4\",{\"0\":{\"32\":1,\"40\":1,\"54\":1,\"66\":1,\"110\":1,\"265\":1,\"296\":1,\"297\":1,\"299\":1,\"300\":1},\"1\":{\"33\":1,\"35\":1,\"43\":1,\"48\":1,\"91\":1,\"106\":1,\"114\":1,\"166\":1,\"179\":1,\"200\":1,\"219\":6,\"226\":1,\"298\":1,\"299\":1,\"300\":2}}],[\"400\",{\"1\":{\"256\":2}}],[\"404\",{\"1\":{\"220\":1}}],[\"401\",{\"1\":{\"164\":1}}],[\"4094\",{\"1\":{\"35\":1}}],[\"4096\",{\"1\":{\"33\":1,\"43\":1}}],[\"40\",{\"1\":{\"22\":2,\"25\":2,\"64\":6,\"65\":2}}],[\"3<\",{\"1\":{\"323\":1}}],[\"36\",{\"1\":{\"219\":2}}],[\"363\",{\"1\":{\"164\":1}}],[\"3639\",{\"1\":{\"65\":1}}],[\"379336\",{\"1\":{\"219\":9}}],[\"37\",{\"1\":{\"164\":1,\"219\":2}}],[\"37ms\",{\"1\":{\"65\":1}}],[\"31\",{\"1\":{\"82\":2,\"155\":1,\"256\":12}}],[\"317\",{\"1\":{\"64\":3}}],[\"38\",{\"1\":{\"64\":3,\"219\":2}}],[\"35\",{\"1\":{\"64\":3,\"155\":7,\"219\":1}}],[\"34\",{\"1\":{\"64\":3,\"155\":9}}],[\"390\",{\"1\":{\"65\":1}}],[\"39\",{\"1\":{\"48\":1,\"64\":3,\"82\":2,\"219\":2}}],[\"33\",{\"1\":{\"48\":1,\"256\":1}}],[\"3306\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"280\":1,\"314\":1}}],[\"32\",{\"1\":{\"33\":2}}],[\"3\",{\"0\":{\"31\":1,\"39\":1,\"53\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":1,\"83\":1,\"109\":1,\"162\":1,\"174\":1,\"175\":1,\"176\":2,\"264\":1},\"1\":{\"33\":3,\"43\":2,\"46\":1,\"114\":1,\"121\":1,\"164\":1,\"179\":1,\"182\":1,\"183\":1,\"184\":1,\"200\":1,\"214\":3,\"220\":1,\"241\":1,\"242\":1,\"256\":2,\"260\":1,\"262\":1,\"269\":1,\"280\":4,\"297\":1,\"298\":1,\"321\":1,\"336\":1}}],[\"308\",{\"1\":{\"201\":1,\"205\":1,\"207\":1}}],[\"30000\",{\"1\":{\"218\":1,\"280\":1}}],[\"3000l\",{\"1\":{\"184\":1}}],[\"3000\",{\"1\":{\"82\":1}}],[\"30s\",{\"1\":{\"65\":2,\"104\":1,\"105\":1}}],[\"30\",{\"1\":{\"22\":1,\"25\":1,\"48\":1,\"65\":2,\"104\":1,\"174\":3,\"178\":1,\"256\":76,\"280\":1}}],[\"5<\",{\"1\":{\"228\":1}}],[\"54\",{\"1\":{\"164\":3}}],[\"563\",{\"1\":{\"293\":2}}],[\"568\",{\"1\":{\"292\":1}}],[\"56\",{\"1\":{\"164\":6}}],[\"5273\",{\"1\":{\"164\":1}}],[\"59\",{\"1\":{\"155\":6,\"164\":3}}],[\"584\",{\"1\":{\"294\":1}}],[\"585\",{\"1\":{\"293\":1}}],[\"583\",{\"1\":{\"293\":1}}],[\"581\",{\"1\":{\"293\":1}}],[\"5811b56257e31109621976d39fc226aa\",{\"1\":{\"48\":2}}],[\"580\",{\"1\":{\"292\":1}}],[\"58\",{\"1\":{\"155\":1,\"164\":1}}],[\"58214\",{\"1\":{\"155\":1}}],[\"5min\",{\"1\":{\"149\":1}}],[\"51\",{\"1\":{\"65\":1,\"219\":1}}],[\"572\",{\"1\":{\"294\":1}}],[\"578\",{\"1\":{\"293\":1}}],[\"570\",{\"1\":{\"293\":2}}],[\"57\",{\"1\":{\"61\":3}}],[\"5f79d821e3b601330631a2d53294fb34\",{\"1\":{\"48\":2}}],[\"5\",{\"0\":{\"111\":1,\"112\":1,\"113\":1,\"289\":1,\"291\":1},\"1\":{\"48\":3,\"57\":1,\"89\":1,\"105\":3,\"108\":1,\"155\":1,\"156\":1,\"164\":10,\"179\":1,\"213\":2,\"256\":1,\"275\":1,\"290\":1,\"294\":1}}],[\"555\",{\"1\":{\"294\":1}}],[\"554\",{\"1\":{\"293\":1}}],[\"55\",{\"1\":{\"22\":2,\"25\":2}}],[\"502819\",{\"1\":{\"256\":1}}],[\"508\",{\"1\":{\"57\":1}}],[\"50\",{\"1\":{\"22\":2,\"25\":2,\"81\":1,\"218\":2,\"219\":1,\"256\":22}}],[\"500ms\",{\"1\":{\"214\":2}}],[\"50000\",{\"1\":{\"270\":1}}],[\"5000\",{\"1\":{\"154\":2,\"155\":2,\"218\":1}}],[\"500\",{\"1\":{\"16\":1,\"214\":1,\"218\":1,\"220\":1}}],[\"zyplayer\",{\"0\":{\"330\":1},\"1\":{\"331\":3}}],[\"zendwang\",{\"1\":{\"256\":1}}],[\"zero\",{\"1\":{\"34\":1,\"268\":1,\"274\":1,\"283\":1,\"305\":1}}],[\"zack\",{\"1\":{\"256\":1}}],[\"zdp\",{\"1\":{\"256\":1}}],[\"z\",{\"1\":{\"155\":1,\"256\":1}}],[\"zoo\",{\"1\":{\"155\":1}}],[\"zookeeperconfig\",{\"1\":{\"161\":6}}],[\"zookeeperconfiguration\",{\"1\":{\"112\":1,\"156\":4}}],[\"zookeepersyncdataservice\",{\"1\":{\"161\":3}}],[\"zookeepersyncdata\",{\"1\":{\"161\":2,\"162\":2}}],[\"zookeepersyncdataconfiguration\",{\"1\":{\"155\":1,\"161\":1}}],[\"zookeeperprop\",{\"1\":{\"156\":5}}],[\"zookeeperproperties\",{\"1\":{\"156\":2}}],[\"zookeeper<\",{\"1\":{\"154\":1,\"161\":1}}],[\"zookeeperlistener\",{\"1\":{\"112\":1,\"156\":1}}],[\"zookeeperdata\",{\"1\":{\"156\":2,\"160\":1}}],[\"zookeeperdatachangedlistener\",{\"1\":{\"48\":2,\"98\":1,\"112\":3,\"156\":3}}],[\"zookeeperdatainit\",{\"1\":{\"48\":1,\"112\":4,\"156\":8}}],[\"zookeeper\",{\"0\":{\"152\":1,\"153\":1,\"156\":1,\"158\":1,\"159\":1,\"161\":1},\"1\":{\"33\":4,\"43\":1,\"46\":1,\"48\":4,\"96\":1,\"98\":3,\"112\":4,\"116\":1,\"154\":3,\"155\":30,\"156\":16,\"157\":2,\"159\":4,\"160\":2,\"161\":8,\"162\":5,\"274\":1,\"275\":1,\"284\":2,\"285\":1,\"304\":1,\"312\":1,\"317\":1,\"321\":3}}],[\"zoneoffset\",{\"1\":{\"147\":2}}],[\"zhw\",{\"1\":{\"256\":2}}],[\"zh\",{\"1\":{\"49\":1,\"271\":1,\"280\":1,\"301\":1,\"311\":1,\"316\":3}}],[\"zhu\",{\"1\":{\"25\":1,\"114\":1}}],[\"zhuming\",{\"1\":{\"22\":1}}],[\"zkeventthread\",{\"1\":{\"155\":2}}],[\"zkserver\",{\"1\":{\"155\":1}}],[\"zkclientgetchildren\",{\"1\":{\"161\":1}}],[\"zkclient\",{\"1\":{\"112\":6,\"155\":10,\"156\":31,\"161\":23,\"162\":4}}],[\"zkpathconstants\",{\"1\":{\"98\":3,\"156\":3,\"161\":2}}],[\"zk\",{\"1\":{\"48\":1,\"156\":3,\"161\":2}}],[\"zknode\",{\"1\":{\"48\":1}}],[\"ztzzz\",{\"1\":{\"22\":1}}],[\"崔猫求疵\",{\"1\":{\"256\":1}}],[\"崔\",{\"1\":{\"22\":1}}],[\"64\",{\"1\":{\"226\":1,\"256\":1}}],[\"64583\",{\"1\":{\"155\":7}}],[\"64500\",{\"1\":{\"155\":9}}],[\"66\",{\"1\":{\"164\":1,\"256\":24}}],[\"66ms\",{\"1\":{\"65\":1}}],[\"651\",{\"1\":{\"164\":1}}],[\"620\",{\"1\":{\"48\":1}}],[\"600\",{\"1\":{\"280\":1}}],[\"600000\",{\"1\":{\"280\":1}}],[\"6000\",{\"1\":{\"166\":1,\"280\":1}}],[\"60l\",{\"1\":{\"104\":1}}],[\"60s\",{\"1\":{\"100\":1}}],[\"609\",{\"1\":{\"64\":3}}],[\"60\",{\"1\":{\"43\":2,\"65\":1,\"101\":3,\"219\":1,\"256\":29,\"280\":3}}],[\"6379\",{\"1\":{\"33\":1}}],[\"68\",{\"1\":{\"33\":2,\"46\":1,\"65\":1}}],[\"6\",{\"0\":{\"114\":1,\"330\":1,\"332\":1},\"1\":{\"21\":1,\"57\":1,\"65\":1,\"155\":1,\"256\":2}}],[\"0<\",{\"1\":{\"279\":3,\"315\":2,\"316\":4,\"323\":1,\"326\":1}}],[\"0x17\",{\"1\":{\"256\":1}}],[\"0x1000b5e22f50002\",{\"1\":{\"155\":1}}],[\"0x1000b5e22f50001\",{\"1\":{\"155\":1}}],[\"09\",{\"1\":{\"138\":1,\"256\":11}}],[\"09s\",{\"1\":{\"65\":1}}],[\"08\",{\"1\":{\"121\":1,\"155\":1,\"256\":4}}],[\"0477097\",{\"1\":{\"219\":1}}],[\"04\",{\"1\":{\"105\":1,\"256\":48}}],[\"03\",{\"1\":{\"105\":1,\"219\":11,\"256\":161}}],[\"0l\",{\"1\":{\"77\":1,\"100\":1}}],[\"06\",{\"1\":{\"65\":1,\"117\":1,\"164\":1,\"256\":8}}],[\"06ms\",{\"1\":{\"65\":1}}],[\"069\",{\"1\":{\"48\":1}}],[\"07\",{\"1\":{\"118\":1,\"256\":6}}],[\"077\",{\"1\":{\"48\":2}}],[\"075\",{\"1\":{\"48\":1}}],[\"0\",{\"0\":{\"267\":1,\"268\":1,\"270\":1,\"289\":1,\"291\":1,\"296\":1,\"297\":1,\"299\":1,\"300\":2,\"312\":1},\"1\":{\"35\":3,\"36\":1,\"48\":2,\"61\":1,\"64\":6,\"81\":4,\"82\":3,\"89\":1,\"90\":8,\"91\":4,\"104\":3,\"122\":1,\"123\":1,\"147\":2,\"155\":31,\"175\":3,\"176\":1,\"177\":3,\"179\":2,\"184\":1,\"193\":2,\"197\":1,\"200\":3,\"213\":5,\"214\":2,\"218\":4,\"219\":1,\"226\":4,\"242\":3,\"256\":1,\"269\":2,\"270\":1,\"275\":2,\"278\":1,\"280\":3,\"287\":1,\"288\":1,\"297\":1,\"298\":3,\"299\":1,\"300\":2,\"311\":1,\"323\":6,\"324\":4,\"325\":4,\"326\":1,\"328\":2}}],[\"052\",{\"1\":{\"164\":1}}],[\"05s\",{\"1\":{\"65\":1}}],[\"05k\",{\"1\":{\"65\":1}}],[\"05\",{\"1\":{\"22\":2,\"25\":2,\"244\":1,\"256\":14}}],[\"003\",{\"1\":{\"155\":1}}],[\"007\",{\"1\":{\"48\":1}}],[\"00\",{\"1\":{\"21\":2,\"22\":1,\"24\":2,\"25\":1,\"48\":8,\"82\":1,\"219\":2,\"256\":1}}],[\"02\",{\"0\":{\"20\":1,\"102\":1,\"158\":1},\"1\":{\"104\":1,\"244\":1,\"256\":11}}],[\"018\",{\"1\":{\"155\":1}}],[\"01k\",{\"1\":{\"65\":1}}],[\"01mb\",{\"1\":{\"65\":1}}],[\"012\",{\"1\":{\"48\":1,\"155\":2}}],[\"010\",{\"1\":{\"48\":1}}],[\"01\",{\"0\":{\"20\":1,\"23\":2,\"94\":1,\"152\":1},\"1\":{\"48\":15,\"57\":10,\"61\":3,\"64\":18,\"82\":2,\"155\":16,\"164\":7,\"256\":8}}],[\"ks3\",{\"1\":{\"322\":1}}],[\"kodo\",{\"1\":{\"322\":1}}],[\"kroy\",{\"1\":{\"297\":1}}],[\"kryo\",{\"1\":{\"33\":5,\"34\":1,\"43\":2,\"46\":1,\"280\":1,\"284\":1}}],[\"kaitoshy\",{\"1\":{\"256\":1}}],[\"k3u1fbpfcp\",{\"1\":{\"182\":2}}],[\"k\",{\"1\":{\"133\":1,\"136\":1,\"139\":8,\"175\":3}}],[\"knowledge\",{\"1\":{\"256\":1}}],[\"known\",{\"1\":{\"81\":1,\"113\":1,\"195\":1,\"274\":1,\"322\":1}}],[\"know\",{\"1\":{\"78\":1,\"85\":1,\"99\":2,\"101\":5,\"106\":1,\"164\":1,\"180\":2,\"182\":1,\"184\":1,\"189\":1,\"192\":1,\"199\":1,\"220\":1,\"235\":1,\"280\":1,\"290\":1,\"306\":1,\"307\":1,\"309\":1,\"318\":1,\"320\":1}}],[\"ken\",{\"1\":{\"256\":1}}],[\"kept\",{\"1\":{\"91\":1}}],[\"keypoints\",{\"1\":{\"317\":1}}],[\"keys\",{\"0\":{\"198\":1,\"199\":1},\"1\":{\"197\":2,\"198\":2,\"199\":1,\"200\":4}}],[\"keyset\",{\"1\":{\"147\":1,\"165\":2}}],[\"key\",{\"1\":{\"40\":16,\"68\":1,\"84\":1,\"87\":1,\"91\":8,\"92\":1,\"96\":1,\"97\":1,\"100\":4,\"109\":1,\"114\":3,\"120\":1,\"123\":2,\"126\":1,\"131\":1,\"133\":1,\"135\":1,\"139\":1,\"142\":5,\"147\":3,\"151\":2,\"173\":2,\"179\":1,\"195\":2,\"197\":1,\"200\":9,\"225\":1,\"226\":1,\"237\":1,\"241\":3,\"242\":2,\"326\":2}}],[\"keepcarry\",{\"1\":{\"256\":1}}],[\"keeping\",{\"1\":{\"92\":1}}],[\"keep\",{\"1\":{\"4\":1,\"32\":1,\"87\":1,\"98\":1,\"126\":1,\"272\":1}}],[\"kingsoft\",{\"1\":{\"322\":1}}],[\"kind\",{\"1\":{\"181\":1,\"210\":1}}],[\"kinds\",{\"1\":{\"104\":1,\"312\":1}}],[\"kimmking\",{\"1\":{\"256\":1}}],[\"kimming\",{\"1\":{\"18\":1,\"22\":1,\"25\":1}}],[\"killing\",{\"1\":{\"32\":1}}],[\"88\",{\"1\":{\"256\":4}}],[\"8848\",{\"1\":{\"164\":2,\"280\":1}}],[\"808\",{\"1\":{\"280\":1}}],[\"8080\",{\"1\":{\"280\":1}}],[\"80\",{\"1\":{\"219\":1,\"256\":6}}],[\"806\",{\"1\":{\"155\":1}}],[\"890\",{\"1\":{\"164\":1}}],[\"857\",{\"1\":{\"155\":1}}],[\"8265\",{\"1\":{\"164\":4}}],[\"826\",{\"1\":{\"155\":1}}],[\"82\",{\"1\":{\"65\":1}}],[\"84k\",{\"1\":{\"65\":1}}],[\"861\",{\"1\":{\"155\":1}}],[\"86\",{\"1\":{\"65\":1}}],[\"8192\",{\"1\":{\"280\":1}}],[\"81ms\",{\"1\":{\"65\":1}}],[\"8189\",{\"1\":{\"62\":1,\"63\":1,\"64\":2,\"65\":2,\"66\":1,\"74\":1}}],[\"8188\",{\"1\":{\"59\":1,\"60\":1,\"61\":1,\"64\":4,\"66\":1,\"72\":2,\"73\":2,\"81\":1}}],[\"832\",{\"1\":{\"57\":1}}],[\"8\",{\"0\":{\"289\":1,\"291\":1},\"1\":{\"16\":1,\"65\":2,\"105\":1,\"155\":1,\"164\":1,\"179\":1,\"256\":1,\"314\":1}}],[\"yaml\",{\"1\":{\"315\":1}}],[\"yarne\",{\"1\":{\"256\":1}}],[\"yanb07>sb\",{\"1\":{\"219\":1}}],[\"yangze\",{\"1\":{\"22\":1}}],[\"yyy\",{\"1\":{\"256\":1}}],[\"yncdata\",{\"1\":{\"104\":5,\"105\":1}}],[\"years\",{\"1\":{\"311\":1}}],[\"year\",{\"0\":{\"272\":1},\"1\":{\"302\":2}}],[\"yezj\",{\"1\":{\"256\":1}}],[\"yet\",{\"1\":{\"48\":2}}],[\"yes\",{\"1\":{\"48\":1,\"151\":1,\"218\":1}}],[\"yml\",{\"1\":{\"46\":1,\"48\":2,\"59\":1,\"154\":2,\"164\":2,\"270\":1,\"280\":3,\"326\":1}}],[\"yul\",{\"1\":{\"256\":1}}],[\"yu199195\",{\"0\":{\"42\":1},\"1\":{\"28\":1,\"46\":1,\"271\":1,\"314\":1}}],[\"yuhang\",{\"1\":{\"25\":1}}],[\"yuan\",{\"1\":{\"16\":2,\"256\":1}}],[\"youpai\",{\"1\":{\"322\":1}}],[\"youe\",{\"1\":{\"315\":1}}],[\"yourself\",{\"1\":{\"38\":1,\"100\":1,\"214\":1}}],[\"your\",{\"0\":{\"46\":1,\"315\":1},\"1\":{\"28\":2,\"29\":2,\"30\":2,\"31\":3,\"33\":6,\"43\":3,\"46\":5,\"70\":2,\"83\":1,\"147\":1,\"164\":1,\"226\":1,\"253\":1,\"272\":1,\"305\":1,\"306\":3,\"308\":3,\"309\":1,\"310\":1,\"315\":1,\"316\":2,\"319\":3,\"320\":1}}],[\"you\",{\"0\":{\"46\":1,\"300\":1,\"307\":1,\"318\":1},\"1\":{\"5\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":3,\"33\":4,\"37\":1,\"38\":1,\"43\":3,\"44\":1,\"45\":1,\"46\":5,\"48\":3,\"54\":1,\"57\":1,\"59\":2,\"61\":1,\"64\":1,\"68\":1,\"70\":3,\"71\":1,\"72\":1,\"80\":3,\"82\":1,\"83\":3,\"86\":4,\"87\":1,\"97\":1,\"98\":1,\"99\":2,\"100\":2,\"101\":2,\"105\":1,\"106\":4,\"108\":1,\"110\":2,\"112\":3,\"113\":2,\"117\":1,\"121\":3,\"124\":1,\"128\":1,\"129\":3,\"130\":1,\"131\":2,\"155\":3,\"156\":1,\"161\":1,\"164\":3,\"166\":1,\"179\":2,\"182\":2,\"184\":1,\"189\":1,\"192\":2,\"193\":1,\"197\":1,\"212\":1,\"214\":1,\"217\":3,\"221\":1,\"234\":1,\"243\":1,\"250\":1,\"252\":1,\"253\":1,\"256\":2,\"272\":1,\"275\":1,\"280\":5,\"281\":1,\"282\":1,\"286\":1,\"290\":4,\"295\":1,\"302\":1,\"305\":2,\"307\":3,\"308\":8,\"309\":3,\"310\":1,\"311\":1,\"314\":2,\"315\":2,\"316\":9,\"318\":3,\"319\":8,\"320\":3,\"321\":3,\"322\":1,\"326\":1,\"328\":5,\"329\":2}}],[\"1<\",{\"1\":{\"326\":1}}],[\"1~2ms\",{\"1\":{\"317\":1}}],[\"1s\",{\"1\":{\"220\":1}}],[\"1l\",{\"1\":{\"197\":3}}],[\"1c10d748\",{\"1\":{\"164\":4}}],[\"13\",{\"1\":{\"179\":1,\"256\":11}}],[\"1349650371302551552\",{\"1\":{\"82\":1}}],[\"1349650371868782592\",{\"1\":{\"82\":1}}],[\"139\",{\"1\":{\"65\":1}}],[\"1800000\",{\"1\":{\"280\":1}}],[\"180\",{\"1\":{\"280\":1}}],[\"185\",{\"1\":{\"164\":1}}],[\"18\",{\"1\":{\"65\":1,\"155\":1}}],[\"114a5e0\",{\"1\":{\"155\":1}}],[\"11ms\",{\"1\":{\"65\":1}}],[\"11\",{\"1\":{\"61\":3,\"65\":2,\"96\":1,\"179\":1,\"210\":1,\"256\":12,\"311\":1}}],[\"113\",{\"1\":{\"57\":1}}],[\"11th\",{\"1\":{\"28\":1}}],[\"1999ms\",{\"1\":{\"219\":2}}],[\"1997ms\",{\"1\":{\"219\":1}}],[\"1994ms\",{\"1\":{\"219\":1}}],[\"19\",{\"1\":{\"48\":7,\"164\":1,\"256\":4}}],[\"192\",{\"1\":{\"33\":10,\"43\":1,\"46\":5,\"280\":3}}],[\"147\",{\"1\":{\"64\":3}}],[\"14\",{\"1\":{\"57\":5,\"61\":3,\"64\":18,\"65\":1,\"82\":2,\"219\":11,\"256\":15}}],[\"14276\",{\"1\":{\"48\":1}}],[\"140ms\",{\"1\":{\"30\":1}}],[\"1\",{\"0\":{\"29\":1,\"35\":1,\"43\":1,\"49\":1,\"50\":1,\"51\":2,\"52\":1,\"53\":1,\"54\":1,\"56\":1,\"59\":1,\"60\":2,\"61\":1,\"63\":1,\"77\":1,\"79\":1,\"80\":2,\"81\":1,\"107\":1,\"112\":1,\"135\":1,\"160\":1,\"174\":1,\"259\":1,\"262\":1,\"272\":2,\"296\":1,\"297\":1,\"299\":1,\"300\":2,\"302\":1,\"330\":2,\"332\":1},\"1\":{\"33\":10,\"35\":1,\"36\":1,\"43\":4,\"46\":6,\"48\":1,\"57\":1,\"64\":3,\"65\":2,\"77\":2,\"80\":1,\"82\":7,\"85\":1,\"90\":1,\"101\":1,\"104\":2,\"105\":1,\"129\":4,\"133\":1,\"147\":1,\"155\":5,\"164\":1,\"172\":1,\"174\":1,\"176\":2,\"179\":3,\"182\":3,\"183\":1,\"184\":1,\"192\":1,\"193\":2,\"197\":4,\"200\":7,\"213\":6,\"214\":2,\"218\":2,\"219\":5,\"220\":1,\"221\":2,\"242\":2,\"256\":8,\"262\":1,\"275\":1,\"278\":1,\"279\":3,\"280\":2,\"287\":1,\"297\":1,\"298\":3,\"299\":1,\"300\":2,\"306\":1,\"321\":1,\"324\":2,\"326\":2,\"328\":1,\"329\":1,\"336\":1}}],[\"162614487\",{\"1\":{\"282\":1,\"288\":1}}],[\"160\",{\"1\":{\"256\":1}}],[\"166\",{\"1\":{\"256\":1}}],[\"1677ms\",{\"1\":{\"219\":1}}],[\"167\",{\"1\":{\"164\":1}}],[\"16179\",{\"1\":{\"65\":1}}],[\"168\",{\"1\":{\"33\":10,\"43\":1,\"46\":6,\"280\":3}}],[\"16\",{\"1\":{\"25\":8,\"57\":1,\"91\":1,\"139\":1,\"164\":1,\"219\":9,\"256\":4,\"280\":2,\"326\":1}}],[\"172\",{\"1\":{\"61\":1,\"64\":6}}],[\"17943\",{\"1\":{\"57\":5}}],[\"17\",{\"1\":{\"24\":1,\"25\":5,\"57\":2,\"82\":2,\"155\":16,\"164\":6,\"256\":2}}],[\"155\",{\"1\":{\"61\":1,\"64\":6}}],[\"154\",{\"1\":{\"57\":1,\"164\":1}}],[\"150\",{\"1\":{\"57\":1,\"256\":1}}],[\"15\",{\"1\":{\"24\":1,\"25\":7,\"57\":7,\"219\":2,\"256\":4}}],[\"127\",{\"1\":{\"155\":1,\"179\":1,\"193\":1,\"280\":1}}],[\"121\",{\"1\":{\"61\":1,\"64\":6,\"155\":1}}],[\"126\",{\"1\":{\"61\":1,\"155\":1}}],[\"125\",{\"1\":{\"61\":1}}],[\"123\",{\"1\":{\"61\":1,\"305\":1}}],[\"123456\",{\"1\":{\"33\":4,\"43\":1,\"46\":2,\"56\":1,\"314\":1}}],[\"128\",{\"1\":{\"46\":2,\"164\":1,\"226\":1,\"256\":1}}],[\"120\",{\"1\":{\"33\":4,\"43\":2,\"256\":3}}],[\"12\",{\"1\":{\"16\":1,\"81\":1,\"179\":1,\"210\":1,\"219\":9,\"256\":13}}],[\"109\",{\"1\":{\"306\":1}}],[\"109533\",{\"1\":{\"65\":1}}],[\"10s\",{\"1\":{\"219\":1}}],[\"102\",{\"1\":{\"91\":1}}],[\"1024\",{\"1\":{\"48\":1,\"226\":1}}],[\"1000\",{\"1\":{\"176\":1,\"200\":1,\"219\":2,\"220\":1,\"328\":4}}],[\"10000\",{\"1\":{\"40\":1}}],[\"100000\",{\"1\":{\"33\":1,\"46\":1}}],[\"10051\",{\"1\":{\"164\":6}}],[\"100ms\",{\"1\":{\"30\":1,\"214\":1}}],[\"100\",{\"1\":{\"16\":1,\"91\":2,\"213\":1,\"218\":2,\"247\":1,\"256\":16}}],[\"10\",{\"0\":{\"313\":1},\"1\":{\"4\":1,\"22\":4,\"25\":4,\"46\":1,\"48\":1,\"81\":1,\"155\":1,\"174\":1,\"197\":1,\"213\":2,\"214\":6,\"218\":2,\"219\":1,\"256\":38,\"280\":2,\"317\":1}}],[\"299\",{\"1\":{\"256\":1}}],[\"29\",{\"1\":{\"256\":71}}],[\"29812\",{\"1\":{\"61\":3,\"64\":18}}],[\"2==0\",{\"1\":{\"220\":1}}],[\"26\",{\"1\":{\"256\":6}}],[\"261\",{\"1\":{\"155\":1}}],[\"26379\",{\"1\":{\"33\":6,\"46\":3}}],[\"28\",{\"1\":{\"65\":1,\"219\":1,\"256\":8}}],[\"249\",{\"1\":{\"219\":1}}],[\"244\",{\"1\":{\"164\":1}}],[\"24\",{\"1\":{\"24\":1,\"64\":3,\"219\":1,\"256\":15}}],[\"2222\",{\"1\":{\"294\":1}}],[\"2202\",{\"1\":{\"294\":1}}],[\"2204\",{\"1\":{\"293\":1}}],[\"2210\",{\"1\":{\"294\":1}}],[\"2217\",{\"1\":{\"293\":1}}],[\"2218\",{\"1\":{\"293\":1}}],[\"2213\",{\"1\":{\"293\":1}}],[\"2211\",{\"1\":{\"293\":1}}],[\"2212\",{\"1\":{\"292\":1,\"294\":1}}],[\"22\",{\"1\":{\"22\":5,\"48\":7,\"64\":3,\"65\":1,\"256\":5,\"280\":3}}],[\"2195\",{\"1\":{\"293\":1}}],[\"2197\",{\"1\":{\"293\":1}}],[\"2179\",{\"1\":{\"293\":1}}],[\"2188\",{\"1\":{\"294\":1}}],[\"2189\",{\"1\":{\"294\":1}}],[\"2180\",{\"1\":{\"293\":1}}],[\"218\",{\"1\":{\"256\":1}}],[\"2181\",{\"1\":{\"33\":1,\"46\":1,\"154\":2,\"155\":11}}],[\"21\",{\"1\":{\"22\":8,\"48\":3,\"64\":3,\"256\":2}}],[\"250\",{\"1\":{\"219\":5}}],[\"252\",{\"1\":{\"219\":3}}],[\"254\",{\"1\":{\"155\":1}}],[\"255\",{\"1\":{\"65\":1,\"226\":6}}],[\"25ms\",{\"1\":{\"65\":1}}],[\"25\",{\"1\":{\"22\":4,\"25\":4,\"64\":3,\"164\":7,\"219\":1,\"256\":2}}],[\"23\",{\"1\":{\"21\":1,\"64\":3,\"65\":1,\"219\":2,\"256\":3,\"290\":1}}],[\"2017\",{\"1\":{\"321\":1}}],[\"2014\",{\"1\":{\"309\":1,\"320\":1}}],[\"2018\",{\"1\":{\"244\":1}}],[\"2019ms\",{\"1\":{\"219\":1}}],[\"2019\",{\"1\":{\"155\":1}}],[\"2001ms\",{\"1\":{\"219\":1}}],[\"20000\",{\"1\":{\"241\":1,\"242\":1}}],[\"2000\",{\"1\":{\"154\":2,\"220\":1,\"256\":1}}],[\"200\",{\"1\":{\"91\":1,\"184\":1,\"219\":1,\"256\":11,\"280\":1,\"306\":1,\"328\":4}}],[\"20800\",{\"1\":{\"48\":7}}],[\"20\",{\"1\":{\"21\":1,\"22\":9,\"25\":2,\"48\":1,\"61\":3,\"64\":18,\"155\":17,\"164\":1,\"184\":1,\"256\":103,\"270\":1,\"280\":1}}],[\"2023\",{\"0\":{\"259\":1},\"1\":{\"256\":25}}],[\"2022\",{\"1\":{\"254\":1,\"256\":37}}],[\"20210130230250748\",{\"1\":{\"135\":1}}],[\"20210130214402997\",{\"1\":{\"132\":1}}],[\"20210130202512831\",{\"1\":{\"126\":1}}],[\"20210129113307494\",{\"1\":{\"123\":1}}],[\"20210129111231212\",{\"1\":{\"123\":1}}],[\"20210129103451844\",{\"1\":{\"122\":1}}],[\"20210129103047851\",{\"1\":{\"122\":1}}],[\"20210129095703911\",{\"1\":{\"122\":1}}],[\"20210129095623013\",{\"1\":{\"122\":1}}],[\"20210122172333111\",{\"1\":{\"118\":1}}],[\"2021\",{\"0\":{\"21\":1,\"24\":1},\"1\":{\"21\":1,\"24\":1,\"48\":11,\"57\":5,\"61\":3,\"64\":18,\"82\":2,\"155\":16,\"164\":7,\"219\":11,\"254\":1,\"256\":206}}],[\"2020ms\",{\"1\":{\"219\":4}}],[\"2020\",{\"0\":{\"13\":1},\"1\":{\"13\":1}}],[\"27017\",{\"1\":{\"33\":1,\"46\":1}}],[\"27\",{\"1\":{\"13\":1,\"61\":1,\"64\":6,\"256\":7}}],[\"2\",{\"0\":{\"30\":1,\"36\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":2,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"65\":1,\"66\":1,\"67\":1,\"76\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":2,\"82\":1,\"107\":2,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":2,\"114\":1,\"136\":1,\"161\":1,\"175\":1,\"259\":1,\"263\":1,\"267\":2,\"268\":2,\"270\":2,\"272\":1,\"300\":1,\"302\":1,\"312\":1},\"1\":{\"8\":1,\"33\":3,\"43\":4,\"48\":7,\"57\":2,\"65\":2,\"91\":2,\"114\":2,\"122\":1,\"123\":1,\"147\":1,\"164\":22,\"166\":1,\"179\":2,\"182\":1,\"183\":1,\"184\":2,\"200\":6,\"214\":3,\"219\":5,\"241\":1,\"242\":1,\"247\":1,\"269\":1,\"275\":1,\"278\":1,\"280\":1,\"287\":1,\"288\":2,\"294\":1,\"298\":1,\"306\":1,\"308\":1,\"311\":1,\"315\":6,\"316\":4,\"319\":1,\"321\":1,\"323\":2,\"324\":2,\"325\":2,\"336\":1}}],[\"v1\",{\"0\":{\"332\":1}}],[\"vs\",{\"1\":{\"321\":1}}],[\"v\",{\"1\":{\"133\":1,\"136\":1,\"139\":8,\"175\":2,\"214\":1,\"219\":1,\"221\":1}}],[\"vilochen\",{\"1\":{\"256\":1}}],[\"violating\",{\"1\":{\"254\":1}}],[\"visualized\",{\"1\":{\"302\":1,\"317\":1}}],[\"visual\",{\"1\":{\"225\":1}}],[\"visit\",{\"1\":{\"56\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":2,\"315\":1}}],[\"viewing\",{\"1\":{\"180\":1}}],[\"view\",{\"1\":{\"155\":1,\"322\":1,\"325\":1,\"329\":1}}],[\"vivid\",{\"1\":{\"121\":1}}],[\"virtual\",{\"1\":{\"89\":2}}],[\"via\",{\"1\":{\"31\":1,\"65\":1,\"164\":1,\"224\":1}}],[\"vendor=oracle\",{\"1\":{\"155\":1}}],[\"verified\",{\"1\":{\"311\":1}}],[\"verification\",{\"1\":{\"151\":1}}],[\"verify\",{\"1\":{\"106\":1,\"151\":3,\"192\":1,\"214\":1,\"219\":1}}],[\"very\",{\"1\":{\"72\":1,\"91\":1,\"97\":1,\"121\":1,\"124\":2,\"126\":1,\"164\":2,\"169\":1,\"200\":1,\"209\":1,\"210\":1,\"211\":1,\"234\":1,\"302\":1,\"308\":1,\"319\":1}}],[\"version2\",{\"0\":{\"312\":1}}],[\"version<2\",{\"1\":{\"279\":1}}],[\"versions\",{\"1\":{\"247\":1,\"269\":3,\"312\":1,\"323\":2,\"324\":2,\"325\":2}}],[\"version=1\",{\"1\":{\"155\":1}}],[\"version=3\",{\"1\":{\"155\":1}}],[\"version>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":2,\"326\":2}}],[\"version\",{\"0\":{\"251\":1,\"253\":1,\"270\":1,\"272\":1,\"281\":1,\"296\":1,\"297\":1,\"299\":1,\"300\":2,\"302\":1},\"1\":{\"6\":1,\"8\":1,\"31\":1,\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"132\":1,\"144\":1,\"147\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"212\":1,\"217\":1,\"218\":1,\"228\":4,\"230\":1,\"251\":1,\"272\":1,\"275\":1,\"278\":1,\"280\":2,\"281\":1,\"284\":1,\"285\":1,\"290\":4,\"297\":1,\"298\":2,\"299\":1,\"300\":2,\"306\":1,\"308\":2,\"319\":2}}],[\"ve\",{\"1\":{\"37\":1}}],[\"volume\",{\"1\":{\"177\":1,\"210\":2}}],[\"void\",{\"1\":{\"35\":3,\"39\":1,\"40\":2,\"48\":1,\"82\":2,\"97\":10,\"98\":2,\"100\":7,\"104\":4,\"105\":2,\"111\":2,\"112\":5,\"113\":6,\"114\":5,\"117\":2,\"118\":5,\"122\":6,\"123\":3,\"126\":4,\"129\":2,\"136\":1,\"139\":3,\"156\":3,\"161\":2,\"162\":4,\"165\":5,\"166\":3,\"175\":1,\"195\":1,\"207\":1,\"214\":2,\"280\":10,\"305\":1,\"327\":1}}],[\"voted\",{\"1\":{\"254\":1}}],[\"vote\",{\"1\":{\"28\":1}}],[\"vane\",{\"1\":{\"309\":1,\"320\":1}}],[\"varchar\",{\"1\":{\"226\":9}}],[\"variables\",{\"1\":{\"126\":1}}],[\"variety\",{\"1\":{\"120\":1,\"284\":1}}],[\"various\",{\"1\":{\"34\":1,\"69\":1,\"74\":1,\"88\":1,\"93\":1,\"105\":1,\"116\":1,\"117\":2,\"182\":1,\"275\":2,\"277\":1,\"284\":2,\"303\":1,\"317\":1}}],[\"valuable\",{\"1\":{\"46\":1}}],[\"valueof\",{\"1\":{\"79\":1,\"81\":1,\"89\":1,\"92\":1,\"105\":1,\"147\":2,\"184\":1}}],[\"values\",{\"1\":{\"70\":1,\"104\":2,\"105\":1,\"111\":1,\"151\":2,\"156\":1,\"165\":1,\"207\":3,\"221\":1,\"231\":1,\"237\":1}}],[\"value\",{\"1\":{\"35\":1,\"66\":1,\"70\":1,\"89\":2,\"90\":1,\"91\":1,\"92\":1,\"97\":1,\"100\":1,\"105\":3,\"111\":1,\"112\":1,\"113\":1,\"133\":1,\"135\":3,\"139\":13,\"147\":1,\"156\":1,\"165\":1,\"173\":2,\"174\":1,\"177\":1,\"180\":3,\"195\":2,\"197\":1,\"199\":1,\"200\":2,\"211\":1,\"218\":12,\"219\":4,\"222\":3,\"234\":1,\"236\":2,\"241\":1,\"242\":2,\"280\":1,\"292\":1,\"293\":1}}],[\"value=\",{\"1\":{\"33\":37,\"43\":10}}],[\"validation\",{\"1\":{\"241\":1,\"242\":1}}],[\"validate\",{\"1\":{\"77\":1}}],[\"validateutils\",{\"1\":{\"77\":1}}],[\"valid\",{\"1\":{\"8\":1,\"247\":1}}],[\"gz\",{\"1\":{\"293\":1}}],[\"gvp\",{\"1\":{\"247\":4,\"253\":3}}],[\"gmt\",{\"1\":{\"155\":1}}],[\"gson\",{\"1\":{\"104\":1,\"105\":2}}],[\"gsonutils\",{\"1\":{\"79\":3,\"80\":2,\"81\":3,\"87\":1,\"97\":1,\"98\":1,\"113\":5,\"117\":2,\"165\":2,\"172\":1,\"183\":1,\"195\":1,\"197\":1,\"207\":1,\"214\":2,\"221\":1}}],[\"globalinterceptor\",{\"1\":{\"293\":1}}],[\"globalheaders\",{\"1\":{\"293\":1}}],[\"globalplugin\",{\"1\":{\"179\":3,\"180\":2,\"181\":1,\"187\":1}}],[\"global\",{\"0\":{\"180\":1},\"1\":{\"87\":2,\"126\":1,\"151\":1,\"179\":4,\"180\":1,\"182\":2,\"185\":1}}],[\"globally\",{\"1\":{\"78\":1}}],[\"g\",{\"1\":{\"82\":1,\"234\":2}}],[\"given\",{\"1\":{\"82\":1,\"247\":2}}],[\"give\",{\"1\":{\"70\":1,\"211\":1,\"321\":1}}],[\"git\",{\"1\":{\"52\":2,\"65\":2}}],[\"gitee\",{\"1\":{\"28\":2,\"247\":3,\"248\":2,\"253\":2,\"261\":1,\"271\":2,\"282\":2,\"288\":1,\"292\":2,\"293\":15,\"294\":8,\"295\":2,\"301\":2,\"311\":2,\"322\":2}}],[\"github\",{\"0\":{\"42\":1,\"51\":1},\"1\":{\"28\":2,\"46\":3,\"49\":2,\"52\":1,\"130\":1,\"217\":1,\"237\":1,\"244\":1,\"248\":2,\"261\":1,\"271\":2,\"282\":2,\"288\":3,\"292\":1,\"293\":7,\"294\":6,\"295\":2,\"301\":2,\"306\":1,\"311\":2,\"314\":1,\"321\":1,\"322\":2,\"328\":1}}],[\"gataway\",{\"1\":{\"305\":1}}],[\"gather\",{\"0\":{\"285\":1},\"1\":{\"285\":1}}],[\"gateway<\",{\"1\":{\"315\":1}}],[\"gateways\",{\"0\":{\"312\":1},\"1\":{\"98\":1,\"210\":1}}],[\"gateway\",{\"0\":{\"47\":1,\"73\":1,\"76\":1,\"80\":1,\"81\":1,\"84\":1,\"94\":1,\"95\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"115\":1,\"117\":1,\"118\":1,\"120\":1,\"140\":1,\"148\":1,\"152\":1,\"153\":1,\"156\":1,\"158\":1,\"159\":2,\"160\":1,\"161\":1,\"162\":1,\"164\":1,\"165\":1,\"166\":1,\"168\":1,\"170\":1,\"179\":1,\"186\":1,\"201\":1,\"206\":1,\"209\":1,\"215\":1,\"223\":1,\"232\":1,\"296\":1,\"297\":1,\"302\":1,\"307\":1,\"309\":1,\"312\":1,\"313\":1,\"315\":1,\"317\":1,\"318\":1,\"320\":1},\"1\":{\"48\":4,\"49\":1,\"56\":1,\"65\":1,\"68\":1,\"69\":8,\"73\":3,\"77\":2,\"81\":3,\"82\":1,\"83\":8,\"86\":2,\"88\":1,\"93\":2,\"96\":4,\"98\":4,\"99\":2,\"100\":3,\"101\":4,\"103\":2,\"104\":3,\"105\":7,\"106\":3,\"117\":2,\"154\":1,\"155\":3,\"157\":2,\"159\":4,\"160\":1,\"164\":8,\"165\":2,\"166\":4,\"177\":1,\"179\":1,\"180\":2,\"185\":3,\"191\":1,\"192\":1,\"195\":1,\"201\":2,\"205\":1,\"206\":1,\"207\":3,\"209\":1,\"210\":1,\"211\":3,\"212\":1,\"213\":1,\"214\":9,\"217\":1,\"218\":1,\"221\":1,\"222\":1,\"225\":2,\"226\":2,\"232\":1,\"235\":1,\"302\":1,\"305\":4,\"306\":3,\"308\":4,\"309\":2,\"315\":1,\"317\":6,\"319\":4,\"320\":2,\"321\":3}}],[\"gain\",{\"1\":{\"48\":1}}],[\"gave\",{\"1\":{\"43\":1}}],[\"guys\",{\"1\":{\"272\":1,\"302\":1,\"311\":1}}],[\"guaranteed\",{\"1\":{\"195\":1}}],[\"guava\",{\"0\":{\"40\":1},\"1\":{\"40\":5,\"275\":1}}],[\"guide\",{\"0\":{\"277\":1},\"1\":{\"254\":1}}],[\"guidelines\",{\"1\":{\"7\":2,\"286\":1}}],[\"guidance\",{\"1\":{\"182\":1}}],[\"guesses\",{\"1\":{\"81\":1}}],[\"guess\",{\"1\":{\"69\":2,\"100\":1,\"122\":1,\"123\":1,\"179\":1,\"185\":1,\"308\":1,\"319\":1}}],[\"gc\",{\"0\":{\"35\":1}}],[\"grpc\",{\"1\":{\"283\":1}}],[\"green\",{\"1\":{\"317\":1}}],[\"greenwich\",{\"1\":{\"269\":1}}],[\"gregorian\",{\"1\":{\"294\":1}}],[\"greatly\",{\"1\":{\"281\":1,\"288\":2}}],[\"great\",{\"1\":{\"91\":1}}],[\"greater\",{\"0\":{\"127\":1},\"1\":{\"33\":2,\"89\":1,\"90\":1,\"175\":1,\"212\":3}}],[\"grow\",{\"1\":{\"286\":1,\"295\":1}}],[\"growth\",{\"1\":{\"91\":1}}],[\"groupversion\",{\"1\":{\"226\":1}}],[\"groupparentpath\",{\"1\":{\"162\":1}}],[\"groupenum\",{\"1\":{\"117\":2}}],[\"groupjson\",{\"1\":{\"105\":4}}],[\"groups\",{\"1\":{\"104\":4,\"212\":1,\"253\":1}}],[\"groupkeys\",{\"1\":{\"104\":1}}],[\"groupkey\",{\"1\":{\"100\":2,\"104\":2}}],[\"group=\",{\"1\":{\"48\":10,\"100\":1}}],[\"group\",{\"1\":{\"46\":2,\"97\":3,\"100\":1,\"105\":4,\"110\":1,\"164\":1,\"165\":1,\"166\":1,\"212\":1,\"241\":1,\"242\":1,\"252\":2,\"256\":1,\"280\":2,\"282\":1,\"288\":1,\"301\":1,\"311\":1}}],[\"groupid>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":2,\"326\":2}}],[\"gradually\",{\"1\":{\"211\":1,\"214\":2}}],[\"grade\",{\"1\":{\"4\":1}}],[\"granularity\",{\"1\":{\"198\":1}}],[\"grained\",{\"1\":{\"71\":1}}],[\"george\",{\"1\":{\"256\":1}}],[\"genericfilter\",{\"1\":{\"240\":1,\"242\":1}}],[\"genericinvoker\",{\"1\":{\"236\":1,\"237\":1}}],[\"genericimplfilter\",{\"0\":{\"241\":1},\"1\":{\"240\":1,\"241\":1}}],[\"genericimpl\",{\"1\":{\"234\":1,\"241\":1}}],[\"genericexception\",{\"1\":{\"234\":3,\"237\":2}}],[\"generic=bean\",{\"1\":{\"242\":1}}],[\"generic=nativejava\",{\"1\":{\"242\":1}}],[\"generic=true\",{\"1\":{\"242\":1}}],[\"generic=\",{\"1\":{\"233\":1}}],[\"generic\",{\"0\":{\"242\":1},\"1\":{\"232\":1,\"234\":3,\"237\":2,\"241\":12,\"242\":14,\"244\":1}}],[\"genericsservice\",{\"1\":{\"236\":1}}],[\"genericservice\",{\"1\":{\"234\":2,\"237\":5,\"242\":1}}],[\"generics\",{\"1\":{\"231\":1}}],[\"generation\",{\"1\":{\"100\":1,\"199\":1}}],[\"generateerror\",{\"1\":{\"214\":1}}],[\"generate\",{\"1\":{\"105\":1,\"124\":1,\"177\":1,\"214\":1,\"328\":1}}],[\"generateresponse\",{\"1\":{\"100\":1}}],[\"generated\",{\"1\":{\"48\":1,\"200\":1}}],[\"generatesign\",{\"1\":{\"151\":1}}],[\"generates\",{\"1\":{\"48\":1,\"199\":1}}],[\"generalized\",{\"0\":{\"232\":1,\"241\":1},\"1\":{\"224\":1,\"231\":1,\"240\":3,\"241\":1,\"242\":1,\"243\":1}}],[\"generalization\",{\"0\":{\"231\":1,\"233\":1,\"234\":1,\"236\":1,\"240\":1,\"242\":1},\"1\":{\"185\":1,\"224\":5,\"225\":1,\"226\":1,\"236\":1,\"241\":3,\"242\":5,\"312\":1}}],[\"general\",{\"0\":{\"189\":1},\"1\":{\"87\":1,\"172\":1,\"179\":2,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"199\":1,\"212\":1,\"242\":1,\"321\":1}}],[\"generally\",{\"1\":{\"72\":1,\"179\":1,\"184\":1,\"187\":1,\"210\":1,\"211\":1,\"212\":2,\"308\":1,\"319\":1}}],[\"getgenericparametertypes\",{\"1\":{\"242\":1}}],[\"getgson\",{\"1\":{\"221\":1}}],[\"getgrouptype\",{\"1\":{\"117\":1}}],[\"getgroup\",{\"1\":{\"97\":1}}],[\"getgroupkey\",{\"1\":{\"97\":2,\"111\":2,\"113\":2,\"156\":2,\"165\":2}}],[\"getwaitintervalfunctioninopenstate\",{\"1\":{\"219\":1}}],[\"getweight\",{\"1\":{\"90\":3,\"91\":2,\"177\":1}}],[\"getdegraderuletimewindow\",{\"1\":{\"214\":1}}],[\"getdegraderulegrade\",{\"1\":{\"214\":1}}],[\"getdegraderulecount\",{\"1\":{\"214\":1}}],[\"getdegraderuleenable\",{\"1\":{\"214\":1}}],[\"getdata\",{\"1\":{\"104\":1,\"117\":1}}],[\"getkeys\",{\"1\":{\"197\":1,\"199\":1}}],[\"getqueryparams\",{\"1\":{\"180\":1}}],[\"getfileinfobyurl\",{\"1\":{\"329\":1}}],[\"getfirst\",{\"1\":{\"180\":1,\"237\":1}}],[\"getfailureratethreshold\",{\"1\":{\"219\":1}}],[\"getfallbackuri\",{\"1\":{\"214\":1,\"219\":2,\"221\":1}}],[\"getflowrulecontrolbehavior\",{\"1\":{\"214\":1}}],[\"getflowrulecount\",{\"1\":{\"214\":1}}],[\"getflowrulegrade\",{\"1\":{\"214\":1}}],[\"getflowruleenable\",{\"1\":{\"214\":1}}],[\"getforobject\",{\"1\":{\"104\":1}}],[\"geturl\",{\"1\":{\"156\":1,\"161\":1,\"241\":1,\"328\":1}}],[\"getupstreamurl\",{\"1\":{\"79\":2,\"81\":2,\"89\":1,\"91\":2,\"175\":1}}],[\"getjoin\",{\"0\":{\"133\":1},\"1\":{\"120\":2,\"131\":1,\"133\":1,\"135\":2,\"139\":1,\"177\":1}}],[\"getelementtype\",{\"1\":{\"294\":1}}],[\"getexceptionmessage\",{\"1\":{\"237\":1}}],[\"getextension\",{\"1\":{\"242\":1}}],[\"getextensionclasses\",{\"1\":{\"137\":1,\"139\":2}}],[\"getextensionloader\",{\"1\":{\"120\":2,\"132\":1,\"177\":1,\"242\":1}}],[\"getepochsecond\",{\"1\":{\"197\":1}}],[\"geteventtype\",{\"1\":{\"97\":5,\"111\":5,\"113\":5,\"117\":1,\"156\":1,\"165\":1}}],[\"getenabled\",{\"1\":{\"85\":2,\"151\":1,\"172\":1,\"182\":1,\"195\":1}}],[\"getmimetype\",{\"1\":{\"294\":1}}],[\"getminimumnumberofcalls\",{\"1\":{\"219\":1}}],[\"getmapping\",{\"1\":{\"147\":1,\"220\":1}}],[\"getmd5\",{\"1\":{\"105\":1}}],[\"getmsg\",{\"1\":{\"93\":2,\"151\":1,\"183\":2,\"184\":1,\"185\":2,\"197\":1,\"214\":3,\"236\":2,\"238\":2}}],[\"getmethods\",{\"1\":{\"294\":1}}],[\"getmethodname\",{\"1\":{\"237\":1,\"241\":2,\"242\":2}}],[\"getmethodvalue\",{\"1\":{\"92\":1,\"184\":1}}],[\"getmessage\",{\"1\":{\"82\":1,\"92\":1,\"104\":1,\"105\":2,\"184\":1,\"197\":1,\"242\":2}}],[\"getbigwriter\",{\"1\":{\"292\":1}}],[\"getburstcapacity\",{\"1\":{\"197\":1}}],[\"getby\",{\"1\":{\"293\":1}}],[\"getbyname\",{\"1\":{\"176\":1}}],[\"getbytes\",{\"1\":{\"147\":1}}],[\"getbasicremote\",{\"1\":{\"114\":2}}],[\"getbody\",{\"1\":{\"92\":1,\"105\":1,\"184\":1}}],[\"getbeansoftype\",{\"1\":{\"111\":1,\"156\":1,\"165\":1}}],[\"getbean\",{\"1\":{\"40\":1,\"114\":1,\"221\":1}}],[\"getleft\",{\"1\":{\"237\":1}}],[\"getlimitforperiod\",{\"1\":{\"219\":1}}],[\"getlimitrefreshperiod\",{\"1\":{\"219\":1}}],[\"getlastmodifytime\",{\"1\":{\"105\":1}}],[\"getlastupdate\",{\"1\":{\"91\":1}}],[\"getloadbalance\",{\"1\":{\"87\":1,\"120\":1,\"172\":1,\"183\":1}}],[\"getloged\",{\"1\":{\"85\":2}}],[\"getvalue\",{\"1\":{\"89\":1,\"91\":1,\"135\":1,\"139\":4}}],[\"getorder\",{\"1\":{\"86\":1,\"179\":1,\"207\":1,\"214\":1}}],[\"getordefault\",{\"1\":{\"82\":1,\"165\":1,\"166\":1}}],[\"getname\",{\"1\":{\"80\":11,\"82\":1,\"85\":4,\"86\":1,\"98\":3,\"118\":1,\"123\":1,\"139\":1,\"179\":2,\"184\":2,\"207\":1,\"214\":3,\"230\":1,\"237\":1,\"241\":4,\"242\":1}}],[\"getheaders\",{\"1\":{\"92\":1,\"93\":1,\"180\":1,\"184\":1,\"185\":1,\"207\":1,\"237\":1}}],[\"gethandler\",{\"1\":{\"207\":1}}],[\"gethandle\",{\"1\":{\"79\":1,\"81\":1,\"87\":1,\"172\":1,\"183\":1,\"197\":1,\"207\":1,\"214\":2,\"221\":1}}],[\"gethostaddress\",{\"1\":{\"172\":1,\"183\":1}}],[\"gethost\",{\"1\":{\"79\":1,\"81\":1}}],[\"getparameter\",{\"1\":{\"241\":1}}],[\"getparametertypes\",{\"1\":{\"236\":1,\"237\":1,\"242\":1}}],[\"getpath\",{\"1\":{\"78\":1,\"82\":1,\"236\":1,\"237\":2}}],[\"getpermittednumberofcallsinhalfopenstate\",{\"1\":{\"219\":1}}],[\"getproperty\",{\"1\":{\"174\":2}}],[\"getpluginname\",{\"1\":{\"118\":2}}],[\"getpluginid\",{\"1\":{\"80\":5}}],[\"getport\",{\"1\":{\"79\":1,\"81\":1}}],[\"getattachments\",{\"1\":{\"242\":1}}],[\"getattachment\",{\"1\":{\"242\":2}}],[\"getattributes\",{\"1\":{\"87\":1,\"172\":3,\"180\":1,\"183\":3,\"184\":3,\"237\":2,\"242\":1}}],[\"getattribute\",{\"1\":{\"87\":1,\"92\":1,\"93\":1,\"151\":1,\"183\":1,\"184\":4,\"185\":1,\"214\":1,\"221\":1,\"236\":3,\"238\":1}}],[\"getarguments\",{\"1\":{\"241\":3,\"242\":5}}],[\"getaddress\",{\"1\":{\"172\":1,\"183\":1}}],[\"getadminurl\",{\"1\":{\"77\":1}}],[\"getappsecret\",{\"1\":{\"151\":1}}],[\"getappkey\",{\"1\":{\"151\":2}}],[\"getappname\",{\"1\":{\"79\":1,\"81\":1}}],[\"getannotationalias\",{\"1\":{\"293\":1}}],[\"getannotation\",{\"1\":{\"139\":2}}],[\"getandincrement\",{\"1\":{\"35\":1}}],[\"getasjsonarray\",{\"1\":{\"105\":1}}],[\"getasjsonobject\",{\"1\":{\"104\":1}}],[\"getalias\",{\"1\":{\"80\":1,\"82\":2}}],[\"getinvoker\",{\"1\":{\"242\":1}}],[\"getinterface\",{\"1\":{\"237\":1,\"242\":3}}],[\"getint\",{\"1\":{\"129\":2}}],[\"getinstance\",{\"1\":{\"39\":1,\"40\":2,\"79\":3,\"80\":2,\"81\":3,\"85\":3,\"86\":1,\"87\":2,\"97\":1,\"98\":1,\"113\":5,\"114\":1,\"117\":2,\"118\":3,\"151\":1,\"165\":2,\"172\":5,\"182\":3,\"183\":2,\"195\":1,\"197\":1,\"207\":1,\"214\":2,\"221\":1,\"237\":3}}],[\"getifavailable\",{\"1\":{\"86\":1,\"117\":4,\"161\":4,\"166\":4,\"207\":1}}],[\"getid\",{\"1\":{\"48\":4,\"79\":1,\"80\":3,\"81\":1,\"82\":3,\"85\":1,\"87\":1,\"109\":1,\"165\":1,\"172\":2,\"182\":1,\"183\":1,\"197\":1,\"221\":3}}],[\"getslidingwindowtype\",{\"1\":{\"219\":1}}],[\"getslidingwindowsize\",{\"1\":{\"219\":1}}],[\"getsystemresources\",{\"1\":{\"123\":1,\"139\":1}}],[\"getsystemclassloader\",{\"1\":{\"123\":1}}],[\"getservicename\",{\"1\":{\"232\":1}}],[\"getselectorid\",{\"1\":{\"165\":3,\"214\":1}}],[\"getselectorconditions\",{\"1\":{\"48\":1,\"80\":1}}],[\"getsessiontimeout\",{\"1\":{\"156\":1,\"161\":1}}],[\"getsecuritymanager\",{\"1\":{\"123\":1}}],[\"getsource\",{\"1\":{\"97\":5,\"111\":5,\"113\":5,\"156\":1,\"165\":1}}],[\"getstatuscode\",{\"1\":{\"93\":3,\"185\":3,\"214\":1,\"221\":1}}],[\"gets\",{\"1\":{\"85\":1,\"93\":1,\"159\":1,\"176\":1}}],[\"getsign\",{\"1\":{\"151\":1}}],[\"getsimplename\",{\"1\":{\"82\":1}}],[\"getsize\",{\"1\":{\"40\":2}}],[\"get\",{\"0\":{\"161\":1,\"198\":1,\"313\":1},\"1\":{\"40\":1,\"48\":1,\"82\":3,\"85\":3,\"86\":1,\"87\":3,\"89\":1,\"90\":3,\"91\":6,\"92\":1,\"104\":4,\"105\":2,\"114\":1,\"117\":2,\"118\":3,\"121\":1,\"122\":2,\"123\":1,\"127\":1,\"132\":2,\"135\":3,\"137\":3,\"139\":8,\"147\":1,\"151\":1,\"162\":1,\"164\":2,\"172\":4,\"173\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"195\":3,\"197\":5,\"200\":4,\"214\":2,\"221\":1,\"226\":1,\"235\":2,\"236\":3,\"237\":3,\"241\":2,\"242\":5,\"294\":1,\"329\":1}}],[\"getting\",{\"1\":{\"294\":1}}],[\"gettimelimiterconfig\",{\"1\":{\"221\":2}}],[\"gettimeoutduration\",{\"1\":{\"219\":1,\"221\":2}}],[\"gettimeoutdurationrate\",{\"1\":{\"219\":1}}],[\"gettimeout\",{\"1\":{\"172\":1,\"183\":1}}],[\"gettimestamp\",{\"1\":{\"151\":1}}],[\"gettargetserviceuniquename\",{\"1\":{\"242\":1}}],[\"gettype\",{\"1\":{\"85\":1,\"172\":1,\"182\":1}}],[\"gettcctransaction\",{\"1\":{\"40\":1}}],[\"gettransid\",{\"1\":{\"39\":1,\"40\":1}}],[\"getcircuitbreakerconfig\",{\"1\":{\"221\":1}}],[\"getcircuitenable\",{\"1\":{\"219\":1,\"221\":1}}],[\"getcallerclass\",{\"1\":{\"127\":1}}],[\"getclassloader\",{\"1\":{\"139\":1}}],[\"getclass\",{\"1\":{\"86\":1,\"179\":2,\"207\":1,\"241\":3,\"242\":1}}],[\"getconfigandsignlistener\",{\"1\":{\"166\":3}}],[\"getconfig\",{\"1\":{\"165\":1,\"195\":1}}],[\"getconnectiontimeout\",{\"1\":{\"156\":1,\"161\":1}}],[\"getconnection\",{\"1\":{\"127\":5,\"129\":3}}],[\"getcontextclassloader\",{\"1\":{\"123\":1}}],[\"getcontext\",{\"1\":{\"79\":1,\"81\":1,\"123\":1,\"237\":1,\"242\":1}}],[\"getcookies\",{\"1\":{\"93\":1,\"185\":1}}],[\"getcode\",{\"1\":{\"36\":1,\"39\":4,\"80\":2,\"82\":1,\"85\":1,\"93\":2,\"172\":1,\"182\":1,\"183\":2,\"184\":1,\"185\":2,\"197\":1,\"214\":4,\"236\":2,\"238\":2}}],[\"getcurrenttransaction\",{\"1\":{\"36\":2,\"39\":1}}],[\"getright\",{\"1\":{\"237\":1}}],[\"getringbuffer\",{\"1\":{\"35\":1}}],[\"getratelimiterconfig\",{\"1\":{\"221\":2}}],[\"getredirecturi\",{\"1\":{\"207\":4}}],[\"getreplenishrate\",{\"1\":{\"197\":1}}],[\"getretry\",{\"1\":{\"172\":1,\"183\":1}}],[\"getremoteaddress\",{\"1\":{\"172\":1,\"183\":1}}],[\"getresourcename\",{\"1\":{\"214\":8}}],[\"getresource\",{\"1\":{\"214\":4}}],[\"getresources\",{\"1\":{\"123\":1,\"139\":1}}],[\"getresponse\",{\"1\":{\"93\":1,\"100\":1,\"185\":1,\"197\":1,\"207\":1,\"214\":5,\"221\":2,\"236\":2}}],[\"getrequest\",{\"1\":{\"92\":3,\"100\":2,\"172\":1,\"180\":1,\"183\":1,\"184\":3,\"207\":1,\"221\":1,\"237\":1}}],[\"getrules\",{\"1\":{\"214\":4}}],[\"getruleconditions\",{\"1\":{\"82\":1}}],[\"getrulename\",{\"1\":{\"82\":2}}],[\"getruntime\",{\"1\":{\"36\":1,\"43\":2}}],[\"getrpctype\",{\"1\":{\"79\":1,\"81\":1,\"82\":1}}],[\"ge\",{\"1\":{\"25\":1}}],[\"goku\",{\"1\":{\"256\":1}}],[\"governing\",{\"1\":{\"254\":1}}],[\"governance\",{\"1\":{\"225\":1}}],[\"go\",{\"1\":{\"46\":1,\"48\":3,\"70\":1,\"78\":1,\"81\":3,\"82\":1,\"85\":1,\"92\":2,\"100\":1,\"106\":1,\"164\":4,\"221\":1,\"290\":1,\"308\":1,\"319\":1}}],[\"google\",{\"1\":{\"40\":5,\"322\":1}}],[\"good\",{\"1\":{\"8\":1,\"46\":1,\"98\":1,\"99\":1,\"101\":1,\"247\":1,\"286\":1,\"288\":1,\"321\":1}}],[\"goes\",{\"1\":{\"31\":1,\"33\":2,\"93\":1,\"105\":1,\"179\":1}}],[\"goal\",{\"0\":{\"15\":1},\"1\":{\"275\":1,\"283\":1}}],[\"ucloud\",{\"1\":{\"322\":1}}],[\"ui\",{\"0\":{\"262\":1},\"1\":{\"260\":1,\"274\":1}}],[\"utf8mb4\",{\"1\":{\"226\":20}}],[\"utility\",{\"1\":{\"289\":1}}],[\"utilize\",{\"1\":{\"38\":1,\"131\":1}}],[\"util\",{\"1\":{\"35\":5,\"36\":4,\"40\":2,\"123\":1,\"127\":1}}],[\"u\",{\"1\":{\"219\":1,\"244\":1}}],[\"ultimately\",{\"1\":{\"212\":2}}],[\"uriutils\",{\"1\":{\"207\":1,\"214\":1,\"221\":1}}],[\"uri\",{\"1\":{\"70\":4,\"79\":3,\"80\":3,\"81\":3,\"82\":1,\"92\":2,\"184\":1,\"204\":1,\"207\":2,\"218\":1,\"221\":4,\"328\":1}}],[\"url=\",{\"1\":{\"314\":1}}],[\"urlencoderutil\",{\"1\":{\"292\":1}}],[\"urlencoder\",{\"1\":{\"292\":1}}],[\"urlencoded\",{\"1\":{\"105\":1,\"260\":1}}],[\"urlinputwithmethod\",{\"1\":{\"262\":1}}],[\"urlpath\",{\"1\":{\"61\":1,\"64\":6,\"92\":2,\"184\":5}}],[\"urls\",{\"1\":{\"48\":1,\"96\":1,\"117\":1,\"139\":4,\"315\":1}}],[\"url\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"77\":1,\"87\":2,\"92\":2,\"96\":1,\"104\":4,\"112\":2,\"127\":23,\"128\":1,\"129\":2,\"136\":2,\"139\":6,\"154\":2,\"156\":1,\"164\":2,\"166\":1,\"172\":3,\"175\":1,\"176\":9,\"178\":1,\"183\":6,\"184\":3,\"201\":1,\"260\":3,\"262\":1,\"280\":1,\"328\":2,\"329\":1}}],[\"uploadplatform\",{\"1\":{\"328\":2}}],[\"uploadimage\",{\"1\":{\"328\":1}}],[\"uploading\",{\"0\":{\"328\":1},\"1\":{\"312\":1,\"322\":2}}],[\"upload2\",{\"1\":{\"328\":2}}],[\"upload\",{\"1\":{\"310\":1,\"328\":21,\"329\":1}}],[\"uploaded\",{\"1\":{\"42\":1,\"328\":1}}],[\"uphold\",{\"1\":{\"282\":1,\"295\":1}}],[\"upgrading\",{\"1\":{\"280\":1}}],[\"upgraded\",{\"1\":{\"275\":2,\"278\":1}}],[\"upgrade\",{\"1\":{\"180\":4,\"290\":2}}],[\"uppercase\",{\"1\":{\"294\":1}}],[\"upper\",{\"1\":{\"84\":1,\"213\":2,\"214\":1}}],[\"upstreamcachemanager\",{\"1\":{\"87\":1,\"172\":1,\"173\":1,\"174\":1,\"183\":1}}],[\"upstreamcheckutils\",{\"1\":{\"175\":1,\"176\":1}}],[\"upstreamcheckservice\",{\"1\":{\"79\":1,\"80\":1,\"81\":2}}],[\"upstreamcheck\",{\"1\":{\"79\":1,\"81\":1}}],[\"upstreamlist\",{\"1\":{\"87\":2,\"89\":2,\"90\":6,\"91\":5,\"120\":3,\"172\":2,\"175\":3,\"177\":10,\"183\":3}}],[\"upstreamhost\",{\"1\":{\"81\":1}}],[\"upstreamurl\",{\"1\":{\"81\":2}}],[\"upstream\",{\"1\":{\"79\":3,\"81\":4,\"87\":1,\"91\":4,\"173\":10,\"174\":7,\"175\":6,\"176\":2,\"183\":2,\"212\":1}}],[\"updating\",{\"1\":{\"48\":2,\"99\":2,\"101\":1,\"104\":1}}],[\"updaterulemap\",{\"1\":{\"165\":3,\"166\":1}}],[\"updaterulecache\",{\"1\":{\"48\":1}}],[\"updatemetadatamap\",{\"1\":{\"164\":1}}],[\"updatemetadatacache\",{\"1\":{\"48\":1}}],[\"updatecacheifneed\",{\"1\":{\"104\":1}}],[\"updatecachewithjson\",{\"1\":{\"104\":2}}],[\"updatecache\",{\"1\":{\"97\":2}}],[\"updatelock\",{\"1\":{\"91\":3}}],[\"updatepluginmap\",{\"1\":{\"166\":2}}],[\"updateplugin\",{\"1\":{\"109\":1}}],[\"updateplugincache\",{\"1\":{\"48\":1,\"97\":2}}],[\"updateparticipant\",{\"1\":{\"39\":1}}],[\"updateappauthcache\",{\"1\":{\"48\":1}}],[\"updates\",{\"1\":{\"97\":1,\"104\":1,\"165\":1,\"173\":1}}],[\"updateselectorcache\",{\"1\":{\"48\":1}}],[\"updateselective\",{\"1\":{\"48\":1,\"79\":1,\"81\":1,\"109\":1}}],[\"updatestatus\",{\"1\":{\"36\":1}}],[\"updated`\",{\"1\":{\"226\":1}}],[\"updated\",{\"1\":{\"31\":1,\"32\":1,\"48\":8,\"82\":1,\"97\":1,\"99\":1,\"101\":1,\"104\":7,\"160\":1,\"165\":1,\"175\":1,\"176\":1,\"178\":1,\"217\":1,\"298\":1}}],[\"update\",{\"0\":{\"300\":1},\"1\":{\"6\":1,\"48\":6,\"79\":3,\"81\":5,\"97\":1,\"98\":1,\"99\":2,\"101\":1,\"104\":4,\"109\":4,\"110\":4,\"114\":1,\"117\":1,\"118\":2,\"119\":1,\"162\":3,\"165\":2,\"175\":2,\"214\":2,\"226\":2,\"250\":1,\"308\":2,\"319\":2}}],[\"up\",{\"0\":{\"83\":1,\"101\":1,\"117\":1,\"167\":1,\"178\":1,\"222\":1,\"243\":1},\"1\":{\"16\":1,\"28\":1,\"72\":1,\"83\":1,\"92\":1,\"214\":6,\"224\":1,\"269\":1}}],[\"unnecessary\",{\"1\":{\"268\":1}}],[\"unnamed\",{\"1\":{\"213\":1}}],[\"unpredictable\",{\"1\":{\"210\":1}}],[\"unmanageable\",{\"1\":{\"210\":1}}],[\"unmodifiablelist\",{\"1\":{\"111\":1,\"156\":1,\"165\":1,\"207\":1}}],[\"unavailable\",{\"1\":{\"210\":1}}],[\"unavailability\",{\"1\":{\"210\":1}}],[\"unsafebytearrayinputstream\",{\"1\":{\"242\":2}}],[\"unstable\",{\"1\":{\"210\":1,\"212\":2}}],[\"unskipped\",{\"1\":{\"179\":1}}],[\"unveil\",{\"1\":{\"185\":1}}],[\"uncle\",{\"1\":{\"256\":1}}],[\"unconditionally\",{\"1\":{\"254\":1}}],[\"uncacheruledata\",{\"1\":{\"162\":1}}],[\"unchecked\",{\"1\":{\"111\":1,\"113\":1,\"156\":1,\"165\":1}}],[\"unchanged\",{\"1\":{\"89\":1}}],[\"unexpected\",{\"1\":{\"97\":1,\"111\":1,\"113\":1,\"156\":1,\"165\":1}}],[\"until\",{\"1\":{\"91\":1,\"211\":2}}],[\"unknown\",{\"1\":{\"89\":1,\"155\":1}}],[\"unicode\",{\"1\":{\"226\":10}}],[\"uniform\",{\"1\":{\"89\":1,\"214\":3}}],[\"unified\",{\"1\":{\"69\":1,\"128\":1,\"308\":2,\"319\":2}}],[\"uniquekeyset\",{\"1\":{\"293\":1}}],[\"unique\",{\"1\":{\"85\":2,\"87\":1,\"127\":1,\"226\":1}}],[\"unit\",{\"1\":{\"22\":1,\"43\":2,\"212\":3,\"213\":5}}],[\"unity\",{\"1\":{\"15\":1}}],[\"unless\",{\"1\":{\"31\":1}}],[\"unreasonable\",{\"1\":{\"29\":1}}],[\"underlying\",{\"1\":{\"272\":1}}],[\"understood\",{\"1\":{\"71\":1,\"100\":1,\"101\":1,\"139\":2,\"179\":3,\"184\":1,\"211\":1,\"212\":1,\"214\":1}}],[\"understanding\",{\"0\":{\"189\":1},\"1\":{\"97\":1,\"130\":1,\"179\":1,\"200\":1}}],[\"understand\",{\"1\":{\"32\":1,\"39\":1,\"48\":2,\"123\":1,\"128\":1,\"129\":1,\"133\":1,\"139\":1,\"180\":1,\"184\":1,\"200\":1,\"207\":2,\"211\":1,\"221\":1,\"321\":1}}],[\"undergo\",{\"1\":{\"31\":1}}],[\"under\",{\"0\":{\"316\":1},\"1\":{\"6\":1,\"29\":1,\"38\":1,\"72\":1,\"74\":1,\"78\":1,\"82\":1,\"118\":2,\"119\":3,\"177\":2,\"179\":1,\"182\":1,\"183\":1,\"214\":1,\"280\":1,\"284\":1,\"287\":1}}],[\"us3\",{\"1\":{\"322\":1}}],[\"uss\",{\"1\":{\"322\":1}}],[\"usability\",{\"1\":{\"217\":1}}],[\"usage\",{\"0\":{\"40\":1,\"125\":1,\"143\":1,\"298\":1},\"1\":{\"8\":1,\"124\":1}}],[\"usr\",{\"1\":{\"155\":1}}],[\"usually\",{\"1\":{\"231\":1}}],[\"usual\",{\"1\":{\"48\":1,\"210\":1,\"211\":1,\"212\":1}}],[\"using\",{\"0\":{\"35\":1,\"159\":1,\"232\":1,\"233\":1,\"299\":1},\"1\":{\"29\":1,\"33\":8,\"36\":1,\"46\":1,\"48\":4,\"65\":1,\"113\":1,\"122\":1,\"130\":1,\"155\":2,\"164\":1,\"173\":2,\"206\":1,\"224\":2,\"226\":1,\"237\":1,\"242\":4,\"268\":1,\"280\":1,\"285\":1,\"306\":1,\"309\":1,\"316\":2,\"320\":1,\"328\":1}}],[\"useless\",{\"1\":{\"105\":2}}],[\"used\",{\"0\":{\"232\":1,\"300\":1},\"1\":{\"40\":1,\"48\":6,\"78\":1,\"85\":1,\"86\":2,\"90\":1,\"99\":1,\"100\":4,\"101\":2,\"104\":2,\"112\":3,\"113\":1,\"119\":2,\"123\":1,\"124\":2,\"129\":2,\"131\":1,\"139\":1,\"141\":1,\"142\":1,\"156\":2,\"177\":1,\"182\":1,\"193\":1,\"197\":1,\"213\":1,\"214\":2,\"222\":1,\"225\":1,\"226\":1,\"231\":2,\"242\":2,\"256\":1,\"280\":1,\"317\":1,\"324\":2,\"328\":1,\"329\":1}}],[\"useragentutil\",{\"1\":{\"293\":1}}],[\"userdto\",{\"1\":{\"220\":7}}],[\"userid\",{\"1\":{\"65\":2,\"220\":3}}],[\"userid=10\",{\"1\":{\"179\":1,\"193\":1}}],[\"userid=1\",{\"1\":{\"60\":1,\"61\":2,\"63\":1,\"64\":7,\"65\":2,\"219\":1,\"220\":1}}],[\"users\",{\"0\":{\"43\":1,\"44\":1,\"45\":1,\"305\":1},\"1\":{\"42\":1,\"46\":3,\"48\":1,\"155\":1,\"209\":1,\"212\":1,\"214\":1,\"219\":1,\"254\":1,\"276\":2,\"277\":1,\"280\":1,\"285\":1,\"288\":1,\"290\":1,\"303\":1,\"304\":1,\"305\":4,\"306\":2,\"321\":6}}],[\"user\",{\"0\":{\"270\":1,\"277\":1},\"1\":{\"35\":1,\"56\":2,\"77\":1,\"83\":1,\"106\":1,\"127\":2,\"129\":2,\"142\":1,\"155\":1,\"189\":2,\"197\":1,\"205\":1,\"280\":3,\"290\":2,\"299\":1,\"305\":1,\"312\":1,\"314\":1,\"316\":1}}],[\"username=\",{\"1\":{\"314\":1}}],[\"username\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"280\":1,\"314\":1}}],[\"useunicode=true\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"280\":1,\"314\":1}}],[\"usessl=false\",{\"1\":{\"314\":1}}],[\"uses\",{\"1\":{\"29\":1,\"84\":1,\"100\":1,\"112\":1,\"114\":1,\"169\":1,\"209\":2,\"213\":1,\"214\":1,\"217\":1,\"221\":1,\"230\":1,\"232\":1,\"292\":1,\"305\":1,\"317\":1,\"328\":1}}],[\"use\",{\"0\":{\"39\":1,\"42\":1,\"67\":1,\"72\":1,\"153\":1,\"188\":1,\"190\":1},\"1\":{\"9\":1,\"40\":2,\"48\":2,\"56\":1,\"57\":1,\"65\":1,\"72\":1,\"78\":1,\"82\":1,\"83\":1,\"86\":2,\"89\":1,\"112\":1,\"116\":1,\"117\":2,\"120\":1,\"121\":2,\"122\":1,\"124\":1,\"127\":1,\"130\":1,\"131\":2,\"154\":1,\"155\":1,\"156\":2,\"161\":1,\"164\":1,\"166\":1,\"176\":1,\"181\":1,\"183\":1,\"200\":1,\"201\":2,\"209\":2,\"212\":3,\"214\":1,\"219\":1,\"221\":1,\"240\":2,\"242\":1,\"274\":1,\"275\":1,\"276\":3,\"280\":3,\"281\":1,\"283\":2,\"284\":1,\"285\":2,\"288\":1,\"292\":1,\"299\":1,\"304\":1,\"305\":1,\"307\":1,\"309\":1,\"315\":1,\"316\":5,\"318\":1,\"320\":1,\"322\":1,\"325\":1,\"326\":2,\"328\":1,\"329\":1}}],[\"us\",{\"0\":{\"10\":1},\"1\":{\"5\":1,\"28\":1,\"101\":1,\"110\":1,\"184\":1,\"253\":1,\"282\":1,\"295\":2}}],[\"rfc3986\",{\"1\":{\"292\":1}}],[\"rps\",{\"1\":{\"219\":3}}],[\"rpcs\",{\"1\":{\"274\":1}}],[\"rpcinvocation\",{\"1\":{\"242\":6}}],[\"rpcexception\",{\"1\":{\"241\":1,\"242\":6}}],[\"rpccontext\",{\"1\":{\"237\":1,\"242\":1}}],[\"rpctypes\",{\"1\":{\"180\":1}}],[\"rpctypeenum\",{\"1\":{\"80\":4,\"82\":5}}],[\"rpctype\",{\"1\":{\"80\":5,\"82\":9,\"171\":1,\"180\":6}}],[\"rpc\",{\"0\":{\"30\":1,\"46\":1,\"241\":1,\"269\":1,\"270\":1,\"279\":1},\"1\":{\"4\":1,\"25\":1,\"29\":3,\"30\":2,\"33\":2,\"34\":1,\"39\":1,\"40\":1,\"43\":1,\"82\":8,\"180\":1,\"185\":2,\"225\":1,\"226\":4,\"237\":2,\"238\":1,\"274\":3,\"275\":1,\"277\":3,\"280\":2,\"281\":1,\"283\":1,\"284\":2,\"285\":1,\"288\":1,\"308\":1}}],[\"rt\",{\"1\":{\"214\":1}}],[\"rs\",{\"1\":{\"129\":6}}],[\"rkey\",{\"1\":{\"91\":3}}],[\"runs\",{\"1\":{\"214\":1}}],[\"runner\",{\"1\":{\"156\":2}}],[\"runnable\",{\"1\":{\"100\":5,\"105\":1}}],[\"running\",{\"1\":{\"57\":1,\"65\":2,\"72\":1,\"104\":1,\"105\":1,\"164\":1}}],[\"run\",{\"1\":{\"48\":1,\"56\":1,\"62\":1,\"72\":1,\"100\":6,\"105\":2,\"122\":7,\"123\":1,\"126\":1,\"156\":3,\"164\":2,\"221\":8,\"225\":1,\"254\":1,\"327\":1}}],[\"runtimeexception\",{\"1\":{\"126\":1}}],[\"runtime\",{\"1\":{\"36\":1,\"38\":1,\"43\":2,\"121\":1,\"275\":1}}],[\"rulelog\",{\"1\":{\"182\":2}}],[\"rulemap\",{\"1\":{\"165\":1}}],[\"rulemapper\",{\"1\":{\"82\":2}}],[\"ruler\",{\"1\":{\"146\":1}}],[\"ruleparentpath\",{\"1\":{\"98\":2}}],[\"ruleconditiondo\",{\"1\":{\"82\":1}}],[\"ruleconditiondto\",{\"1\":{\"82\":9}}],[\"ruleconditionmapper\",{\"1\":{\"82\":1}}],[\"ruleconditions\",{\"1\":{\"82\":3}}],[\"ruledatahandler\",{\"1\":{\"117\":1,\"118\":1}}],[\"ruledatalist\",{\"1\":{\"113\":2,\"156\":2}}],[\"ruledatarefresh\",{\"1\":{\"104\":1}}],[\"ruledata\",{\"1\":{\"82\":1,\"85\":1,\"87\":1,\"118\":5,\"162\":4,\"172\":2,\"182\":1,\"183\":1,\"197\":1,\"207\":1,\"214\":18,\"221\":3,\"236\":1}}],[\"ruledto\",{\"1\":{\"82\":11}}],[\"ruledo\",{\"1\":{\"82\":10}}],[\"rulehandle>\",{\"1\":{\"82\":2}}],[\"rulehandle>>\",{\"1\":{\"82\":1}}],[\"rulehandlefactory\",{\"1\":{\"82\":3}}],[\"rulehandle\",{\"1\":{\"82\":12,\"87\":2,\"120\":1,\"172\":4,\"183\":4}}],[\"rulename\",{\"1\":{\"82\":2}}],[\"rule\",{\"0\":{\"71\":1,\"82\":1},\"1\":{\"48\":4,\"69\":3,\"72\":1,\"74\":1,\"82\":14,\"83\":3,\"85\":13,\"87\":2,\"90\":1,\"97\":1,\"104\":2,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"117\":1,\"118\":2,\"156\":1,\"157\":1,\"159\":1,\"162\":1,\"165\":17,\"166\":1,\"171\":1,\"172\":10,\"182\":15,\"183\":6,\"185\":1,\"192\":2,\"197\":3,\"198\":2,\"199\":1,\"200\":2,\"202\":2,\"205\":1,\"207\":3,\"211\":1,\"214\":18,\"221\":8,\"236\":1,\"270\":1,\"286\":1}}],[\"ruleserviceimpl\",{\"1\":{\"82\":1}}],[\"ruleservice\",{\"1\":{\"82\":1,\"156\":1}}],[\"rules\",{\"0\":{\"192\":1},\"1\":{\"48\":2,\"69\":2,\"71\":1,\"82\":1,\"85\":6,\"162\":1,\"171\":1,\"172\":5,\"179\":1,\"182\":7,\"185\":2,\"197\":1,\"206\":1,\"212\":1,\"214\":2,\"254\":1,\"305\":1,\"317\":1}}],[\"r\",{\"1\":{\"35\":2,\"214\":8}}],[\"rising\",{\"1\":{\"308\":1,\"319\":1}}],[\"ribbon\",{\"1\":{\"270\":1}}],[\"rich\",{\"1\":{\"169\":1,\"302\":1}}],[\"ringbuffer<hmilytransactionevent>\",{\"1\":{\"35\":1}}],[\"ringbuffer\",{\"1\":{\"35\":3}}],[\"right\",{\"0\":{\"255\":1},\"1\":{\"32\":1,\"214\":1}}],[\"rights\",{\"0\":{\"254\":1},\"1\":{\"7\":1,\"254\":1}}],[\"raincat\",{\"1\":{\"321\":1}}],[\"raised\",{\"1\":{\"290\":1}}],[\"rar\",{\"1\":{\"294\":1}}],[\"rare\",{\"1\":{\"32\":1,\"37\":1,\"38\":1}}],[\"rarely\",{\"1\":{\"31\":1}}],[\"radical\",{\"1\":{\"290\":1}}],[\"rapid\",{\"1\":{\"283\":1}}],[\"ratio\",{\"1\":{\"213\":1,\"214\":1}}],[\"rate\",{\"1\":{\"179\":1,\"187\":1,\"189\":3,\"192\":2,\"193\":1,\"195\":2,\"197\":1,\"200\":7,\"214\":2,\"217\":1,\"218\":1,\"219\":2,\"303\":1,\"309\":1,\"316\":1,\"317\":1,\"320\":1}}],[\"ratelimiteroperator\",{\"1\":{\"221\":2}}],[\"ratelimiterexecutor\",{\"1\":{\"221\":5}}],[\"ratelimiter<\",{\"1\":{\"218\":1,\"316\":1}}],[\"ratelimiterresponse\",{\"1\":{\"197\":5}}],[\"ratelimiterhandle\",{\"1\":{\"197\":2}}],[\"ratelimiterconfig\",{\"1\":{\"195\":9}}],[\"ratelimiterplugin\",{\"1\":{\"189\":2,\"195\":1,\"197\":1}}],[\"ratelimiter\",{\"0\":{\"186\":1},\"1\":{\"87\":2,\"179\":1,\"197\":1,\"221\":11,\"316\":3}}],[\"range\",{\"1\":{\"213\":1,\"217\":1}}],[\"randomutils\",{\"1\":{\"220\":1}}],[\"randomized\",{\"1\":{\"177\":1}}],[\"randomize\",{\"1\":{\"90\":1,\"177\":3}}],[\"randomly\",{\"1\":{\"90\":1}}],[\"randomloadbalance\",{\"0\":{\"90\":1},\"1\":{\"120\":1,\"177\":2}}],[\"random\",{\"1\":{\"82\":1,\"88\":1,\"90\":6,\"135\":1,\"136\":1,\"137\":1,\"177\":12,\"210\":1}}],[\"ranked\",{\"1\":{\"33\":2}}],[\"room\",{\"1\":{\"286\":1}}],[\"rootpath\",{\"1\":{\"33\":1,\"46\":1}}],[\"root\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"207\":1,\"280\":1}}],[\"robin\",{\"1\":{\"177\":1}}],[\"role\",{\"1\":{\"129\":1,\"156\":2,\"179\":2,\"181\":1,\"182\":2,\"200\":1,\"300\":1,\"328\":1}}],[\"rollbackfor\",{\"1\":{\"109\":1,\"165\":1}}],[\"rollback\",{\"1\":{\"30\":5,\"274\":1,\"276\":1,\"288\":1}}],[\"roughly\",{\"1\":{\"185\":1,\"212\":1}}],[\"rounding\",{\"1\":{\"200\":1}}],[\"round\",{\"1\":{\"177\":1}}],[\"roundrobinloadbalance\",{\"0\":{\"91\":1},\"1\":{\"120\":1}}],[\"router\",{\"1\":{\"156\":1}}],[\"route\",{\"1\":{\"69\":1,\"237\":2}}],[\"routing\",{\"0\":{\"73\":1,\"181\":1},\"1\":{\"69\":1,\"185\":2}}],[\"rows\",{\"1\":{\"109\":1,\"165\":1}}],[\"row\",{\"1\":{\"28\":1,\"82\":2,\"226\":1,\"230\":1}}],[\"rwby\",{\"1\":{\"22\":1}}],[\"renamed\",{\"1\":{\"292\":1}}],[\"rebuild\",{\"1\":{\"292\":1}}],[\"rejection\",{\"1\":{\"214\":3}}],[\"rejecting\",{\"1\":{\"211\":1}}],[\"reject\",{\"1\":{\"211\":1,\"214\":1}}],[\"rejected\",{\"1\":{\"211\":3}}],[\"reused\",{\"1\":{\"124\":1}}],[\"rewritable\",{\"1\":{\"97\":1}}],[\"rewritebatchedstatements=true\",{\"1\":{\"334\":1}}],[\"rewrites\",{\"1\":{\"98\":2}}],[\"rewrite\",{\"1\":{\"87\":2}}],[\"reward\",{\"1\":{\"91\":1}}],[\"rewards\",{\"1\":{\"91\":1}}],[\"regulations\",{\"0\":{\"255\":1}}],[\"regulators\",{\"0\":{\"146\":1}}],[\"regularly\",{\"1\":{\"176\":1}}],[\"regular\",{\"1\":{\"70\":2,\"81\":1,\"299\":1}}],[\"registryconfig\",{\"1\":{\"232\":1}}],[\"registry\",{\"1\":{\"229\":1,\"280\":1}}],[\"registration\",{\"0\":{\"77\":1},\"1\":{\"83\":1,\"106\":1,\"126\":1,\"155\":1,\"183\":1,\"225\":1,\"232\":1,\"312\":1}}],[\"registerdriver\",{\"1\":{\"126\":4}}],[\"registering\",{\"1\":{\"87\":2,\"175\":2}}],[\"registerrule\",{\"1\":{\"82\":2}}],[\"registerselector\",{\"1\":{\"79\":1,\"80\":2,\"81\":1}}],[\"registerspringmvc\",{\"1\":{\"78\":3}}],[\"register\",{\"0\":{\"78\":1},\"1\":{\"77\":2,\"78\":5,\"80\":3,\"82\":4,\"83\":1,\"86\":1,\"106\":1,\"126\":1,\"156\":2,\"161\":1,\"182\":1,\"230\":1,\"305\":1,\"308\":1,\"319\":1}}],[\"registereddrivers\",{\"1\":{\"126\":2,\"127\":1}}],[\"registered\",{\"1\":{\"72\":1,\"82\":1,\"117\":2,\"118\":1,\"127\":1,\"182\":1,\"207\":1}}],[\"registerparticipant\",{\"1\":{\"39\":1}}],[\"regex\",{\"1\":{\"70\":1}}],[\"req\",{\"1\":{\"65\":2}}],[\"requiring\",{\"1\":{\"48\":1}}],[\"requirenonnull\",{\"1\":{\"109\":1,\"123\":1,\"172\":1,\"183\":1,\"207\":1,\"221\":1}}],[\"requires\",{\"1\":{\"48\":1,\"308\":1,\"319\":1}}],[\"requiredargsconstructor\",{\"1\":{\"118\":1}}],[\"required\",{\"1\":{\"38\":1,\"123\":1,\"164\":2,\"197\":1,\"199\":1,\"236\":1,\"251\":1,\"308\":1,\"319\":1}}],[\"requirements\",{\"1\":{\"8\":1,\"35\":1,\"247\":1}}],[\"request更新主要内容如下\",{\"1\":{\"260\":1}}],[\"request是一个类似于\",{\"1\":{\"260\":1}}],[\"requestparam\",{\"1\":{\"220\":1}}],[\"requester\",{\"1\":{\"212\":1}}],[\"requested\",{\"0\":{\"149\":1},\"1\":{\"48\":3,\"99\":1,\"104\":1,\"197\":1,\"200\":3,\"213\":1}}],[\"requesting\",{\"1\":{\"211\":1,\"212\":1,\"226\":1}}],[\"requestmapping\",{\"1\":{\"100\":1,\"109\":1,\"280\":2}}],[\"requestbodyspec\",{\"1\":{\"92\":6,\"184\":7}}],[\"requestbody\",{\"1\":{\"78\":1,\"109\":1}}],[\"requests\",{\"1\":{\"28\":1,\"48\":2,\"65\":4,\"69\":3,\"72\":1,\"84\":1,\"87\":2,\"100\":1,\"101\":3,\"141\":1,\"171\":1,\"177\":1,\"179\":2,\"187\":1,\"189\":3,\"197\":3,\"207\":1,\"210\":2,\"211\":6,\"212\":7,\"213\":8,\"214\":9,\"218\":1,\"219\":1,\"220\":3,\"225\":1,\"308\":1,\"319\":1}}],[\"request\",{\"0\":{\"61\":1,\"179\":1,\"184\":1,\"242\":1,\"259\":1},\"1\":{\"22\":1,\"61\":2,\"64\":6,\"70\":4,\"81\":1,\"85\":4,\"87\":1,\"92\":9,\"99\":2,\"100\":11,\"101\":5,\"104\":3,\"105\":6,\"108\":1,\"151\":3,\"155\":2,\"171\":2,\"172\":2,\"179\":7,\"180\":3,\"182\":1,\"184\":8,\"185\":4,\"199\":1,\"201\":1,\"202\":1,\"205\":1,\"207\":5,\"210\":3,\"211\":9,\"212\":2,\"213\":4,\"214\":11,\"217\":1,\"221\":3,\"226\":1,\"235\":2,\"240\":2,\"242\":5,\"260\":2,\"308\":2,\"309\":1,\"317\":1,\"319\":2,\"320\":1,\"328\":3}}],[\"reverse\",{\"1\":{\"288\":1}}],[\"revert\",{\"1\":{\"287\":1}}],[\"revealed\",{\"1\":{\"48\":1}}],[\"review\",{\"0\":{\"187\":1},\"1\":{\"6\":1,\"172\":1,\"179\":1,\"286\":1}}],[\"redirecthandle\",{\"1\":{\"207\":8}}],[\"redirectplugin\",{\"1\":{\"207\":1}}],[\"redirection\",{\"1\":{\"204\":2}}],[\"redirect<\",{\"1\":{\"203\":1}}],[\"redirected\",{\"1\":{\"202\":1}}],[\"redirectmaven\",{\"1\":{\"202\":1}}],[\"redirecturl\",{\"1\":{\"201\":2}}],[\"redirect\",{\"0\":{\"201\":1,\"205\":1},\"1\":{\"201\":2,\"202\":1,\"204\":1,\"205\":1,\"207\":5}}],[\"redisratelimiter\",{\"1\":{\"197\":3}}],[\"redistemplate\",{\"1\":{\"195\":1}}],[\"redisserializationcontext\",{\"1\":{\"195\":1}}],[\"redisserializationcontext<string\",{\"1\":{\"195\":1}}],[\"redisserializer<string>\",{\"1\":{\"195\":1}}],[\"redis\",{\"0\":{\"195\":2},\"1\":{\"33\":9,\"34\":1,\"43\":1,\"46\":1,\"191\":3,\"195\":4,\"197\":2,\"198\":1,\"200\":5,\"274\":1,\"284\":1,\"285\":1}}],[\"redundant\",{\"1\":{\"180\":1,\"211\":1,\"214\":2}}],[\"reduces\",{\"1\":{\"91\":1}}],[\"reduce\",{\"1\":{\"91\":1,\"197\":1,\"288\":1,\"292\":1}}],[\"reducing\",{\"1\":{\"91\":1}}],[\"red\",{\"1\":{\"48\":1}}],[\"refactoring\",{\"0\":{\"275\":1},\"1\":{\"290\":2}}],[\"refactored\",{\"1\":{\"272\":1}}],[\"reflectutil\",{\"1\":{\"294\":1}}],[\"reflectutils\",{\"1\":{\"242\":1}}],[\"reflect\",{\"1\":{\"139\":1}}],[\"reflections\",{\"1\":{\"124\":1}}],[\"reflection\",{\"1\":{\"122\":1,\"123\":2,\"124\":2,\"127\":1,\"234\":1,\"242\":2}}],[\"reflected\",{\"1\":{\"48\":1,\"131\":1}}],[\"refreshed\",{\"1\":{\"200\":4,\"218\":1,\"219\":2}}],[\"refreshplugindataall\",{\"1\":{\"104\":2}}],[\"refresh\",{\"1\":{\"48\":3,\"104\":12,\"110\":3,\"117\":1,\"118\":2,\"156\":2,\"219\":1,\"275\":1,\"287\":1}}],[\"refreshlocalcache\",{\"1\":{\"48\":2}}],[\"refreshing\",{\"1\":{\"48\":2,\"218\":1,\"219\":2}}],[\"referring\",{\"1\":{\"131\":1,\"182\":1}}],[\"referenceconfig<>\",{\"1\":{\"232\":1}}],[\"referenceconfig<genericservice>\",{\"1\":{\"232\":1,\"237\":1}}],[\"references\",{\"1\":{\"179\":1,\"248\":1}}],[\"reference\",{\"0\":{\"208\":1,\"244\":1},\"1\":{\"130\":1,\"179\":1,\"217\":2,\"224\":1,\"232\":6,\"233\":1,\"237\":7,\"242\":1,\"270\":1}}],[\"refers\",{\"1\":{\"68\":1,\"70\":4,\"104\":1,\"118\":1,\"180\":1,\"213\":3}}],[\"refer\",{\"1\":{\"43\":1,\"164\":1,\"280\":1,\"315\":1,\"326\":1}}],[\"rely\",{\"1\":{\"164\":1}}],[\"reliability\",{\"1\":{\"288\":1}}],[\"reliable\",{\"1\":{\"4\":1}}],[\"relies\",{\"1\":{\"134\":1,\"162\":1}}],[\"reloaded\",{\"1\":{\"195\":1}}],[\"reload\",{\"1\":{\"123\":2}}],[\"relative\",{\"1\":{\"248\":1,\"294\":1,\"328\":1}}],[\"relationship\",{\"1\":{\"112\":1,\"165\":1,\"179\":1}}],[\"related\",{\"1\":{\"48\":7,\"104\":1,\"113\":1,\"126\":1,\"156\":2,\"179\":3,\"180\":4,\"182\":1,\"191\":1,\"195\":1,\"207\":3,\"213\":1,\"214\":1,\"247\":1,\"293\":1}}],[\"release<\",{\"1\":{\"315\":2}}],[\"release\",{\"0\":{\"251\":1,\"259\":1,\"267\":1,\"268\":1,\"289\":1,\"296\":1,\"297\":1,\"312\":1,\"330\":1},\"1\":{\"101\":1,\"164\":10,\"290\":1,\"308\":1,\"317\":1,\"319\":1}}],[\"releases\",{\"1\":{\"100\":1,\"252\":1}}],[\"released\",{\"0\":{\"267\":1,\"268\":1,\"272\":1,\"289\":1,\"296\":1,\"297\":1},\"1\":{\"100\":1,\"101\":2,\"165\":1,\"281\":1,\"287\":1,\"288\":1,\"290\":1}}],[\"relevant\",{\"1\":{\"86\":1,\"109\":1,\"217\":1,\"249\":1,\"254\":1,\"298\":1}}],[\"reminded\",{\"1\":{\"199\":1}}],[\"remains\",{\"1\":{\"218\":1}}],[\"remaining\",{\"1\":{\"92\":1,\"198\":1,\"200\":2}}],[\"remain\",{\"1\":{\"89\":1}}],[\"removing\",{\"1\":{\"175\":1}}],[\"removes\",{\"1\":{\"284\":1}}],[\"removeclass\",{\"1\":{\"238\":1}}],[\"removerule\",{\"1\":{\"214\":1}}],[\"removeall\",{\"1\":{\"165\":1}}],[\"removeend\",{\"1\":{\"104\":1}}],[\"removed\",{\"1\":{\"101\":1,\"293\":1}}],[\"removeif\",{\"1\":{\"91\":1}}],[\"removebykey\",{\"1\":{\"40\":1}}],[\"remove\",{\"1\":{\"36\":1,\"40\":1,\"74\":1,\"92\":1,\"100\":6,\"114\":2,\"175\":1,\"184\":1,\"214\":1,\"268\":1,\"275\":1,\"312\":2}}],[\"remote\",{\"1\":{\"39\":1,\"48\":1,\"241\":2,\"280\":2}}],[\"remember\",{\"1\":{\"29\":1,\"100\":1}}],[\"repaired\",{\"1\":{\"210\":1}}],[\"repeat\",{\"1\":{\"197\":1}}],[\"repeatedly\",{\"1\":{\"104\":1,\"286\":1}}],[\"repeated\",{\"1\":{\"99\":1,\"101\":1}}],[\"represented\",{\"1\":{\"231\":1}}],[\"represent\",{\"1\":{\"182\":1}}],[\"representing\",{\"1\":{\"147\":1}}],[\"represents\",{\"1\":{\"43\":1,\"197\":1}}],[\"replenishrate\",{\"1\":{\"197\":2}}],[\"replace\",{\"1\":{\"179\":2,\"185\":1,\"207\":1,\"293\":1}}],[\"replacement\",{\"1\":{\"121\":1}}],[\"replication\",{\"1\":{\"127\":3}}],[\"report\",{\"0\":{\"283\":1},\"1\":{\"164\":1,\"212\":2,\"214\":3}}],[\"reported\",{\"1\":{\"86\":1,\"164\":1,\"285\":1,\"321\":1}}],[\"repositorysuffix\",{\"1\":{\"43\":1}}],[\"repositorysupportenum\",{\"1\":{\"43\":2}}],[\"repositorysupport\",{\"1\":{\"33\":6,\"43\":3,\"46\":5}}],[\"repository\",{\"0\":{\"51\":1,\"52\":1,\"248\":1,\"249\":1,\"250\":1},\"1\":{\"42\":2,\"46\":1,\"248\":3,\"251\":1,\"252\":1,\"280\":2,\"284\":1}}],[\"reputation\",{\"1\":{\"7\":1}}],[\"ret\",{\"1\":{\"237\":5}}],[\"retries=\",{\"1\":{\"270\":1}}],[\"retries\",{\"1\":{\"183\":1,\"184\":1,\"185\":1}}],[\"retrieve\",{\"1\":{\"105\":2,\"136\":1}}],[\"retrieves\",{\"1\":{\"91\":1}}],[\"retrieved\",{\"1\":{\"43\":1}}],[\"retrywhen\",{\"1\":{\"184\":1}}],[\"retrytimes\",{\"1\":{\"61\":1,\"64\":6,\"105\":3,\"184\":6}}],[\"retry\",{\"1\":{\"33\":2,\"43\":1,\"82\":1,\"172\":4,\"183\":3,\"184\":6,\"214\":1,\"217\":1}}],[\"retrymax\",{\"1\":{\"33\":5,\"43\":2,\"46\":1,\"184\":1,\"280\":1}}],[\"returned\",{\"1\":{\"123\":1,\"179\":1,\"214\":1}}],[\"returning\",{\"1\":{\"87\":1,\"120\":1}}],[\"returns\",{\"0\":{\"239\":1},\"1\":{\"48\":1,\"91\":1,\"132\":1,\"139\":1,\"178\":1,\"185\":2,\"193\":1,\"224\":1,\"294\":1}}],[\"returnvalue\",{\"1\":{\"36\":3}}],[\"return\",{\"1\":{\"35\":1,\"36\":1,\"39\":3,\"40\":9,\"48\":1,\"78\":3,\"79\":2,\"80\":2,\"81\":2,\"82\":4,\"85\":8,\"86\":7,\"87\":1,\"89\":2,\"90\":2,\"91\":2,\"92\":5,\"93\":4,\"97\":2,\"99\":1,\"101\":1,\"104\":4,\"105\":1,\"109\":6,\"112\":7,\"114\":1,\"116\":1,\"117\":2,\"120\":1,\"121\":1,\"122\":1,\"123\":10,\"126\":1,\"127\":4,\"128\":2,\"132\":2,\"135\":1,\"137\":1,\"139\":4,\"147\":1,\"149\":5,\"151\":3,\"156\":7,\"161\":4,\"162\":1,\"165\":2,\"166\":4,\"172\":3,\"173\":1,\"175\":1,\"176\":6,\"177\":5,\"179\":5,\"180\":1,\"182\":6,\"183\":3,\"184\":4,\"185\":5,\"197\":7,\"199\":1,\"200\":1,\"207\":8,\"213\":1,\"214\":13,\"219\":2,\"220\":3,\"221\":9,\"230\":1,\"231\":1,\"234\":4,\"235\":5,\"236\":5,\"237\":2,\"238\":3,\"241\":2,\"242\":5,\"280\":1,\"292\":2,\"306\":3,\"328\":9}}],[\"retain\",{\"1\":{\"7\":1}}],[\"re\",{\"1\":{\"32\":2,\"33\":4,\"46\":3,\"151\":2,\"164\":1,\"195\":1,\"221\":1}}],[\"reactor\",{\"1\":{\"317\":1}}],[\"reaction\",{\"1\":{\"210\":1}}],[\"reactiveredistemplate<>\",{\"1\":{\"195\":1}}],[\"reactiveredistemplate<string\",{\"1\":{\"195\":1}}],[\"reactiveredistemplate\",{\"1\":{\"195\":4,\"197\":1}}],[\"reactive\",{\"1\":{\"22\":1,\"48\":3,\"92\":1,\"221\":1,\"235\":1,\"309\":1,\"320\":1}}],[\"reached\",{\"1\":{\"213\":1,\"214\":1,\"218\":2}}],[\"reaches\",{\"1\":{\"211\":1,\"212\":1,\"214\":2}}],[\"reachable\",{\"1\":{\"176\":4,\"205\":1}}],[\"reasonably\",{\"1\":{\"272\":1}}],[\"reasonable\",{\"0\":{\"284\":1},\"1\":{\"212\":1}}],[\"reason\",{\"1\":{\"123\":1,\"124\":1,\"134\":1,\"179\":1,\"211\":1,\"253\":1}}],[\"reasons\",{\"1\":{\"40\":1}}],[\"really\",{\"1\":{\"321\":1}}],[\"realpath\",{\"1\":{\"162\":3}}],[\"realize\",{\"1\":{\"133\":1,\"169\":1,\"206\":1,\"209\":1,\"242\":1}}],[\"realurl\",{\"1\":{\"87\":2,\"172\":2,\"180\":1,\"183\":3}}],[\"real\",{\"1\":{\"48\":2,\"70\":2,\"81\":1,\"87\":2,\"123\":1,\"183\":3,\"184\":2,\"185\":1,\"199\":1,\"212\":1,\"226\":1}}],[\"reads\",{\"1\":{\"294\":1}}],[\"readobject\",{\"1\":{\"242\":1}}],[\"readdata\",{\"1\":{\"161\":1,\"162\":1}}],[\"read\",{\"0\":{\"35\":1,\"189\":1,\"194\":1},\"1\":{\"16\":1,\"65\":2,\"124\":1,\"139\":1,\"156\":1,\"184\":1,\"192\":1,\"249\":1,\"293\":1,\"322\":1,\"328\":2,\"329\":1}}],[\"reading\",{\"0\":{\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"194\":1},\"1\":{\"14\":1,\"16\":1,\"25\":1,\"161\":1,\"166\":1,\"189\":1,\"199\":1}}],[\"recipes<\",{\"1\":{\"228\":1}}],[\"recycleperiod\",{\"1\":{\"91\":1}}],[\"recognize\",{\"1\":{\"184\":1}}],[\"reconnection\",{\"1\":{\"48\":1}}],[\"reconnect\",{\"1\":{\"48\":1}}],[\"recommendations\",{\"0\":{\"299\":1}}],[\"recommended\",{\"1\":{\"70\":2,\"200\":1,\"217\":1,\"247\":1,\"304\":1}}],[\"recommend\",{\"1\":{\"33\":4}}],[\"recover\",{\"1\":{\"212\":1}}],[\"recoverdelaytime\",{\"1\":{\"33\":3,\"43\":3,\"46\":1,\"280\":1}}],[\"recovers\",{\"1\":{\"31\":1,\"285\":1}}],[\"recovery\",{\"0\":{\"31\":1},\"1\":{\"31\":2,\"33\":4,\"34\":1,\"37\":1,\"43\":1,\"274\":1}}],[\"records\",{\"1\":{\"48\":1,\"198\":1,\"247\":1,\"253\":1,\"328\":1,\"329\":2}}],[\"record\",{\"1\":{\"8\":1,\"164\":2,\"175\":1,\"177\":1,\"198\":1}}],[\"receiving\",{\"1\":{\"117\":1}}],[\"receiveconfiginfo\",{\"1\":{\"166\":1}}],[\"receive\",{\"1\":{\"100\":1,\"213\":1,\"214\":1}}],[\"receives\",{\"1\":{\"92\":1,\"99\":1,\"116\":1,\"117\":1,\"118\":1,\"128\":1,\"253\":1}}],[\"received\",{\"1\":{\"9\":1,\"106\":1,\"112\":4,\"162\":1,\"195\":1,\"256\":1,\"302\":1}}],[\"recently\",{\"0\":{\"287\":1}}],[\"recent\",{\"1\":{\"22\":1}}],[\"resetexception\",{\"1\":{\"322\":1}}],[\"research\",{\"1\":{\"83\":1}}],[\"resilence4j\",{\"1\":{\"217\":1}}],[\"resilience\",{\"0\":{\"218\":1},\"1\":{\"216\":1,\"217\":1,\"221\":1}}],[\"resilience4jplugn\",{\"1\":{\"221\":1}}],[\"resilience4jplugin\",{\"1\":{\"179\":1,\"221\":2}}],[\"resilience4jregistryfactory\",{\"1\":{\"221\":4}}],[\"resilience4jconf\",{\"1\":{\"221\":12}}],[\"resilience4jbuilder\",{\"1\":{\"221\":3}}],[\"resilience4jhandler\",{\"1\":{\"221\":1}}],[\"resilience4jhandle\",{\"1\":{\"219\":35,\"220\":2,\"221\":7}}],[\"resilience4j<\",{\"1\":{\"217\":1}}],[\"resilience4j\",{\"0\":{\"215\":1,\"217\":1,\"221\":1},\"1\":{\"87\":2,\"179\":1,\"216\":2,\"217\":3,\"218\":3,\"221\":2}}],[\"res\",{\"1\":{\"92\":1,\"184\":3}}],[\"respect\",{\"1\":{\"321\":1}}],[\"respective\",{\"1\":{\"86\":1,\"118\":2,\"122\":1}}],[\"respectively\",{\"1\":{\"80\":1,\"82\":1,\"91\":1,\"112\":1,\"213\":1,\"226\":1,\"243\":1}}],[\"responsive\",{\"1\":{\"171\":1,\"184\":2,\"207\":1,\"221\":1,\"309\":1,\"320\":1}}],[\"responsible\",{\"1\":{\"6\":4,\"116\":1,\"128\":1,\"156\":1,\"160\":2,\"165\":1,\"166\":2,\"172\":1,\"173\":2,\"175\":2,\"214\":1,\"234\":2}}],[\"responsibility\",{\"0\":{\"6\":1},\"1\":{\"84\":1,\"210\":1}}],[\"responseplugin\",{\"1\":{\"187\":1}}],[\"response\",{\"1\":{\"92\":2,\"93\":11,\"100\":11,\"101\":3,\"104\":1,\"105\":1,\"164\":2,\"179\":2,\"184\":4,\"185\":9,\"197\":3,\"207\":4,\"211\":1,\"212\":1,\"236\":2,\"237\":1,\"312\":1}}],[\"responses\",{\"1\":{\"87\":1}}],[\"resulting\",{\"1\":{\"210\":1}}],[\"resulthandlers\",{\"1\":{\"207\":2}}],[\"resulthandler\",{\"1\":{\"207\":1}}],[\"resultflux\",{\"1\":{\"197\":2}}],[\"resultenum\",{\"1\":{\"184\":2,\"237\":1}}],[\"results\",{\"0\":{\"239\":1},\"1\":{\"177\":1,\"179\":2,\"184\":1,\"197\":3,\"224\":1,\"306\":2}}],[\"resultset\",{\"1\":{\"129\":2}}],[\"resultlist\",{\"1\":{\"175\":3}}],[\"result\",{\"0\":{\"149\":1,\"185\":1},\"1\":{\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"93\":4,\"104\":3,\"105\":1,\"109\":3,\"114\":2,\"117\":2,\"122\":1,\"175\":3,\"179\":1,\"183\":2,\"184\":4,\"185\":6,\"193\":1,\"197\":2,\"207\":2,\"214\":3,\"234\":2,\"236\":4,\"237\":4,\"238\":8,\"241\":1,\"242\":4,\"306\":2}}],[\"resouce\",{\"1\":{\"280\":1}}],[\"resourcename\",{\"1\":{\"214\":4}}],[\"resources\",{\"1\":{\"139\":1,\"154\":2,\"164\":2,\"210\":1,\"254\":1}}],[\"resource\",{\"1\":{\"43\":1,\"85\":1,\"121\":2,\"122\":1,\"123\":2,\"124\":3,\"126\":1,\"128\":1,\"132\":1,\"135\":2,\"136\":1,\"139\":3,\"164\":1,\"214\":3,\"280\":2}}],[\"resolves\",{\"1\":{\"284\":1}}],[\"resolved\",{\"1\":{\"29\":1,\"268\":1,\"290\":1}}],[\"resolution\",{\"0\":{\"235\":1},\"1\":{\"224\":1}}],[\"restore\",{\"1\":{\"247\":1,\"253\":1}}],[\"restored\",{\"1\":{\"212\":2}}],[\"restricted\",{\"1\":{\"193\":1}}],[\"restriction\",{\"1\":{\"74\":1}}],[\"restclientexception\",{\"1\":{\"104\":1,\"105\":1}}],[\"restcontroller\",{\"1\":{\"100\":1,\"109\":1,\"280\":1,\"328\":1}}],[\"restful\",{\"1\":{\"70\":1,\"260\":4}}],[\"restarted\",{\"1\":{\"154\":1}}],[\"restarts\",{\"1\":{\"81\":1}}],[\"restart\",{\"0\":{\"283\":1},\"1\":{\"48\":2,\"154\":1,\"217\":1,\"300\":1}}],[\"rest\",{\"1\":{\"4\":1}}],[\"blue\",{\"1\":{\"317\":1}}],[\"black\",{\"1\":{\"312\":1,\"317\":1}}],[\"blizzard\",{\"1\":{\"256\":1}}],[\"bloomfilter\",{\"1\":{\"293\":1}}],[\"blob\",{\"1\":{\"130\":1}}],[\"blockexception\",{\"1\":{\"214\":1}}],[\"blocked\",{\"1\":{\"99\":2,\"100\":1,\"101\":1,\"214\":1}}],[\"blocks\",{\"1\":{\"100\":1}}],[\"block\",{\"1\":{\"100\":2,\"210\":1,\"214\":2}}],[\"blockingqueue\",{\"1\":{\"100\":1}}],[\"blocking\",{\"1\":{\"48\":1,\"100\":2,\"101\":5,\"212\":1}}],[\"blockingwaitstrategy\",{\"1\":{\"35\":2}}],[\"blog\",{\"0\":{\"26\":1},\"1\":{\"189\":1,\"244\":1}}],[\"btree\",{\"1\":{\"226\":1}}],[\"bring\",{\"1\":{\"306\":1,\"308\":1,\"319\":1}}],[\"brief\",{\"1\":{\"212\":1}}],[\"briefly\",{\"1\":{\"87\":1,\"209\":1}}],[\"browser\",{\"1\":{\"293\":1}}],[\"brpc\",{\"1\":{\"281\":1,\"288\":1}}],[\"bruce\",{\"1\":{\"256\":1}}],[\"brand\",{\"1\":{\"254\":2}}],[\"branch\",{\"1\":{\"81\":1}}],[\"brain\",{\"1\":{\"121\":1}}],[\"breaker\",{\"1\":{\"212\":2,\"214\":10,\"217\":1,\"218\":7,\"221\":4,\"303\":1,\"309\":1,\"312\":1,\"316\":1,\"317\":1,\"320\":1}}],[\"break\",{\"1\":{\"97\":5,\"104\":1,\"111\":5,\"113\":5,\"118\":4,\"156\":1,\"165\":2}}],[\"breakpoint\",{\"1\":{\"48\":1,\"162\":2,\"164\":1}}],[\"breakpoints\",{\"1\":{\"48\":1}}],[\"b\",{\"1\":{\"57\":4,\"155\":1,\"164\":3,\"317\":1}}],[\"bos\",{\"1\":{\"322\":1}}],[\"bom\",{\"1\":{\"284\":1}}],[\"borrows\",{\"1\":{\"217\":1}}],[\"bottom\",{\"0\":{\"196\":1},\"1\":{\"122\":1,\"214\":1}}],[\"bothering\",{\"1\":{\"164\":1}}],[\"both\",{\"1\":{\"29\":1,\"192\":1,\"308\":1,\"319\":1}}],[\"bodyparamplugin\",{\"1\":{\"179\":1}}],[\"bodyextractors\",{\"1\":{\"93\":1,\"185\":1}}],[\"bodyinserters\",{\"1\":{\"92\":1,\"184\":1}}],[\"body\",{\"1\":{\"92\":2,\"93\":1,\"179\":1,\"184\":1,\"185\":1,\"214\":3,\"236\":8,\"237\":4,\"298\":1,\"305\":1}}],[\"box\",{\"1\":{\"48\":1,\"275\":1}}],[\"boolean\",{\"1\":{\"80\":3,\"82\":2,\"86\":1,\"90\":1,\"104\":6,\"123\":2,\"151\":2,\"156\":1,\"174\":2,\"175\":1,\"176\":3,\"177\":1,\"179\":1,\"197\":1,\"235\":1,\"241\":1,\"329\":2}}],[\"boot<\",{\"1\":{\"315\":2}}],[\"boot\",{\"0\":{\"46\":1},\"1\":{\"34\":1,\"46\":3,\"59\":1,\"86\":3,\"87\":17,\"117\":1,\"144\":1,\"154\":1,\"161\":2,\"164\":2,\"166\":1,\"203\":1,\"218\":1,\"228\":1,\"230\":2,\"274\":1,\"275\":1,\"276\":1,\"279\":1,\"283\":1,\"285\":1,\"315\":4,\"316\":4}}],[\"bootstrapsoul\",{\"1\":{\"164\":1}}],[\"bootstrappom\",{\"1\":{\"86\":1}}],[\"bootstrap\",{\"0\":{\"57\":1,\"114\":1,\"153\":1,\"161\":1,\"162\":1,\"166\":1,\"228\":1,\"314\":1},\"1\":{\"33\":1,\"43\":1,\"48\":12,\"57\":2,\"61\":1,\"64\":1,\"68\":3,\"86\":1,\"106\":3,\"114\":1,\"117\":1,\"154\":3,\"155\":1,\"159\":1,\"161\":3,\"162\":1,\"164\":12,\"166\":2,\"202\":1,\"203\":1,\"218\":1,\"224\":1,\"230\":1,\"314\":1,\"315\":1}}],[\"book\",{\"0\":{\"12\":1,\"13\":1},\"1\":{\"12\":1,\"121\":1}}],[\"boundary\",{\"1\":{\"211\":1}}],[\"bound\",{\"1\":{\"31\":1}}],[\"baidu\",{\"1\":{\"322\":2}}],[\"barservice\",{\"1\":{\"233\":2}}],[\"bad\",{\"1\":{\"93\":1,\"185\":1,\"254\":1}}],[\"basis\",{\"1\":{\"91\":1,\"214\":1}}],[\"basically\",{\"1\":{\"100\":1}}],[\"basic\",{\"0\":{\"247\":1},\"1\":{\"69\":1,\"74\":1,\"84\":1,\"101\":1,\"247\":1,\"275\":1,\"326\":1,\"328\":1}}],[\"base62\",{\"1\":{\"292\":1}}],[\"base58\",{\"1\":{\"292\":1}}],[\"base32\",{\"1\":{\"292\":1,\"293\":1}}],[\"base\",{\"1\":{\"43\":1,\"57\":1,\"61\":2,\"64\":12,\"87\":1,\"118\":1,\"119\":2,\"164\":1,\"277\":1,\"326\":2}}],[\"basedatacache\",{\"1\":{\"85\":3,\"118\":3,\"172\":3,\"182\":4}}],[\"based\",{\"1\":{\"16\":1,\"25\":1,\"33\":1,\"35\":1,\"48\":2,\"70\":4,\"86\":1,\"91\":1,\"100\":1,\"117\":2,\"118\":1,\"133\":1,\"177\":3,\"183\":1,\"185\":3,\"191\":2,\"195\":1,\"199\":1,\"207\":1,\"214\":2,\"217\":1,\"218\":2,\"237\":3,\"242\":1,\"308\":1,\"319\":1,\"321\":1,\"329\":1}}],[\"balancing\",{\"0\":{\"74\":1,\"84\":1,\"88\":1,\"177\":1,\"270\":1},\"1\":{\"69\":1,\"72\":1,\"74\":1,\"87\":3,\"88\":1,\"89\":1,\"120\":1,\"135\":1,\"171\":1,\"172\":4,\"177\":5,\"178\":3,\"183\":2,\"225\":1,\"268\":1,\"270\":1,\"312\":1}}],[\"balancer\",{\"1\":{\"120\":1}}],[\"balance\",{\"0\":{\"62\":1,\"64\":1},\"1\":{\"64\":1,\"308\":1,\"319\":1}}],[\"balanced\",{\"1\":{\"40\":1,\"171\":1}}],[\"backward\",{\"1\":{\"214\":1,\"292\":1}}],[\"backoff\",{\"1\":{\"184\":2}}],[\"back\",{\"0\":{\"308\":1,\"319\":1},\"1\":{\"81\":2,\"86\":1,\"100\":1,\"105\":1,\"113\":2,\"114\":1,\"172\":1,\"179\":1,\"182\":1,\"211\":1,\"212\":2,\"213\":1,\"214\":1,\"253\":1,\"308\":2,\"319\":2}}],[\"backend\",{\"0\":{\"59\":1,\"62\":1},\"1\":{\"48\":3,\"65\":1,\"117\":1,\"230\":1}}],[\"background\",{\"0\":{\"14\":1,\"95\":1,\"103\":1,\"109\":1,\"115\":1,\"116\":1,\"195\":1},\"1\":{\"48\":3,\"68\":1,\"86\":1,\"88\":2,\"96\":2,\"97\":1,\"99\":4,\"100\":2,\"101\":7,\"104\":6,\"105\":8,\"108\":1,\"116\":1,\"117\":1,\"118\":1,\"155\":1,\"160\":1,\"162\":1,\"202\":1,\"229\":1}}],[\"bilibili\",{\"1\":{\"260\":1}}],[\"billion\",{\"1\":{\"4\":1}}],[\"biao\",{\"1\":{\"256\":1}}],[\"bigexcelwriter\",{\"1\":{\"292\":1}}],[\"big\",{\"1\":{\"247\":1}}],[\"biggest\",{\"1\":{\"105\":1,\"317\":1}}],[\"bigger\",{\"1\":{\"15\":2}}],[\"bing\",{\"1\":{\"256\":1}}],[\"bin\",{\"1\":{\"155\":3}}],[\"bind\",{\"1\":{\"29\":1}}],[\"bit\",{\"1\":{\"91\":1,\"200\":1}}],[\"believe\",{\"1\":{\"308\":1,\"319\":1}}],[\"below\",{\"1\":{\"48\":3,\"70\":1,\"164\":1,\"214\":1,\"219\":9,\"269\":1}}],[\"besides\",{\"1\":{\"280\":1}}],[\"best\",{\"1\":{\"32\":1,\"38\":1,\"48\":1}}],[\"bear\",{\"1\":{\"211\":1}}],[\"beancopier\",{\"1\":{\"290\":1,\"292\":1}}],[\"beancreationexception\",{\"1\":{\"164\":1}}],[\"beanname\",{\"1\":{\"207\":1}}],[\"beanfactoryutils\",{\"1\":{\"207\":3}}],[\"beaninstantiationexception\",{\"1\":{\"164\":2}}],[\"beansoftypeincludingancestors\",{\"1\":{\"207\":3}}],[\"beans\",{\"1\":{\"35\":2,\"36\":1,\"86\":2,\"87\":2,\"97\":1,\"112\":1,\"117\":2,\"118\":1,\"156\":1,\"164\":9,\"165\":1,\"207\":2}}],[\"bean\",{\"1\":{\"35\":2,\"36\":2,\"40\":1,\"43\":1,\"77\":1,\"86\":3,\"87\":1,\"97\":2,\"112\":7,\"116\":2,\"117\":3,\"156\":4,\"161\":3,\"164\":2,\"166\":3,\"207\":1,\"241\":2,\"242\":2,\"290\":1,\"292\":1,\"305\":1,\"315\":1}}],[\"bean>\",{\"1\":{\"33\":7,\"43\":2}}],[\"behavior\",{\"1\":{\"142\":1,\"214\":1}}],[\"behind\",{\"1\":{\"69\":1,\"110\":1,\"321\":1}}],[\"beneath\",{\"1\":{\"57\":1,\"164\":1}}],[\"between\",{\"0\":{\"95\":1,\"103\":1,\"115\":1},\"1\":{\"48\":1,\"101\":1,\"105\":1,\"136\":1,\"151\":1,\"177\":1,\"179\":1,\"200\":1,\"211\":1,\"277\":1,\"317\":1}}],[\"betterwp\",{\"1\":{\"256\":1}}],[\"better\",{\"1\":{\"9\":1,\"28\":1,\"133\":1,\"214\":1,\"281\":1}}],[\"beginning\",{\"1\":{\"101\":1,\"201\":1,\"321\":2}}],[\"begin\",{\"1\":{\"36\":1,\"39\":2}}],[\"being\",{\"1\":{\"32\":1,\"81\":1,\"89\":1,\"91\":1,\"100\":1,\"104\":1,\"211\":1}}],[\"before\",{\"0\":{\"32\":1,\"300\":1},\"1\":{\"43\":1,\"48\":1,\"104\":1,\"120\":1,\"123\":2,\"124\":1,\"129\":1,\"179\":1,\"187\":1,\"197\":1,\"207\":1,\"247\":1,\"253\":1,\"254\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"because\",{\"1\":{\"30\":1,\"37\":1,\"40\":1,\"48\":2,\"65\":1,\"81\":1,\"112\":1,\"124\":2,\"164\":1,\"197\":1,\"198\":1,\"281\":1,\"300\":1,\"317\":1}}],[\"becomes\",{\"1\":{\"235\":1}}],[\"become\",{\"1\":{\"9\":1,\"213\":1,\"256\":1,\"308\":1,\"319\":1}}],[\"been\",{\"0\":{\"81\":1},\"1\":{\"29\":1,\"33\":1,\"42\":1,\"46\":1,\"48\":4,\"57\":1,\"80\":1,\"81\":3,\"82\":1,\"87\":1,\"91\":1,\"100\":2,\"104\":1,\"105\":1,\"129\":1,\"164\":1,\"182\":1,\"187\":1,\"193\":1,\"195\":1,\"197\":1,\"200\":1,\"207\":1,\"280\":1,\"288\":1,\"290\":1,\"297\":1,\"298\":1,\"302\":1,\"306\":1,\"311\":2,\"322\":1}}],[\"be\",{\"0\":{\"139\":1},\"1\":{\"8\":4,\"9\":1,\"16\":2,\"33\":5,\"35\":1,\"40\":2,\"48\":14,\"57\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"74\":1,\"77\":1,\"80\":1,\"81\":4,\"84\":1,\"85\":1,\"86\":3,\"91\":5,\"97\":2,\"99\":2,\"100\":3,\"101\":5,\"104\":6,\"105\":3,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"112\":1,\"114\":4,\"116\":1,\"118\":1,\"122\":1,\"123\":7,\"124\":3,\"126\":1,\"129\":2,\"131\":2,\"132\":2,\"139\":2,\"147\":2,\"151\":2,\"154\":1,\"156\":3,\"159\":1,\"160\":1,\"161\":1,\"164\":5,\"165\":1,\"171\":1,\"172\":3,\"174\":1,\"176\":2,\"177\":3,\"178\":1,\"179\":4,\"180\":4,\"182\":6,\"184\":1,\"185\":1,\"189\":1,\"191\":1,\"195\":2,\"197\":1,\"199\":2,\"200\":1,\"202\":1,\"205\":2,\"210\":4,\"211\":4,\"212\":6,\"213\":9,\"214\":7,\"217\":1,\"218\":2,\"219\":1,\"222\":1,\"226\":3,\"231\":1,\"235\":1,\"243\":1,\"247\":5,\"248\":1,\"249\":2,\"251\":1,\"253\":2,\"254\":2,\"256\":3,\"278\":1,\"280\":4,\"281\":2,\"287\":2,\"288\":2,\"290\":3,\"299\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1,\"312\":1,\"317\":2,\"319\":1,\"320\":1,\"321\":3,\"324\":2,\"328\":2,\"329\":1}}],[\"buy\",{\"1\":{\"290\":1}}],[\"buying\",{\"1\":{\"38\":1}}],[\"buddy\",{\"1\":{\"261\":3}}],[\"burden\",{\"1\":{\"290\":1}}],[\"burstcapacity\",{\"1\":{\"197\":2}}],[\"bury\",{\"1\":{\"179\":1}}],[\"bucket\",{\"1\":{\"189\":4,\"191\":3,\"199\":3,\"326\":1}}],[\"bugs\",{\"0\":{\"276\":1,\"285\":1},\"1\":{\"272\":1,\"285\":1,\"286\":1}}],[\"bug\",{\"0\":{\"131\":1},\"1\":{\"210\":1,\"268\":1,\"276\":1,\"285\":3,\"290\":1,\"297\":1,\"312\":3}}],[\"busy\",{\"1\":{\"98\":1}}],[\"business\",{\"1\":{\"69\":1,\"80\":1,\"82\":1,\"106\":1,\"210\":4,\"212\":1,\"274\":2,\"306\":2,\"308\":1,\"319\":1}}],[\"built\",{\"1\":{\"37\":1,\"48\":2,\"82\":1,\"121\":1,\"122\":1,\"155\":1,\"169\":1}}],[\"building\",{\"0\":{\"286\":1},\"1\":{\"283\":1}}],[\"buildparameter\",{\"1\":{\"237\":1}}],[\"buildparamsmap\",{\"1\":{\"151\":1}}],[\"buildplugindo\",{\"1\":{\"109\":1}}],[\"buildpluginpath\",{\"1\":{\"98\":1,\"161\":1}}],[\"buildmediatype\",{\"1\":{\"92\":1,\"184\":1}}],[\"buildrealpath\",{\"1\":{\"162\":1}}],[\"buildrealurl\",{\"1\":{\"87\":1,\"172\":1,\"183\":1}}],[\"buildruleparentpath\",{\"1\":{\"98\":1}}],[\"buildruleconditiondo\",{\"1\":{\"82\":1}}],[\"buildruledo\",{\"1\":{\"82\":1}}],[\"builddomain\",{\"1\":{\"87\":1,\"172\":1,\"183\":1}}],[\"builddivideupstream\",{\"1\":{\"79\":1,\"80\":1,\"81\":1}}],[\"buildspringcloudselectorhandle\",{\"1\":{\"80\":1}}],[\"buildselectorparentpath\",{\"1\":{\"98\":1}}],[\"buildselectorconditiondo\",{\"1\":{\"48\":2,\"80\":1}}],[\"buildselectordo\",{\"1\":{\"48\":1,\"80\":1}}],[\"builder\",{\"1\":{\"80\":1,\"82\":2,\"180\":2}}],[\"buildbyname\",{\"1\":{\"79\":1,\"81\":1}}],[\"buildtcctransaction\",{\"1\":{\"39\":1}}],[\"build\",{\"0\":{\"315\":1},\"1\":{\"2\":1,\"4\":1,\"39\":1,\"40\":1,\"80\":1,\"82\":2,\"92\":3,\"105\":1,\"117\":2,\"180\":2,\"183\":1,\"195\":1,\"207\":2,\"221\":6,\"285\":1,\"293\":1}}],[\"buffer\",{\"1\":{\"33\":2,\"35\":1,\"218\":1}}],[\"buffersize\",{\"1\":{\"33\":2,\"35\":4,\"43\":2,\"280\":1}}],[\"but\",{\"1\":{\"7\":1,\"30\":2,\"40\":1,\"48\":1,\"66\":1,\"86\":1,\"87\":1,\"88\":1,\"100\":1,\"101\":2,\"104\":1,\"105\":1,\"120\":1,\"121\":1,\"123\":1,\"124\":4,\"127\":1,\"164\":1,\"173\":1,\"179\":1,\"195\":1,\"200\":1,\"210\":2,\"211\":1,\"214\":3,\"254\":1,\"280\":1,\"289\":1,\"290\":1,\"308\":1,\"309\":1,\"316\":1,\"319\":1,\"320\":1,\"321\":4}}],[\"byin\",{\"1\":{\"280\":1}}],[\"bytes\",{\"1\":{\"329\":4}}],[\"byte\",{\"1\":{\"241\":2,\"242\":2,\"328\":1,\"329\":2}}],[\"byteimg\",{\"1\":{\"182\":1}}],[\"by\",{\"1\":{\"5\":1,\"8\":1,\"22\":10,\"25\":10,\"29\":1,\"40\":1,\"43\":1,\"48\":3,\"69\":1,\"72\":2,\"77\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":3,\"87\":1,\"89\":1,\"90\":1,\"97\":2,\"99\":2,\"100\":1,\"104\":1,\"105\":1,\"106\":2,\"107\":1,\"110\":1,\"112\":1,\"118\":1,\"120\":1,\"121\":1,\"123\":1,\"124\":1,\"125\":1,\"128\":2,\"130\":1,\"132\":1,\"155\":1,\"161\":1,\"162\":1,\"164\":3,\"171\":1,\"174\":2,\"175\":1,\"176\":1,\"177\":3,\"178\":2,\"179\":2,\"180\":1,\"181\":1,\"182\":2,\"183\":1,\"185\":1,\"195\":1,\"197\":1,\"199\":1,\"200\":4,\"207\":3,\"210\":3,\"211\":2,\"212\":2,\"213\":1,\"214\":5,\"220\":1,\"221\":1,\"222\":1,\"231\":2,\"234\":1,\"235\":3,\"236\":1,\"247\":1,\"248\":1,\"254\":2,\"274\":1,\"277\":1,\"280\":1,\"285\":1,\"290\":2,\"292\":1,\"305\":2,\"309\":1,\"312\":1,\"317\":1,\"320\":1,\"321\":2,\"322\":1}}],[\"ftp\",{\"1\":{\"322\":1}}],[\"f\",{\"1\":{\"256\":1}}],[\"f523f655f0014d288b7a4502cc6a08d1~tplv\",{\"1\":{\"182\":1}}],[\"f7\",{\"1\":{\"112\":1}}],[\"f12\",{\"1\":{\"108\":1}}],[\"flexibility\",{\"1\":{\"286\":1}}],[\"flexible\",{\"1\":{\"34\":1,\"283\":1}}],[\"floor\",{\"1\":{\"200\":1}}],[\"flowexception\",{\"1\":{\"214\":2}}],[\"flowrule\",{\"1\":{\"214\":2}}],[\"flowrulemanager\",{\"1\":{\"214\":4}}],[\"flowrules\",{\"1\":{\"214\":3}}],[\"flow\",{\"0\":{\"172\":1,\"211\":1,\"214\":1,\"234\":1},\"1\":{\"70\":5,\"80\":1,\"85\":1,\"103\":1,\"104\":1,\"138\":1,\"172\":2,\"178\":1,\"179\":1,\"182\":4,\"185\":3,\"187\":1,\"197\":1,\"209\":4,\"211\":9,\"212\":3,\"214\":26,\"224\":1}}],[\"flatmap\",{\"1\":{\"92\":1,\"184\":1,\"197\":1,\"207\":2}}],[\"fluxresultutils\",{\"0\":{\"239\":1},\"1\":{\"224\":1}}],[\"flux<list<long>>\",{\"1\":{\"197\":1}}],[\"flux\",{\"1\":{\"22\":1,\"197\":1,\"207\":1,\"208\":2}}],[\"fixing\",{\"1\":{\"294\":1}}],[\"fix\",{\"1\":{\"294\":11,\"297\":1,\"312\":3}}],[\"fixes\",{\"1\":{\"268\":1}}],[\"fixed\",{\"0\":{\"294\":1},\"1\":{\"179\":1,\"189\":1,\"197\":1,\"211\":1,\"294\":3,\"322\":1}}],[\"firewall\",{\"1\":{\"169\":1}}],[\"firstly\",{\"1\":{\"315\":1}}],[\"firstentry\",{\"1\":{\"89\":1}}],[\"firstkey\",{\"1\":{\"89\":1}}],[\"first\",{\"0\":{\"21\":1,\"24\":1,\"80\":1},\"1\":{\"16\":2,\"32\":1,\"38\":1,\"40\":1,\"48\":5,\"69\":2,\"70\":1,\"73\":1,\"77\":1,\"78\":1,\"80\":1,\"82\":2,\"87\":1,\"91\":2,\"99\":1,\"104\":1,\"109\":1,\"112\":1,\"114\":1,\"122\":1,\"123\":1,\"124\":1,\"127\":1,\"132\":1,\"135\":3,\"139\":1,\"162\":1,\"164\":3,\"165\":1,\"172\":3,\"184\":1,\"192\":1,\"197\":1,\"198\":1,\"199\":1,\"209\":1,\"210\":1,\"211\":2,\"212\":3,\"213\":1,\"214\":4,\"218\":1,\"221\":1,\"235\":1,\"236\":1,\"280\":1,\"295\":1,\"305\":1,\"307\":1,\"308\":1,\"312\":1,\"318\":1,\"319\":1,\"321\":3}}],[\"five\",{\"1\":{\"48\":1,\"110\":1,\"112\":1,\"213\":1,\"214\":1}}],[\"figure\",{\"1\":{\"48\":1,\"72\":1,\"164\":1,\"165\":1,\"179\":1,\"195\":1,\"206\":1,\"207\":1,\"212\":1,\"213\":1,\"214\":1,\"218\":1}}],[\"films\",{\"0\":{\"144\":1}}],[\"filtered\",{\"1\":{\"317\":1}}],[\"filterchain\",{\"1\":{\"242\":3}}],[\"filterrule\",{\"1\":{\"182\":1}}],[\"filterselector\",{\"1\":{\"182\":1}}],[\"filters\",{\"1\":{\"128\":1,\"306\":1}}],[\"filtering\",{\"1\":{\"70\":4,\"127\":1,\"131\":1}}],[\"filter\",{\"0\":{\"127\":1,\"241\":1,\"242\":1},\"1\":{\"70\":1,\"124\":1,\"165\":1,\"182\":2,\"214\":4,\"234\":2,\"241\":5,\"242\":5}}],[\"filling\",{\"1\":{\"149\":1}}],[\"filled\",{\"1\":{\"43\":1,\"191\":1,\"200\":5,\"213\":1}}],[\"fill\",{\"1\":{\"43\":1,\"189\":1,\"200\":4,\"229\":1}}],[\"fileinfo\",{\"1\":{\"328\":8,\"329\":9}}],[\"filecopier\",{\"1\":{\"294\":1}}],[\"fileappender\",{\"1\":{\"293\":2}}],[\"fileutil\",{\"1\":{\"293\":1,\"294\":2}}],[\"fileextension\",{\"1\":{\"280\":2}}],[\"filedetailcontroller\",{\"1\":{\"328\":1}}],[\"filed\",{\"1\":{\"219\":1}}],[\"filename\",{\"1\":{\"139\":3}}],[\"filestorageservice\",{\"1\":{\"328\":7,\"329\":7}}],[\"files\",{\"1\":{\"107\":1,\"123\":2,\"202\":1,\"248\":1,\"312\":1,\"322\":2,\"328\":3}}],[\"file\",{\"0\":{\"322\":2},\"1\":{\"33\":1,\"43\":1,\"46\":2,\"48\":4,\"68\":1,\"72\":1,\"112\":2,\"121\":3,\"122\":1,\"124\":3,\"126\":1,\"128\":1,\"132\":1,\"135\":2,\"136\":1,\"139\":4,\"156\":1,\"203\":1,\"270\":1,\"280\":3,\"284\":1,\"285\":1,\"294\":1,\"310\":1,\"322\":8,\"323\":3,\"324\":4,\"325\":4,\"326\":5,\"328\":17,\"329\":4}}],[\"financial\",{\"1\":{\"275\":1,\"283\":1}}],[\"finally\",{\"1\":{\"36\":1,\"48\":1,\"80\":1,\"81\":1,\"85\":1,\"87\":1,\"91\":1,\"93\":1,\"100\":1,\"106\":1,\"114\":1,\"164\":2,\"171\":1,\"172\":1,\"177\":1,\"179\":1,\"181\":1,\"182\":1,\"209\":1,\"253\":1,\"311\":1}}],[\"final\",{\"0\":{\"255\":1},\"1\":{\"35\":8,\"36\":8,\"39\":3,\"40\":10,\"48\":1,\"69\":1,\"77\":1,\"78\":2,\"79\":1,\"80\":5,\"81\":1,\"82\":12,\"85\":6,\"86\":6,\"87\":7,\"89\":3,\"90\":2,\"91\":2,\"92\":9,\"93\":2,\"97\":9,\"98\":4,\"100\":10,\"104\":13,\"105\":1,\"109\":5,\"111\":2,\"112\":5,\"113\":11,\"114\":10,\"117\":14,\"118\":8,\"120\":3,\"121\":1,\"122\":2,\"123\":4,\"126\":1,\"127\":4,\"129\":6,\"132\":5,\"134\":3,\"135\":2,\"136\":3,\"137\":2,\"139\":8,\"147\":1,\"151\":1,\"156\":13,\"161\":15,\"162\":5,\"165\":7,\"166\":10,\"172\":14,\"173\":1,\"175\":2,\"176\":5,\"177\":8,\"178\":2,\"179\":4,\"180\":7,\"182\":7,\"183\":8,\"184\":12,\"185\":2,\"195\":1,\"197\":9,\"207\":7,\"214\":13,\"219\":1,\"220\":1,\"221\":17,\"230\":1,\"235\":2,\"236\":5,\"237\":3,\"238\":3,\"280\":1,\"305\":1}}],[\"finchley\",{\"1\":{\"269\":1}}],[\"fine\",{\"1\":{\"71\":1}}],[\"findmethodbymethodsignature\",{\"1\":{\"242\":1}}],[\"findperson\",{\"1\":{\"234\":2}}],[\"findall\",{\"0\":{\"143\":1},\"1\":{\"147\":1}}],[\"findupstreamlistbyselectorid\",{\"1\":{\"87\":1,\"172\":1,\"173\":2,\"183\":1}}],[\"findbyname\",{\"1\":{\"79\":1,\"81\":1,\"82\":1}}],[\"findbypath\",{\"1\":{\"78\":1}}],[\"findbyid\",{\"1\":{\"73\":2,\"82\":2}}],[\"findbyuserid\",{\"1\":{\"60\":1,\"61\":2,\"63\":1,\"64\":7,\"65\":4,\"179\":1,\"193\":1,\"219\":1,\"220\":3}}],[\"findbytransid\",{\"1\":{\"40\":2}}],[\"find\",{\"1\":{\"48\":1,\"72\":1,\"74\":2,\"78\":1,\"89\":1,\"96\":1,\"98\":1,\"100\":2,\"112\":1,\"123\":1,\"127\":1,\"132\":1,\"156\":1,\"179\":1,\"183\":4,\"184\":2,\"212\":1,\"218\":1}}],[\"finished\",{\"1\":{\"37\":1,\"83\":1,\"219\":2}}],[\"fieldnameeditor\",{\"1\":{\"294\":1}}],[\"fields\",{\"1\":{\"70\":1,\"247\":1}}],[\"field\",{\"1\":{\"31\":1,\"81\":1,\"83\":1,\"183\":1,\"226\":4,\"293\":1,\"300\":1,\"306\":1}}],[\"faster\",{\"1\":{\"322\":1}}],[\"fastest\",{\"1\":{\"177\":1}}],[\"fast\",{\"0\":{\"259\":1},\"1\":{\"260\":4}}],[\"fangq\",{\"1\":{\"256\":1}}],[\"fans99\",{\"1\":{\"256\":1}}],[\"fan\",{\"1\":{\"106\":1}}],[\"far\",{\"1\":{\"91\":1,\"207\":1,\"321\":1}}],[\"fall\",{\"1\":{\"322\":1}}],[\"fallbackuri\",{\"1\":{\"218\":1}}],[\"fallbackhandler\",{\"1\":{\"214\":1}}],[\"fallback\",{\"1\":{\"214\":1,\"218\":1,\"221\":12}}],[\"falls\",{\"1\":{\"90\":1,\"177\":1}}],[\"false\",{\"1\":{\"33\":3,\"35\":1,\"36\":1,\"59\":1,\"85\":1,\"90\":1,\"91\":2,\"96\":1,\"100\":1,\"104\":3,\"123\":2,\"151\":2,\"164\":2,\"174\":3,\"175\":1,\"176\":2,\"207\":3,\"218\":2,\"270\":1,\"315\":1}}],[\"faq\",{\"1\":{\"57\":1}}],[\"familiar\",{\"1\":{\"48\":2,\"78\":1,\"97\":1,\"207\":1}}],[\"fact\",{\"1\":{\"128\":1,\"179\":1,\"211\":1}}],[\"factory\",{\"1\":{\"35\":3,\"36\":1,\"104\":4,\"105\":1,\"116\":1,\"117\":1,\"121\":3,\"124\":2,\"164\":7}}],[\"facilitator\",{\"1\":{\"29\":1}}],[\"fail\",{\"1\":{\"40\":1,\"104\":2,\"105\":1,\"123\":4}}],[\"fails\",{\"1\":{\"38\":2,\"276\":1}}],[\"failed\",{\"1\":{\"30\":1,\"82\":1,\"105\":2,\"164\":4,\"242\":1,\"328\":1}}],[\"failureratethreshold\",{\"1\":{\"218\":1}}],[\"failure\",{\"1\":{\"30\":1,\"184\":2,\"219\":1,\"290\":1}}],[\"fault\",{\"1\":{\"22\":1,\"217\":2,\"225\":1}}],[\"frequent\",{\"1\":{\"210\":1}}],[\"freely\",{\"1\":{\"117\":1,\"304\":1}}],[\"free\",{\"0\":{\"35\":2},\"1\":{\"28\":1}}],[\"front\",{\"1\":{\"185\":2,\"306\":1}}],[\"fromfuture\",{\"1\":{\"237\":1}}],[\"fromiterable\",{\"1\":{\"207\":1}}],[\"fromdatabuffers\",{\"1\":{\"92\":1,\"184\":1}}],[\"fromjson\",{\"1\":{\"87\":1,\"104\":2,\"105\":2,\"117\":1,\"165\":1,\"172\":1,\"183\":1,\"195\":1,\"197\":1,\"207\":1,\"214\":2,\"221\":1}}],[\"fromlist\",{\"1\":{\"79\":1,\"81\":1}}],[\"from\",{\"1\":{\"28\":1,\"48\":2,\"68\":2,\"81\":1,\"82\":1,\"86\":2,\"89\":1,\"91\":1,\"97\":2,\"100\":1,\"104\":3,\"105\":2,\"113\":1,\"117\":1,\"119\":1,\"127\":1,\"129\":2,\"139\":1,\"156\":1,\"161\":2,\"174\":1,\"176\":2,\"178\":1,\"179\":1,\"182\":2,\"183\":1,\"184\":2,\"189\":1,\"197\":1,\"199\":1,\"209\":1,\"210\":1,\"211\":3,\"212\":1,\"214\":5,\"217\":1,\"218\":1,\"220\":1,\"235\":2,\"236\":2,\"254\":1,\"292\":3,\"293\":2,\"297\":1,\"302\":1,\"305\":2,\"321\":1,\"329\":1}}],[\"friendly\",{\"1\":{\"164\":2,\"299\":1}}],[\"friend\",{\"1\":{\"97\":1}}],[\"frames\",{\"1\":{\"164\":2}}],[\"framework<\",{\"1\":{\"228\":1}}],[\"frameworks\",{\"1\":{\"34\":1,\"247\":1,\"274\":1,\"283\":1,\"284\":1}}],[\"framework\",{\"0\":{\"34\":1,\"35\":1,\"41\":1,\"46\":1,\"269\":1,\"272\":1},\"1\":{\"4\":4,\"37\":1,\"38\":2,\"42\":1,\"43\":1,\"225\":1,\"231\":1,\"276\":2,\"280\":1,\"281\":1,\"284\":1,\"285\":2,\"288\":1,\"290\":1,\"309\":2,\"320\":1,\"321\":1}}],[\"fragment\",{\"1\":{\"90\":1}}],[\"feignclient\",{\"1\":{\"280\":2}}],[\"feign\",{\"1\":{\"276\":1,\"285\":1}}],[\"feasible\",{\"1\":{\"305\":1}}],[\"fear\",{\"1\":{\"200\":1}}],[\"feature\",{\"0\":{\"292\":1},\"1\":{\"285\":1,\"317\":1}}],[\"features\",{\"0\":{\"274\":1,\"293\":1,\"317\":1},\"1\":{\"48\":1,\"217\":1,\"272\":1,\"312\":1}}],[\"featured\",{\"1\":{\"4\":1}}],[\"fetch\",{\"1\":{\"104\":5,\"105\":1}}],[\"fetchgroup\",{\"1\":{\"104\":1}}],[\"fetchgroupconfig\",{\"1\":{\"104\":2}}],[\"fewer\",{\"1\":{\"131\":1}}],[\"few\",{\"1\":{\"33\":1,\"85\":1,\"128\":1,\"308\":1,\"319\":1}}],[\"feeling\",{\"1\":{\"321\":1}}],[\"feel\",{\"1\":{\"28\":1,\"164\":1,\"290\":1}}],[\"february\",{\"1\":{\"21\":1}}],[\"future\",{\"1\":{\"237\":2,\"309\":2,\"320\":2,\"321\":1}}],[\"fuse\",{\"0\":{\"212\":1,\"213\":1,\"220\":1},\"1\":{\"169\":1,\"209\":3,\"212\":13,\"213\":15,\"214\":5,\"216\":1,\"220\":2,\"221\":1}}],[\"fusing\",{\"1\":{\"22\":1,\"179\":1,\"185\":1,\"209\":1,\"213\":3,\"222\":2}}],[\"fuzzy\",{\"1\":{\"70\":3}}],[\"further\",{\"1\":{\"48\":2,\"72\":1,\"83\":1}}],[\"funcfilter\",{\"1\":{\"293\":1}}],[\"function<throwable\",{\"1\":{\"221\":2}}],[\"functional\",{\"1\":{\"217\":1,\"272\":1}}],[\"functions\",{\"0\":{\"310\":1},\"1\":{\"87\":2,\"97\":1,\"187\":1,\"197\":1,\"209\":2,\"212\":1,\"214\":1,\"217\":1,\"302\":2,\"317\":1,\"328\":1}}],[\"function\",{\"1\":{\"48\":1,\"87\":1,\"118\":1,\"120\":1,\"121\":1,\"126\":1,\"156\":3,\"180\":2,\"182\":3,\"191\":1,\"209\":1,\"219\":1,\"226\":1,\"285\":1,\"287\":1,\"293\":2,\"316\":1}}],[\"funnel\",{\"1\":{\"189\":1}}],[\"funds\",{\"1\":{\"9\":2,\"256\":2}}],[\"fullname\",{\"1\":{\"123\":3}}],[\"full=false\",{\"1\":{\"59\":1}}],[\"fully\",{\"1\":{\"32\":1,\"256\":1,\"274\":1,\"288\":1,\"312\":1}}],[\"full\",{\"1\":{\"4\":1,\"9\":1,\"59\":1,\"70\":3,\"85\":1,\"121\":1,\"172\":1,\"173\":2,\"175\":1,\"180\":1,\"182\":1}}],[\"foo\",{\"1\":{\"233\":1}}],[\"foobaredbbexone123\",{\"1\":{\"46\":1}}],[\"found\",{\"1\":{\"48\":3,\"57\":1,\"73\":1,\"80\":1,\"81\":1,\"105\":1,\"123\":3,\"124\":1,\"131\":1,\"179\":2,\"187\":1,\"220\":1,\"290\":2}}],[\"fourth\",{\"1\":{\"106\":1,\"110\":1,\"197\":1}}],[\"four\",{\"0\":{\"41\":1},\"1\":{\"112\":1,\"179\":1,\"189\":1,\"212\":2,\"213\":1}}],[\"focuses\",{\"1\":{\"235\":1}}],[\"focus\",{\"1\":{\"32\":1,\"104\":1,\"179\":1,\"197\":1,\"212\":3,\"235\":2,\"321\":1}}],[\"follows\",{\"1\":{\"30\":1,\"33\":6,\"54\":1,\"57\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"77\":1,\"83\":1,\"88\":1,\"105\":1,\"134\":1,\"138\":1,\"159\":1,\"177\":1,\"179\":1,\"182\":2,\"183\":3,\"195\":1,\"197\":1,\"207\":1,\"214\":1,\"219\":1,\"226\":1,\"280\":1,\"286\":1,\"308\":1,\"315\":1,\"319\":1}}],[\"follow\",{\"1\":{\"28\":1,\"70\":1,\"80\":1,\"83\":1,\"137\":1,\"214\":1,\"307\":1,\"318\":1}}],[\"following\",{\"1\":{\"8\":1,\"29\":1,\"33\":1,\"48\":3,\"61\":1,\"64\":1,\"70\":3,\"85\":1,\"86\":2,\"91\":1,\"100\":2,\"104\":2,\"105\":2,\"112\":2,\"114\":1,\"122\":1,\"123\":1,\"147\":1,\"164\":4,\"165\":1,\"179\":3,\"189\":1,\"193\":1,\"195\":1,\"198\":1,\"206\":1,\"207\":1,\"210\":1,\"211\":2,\"212\":4,\"214\":1,\"218\":1,\"220\":1,\"235\":1,\"241\":1,\"247\":1,\"248\":1,\"308\":1,\"315\":1,\"316\":4,\"319\":1,\"326\":1}}],[\"forname\",{\"1\":{\"123\":1,\"126\":1,\"127\":1,\"129\":2,\"139\":1}}],[\"foreground\",{\"1\":{\"108\":2,\"185\":1}}],[\"foreach\",{\"1\":{\"48\":2,\"80\":1,\"82\":1,\"86\":1,\"104\":3,\"118\":1,\"136\":1,\"139\":1,\"162\":1,\"165\":1,\"175\":1,\"207\":1}}],[\"forwards\",{\"1\":{\"156\":1,\"206\":1}}],[\"forwarded\",{\"1\":{\"73\":1,\"202\":1}}],[\"forwarding\",{\"0\":{\"206\":1},\"1\":{\"65\":1,\"73\":2,\"85\":2,\"87\":1,\"206\":2,\"207\":1}}],[\"forward\",{\"0\":{\"61\":1},\"1\":{\"61\":1,\"69\":1,\"133\":1,\"171\":1,\"201\":2,\"207\":1}}],[\"formal\",{\"1\":{\"254\":1}}],[\"formats\",{\"1\":{\"185\":1}}],[\"formation\",{\"1\":{\"86\":1}}],[\"format\",{\"1\":{\"82\":1,\"104\":1,\"105\":1,\"151\":1,\"176\":5,\"198\":1,\"226\":2,\"280\":1}}],[\"forms\",{\"1\":{\"120\":1}}],[\"form\",{\"0\":{\"254\":1},\"1\":{\"14\":1,\"39\":1,\"105\":1,\"133\":1,\"147\":2,\"260\":1,\"293\":1}}],[\"fork\",{\"0\":{\"51\":1},\"1\":{\"8\":1,\"46\":1,\"247\":1,\"271\":1}}],[\"for\",{\"0\":{\"31\":1,\"33\":1,\"43\":1,\"105\":1,\"111\":1,\"255\":1,\"269\":1,\"270\":1,\"301\":1,\"305\":1,\"306\":1},\"1\":{\"6\":4,\"7\":1,\"8\":2,\"16\":3,\"28\":2,\"29\":1,\"30\":3,\"32\":1,\"33\":24,\"34\":1,\"35\":2,\"37\":1,\"39\":1,\"40\":2,\"43\":1,\"46\":5,\"48\":6,\"56\":1,\"57\":4,\"58\":1,\"69\":1,\"72\":1,\"79\":1,\"80\":3,\"81\":1,\"82\":1,\"84\":1,\"86\":3,\"89\":3,\"90\":2,\"91\":6,\"92\":1,\"97\":4,\"98\":2,\"99\":2,\"100\":5,\"101\":4,\"104\":7,\"105\":5,\"109\":1,\"111\":2,\"113\":2,\"114\":4,\"116\":1,\"117\":2,\"118\":3,\"120\":1,\"121\":2,\"122\":3,\"123\":2,\"127\":1,\"128\":2,\"129\":1,\"131\":1,\"135\":1,\"139\":1,\"154\":1,\"156\":4,\"160\":2,\"161\":2,\"164\":3,\"165\":3,\"166\":2,\"171\":1,\"172\":3,\"173\":2,\"175\":3,\"177\":2,\"178\":1,\"179\":9,\"180\":3,\"181\":1,\"182\":1,\"183\":1,\"184\":2,\"189\":1,\"195\":1,\"197\":2,\"200\":5,\"202\":1,\"209\":1,\"211\":8,\"212\":5,\"213\":3,\"214\":9,\"218\":5,\"219\":4,\"225\":2,\"226\":1,\"231\":1,\"234\":2,\"237\":2,\"241\":3,\"242\":3,\"247\":1,\"249\":1,\"253\":4,\"254\":2,\"256\":3,\"269\":2,\"270\":1,\"272\":1,\"275\":2,\"276\":1,\"277\":2,\"283\":1,\"284\":1,\"285\":3,\"286\":1,\"288\":1,\"290\":1,\"293\":2,\"305\":4,\"306\":2,\"308\":2,\"309\":1,\"311\":1,\"316\":3,\"319\":2,\"320\":1,\"321\":4,\"322\":2,\"326\":2,\"328\":4,\"329\":2}}],[\"jpg\",{\"1\":{\"324\":4,\"329\":1}}],[\"jenkins\",{\"1\":{\"256\":1}}],[\"jtiag\",{\"1\":{\"256\":1}}],[\"jmx\",{\"1\":{\"155\":1}}],[\"jsonconfig\",{\"1\":{\"292\":1}}],[\"jsonutils\",{\"1\":{\"238\":1}}],[\"jsonarray\",{\"1\":{\"105\":1}}],[\"jsonobject\",{\"1\":{\"104\":11,\"105\":1,\"165\":2,\"292\":1}}],[\"json\",{\"1\":{\"81\":1,\"97\":3,\"104\":6,\"105\":2,\"117\":4,\"118\":2,\"226\":1,\"292\":5,\"294\":4,\"305\":1}}],[\"jury\",{\"1\":{\"247\":1,\"253\":2}}],[\"juejin\",{\"1\":{\"182\":1}}],[\"judgment\",{\"1\":{\"195\":1,\"213\":3,\"214\":1,\"293\":1}}],[\"judging\",{\"1\":{\"177\":1,\"195\":2,\"294\":1}}],[\"judged\",{\"1\":{\"151\":1,\"197\":1,\"212\":1,\"235\":1}}],[\"judge\",{\"1\":{\"151\":3,\"185\":1,\"212\":3}}],[\"juncture\",{\"1\":{\"98\":1}}],[\"jumps\",{\"1\":{\"48\":1}}],[\"jump\",{\"1\":{\"48\":2,\"56\":1,\"201\":1,\"205\":1}}],[\"just\",{\"0\":{\"46\":1},\"1\":{\"29\":1,\"37\":1,\"46\":1,\"48\":1,\"72\":1,\"74\":1,\"81\":1,\"87\":5,\"100\":1,\"105\":1,\"106\":1,\"123\":1,\"132\":1,\"179\":1,\"197\":1,\"281\":1,\"290\":1,\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"jd\",{\"1\":{\"322\":1}}],[\"jdbc\",{\"0\":{\"125\":1,\"128\":1,\"129\":1},\"1\":{\"33\":2,\"43\":2,\"46\":2,\"125\":1,\"126\":4,\"127\":4,\"128\":3,\"129\":1,\"131\":1,\"280\":2,\"314\":1}}],[\"jdk8\",{\"1\":{\"217\":1}}],[\"jdk\",{\"1\":{\"33\":4,\"121\":1,\"126\":1,\"284\":1}}],[\"jvm\",{\"1\":{\"32\":2,\"57\":1,\"68\":1,\"164\":1,\"195\":1,\"226\":1,\"284\":1,\"317\":1}}],[\"jihe\",{\"1\":{\"256\":1}}],[\"jittery\",{\"1\":{\"212\":1}}],[\"jitter\",{\"1\":{\"210\":1}}],[\"jinpeng\",{\"1\":{\"106\":1}}],[\"jinze\",{\"1\":{\"25\":1}}],[\"jiangwenbo\",{\"1\":{\"22\":1}}],[\"jasper\",{\"1\":{\"256\":1}}],[\"jar\",{\"0\":{\"46\":1},\"1\":{\"164\":5,\"268\":1,\"314\":5}}],[\"january\",{\"1\":{\"24\":1,\"48\":3}}],[\"javabeanserializeutil\",{\"1\":{\"242\":1}}],[\"javabeandescriptor\",{\"1\":{\"241\":2,\"242\":2}}],[\"javadoc\",{\"1\":{\"54\":1}}],[\"java\",{\"0\":{\"121\":1,\"124\":1,\"131\":1,\"151\":1},\"1\":{\"4\":2,\"22\":1,\"35\":5,\"36\":4,\"40\":2,\"49\":1,\"77\":1,\"78\":2,\"79\":1,\"80\":2,\"81\":1,\"82\":4,\"109\":2,\"111\":1,\"112\":1,\"113\":2,\"114\":1,\"120\":1,\"123\":1,\"124\":2,\"126\":4,\"127\":4,\"128\":1,\"129\":2,\"130\":2,\"131\":1,\"155\":3,\"164\":14,\"221\":8,\"225\":1,\"234\":2,\"241\":1,\"242\":1,\"256\":1,\"289\":1,\"297\":1,\"305\":2,\"308\":1,\"309\":1,\"314\":1,\"319\":1,\"320\":1}}],[\"jod\",{\"1\":{\"308\":1,\"319\":1}}],[\"john\",{\"1\":{\"256\":1}}],[\"jo\",{\"1\":{\"165\":1}}],[\"job\",{\"1\":{\"99\":1}}],[\"joining\",{\"1\":{\"147\":1,\"253\":1,\"254\":1}}],[\"joininstances\",{\"0\":{\"137\":1},\"1\":{\"134\":1,\"137\":4,\"139\":4}}],[\"join\",{\"0\":{\"5\":1,\"322\":1},\"1\":{\"5\":1,\"46\":1,\"79\":1,\"81\":1,\"105\":1,\"139\":3,\"147\":1,\"249\":1,\"252\":1,\"256\":1,\"272\":1,\"282\":1,\"295\":1}}],[\"joy\",{\"1\":{\"1\":1}}],[\"csvreadconfig\",{\"1\":{\"293\":1}}],[\"cszj\",{\"1\":{\"256\":1}}],[\"cpu\",{\"1\":{\"290\":1,\"312\":1}}],[\"ci\",{\"1\":{\"226\":10,\"285\":1}}],[\"circular\",{\"1\":{\"218\":1}}],[\"circuitbreakeroperator\",{\"1\":{\"221\":1}}],[\"circuitbreaker\",{\"1\":{\"221\":5}}],[\"circuitbreakerstatuscodeexception\",{\"1\":{\"221\":1}}],[\"circuitbreaker<\",{\"1\":{\"217\":1}}],[\"circuitenable\",{\"1\":{\"218\":1,\"221\":1}}],[\"circuit\",{\"1\":{\"212\":2,\"214\":10,\"217\":1,\"218\":7,\"219\":1,\"221\":4,\"303\":1,\"309\":1,\"312\":1,\"316\":1,\"317\":1,\"320\":1}}],[\"circumstances\",{\"1\":{\"38\":1}}],[\"ctor\",{\"1\":{\"219\":9}}],[\"cglib\",{\"1\":{\"164\":1}}],[\"cglib$nacossyncdataservice$0\",{\"1\":{\"164\":1}}],[\"c11b7e26bc554b8523dc929761dd28808913f091\",{\"1\":{\"155\":1}}],[\"cfg\",{\"1\":{\"155\":1}}],[\"cycle\",{\"1\":{\"256\":1}}],[\"cycles\",{\"1\":{\"105\":1}}],[\"cyclic\",{\"1\":{\"105\":1}}],[\"certification\",{\"1\":{\"308\":1,\"319\":1}}],[\"certainly\",{\"1\":{\"101\":1}}],[\"certain\",{\"1\":{\"99\":1,\"104\":2,\"122\":1,\"156\":1,\"177\":1,\"211\":3,\"212\":1,\"308\":1,\"319\":1}}],[\"center\",{\"1\":{\"275\":1,\"280\":2,\"285\":1}}],[\"centers\",{\"1\":{\"272\":1,\"275\":1,\"287\":1,\"312\":1}}],[\"central\",{\"1\":{\"42\":1}}],[\"ceutils\",{\"1\":{\"177\":1}}],[\"c40\",{\"1\":{\"65\":2}}],[\"cchenxi\",{\"0\":{\"51\":1},\"1\":{\"52\":1}}],[\"cn\",{\"1\":{\"49\":1,\"123\":6,\"182\":1,\"261\":1,\"271\":1,\"280\":1,\"301\":1,\"311\":1,\"316\":3,\"322\":2,\"325\":2,\"326\":1}}],[\"c\",{\"1\":{\"39\":3,\"123\":4,\"219\":3,\"256\":1}}],[\"cross\",{\"1\":{\"305\":1}}],[\"cronpatternparser\",{\"1\":{\"293\":1}}],[\"cron\",{\"1\":{\"292\":1,\"293\":1}}],[\"crypto\",{\"1\":{\"293\":1}}],[\"crash\",{\"1\":{\"290\":1}}],[\"crashes\",{\"1\":{\"31\":1,\"38\":1}}],[\"crushed\",{\"1\":{\"211\":1}}],[\"crush\",{\"1\":{\"211\":1}}],[\"crud\",{\"1\":{\"48\":1,\"78\":1}}],[\"creation\",{\"1\":{\"226\":1}}],[\"creating\",{\"1\":{\"164\":1}}],[\"createuri\",{\"1\":{\"207\":1,\"214\":1,\"221\":1}}],[\"createnotfounderror\",{\"1\":{\"207\":2}}],[\"createlettuceconnectionfactory\",{\"1\":{\"195\":1}}],[\"createconfigservice\",{\"1\":{\"166\":1}}],[\"createpersistent\",{\"1\":{\"161\":1}}],[\"createextension\",{\"1\":{\"137\":1,\"139\":3}}],[\"createstatement\",{\"1\":{\"129\":2}}],[\"createorupdate\",{\"1\":{\"48\":1,\"109\":2,\"165\":1}}],[\"created`\",{\"1\":{\"226\":1}}],[\"createdefault\",{\"1\":{\"82\":1}}],[\"created\",{\"1\":{\"43\":1,\"48\":3,\"82\":1,\"174\":1}}],[\"create\",{\"1\":{\"29\":1,\"35\":1,\"36\":1,\"48\":1,\"98\":1,\"104\":1,\"109\":2,\"110\":2,\"118\":2,\"128\":1,\"164\":1,\"165\":1,\"174\":1,\"226\":1,\"275\":1,\"280\":1,\"292\":1,\"315\":1}}],[\"critical\",{\"1\":{\"92\":1,\"125\":1,\"139\":1}}],[\"criteria\",{\"1\":{\"70\":1}}],[\"chris\",{\"1\":{\"256\":3}}],[\"chips\",{\"1\":{\"321\":1}}],[\"chinese\",{\"1\":{\"293\":1,\"321\":2}}],[\"china\",{\"1\":{\"28\":1,\"29\":1,\"212\":1}}],[\"childrenlist\",{\"1\":{\"162\":1}}],[\"child\",{\"1\":{\"161\":1,\"162\":1}}],[\"cherryrum\",{\"1\":{\"290\":1}}],[\"cheap\",{\"1\":{\"275\":1,\"286\":1}}],[\"cheated\",{\"1\":{\"105\":1}}],[\"checkstyle\",{\"1\":{\"286\":1,\"321\":1}}],[\"checkselector\",{\"1\":{\"85\":2}}],[\"check=\",{\"1\":{\"270\":1}}],[\"checkmetadata\",{\"1\":{\"236\":1}}],[\"checkip\",{\"1\":{\"176\":1}}],[\"checking\",{\"1\":{\"175\":2}}],[\"checkurl\",{\"1\":{\"175\":1,\"176\":2}}],[\"checkutils\",{\"1\":{\"85\":4,\"176\":2}}],[\"checked\",{\"1\":{\"139\":1,\"219\":1}}],[\"checkdata\",{\"1\":{\"109\":1,\"214\":2,\"219\":1,\"220\":1,\"221\":1}}],[\"checkpoint\",{\"1\":{\"92\":1}}],[\"checkrule\",{\"1\":{\"85\":2}}],[\"check\",{\"0\":{\"176\":1},\"1\":{\"48\":2,\"57\":1,\"85\":1,\"99\":1,\"104\":1,\"164\":1,\"174\":7,\"175\":6,\"176\":3,\"182\":2,\"195\":1,\"200\":1,\"219\":1,\"221\":1,\"235\":2,\"236\":3,\"241\":2,\"242\":1,\"275\":1,\"322\":1,\"328\":1}}],[\"chovi\",{\"1\":{\"256\":1}}],[\"choose\",{\"1\":{\"56\":1,\"62\":1,\"117\":1,\"183\":1,\"209\":1,\"212\":1,\"214\":1,\"276\":1,\"304\":1}}],[\"choice\",{\"1\":{\"48\":1}}],[\"chasen\",{\"1\":{\"256\":1}}],[\"channels\",{\"1\":{\"254\":1}}],[\"changing\",{\"1\":{\"124\":1}}],[\"changetime\",{\"1\":{\"100\":1}}],[\"changetime=\",{\"1\":{\"100\":1}}],[\"change\",{\"0\":{\"118\":1},\"1\":{\"48\":1,\"62\":1,\"74\":1,\"79\":1,\"81\":1,\"83\":2,\"97\":1,\"98\":1,\"101\":3,\"104\":1,\"105\":4,\"109\":1,\"114\":1,\"117\":2,\"118\":2,\"119\":1,\"124\":1,\"156\":2,\"157\":1,\"159\":1,\"160\":1,\"162\":1,\"165\":2,\"166\":2,\"191\":1,\"195\":1,\"251\":1,\"278\":1,\"292\":2,\"293\":1,\"299\":1,\"305\":1,\"322\":2}}],[\"changedevent\",{\"1\":{\"160\":1}}],[\"changedgroups\",{\"1\":{\"100\":6,\"105\":4}}],[\"changedlistener\",{\"0\":{\"97\":1,\"100\":1},\"1\":{\"97\":3,\"100\":3,\"101\":1,\"112\":2,\"113\":1,\"156\":2,\"160\":1,\"165\":5}}],[\"changed\",{\"0\":{\"195\":1},\"1\":{\"48\":1,\"82\":1,\"97\":9,\"98\":2,\"99\":2,\"100\":4,\"101\":3,\"104\":3,\"105\":3,\"112\":16,\"155\":2,\"156\":3,\"165\":2,\"195\":1,\"213\":1,\"248\":1,\"280\":1,\"292\":3,\"297\":1}}],[\"changes\",{\"0\":{\"105\":1,\"160\":1,\"161\":1,\"162\":1,\"278\":1,\"280\":1,\"298\":1,\"323\":1,\"324\":1,\"325\":1},\"1\":{\"48\":1,\"97\":3,\"98\":2,\"100\":1,\"101\":1,\"103\":1,\"104\":1,\"105\":1,\"112\":2,\"117\":1,\"118\":4,\"132\":1,\"156\":1,\"159\":2,\"161\":1,\"162\":1,\"195\":2,\"280\":2,\"300\":1,\"303\":1,\"317\":1}}],[\"charsequence\",{\"1\":{\"292\":1}}],[\"charlyfeng\",{\"1\":{\"256\":1}}],[\"charge\",{\"1\":{\"250\":1,\"254\":1}}],[\"characterencoding=utf\",{\"1\":{\"314\":1}}],[\"characterencoding=utf8\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"280\":1}}],[\"character\",{\"1\":{\"226\":10}}],[\"chart\",{\"1\":{\"138\":1,\"182\":3}}],[\"chapters\",{\"1\":{\"173\":1}}],[\"chapter\",{\"1\":{\"101\":2,\"103\":1,\"185\":1,\"187\":1,\"235\":1,\"328\":2,\"329\":1}}],[\"chains\",{\"1\":{\"247\":1}}],[\"chained\",{\"1\":{\"86\":1}}],[\"chain\",{\"0\":{\"84\":1,\"118\":1,\"168\":1,\"197\":1},\"1\":{\"30\":1,\"39\":1,\"85\":11,\"86\":3,\"87\":2,\"92\":8,\"93\":3,\"172\":8,\"178\":1,\"179\":1,\"180\":3,\"181\":2,\"182\":7,\"183\":3,\"184\":6,\"185\":2,\"197\":2,\"207\":2,\"210\":1,\"214\":2,\"221\":9,\"235\":1,\"236\":2,\"238\":2}}],[\"cumbersome\",{\"1\":{\"308\":1,\"319\":1}}],[\"cumulative\",{\"1\":{\"90\":1,\"91\":1}}],[\"cusmized\",{\"1\":{\"302\":1}}],[\"customized\",{\"1\":{\"317\":1,\"328\":1}}],[\"customize\",{\"1\":{\"72\":1,\"97\":1,\"218\":1,\"306\":1,\"310\":1}}],[\"custom\",{\"1\":{\"70\":3,\"71\":1,\"80\":1,\"172\":3,\"205\":1,\"275\":1,\"284\":1,\"293\":2,\"297\":1}}],[\"curl\",{\"1\":{\"260\":2}}],[\"curator\",{\"1\":{\"228\":3,\"275\":1}}],[\"curator<\",{\"1\":{\"228\":3}}],[\"cur\",{\"1\":{\"91\":3}}],[\"curious\",{\"1\":{\"86\":1}}],[\"currentchildren\",{\"1\":{\"161\":3,\"162\":3}}],[\"currentthread\",{\"1\":{\"123\":1,\"220\":1}}],[\"currenttimemillis\",{\"1\":{\"91\":1,\"97\":1,\"175\":1}}],[\"currenttransaction\",{\"1\":{\"36\":4}}],[\"currently\",{\"0\":{\"232\":1},\"1\":{\"85\":1,\"180\":3,\"248\":1}}],[\"current\",{\"0\":{\"192\":1,\"196\":1,\"200\":1,\"219\":1},\"1\":{\"22\":1,\"39\":1,\"86\":1,\"89\":1,\"91\":1,\"113\":1,\"120\":1,\"161\":1,\"162\":1,\"169\":1,\"179\":2,\"185\":1,\"189\":2,\"191\":1,\"195\":6,\"197\":1,\"198\":1,\"199\":2,\"200\":6,\"211\":3,\"214\":3,\"216\":1,\"219\":9,\"220\":1,\"221\":1,\"222\":1,\"226\":1,\"235\":1,\"242\":1,\"256\":1}}],[\"cutting\",{\"1\":{\"180\":1}}],[\"cut\",{\"1\":{\"39\":1}}],[\"cui\",{\"1\":{\"18\":1,\"25\":1}}],[\"cl\",{\"1\":{\"123\":5}}],[\"clazz\",{\"1\":{\"82\":3,\"132\":5,\"139\":2}}],[\"classpath\",{\"1\":{\"136\":2,\"139\":5}}],[\"classnotfoundexception\",{\"1\":{\"123\":1,\"129\":2,\"139\":2,\"242\":1}}],[\"classloader\",{\"1\":{\"123\":5,\"139\":5}}],[\"classification\",{\"1\":{\"97\":1}}],[\"class<t>\",{\"1\":{\"132\":1}}],[\"class<s>\",{\"1\":{\"123\":3}}],[\"class<\",{\"1\":{\"82\":3,\"123\":1,\"127\":1,\"134\":1,\"136\":2,\"137\":1,\"139\":10,\"242\":1}}],[\"classes\",{\"1\":{\"48\":1,\"84\":1,\"104\":3,\"117\":2,\"118\":2,\"119\":2,\"120\":1,\"122\":1,\"124\":1,\"126\":2,\"128\":1,\"129\":1,\"136\":3,\"139\":22,\"156\":4,\"164\":9,\"165\":1,\"179\":4,\"182\":1}}],[\"class=\",{\"1\":{\"33\":7,\"43\":2}}],[\"class\",{\"1\":{\"4\":1,\"35\":1,\"36\":1,\"40\":2,\"43\":3,\"48\":12,\"78\":1,\"79\":1,\"81\":1,\"82\":12,\"84\":3,\"86\":6,\"87\":4,\"92\":1,\"96\":2,\"97\":8,\"98\":2,\"100\":9,\"104\":6,\"105\":4,\"109\":3,\"111\":2,\"112\":19,\"113\":2,\"114\":2,\"116\":5,\"117\":8,\"118\":6,\"119\":3,\"120\":4,\"121\":1,\"122\":6,\"123\":16,\"124\":3,\"126\":7,\"127\":2,\"128\":4,\"129\":5,\"130\":1,\"131\":3,\"132\":3,\"133\":3,\"135\":5,\"136\":1,\"137\":3,\"138\":1,\"139\":19,\"156\":21,\"161\":2,\"164\":2,\"165\":9,\"166\":4,\"172\":1,\"177\":1,\"179\":5,\"182\":4,\"183\":1,\"195\":6,\"197\":3,\"207\":4,\"214\":7,\"221\":4,\"231\":1,\"235\":2,\"241\":4,\"242\":4,\"280\":3,\"289\":1,\"290\":1,\"305\":1,\"327\":3,\"328\":1}}],[\"cleandelaytime\",{\"1\":{\"280\":1}}],[\"clean\",{\"1\":{\"54\":1}}],[\"clear\",{\"1\":{\"28\":1,\"100\":1,\"104\":1,\"114\":4,\"123\":1,\"200\":1}}],[\"client<\",{\"1\":{\"164\":1,\"228\":1}}],[\"clientcnxn\",{\"1\":{\"155\":4}}],[\"clientip\",{\"1\":{\"100\":2}}],[\"clientrequest\",{\"1\":{\"92\":1}}],[\"clientresponseplugin\",{\"0\":{\"185\":1},\"1\":{\"179\":1}}],[\"clientresponseclient\",{\"1\":{\"93\":1}}],[\"clientresponse\",{\"1\":{\"92\":1,\"93\":7,\"184\":1,\"185\":8}}],[\"clientplugin\",{\"0\":{\"184\":1},\"1\":{\"92\":2,\"179\":1}}],[\"clients\",{\"1\":{\"48\":1,\"100\":9,\"321\":1}}],[\"client\",{\"0\":{\"76\":1},\"1\":{\"48\":2,\"59\":1,\"77\":2,\"83\":1,\"92\":1,\"93\":1,\"100\":10,\"117\":1,\"155\":8,\"156\":3,\"161\":3,\"164\":1,\"166\":1,\"179\":2,\"184\":4,\"185\":2,\"214\":1,\"230\":3,\"231\":1,\"237\":1,\"290\":1,\"305\":1,\"312\":1}}],[\"clicked\",{\"1\":{\"48\":1}}],[\"click\",{\"1\":{\"28\":1,\"101\":1,\"164\":2,\"212\":1,\"290\":2,\"325\":1,\"329\":1}}],[\"closing\",{\"1\":{\"121\":1}}],[\"closely\",{\"1\":{\"195\":1}}],[\"close\",{\"1\":{\"106\":1,\"114\":1}}],[\"closed\",{\"1\":{\"48\":2}}],[\"clone\",{\"0\":{\"52\":1},\"1\":{\"42\":1,\"52\":1}}],[\"cloud\",{\"1\":{\"29\":1,\"34\":1,\"46\":1,\"80\":2,\"164\":1,\"217\":1,\"226\":1,\"270\":1,\"276\":1,\"280\":2,\"283\":1,\"285\":1,\"322\":17,\"326\":2}}],[\"clusters\",{\"0\":{\"270\":1},\"1\":{\"40\":1}}],[\"clusterurl\",{\"1\":{\"33\":1}}],[\"clustered\",{\"1\":{\"31\":1,\"40\":1}}],[\"cluster\",{\"0\":{\"31\":2},\"1\":{\"31\":3,\"33\":5,\"68\":1,\"69\":1,\"87\":1,\"90\":1,\"104\":1,\"120\":1,\"191\":2,\"214\":1,\"270\":1,\"274\":1,\"304\":1,\"317\":1}}],[\"club\",{\"0\":{\"12\":1,\"13\":1},\"1\":{\"12\":1}}],[\"capabilities\",{\"1\":{\"225\":1}}],[\"capability\",{\"1\":{\"69\":1}}],[\"capacity\",{\"1\":{\"189\":2,\"192\":1,\"197\":1,\"200\":7,\"210\":1}}],[\"came\",{\"1\":{\"178\":1}}],[\"caching\",{\"1\":{\"99\":1,\"101\":1,\"131\":1,\"134\":1}}],[\"caches\",{\"1\":{\"132\":1,\"134\":1,\"139\":1}}],[\"cacheselectdata\",{\"1\":{\"118\":1}}],[\"cacheruledata\",{\"1\":{\"118\":1,\"162\":3}}],[\"cacheplugindata\",{\"1\":{\"118\":1,\"161\":2}}],[\"cacheconfigdata\",{\"1\":{\"105\":1}}],[\"cacheconfig\",{\"1\":{\"105\":3}}],[\"cachetcctransaction\",{\"1\":{\"40\":4}}],[\"cacheloader<string\",{\"1\":{\"40\":1}}],[\"cacheloader\",{\"1\":{\"40\":1}}],[\"cachebuilder\",{\"1\":{\"40\":2}}],[\"cache\",{\"0\":{\"39\":1,\"40\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1},\"1\":{\"39\":1,\"40\":17,\"48\":6,\"87\":3,\"91\":8,\"97\":6,\"99\":1,\"100\":1,\"101\":3,\"104\":7,\"105\":1,\"117\":2,\"118\":1,\"122\":1,\"123\":1,\"124\":3,\"126\":1,\"133\":2,\"135\":1,\"136\":1,\"137\":4,\"138\":1,\"139\":8,\"161\":1,\"173\":1,\"174\":2,\"175\":2,\"176\":1,\"195\":1,\"217\":1,\"317\":1}}],[\"cacheddefaultname\",{\"1\":{\"139\":1}}],[\"cachedclasses\",{\"0\":{\"136\":1},\"1\":{\"134\":1,\"136\":5,\"139\":5}}],[\"cachedinstances\",{\"0\":{\"135\":1},\"1\":{\"134\":1,\"135\":2,\"139\":6}}],[\"cached\",{\"1\":{\"38\":1,\"81\":1,\"136\":1}}],[\"calendar\",{\"1\":{\"294\":2}}],[\"calcite\",{\"1\":{\"287\":1}}],[\"calculation\",{\"1\":{\"177\":1,\"200\":2,\"218\":1}}],[\"calculating\",{\"1\":{\"91\":1}}],[\"calculatetotalweight\",{\"1\":{\"177\":1}}],[\"calculated\",{\"1\":{\"177\":1,\"199\":1,\"211\":1,\"218\":1}}],[\"calculate\",{\"1\":{\"90\":1,\"200\":4}}],[\"callback\",{\"1\":{\"92\":2}}],[\"calling\",{\"0\":{\"184\":1},\"1\":{\"80\":1,\"83\":1,\"100\":1,\"104\":2,\"120\":1,\"142\":1,\"165\":1,\"179\":1,\"183\":1,\"231\":2,\"241\":1}}],[\"called\",{\"1\":{\"48\":1,\"68\":1,\"77\":1,\"84\":1,\"86\":3,\"87\":1,\"92\":1,\"100\":3,\"108\":1,\"112\":1,\"118\":6,\"123\":4,\"126\":1,\"129\":1,\"135\":1,\"156\":1,\"179\":1,\"180\":1,\"184\":1,\"221\":1,\"234\":2,\"235\":1,\"242\":3,\"306\":1,\"316\":1}}],[\"callers\",{\"1\":{\"132\":1}}],[\"callercl\",{\"1\":{\"127\":1}}],[\"caller\",{\"1\":{\"30\":2,\"86\":1,\"127\":1,\"179\":2,\"270\":1,\"280\":1}}],[\"calls\",{\"0\":{\"231\":1,\"232\":1,\"233\":1,\"240\":1,\"241\":1},\"1\":{\"33\":2,\"39\":1,\"43\":1,\"48\":1,\"85\":1,\"86\":1,\"89\":1,\"92\":3,\"98\":1,\"100\":2,\"101\":1,\"118\":3,\"122\":1,\"151\":1,\"156\":1,\"180\":2,\"185\":2,\"213\":1,\"219\":2,\"220\":1,\"221\":1,\"224\":4,\"225\":2,\"268\":1,\"277\":1}}],[\"call\",{\"0\":{\"30\":1,\"118\":1,\"197\":1,\"234\":1,\"235\":1,\"236\":1},\"1\":{\"4\":1,\"29\":1,\"77\":1,\"86\":1,\"87\":2,\"92\":3,\"97\":1,\"100\":4,\"101\":1,\"104\":6,\"105\":2,\"106\":1,\"117\":1,\"118\":2,\"120\":1,\"122\":3,\"123\":6,\"124\":2,\"128\":1,\"129\":2,\"138\":1,\"139\":1,\"151\":2,\"155\":2,\"156\":1,\"179\":6,\"180\":3,\"181\":2,\"183\":3,\"184\":3,\"185\":5,\"193\":1,\"197\":1,\"198\":2,\"200\":8,\"201\":1,\"212\":1,\"213\":2,\"214\":1,\"220\":1,\"224\":3,\"226\":1,\"232\":1,\"234\":2,\"235\":1,\"236\":2,\"237\":1,\"241\":4,\"242\":2,\"243\":2,\"274\":1,\"305\":2,\"306\":1,\"312\":1}}],[\"categories\",{\"1\":{\"85\":1}}],[\"catch\",{\"1\":{\"36\":1,\"40\":1,\"82\":1,\"104\":2,\"105\":2,\"114\":2,\"123\":3,\"126\":2,\"127\":1,\"129\":3,\"139\":2,\"176\":2,\"242\":3}}],[\"card\",{\"1\":{\"321\":1}}],[\"care\",{\"1\":{\"280\":1,\"281\":1,\"305\":1}}],[\"carefully\",{\"1\":{\"80\":1}}],[\"carrying\",{\"1\":{\"294\":1}}],[\"carry\",{\"1\":{\"211\":1,\"226\":1}}],[\"carried\",{\"1\":{\"16\":1}}],[\"causes\",{\"1\":{\"210\":1,\"211\":1,\"214\":1}}],[\"caused\",{\"1\":{\"164\":2,\"210\":2}}],[\"cause\",{\"1\":{\"40\":1,\"84\":1,\"131\":2,\"212\":1,\"276\":1,\"306\":1,\"308\":1,\"319\":1}}],[\"cas\",{\"1\":{\"104\":1}}],[\"cases\",{\"1\":{\"113\":2,\"211\":1,\"276\":1,\"321\":1}}],[\"case\",{\"1\":{\"30\":1,\"38\":1,\"97\":5,\"99\":1,\"101\":1,\"110\":1,\"111\":5,\"113\":5,\"118\":5,\"156\":1,\"165\":1,\"182\":2,\"191\":1,\"210\":1,\"220\":1,\"321\":3}}],[\"cast\",{\"1\":{\"28\":1,\"123\":1}}],[\"cancelmethod\",{\"1\":{\"280\":2}}],[\"cancel\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"29\":1,\"30\":1,\"33\":4,\"36\":3,\"100\":2,\"247\":1,\"253\":1,\"276\":1,\"280\":3,\"281\":2,\"288\":1}}],[\"cannot\",{\"1\":{\"8\":1,\"48\":1,\"80\":1,\"123\":2,\"156\":1,\"164\":4,\"183\":4,\"184\":2,\"213\":1,\"247\":1,\"253\":1,\"321\":1}}],[\"can\",{\"0\":{\"139\":1},\"1\":{\"5\":1,\"9\":1,\"32\":1,\"33\":1,\"35\":1,\"38\":1,\"43\":1,\"46\":1,\"48\":6,\"54\":1,\"59\":1,\"61\":1,\"64\":1,\"68\":3,\"69\":4,\"71\":2,\"72\":4,\"74\":1,\"80\":2,\"81\":2,\"84\":1,\"85\":1,\"86\":2,\"87\":1,\"89\":1,\"91\":1,\"97\":2,\"98\":1,\"99\":1,\"100\":1,\"104\":1,\"106\":3,\"108\":1,\"109\":1,\"110\":1,\"112\":3,\"113\":1,\"114\":1,\"116\":1,\"121\":1,\"123\":3,\"124\":2,\"126\":1,\"127\":1,\"129\":1,\"130\":1,\"132\":1,\"134\":1,\"135\":1,\"139\":2,\"151\":1,\"155\":2,\"176\":2,\"179\":5,\"180\":1,\"182\":1,\"184\":1,\"185\":1,\"189\":2,\"191\":1,\"192\":1,\"197\":2,\"200\":1,\"201\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":3,\"212\":6,\"214\":5,\"217\":1,\"231\":1,\"253\":4,\"256\":1,\"280\":2,\"286\":2,\"290\":2,\"305\":1,\"306\":1,\"308\":5,\"310\":1,\"315\":1,\"316\":5,\"317\":1,\"319\":5,\"322\":1,\"328\":1,\"329\":2}}],[\"cos\",{\"1\":{\"322\":2}}],[\"cost\",{\"1\":{\"288\":2}}],[\"coffee\",{\"1\":{\"256\":1}}],[\"copyoptions\",{\"1\":{\"294\":1}}],[\"copyonwritearraylist<>\",{\"1\":{\"126\":1}}],[\"copyonwritearraylist<driverinfo>\",{\"1\":{\"126\":1}}],[\"copyonwritearrayset<>\",{\"1\":{\"114\":1}}],[\"copyright\",{\"1\":{\"254\":1}}],[\"copy\",{\"1\":{\"237\":1,\"290\":1}}],[\"column\",{\"1\":{\"293\":2}}],[\"cold\",{\"1\":{\"211\":2}}],[\"colons\",{\"1\":{\"176\":2}}],[\"collate\",{\"1\":{\"226\":10}}],[\"collaborations\",{\"1\":{\"104\":1}}],[\"collector\",{\"1\":{\"116\":1}}],[\"collectors\",{\"1\":{\"86\":1,\"147\":2,\"165\":1,\"179\":1,\"207\":1,\"214\":4}}],[\"collect\",{\"1\":{\"86\":1,\"117\":1,\"118\":1,\"147\":2,\"165\":1,\"179\":1,\"207\":1,\"214\":4}}],[\"collection<datachangedlistener>\",{\"1\":{\"111\":1,\"156\":1,\"165\":1}}],[\"collection<selectordata>\",{\"1\":{\"85\":1,\"172\":1,\"182\":1}}],[\"collection\",{\"1\":{\"97\":1,\"100\":1,\"114\":1,\"133\":1,\"292\":1}}],[\"collectionutils\",{\"1\":{\"85\":2,\"97\":1,\"104\":1,\"118\":1,\"161\":1,\"162\":1,\"182\":2,\"183\":1}}],[\"collections\",{\"1\":{\"79\":2,\"80\":2,\"81\":2,\"82\":1,\"86\":1,\"100\":1,\"109\":1,\"111\":1,\"117\":2,\"156\":1,\"161\":2,\"165\":2,\"166\":2,\"207\":2}}],[\"collectively\",{\"0\":{\"41\":1}}],[\"collocation\",{\"1\":{\"70\":1}}],[\"coobird\",{\"1\":{\"328\":1}}],[\"cooperate\",{\"1\":{\"225\":1,\"254\":1,\"285\":1}}],[\"cookies\",{\"1\":{\"93\":1,\"185\":1}}],[\"coordinatorservice\",{\"1\":{\"35\":9,\"40\":6}}],[\"coordinator\",{\"1\":{\"35\":1,\"40\":1}}],[\"coordinating\",{\"1\":{\"6\":1}}],[\"corporation\",{\"1\":{\"155\":1}}],[\"cornerstone\",{\"1\":{\"321\":1}}],[\"corner\",{\"1\":{\"48\":1}}],[\"correspond\",{\"1\":{\"72\":1,\"113\":1}}],[\"corresponding\",{\"0\":{\"191\":1,\"193\":1,\"195\":1},\"1\":{\"48\":7,\"56\":1,\"72\":1,\"82\":1,\"101\":2,\"105\":2,\"112\":2,\"113\":1,\"117\":1,\"118\":2,\"124\":1,\"129\":1,\"137\":2,\"139\":1,\"156\":1,\"172\":2,\"175\":1,\"177\":1,\"182\":3,\"183\":4,\"185\":2,\"189\":1,\"195\":5,\"199\":1,\"234\":2,\"324\":2,\"326\":1,\"328\":1}}],[\"corresponds\",{\"1\":{\"48\":1,\"69\":1,\"81\":1,\"82\":1,\"112\":1,\"214\":1}}],[\"correct\",{\"1\":{\"38\":1,\"151\":1}}],[\"core\",{\"1\":{\"14\":1,\"33\":1,\"35\":7,\"36\":4,\"40\":3,\"43\":1,\"57\":1,\"69\":2,\"87\":1,\"91\":1,\"92\":1,\"132\":1,\"164\":1,\"179\":1,\"185\":1,\"189\":2,\"200\":1,\"207\":3,\"210\":1,\"211\":2,\"212\":1,\"221\":2,\"225\":1,\"241\":1,\"275\":1,\"284\":4,\"292\":7,\"293\":14,\"294\":12,\"325\":1}}],[\"couldn\",{\"1\":{\"256\":1}}],[\"could\",{\"1\":{\"57\":1,\"123\":1,\"124\":2,\"306\":1}}],[\"course\",{\"1\":{\"33\":1,\"43\":1,\"48\":1,\"89\":1}}],[\"counting\",{\"1\":{\"213\":1}}],[\"counter\",{\"1\":{\"189\":1}}],[\"count\",{\"1\":{\"33\":3,\"40\":2,\"129\":8,\"172\":2,\"183\":1,\"184\":1,\"200\":4,\"214\":1,\"218\":1}}],[\"codes\",{\"1\":{\"129\":1}}],[\"code\",{\"0\":{\"7\":1,\"12\":1,\"13\":1,\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"54\":1,\"76\":1,\"139\":1,\"170\":1,\"194\":2,\"207\":1,\"221\":1},\"1\":{\"8\":2,\"12\":1,\"14\":1,\"16\":1,\"22\":1,\"25\":2,\"32\":2,\"34\":1,\"42\":1,\"48\":12,\"81\":1,\"85\":1,\"88\":1,\"92\":1,\"96\":1,\"100\":3,\"105\":2,\"111\":1,\"113\":2,\"120\":2,\"121\":1,\"122\":1,\"123\":1,\"126\":2,\"129\":1,\"139\":1,\"159\":1,\"179\":2,\"182\":1,\"183\":1,\"184\":1,\"185\":2,\"193\":1,\"195\":3,\"197\":2,\"199\":1,\"200\":3,\"207\":2,\"209\":1,\"214\":4,\"216\":1,\"219\":1,\"220\":1,\"221\":1,\"241\":1,\"247\":2,\"248\":1,\"268\":1,\"271\":1,\"275\":3,\"286\":4,\"290\":4,\"295\":1,\"306\":1,\"317\":1,\"321\":4,\"322\":1,\"328\":1}}],[\"conn\",{\"1\":{\"129\":4}}],[\"connecttimeoutexception\",{\"1\":{\"184\":1}}],[\"connectable\",{\"1\":{\"176\":1}}],[\"connectstring=localhost\",{\"1\":{\"155\":1}}],[\"connected\",{\"1\":{\"81\":1,\"114\":1,\"116\":1,\"176\":2}}],[\"connect\",{\"1\":{\"48\":1,\"106\":1,\"127\":3,\"176\":1}}],[\"connectivity\",{\"1\":{\"176\":1}}],[\"connectiontimeout\",{\"1\":{\"154\":2,\"280\":1}}],[\"connections\",{\"1\":{\"48\":1,\"65\":2,\"117\":1}}],[\"connection\",{\"0\":{\"195\":1},\"1\":{\"48\":3,\"57\":1,\"81\":1,\"82\":1,\"100\":1,\"114\":3,\"116\":1,\"117\":1,\"126\":1,\"127\":5,\"129\":2,\"155\":3,\"156\":1,\"176\":1,\"195\":4,\"229\":1}}],[\"connecting\",{\"1\":{\"48\":1,\"322\":1}}],[\"con\",{\"1\":{\"127\":3}}],[\"conversion\",{\"1\":{\"226\":1,\"234\":2,\"293\":1,\"294\":3,\"305\":1}}],[\"converting\",{\"1\":{\"234\":1,\"292\":1}}],[\"converts\",{\"1\":{\"234\":1}}],[\"converted\",{\"1\":{\"156\":1}}],[\"convert\",{\"1\":{\"104\":1,\"118\":1,\"147\":1,\"225\":1,\"234\":1}}],[\"conveniently\",{\"1\":{\"329\":1}}],[\"convenient\",{\"0\":{\"302\":1},\"1\":{\"219\":1,\"289\":1,\"305\":1,\"306\":1}}],[\"convenience\",{\"1\":{\"48\":1,\"328\":3}}],[\"conditionalonclass\",{\"1\":{\"117\":1,\"166\":1}}],[\"conditionalonbean\",{\"1\":{\"100\":1,\"156\":1}}],[\"conditionalonmissingbean\",{\"1\":{\"97\":1,\"112\":7,\"116\":1,\"156\":4}}],[\"conditionalonproperty\",{\"1\":{\"97\":1,\"112\":5,\"116\":1,\"117\":1,\"156\":1,\"166\":1}}],[\"condition\",{\"1\":{\"48\":1,\"70\":3,\"80\":1,\"82\":1,\"83\":2,\"85\":1,\"212\":1}}],[\"conditions\",{\"0\":{\"247\":1},\"1\":{\"48\":1,\"70\":2,\"164\":1}}],[\"conducted\",{\"1\":{\"48\":1}}],[\"conduct\",{\"0\":{\"7\":1}}],[\"concatmap\",{\"1\":{\"207\":1}}],[\"concat\",{\"1\":{\"147\":1}}],[\"concrete\",{\"1\":{\"131\":1,\"139\":1}}],[\"conclusions\",{\"1\":{\"85\":1,\"101\":1}}],[\"concept\",{\"1\":{\"88\":1,\"89\":1}}],[\"concepts\",{\"1\":{\"69\":1}}],[\"concern\",{\"1\":{\"38\":1}}],[\"concurrency\",{\"0\":{\"33\":1,\"35\":1},\"1\":{\"33\":8,\"211\":3,\"311\":1}}],[\"concurrentmap<string\",{\"1\":{\"91\":2,\"97\":1}}],[\"concurrentskiplistmap<>\",{\"1\":{\"89\":1}}],[\"concurrentskiplistmap<long\",{\"1\":{\"89\":1}}],[\"concurrenthashmap<>\",{\"1\":{\"82\":1,\"91\":2,\"97\":1,\"132\":1,\"134\":2,\"135\":1,\"137\":1}}],[\"concurrent\",{\"0\":{\"27\":1,\"28\":1},\"1\":{\"35\":6,\"36\":5,\"40\":1,\"214\":2}}],[\"congratulations\",{\"1\":{\"38\":1}}],[\"conflicts\",{\"1\":{\"284\":1}}],[\"conf>\",{\"1\":{\"280\":1}}],[\"conf\",{\"1\":{\"155\":1,\"221\":6,\"280\":1}}],[\"confused\",{\"1\":{\"118\":1,\"124\":1}}],[\"confusion\",{\"1\":{\"28\":1,\"306\":1}}],[\"configmode\",{\"1\":{\"280\":3}}],[\"configinfo\",{\"1\":{\"165\":2,\"166\":2}}],[\"configeventlistener\",{\"1\":{\"156\":1}}],[\"configdata\",{\"1\":{\"113\":6}}],[\"configdata<\",{\"1\":{\"105\":1}}],[\"configdata<t>\",{\"1\":{\"104\":1}}],[\"configdatacache\",{\"1\":{\"97\":3}}],[\"configdatacache>\",{\"1\":{\"97\":1}}],[\"configservice\",{\"1\":{\"112\":3,\"165\":1,\"166\":4,\"280\":1}}],[\"configs\",{\"1\":{\"100\":1,\"104\":4,\"105\":3,\"123\":5}}],[\"configcontroller\",{\"1\":{\"100\":2}}],[\"configgroupenum\",{\"1\":{\"79\":1,\"81\":1,\"97\":2,\"98\":1,\"100\":1,\"104\":10,\"105\":4,\"109\":1,\"110\":1,\"113\":5,\"117\":9,\"156\":3,\"165\":1}}],[\"config\",{\"1\":{\"33\":6,\"43\":8,\"48\":7,\"56\":1,\"77\":1,\"97\":1,\"104\":5,\"105\":1,\"155\":1,\"156\":2,\"280\":3,\"284\":2}}],[\"configures\",{\"1\":{\"97\":1}}],[\"configured\",{\"1\":{\"35\":1,\"48\":2,\"57\":1,\"68\":1,\"72\":2,\"86\":1,\"135\":1,\"151\":1,\"164\":1,\"200\":1,\"207\":1,\"214\":3,\"317\":1}}],[\"configure\",{\"0\":{\"146\":1},\"1\":{\"33\":4,\"43\":1,\"46\":1,\"48\":1,\"59\":1,\"64\":1,\"72\":1,\"117\":1,\"164\":1,\"201\":1,\"205\":1,\"209\":1,\"212\":2,\"243\":1,\"268\":1}}],[\"configuring\",{\"1\":{\"33\":2}}],[\"configurationclassenhancer\",{\"1\":{\"164\":1}}],[\"configurationclassenhancer$beanmethodinterceptor\",{\"1\":{\"164\":1}}],[\"configurationproperties\",{\"1\":{\"117\":1,\"156\":3,\"166\":1}}],[\"configuration\",{\"0\":{\"33\":1,\"49\":1,\"96\":1,\"127\":1,\"154\":1,\"195\":1,\"202\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"280\":1,\"324\":1,\"326\":1},\"1\":{\"33\":2,\"34\":1,\"38\":1,\"43\":4,\"48\":8,\"57\":1,\"68\":1,\"71\":2,\"72\":1,\"74\":2,\"86\":2,\"88\":2,\"96\":4,\"97\":2,\"100\":1,\"101\":1,\"107\":1,\"110\":1,\"112\":10,\"116\":5,\"117\":4,\"123\":1,\"154\":2,\"156\":6,\"161\":3,\"164\":8,\"166\":3,\"174\":1,\"183\":1,\"191\":1,\"192\":1,\"195\":7,\"201\":1,\"202\":1,\"205\":1,\"206\":2,\"207\":1,\"212\":8,\"213\":4,\"214\":8,\"218\":2,\"219\":2,\"220\":1,\"221\":3,\"224\":4,\"229\":1,\"270\":2,\"272\":1,\"275\":3,\"277\":1,\"280\":6,\"285\":2,\"287\":3,\"315\":1,\"324\":4,\"326\":3}}],[\"configurations\",{\"1\":{\"29\":1,\"74\":1,\"212\":1,\"214\":7,\"305\":1,\"317\":1}}],[\"confirmmethod\",{\"1\":{\"280\":2}}],[\"confirms\",{\"1\":{\"85\":1}}],[\"confirm\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"29\":1,\"33\":4,\"36\":3,\"40\":1,\"86\":1,\"253\":1,\"276\":1,\"280\":3,\"281\":1,\"306\":1}}],[\"consume\",{\"1\":{\"199\":1,\"200\":1}}],[\"consumers\",{\"1\":{\"35\":7}}],[\"consumer\",{\"0\":{\"241\":1},\"1\":{\"33\":2,\"35\":1,\"234\":2,\"240\":1,\"241\":1,\"242\":1,\"243\":1}}],[\"consumerthreads\",{\"1\":{\"33\":3,\"43\":2,\"280\":1}}],[\"consumption\",{\"1\":{\"101\":1,\"122\":1,\"123\":1,\"317\":1}}],[\"console\",{\"1\":{\"48\":1,\"57\":1,\"61\":1,\"64\":1,\"66\":1,\"72\":1,\"74\":1,\"156\":1,\"218\":2,\"219\":1}}],[\"constant\",{\"1\":{\"211\":1}}],[\"constants\",{\"1\":{\"87\":2,\"92\":1,\"93\":1,\"151\":2,\"172\":3,\"176\":2,\"180\":1,\"183\":4,\"184\":7,\"185\":1,\"214\":3,\"219\":11,\"221\":1,\"236\":3,\"237\":4,\"238\":1}}],[\"constantly\",{\"1\":{\"48\":1,\"105\":1}}],[\"constructed\",{\"1\":{\"116\":1}}],[\"construct\",{\"1\":{\"82\":1,\"104\":1,\"117\":1,\"139\":3,\"329\":1}}],[\"constructorresolver\",{\"1\":{\"164\":2}}],[\"constructor\",{\"1\":{\"48\":1,\"86\":1}}],[\"construction\",{\"0\":{\"295\":1},\"1\":{\"14\":1,\"293\":1}}],[\"constraints\",{\"1\":{\"46\":1,\"254\":1}}],[\"consciousness\",{\"1\":{\"16\":1}}],[\"consistency\",{\"1\":{\"30\":1}}],[\"consistent\",{\"1\":{\"4\":1,\"177\":2,\"179\":1,\"180\":2,\"195\":1,\"212\":1,\"254\":1}}],[\"considers\",{\"1\":{\"210\":1}}],[\"considered\",{\"1\":{\"104\":1,\"321\":1}}],[\"considering\",{\"1\":{\"40\":1,\"182\":1,\"195\":1,\"211\":1,\"253\":1}}],[\"consider\",{\"1\":{\"9\":1,\"38\":1,\"99\":1,\"101\":1,\"211\":3,\"214\":1,\"256\":1,\"321\":1}}],[\"container\",{\"1\":{\"86\":1,\"112\":2,\"156\":5,\"161\":3,\"165\":1,\"166\":2,\"247\":1}}],[\"contains\",{\"1\":{\"86\":1}}],[\"contacting\",{\"1\":{\"256\":1}}],[\"contact\",{\"0\":{\"10\":1},\"1\":{\"5\":1,\"135\":1,\"247\":1,\"250\":1,\"253\":2,\"256\":1}}],[\"contribute\",{\"1\":{\"282\":1,\"295\":1}}],[\"contributions\",{\"1\":{\"46\":1}}],[\"contrast\",{\"1\":{\"217\":1}}],[\"contract\",{\"0\":{\"127\":1}}],[\"controlled\",{\"1\":{\"211\":1,\"317\":1}}],[\"controller\",{\"1\":{\"48\":2,\"59\":2,\"100\":1,\"101\":1,\"219\":9,\"264\":1}}],[\"control\",{\"0\":{\"211\":1,\"214\":1},\"1\":{\"100\":1,\"209\":4,\"211\":8,\"212\":5,\"214\":26,\"317\":1}}],[\"contexttransmittalmode\",{\"1\":{\"280\":1}}],[\"contextpath\",{\"1\":{\"59\":1,\"72\":4,\"79\":6,\"80\":3,\"81\":9,\"180\":1,\"226\":1}}],[\"context\",{\"1\":{\"36\":2,\"39\":6,\"85\":1,\"86\":1,\"87\":5,\"92\":1,\"93\":1,\"100\":1,\"151\":2,\"164\":2,\"180\":1,\"183\":2,\"184\":1,\"185\":1,\"207\":4,\"211\":1,\"214\":1,\"221\":1,\"236\":2,\"242\":1}}],[\"contents\",{\"1\":{\"161\":1,\"162\":1}}],[\"contenttype\",{\"1\":{\"92\":1,\"184\":2}}],[\"content\",{\"1\":{\"16\":1,\"33\":1,\"175\":1,\"230\":1,\"280\":1}}],[\"continuing\",{\"1\":{\"80\":1}}],[\"continues\",{\"1\":{\"212\":1,\"321\":1}}],[\"continued\",{\"1\":{\"80\":1}}],[\"continue\",{\"1\":{\"9\":1,\"74\":1,\"86\":1,\"87\":1,\"91\":1,\"92\":1,\"96\":1,\"98\":1,\"101\":1,\"105\":1,\"106\":1,\"110\":2,\"128\":1,\"151\":1,\"159\":1,\"172\":2,\"175\":1,\"213\":2}}],[\"continuously\",{\"1\":{\"48\":1,\"199\":1,\"247\":1}}],[\"continuous\",{\"1\":{\"8\":1,\"256\":1}}],[\"co\",{\"0\":{\"295\":1},\"1\":{\"2\":1}}],[\"comfortable\",{\"1\":{\"321\":1}}],[\"comforyo\",{\"1\":{\"256\":1}}],[\"combine\",{\"1\":{\"321\":1}}],[\"combinedexecutor\",{\"1\":{\"221\":4}}],[\"combined\",{\"1\":{\"70\":1,\"180\":1,\"213\":1,\"221\":3}}],[\"combing\",{\"1\":{\"185\":1,\"195\":1}}],[\"combed\",{\"1\":{\"179\":2,\"187\":1,\"197\":1}}],[\"come\",{\"1\":{\"86\":1,\"113\":1,\"135\":1,\"282\":1,\"295\":1}}],[\"comes\",{\"1\":{\"86\":1,\"92\":1,\"112\":1,\"119\":1,\"176\":1,\"189\":1,\"199\":1,\"211\":2}}],[\"com\",{\"0\":{\"42\":1},\"1\":{\"28\":2,\"33\":7,\"35\":15,\"36\":7,\"40\":8,\"43\":7,\"46\":2,\"49\":1,\"52\":1,\"57\":1,\"126\":1,\"129\":1,\"130\":1,\"164\":2,\"182\":1,\"233\":1,\"237\":1,\"248\":2,\"261\":1,\"271\":2,\"280\":1,\"282\":2,\"288\":2,\"295\":2,\"301\":2,\"306\":1,\"311\":2,\"321\":1,\"322\":2,\"326\":1,\"328\":1,\"329\":4,\"331\":2}}],[\"commodity\",{\"1\":{\"308\":1,\"319\":1}}],[\"commonconstants\",{\"1\":{\"237\":1,\"241\":1,\"242\":1}}],[\"commonplugindatasubscriber\",{\"1\":{\"118\":1}}],[\"commonplugindata\",{\"1\":{\"118\":1}}],[\"commons\",{\"1\":{\"40\":1}}],[\"common\",{\"1\":{\"22\":1,\"33\":6,\"35\":3,\"36\":3,\"40\":5,\"43\":4,\"57\":1,\"84\":1,\"130\":2,\"164\":2,\"189\":1,\"322\":1}}],[\"comma\",{\"1\":{\"226\":1}}],[\"commandlinerunner\",{\"1\":{\"156\":2}}],[\"commandline\",{\"1\":{\"156\":2}}],[\"communicate\",{\"1\":{\"253\":2}}],[\"communication\",{\"1\":{\"117\":2,\"118\":2}}],[\"community\",{\"0\":{\"2\":1,\"252\":1,\"282\":1,\"285\":1,\"286\":1,\"295\":1,\"322\":1},\"1\":{\"2\":1,\"3\":1,\"5\":1,\"6\":4,\"7\":5,\"8\":2,\"9\":4,\"14\":3,\"15\":2,\"19\":1,\"22\":1,\"25\":1,\"28\":1,\"29\":1,\"247\":2,\"252\":4,\"253\":2,\"254\":6,\"256\":4,\"272\":1,\"275\":1,\"282\":1,\"285\":3,\"286\":1,\"302\":1,\"322\":1}}],[\"committers\",{\"1\":{\"249\":2}}],[\"committed\",{\"1\":{\"9\":1}}],[\"committee\",{\"0\":{\"255\":1},\"1\":{\"8\":1,\"254\":3}}],[\"commented\",{\"1\":{\"48\":3}}],[\"comment\",{\"1\":{\"48\":1,\"86\":1,\"226\":12}}],[\"comments\",{\"1\":{\"8\":1,\"200\":1,\"247\":1}}],[\"commercialization\",{\"1\":{\"7\":1}}],[\"completablefuture\",{\"1\":{\"234\":2}}],[\"completablefuture<object>\",{\"1\":{\"234\":2,\"237\":1}}],[\"completely\",{\"1\":{\"288\":1,\"305\":1,\"312\":1,\"317\":1,\"321\":1}}],[\"completedfuture\",{\"1\":{\"234\":1}}],[\"completed\",{\"1\":{\"80\":1,\"96\":1,\"100\":1,\"151\":1,\"198\":1,\"200\":1,\"305\":1}}],[\"completes\",{\"1\":{\"32\":1,\"81\":1,\"184\":1}}],[\"complete\",{\"1\":{\"8\":1,\"92\":1,\"100\":4,\"123\":1,\"155\":2,\"179\":1,\"210\":1,\"247\":1,\"254\":1,\"289\":1,\"308\":1,\"319\":1}}],[\"complexity\",{\"1\":{\"133\":1}}],[\"complex\",{\"1\":{\"131\":1,\"274\":1,\"312\":1,\"317\":1}}],[\"complicated\",{\"1\":{\"91\":1,\"182\":1}}],[\"companies\",{\"1\":{\"308\":1,\"319\":1}}],[\"company\",{\"0\":{\"309\":1,\"320\":1},\"1\":{\"306\":1,\"309\":2,\"320\":2}}],[\"compatibility\",{\"1\":{\"281\":1,\"292\":12,\"294\":2}}],[\"compatible\",{\"1\":{\"31\":1,\"292\":1,\"322\":1}}],[\"comparingindexed\",{\"1\":{\"293\":1}}],[\"comparingint\",{\"1\":{\"86\":1,\"179\":1,\"207\":1}}],[\"comparison\",{\"1\":{\"101\":1,\"105\":1}}],[\"comparator\",{\"1\":{\"86\":1,\"147\":1,\"165\":1,\"179\":1,\"207\":1}}],[\"compareutil\",{\"1\":{\"293\":1}}],[\"compared\",{\"1\":{\"121\":1,\"226\":1}}],[\"comparechangedgroup\",{\"1\":{\"100\":2}}],[\"compareandset\",{\"1\":{\"91\":1,\"104\":1}}],[\"compare\",{\"1\":{\"65\":1,\"89\":1,\"99\":1,\"101\":1}}],[\"compilation\",{\"1\":{\"48\":1,\"217\":1}}],[\"compiled\",{\"1\":{\"48\":1}}],[\"compile\",{\"0\":{\"54\":1},\"1\":{\"42\":1,\"54\":1}}],[\"composed\",{\"1\":{\"69\":1,\"254\":1}}],[\"composition\",{\"1\":{\"4\":1}}],[\"components\",{\"1\":{\"209\":1}}],[\"component\",{\"1\":{\"35\":2,\"36\":2,\"43\":1,\"111\":1,\"112\":1,\"156\":2,\"209\":2,\"212\":1,\"214\":2,\"221\":3}}],[\"comprehensive\",{\"1\":{\"2\":1}}],[\"wget\",{\"1\":{\"314\":1}}],[\"wu\",{\"1\":{\"256\":1}}],[\"wyj\",{\"1\":{\"256\":1}}],[\"ws\",{\"1\":{\"96\":1,\"315\":1}}],[\"wrong\",{\"1\":{\"151\":1}}],[\"wrote\",{\"1\":{\"129\":1,\"309\":1,\"320\":1,\"321\":2}}],[\"wrapper\",{\"0\":{\"180\":1}}],[\"wrapping\",{\"1\":{\"100\":1}}],[\"wrap\",{\"1\":{\"121\":1}}],[\"wrk\",{\"1\":{\"65\":3}}],[\"writing\",{\"1\":{\"86\":1,\"129\":2,\"253\":1,\"288\":1,\"321\":1}}],[\"written\",{\"1\":{\"48\":1,\"80\":1,\"122\":1,\"309\":1,\"320\":1,\"324\":2}}],[\"writewith\",{\"1\":{\"93\":1,\"185\":1}}],[\"write\",{\"0\":{\"35\":1},\"1\":{\"78\":1,\"80\":1,\"84\":1,\"112\":1,\"121\":1,\"123\":1,\"129\":1,\"249\":1,\"253\":1,\"328\":4}}],[\"writes\",{\"1\":{\"16\":1}}],[\"w\",{\"1\":{\"57\":2,\"164\":2}}],[\"woyun\",{\"1\":{\"322\":1}}],[\"world\",{\"1\":{\"220\":1,\"230\":1,\"280\":6}}],[\"worth\",{\"1\":{\"101\":1}}],[\"word\",{\"1\":{\"69\":1,\"334\":1}}],[\"works\",{\"1\":{\"92\":1}}],[\"work\",{\"1\":{\"61\":3,\"64\":18,\"74\":1,\"83\":1,\"97\":1,\"98\":1,\"120\":1,\"254\":1,\"308\":1,\"319\":1}}],[\"worry\",{\"1\":{\"37\":1,\"87\":1,\"122\":1,\"281\":1,\"288\":1}}],[\"would\",{\"1\":{\"48\":1,\"299\":1,\"309\":1,\"312\":1,\"320\":1}}],[\"won\",{\"1\":{\"30\":1,\"33\":1}}],[\"wang\",{\"1\":{\"321\":1}}],[\"wants\",{\"1\":{\"253\":1,\"309\":1,\"320\":1}}],[\"want\",{\"0\":{\"300\":1},\"1\":{\"112\":1,\"256\":1,\"280\":3,\"282\":1,\"290\":1,\"308\":3,\"316\":4,\"319\":3,\"328\":1}}],[\"water\",{\"1\":{\"211\":2}}],[\"watermark\",{\"1\":{\"182\":1}}],[\"watchmetadata\",{\"1\":{\"161\":1}}],[\"watchappauth\",{\"1\":{\"161\":1}}],[\"watcherplugin\",{\"1\":{\"161\":2}}],[\"watcherall\",{\"1\":{\"161\":3}}],[\"watcherdata\",{\"1\":{\"161\":3,\"164\":1,\"166\":5}}],[\"watcher=org\",{\"1\":{\"155\":1}}],[\"watch\",{\"1\":{\"86\":1,\"162\":1,\"197\":1}}],[\"waitintervalfunctioninopenstate\",{\"1\":{\"218\":1}}],[\"waiting\",{\"1\":{\"99\":1,\"101\":2,\"211\":1,\"214\":2,\"218\":1,\"272\":1}}],[\"waits\",{\"1\":{\"114\":1}}],[\"wait\",{\"1\":{\"92\":1,\"104\":1,\"105\":1,\"211\":1,\"214\":1,\"219\":1}}],[\"wafplugin\",{\"1\":{\"179\":1}}],[\"waf\",{\"1\":{\"85\":2,\"87\":2,\"179\":1,\"312\":1}}],[\"warm\",{\"1\":{\"214\":6}}],[\"warmup\",{\"1\":{\"81\":1}}],[\"warehousing\",{\"1\":{\"80\":1}}],[\"warn\",{\"1\":{\"57\":3,\"104\":2,\"105\":1}}],[\"was\",{\"1\":{\"29\":2,\"33\":2,\"43\":1,\"48\":4,\"73\":1,\"86\":1,\"104\":1,\"105\":1,\"112\":4,\"120\":2,\"124\":1,\"133\":1,\"179\":3,\"184\":1,\"187\":1,\"198\":1,\"290\":2,\"292\":1,\"309\":1,\"320\":1,\"321\":1}}],[\"ways\",{\"1\":{\"65\":1,\"118\":1,\"212\":1,\"321\":1}}],[\"way\",{\"0\":{\"232\":1},\"1\":{\"7\":1,\"43\":1,\"48\":1,\"70\":3,\"98\":1,\"101\":1,\"103\":1,\"105\":1,\"123\":1,\"129\":2,\"131\":1,\"132\":1,\"179\":1,\"211\":2,\"212\":1,\"272\":1,\"290\":2,\"317\":1,\"321\":1}}],[\"white\",{\"1\":{\"101\":1,\"312\":1,\"317\":1}}],[\"while\",{\"1\":{\"100\":1,\"105\":3,\"123\":2,\"126\":1,\"129\":2,\"130\":1,\"139\":1,\"151\":1,\"164\":1,\"210\":1}}],[\"which\",{\"0\":{\"82\":1},\"1\":{\"35\":1,\"40\":1,\"48\":4,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"80\":3,\"81\":2,\"82\":1,\"85\":2,\"90\":1,\"91\":1,\"92\":1,\"97\":2,\"98\":1,\"100\":4,\"101\":2,\"104\":3,\"108\":1,\"112\":1,\"113\":2,\"118\":1,\"119\":2,\"120\":1,\"121\":2,\"122\":1,\"127\":1,\"128\":2,\"131\":1,\"132\":2,\"133\":1,\"134\":1,\"135\":2,\"142\":1,\"151\":1,\"156\":4,\"164\":2,\"166\":1,\"177\":2,\"180\":2,\"182\":1,\"185\":1,\"187\":1,\"193\":1,\"197\":1,\"207\":1,\"210\":1,\"211\":1,\"212\":2,\"214\":4,\"218\":1,\"225\":1,\"280\":1,\"281\":1,\"288\":1,\"290\":1,\"304\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1,\"311\":1,\"319\":1,\"320\":1,\"321\":1,\"328\":1,\"329\":1}}],[\"why\",{\"1\":{\"40\":1,\"48\":1,\"105\":1,\"123\":1,\"127\":1,\"179\":1,\"191\":1,\"235\":1}}],[\"whether\",{\"1\":{\"43\":1,\"70\":1,\"78\":1,\"85\":1,\"86\":2,\"90\":2,\"99\":2,\"101\":2,\"104\":2,\"114\":1,\"128\":1,\"151\":4,\"162\":1,\"164\":1,\"176\":4,\"177\":1,\"184\":1,\"192\":1,\"195\":2,\"197\":1,\"212\":4,\"213\":2,\"214\":1,\"218\":2,\"241\":2,\"242\":1,\"321\":1}}],[\"where\",{\"1\":{\"33\":2,\"48\":1,\"82\":1,\"86\":3,\"87\":1,\"99\":1,\"100\":3,\"101\":1,\"112\":2,\"123\":2,\"124\":1,\"139\":1,\"164\":1,\"173\":1,\"179\":2,\"183\":2,\"200\":1,\"207\":1,\"253\":1,\"307\":1,\"308\":2,\"318\":1,\"319\":2}}],[\"when\",{\"1\":{\"29\":1,\"30\":1,\"33\":2,\"36\":1,\"40\":2,\"43\":1,\"48\":2,\"56\":1,\"66\":1,\"69\":1,\"70\":3,\"77\":1,\"78\":1,\"86\":1,\"90\":1,\"97\":1,\"101\":2,\"104\":2,\"105\":1,\"112\":7,\"113\":2,\"114\":1,\"120\":1,\"123\":4,\"124\":2,\"128\":1,\"129\":1,\"131\":1,\"135\":2,\"138\":1,\"157\":1,\"164\":2,\"171\":1,\"173\":1,\"174\":1,\"180\":5,\"182\":1,\"193\":1,\"195\":3,\"199\":2,\"201\":1,\"205\":2,\"206\":1,\"211\":6,\"212\":5,\"214\":5,\"226\":1,\"231\":1,\"234\":1,\"235\":1,\"276\":1,\"285\":1,\"290\":2,\"292\":1,\"294\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":2,\"317\":1,\"318\":1,\"319\":1,\"320\":2,\"321\":2,\"322\":1,\"328\":1}}],[\"whatever\",{\"1\":{\"308\":1,\"319\":1}}],[\"what\",{\"0\":{\"32\":1,\"37\":1,\"38\":1,\"98\":1,\"217\":1,\"290\":1,\"307\":2,\"318\":2},\"1\":{\"69\":2,\"77\":1,\"81\":1,\"83\":1,\"97\":2,\"98\":1,\"100\":2,\"101\":1,\"105\":1,\"126\":1,\"179\":2,\"180\":1,\"181\":1,\"182\":2,\"195\":1,\"197\":1,\"207\":1,\"211\":3,\"212\":2,\"216\":1,\"316\":3,\"321\":3}}],[\"whole\",{\"1\":{\"119\":1,\"176\":1,\"179\":1,\"181\":1,\"210\":1,\"290\":1}}],[\"whose\",{\"1\":{\"118\":1,\"156\":1}}],[\"who\",{\"1\":{\"16\":1,\"78\":1,\"290\":1}}],[\"wiki\",{\"1\":{\"331\":2,\"336\":3}}],[\"witt\",{\"1\":{\"256\":1}}],[\"within\",{\"1\":{\"173\":1,\"211\":1,\"212\":2,\"213\":2,\"214\":1,\"254\":1}}],[\"withjson\",{\"1\":{\"104\":1}}],[\"withoutfallback\",{\"1\":{\"221\":2}}],[\"without\",{\"1\":{\"48\":3,\"72\":1,\"73\":1,\"105\":1,\"121\":1,\"124\":1,\"134\":1,\"151\":1,\"211\":1,\"212\":1,\"254\":1,\"256\":2,\"308\":1,\"317\":1,\"319\":1,\"326\":1}}],[\"with\",{\"0\":{\"28\":1,\"29\":1,\"53\":1,\"122\":1,\"194\":1,\"218\":1,\"233\":1,\"284\":1},\"1\":{\"9\":1,\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"34\":2,\"38\":1,\"46\":1,\"48\":6,\"69\":1,\"70\":1,\"72\":2,\"78\":1,\"80\":1,\"81\":1,\"82\":2,\"83\":1,\"84\":1,\"85\":1,\"87\":1,\"91\":7,\"97\":1,\"99\":2,\"100\":1,\"101\":3,\"105\":1,\"112\":1,\"118\":1,\"119\":1,\"121\":2,\"123\":1,\"128\":1,\"135\":1,\"137\":1,\"139\":5,\"156\":4,\"164\":2,\"165\":1,\"173\":1,\"179\":1,\"180\":3,\"195\":1,\"197\":1,\"201\":1,\"206\":1,\"207\":3,\"212\":2,\"213\":1,\"214\":4,\"216\":1,\"224\":1,\"226\":2,\"236\":1,\"247\":1,\"249\":1,\"253\":3,\"254\":1,\"268\":1,\"270\":2,\"274\":2,\"280\":1,\"281\":1,\"283\":2,\"284\":1,\"285\":2,\"288\":1,\"290\":1,\"293\":1,\"294\":2,\"295\":1,\"305\":1,\"306\":1,\"309\":1,\"317\":1,\"320\":1,\"321\":1,\"322\":1}}],[\"win\",{\"1\":{\"294\":1}}],[\"wincher\",{\"1\":{\"256\":1}}],[\"window\",{\"1\":{\"189\":2,\"213\":2,\"214\":1,\"218\":2,\"219\":2}}],[\"willing\",{\"1\":{\"295\":1}}],[\"williamsky\",{\"1\":{\"256\":1}}],[\"will\",{\"1\":{\"9\":1,\"16\":1,\"33\":2,\"38\":1,\"40\":2,\"48\":14,\"70\":1,\"72\":1,\"77\":1,\"80\":2,\"81\":2,\"85\":3,\"86\":1,\"87\":1,\"89\":1,\"91\":6,\"92\":2,\"98\":1,\"99\":2,\"100\":4,\"101\":6,\"104\":12,\"105\":4,\"106\":3,\"108\":1,\"113\":4,\"114\":3,\"117\":1,\"120\":1,\"123\":5,\"124\":2,\"126\":1,\"127\":1,\"128\":2,\"129\":1,\"131\":1,\"137\":1,\"151\":2,\"155\":1,\"156\":5,\"157\":3,\"159\":3,\"160\":1,\"161\":2,\"162\":1,\"164\":5,\"165\":5,\"166\":2,\"171\":1,\"174\":1,\"177\":1,\"179\":1,\"182\":5,\"185\":1,\"197\":1,\"199\":1,\"202\":1,\"205\":1,\"209\":2,\"210\":2,\"211\":3,\"212\":6,\"213\":10,\"214\":10,\"217\":1,\"218\":3,\"219\":1,\"221\":1,\"222\":1,\"226\":3,\"235\":1,\"241\":1,\"243\":1,\"248\":1,\"249\":3,\"253\":3,\"254\":3,\"256\":2,\"276\":1,\"280\":1,\"281\":5,\"287\":2,\"288\":2,\"306\":1,\"308\":3,\"311\":1,\"317\":1,\"319\":3,\"328\":1}}],[\"wizard\",{\"1\":{\"4\":1}}],[\"weather\",{\"1\":{\"309\":1,\"320\":1}}],[\"were\",{\"1\":{\"110\":1,\"131\":1,\"187\":1,\"290\":1}}],[\"wechat\",{\"1\":{\"46\":1}}],[\"weightedroundrobin\",{\"1\":{\"91\":13}}],[\"weightedroundrobin>\",{\"1\":{\"91\":2}}],[\"weights\",{\"1\":{\"90\":5,\"91\":2,\"177\":3}}],[\"weight\",{\"1\":{\"81\":1,\"88\":1,\"89\":1,\"90\":9,\"91\":9,\"177\":4}}],[\"weigher<string\",{\"1\":{\"40\":1}}],[\"weigher\",{\"1\":{\"40\":2}}],[\"weikai\",{\"1\":{\"22\":1}}],[\"welcome\",{\"0\":{\"322\":1},\"1\":{\"46\":1,\"83\":1,\"252\":1,\"271\":1,\"321\":1}}],[\"welcomes\",{\"1\":{\"5\":1}}],[\"well\",{\"1\":{\"38\":1,\"69\":1,\"210\":1,\"211\":1,\"254\":1,\"274\":2,\"285\":1,\"308\":1,\"319\":1}}],[\"wentao\",{\"1\":{\"25\":1}}],[\"webdav\",{\"1\":{\"322\":2}}],[\"webflux<\",{\"1\":{\"315\":1}}],[\"webflux\",{\"1\":{\"207\":2}}],[\"webfluxresultutils\",{\"1\":{\"93\":2,\"183\":2,\"184\":1,\"185\":2,\"197\":1,\"214\":1,\"236\":2,\"238\":2}}],[\"webcilent\",{\"1\":{\"187\":1}}],[\"webclientresponseclient\",{\"0\":{\"93\":1}}],[\"webclientresponseplugin\",{\"1\":{\"87\":1,\"164\":1,\"179\":1}}],[\"webclient\",{\"1\":{\"92\":4,\"184\":3}}],[\"webclientplugin\",{\"0\":{\"92\":1},\"1\":{\"61\":1,\"64\":6,\"87\":1,\"179\":1,\"187\":1}}],[\"webhandler\",{\"1\":{\"86\":2,\"207\":3}}],[\"websocket<\",{\"1\":{\"315\":1}}],[\"websocketclient\",{\"1\":{\"117\":1}}],[\"websocketclientsoulwebsocketclient\",{\"1\":{\"117\":1}}],[\"websocketcontroller\",{\"1\":{\"113\":1}}],[\"websocketconfig\",{\"1\":{\"48\":1,\"117\":7}}],[\"websocketcollector\",{\"1\":{\"48\":1,\"98\":1,\"112\":4,\"113\":5,\"114\":2,\"116\":4}}],[\"websocketlistener\",{\"1\":{\"112\":2,\"116\":1}}],[\"websocketdatahandler\",{\"1\":{\"117\":5,\"118\":1}}],[\"websocketdata<metadata>\",{\"1\":{\"113\":1}}],[\"websocketdata<appauthdata>\",{\"1\":{\"113\":1}}],[\"websocketdata<ruledata>\",{\"1\":{\"113\":1}}],[\"websocketdata<selectordata>\",{\"1\":{\"113\":1}}],[\"websocketdata<>\",{\"1\":{\"98\":1,\"113\":5}}],[\"websocketdata<plugindata>\",{\"1\":{\"98\":1,\"113\":1}}],[\"websocketdata\",{\"1\":{\"98\":2,\"113\":4,\"117\":6}}],[\"websocketdatachangedlistener\",{\"1\":{\"48\":3,\"98\":1,\"112\":3,\"113\":2}}],[\"websocketsyncproperties\",{\"1\":{\"112\":1,\"116\":1}}],[\"websocketsyncdataservice\",{\"1\":{\"57\":1,\"117\":3}}],[\"websocketsyncdataconfiguration\",{\"1\":{\"57\":1,\"117\":1}}],[\"websockets\",{\"1\":{\"48\":1}}],[\"websocket\",{\"0\":{\"106\":1},\"1\":{\"25\":1,\"48\":13,\"57\":2,\"83\":3,\"96\":3,\"98\":2,\"112\":5,\"114\":5,\"116\":4,\"117\":8,\"118\":1,\"119\":2,\"180\":1,\"303\":1,\"304\":2,\"310\":1,\"315\":3,\"317\":1}}],[\"websites\",{\"1\":{\"254\":1}}],[\"website\",{\"0\":{\"3\":1},\"1\":{\"3\":1,\"56\":1,\"106\":1,\"162\":1,\"164\":2,\"218\":1,\"250\":1,\"271\":1,\"301\":2,\"315\":1}}],[\"web\",{\"0\":{\"115\":1,\"116\":1,\"117\":1,\"184\":1,\"185\":1,\"239\":1},\"1\":{\"22\":1,\"57\":2,\"68\":1,\"81\":1,\"82\":1,\"86\":1,\"92\":3,\"93\":1,\"98\":1,\"106\":1,\"112\":4,\"113\":3,\"114\":6,\"116\":4,\"117\":3,\"164\":2,\"179\":2,\"184\":1,\"185\":2,\"208\":2,\"224\":1,\"300\":1,\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"we\",{\"1\":{\"16\":1,\"40\":2,\"48\":5,\"68\":3,\"69\":6,\"72\":5,\"73\":1,\"74\":3,\"77\":1,\"78\":1,\"80\":2,\"81\":1,\"83\":1,\"87\":3,\"96\":2,\"97\":1,\"100\":5,\"101\":5,\"106\":2,\"113\":2,\"120\":1,\"122\":1,\"123\":6,\"124\":1,\"127\":3,\"129\":2,\"130\":1,\"131\":1,\"132\":1,\"135\":4,\"164\":2,\"173\":1,\"179\":8,\"180\":2,\"182\":1,\"183\":1,\"184\":1,\"185\":2,\"187\":1,\"189\":1,\"199\":1,\"205\":1,\"206\":1,\"207\":3,\"211\":4,\"212\":12,\"214\":3,\"220\":2,\"226\":1,\"235\":2,\"253\":2,\"282\":1,\"286\":1,\"295\":1,\"305\":1,\"306\":2,\"307\":1,\"317\":1,\"318\":1,\"321\":5,\"326\":1}}],[\"lcn\",{\"1\":{\"321\":1}}],[\"lunar\",{\"1\":{\"294\":1}}],[\"lua\",{\"0\":{\"200\":1},\"1\":{\"197\":2,\"199\":2,\"200\":3}}],[\"l3nvy\",{\"1\":{\"256\":1}}],[\"lfallbackhandler\",{\"1\":{\"214\":1}}],[\"lrulehandle\",{\"1\":{\"214\":1}}],[\"lplugin\",{\"1\":{\"214\":2}}],[\"ls\",{\"1\":{\"165\":3}}],[\"l\",{\"1\":{\"48\":8,\"197\":2,\"256\":1}}],[\"lmax\",{\"1\":{\"35\":5}}],[\"ll\",{\"1\":{\"29\":1,\"235\":1}}],[\"lag\",{\"1\":{\"321\":1}}],[\"launched\",{\"1\":{\"254\":1}}],[\"law\",{\"1\":{\"254\":1}}],[\"lambda\",{\"1\":{\"217\":1,\"293\":1,\"309\":2,\"320\":2}}],[\"lack\",{\"1\":{\"164\":1}}],[\"lazyiterator\",{\"1\":{\"123\":4}}],[\"lazy\",{\"1\":{\"123\":2}}],[\"lazily\",{\"1\":{\"86\":1}}],[\"latter\",{\"1\":{\"120\":1}}],[\"latest\",{\"1\":{\"104\":1,\"287\":1}}],[\"latency\",{\"1\":{\"65\":2}}],[\"later\",{\"0\":{\"272\":1},\"1\":{\"48\":2,\"74\":1,\"80\":1,\"81\":1,\"91\":1,\"92\":1,\"113\":1,\"114\":1,\"151\":1,\"179\":1,\"182\":1,\"193\":1,\"290\":1,\"321\":1,\"323\":1,\"324\":1,\"325\":1}}],[\"latecomers\",{\"1\":{\"16\":1}}],[\"largely\",{\"1\":{\"185\":1}}],[\"large\",{\"1\":{\"91\":1,\"105\":2,\"177\":2,\"199\":1,\"210\":1,\"309\":1,\"312\":1,\"320\":1,\"321\":1,\"328\":1}}],[\"layers\",{\"1\":{\"81\":1,\"134\":1}}],[\"layer\",{\"0\":{\"136\":1},\"1\":{\"65\":1,\"78\":1,\"84\":1,\"101\":1,\"137\":2}}],[\"lang3\",{\"1\":{\"40\":1}}],[\"lang\",{\"1\":{\"36\":1,\"164\":3,\"234\":1}}],[\"language\",{\"1\":{\"15\":1,\"305\":1}}],[\"lastring\",{\"1\":{\"89\":4}}],[\"lastmodifytime=1611248302571\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248301607\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248299419\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248295740\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248419077\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248419075\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248419069\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248419012\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248419010\",{\"1\":{\"48\":1}}],[\"lastmodifytime=1611248118794\",{\"1\":{\"48\":1}}],[\"lastly\",{\"1\":{\"38\":1}}],[\"last\",{\"0\":{\"288\":1,\"311\":1},\"1\":{\"8\":1,\"99\":1,\"100\":2,\"101\":1,\"103\":1,\"131\":1,\"144\":1,\"172\":1,\"198\":2,\"200\":13,\"203\":1,\"211\":1,\"212\":1,\"302\":1}}],[\"lol\",{\"1\":{\"256\":1}}],[\"lot\",{\"1\":{\"120\":1,\"124\":1,\"199\":1,\"221\":1,\"290\":1,\"308\":1,\"319\":1}}],[\"lottery\",{\"1\":{\"38\":1}}],[\"loopholes\",{\"1\":{\"210\":1}}],[\"loop\",{\"1\":{\"91\":1,\"105\":1,\"114\":1,\"309\":1,\"320\":1}}],[\"looks\",{\"1\":{\"156\":1,\"164\":1,\"180\":2}}],[\"lookupiterator\",{\"1\":{\"123\":1}}],[\"looked\",{\"1\":{\"120\":1}}],[\"looking\",{\"1\":{\"73\":1,\"98\":2,\"113\":1,\"126\":1,\"133\":1}}],[\"look\",{\"0\":{\"79\":1,\"82\":1},\"1\":{\"48\":4,\"77\":1,\"82\":1,\"88\":1,\"92\":1,\"97\":1,\"100\":2,\"112\":1,\"120\":3,\"122\":1,\"123\":1,\"126\":1,\"129\":2,\"131\":1,\"132\":1,\"133\":1,\"172\":1,\"173\":1,\"175\":1,\"177\":1,\"181\":1,\"182\":2,\"184\":1,\"207\":1,\"213\":1,\"214\":1,\"309\":2,\"312\":1,\"320\":2,\"321\":1}}],[\"lombok\",{\"1\":{\"43\":1}}],[\"loadrules\",{\"1\":{\"214\":4}}],[\"loadresources\",{\"1\":{\"136\":2,\"139\":2}}],[\"loadbalan\",{\"1\":{\"177\":1}}],[\"loadbalance=\",{\"1\":{\"270\":2}}],[\"loadbalanceutils\",{\"1\":{\"87\":1,\"120\":2,\"172\":1,\"183\":2,\"185\":1}}],[\"loadbalance\",{\"1\":{\"82\":1,\"87\":1,\"120\":5,\"127\":3,\"177\":4}}],[\"loaddirectory\",{\"1\":{\"139\":2}}],[\"loadclass\",{\"1\":{\"136\":1,\"139\":2}}],[\"loads\",{\"1\":{\"128\":1}}],[\"loadinitialdrivers\",{\"1\":{\"126\":2}}],[\"loadingcache<string\",{\"1\":{\"40\":1}}],[\"loadingcache\",{\"1\":{\"40\":1}}],[\"loading\",{\"1\":{\"22\":1,\"40\":5,\"122\":1,\"123\":2,\"178\":1}}],[\"loadextensionclass\",{\"1\":{\"139\":2}}],[\"loaders\",{\"1\":{\"121\":2,\"132\":4}}],[\"loader\",{\"0\":{\"132\":1},\"1\":{\"86\":1,\"123\":9,\"131\":1,\"132\":2,\"133\":1,\"138\":1,\"177\":1,\"178\":1}}],[\"loadeddrivers\",{\"1\":{\"126\":2}}],[\"loaded\",{\"1\":{\"86\":2,\"112\":1,\"122\":1,\"138\":1,\"177\":1,\"321\":1}}],[\"load\",{\"0\":{\"62\":1,\"64\":1,\"74\":1,\"84\":1,\"88\":1,\"177\":1,\"270\":1},\"1\":{\"40\":2,\"64\":1,\"69\":1,\"72\":1,\"74\":1,\"86\":1,\"87\":3,\"88\":1,\"89\":1,\"120\":2,\"121\":1,\"122\":7,\"123\":11,\"124\":1,\"126\":1,\"129\":1,\"132\":1,\"135\":1,\"136\":1,\"139\":3,\"164\":2,\"171\":2,\"172\":4,\"177\":5,\"178\":2,\"183\":2,\"195\":1,\"207\":1,\"225\":1,\"268\":1,\"270\":1,\"292\":1,\"308\":1,\"312\":1,\"319\":1}}],[\"loadfactor\",{\"1\":{\"33\":1,\"43\":1}}],[\"loss\",{\"1\":{\"32\":1}}],[\"locally\",{\"1\":{\"322\":1}}],[\"localdatetime\",{\"1\":{\"147\":2}}],[\"localhost\",{\"1\":{\"56\":1,\"59\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":4,\"73\":2,\"81\":1,\"96\":2,\"108\":1,\"154\":2,\"155\":10,\"164\":2,\"219\":1,\"220\":1,\"314\":1,\"315\":1}}],[\"local\",{\"1\":{\"43\":1,\"48\":2,\"154\":1,\"164\":1,\"200\":15,\"280\":3,\"284\":1,\"321\":1}}],[\"locating\",{\"1\":{\"123\":1}}],[\"location\",{\"1\":{\"21\":1,\"24\":1,\"48\":1,\"89\":1,\"132\":1,\"207\":1}}],[\"locate\",{\"1\":{\"4\":1,\"111\":1}}],[\"lock\",{\"0\":{\"35\":1},\"1\":{\"293\":1}}],[\"locking\",{\"1\":{\"29\":1,\"139\":1}}],[\"longer\",{\"1\":{\"288\":1}}],[\"longs\",{\"1\":{\"197\":3}}],[\"longpollingtask\",{\"1\":{\"105\":1}}],[\"longpollinglistener\",{\"1\":{\"100\":1}}],[\"longpolling\",{\"1\":{\"100\":4,\"105\":2}}],[\"longpollingclient\",{\"1\":{\"100\":10,\"105\":1}}],[\"longpollingdata\",{\"0\":{\"100\":1},\"1\":{\"97\":1,\"100\":1}}],[\"long\",{\"0\":{\"94\":1,\"95\":1,\"99\":1,\"100\":1,\"102\":1,\"103\":1},\"1\":{\"25\":1,\"48\":9,\"81\":1,\"82\":1,\"89\":3,\"91\":6,\"92\":1,\"97\":1,\"98\":3,\"99\":2,\"100\":2,\"101\":1,\"103\":3,\"104\":2,\"105\":2,\"112\":2,\"116\":1,\"124\":1,\"164\":1,\"184\":3,\"197\":1,\"198\":1,\"210\":1,\"211\":1,\"221\":1,\"304\":1,\"317\":1}}],[\"lovers\",{\"1\":{\"5\":1}}],[\"lower\",{\"1\":{\"48\":1,\"119\":2,\"214\":1}}],[\"low\",{\"1\":{\"4\":1,\"91\":1,\"211\":1,\"317\":1}}],[\"loged\",{\"1\":{\"80\":1,\"82\":2}}],[\"logics\",{\"1\":{\"85\":1,\"113\":1}}],[\"logical\",{\"1\":{\"83\":1}}],[\"logic\",{\"0\":{\"78\":1,\"113\":1},\"1\":{\"83\":1,\"84\":1,\"85\":1,\"100\":1,\"101\":1,\"110\":1,\"113\":1,\"182\":1,\"183\":2,\"184\":1,\"185\":1,\"192\":1,\"200\":1,\"210\":1,\"214\":4,\"293\":1,\"322\":1}}],[\"login\",{\"1\":{\"56\":1}}],[\"log4j\",{\"1\":{\"57\":5}}],[\"loggerfactory\",{\"1\":{\"57\":1}}],[\"logger\",{\"1\":{\"39\":1,\"57\":2}}],[\"logging\",{\"0\":{\"32\":1},\"1\":{\"57\":1}}],[\"logutil\",{\"1\":{\"39\":1}}],[\"logs\",{\"0\":{\"32\":1,\"35\":1},\"1\":{\"29\":1,\"31\":1,\"32\":1,\"33\":2,\"34\":1,\"38\":1,\"48\":2,\"275\":2}}],[\"log\",{\"0\":{\"31\":1,\"38\":1},\"1\":{\"4\":1,\"6\":1,\"30\":1,\"31\":1,\"33\":4,\"34\":1,\"35\":1,\"38\":3,\"40\":1,\"43\":1,\"48\":4,\"56\":1,\"68\":1,\"70\":2,\"73\":1,\"85\":2,\"86\":1,\"92\":1,\"97\":1,\"100\":1,\"104\":7,\"105\":4,\"114\":4,\"117\":1,\"151\":2,\"161\":1,\"166\":1,\"182\":4,\"183\":2,\"184\":3,\"197\":2,\"207\":2,\"212\":2,\"219\":2,\"220\":1,\"229\":1,\"236\":1,\"274\":1,\"276\":2,\"280\":1,\"284\":2,\"285\":2}}],[\"liang\",{\"1\":{\"321\":1}}],[\"lightest\",{\"1\":{\"304\":1}}],[\"lightweight\",{\"1\":{\"4\":3,\"217\":1,\"225\":1}}],[\"liver\",{\"1\":{\"290\":1}}],[\"liveness\",{\"1\":{\"175\":2,\"176\":1}}],[\"liquid\",{\"1\":{\"256\":1}}],[\"liquan\",{\"1\":{\"155\":1}}],[\"liming\",{\"1\":{\"256\":1}}],[\"limitforperiod\",{\"1\":{\"218\":1}}],[\"limitrefreshperiod\",{\"1\":{\"218\":1}}],[\"limit\",{\"0\":{\"192\":1},\"1\":{\"197\":1,\"198\":1,\"199\":1,\"211\":1,\"213\":2,\"214\":4,\"219\":2,\"280\":1}}],[\"limiterhandle\",{\"1\":{\"197\":3}}],[\"limiter\",{\"1\":{\"189\":1,\"192\":1,\"214\":2,\"217\":2,\"221\":5,\"316\":1}}],[\"limiterplugindata\",{\"1\":{\"195\":1}}],[\"limiterplugin\",{\"1\":{\"179\":1,\"187\":1}}],[\"limited\",{\"1\":{\"9\":1,\"254\":1}}],[\"limiting\",{\"0\":{\"196\":1,\"200\":1,\"219\":1},\"1\":{\"22\":1,\"169\":1,\"179\":1,\"185\":1,\"189\":2,\"191\":1,\"195\":6,\"199\":1,\"214\":1,\"216\":1,\"219\":9,\"220\":1,\"221\":3,\"222\":1,\"303\":1,\"309\":1,\"317\":1,\"320\":1}}],[\"lies\",{\"1\":{\"131\":1,\"189\":1}}],[\"liberation\",{\"1\":{\"91\":1}}],[\"library\",{\"1\":{\"4\":1,\"80\":1,\"179\":1,\"217\":1,\"289\":1}}],[\"little\",{\"1\":{\"86\":1,\"179\":1}}],[\"lists\",{\"1\":{\"105\":1,\"175\":1,\"312\":1}}],[\"listens\",{\"1\":{\"111\":1,\"165\":1,\"166\":1}}],[\"listening\",{\"0\":{\"113\":1},\"1\":{\"104\":1,\"105\":1,\"157\":1,\"159\":1,\"160\":1,\"165\":6,\"166\":1}}],[\"listen\",{\"0\":{\"105\":1,\"111\":1},\"1\":{\"100\":2,\"104\":1,\"156\":2,\"162\":1}}],[\"listenerbeans\",{\"1\":{\"111\":2,\"156\":2,\"165\":2}}],[\"listenerurl\",{\"1\":{\"105\":3}}],[\"listeners\",{\"1\":{\"97\":2,\"111\":3,\"112\":2,\"113\":2,\"116\":1,\"156\":5,\"165\":2,\"166\":1}}],[\"listener\",{\"0\":{\"112\":1},\"1\":{\"48\":6,\"80\":1,\"81\":1,\"97\":6,\"100\":2,\"105\":3,\"111\":6,\"112\":4,\"113\":8,\"116\":1,\"156\":11,\"160\":2,\"165\":4,\"166\":8,\"241\":1,\"242\":1}}],[\"listall\",{\"1\":{\"97\":1,\"156\":3}}],[\"listing\",{\"1\":{\"87\":1}}],[\"list<flowrule>\",{\"1\":{\"214\":1}}],[\"list<authdatasubscriber>\",{\"1\":{\"104\":1,\"117\":1,\"161\":2}}],[\"list<appauthdata>\",{\"1\":{\"97\":2,\"111\":1,\"112\":1,\"113\":2,\"156\":1}}],[\"list<metadatasubscriber>\",{\"1\":{\"104\":1,\"117\":1,\"161\":2}}],[\"list<metadata>\",{\"1\":{\"97\":2,\"111\":1,\"112\":1,\"113\":2}}],[\"list<configgroupenum>\",{\"1\":{\"100\":3}}],[\"list<t>\",{\"1\":{\"97\":1,\"118\":1}}],[\"list<plugindata>\",{\"1\":{\"97\":4,\"98\":2,\"100\":1,\"104\":1,\"111\":1,\"112\":1,\"113\":2,\"118\":1,\"156\":1}}],[\"list<degraderule>\",{\"1\":{\"214\":1}}],[\"list<datachangedlistener>\",{\"1\":{\"97\":1,\"111\":1,\"156\":1}}],[\"list<divideupstream>\",{\"1\":{\"79\":1,\"81\":1,\"87\":1,\"89\":1,\"90\":1,\"91\":1,\"120\":1,\"172\":1,\"173\":1,\"175\":4,\"177\":3,\"183\":1}}],[\"list<string>\",{\"1\":{\"147\":1,\"161\":1,\"162\":1,\"197\":2}}],[\"list<selectordata>\",{\"1\":{\"97\":2,\"111\":1,\"112\":1,\"113\":2,\"156\":1}}],[\"list<selectorconditiondto>\",{\"1\":{\"48\":1,\"80\":1}}],[\"list<soulplugin>\",{\"1\":{\"86\":4,\"179\":1,\"207\":2}}],[\"list<ruledata>\",{\"1\":{\"85\":1,\"97\":2,\"111\":1,\"112\":1,\"113\":2,\"156\":1,\"165\":3,\"172\":1,\"182\":1}}],[\"list<ruleconditiondto>\",{\"1\":{\"82\":1}}],[\"list\",{\"1\":{\"48\":1,\"69\":1,\"72\":1,\"86\":1,\"117\":1,\"172\":2,\"173\":4,\"175\":2,\"177\":1,\"178\":3,\"192\":1,\"212\":1,\"218\":1,\"234\":2,\"292\":1,\"293\":1,\"317\":1}}],[\"lines\",{\"1\":{\"33\":1,\"69\":1,\"219\":1}}],[\"line\",{\"1\":{\"32\":1,\"82\":1,\"100\":1,\"120\":2,\"121\":1,\"293\":1,\"322\":1,\"328\":1}}],[\"linkedmultivaluemap<>\",{\"1\":{\"105\":1}}],[\"linkedblockingqueue<>\",{\"1\":{\"35\":1,\"36\":1,\"77\":1,\"104\":1}}],[\"linkedblockingqueue\",{\"1\":{\"35\":1,\"36\":1}}],[\"linkplain\",{\"1\":{\"35\":2,\"39\":1,\"40\":2,\"43\":2,\"109\":2,\"156\":1,\"161\":1,\"165\":1,\"219\":2}}],[\"link\",{\"0\":{\"208\":1},\"1\":{\"28\":2,\"93\":1,\"106\":1}}],[\"likely\",{\"1\":{\"100\":2}}],[\"like\",{\"1\":{\"32\":2,\"70\":1,\"81\":2,\"100\":1,\"101\":1,\"120\":1,\"132\":1,\"180\":3,\"212\":1,\"221\":1,\"288\":1,\"312\":1,\"315\":1}}],[\"liupenghui\",{\"1\":{\"22\":1}}],[\"leo\",{\"1\":{\"256\":1}}],[\"less\",{\"1\":{\"211\":2,\"213\":1,\"219\":1,\"221\":1,\"222\":1,\"235\":1}}],[\"leisnull\",{\"1\":{\"182\":1}}],[\"left\",{\"1\":{\"48\":1,\"105\":1,\"106\":1,\"214\":1}}],[\"length\",{\"1\":{\"48\":1,\"90\":4,\"241\":1,\"242\":4,\"293\":1}}],[\"leap\",{\"1\":{\"294\":1}}],[\"learned\",{\"1\":{\"179\":1,\"187\":1}}],[\"learns\",{\"0\":{\"94\":1,\"102\":1,\"106\":1,\"152\":1,\"158\":1,\"164\":1},\"1\":{\"321\":1}}],[\"learn\",{\"0\":{\"188\":1},\"1\":{\"83\":1,\"321\":1}}],[\"learning\",{\"0\":{\"47\":1,\"49\":1,\"67\":1,\"76\":1,\"84\":1,\"120\":1,\"140\":1,\"168\":1,\"170\":1,\"179\":1,\"186\":1,\"201\":1,\"209\":1,\"215\":1,\"223\":1},\"1\":{\"83\":1,\"288\":1,\"321\":1}}],[\"leads\",{\"1\":{\"211\":1}}],[\"lead\",{\"1\":{\"91\":1,\"210\":1}}],[\"leader\",{\"0\":{\"17\":1},\"1\":{\"249\":1,\"309\":1,\"320\":1}}],[\"leading\",{\"1\":{\"4\":1}}],[\"leave\",{\"1\":{\"16\":1,\"281\":1}}],[\"least\",{\"1\":{\"8\":1,\"200\":1}}],[\"level\",{\"1\":{\"4\":2,\"139\":3,\"179\":6,\"182\":1,\"209\":1,\"211\":2,\"254\":1,\"275\":1,\"280\":1,\"283\":1,\"321\":1}}],[\"lettuceconnectionfactory\",{\"1\":{\"195\":4}}],[\"let\",{\"0\":{\"82\":1},\"1\":{\"1\":1,\"28\":2,\"30\":1,\"48\":5,\"72\":1,\"77\":1,\"82\":1,\"86\":1,\"87\":1,\"88\":1,\"91\":1,\"100\":2,\"110\":1,\"120\":1,\"122\":2,\"126\":1,\"129\":3,\"132\":1,\"133\":1,\"164\":1,\"175\":1,\"177\":1,\"179\":1,\"181\":1,\"182\":2,\"184\":1,\"207\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"235\":1,\"302\":1,\"308\":1,\"309\":1,\"312\":1,\"319\":1,\"320\":1}}],[\"mss\",{\"1\":{\"322\":1}}],[\"msg\",{\"1\":{\"109\":3,\"306\":1}}],[\"m1\",{\"0\":{\"289\":1,\"291\":1},\"1\":{\"290\":1}}],[\"mr\",{\"1\":{\"256\":1}}],[\"mxj\",{\"1\":{\"127\":3}}],[\"md5digestashex\",{\"1\":{\"147\":1}}],[\"md5\",{\"1\":{\"97\":1}}],[\"md5utils\",{\"1\":{\"97\":1}}],[\"md5=\",{\"1\":{\"48\":10}}],[\"mvc\",{\"0\":{\"78\":1},\"1\":{\"77\":1,\"78\":2,\"207\":3}}],[\"mvn\",{\"1\":{\"54\":1}}],[\"mystery\",{\"1\":{\"185\":1}}],[\"myself\",{\"1\":{\"99\":1,\"110\":3,\"114\":5,\"118\":1}}],[\"mysql>\",{\"1\":{\"82\":2}}],[\"mysql\",{\"0\":{\"126\":1,\"128\":1},\"1\":{\"33\":4,\"34\":1,\"43\":2,\"46\":2,\"56\":1,\"83\":2,\"126\":1,\"127\":5,\"128\":2,\"129\":2,\"131\":1,\"274\":1,\"280\":3,\"284\":1,\"314\":1,\"321\":1}}],[\"my\",{\"0\":{\"51\":1,\"321\":1},\"1\":{\"73\":1,\"74\":1,\"129\":1,\"244\":1,\"312\":1}}],[\"mymaster\",{\"1\":{\"46\":1}}],[\"myth\",{\"1\":{\"35\":1,\"156\":2,\"321\":1}}],[\"miui\",{\"1\":{\"293\":1}}],[\"milestone\",{\"0\":{\"289\":1},\"1\":{\"290\":1}}],[\"milliseconds\",{\"1\":{\"35\":1,\"36\":1,\"77\":1,\"100\":2,\"147\":2,\"213\":1,\"218\":4,\"221\":1}}],[\"mixed\",{\"1\":{\"284\":1,\"312\":1}}],[\"middleware\",{\"1\":{\"247\":1,\"321\":1}}],[\"middle\",{\"1\":{\"198\":1}}],[\"mission\",{\"0\":{\"175\":1}}],[\"missing\",{\"1\":{\"156\":1}}],[\"microservice\",{\"1\":{\"247\":1,\"308\":2,\"319\":2}}],[\"microservices\",{\"0\":{\"279\":1},\"1\":{\"212\":1,\"217\":1,\"278\":1,\"308\":1,\"319\":1}}],[\"micro\",{\"1\":{\"69\":2,\"308\":1,\"319\":1}}],[\"microkernel\",{\"1\":{\"25\":1}}],[\"might\",{\"0\":{\"37\":1,\"38\":1},\"1\":{\"69\":1}}],[\"minio\",{\"1\":{\"322\":1}}],[\"minidle\",{\"1\":{\"280\":1}}],[\"minimumnumberofcalls\",{\"1\":{\"218\":1}}],[\"minimum\",{\"1\":{\"8\":1,\"200\":1,\"212\":1,\"213\":2,\"218\":1,\"219\":1}}],[\"minimalist\",{\"1\":{\"4\":1}}],[\"minrequestamount\",{\"1\":{\"213\":1}}],[\"min\",{\"1\":{\"91\":1,\"200\":1,\"219\":1,\"324\":4,\"329\":1}}],[\"minutes\",{\"0\":{\"313\":1},\"1\":{\"48\":3,\"105\":2}}],[\"mind\",{\"1\":{\"32\":1,\"156\":1}}],[\"ming\",{\"1\":{\"25\":1,\"114\":1}}],[\"mutated\",{\"1\":{\"207\":2,\"221\":2}}],[\"mutate\",{\"1\":{\"207\":2,\"221\":2}}],[\"much\",{\"1\":{\"80\":1,\"177\":1,\"182\":1}}],[\"multipartfile\",{\"1\":{\"328\":5}}],[\"multiplied\",{\"1\":{\"200\":1,\"214\":1}}],[\"multiple\",{\"1\":{\"16\":1,\"34\":1,\"35\":1,\"48\":1,\"69\":3,\"70\":2,\"72\":1,\"81\":1,\"89\":1,\"104\":2,\"113\":1,\"120\":1,\"124\":2,\"127\":1,\"151\":1,\"210\":1,\"212\":1,\"220\":1,\"274\":2,\"275\":3,\"308\":1,\"312\":1,\"319\":1}}],[\"multivaluemap<string\",{\"1\":{\"105\":1,\"180\":1}}],[\"multi\",{\"0\":{\"134\":1},\"1\":{\"35\":1,\"312\":1}}],[\"muou\",{\"1\":{\"22\":1}}],[\"must\",{\"1\":{\"6\":1,\"7\":1,\"8\":4,\"69\":2,\"70\":1,\"98\":1,\"100\":1,\"101\":2,\"123\":1,\"164\":2,\"210\":1,\"247\":6,\"254\":1,\"290\":1}}],[\"meituan\",{\"1\":{\"322\":1}}],[\"mentality\",{\"1\":{\"321\":1}}],[\"mention\",{\"1\":{\"131\":1}}],[\"mentioned\",{\"1\":{\"48\":1,\"87\":3,\"164\":1,\"173\":2,\"177\":1,\"185\":1}}],[\"menglg\",{\"1\":{\"256\":1}}],[\"media\",{\"1\":{\"254\":1}}],[\"mediatype\",{\"1\":{\"105\":1}}],[\"meet\",{\"1\":{\"191\":1}}],[\"meeting\",{\"1\":{\"21\":1,\"24\":1}}],[\"measures\",{\"1\":{\"91\":1}}],[\"mean\",{\"1\":{\"105\":1}}],[\"means\",{\"1\":{\"48\":1,\"57\":1,\"61\":1,\"64\":1,\"69\":1,\"70\":4,\"86\":1,\"100\":1,\"119\":2,\"174\":1,\"193\":1,\"211\":1,\"213\":2,\"214\":1}}],[\"meaningful\",{\"1\":{\"211\":1}}],[\"meaning\",{\"0\":{\"15\":1},\"1\":{\"83\":1,\"119\":1,\"180\":1}}],[\"me\",{\"1\":{\"83\":1,\"91\":1,\"100\":1,\"122\":1,\"164\":1,\"214\":1,\"309\":1,\"320\":1}}],[\"message\",{\"1\":{\"81\":2,\"104\":3,\"105\":2,\"114\":11,\"193\":1,\"197\":1,\"214\":1,\"220\":1,\"256\":1,\"306\":1}}],[\"messaging\",{\"1\":{\"4\":1}}],[\"memory\",{\"1\":{\"68\":1,\"101\":1,\"155\":1,\"161\":1,\"165\":3,\"166\":2,\"226\":1,\"312\":1,\"317\":1}}],[\"member\",{\"1\":{\"7\":1,\"19\":1}}],[\"members\",{\"0\":{\"257\":1},\"1\":{\"6\":1,\"16\":1,\"252\":1,\"272\":1,\"290\":1}}],[\"mechanism\",{\"1\":{\"29\":1,\"32\":1,\"120\":1,\"121\":1,\"131\":2,\"162\":1,\"177\":1,\"221\":1,\"284\":1,\"317\":1}}],[\"met\",{\"1\":{\"206\":1}}],[\"metasubscribers\",{\"1\":{\"117\":2,\"161\":4,\"166\":2}}],[\"metadataservice\",{\"1\":{\"156\":1}}],[\"metadatasubscriber\",{\"1\":{\"117\":1,\"179\":1}}],[\"metadatasubscribers\",{\"1\":{\"104\":3,\"117\":2,\"161\":5}}],[\"metadatapath\",{\"1\":{\"156\":2}}],[\"metadatahandler\",{\"1\":{\"117\":1}}],[\"metadatalist\",{\"1\":{\"113\":2}}],[\"metadatarefresh\",{\"1\":{\"104\":1}}],[\"metadata\",{\"0\":{\"226\":1},\"1\":{\"78\":2,\"112\":1,\"118\":7,\"119\":3,\"156\":1,\"157\":1,\"159\":1,\"164\":6,\"224\":1,\"225\":1,\"226\":2,\"232\":1,\"236\":11,\"237\":8,\"322\":1}}],[\"metadatamapper\",{\"1\":{\"78\":1}}],[\"metadatado\",{\"1\":{\"78\":1}}],[\"meta\",{\"1\":{\"48\":3,\"97\":1,\"104\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":2,\"117\":1,\"123\":1,\"132\":1,\"156\":1,\"161\":2,\"164\":1,\"226\":1,\"236\":4,\"256\":1,\"280\":1,\"293\":1}}],[\"methodnameparametertypes\",{\"1\":{\"226\":1}}],[\"methodproxy\",{\"1\":{\"164\":2}}],[\"methodweightmap\",{\"1\":{\"91\":4}}],[\"method\",{\"0\":{\"79\":1,\"82\":1,\"198\":1},\"1\":{\"30\":4,\"33\":2,\"36\":3,\"39\":1,\"48\":15,\"59\":1,\"80\":2,\"81\":2,\"82\":1,\"84\":4,\"85\":1,\"86\":1,\"87\":2,\"92\":5,\"97\":2,\"100\":4,\"104\":6,\"105\":2,\"112\":7,\"113\":2,\"114\":2,\"116\":1,\"118\":4,\"120\":3,\"121\":2,\"122\":1,\"123\":2,\"124\":1,\"126\":2,\"132\":3,\"133\":1,\"136\":1,\"137\":1,\"147\":1,\"151\":4,\"156\":9,\"162\":1,\"164\":3,\"165\":1,\"173\":1,\"179\":1,\"180\":6,\"182\":8,\"183\":1,\"184\":8,\"185\":1,\"195\":1,\"197\":1,\"198\":1,\"199\":1,\"207\":1,\"213\":1,\"221\":1,\"226\":2,\"234\":8,\"235\":1,\"237\":1,\"241\":2,\"242\":13,\"262\":1,\"277\":1,\"280\":5,\"293\":1,\"297\":3,\"305\":1,\"312\":1,\"321\":1,\"328\":1}}],[\"methods\",{\"0\":{\"36\":1,\"37\":1},\"1\":{\"29\":1,\"33\":2,\"34\":2,\"46\":1,\"48\":8,\"70\":1,\"80\":1,\"85\":1,\"86\":1,\"92\":1,\"97\":1,\"98\":1,\"112\":2,\"113\":1,\"116\":1,\"118\":3,\"122\":1,\"132\":1,\"182\":1,\"197\":2,\"213\":1,\"221\":1,\"234\":1,\"275\":2,\"280\":2,\"281\":1,\"288\":1,\"289\":1,\"293\":1,\"294\":1,\"317\":1,\"328\":1}}],[\"metricstrackerfacade\",{\"1\":{\"86\":1}}],[\"metrics\",{\"1\":{\"25\":1,\"274\":2,\"275\":1,\"284\":1,\"312\":1}}],[\"mobile\",{\"1\":{\"322\":1}}],[\"moral\",{\"1\":{\"254\":1,\"290\":1}}],[\"moreover\",{\"1\":{\"37\":1,\"48\":1}}],[\"more\",{\"0\":{\"284\":1,\"301\":1},\"1\":{\"28\":1,\"57\":1,\"64\":2,\"71\":1,\"80\":1,\"89\":1,\"121\":1,\"131\":1,\"182\":1,\"211\":1,\"212\":2,\"214\":1,\"272\":1,\"280\":1,\"288\":2,\"290\":1,\"299\":1,\"304\":1,\"306\":3,\"308\":2,\"319\":2,\"328\":1,\"329\":3}}],[\"moment\",{\"1\":{\"91\":1}}],[\"moments\",{\"1\":{\"37\":1}}],[\"modules\",{\"1\":{\"68\":2,\"103\":1,\"131\":2,\"217\":1,\"272\":1,\"275\":2,\"308\":1,\"319\":1}}],[\"module\",{\"0\":{\"56\":1,\"57\":1,\"284\":1},\"1\":{\"58\":1,\"72\":2,\"78\":1,\"98\":1,\"104\":2,\"180\":3,\"275\":6,\"280\":1,\"284\":7,\"285\":1,\"287\":1,\"308\":4,\"319\":4}}],[\"modified\",{\"0\":{\"195\":1},\"1\":{\"81\":1,\"101\":1,\"107\":1,\"195\":1,\"290\":2}}],[\"modifies\",{\"1\":{\"81\":1}}],[\"modifications\",{\"1\":{\"290\":1}}],[\"modification\",{\"1\":{\"48\":1,\"81\":1,\"99\":1,\"101\":1,\"161\":1,\"162\":1}}],[\"modifying\",{\"1\":{\"121\":1,\"195\":1,\"254\":1,\"290\":1}}],[\"modify\",{\"1\":{\"48\":1,\"56\":1,\"66\":1,\"81\":1,\"83\":2,\"97\":1,\"98\":1,\"214\":1,\"219\":1,\"292\":1}}],[\"modes\",{\"1\":{\"276\":1,\"280\":1,\"281\":1,\"288\":1,\"312\":1}}],[\"model\",{\"1\":{\"231\":1}}],[\"mode\",{\"1\":{\"33\":2,\"70\":1,\"82\":1,\"96\":3,\"101\":1,\"116\":3,\"126\":2,\"133\":2,\"179\":1,\"182\":1,\"212\":1,\"213\":6,\"214\":2,\"231\":1,\"241\":4,\"268\":1,\"280\":1,\"281\":1,\"284\":6,\"287\":2,\"288\":2,\"292\":2,\"293\":2}}],[\"motan<\",{\"1\":{\"45\":1,\"46\":1}}],[\"motan\",{\"0\":{\"45\":1},\"1\":{\"34\":1,\"46\":1,\"269\":1,\"274\":1,\"276\":1,\"283\":1,\"285\":2}}],[\"motivation\",{\"1\":{\"15\":1}}],[\"monmentum\",{\"1\":{\"307\":1,\"318\":1}}],[\"month\",{\"1\":{\"294\":1}}],[\"monthly\",{\"0\":{\"283\":1}}],[\"months\",{\"1\":{\"8\":1,\"247\":1}}],[\"monitorplugin\",{\"1\":{\"164\":1,\"179\":2}}],[\"monitored\",{\"1\":{\"112\":1}}],[\"monitors\",{\"1\":{\"98\":1,\"116\":1,\"117\":1,\"161\":1,\"162\":1,\"165\":1}}],[\"monitor\",{\"1\":{\"87\":2,\"103\":1,\"164\":2,\"179\":3,\"211\":2,\"275\":1,\"312\":1}}],[\"monitoring\",{\"1\":{\"4\":3,\"25\":1,\"104\":1,\"105\":5,\"180\":1,\"274\":1,\"284\":1,\"303\":1,\"309\":1,\"320\":1}}],[\"mono<object>\",{\"1\":{\"236\":1,\"237\":1}}],[\"mono<t>>\",{\"1\":{\"221\":2}}],[\"mono<t>\",{\"1\":{\"221\":6}}],[\"mono<ratelimiterresponse>\",{\"1\":{\"197\":1}}],[\"mono<clientresponse>\",{\"1\":{\"92\":1}}],[\"mono<void>\",{\"1\":{\"85\":1,\"86\":2,\"87\":1,\"92\":3,\"93\":1,\"172\":2,\"179\":1,\"180\":1,\"182\":1,\"183\":1,\"184\":3,\"185\":1,\"197\":1,\"207\":2,\"214\":2,\"221\":4,\"235\":2,\"236\":1,\"238\":1}}],[\"mono\",{\"1\":{\"86\":2,\"92\":1,\"93\":1,\"179\":2,\"185\":1,\"214\":1,\"235\":2,\"237\":1,\"238\":1}}],[\"mongoclient\",{\"1\":{\"292\":1}}],[\"mongo\",{\"1\":{\"43\":1,\"285\":1}}],[\"mongouserpwd\",{\"1\":{\"33\":1,\"46\":1}}],[\"mongousername\",{\"1\":{\"33\":1,\"46\":1}}],[\"mongodb4\",{\"1\":{\"292\":1}}],[\"mongodbname\",{\"1\":{\"33\":1,\"46\":1}}],[\"mongodburl\",{\"1\":{\"33\":1,\"46\":1}}],[\"mongodb\",{\"1\":{\"33\":7,\"34\":1,\"46\":1,\"274\":1,\"284\":1,\"290\":1,\"321\":1}}],[\"most\",{\"1\":{\"4\":1,\"33\":2,\"69\":1,\"74\":1,\"84\":1,\"101\":1,\"120\":1,\"123\":1,\"125\":1,\"129\":1,\"133\":1,\"211\":1,\"214\":1}}],[\"markdown\",{\"1\":{\"331\":1}}],[\"marking\",{\"1\":{\"100\":1}}],[\"marcus\",{\"1\":{\"256\":1}}],[\"march\",{\"1\":{\"254\":2}}],[\"making\",{\"1\":{\"254\":2,\"306\":1,\"329\":1}}],[\"makes\",{\"0\":{\"46\":1},\"1\":{\"105\":1,\"122\":1,\"185\":1,\"201\":1,\"252\":1}}],[\"make\",{\"0\":{\"41\":1,\"312\":1},\"1\":{\"15\":1,\"28\":1,\"29\":1,\"57\":1,\"89\":1,\"105\":1,\"123\":1,\"212\":1,\"302\":1,\"321\":2}}],[\"major\",{\"1\":{\"253\":1,\"290\":1}}],[\"matlab\",{\"1\":{\"321\":1}}],[\"matter\",{\"1\":{\"317\":1}}],[\"matters\",{\"0\":{\"253\":1},\"1\":{\"254\":1}}],[\"mature\",{\"1\":{\"209\":1}}],[\"math\",{\"1\":{\"200\":3,\"219\":11}}],[\"matchertable\",{\"1\":{\"293\":1}}],[\"matched\",{\"1\":{\"205\":1}}],[\"matches\",{\"1\":{\"70\":1,\"85\":1,\"118\":1,\"172\":1}}],[\"matchstrategy\",{\"1\":{\"185\":1}}],[\"matchselector\",{\"1\":{\"85\":1,\"172\":1,\"182\":2}}],[\"matchifmissing\",{\"1\":{\"112\":1,\"116\":1}}],[\"matching\",{\"1\":{\"70\":5,\"85\":3,\"128\":1,\"133\":1,\"182\":1,\"185\":1,\"192\":1,\"202\":1,\"206\":1,\"212\":1,\"299\":1,\"317\":1}}],[\"matchrule\",{\"1\":{\"85\":1,\"172\":1,\"182\":2}}],[\"matchmodeenum\",{\"1\":{\"80\":1,\"82\":1}}],[\"matchmode\",{\"1\":{\"80\":1,\"82\":1}}],[\"match\",{\"1\":{\"61\":2,\"64\":12,\"70\":8,\"80\":1,\"82\":2,\"85\":3,\"87\":1,\"112\":1,\"171\":1,\"172\":3,\"182\":4,\"226\":1}}],[\"mapconverter\",{\"1\":{\"294\":1}}],[\"maputil\",{\"1\":{\"293\":1}}],[\"mapwrapper\",{\"1\":{\"292\":1}}],[\"maps\",{\"1\":{\"139\":1,\"147\":1}}],[\"map<class<\",{\"1\":{\"132\":1,\"134\":1,\"137\":1}}],[\"map<string\",{\"1\":{\"118\":1,\"134\":1,\"135\":1,\"136\":1,\"139\":7,\"147\":1,\"207\":3}}],[\"map<rpctypeenum\",{\"1\":{\"82\":1}}],[\"maptodata\",{\"1\":{\"109\":1,\"165\":1}}],[\"map\",{\"1\":{\"81\":2,\"82\":1,\"91\":7,\"104\":8,\"117\":7,\"121\":2,\"133\":1,\"147\":7,\"151\":1,\"156\":1,\"162\":1,\"165\":6,\"173\":7,\"175\":4,\"195\":2,\"197\":1,\"231\":1,\"260\":1,\"294\":3}}],[\"mapped\",{\"1\":{\"72\":1}}],[\"mappings\",{\"1\":{\"207\":3}}],[\"mappingbeans\",{\"1\":{\"207\":2}}],[\"mapping\",{\"1\":{\"48\":1,\"136\":1,\"137\":1,\"139\":1,\"207\":2,\"293\":1}}],[\"made\",{\"1\":{\"48\":1,\"70\":1,\"133\":1,\"182\":1,\"290\":1}}],[\"machine\",{\"1\":{\"43\":1,\"191\":1}}],[\"machines\",{\"1\":{\"40\":1}}],[\"manner\",{\"1\":{\"214\":1}}],[\"manual\",{\"1\":{\"164\":3}}],[\"manually\",{\"1\":{\"48\":1,\"101\":1,\"129\":1,\"164\":4,\"220\":1,\"329\":1}}],[\"many\",{\"0\":{\"310\":1},\"1\":{\"43\":2,\"48\":2,\"80\":2,\"91\":1,\"97\":1,\"104\":1,\"110\":1,\"164\":1,\"187\":1,\"189\":1,\"197\":3,\"210\":1,\"211\":2,\"212\":1,\"214\":4,\"290\":2,\"302\":2,\"308\":1,\"319\":1,\"321\":3}}],[\"managed\",{\"1\":{\"77\":1,\"100\":1,\"128\":1}}],[\"manage\",{\"1\":{\"69\":1}}],[\"manager\",{\"1\":{\"40\":2,\"87\":2,\"161\":1,\"173\":1,\"174\":2,\"175\":2}}],[\"management\",{\"1\":{\"4\":1,\"6\":1,\"56\":1,\"68\":1,\"69\":1,\"72\":1,\"74\":1,\"86\":1,\"88\":1,\"128\":1,\"191\":2,\"202\":1,\"212\":1,\"214\":1,\"218\":1,\"229\":1,\"254\":3,\"274\":1,\"284\":1,\"308\":1,\"315\":1,\"319\":1,\"328\":3}}],[\"maven\",{\"0\":{\"203\":1},\"1\":{\"42\":1,\"251\":1,\"277\":1,\"315\":1,\"316\":1}}],[\"master\",{\"0\":{\"42\":1},\"1\":{\"65\":2,\"69\":1,\"130\":1}}],[\"mastername\",{\"1\":{\"33\":1,\"46\":1}}],[\"maybe\",{\"1\":{\"256\":1,\"306\":1}}],[\"may\",{\"1\":{\"40\":1,\"122\":1,\"131\":1,\"177\":1,\"180\":2,\"210\":1,\"211\":2,\"306\":2,\"308\":2,\"319\":2}}],[\"maxlifetime\",{\"1\":{\"280\":1}}],[\"maxactive\",{\"1\":{\"280\":1}}],[\"maxcurrent\",{\"1\":{\"91\":3}}],[\"max\",{\"1\":{\"36\":3,\"40\":2,\"43\":1,\"65\":2,\"100\":2,\"200\":1,\"219\":12}}],[\"maximumweight\",{\"1\":{\"40\":1}}],[\"maximum\",{\"1\":{\"33\":4,\"101\":1,\"189\":1,\"211\":1,\"212\":1}}],[\"mainstream\",{\"1\":{\"254\":1,\"275\":1}}],[\"mainly\",{\"1\":{\"142\":1,\"162\":1,\"180\":1,\"192\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"214\":1,\"225\":2,\"226\":1,\"231\":1,\"240\":1,\"241\":1,\"321\":1}}],[\"main\",{\"0\":{\"17\":1,\"19\":1},\"1\":{\"57\":5,\"87\":1,\"118\":1,\"122\":1,\"123\":1,\"124\":1,\"129\":2,\"130\":1,\"154\":2,\"155\":8,\"164\":10,\"179\":1,\"180\":1,\"254\":1,\"315\":1,\"327\":1}}],[\"maintenance\",{\"1\":{\"4\":1,\"6\":1,\"225\":1}}],[\"maintained\",{\"1\":{\"48\":1,\"97\":1,\"173\":1}}],[\"maintain\",{\"1\":{\"2\":1,\"116\":1,\"173\":1}}],[\"pmc\",{\"1\":{\"249\":2,\"253\":1}}],[\"ps\",{\"1\":{\"182\":1,\"183\":1,\"184\":1,\"189\":1,\"195\":1,\"199\":1}}],[\"p9\",{\"1\":{\"182\":1}}],[\"php\",{\"1\":{\"305\":1}}],[\"phydeleted\",{\"1\":{\"280\":1}}],[\"physical\",{\"1\":{\"179\":1}}],[\"phoenix\",{\"1\":{\"256\":1}}],[\"phantom\",{\"1\":{\"256\":1}}],[\"phase\",{\"1\":{\"30\":1,\"32\":1,\"37\":1}}],[\"phases\",{\"1\":{\"16\":1,\"276\":1}}],[\"philosophy\",{\"1\":{\"253\":1}}],[\"png\",{\"1\":{\"148\":1,\"290\":1,\"324\":2,\"329\":6,\"336\":3}}],[\"ping\",{\"1\":{\"322\":1}}],[\"pitfalls\",{\"1\":{\"164\":1}}],[\"pit\",{\"1\":{\"164\":1}}],[\"pick\",{\"1\":{\"179\":1}}],[\"pic\",{\"1\":{\"156\":4,\"160\":4,\"161\":1,\"162\":2,\"163\":1,\"164\":8,\"165\":4,\"166\":2,\"167\":1}}],[\"pictures\",{\"1\":{\"328\":1}}],[\"picture\",{\"1\":{\"48\":2,\"68\":2,\"69\":1,\"70\":1,\"71\":2,\"72\":3,\"73\":3,\"74\":4,\"132\":1,\"179\":1}}],[\"piece\",{\"1\":{\"100\":1,\"105\":1,\"226\":3,\"321\":1}}],[\"people\",{\"1\":{\"308\":1,\"319\":1,\"321\":3}}],[\"peixy\",{\"1\":{\"256\":1}}],[\"peak\",{\"1\":{\"210\":1}}],[\"pengshao\",{\"1\":{\"256\":1}}],[\"pending\",{\"1\":{\"123\":4}}],[\"penalty\",{\"1\":{\"91\":2}}],[\"peripheral\",{\"1\":{\"290\":1}}],[\"periodically\",{\"1\":{\"100\":1}}],[\"period\",{\"1\":{\"16\":1,\"91\":1,\"99\":1,\"105\":1,\"184\":1,\"185\":1,\"211\":1,\"212\":3,\"213\":1,\"219\":2,\"254\":1}}],[\"percentage\",{\"1\":{\"213\":1,\"218\":1}}],[\"perceive\",{\"0\":{\"161\":1}}],[\"permitted\",{\"1\":{\"219\":1}}],[\"permittednumberofcallsinhalfopenstate\",{\"1\":{\"218\":1}}],[\"permissions\",{\"0\":{\"249\":1},\"1\":{\"249\":2}}],[\"permission\",{\"1\":{\"4\":1}}],[\"permanent\",{\"1\":{\"207\":1,\"254\":1}}],[\"per\",{\"1\":{\"189\":1,\"211\":2,\"213\":1,\"219\":1}}],[\"persist\",{\"1\":{\"83\":2,\"109\":1}}],[\"personal\",{\"1\":{\"253\":1}}],[\"person\",{\"1\":{\"16\":1,\"98\":2,\"250\":1,\"253\":1,\"254\":1}}],[\"performs\",{\"1\":{\"172\":1,\"179\":1}}],[\"performed\",{\"1\":{\"91\":1,\"205\":1,\"218\":1}}],[\"performing\",{\"1\":{\"48\":1}}],[\"perform\",{\"1\":{\"43\":1,\"48\":1,\"68\":1,\"156\":1,\"175\":1,\"207\":1,\"236\":1,\"237\":1,\"241\":1,\"300\":1,\"329\":1}}],[\"performance\",{\"0\":{\"29\":1,\"34\":1,\"41\":1,\"312\":1,\"313\":1},\"1\":{\"4\":2,\"29\":3,\"33\":4,\"49\":1,\"65\":1,\"68\":1,\"122\":1,\"124\":2,\"131\":1,\"199\":1,\"225\":2,\"274\":2,\"275\":1,\"283\":1,\"293\":1,\"317\":1}}],[\"perfect\",{\"1\":{\"28\":1}}],[\"p\",{\"1\":{\"57\":1,\"123\":3}}],[\"plenty\",{\"1\":{\"286\":1}}],[\"pleasure\",{\"1\":{\"286\":1}}],[\"please\",{\"1\":{\"9\":1,\"43\":1,\"46\":1,\"56\":1,\"57\":2,\"193\":1,\"202\":1,\"253\":1,\"256\":1,\"280\":1,\"314\":2,\"315\":3,\"316\":1,\"326\":1,\"328\":2,\"329\":1}}],[\"planet\",{\"1\":{\"256\":1}}],[\"plagiarism\",{\"1\":{\"254\":1}}],[\"platforms\",{\"1\":{\"253\":1,\"322\":3,\"325\":1,\"326\":1,\"328\":1,\"329\":1}}],[\"platform\",{\"0\":{\"309\":1,\"320\":1},\"1\":{\"212\":1,\"247\":1,\"309\":1,\"320\":1,\"324\":6,\"326\":4,\"328\":3}}],[\"place\",{\"1\":{\"112\":1,\"123\":1,\"124\":1,\"328\":1}}],[\"placed\",{\"1\":{\"112\":1,\"123\":1,\"181\":1,\"184\":1,\"280\":1}}],[\"plays\",{\"1\":{\"181\":1,\"182\":1}}],[\"play\",{\"1\":{\"92\":1}}],[\"pluggability\",{\"1\":{\"321\":2}}],[\"pluggable\",{\"1\":{\"118\":1,\"119\":1,\"125\":1,\"312\":1,\"316\":2,\"321\":2}}],[\"plug\",{\"0\":{\"69\":1,\"72\":1,\"87\":1,\"150\":1,\"171\":1,\"172\":1,\"184\":1,\"185\":1,\"191\":1,\"196\":1,\"202\":1,\"221\":1,\"316\":1},\"1\":{\"68\":1,\"69\":9,\"72\":1,\"74\":1,\"81\":1,\"84\":3,\"85\":8,\"86\":10,\"87\":4,\"92\":4,\"93\":1,\"97\":1,\"104\":1,\"106\":1,\"108\":1,\"118\":2,\"119\":4,\"120\":1,\"135\":1,\"141\":1,\"149\":1,\"151\":3,\"160\":2,\"162\":3,\"165\":1,\"169\":4,\"171\":6,\"172\":5,\"176\":1,\"178\":2,\"179\":28,\"180\":7,\"181\":1,\"182\":3,\"184\":1,\"185\":6,\"187\":5,\"189\":1,\"191\":1,\"192\":2,\"193\":1,\"195\":6,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"209\":1,\"212\":5,\"214\":3,\"216\":1,\"218\":2,\"221\":3,\"225\":2,\"229\":1,\"235\":2,\"243\":1,\"299\":1,\"300\":2,\"303\":3,\"306\":1,\"308\":1,\"310\":1,\"312\":3,\"316\":3,\"317\":2,\"319\":1,\"321\":1}}],[\"pluginversion\",{\"1\":{\"265\":1}}],[\"pluginzks\",{\"1\":{\"161\":2}}],[\"pluginparent\",{\"1\":{\"161\":3}}],[\"pluginpath\",{\"1\":{\"98\":3,\"156\":2,\"161\":5}}],[\"plugintransfer\",{\"1\":{\"109\":1,\"165\":1}}],[\"pluginmapper\",{\"1\":{\"109\":2}}],[\"plugindo\",{\"1\":{\"109\":6,\"165\":1}}],[\"plugindto\",{\"1\":{\"109\":13,\"165\":4}}],[\"plugindatahandler>\",{\"1\":{\"118\":1}}],[\"plugindatahandler\",{\"1\":{\"117\":1,\"118\":4,\"119\":1,\"179\":1,\"214\":1}}],[\"plugindatarefresh\",{\"1\":{\"104\":1}}],[\"plugindatasubscriber\",{\"1\":{\"104\":9,\"117\":6,\"118\":4,\"161\":7,\"162\":1}}],[\"plugindatalist\",{\"1\":{\"98\":2,\"113\":2,\"156\":2}}],[\"plugindata\",{\"1\":{\"85\":5,\"87\":1,\"98\":1,\"104\":1,\"118\":6,\"172\":4,\"182\":4,\"195\":5}}],[\"plugincontroller\",{\"1\":{\"109\":2}}],[\"pluginconfiguration\",{\"1\":{\"86\":1}}],[\"pluginlist\",{\"1\":{\"86\":2,\"179\":1,\"207\":2}}],[\"plugin02\",{\"1\":{\"86\":1}}],[\"pluginnamed\",{\"1\":{\"214\":1}}],[\"pluginname\",{\"1\":{\"85\":11,\"161\":7,\"172\":3,\"182\":9}}],[\"pluginenum\",{\"1\":{\"80\":5,\"85\":2,\"179\":5,\"214\":3}}],[\"pluginsubscriber\",{\"1\":{\"117\":2,\"161\":3,\"166\":2}}],[\"pluginserviceimpl\",{\"1\":{\"109\":1}}],[\"pluginservice\",{\"1\":{\"97\":1,\"109\":1,\"156\":1}}],[\"plugins\",{\"1\":{\"48\":1,\"85\":1,\"86\":15,\"119\":1,\"169\":1,\"179\":5,\"207\":2,\"221\":1,\"235\":6}}],[\"plugin\",{\"0\":{\"67\":1,\"84\":1,\"140\":1,\"143\":1,\"168\":1,\"170\":1,\"180\":1,\"181\":1,\"186\":1,\"201\":1,\"209\":1,\"215\":1,\"223\":1,\"225\":1,\"227\":1,\"235\":1,\"303\":1},\"1\":{\"48\":8,\"61\":3,\"64\":18,\"72\":1,\"84\":1,\"85\":2,\"86\":8,\"87\":37,\"97\":2,\"98\":1,\"100\":1,\"104\":5,\"108\":2,\"109\":5,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"117\":1,\"118\":3,\"119\":4,\"144\":3,\"156\":2,\"157\":1,\"159\":1,\"161\":4,\"164\":5,\"165\":2,\"172\":3,\"179\":10,\"180\":1,\"181\":1,\"182\":3,\"184\":1,\"185\":1,\"195\":1,\"203\":1,\"207\":1,\"214\":3,\"218\":1,\"221\":1,\"224\":3,\"228\":1,\"235\":5,\"312\":2,\"316\":13}}],[\"pad\",{\"1\":{\"293\":1}}],[\"panorama\",{\"1\":{\"290\":1}}],[\"pair<string\",{\"1\":{\"237\":1}}],[\"pairs\",{\"1\":{\"151\":1}}],[\"pair\",{\"0\":{\"151\":1},\"1\":{\"151\":4,\"237\":5}}],[\"pattern\",{\"1\":{\"80\":1,\"84\":1,\"98\":2,\"121\":1,\"179\":1,\"195\":1,\"284\":1}}],[\"paths\",{\"1\":{\"207\":1,\"248\":1,\"294\":1}}],[\"pathvariable\",{\"1\":{\"109\":1}}],[\"path\",{\"1\":{\"43\":1,\"46\":1,\"57\":1,\"82\":9,\"85\":3,\"87\":3,\"92\":1,\"100\":1,\"104\":1,\"117\":1,\"124\":1,\"128\":1,\"132\":1,\"139\":3,\"147\":1,\"162\":2,\"164\":2,\"180\":3,\"205\":3,\"206\":1,\"207\":1,\"226\":5,\"230\":1,\"236\":1,\"237\":1,\"248\":1,\"280\":1,\"294\":1,\"326\":2,\"328\":1}}],[\"payment\",{\"1\":{\"280\":1}}],[\"pay\",{\"0\":{\"307\":1,\"318\":1},\"1\":{\"48\":1,\"210\":1,\"324\":2,\"326\":1}}],[\"pagination\",{\"1\":{\"48\":1}}],[\"pages\",{\"1\":{\"261\":2}}],[\"page\",{\"0\":{\"48\":1,\"108\":1,\"195\":1},\"1\":{\"48\":3,\"56\":1,\"106\":1,\"182\":1,\"183\":2,\"212\":1,\"229\":1,\"290\":1}}],[\"packaged\",{\"1\":{\"181\":1,\"290\":2,\"321\":1}}],[\"package=\",{\"1\":{\"43\":1}}],[\"packages\",{\"0\":{\"46\":1},\"1\":{\"43\":1,\"118\":1,\"268\":1}}],[\"package\",{\"0\":{\"126\":1,\"325\":1},\"1\":{\"35\":1,\"36\":1,\"40\":1,\"42\":2,\"43\":1,\"54\":1,\"126\":1,\"217\":1,\"251\":1,\"275\":1,\"305\":1,\"322\":1}}],[\"passive\",{\"1\":{\"280\":2}}],[\"passing\",{\"1\":{\"120\":1,\"123\":1,\"128\":1,\"211\":2,\"294\":1,\"317\":1}}],[\"passage\",{\"1\":{\"211\":1}}],[\"passwd\",{\"1\":{\"127\":1,\"129\":2}}],[\"password=\",{\"1\":{\"314\":1}}],[\"password\",{\"1\":{\"33\":4,\"43\":1,\"46\":2,\"56\":2,\"127\":1,\"280\":1,\"314\":2}}],[\"passed\",{\"1\":{\"100\":1,\"104\":1,\"105\":1,\"149\":1,\"151\":1,\"172\":1,\"180\":1,\"183\":1,\"211\":2,\"298\":2}}],[\"passes\",{\"1\":{\"29\":1,\"199\":2}}],[\"pass\",{\"1\":{\"48\":2,\"87\":1,\"123\":1,\"135\":1,\"175\":2,\"211\":1,\"242\":3,\"305\":1}}],[\"paste\",{\"1\":{\"96\":1}}],[\"past\",{\"1\":{\"29\":1,\"247\":1}}],[\"par\",{\"1\":{\"293\":1}}],[\"parser\",{\"1\":{\"287\":1,\"306\":2}}],[\"parseint\",{\"1\":{\"174\":1,\"176\":1}}],[\"parseboolean\",{\"1\":{\"174\":1}}],[\"parseurl\",{\"1\":{\"127\":3}}],[\"parse\",{\"1\":{\"123\":1,\"136\":1,\"139\":1}}],[\"parsing\",{\"0\":{\"76\":1,\"207\":1},\"1\":{\"207\":1,\"284\":1,\"293\":1,\"294\":1}}],[\"parentpath\",{\"1\":{\"161\":1,\"162\":2}}],[\"parent\",{\"1\":{\"100\":2,\"121\":2,\"156\":2,\"161\":1,\"214\":1,\"294\":1}}],[\"partition\",{\"0\":{\"284\":1},\"1\":{\"284\":1}}],[\"particularly\",{\"1\":{\"91\":1,\"198\":1,\"199\":1}}],[\"particular\",{\"1\":{\"40\":1}}],[\"participates\",{\"1\":{\"321\":1}}],[\"participate\",{\"1\":{\"280\":2,\"321\":2}}],[\"participating\",{\"1\":{\"28\":1}}],[\"participant\",{\"1\":{\"33\":2,\"39\":7}}],[\"participants\",{\"0\":{\"17\":1,\"19\":1},\"1\":{\"14\":1,\"40\":2,\"43\":1}}],[\"party\",{\"1\":{\"201\":1,\"268\":1}}],[\"part\",{\"0\":{\"275\":1},\"1\":{\"86\":1,\"101\":1,\"104\":1,\"106\":1,\"209\":1,\"290\":2}}],[\"parts\",{\"1\":{\"69\":1,\"214\":1,\"240\":1,\"290\":1,\"328\":1}}],[\"parallelstream\",{\"1\":{\"104\":1}}],[\"parallel\",{\"1\":{\"62\":1}}],[\"paramcheckutils\",{\"1\":{\"237\":1}}],[\"paramplugin\",{\"1\":{\"179\":1}}],[\"params\",{\"1\":{\"104\":3,\"105\":3,\"151\":1,\"236\":2,\"242\":3,\"260\":1}}],[\"paramvalue\",{\"1\":{\"82\":1}}],[\"paramname\",{\"1\":{\"82\":1}}],[\"paramtype\",{\"1\":{\"82\":1}}],[\"paramtypeenum\",{\"1\":{\"80\":1,\"82\":1}}],[\"param\",{\"1\":{\"35\":4,\"39\":2,\"40\":3,\"77\":1,\"78\":1,\"82\":2,\"109\":3,\"112\":10,\"114\":8,\"156\":6,\"161\":9,\"165\":1,\"179\":2,\"214\":1,\"219\":1,\"234\":3,\"236\":2}}],[\"parametertypes\",{\"1\":{\"234\":4,\"236\":1,\"237\":1}}],[\"parameter\",{\"1\":{\"33\":2,\"43\":2,\"86\":1,\"96\":1,\"123\":1,\"180\":1,\"183\":1,\"197\":4,\"200\":2,\"214\":1,\"219\":2,\"222\":1,\"226\":1,\"230\":2,\"234\":5,\"237\":1,\"241\":3,\"242\":6,\"290\":1,\"292\":1,\"294\":1,\"299\":1,\"305\":2,\"306\":1,\"312\":2}}],[\"parameters\",{\"0\":{\"324\":1},\"1\":{\"29\":1,\"33\":1,\"38\":1,\"43\":1,\"48\":1,\"126\":1,\"151\":3,\"171\":1,\"174\":1,\"179\":1,\"180\":1,\"183\":1,\"197\":1,\"199\":1,\"200\":1,\"213\":1,\"214\":1,\"231\":1,\"234\":3,\"236\":1,\"240\":1,\"241\":2,\"242\":5,\"243\":1,\"293\":1,\"298\":1}}],[\"poi\",{\"1\":{\"292\":1,\"293\":4,\"294\":2}}],[\"pointer\",{\"1\":{\"164\":1}}],[\"points\",{\"1\":{\"99\":1,\"128\":1,\"179\":1,\"182\":1,\"189\":1,\"195\":1}}],[\"point\",{\"1\":{\"36\":3,\"39\":4,\"48\":2,\"74\":1,\"81\":1,\"83\":2,\"86\":1,\"87\":2,\"98\":1,\"100\":1,\"101\":5,\"114\":1,\"122\":1,\"124\":1,\"156\":1,\"164\":1,\"179\":1,\"185\":1,\"212\":1,\"253\":1,\"288\":1,\"326\":1}}],[\"poorly\",{\"1\":{\"253\":1}}],[\"pool\",{\"1\":{\"33\":2,\"36\":1,\"37\":1,\"48\":3,\"100\":4,\"101\":1,\"195\":2,\"211\":1,\"268\":1}}],[\"pojoutils\",{\"1\":{\"242\":1}}],[\"pojo\",{\"1\":{\"234\":3}}],[\"pojos\",{\"1\":{\"231\":1}}],[\"popular\",{\"0\":{\"269\":1}}],[\"popularity\",{\"1\":{\"28\":1,\"308\":1,\"319\":1}}],[\"populated\",{\"1\":{\"136\":1}}],[\"positive\",{\"1\":{\"253\":1}}],[\"positioning\",{\"1\":{\"171\":1}}],[\"pos\",{\"1\":{\"220\":1}}],[\"possible\",{\"1\":{\"101\":1,\"253\":1,\"256\":1,\"290\":1,\"292\":11}}],[\"postgresql\",{\"1\":{\"284\":1,\"285\":1}}],[\"postforentity\",{\"1\":{\"105\":1}}],[\"posted\",{\"1\":{\"96\":1}}],[\"postmapping\",{\"1\":{\"78\":1,\"100\":1,\"328\":5}}],[\"postman\",{\"1\":{\"73\":1,\"260\":1}}],[\"post\",{\"1\":{\"70\":1,\"77\":1,\"81\":1,\"113\":1,\"180\":1}}],[\"policy\",{\"0\":{\"270\":1},\"1\":{\"87\":1,\"112\":1,\"171\":1,\"183\":1,\"212\":1,\"213\":1,\"214\":1}}],[\"polls\",{\"0\":{\"105\":1}}],[\"poll\",{\"1\":{\"28\":1,\"105\":2}}],[\"polling\",{\"0\":{\"94\":1,\"95\":1,\"99\":1,\"100\":1,\"102\":1,\"103\":1},\"1\":{\"25\":1,\"48\":9,\"88\":1,\"97\":1,\"98\":3,\"99\":2,\"100\":2,\"101\":1,\"103\":4,\"104\":4,\"105\":2,\"112\":2,\"116\":1,\"177\":1,\"304\":1,\"317\":1}}],[\"pom\",{\"0\":{\"144\":1,\"228\":1,\"230\":1},\"1\":{\"48\":1,\"58\":1,\"59\":1,\"154\":1,\"164\":2,\"202\":1,\"203\":1,\"224\":2,\"316\":4,\"326\":1}}],[\"portal\",{\"0\":{\"77\":1}}],[\"port\",{\"1\":{\"33\":1,\"57\":2,\"59\":1,\"62\":1,\"66\":2,\"72\":1,\"74\":1,\"164\":1,\"176\":7}}],[\"power\",{\"1\":{\"32\":1,\"33\":2}}],[\"pragmatism\",{\"1\":{\"307\":1,\"318\":1}}],[\"practice\",{\"1\":{\"211\":1}}],[\"practical\",{\"1\":{\"126\":1}}],[\"pr\",{\"1\":{\"46\":1,\"80\":1,\"292\":2,\"293\":14,\"294\":5,\"321\":1}}],[\"priority\",{\"1\":{\"247\":1,\"280\":1}}],[\"privilegedaction<void>\",{\"1\":{\"126\":1}}],[\"private\",{\"1\":{\"35\":2,\"36\":3,\"40\":8,\"42\":1,\"43\":15,\"48\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":4,\"86\":2,\"92\":2,\"97\":1,\"100\":1,\"104\":6,\"105\":1,\"111\":2,\"114\":2,\"117\":3,\"118\":2,\"122\":2,\"123\":6,\"126\":2,\"127\":4,\"132\":2,\"134\":3,\"135\":1,\"136\":2,\"137\":2,\"139\":5,\"156\":5,\"161\":6,\"162\":2,\"165\":2,\"166\":1,\"174\":1,\"175\":2,\"176\":2,\"177\":1,\"184\":2,\"214\":1,\"221\":2,\"241\":1,\"280\":1,\"305\":2,\"328\":1}}],[\"primary\",{\"1\":{\"109\":1,\"226\":1}}],[\"principles\",{\"1\":{\"254\":1,\"275\":1,\"286\":1}}],[\"principle\",{\"0\":{\"156\":1},\"1\":{\"121\":1,\"157\":1,\"159\":1,\"162\":1,\"164\":1,\"208\":2,\"250\":1,\"251\":1,\"254\":2,\"275\":1,\"282\":1,\"295\":1}}],[\"principal\",{\"0\":{\"18\":1}}],[\"printing\",{\"1\":{\"182\":2,\"212\":1}}],[\"printstacktrace\",{\"1\":{\"129\":3}}],[\"println\",{\"1\":{\"121\":1,\"122\":5,\"123\":2,\"129\":2,\"147\":1,\"179\":2,\"280\":6}}],[\"printed\",{\"1\":{\"48\":1,\"70\":1}}],[\"print\",{\"1\":{\"48\":2,\"70\":1}}],[\"precautions\",{\"1\":{\"328\":1}}],[\"precedence\",{\"1\":{\"187\":1}}],[\"preceding\",{\"1\":{\"70\":1,\"180\":1}}],[\"preliminary\",{\"0\":{\"253\":1}}],[\"preparation\",{\"0\":{\"236\":1},\"1\":{\"224\":1}}],[\"prepare\",{\"0\":{\"50\":1},\"1\":{\"172\":1,\"226\":1}}],[\"preheating\",{\"1\":{\"211\":2}}],[\"preference\",{\"1\":{\"247\":1}}],[\"preferences\",{\"1\":{\"209\":1}}],[\"prefix\",{\"1\":{\"46\":1,\"48\":2,\"112\":2,\"117\":2,\"123\":3,\"127\":8,\"156\":1,\"166\":2,\"206\":1,\"207\":1,\"251\":1,\"252\":1}}],[\"preset\",{\"1\":{\"211\":3}}],[\"present\",{\"1\":{\"101\":1,\"179\":1,\"200\":1,\"283\":1,\"321\":1}}],[\"pressure\",{\"1\":{\"212\":1}}],[\"press\",{\"0\":{\"65\":1},\"1\":{\"65\":1,\"80\":1,\"219\":1}}],[\"predicted\",{\"1\":{\"91\":1}}],[\"prevents\",{\"1\":{\"104\":1}}],[\"prevent\",{\"1\":{\"81\":1,\"105\":1,\"113\":1,\"274\":1}}],[\"previously\",{\"1\":{\"48\":3,\"122\":1,\"207\":1}}],[\"previous\",{\"1\":{\"48\":3,\"70\":1,\"81\":2,\"96\":1,\"105\":1,\"118\":1,\"124\":1,\"159\":2,\"173\":1,\"179\":1,\"187\":1,\"280\":1,\"298\":1,\"305\":1}}],[\"pre\",{\"1\":{\"32\":1,\"91\":1,\"179\":1,\"187\":1}}],[\"prometheus\",{\"1\":{\"312\":1}}],[\"promises\",{\"1\":{\"256\":1}}],[\"promote\",{\"1\":{\"14\":1,\"15\":1}}],[\"promotions\",{\"1\":{\"210\":1}}],[\"promotion\",{\"1\":{\"6\":1,\"7\":1}}],[\"provision\",{\"1\":{\"256\":1}}],[\"providers\",{\"1\":{\"123\":2}}],[\"provider\",{\"0\":{\"242\":1},\"1\":{\"43\":1,\"121\":2,\"123\":3,\"234\":2,\"240\":1,\"242\":2,\"243\":1,\"279\":1,\"280\":1}}],[\"provides\",{\"1\":{\"34\":1,\"97\":1,\"214\":1,\"217\":1,\"222\":1,\"225\":1,\"270\":1,\"283\":2,\"289\":1,\"293\":2,\"303\":1,\"304\":1,\"317\":1}}],[\"provided\",{\"1\":{\"33\":1,\"72\":1,\"104\":1,\"117\":1,\"120\":1,\"212\":1,\"230\":1,\"302\":1,\"321\":1}}],[\"provide\",{\"1\":{\"9\":1,\"46\":1,\"84\":1,\"87\":1,\"116\":1,\"212\":1,\"234\":1,\"271\":1,\"274\":1,\"281\":1,\"305\":1,\"309\":1,\"320\":1}}],[\"proxies\",{\"1\":{\"164\":1}}],[\"proxied\",{\"1\":{\"106\":1,\"230\":1}}],[\"proxy\",{\"1\":{\"164\":1,\"171\":2,\"182\":3,\"201\":1,\"226\":1,\"303\":2,\"310\":1}}],[\"proxy=\",{\"1\":{\"43\":1}}],[\"protection\",{\"1\":{\"212\":1,\"213\":1}}],[\"protect\",{\"1\":{\"210\":1,\"211\":1}}],[\"protected\",{\"1\":{\"87\":1,\"97\":4,\"100\":1,\"104\":1,\"118\":1,\"166\":1,\"172\":1,\"183\":1,\"197\":1,\"207\":2,\"210\":1,\"214\":1,\"221\":1,\"236\":1}}],[\"protobuf\",{\"1\":{\"284\":1}}],[\"protostuff\",{\"1\":{\"33\":4,\"34\":1}}],[\"protocolutils\",{\"1\":{\"241\":3,\"242\":4}}],[\"protocol\",{\"1\":{\"25\":1,\"68\":1,\"69\":1,\"81\":1,\"225\":1,\"226\":1,\"305\":3,\"322\":1}}],[\"proces\",{\"1\":{\"207\":1}}],[\"processes\",{\"1\":{\"185\":1,\"210\":1,\"212\":1,\"242\":1}}],[\"processed\",{\"1\":{\"178\":1,\"207\":1,\"211\":1,\"212\":1,\"214\":1,\"317\":1}}],[\"processor\",{\"1\":{\"77\":1}}],[\"processing\",{\"0\":{\"113\":1,\"172\":1,\"185\":1},\"1\":{\"22\":1,\"69\":1,\"92\":1,\"104\":3,\"112\":1,\"113\":1,\"117\":2,\"118\":1,\"130\":1,\"165\":1,\"172\":5,\"177\":1,\"178\":1,\"179\":6,\"182\":3,\"184\":1,\"185\":2,\"187\":1,\"207\":2,\"210\":2,\"211\":1,\"212\":1,\"214\":5,\"218\":1,\"221\":1,\"226\":1,\"247\":1,\"253\":1,\"306\":1,\"328\":1}}],[\"process\",{\"0\":{\"66\":1,\"160\":1},\"1\":{\"22\":1,\"25\":1,\"35\":1,\"69\":1,\"72\":1,\"74\":1,\"83\":2,\"84\":1,\"100\":1,\"103\":1,\"104\":2,\"105\":3,\"106\":3,\"118\":1,\"124\":1,\"159\":2,\"161\":1,\"164\":4,\"165\":2,\"172\":2,\"175\":1,\"176\":1,\"179\":3,\"181\":1,\"182\":2,\"184\":2,\"187\":1,\"195\":1,\"197\":1,\"212\":1,\"214\":2,\"226\":1,\"242\":1,\"243\":2,\"253\":1,\"317\":1}}],[\"proceed\",{\"1\":{\"36\":1}}],[\"proceedingjoinpoint\",{\"1\":{\"36\":2,\"39\":1}}],[\"produces\",{\"1\":{\"123\":1}}],[\"produce\",{\"1\":{\"123\":1}}],[\"producertype\",{\"1\":{\"35\":2}}],[\"production\",{\"1\":{\"4\":1,\"210\":1}}],[\"products\",{\"1\":{\"4\":1}}],[\"propagates\",{\"1\":{\"321\":1}}],[\"propagation\",{\"1\":{\"34\":1}}],[\"proportion\",{\"1\":{\"212\":3,\"213\":2}}],[\"props\",{\"1\":{\"127\":1}}],[\"properly\",{\"1\":{\"57\":1,\"100\":1,\"131\":1}}],[\"property\",{\"1\":{\"48\":1,\"112\":1,\"123\":1,\"139\":1,\"179\":1,\"180\":1}}],[\"property>\",{\"1\":{\"33\":6,\"43\":1}}],[\"propertiesset\",{\"1\":{\"112\":1,\"156\":1}}],[\"properties\",{\"1\":{\"43\":1,\"127\":4,\"136\":5,\"139\":5,\"156\":1,\"166\":4,\"180\":1,\"184\":1,\"280\":1}}],[\"proper\",{\"1\":{\"39\":1}}],[\"probe\",{\"0\":{\"173\":1},\"1\":{\"174\":2,\"175\":1,\"176\":1}}],[\"probability\",{\"1\":{\"89\":1}}],[\"probably\",{\"1\":{\"32\":1,\"65\":1}}],[\"problem\",{\"0\":{\"66\":1},\"1\":{\"48\":1,\"66\":1,\"105\":1,\"129\":1,\"164\":2,\"211\":2,\"276\":1,\"288\":1,\"290\":2,\"292\":1,\"294\":1}}],[\"problems\",{\"1\":{\"4\":1,\"22\":1,\"131\":2,\"285\":1,\"290\":1,\"294\":1,\"308\":1,\"319\":1}}],[\"prospects\",{\"1\":{\"22\":1,\"25\":1}}],[\"programmer\",{\"1\":{\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"programmers\",{\"1\":{\"305\":2}}],[\"programming\",{\"1\":{\"22\":1,\"48\":2,\"184\":2,\"217\":1,\"221\":2,\"235\":1,\"309\":2,\"320\":2}}],[\"program\",{\"1\":{\"38\":1,\"131\":1,\"235\":1,\"305\":1,\"317\":1}}],[\"progress\",{\"1\":{\"15\":1}}],[\"project\",{\"0\":{\"8\":1,\"68\":1,\"87\":1,\"246\":1,\"253\":1,\"323\":1},\"1\":{\"4\":1,\"6\":1,\"7\":1,\"8\":4,\"43\":2,\"46\":1,\"48\":1,\"54\":1,\"72\":1,\"86\":2,\"87\":4,\"107\":1,\"109\":1,\"116\":1,\"117\":2,\"119\":3,\"132\":1,\"154\":1,\"156\":1,\"161\":1,\"164\":1,\"182\":1,\"202\":1,\"203\":1,\"218\":1,\"228\":1,\"248\":2,\"249\":4,\"253\":9,\"254\":6,\"272\":1,\"280\":2,\"309\":1,\"315\":1,\"320\":1,\"321\":3,\"322\":2,\"326\":2}}],[\"projects\",{\"0\":{\"4\":1,\"337\":1},\"1\":{\"4\":1,\"6\":2,\"7\":4,\"8\":2,\"68\":1,\"86\":1,\"247\":10,\"248\":1,\"253\":1,\"254\":3,\"305\":1,\"308\":1,\"319\":1,\"321\":2}}],[\"punycode\",{\"1\":{\"292\":1}}],[\"punished\",{\"1\":{\"16\":1,\"91\":1}}],[\"punishment\",{\"1\":{\"16\":1,\"91\":1}}],[\"push\",{\"1\":{\"253\":1}}],[\"puzzle\",{\"1\":{\"179\":1}}],[\"purchase\",{\"1\":{\"290\":1}}],[\"pursues\",{\"1\":{\"275\":1}}],[\"pursuit\",{\"1\":{\"83\":1}}],[\"purposes\",{\"1\":{\"134\":1}}],[\"purpose\",{\"0\":{\"15\":1},\"1\":{\"156\":1,\"179\":1,\"180\":1,\"309\":1,\"320\":1}}],[\"publishconfig\",{\"1\":{\"165\":5}}],[\"publishes\",{\"1\":{\"81\":1,\"156\":1,\"165\":1}}],[\"published\",{\"1\":{\"80\":1,\"110\":1,\"113\":1,\"156\":1,\"251\":1}}],[\"publishevent\",{\"1\":{\"35\":2,\"39\":2,\"48\":5,\"79\":1,\"80\":2,\"81\":3,\"82\":2,\"109\":1,\"156\":3,\"165\":2}}],[\"publisher\",{\"1\":{\"35\":2,\"156\":1}}],[\"publish\",{\"0\":{\"110\":1},\"1\":{\"35\":1,\"79\":1,\"81\":1,\"109\":2,\"156\":1,\"157\":1,\"159\":1,\"162\":1,\"165\":1,\"308\":2,\"319\":2}}],[\"public\",{\"1\":{\"35\":5,\"36\":3,\"39\":2,\"40\":6,\"43\":1,\"48\":1,\"77\":1,\"78\":2,\"80\":1,\"82\":3,\"85\":1,\"86\":8,\"89\":1,\"90\":1,\"91\":1,\"92\":2,\"93\":1,\"97\":7,\"98\":4,\"100\":7,\"104\":6,\"105\":1,\"109\":3,\"110\":2,\"111\":4,\"112\":9,\"113\":7,\"114\":6,\"116\":2,\"117\":7,\"118\":7,\"120\":2,\"122\":6,\"123\":8,\"126\":6,\"127\":5,\"129\":2,\"132\":3,\"135\":1,\"139\":2,\"147\":1,\"156\":13,\"161\":5,\"162\":2,\"165\":4,\"166\":6,\"172\":1,\"173\":1,\"176\":1,\"177\":2,\"179\":2,\"180\":1,\"182\":1,\"184\":1,\"185\":1,\"195\":1,\"197\":1,\"207\":2,\"214\":13,\"219\":1,\"220\":1,\"221\":2,\"230\":1,\"234\":1,\"235\":2,\"237\":1,\"238\":1,\"241\":2,\"242\":2,\"280\":14,\"305\":2,\"327\":2,\"328\":6}}],[\"publicity\",{\"1\":{\"6\":1,\"7\":1,\"254\":1}}],[\"putattr\",{\"1\":{\"328\":1}}],[\"putall\",{\"1\":{\"93\":2,\"185\":2}}],[\"puts\",{\"1\":{\"293\":1}}],[\"putmapping\",{\"1\":{\"109\":1}}],[\"putifabsent\",{\"1\":{\"91\":2,\"132\":1,\"137\":1,\"139\":2}}],[\"put\",{\"1\":{\"32\":1,\"40\":1,\"48\":1,\"82\":3,\"87\":2,\"89\":1,\"91\":1,\"97\":1,\"100\":1,\"104\":5,\"105\":1,\"108\":1,\"114\":1,\"117\":5,\"123\":2,\"124\":1,\"126\":1,\"139\":2,\"147\":3,\"162\":1,\"165\":1,\"172\":3,\"175\":1,\"180\":2,\"183\":3,\"184\":5,\"195\":2,\"212\":1,\"237\":2,\"321\":1}}],[\"pulled\",{\"1\":{\"104\":1}}],[\"pulling\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"211\":1}}],[\"pull\",{\"0\":{\"104\":1},\"1\":{\"28\":1,\"104\":5,\"105\":1,\"284\":1}}],[\"pv\",{\"1\":{\"4\":1}}],[\"ncy\",{\"1\":{\"256\":1}}],[\"nb\",{\"1\":{\"256\":1}}],[\"nights\",{\"1\":{\"290\":1}}],[\"niverkk\",{\"1\":{\"256\":1}}],[\"nio\",{\"1\":{\"219\":9}}],[\"nil\",{\"1\":{\"200\":2}}],[\"nginx\",{\"1\":{\"214\":1}}],[\"n\",{\"1\":{\"164\":1,\"219\":1}}],[\"numerals\",{\"1\":{\"293\":1}}],[\"num\",{\"1\":{\"89\":2,\"200\":3}}],[\"numberconverter\",{\"1\":{\"294\":1}}],[\"number\",{\"1\":{\"33\":1,\"48\":1,\"90\":2,\"105\":2,\"175\":1,\"177\":4,\"183\":1,\"184\":1,\"185\":1,\"189\":2,\"197\":1,\"198\":2,\"199\":1,\"211\":5,\"212\":5,\"213\":8,\"214\":5,\"218\":3,\"219\":4,\"235\":1,\"293\":1,\"294\":1}}],[\"nullpointerexception\",{\"1\":{\"126\":1,\"164\":4}}],[\"null\",{\"1\":{\"35\":1,\"39\":1,\"82\":1,\"85\":5,\"91\":5,\"92\":1,\"93\":2,\"100\":1,\"104\":2,\"105\":2,\"114\":1,\"123\":12,\"126\":3,\"127\":4,\"128\":2,\"132\":1,\"137\":1,\"139\":11,\"151\":2,\"164\":2,\"172\":1,\"182\":3,\"183\":3,\"184\":2,\"185\":2,\"193\":1,\"197\":1,\"207\":1,\"214\":7,\"221\":7,\"226\":16,\"236\":4,\"238\":1,\"241\":1,\"242\":3,\"294\":2,\"328\":1}}],[\"native\",{\"1\":{\"241\":1,\"242\":1}}],[\"nativejava\",{\"1\":{\"241\":1,\"242\":2}}],[\"natural\",{\"1\":{\"195\":1}}],[\"naturalorder\",{\"1\":{\"147\":1}}],[\"naturally\",{\"1\":{\"31\":1,\"87\":1,\"105\":1,\"274\":1}}],[\"na\",{\"1\":{\"164\":9}}],[\"nacosfactory\",{\"1\":{\"166\":1}}],[\"nacosdata\",{\"1\":{\"165\":5}}],[\"nacosdatachangedlistener\",{\"1\":{\"112\":3,\"165\":2}}],[\"nacosconfig\",{\"1\":{\"166\":5}}],[\"nacosconfigservice\",{\"1\":{\"166\":1}}],[\"nacosconfiguration\",{\"1\":{\"112\":1}}],[\"nacoscachehandler\",{\"1\":{\"164\":4}}],[\"nacossyncdata\",{\"1\":{\"166\":4}}],[\"nacossyncdataconfiguration$$enhancerbyspringcglib$$cce084b7$$fastclassbyspringcglib$$3830e886\",{\"1\":{\"164\":1}}],[\"nacossyncdataconfiguration$$enhancerbyspringcglib$$cce084b7\",{\"1\":{\"164\":2}}],[\"nacossyncdataconfiguration\",{\"1\":{\"164\":4,\"166\":5}}],[\"nacossyncdataservice\",{\"1\":{\"164\":9,\"166\":4}}],[\"nacos<\",{\"1\":{\"164\":2}}],[\"nacoslistener\",{\"1\":{\"112\":1}}],[\"nacos\",{\"0\":{\"164\":1},\"1\":{\"112\":3,\"116\":1,\"164\":27,\"165\":4,\"166\":13,\"275\":1,\"280\":3,\"284\":1,\"285\":1,\"312\":2}}],[\"namingcase\",{\"1\":{\"294\":1}}],[\"naming\",{\"1\":{\"42\":1,\"119\":1}}],[\"names\",{\"1\":{\"280\":1}}],[\"namespace\",{\"1\":{\"72\":1,\"164\":6,\"274\":1,\"280\":1,\"283\":1}}],[\"name`\",{\"1\":{\"226\":3}}],[\"namely\",{\"1\":{\"179\":1,\"217\":2,\"240\":1}}],[\"named\",{\"1\":{\"85\":1,\"86\":1,\"172\":1,\"182\":1,\"207\":1,\"214\":1,\"280\":1}}],[\"name=10\",{\"1\":{\"155\":1}}],[\"name=\",{\"1\":{\"33\":43,\"43\":11}}],[\"name\",{\"0\":{\"325\":1},\"1\":{\"4\":1,\"48\":3,\"56\":2,\"61\":2,\"64\":12,\"69\":1,\"70\":2,\"80\":1,\"82\":5,\"85\":2,\"92\":1,\"97\":2,\"98\":2,\"104\":1,\"105\":1,\"112\":5,\"113\":10,\"114\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":3,\"121\":1,\"123\":1,\"135\":2,\"136\":2,\"137\":2,\"139\":15,\"156\":1,\"164\":1,\"166\":1,\"172\":1,\"176\":1,\"177\":1,\"179\":2,\"180\":1,\"204\":1,\"212\":1,\"214\":3,\"226\":3,\"230\":1,\"234\":2,\"242\":4,\"248\":2,\"251\":1,\"253\":1,\"256\":1,\"294\":1,\"305\":3,\"314\":1,\"322\":2,\"326\":2}}],[\"neal\",{\"1\":{\"256\":1}}],[\"nelson\",{\"1\":{\"256\":1}}],[\"necessary\",{\"1\":{\"209\":1}}],[\"nested\",{\"1\":{\"164\":3,\"274\":1}}],[\"negotiated\",{\"1\":{\"155\":2}}],[\"netease\",{\"1\":{\"322\":1}}],[\"net\",{\"1\":{\"244\":1,\"305\":1}}],[\"netflix\",{\"1\":{\"217\":2}}],[\"network\",{\"1\":{\"105\":1}}],[\"nettywebserver\",{\"1\":{\"57\":1,\"164\":1}}],[\"netty\",{\"1\":{\"57\":2,\"164\":2}}],[\"needs\",{\"1\":{\"74\":1,\"77\":1,\"83\":1,\"86\":1,\"106\":1,\"114\":1,\"126\":1,\"154\":1,\"156\":1,\"164\":2,\"173\":1,\"177\":1,\"191\":1,\"195\":1,\"198\":1,\"199\":1,\"213\":1,\"214\":2,\"253\":1,\"278\":1,\"280\":3}}],[\"needed\",{\"1\":{\"30\":1,\"124\":1,\"129\":1,\"328\":1}}],[\"need\",{\"0\":{\"46\":1},\"1\":{\"16\":1,\"37\":1,\"42\":1,\"48\":1,\"59\":1,\"72\":1,\"83\":2,\"86\":3,\"87\":1,\"106\":1,\"107\":1,\"121\":3,\"124\":1,\"129\":2,\"131\":1,\"156\":1,\"177\":1,\"179\":1,\"182\":1,\"184\":1,\"197\":1,\"206\":1,\"207\":1,\"212\":2,\"213\":1,\"214\":2,\"217\":2,\"220\":1,\"221\":1,\"225\":1,\"234\":1,\"247\":1,\"248\":1,\"250\":1,\"253\":1,\"254\":1,\"280\":5,\"281\":1,\"305\":2,\"307\":2,\"308\":3,\"309\":1,\"318\":2,\"319\":3,\"320\":1,\"328\":4}}],[\"nextservice\",{\"1\":{\"123\":2}}],[\"nextelement\",{\"1\":{\"123\":1,\"139\":1}}],[\"nextname\",{\"1\":{\"123\":5}}],[\"nextint\",{\"1\":{\"90\":2,\"177\":1,\"220\":1}}],[\"next\",{\"0\":{\"281\":1},\"1\":{\"16\":1,\"33\":2,\"46\":1,\"48\":1,\"81\":1,\"85\":4,\"86\":1,\"87\":1,\"96\":1,\"100\":1,\"101\":2,\"104\":2,\"105\":1,\"123\":3,\"126\":1,\"128\":1,\"129\":2,\"131\":1,\"175\":1,\"180\":1,\"181\":1,\"182\":1,\"184\":1,\"207\":1,\"212\":1,\"213\":1,\"242\":3,\"251\":1,\"281\":1}}],[\"news\",{\"0\":{\"258\":1}}],[\"newly\",{\"1\":{\"162\":1}}],[\"newhashmapwithexpectedsize\",{\"1\":{\"147\":1}}],[\"newarraylistwithcapacity\",{\"1\":{\"175\":1}}],[\"newarraylist\",{\"1\":{\"105\":1}}],[\"newval\",{\"1\":{\"97\":4}}],[\"newmap\",{\"1\":{\"91\":3}}],[\"newinstance\",{\"1\":{\"82\":1,\"123\":1,\"137\":1,\"139\":1}}],[\"newbuilder\",{\"1\":{\"40\":1}}],[\"new\",{\"0\":{\"272\":1,\"293\":1,\"313\":1,\"316\":1},\"1\":{\"6\":2,\"35\":14,\"36\":3,\"39\":1,\"40\":5,\"48\":1,\"77\":3,\"79\":1,\"80\":2,\"81\":2,\"82\":2,\"86\":3,\"89\":1,\"91\":3,\"97\":4,\"98\":1,\"100\":3,\"101\":1,\"104\":12,\"105\":4,\"109\":1,\"111\":2,\"112\":7,\"113\":6,\"114\":1,\"116\":1,\"117\":9,\"121\":1,\"123\":5,\"126\":6,\"129\":1,\"132\":2,\"134\":3,\"135\":1,\"136\":2,\"137\":1,\"139\":5,\"147\":1,\"156\":9,\"161\":3,\"162\":1,\"165\":6,\"166\":5,\"174\":1,\"176\":2,\"179\":1,\"185\":1,\"195\":2,\"197\":3,\"200\":5,\"207\":4,\"214\":7,\"220\":2,\"221\":1,\"232\":1,\"235\":1,\"237\":5,\"242\":8,\"249\":1,\"268\":1,\"272\":1,\"280\":2,\"284\":3,\"285\":2,\"293\":1,\"308\":2,\"309\":1,\"312\":1,\"319\":2,\"320\":1,\"329\":1}}],[\"neutrality\",{\"1\":{\"2\":1}}],[\"nos\",{\"1\":{\"322\":1}}],[\"nosuchmethodexception\",{\"1\":{\"242\":1}}],[\"nosuchelementexception\",{\"1\":{\"123\":1}}],[\"novice\",{\"1\":{\"321\":1}}],[\"normally\",{\"1\":{\"211\":1}}],[\"normal\",{\"1\":{\"99\":1,\"127\":1,\"211\":1,\"212\":1,\"213\":4,\"220\":1,\"305\":1}}],[\"noconfig\",{\"1\":{\"57\":1}}],[\"no\",{\"1\":{\"36\":1,\"37\":1,\"57\":1,\"80\":1,\"82\":1,\"86\":1,\"92\":1,\"101\":1,\"105\":3,\"106\":1,\"107\":1,\"121\":1,\"123\":1,\"129\":1,\"131\":1,\"164\":2,\"174\":1,\"182\":1,\"183\":1,\"185\":1,\"218\":1,\"278\":1,\"288\":1,\"305\":1,\"309\":1,\"317\":1,\"320\":1}}],[\"nodes\",{\"1\":{\"81\":1,\"87\":1,\"91\":7,\"120\":1,\"161\":1,\"162\":1,\"214\":2,\"308\":2,\"319\":2}}],[\"node\",{\"1\":{\"33\":1,\"48\":2,\"81\":5,\"87\":4,\"89\":7,\"90\":2,\"91\":7,\"92\":1,\"98\":3,\"120\":1,\"161\":1,\"162\":3,\"214\":3,\"308\":1,\"317\":1,\"319\":1}}],[\"nowadays\",{\"1\":{\"309\":1,\"320\":1}}],[\"now\",{\"1\":{\"28\":1,\"29\":2,\"87\":1,\"91\":3,\"98\":1,\"100\":1,\"101\":1,\"110\":1,\"147\":2,\"179\":2,\"197\":1,\"200\":3,\"280\":1,\"302\":1,\"306\":1,\"321\":1}}],[\"notifies\",{\"1\":{\"104\":1,\"118\":1}}],[\"notified\",{\"1\":{\"104\":1,\"105\":1}}],[\"notifications\",{\"1\":{\"112\":1}}],[\"notification\",{\"1\":{\"98\":1,\"112\":1,\"118\":3,\"195\":1}}],[\"notifying\",{\"1\":{\"98\":1}}],[\"notify\",{\"1\":{\"97\":1,\"98\":1,\"105\":1,\"116\":1,\"117\":1,\"119\":1}}],[\"noticed\",{\"1\":{\"306\":1}}],[\"notice\",{\"1\":{\"72\":1,\"172\":1}}],[\"nothing\",{\"1\":{\"80\":1,\"126\":1,\"164\":1,\"207\":1}}],[\"noted\",{\"1\":{\"147\":1,\"213\":1,\"214\":3}}],[\"note\",{\"1\":{\"43\":1,\"46\":1,\"72\":1,\"74\":1,\"191\":1,\"253\":1}}],[\"not\",{\"1\":{\"6\":1,\"7\":4,\"16\":2,\"32\":2,\"38\":1,\"40\":1,\"43\":1,\"48\":6,\"70\":3,\"80\":1,\"81\":1,\"85\":1,\"86\":1,\"88\":1,\"89\":2,\"90\":1,\"91\":3,\"92\":1,\"97\":1,\"99\":1,\"100\":2,\"101\":5,\"104\":2,\"110\":1,\"112\":1,\"113\":1,\"118\":1,\"122\":1,\"123\":5,\"124\":3,\"128\":1,\"129\":1,\"131\":2,\"139\":1,\"151\":2,\"155\":1,\"156\":1,\"164\":8,\"172\":1,\"177\":2,\"179\":15,\"180\":4,\"182\":1,\"184\":1,\"191\":1,\"195\":2,\"197\":2,\"200\":2,\"207\":1,\"210\":3,\"211\":2,\"212\":7,\"213\":3,\"214\":3,\"217\":1,\"220\":1,\"226\":9,\"231\":1,\"235\":1,\"241\":1,\"242\":1,\"254\":2,\"276\":2,\"285\":2,\"290\":1,\"292\":1,\"306\":1,\"308\":2,\"316\":1,\"319\":2,\"321\":3,\"322\":1}}],[\"nonregisteringdriver\",{\"1\":{\"126\":1,\"127\":2}}],[\"none\",{\"1\":{\"86\":1,\"226\":1}}],[\"nonnull\",{\"1\":{\"86\":1,\"195\":1,\"235\":1}}],[\"non\",{\"1\":{\"4\":1,\"176\":1,\"212\":1,\"241\":1,\"253\":1}}],[\"i85qpe\",{\"1\":{\"335\":1}}],[\"ibm\",{\"1\":{\"322\":1}}],[\"i4zsgj\",{\"1\":{\"294\":1}}],[\"i4zbn0\",{\"1\":{\"294\":1}}],[\"i4z7bv\",{\"1\":{\"294\":1}}],[\"i4zkcw\",{\"1\":{\"293\":1}}],[\"i4wpf4\",{\"1\":{\"294\":1}}],[\"i4wuwr\",{\"1\":{\"293\":1,\"294\":1}}],[\"i4wh2x\",{\"1\":{\"293\":1}}],[\"i4w5fs\",{\"1\":{\"293\":1}}],[\"i4w427\",{\"1\":{\"293\":1}}],[\"ian\",{\"1\":{\"256\":1}}],[\"iam\",{\"1\":{\"4\":1}}],[\"ignored\",{\"1\":{\"176\":1,\"179\":1}}],[\"ignoreexceptionhandler\",{\"1\":{\"35\":2}}],[\"izkdatalistener\",{\"1\":{\"162\":1}}],[\"iv\",{\"0\":{\"157\":1,\"163\":1}}],[\"i0itec\",{\"1\":{\"155\":5,\"156\":1}}],[\"iot\",{\"1\":{\"247\":1}}],[\"ioc\",{\"1\":{\"156\":2,\"161\":1}}],[\"ioexception\",{\"1\":{\"114\":2,\"123\":1,\"136\":1,\"139\":1,\"176\":2}}],[\"io\",{\"1\":{\"101\":1,\"105\":1,\"124\":1,\"244\":1,\"314\":1,\"315\":1}}],[\"iii\",{\"0\":{\"72\":1,\"156\":1}}],[\"ii\",{\"0\":{\"69\":1,\"155\":1}}],[\"iphost\",{\"1\":{\"306\":1}}],[\"ip=\",{\"1\":{\"100\":1}}],[\"ip\",{\"1\":{\"57\":1,\"70\":2,\"87\":1,\"89\":6,\"90\":1,\"91\":1,\"100\":1,\"120\":3,\"172\":4,\"173\":1,\"176\":6,\"177\":5,\"183\":2}}],[\"i++\",{\"1\":{\"35\":2,\"89\":1,\"90\":1,\"122\":1,\"123\":1,\"242\":2}}],[\"idletimeout\",{\"1\":{\"280\":1}}],[\"id\",{\"0\":{\"198\":1},\"1\":{\"82\":2,\"87\":1,\"109\":5,\"142\":2,\"165\":4,\"166\":1,\"173\":2,\"197\":2,\"198\":1,\"199\":1,\"226\":1,\"305\":2,\"328\":1}}],[\"id=1\",{\"1\":{\"73\":2}}],[\"id=\",{\"1\":{\"33\":1,\"43\":1,\"233\":1,\"270\":1}}],[\"identification\",{\"1\":{\"326\":1}}],[\"identifiers\",{\"1\":{\"139\":1}}],[\"identifier\",{\"1\":{\"137\":1,\"139\":7}}],[\"identified\",{\"1\":{\"48\":1,\"81\":1}}],[\"identify\",{\"1\":{\"253\":1,\"280\":1}}],[\"identical\",{\"1\":{\"214\":1}}],[\"identity\",{\"1\":{\"4\":1,\"135\":1,\"136\":1}}],[\"ideas\",{\"1\":{\"282\":1,\"286\":1,\"295\":1,\"321\":1}}],[\"ideal\",{\"1\":{\"32\":1}}],[\"idea\",{\"0\":{\"1\":1,\"53\":1},\"1\":{\"69\":2,\"74\":1,\"87\":1,\"130\":1,\"169\":1,\"211\":3,\"260\":2}}],[\"i\",{\"0\":{\"68\":1,\"154\":1,\"169\":1},\"1\":{\"29\":1,\"33\":5,\"35\":6,\"43\":1,\"48\":6,\"72\":1,\"74\":1,\"78\":2,\"85\":1,\"87\":1,\"89\":3,\"90\":5,\"99\":1,\"101\":3,\"113\":1,\"120\":1,\"122\":5,\"123\":2,\"124\":6,\"128\":1,\"129\":2,\"133\":2,\"139\":1,\"164\":2,\"180\":1,\"182\":1,\"197\":1,\"198\":1,\"200\":2,\"220\":2,\"241\":1,\"242\":11,\"243\":1,\"286\":1,\"290\":4,\"302\":1,\"307\":1,\"308\":3,\"309\":2,\"311\":1,\"312\":1,\"316\":6,\"317\":1,\"318\":1,\"319\":3,\"320\":2,\"321\":8}}],[\"iterutil\",{\"1\":{\"294\":1}}],[\"iterable<s>\",{\"1\":{\"123\":2}}],[\"iterating\",{\"1\":{\"134\":1}}],[\"iteration\",{\"1\":{\"123\":1,\"124\":1,\"133\":1}}],[\"iterator<driver>\",{\"1\":{\"126\":1}}],[\"iterator<s>\",{\"1\":{\"123\":1}}],[\"iterator<longpollingclient>\",{\"1\":{\"100\":1}}],[\"iterator\",{\"1\":{\"100\":1,\"123\":3,\"126\":1,\"133\":1}}],[\"iterates\",{\"1\":{\"114\":1,\"129\":1}}],[\"iterate\",{\"1\":{\"100\":1,\"131\":1}}],[\"iter\",{\"1\":{\"100\":4}}],[\"items\",{\"1\":{\"212\":2,\"213\":1}}],[\"item\",{\"1\":{\"91\":2,\"212\":1}}],[\"itself\",{\"1\":{\"91\":1,\"97\":1,\"98\":1,\"128\":2,\"129\":1,\"137\":1,\"172\":1,\"201\":1,\"207\":1,\"210\":1,\"211\":1,\"235\":1}}],[\"its\",{\"1\":{\"29\":1,\"30\":1,\"69\":1,\"84\":1,\"86\":2,\"87\":1,\"97\":1,\"100\":2,\"101\":1,\"112\":1,\"118\":2,\"120\":2,\"121\":1,\"122\":2,\"123\":1,\"124\":1,\"126\":2,\"128\":1,\"131\":1,\"132\":1,\"161\":1,\"162\":1,\"189\":1,\"208\":1,\"212\":1,\"270\":1,\"290\":1}}],[\"it\",{\"0\":{\"46\":1,\"161\":1,\"189\":1},\"1\":{\"28\":1,\"29\":3,\"30\":4,\"31\":1,\"32\":3,\"33\":2,\"39\":1,\"40\":3,\"42\":2,\"43\":2,\"48\":21,\"57\":1,\"61\":1,\"64\":1,\"69\":2,\"70\":1,\"73\":1,\"77\":1,\"78\":1,\"80\":2,\"81\":3,\"83\":1,\"85\":1,\"86\":4,\"87\":2,\"90\":1,\"91\":3,\"92\":1,\"97\":1,\"98\":1,\"99\":4,\"100\":7,\"101\":4,\"104\":10,\"105\":4,\"106\":2,\"109\":1,\"110\":4,\"112\":1,\"113\":3,\"114\":5,\"116\":2,\"117\":2,\"119\":1,\"120\":2,\"122\":5,\"123\":6,\"124\":6,\"128\":3,\"129\":1,\"131\":2,\"132\":3,\"133\":2,\"134\":1,\"135\":3,\"136\":2,\"137\":1,\"139\":3,\"156\":2,\"157\":1,\"159\":1,\"162\":1,\"164\":5,\"165\":2,\"169\":1,\"171\":1,\"174\":2,\"175\":1,\"176\":1,\"179\":7,\"180\":5,\"181\":2,\"182\":3,\"184\":2,\"187\":1,\"189\":1,\"192\":1,\"195\":1,\"197\":2,\"199\":2,\"200\":5,\"201\":3,\"205\":1,\"207\":3,\"209\":2,\"210\":3,\"211\":5,\"212\":9,\"213\":4,\"214\":5,\"217\":2,\"219\":1,\"220\":1,\"221\":2,\"225\":1,\"231\":1,\"234\":1,\"235\":2,\"241\":3,\"242\":3,\"243\":1,\"252\":1,\"253\":4,\"275\":1,\"276\":1,\"277\":1,\"280\":2,\"281\":4,\"283\":2,\"285\":1,\"290\":3,\"298\":1,\"299\":1,\"302\":2,\"304\":1,\"305\":3,\"306\":2,\"307\":2,\"308\":3,\"309\":1,\"311\":1,\"314\":1,\"318\":2,\"319\":3,\"320\":1,\"321\":5,\"322\":1,\"328\":3,\"329\":1}}],[\"ifmissing\",{\"1\":{\"112\":1}}],[\"ifpresent\",{\"1\":{\"39\":1,\"86\":1,\"118\":3,\"162\":2}}],[\"if\",{\"0\":{\"32\":1,\"37\":1,\"38\":1,\"300\":1},\"1\":{\"16\":1,\"30\":1,\"31\":1,\"32\":2,\"33\":4,\"36\":2,\"37\":1,\"38\":2,\"39\":1,\"40\":1,\"43\":2,\"46\":1,\"48\":11,\"57\":1,\"59\":1,\"69\":1,\"78\":2,\"79\":3,\"80\":7,\"81\":4,\"82\":6,\"83\":1,\"85\":11,\"86\":5,\"89\":1,\"90\":7,\"91\":7,\"93\":2,\"97\":2,\"98\":1,\"99\":4,\"100\":1,\"101\":4,\"104\":9,\"105\":7,\"106\":1,\"109\":3,\"110\":1,\"112\":1,\"114\":4,\"118\":1,\"122\":2,\"123\":8,\"126\":2,\"127\":4,\"128\":1,\"131\":1,\"132\":1,\"135\":1,\"137\":1,\"139\":14,\"151\":7,\"156\":4,\"161\":2,\"162\":1,\"164\":1,\"172\":3,\"174\":3,\"175\":5,\"176\":8,\"177\":4,\"179\":2,\"180\":1,\"182\":8,\"183\":2,\"184\":2,\"185\":2,\"192\":1,\"195\":5,\"197\":3,\"200\":5,\"207\":4,\"210\":3,\"211\":5,\"212\":4,\"213\":9,\"214\":16,\"218\":3,\"219\":1,\"220\":1,\"221\":7,\"222\":1,\"226\":2,\"234\":2,\"235\":4,\"236\":6,\"237\":4,\"238\":1,\"241\":8,\"242\":12,\"248\":1,\"253\":3,\"256\":1,\"276\":2,\"280\":3,\"282\":1,\"290\":1,\"295\":1,\"305\":2,\"308\":3,\"309\":4,\"316\":6,\"319\":3,\"320\":4,\"321\":1,\"326\":1,\"328\":1,\"329\":1}}],[\"img\",{\"1\":{\"290\":1,\"328\":2}}],[\"immutablepair<>\",{\"1\":{\"237\":1}}],[\"immediately\",{\"0\":{\"195\":2},\"1\":{\"48\":1,\"101\":3,\"317\":1}}],[\"imbalance\",{\"1\":{\"177\":1}}],[\"imagined\",{\"1\":{\"81\":1}}],[\"imagine\",{\"1\":{\"69\":1,\"290\":1}}],[\"images\",{\"1\":{\"248\":1}}],[\"image\",{\"1\":{\"4\":1,\"48\":8,\"118\":1,\"122\":4,\"123\":2,\"126\":1,\"132\":1,\"135\":1,\"148\":1,\"182\":1,\"328\":4,\"329\":6}}],[\"imperative\",{\"1\":{\"321\":1}}],[\"impacts\",{\"1\":{\"248\":1}}],[\"impact\",{\"0\":{\"248\":1},\"1\":{\"177\":1,\"254\":1,\"290\":1}}],[\"improperly\",{\"1\":{\"131\":1}}],[\"improved\",{\"1\":{\"247\":1,\"293\":1}}],[\"improve\",{\"1\":{\"14\":1,\"15\":1,\"16\":1,\"29\":1,\"123\":1,\"253\":1}}],[\"improvement\",{\"1\":{\"8\":1}}],[\"impression\",{\"1\":{\"110\":1,\"197\":1}}],[\"implement\",{\"1\":{\"122\":1,\"124\":3,\"126\":2,\"129\":1,\"156\":2,\"177\":1,\"209\":1,\"225\":2,\"317\":1}}],[\"implemented\",{\"0\":{\"196\":1},\"1\":{\"97\":2,\"105\":1,\"106\":1,\"117\":1,\"118\":1,\"123\":2,\"125\":1,\"127\":1,\"182\":2,\"195\":2,\"197\":1,\"231\":1,\"309\":1,\"312\":1,\"320\":1}}],[\"implementations\",{\"1\":{\"117\":1,\"120\":1,\"189\":1,\"199\":1,\"284\":1}}],[\"implementation\",{\"0\":{\"99\":1,\"100\":1,\"123\":1,\"130\":1,\"150\":1,\"168\":1,\"234\":1},\"1\":{\"78\":1,\"80\":1,\"84\":1,\"87\":2,\"88\":1,\"92\":1,\"99\":1,\"100\":3,\"103\":1,\"105\":1,\"109\":1,\"118\":3,\"120\":3,\"121\":3,\"122\":2,\"123\":3,\"124\":2,\"126\":3,\"128\":5,\"129\":4,\"130\":1,\"131\":4,\"132\":2,\"133\":3,\"135\":5,\"137\":1,\"138\":1,\"139\":3,\"156\":1,\"165\":2,\"173\":1,\"175\":1,\"176\":1,\"177\":1,\"182\":2,\"185\":1,\"189\":1,\"195\":1,\"199\":2,\"207\":1,\"224\":1,\"270\":1,\"280\":2,\"284\":3,\"293\":2}}],[\"implements\",{\"1\":{\"35\":1,\"36\":1,\"84\":1,\"86\":3,\"92\":3,\"97\":2,\"98\":2,\"100\":4,\"104\":1,\"111\":1,\"112\":1,\"113\":1,\"118\":3,\"122\":3,\"123\":3,\"126\":1,\"127\":1,\"156\":5,\"161\":1,\"182\":1,\"207\":1,\"214\":2,\"241\":2,\"242\":1,\"280\":2,\"305\":1}}],[\"implies\",{\"1\":{\"69\":1,\"204\":1}}],[\"import\",{\"0\":{\"46\":1},\"1\":{\"35\":21,\"36\":13,\"40\":10,\"43\":2,\"112\":2,\"156\":1}}],[\"important\",{\"1\":{\"33\":2,\"39\":1,\"72\":1,\"120\":1,\"124\":1,\"127\":1,\"129\":1,\"207\":1,\"309\":1,\"320\":1,\"321\":1}}],[\"illegalargumentexception\",{\"1\":{\"139\":1}}],[\"illegalaccessexception\",{\"1\":{\"82\":1,\"139\":1}}],[\"illegalstateexception\",{\"1\":{\"97\":1,\"111\":1,\"113\":1,\"139\":1,\"156\":1,\"165\":1,\"197\":1}}],[\"illegal\",{\"1\":{\"6\":1,\"7\":3}}],[\"innodb\",{\"1\":{\"226\":1}}],[\"inner\",{\"1\":{\"86\":1}}],[\"inevitable\",{\"1\":{\"210\":1}}],[\"inetaddress\",{\"1\":{\"176\":1}}],[\"inetsocketaddress\",{\"1\":{\"176\":1}}],[\"inference\",{\"1\":{\"316\":2}}],[\"influxdb\",{\"1\":{\"312\":1}}],[\"infringement\",{\"1\":{\"254\":1}}],[\"inf\",{\"1\":{\"123\":1,\"132\":1}}],[\"inform\",{\"1\":{\"253\":1}}],[\"informing\",{\"1\":{\"156\":1}}],[\"informs\",{\"1\":{\"101\":1}}],[\"information\",{\"0\":{\"148\":1,\"301\":1},\"1\":{\"39\":1,\"61\":1,\"64\":1,\"77\":1,\"78\":1,\"81\":2,\"83\":2,\"87\":1,\"91\":1,\"93\":2,\"96\":2,\"98\":4,\"100\":3,\"101\":1,\"104\":5,\"105\":1,\"106\":2,\"109\":1,\"114\":1,\"116\":3,\"117\":3,\"118\":2,\"123\":1,\"125\":1,\"135\":1,\"136\":1,\"151\":1,\"155\":1,\"156\":1,\"164\":2,\"165\":1,\"173\":2,\"176\":1,\"178\":2,\"214\":1,\"220\":1,\"221\":2,\"226\":3,\"242\":1,\"275\":1,\"298\":1,\"328\":3,\"329\":1}}],[\"info\",{\"1\":{\"48\":8,\"57\":6,\"61\":3,\"64\":18,\"85\":2,\"86\":1,\"97\":1,\"100\":1,\"104\":5,\"105\":1,\"114\":1,\"117\":1,\"127\":5,\"155\":16,\"161\":1,\"164\":6,\"166\":1,\"184\":1,\"197\":1,\"207\":1,\"219\":9,\"220\":1}}],[\"inherited\",{\"1\":{\"292\":1}}],[\"inherits\",{\"1\":{\"119\":1,\"127\":1,\"182\":1,\"221\":1}}],[\"inheritance\",{\"1\":{\"112\":1,\"165\":1}}],[\"inherit\",{\"1\":{\"97\":1}}],[\"injects\",{\"1\":{\"161\":1}}],[\"injecting\",{\"1\":{\"156\":1}}],[\"injection\",{\"0\":{\"112\":1},\"1\":{\"156\":1}}],[\"injected\",{\"1\":{\"100\":1,\"112\":1,\"118\":1,\"179\":1,\"183\":1,\"207\":1}}],[\"inject\",{\"1\":{\"86\":1,\"92\":1,\"128\":1,\"156\":1,\"161\":2,\"166\":6}}],[\"initref\",{\"1\":{\"237\":1}}],[\"initrequestbuilder\",{\"1\":{\"92\":2}}],[\"initstrategies\",{\"1\":{\"207\":1}}],[\"init\",{\"1\":{\"82\":1,\"156\":4}}],[\"initiates\",{\"1\":{\"184\":1,\"185\":1,\"241\":1}}],[\"initiated\",{\"1\":{\"179\":1,\"214\":1,\"235\":1}}],[\"initiate\",{\"1\":{\"172\":1,\"179\":2}}],[\"initiating\",{\"1\":{\"155\":2}}],[\"initiation\",{\"0\":{\"68\":1}}],[\"initiator\",{\"1\":{\"33\":2,\"39\":1}}],[\"initializing\",{\"1\":{\"195\":1}}],[\"initializingbean\",{\"1\":{\"97\":2,\"111\":1,\"112\":1,\"156\":2}}],[\"initialized\",{\"1\":{\"128\":1,\"131\":1,\"139\":1,\"165\":1,\"174\":1,\"197\":2,\"280\":1}}],[\"initializes\",{\"1\":{\"128\":1}}],[\"initialize\",{\"1\":{\"57\":1,\"126\":1,\"133\":1,\"161\":1}}],[\"initialization\",{\"1\":{\"48\":1,\"97\":1,\"104\":1,\"116\":1,\"117\":1,\"123\":3,\"124\":1,\"126\":1,\"129\":1,\"137\":1,\"156\":5,\"166\":1,\"174\":1,\"179\":1,\"207\":2}}],[\"initial\",{\"0\":{\"190\":1},\"1\":{\"48\":1,\"293\":1}}],[\"inputstream\",{\"1\":{\"136\":1,\"139\":3,\"328\":1}}],[\"input\",{\"1\":{\"56\":1,\"126\":1}}],[\"inspection\",{\"1\":{\"275\":1}}],[\"insufficient\",{\"1\":{\"210\":1}}],[\"inst\",{\"1\":{\"195\":8,\"197\":1}}],[\"instead\",{\"1\":{\"100\":1,\"290\":1,\"292\":1}}],[\"instability\",{\"1\":{\"211\":1}}],[\"instantly\",{\"1\":{\"211\":1}}],[\"instant\",{\"1\":{\"197\":1}}],[\"instantiation\",{\"1\":{\"156\":1,\"164\":1}}],[\"instantiationexception\",{\"1\":{\"82\":1,\"139\":1}}],[\"instantiate\",{\"1\":{\"164\":5}}],[\"instantiated\",{\"1\":{\"112\":1,\"123\":1,\"156\":1}}],[\"instantiates\",{\"1\":{\"48\":1,\"77\":1,\"156\":1,\"161\":1}}],[\"instanceof\",{\"1\":{\"184\":1,\"214\":3,\"234\":1,\"237\":1,\"241\":1,\"242\":1}}],[\"instance\",{\"1\":{\"72\":1,\"74\":1,\"109\":1,\"113\":1,\"123\":1,\"131\":1,\"137\":1,\"165\":1,\"172\":3,\"195\":7,\"237\":1}}],[\"instances\",{\"1\":{\"72\":1,\"123\":1,\"137\":1,\"139\":1}}],[\"installation\",{\"1\":{\"321\":1}}],[\"install\",{\"1\":{\"54\":1}}],[\"ins\",{\"1\":{\"69\":2,\"84\":1,\"85\":3,\"86\":4,\"87\":1,\"169\":1,\"179\":17,\"187\":3,\"192\":1,\"221\":1,\"225\":1,\"300\":1,\"303\":2,\"306\":1,\"316\":2,\"317\":1}}],[\"insists\",{\"1\":{\"253\":1}}],[\"inside\",{\"1\":{\"48\":2}}],[\"insights\",{\"1\":{\"25\":1,\"48\":1}}],[\"insertzknode\",{\"1\":{\"98\":1}}],[\"inserter\",{\"1\":{\"92\":2}}],[\"inserted\",{\"1\":{\"80\":1}}],[\"inserting\",{\"1\":{\"81\":1}}],[\"insertselective\",{\"1\":{\"48\":3,\"80\":2,\"82\":2,\"109\":1}}],[\"insert\",{\"1\":{\"48\":4,\"80\":1,\"82\":1,\"110\":1,\"230\":3,\"305\":1}}],[\"inverted\",{\"1\":{\"292\":1}}],[\"invalid\",{\"1\":{\"294\":2}}],[\"invalidate\",{\"1\":{\"40\":1,\"237\":1}}],[\"invasive\",{\"1\":{\"274\":1}}],[\"invites\",{\"1\":{\"252\":1}}],[\"invited\",{\"1\":{\"249\":1}}],[\"inv\",{\"1\":{\"242\":14}}],[\"invoice\",{\"1\":{\"293\":1}}],[\"involved\",{\"1\":{\"99\":1,\"174\":1,\"179\":1,\"290\":1}}],[\"involves\",{\"1\":{\"80\":1,\"88\":1}}],[\"invocation\",{\"1\":{\"39\":1,\"171\":1,\"225\":1,\"234\":3,\"235\":1,\"237\":3,\"240\":2,\"241\":14,\"242\":1}}],[\"invoker\",{\"1\":{\"241\":3,\"242\":6}}],[\"invoker<\",{\"1\":{\"241\":1,\"242\":1}}],[\"invokehandler\",{\"1\":{\"207\":1}}],[\"invokesuper\",{\"1\":{\"164\":1}}],[\"invokes\",{\"1\":{\"104\":1,\"156\":1}}],[\"invoked\",{\"1\":{\"30\":1,\"104\":1,\"118\":1}}],[\"invoke\",{\"1\":{\"30\":1,\"101\":1,\"112\":4,\"122\":1,\"164\":1,\"241\":4,\"242\":3,\"244\":1}}],[\"indispensable\",{\"1\":{\"309\":1,\"320\":1}}],[\"indicators\",{\"1\":{\"212\":1}}],[\"indicator\",{\"1\":{\"180\":1}}],[\"indicates\",{\"1\":{\"197\":1,\"213\":1,\"214\":1}}],[\"indicate\",{\"1\":{\"156\":1}}],[\"indicating\",{\"1\":{\"100\":1,\"213\":1,\"214\":2,\"220\":1}}],[\"individual\",{\"1\":{\"85\":1,\"124\":1}}],[\"indentation\",{\"1\":{\"324\":2}}],[\"independently\",{\"1\":{\"214\":1,\"249\":1}}],[\"independent\",{\"1\":{\"117\":1,\"214\":1,\"312\":1,\"317\":1}}],[\"indeed\",{\"1\":{\"73\":1,\"162\":1}}],[\"index++\",{\"1\":{\"86\":1,\"104\":1,\"179\":1,\"235\":1}}],[\"indexof\",{\"1\":{\"82\":1}}],[\"index\",{\"1\":{\"35\":2,\"86\":3,\"104\":5,\"179\":1,\"235\":2,\"271\":1,\"293\":1,\"314\":1}}],[\"industry\",{\"1\":{\"4\":1}}],[\"incorrect\",{\"1\":{\"236\":1}}],[\"inconsistent\",{\"1\":{\"177\":1}}],[\"inconvenient\",{\"1\":{\"113\":1}}],[\"incompatible\",{\"0\":{\"292\":1},\"1\":{\"290\":1}}],[\"incomplete\",{\"1\":{\"151\":2}}],[\"incoming\",{\"1\":{\"117\":1,\"151\":1}}],[\"including\",{\"1\":{\"86\":1,\"116\":1,\"142\":1,\"242\":1,\"254\":1,\"269\":1}}],[\"includes\",{\"1\":{\"187\":1,\"214\":1}}],[\"include\",{\"1\":{\"30\":1,\"43\":2,\"180\":1,\"234\":1}}],[\"inception\",{\"1\":{\"81\":1}}],[\"increased\",{\"1\":{\"214\":1}}],[\"increasecurrent\",{\"1\":{\"91\":1}}],[\"increases\",{\"1\":{\"86\":1,\"91\":1,\"214\":1}}],[\"increase\",{\"1\":{\"14\":1,\"15\":1,\"33\":6,\"89\":1,\"91\":3,\"211\":4}}],[\"incubated\",{\"1\":{\"6\":1}}],[\"int\",{\"1\":{\"35\":5,\"36\":1,\"40\":3,\"43\":7,\"48\":2,\"89\":1,\"90\":5,\"91\":2,\"104\":2,\"105\":1,\"122\":1,\"123\":1,\"129\":2,\"176\":1,\"177\":3,\"184\":3,\"214\":1,\"220\":1,\"242\":2}}],[\"intention\",{\"1\":{\"253\":1}}],[\"intelligence\",{\"1\":{\"247\":1}}],[\"intelligent\",{\"1\":{\"225\":1}}],[\"integrating\",{\"1\":{\"285\":1}}],[\"integration\",{\"1\":{\"231\":1,\"283\":1}}],[\"integrated\",{\"1\":{\"274\":1}}],[\"integrate\",{\"1\":{\"274\":1,\"276\":1}}],[\"integrates\",{\"1\":{\"34\":2,\"212\":1}}],[\"integer\",{\"1\":{\"174\":1,\"176\":1,\"200\":1}}],[\"intersection\",{\"1\":{\"294\":1}}],[\"interpretation\",{\"0\":{\"170\":1,\"221\":1,\"255\":1},\"1\":{\"216\":1}}],[\"intercepts\",{\"0\":{\"242\":1},\"1\":{\"242\":1}}],[\"intercepting\",{\"1\":{\"240\":1}}],[\"intercept\",{\"0\":{\"241\":1},\"1\":{\"164\":1,\"240\":1,\"243\":1}}],[\"interact\",{\"1\":{\"305\":1}}],[\"interaction\",{\"1\":{\"101\":1}}],[\"interacts\",{\"1\":{\"99\":1,\"101\":1}}],[\"internally\",{\"1\":{\"172\":1,\"173\":1,\"177\":1,\"206\":1}}],[\"internal\",{\"1\":{\"93\":1,\"116\":1,\"185\":1,\"206\":1,\"214\":2,\"220\":1,\"221\":1,\"236\":2}}],[\"interesting\",{\"1\":{\"48\":1,\"321\":1}}],[\"interested\",{\"1\":{\"6\":1,\"46\":2,\"182\":1}}],[\"intervals\",{\"1\":{\"211\":1,\"294\":1}}],[\"interval\",{\"1\":{\"48\":1,\"174\":1,\"211\":1,\"214\":1,\"218\":1,\"219\":3}}],[\"interface=\",{\"1\":{\"233\":1,\"270\":1}}],[\"interfaces\",{\"1\":{\"182\":1,\"270\":1,\"284\":1}}],[\"interface\",{\"0\":{\"78\":1,\"108\":1,\"109\":1,\"193\":1,\"206\":1},\"1\":{\"22\":1,\"30\":1,\"46\":1,\"69\":1,\"73\":2,\"77\":3,\"80\":1,\"82\":1,\"83\":1,\"84\":2,\"86\":1,\"87\":1,\"92\":1,\"97\":3,\"104\":2,\"106\":3,\"108\":1,\"109\":1,\"112\":4,\"113\":1,\"114\":1,\"118\":1,\"121\":8,\"122\":1,\"123\":3,\"126\":1,\"129\":1,\"135\":1,\"138\":1,\"139\":1,\"156\":1,\"179\":1,\"182\":3,\"193\":1,\"195\":1,\"206\":3,\"207\":1,\"210\":1,\"214\":1,\"220\":2,\"225\":1,\"226\":3,\"230\":1,\"231\":2,\"234\":4,\"241\":1,\"277\":1,\"279\":1,\"280\":7,\"293\":1,\"294\":1,\"305\":2,\"308\":1,\"309\":2,\"312\":2,\"319\":1,\"320\":2,\"321\":1}}],[\"interfere\",{\"1\":{\"7\":1}}],[\"into\",{\"1\":{\"16\":1,\"32\":2,\"80\":2,\"82\":1,\"86\":1,\"92\":2,\"103\":1,\"104\":1,\"109\":1,\"112\":1,\"122\":1,\"123\":1,\"124\":1,\"126\":1,\"128\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":4,\"156\":1,\"161\":2,\"166\":2,\"177\":1,\"180\":1,\"181\":1,\"184\":2,\"195\":3,\"212\":2,\"240\":1,\"290\":1,\"308\":2,\"319\":2,\"326\":1}}],[\"intricate\",{\"1\":{\"46\":1}}],[\"intrusion\",{\"1\":{\"34\":1,\"268\":1,\"305\":1}}],[\"intrusive\",{\"1\":{\"4\":2,\"283\":1}}],[\"introduced\",{\"1\":{\"162\":1,\"212\":1,\"326\":1}}],[\"introduce\",{\"1\":{\"33\":1,\"182\":1,\"209\":2,\"214\":1,\"241\":1,\"243\":1,\"326\":3}}],[\"introduces\",{\"1\":{\"22\":1}}],[\"introducing\",{\"1\":{\"25\":1}}],[\"introduction\",{\"0\":{\"12\":1,\"13\":1,\"69\":1,\"141\":1,\"142\":1,\"169\":1,\"225\":1,\"226\":1,\"231\":1,\"240\":1},\"1\":{\"12\":1,\"22\":2,\"25\":1,\"189\":1,\"218\":1,\"224\":4,\"268\":1}}],[\"in\",{\"0\":{\"31\":1,\"66\":1,\"69\":1,\"72\":1,\"87\":1,\"116\":1,\"144\":1,\"148\":1,\"150\":1,\"151\":1,\"161\":1,\"162\":1,\"171\":1,\"172\":1,\"184\":1,\"185\":1,\"191\":1,\"195\":1,\"196\":1,\"202\":1,\"221\":1,\"270\":1,\"313\":1,\"316\":1,\"323\":1,\"324\":1,\"325\":1},\"1\":{\"6\":2,\"7\":5,\"14\":2,\"16\":3,\"28\":2,\"29\":4,\"30\":4,\"31\":1,\"32\":3,\"33\":9,\"35\":1,\"36\":1,\"37\":1,\"39\":1,\"40\":1,\"43\":5,\"46\":1,\"48\":37,\"56\":1,\"57\":1,\"59\":2,\"61\":1,\"64\":2,\"65\":2,\"68\":3,\"69\":8,\"70\":2,\"72\":3,\"74\":1,\"80\":2,\"81\":3,\"82\":3,\"83\":1,\"84\":3,\"85\":8,\"86\":11,\"87\":9,\"91\":5,\"92\":8,\"93\":2,\"96\":1,\"97\":2,\"98\":2,\"99\":1,\"100\":7,\"101\":8,\"104\":4,\"105\":7,\"106\":3,\"108\":2,\"109\":1,\"110\":2,\"112\":5,\"113\":4,\"114\":2,\"116\":1,\"117\":1,\"118\":3,\"119\":6,\"120\":2,\"121\":6,\"122\":3,\"123\":5,\"124\":4,\"125\":1,\"126\":4,\"127\":3,\"128\":4,\"129\":3,\"130\":3,\"131\":4,\"132\":1,\"133\":1,\"135\":3,\"136\":1,\"139\":1,\"141\":1,\"147\":1,\"149\":1,\"151\":7,\"156\":7,\"159\":1,\"160\":3,\"161\":1,\"162\":4,\"164\":6,\"165\":3,\"169\":3,\"171\":7,\"172\":5,\"173\":1,\"176\":4,\"177\":2,\"178\":2,\"179\":21,\"180\":7,\"181\":3,\"182\":8,\"183\":2,\"184\":5,\"185\":7,\"187\":5,\"189\":3,\"191\":4,\"192\":1,\"193\":1,\"195\":11,\"197\":1,\"198\":2,\"199\":2,\"200\":3,\"201\":1,\"202\":4,\"203\":2,\"204\":1,\"206\":2,\"209\":3,\"210\":5,\"211\":5,\"212\":18,\"213\":9,\"214\":10,\"216\":1,\"217\":1,\"218\":12,\"219\":3,\"220\":1,\"221\":3,\"225\":2,\"226\":3,\"229\":3,\"231\":1,\"235\":2,\"236\":1,\"241\":2,\"242\":3,\"243\":1,\"247\":2,\"248\":1,\"250\":2,\"251\":1,\"253\":1,\"254\":3,\"272\":2,\"274\":1,\"276\":3,\"280\":10,\"281\":1,\"283\":1,\"285\":2,\"288\":1,\"290\":5,\"292\":2,\"293\":2,\"294\":4,\"297\":1,\"298\":2,\"299\":1,\"300\":2,\"302\":2,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"308\":3,\"309\":3,\"310\":1,\"311\":1,\"312\":3,\"316\":7,\"317\":2,\"319\":3,\"320\":3,\"321\":9,\"328\":3}}],[\"isorder\",{\"1\":{\"292\":1}}],[\"isolation\",{\"1\":{\"217\":1}}],[\"isdefaultgenericserialization\",{\"1\":{\"242\":1}}],[\"isdriverallowed\",{\"1\":{\"127\":2}}],[\"isgenericreturnrawresult\",{\"1\":{\"242\":1}}],[\"isgeneric\",{\"1\":{\"241\":1}}],[\"isbeangenericserialization\",{\"1\":{\"241\":1,\"242\":1}}],[\"isblank\",{\"1\":{\"79\":1,\"81\":1,\"109\":1,\"151\":3,\"180\":1,\"207\":1,\"221\":1,\"236\":1,\"242\":1}}],[\"isjavagenericserialization\",{\"1\":{\"241\":1,\"242\":1}}],[\"ismakinggenericcall\",{\"1\":{\"241\":2}}],[\"is2xxsuccessful\",{\"1\":{\"184\":1,\"214\":1,\"221\":1}}],[\"isfull\",{\"1\":{\"182\":1}}],[\"isaac\",{\"1\":{\"256\":1}}],[\"isallowed\",{\"1\":{\"197\":4}}],[\"isallupstreamsameweight\",{\"1\":{\"177\":1}}],[\"isassignablefrom\",{\"1\":{\"123\":1,\"242\":1}}],[\"isreachable\",{\"1\":{\"176\":1}}],[\"isregister\",{\"1\":{\"78\":1}}],[\"isregistermetadata\",{\"1\":{\"78\":1}}],[\"ishostreachable\",{\"1\":{\"176\":3}}],[\"ishostconnector\",{\"1\":{\"176\":3}}],[\"isstatus\",{\"1\":{\"175\":1}}],[\"issued\",{\"1\":{\"160\":1,\"195\":1}}],[\"issue\",{\"0\":{\"285\":1},\"1\":{\"29\":1,\"31\":1,\"96\":1,\"237\":1,\"268\":2,\"292\":1,\"293\":9,\"294\":13,\"322\":1}}],[\"issues\",{\"0\":{\"29\":1},\"1\":{\"42\":1,\"210\":1,\"237\":1,\"290\":2,\"292\":11,\"294\":2,\"306\":1}}],[\"isempty\",{\"1\":{\"48\":1,\"80\":1,\"82\":1,\"85\":2,\"89\":1,\"97\":1,\"104\":1,\"182\":2,\"183\":1,\"184\":1,\"237\":1,\"242\":1}}],[\"isnotblank\",{\"1\":{\"114\":1,\"139\":3,\"237\":1}}],[\"isnotempty\",{\"1\":{\"40\":1,\"105\":1,\"118\":1,\"161\":1,\"162\":1}}],[\"isnoneblank\",{\"1\":{\"109\":2,\"236\":1}}],[\"isnull\",{\"1\":{\"39\":1,\"78\":1,\"79\":1,\"81\":1,\"82\":2,\"85\":2,\"93\":1,\"182\":2,\"183\":1,\"185\":1,\"195\":2,\"207\":1,\"237\":2,\"238\":1}}],[\"is\",{\"0\":{\"35\":1,\"127\":1,\"195\":2,\"196\":1,\"217\":1,\"232\":1,\"290\":1,\"302\":1},\"1\":{\"3\":1,\"7\":1,\"9\":1,\"16\":3,\"22\":1,\"28\":1,\"29\":2,\"30\":5,\"31\":2,\"32\":2,\"33\":6,\"35\":3,\"36\":4,\"37\":1,\"38\":2,\"39\":1,\"40\":1,\"43\":5,\"46\":1,\"48\":45,\"49\":1,\"56\":3,\"57\":3,\"61\":3,\"64\":13,\"66\":1,\"68\":1,\"69\":8,\"70\":5,\"71\":1,\"72\":4,\"78\":1,\"80\":4,\"81\":10,\"82\":3,\"83\":3,\"84\":1,\"85\":4,\"86\":9,\"87\":3,\"88\":1,\"89\":2,\"90\":7,\"91\":9,\"92\":5,\"96\":3,\"97\":2,\"98\":1,\"99\":5,\"100\":21,\"101\":11,\"103\":3,\"104\":9,\"105\":16,\"106\":3,\"109\":2,\"110\":5,\"112\":7,\"113\":6,\"114\":8,\"116\":1,\"117\":2,\"118\":5,\"119\":5,\"120\":4,\"121\":8,\"122\":3,\"123\":14,\"124\":3,\"125\":1,\"126\":6,\"127\":2,\"128\":4,\"129\":2,\"130\":1,\"131\":6,\"132\":2,\"134\":2,\"135\":3,\"136\":3,\"137\":1,\"138\":2,\"139\":2,\"141\":1,\"142\":2,\"151\":9,\"155\":4,\"156\":13,\"157\":1,\"159\":1,\"160\":3,\"161\":2,\"162\":1,\"164\":19,\"165\":6,\"166\":3,\"169\":1,\"171\":4,\"172\":2,\"173\":8,\"174\":5,\"175\":4,\"176\":9,\"177\":5,\"178\":1,\"179\":9,\"180\":12,\"181\":2,\"182\":10,\"183\":6,\"184\":5,\"185\":3,\"187\":1,\"189\":5,\"191\":2,\"192\":1,\"193\":2,\"195\":11,\"197\":10,\"198\":3,\"199\":7,\"200\":8,\"201\":2,\"204\":1,\"205\":1,\"206\":1,\"207\":5,\"210\":8,\"211\":24,\"212\":28,\"213\":11,\"214\":31,\"216\":1,\"217\":2,\"218\":3,\"219\":7,\"220\":2,\"221\":1,\"222\":2,\"225\":3,\"226\":7,\"231\":2,\"234\":3,\"235\":5,\"236\":2,\"240\":1,\"241\":2,\"242\":4,\"243\":1,\"247\":2,\"248\":1,\"249\":1,\"251\":1,\"253\":2,\"254\":4,\"275\":1,\"276\":1,\"278\":1,\"280\":4,\"283\":1,\"285\":1,\"286\":2,\"289\":1,\"290\":6,\"292\":3,\"293\":2,\"298\":1,\"304\":2,\"305\":9,\"306\":4,\"308\":1,\"309\":6,\"312\":1,\"314\":2,\"316\":2,\"317\":8,\"319\":1,\"320\":6,\"321\":6,\"322\":1,\"324\":2,\"326\":2,\"328\":1}}],[\"dhmily\",{\"1\":{\"280\":2}}],[\"dj\",{\"1\":{\"256\":1}}],[\"d19cf79f647a465ab9c5c66f430cad28\",{\"1\":{\"147\":1}}],[\"dto\",{\"1\":{\"78\":8,\"79\":6,\"80\":2,\"81\":6,\"82\":5}}],[\"d30s\",{\"1\":{\"65\":2}}],[\"dcheckstyle\",{\"1\":{\"54\":1}}],[\"dmaven\",{\"1\":{\"54\":2}}],[\"d751713988987e9331980363e24189ce\",{\"1\":{\"48\":2}}],[\"d\",{\"1\":{\"48\":6,\"57\":4,\"61\":3,\"64\":18,\"155\":1,\"164\":5,\"219\":9,\"260\":1}}],[\"dynamically\",{\"1\":{\"121\":1}}],[\"dynamic\",{\"1\":{\"48\":1,\"121\":1,\"226\":1,\"275\":1,\"287\":1,\"303\":1}}],[\"dsl\",{\"1\":{\"35\":2}}],[\"db\",{\"1\":{\"33\":1,\"43\":3,\"46\":1,\"79\":1,\"81\":1,\"292\":1,\"293\":4,\"333\":1,\"334\":2}}],[\"duration\",{\"1\":{\"92\":1,\"184\":3,\"212\":1,\"213\":2,\"218\":1,\"219\":2}}],[\"during\",{\"0\":{\"38\":1},\"1\":{\"16\":1,\"38\":2,\"105\":1,\"117\":1,\"156\":1,\"173\":1,\"207\":1,\"210\":1,\"213\":1,\"214\":1,\"226\":1,\"254\":2}}],[\"dubbobodyisempty\",{\"1\":{\"237\":1}}],[\"dubbotagroutefromhttpheaders\",{\"1\":{\"237\":3}}],[\"dubbotest\",{\"1\":{\"230\":6,\"305\":3}}],[\"dubboparamresolveservice\",{\"1\":{\"237\":1}}],[\"dubboparams\",{\"1\":{\"180\":1}}],[\"dubboproxyservice\",{\"1\":{\"236\":1}}],[\"dubboresponseplugin\",{\"0\":{\"238\":1},\"1\":{\"224\":1}}],[\"dubborulehandle\",{\"1\":{\"82\":1}}],[\"dubbo<\",{\"1\":{\"43\":1,\"46\":1,\"228\":2,\"230\":1,\"279\":2,\"316\":2}}],[\"dubbo\",{\"0\":{\"43\":1,\"143\":1,\"223\":1,\"225\":1,\"227\":1,\"230\":1,\"231\":1,\"235\":1,\"240\":1,\"241\":1,\"279\":1,\"298\":1},\"1\":{\"30\":1,\"34\":1,\"46\":1,\"57\":1,\"80\":2,\"82\":1,\"85\":1,\"87\":4,\"119\":1,\"121\":1,\"130\":4,\"147\":1,\"164\":2,\"179\":2,\"180\":2,\"224\":6,\"225\":6,\"226\":3,\"229\":1,\"230\":2,\"232\":1,\"235\":2,\"236\":5,\"237\":5,\"238\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"269\":1,\"270\":2,\"274\":1,\"276\":2,\"278\":1,\"279\":2,\"280\":3,\"283\":1,\"285\":2,\"297\":1,\"298\":1,\"299\":1,\"303\":1,\"305\":3,\"306\":1,\"309\":2,\"312\":4,\"316\":8,\"320\":2,\"321\":3}}],[\"due\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"46\":1,\"290\":2}}],[\"du\",{\"1\":{\"25\":1}}],[\"diant\",{\"1\":{\"332\":1}}],[\"diagram\",{\"1\":{\"84\":2,\"166\":1,\"309\":1,\"320\":1}}],[\"dict\",{\"1\":{\"293\":1}}],[\"dir>\",{\"1\":{\"280\":1}}],[\"dir\",{\"1\":{\"280\":1}}],[\"direction\",{\"1\":{\"309\":1,\"320\":1}}],[\"direct\",{\"1\":{\"133\":1,\"214\":3}}],[\"directory\",{\"1\":{\"123\":1,\"132\":1,\"139\":1,\"221\":1,\"280\":2}}],[\"directly\",{\"1\":{\"48\":3,\"65\":1,\"85\":1,\"92\":1,\"96\":2,\"98\":1,\"99\":1,\"100\":2,\"101\":1,\"104\":1,\"124\":1,\"127\":1,\"135\":1,\"136\":1,\"139\":1,\"172\":1,\"201\":1,\"211\":5,\"212\":2,\"213\":1,\"214\":6,\"219\":2,\"222\":1,\"234\":1,\"242\":1,\"253\":1,\"322\":1,\"328\":1,\"329\":1}}],[\"division\",{\"1\":{\"275\":1}}],[\"dividing\",{\"1\":{\"200\":1}}],[\"divide<\",{\"1\":{\"86\":1}}],[\"divideplugindatahandler\",{\"1\":{\"87\":2,\"118\":1}}],[\"dividepluginconfiguration\",{\"1\":{\"86\":1}}],[\"divideplugin\",{\"0\":{\"181\":1,\"183\":1},\"1\":{\"85\":2,\"86\":3,\"87\":5,\"92\":1,\"172\":2,\"179\":2,\"182\":2,\"187\":2}}],[\"dividerulehandle\",{\"1\":{\"82\":2,\"87\":2,\"172\":2,\"183\":2}}],[\"divideupstream>\",{\"1\":{\"89\":2}}],[\"divideupstream\",{\"1\":{\"79\":3,\"80\":4,\"81\":3,\"87\":3,\"89\":2,\"90\":5,\"91\":3,\"120\":3,\"172\":3,\"175\":8,\"177\":7,\"183\":4}}],[\"divide\",{\"0\":{\"67\":1,\"69\":1,\"72\":1,\"170\":1},\"1\":{\"48\":1,\"61\":2,\"64\":12,\"68\":1,\"69\":4,\"72\":2,\"74\":1,\"80\":2,\"81\":1,\"87\":3,\"108\":2,\"118\":1,\"119\":1,\"120\":1,\"135\":1,\"160\":1,\"162\":1,\"171\":1,\"172\":2,\"173\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"181\":1,\"183\":2,\"184\":1,\"185\":1}}],[\"divided\",{\"1\":{\"16\":1,\"103\":1,\"134\":1,\"212\":1,\"240\":1,\"272\":1,\"308\":1,\"319\":1}}],[\"dimensions\",{\"1\":{\"212\":1}}],[\"digit\",{\"1\":{\"197\":1}}],[\"digestutils\",{\"1\":{\"147\":1}}],[\"difficult\",{\"1\":{\"179\":2,\"180\":1,\"272\":1}}],[\"difference\",{\"1\":{\"105\":1,\"177\":1,\"200\":1}}],[\"differentiated\",{\"1\":{\"124\":1}}],[\"different\",{\"0\":{\"46\":1},\"1\":{\"34\":1,\"40\":1,\"97\":2,\"98\":1,\"110\":1,\"113\":1,\"118\":4,\"120\":1,\"122\":1,\"123\":1,\"131\":1,\"134\":2,\"179\":1,\"180\":1,\"185\":1,\"209\":1,\"210\":1,\"304\":1,\"305\":1,\"306\":2,\"321\":1}}],[\"diligent\",{\"1\":{\"97\":1}}],[\"did\",{\"1\":{\"48\":1,\"86\":1,\"133\":1}}],[\"didn\",{\"1\":{\"32\":1}}],[\"disk\",{\"1\":{\"322\":5}}],[\"disassemble\",{\"1\":{\"308\":1,\"319\":1}}],[\"disable\",{\"1\":{\"116\":1,\"149\":1,\"316\":1}}],[\"disabled\",{\"1\":{\"48\":1}}],[\"distinguish\",{\"1\":{\"129\":1,\"139\":1}}],[\"distinguished\",{\"1\":{\"104\":1}}],[\"distinguishable\",{\"1\":{\"70\":1}}],[\"distributes\",{\"1\":{\"195\":1}}],[\"distribute\",{\"1\":{\"118\":1,\"177\":1}}],[\"distributed\",{\"0\":{\"27\":1,\"34\":1,\"41\":1,\"272\":1,\"283\":1},\"1\":{\"4\":5,\"29\":1,\"30\":1,\"33\":1,\"69\":1,\"101\":1,\"172\":3,\"207\":1,\"212\":1,\"214\":3,\"247\":2,\"274\":1,\"275\":1,\"280\":3,\"283\":2,\"285\":1,\"321\":2}}],[\"distribution\",{\"1\":{\"69\":3,\"97\":1,\"177\":1}}],[\"dispatcherhandler\",{\"1\":{\"206\":1,\"207\":7,\"221\":4}}],[\"display\",{\"1\":{\"164\":1}}],[\"displayed\",{\"1\":{\"48\":2,\"256\":1}}],[\"dispersed\",{\"1\":{\"104\":1}}],[\"disposablebean\",{\"1\":{\"35\":2}}],[\"disruptor<>\",{\"1\":{\"35\":1}}],[\"disruptor<hmilytransactionevent>\",{\"1\":{\"35\":1}}],[\"disruptor\",{\"0\":{\"35\":2},\"1\":{\"29\":1,\"33\":4,\"35\":25,\"43\":2}}],[\"discarded\",{\"1\":{\"292\":1}}],[\"disclosed\",{\"1\":{\"256\":1}}],[\"disclosure\",{\"1\":{\"9\":1}}],[\"discuss\",{\"1\":{\"80\":1,\"101\":1,\"180\":1,\"286\":1}}],[\"discussions\",{\"1\":{\"46\":1}}],[\"discussed\",{\"1\":{\"29\":1,\"290\":1,\"321\":1}}],[\"discovery\",{\"1\":{\"25\":1,\"121\":2,\"225\":1}}],[\"dalston\",{\"1\":{\"269\":1}}],[\"damage\",{\"1\":{\"210\":1}}],[\"da\",{\"1\":{\"126\":2}}],[\"dao\",{\"1\":{\"80\":1,\"82\":1}}],[\"daemon\",{\"1\":{\"48\":4}}],[\"data`\",{\"1\":{\"226\":1}}],[\"dataid\",{\"1\":{\"165\":2,\"166\":5,\"280\":1}}],[\"datapath\",{\"1\":{\"162\":3}}],[\"datalist\",{\"1\":{\"118\":7}}],[\"datahandlerhandler\",{\"1\":{\"118\":1}}],[\"datahandler>\",{\"1\":{\"117\":1}}],[\"datahandler\",{\"1\":{\"117\":2,\"118\":3}}],[\"datarefresh>\",{\"1\":{\"104\":1}}],[\"datarefreshfactory\",{\"1\":{\"104\":5}}],[\"datarefresh\",{\"1\":{\"104\":4}}],[\"datachangetask\",{\"1\":{\"100\":3}}],[\"datachange\",{\"1\":{\"98\":1,\"165\":1}}],[\"datachangedlistener\",{\"1\":{\"97\":7,\"98\":2,\"111\":2,\"112\":6,\"113\":3,\"156\":5,\"165\":3}}],[\"datachangedevent\",{\"1\":{\"79\":1,\"81\":1,\"97\":1,\"109\":1,\"110\":1,\"111\":1,\"113\":1,\"156\":4,\"157\":1,\"159\":1,\"165\":6}}],[\"datachangedeventdispatcher\",{\"1\":{\"48\":1,\"97\":2,\"101\":2,\"111\":3,\"112\":1,\"113\":1,\"156\":6,\"160\":1,\"165\":5}}],[\"datasubscriber\",{\"1\":{\"117\":1}}],[\"datasyncconfiguration\",{\"1\":{\"96\":1,\"97\":1,\"112\":2,\"116\":2}}],[\"datasource\",{\"1\":{\"56\":1,\"314\":3}}],[\"dataeventtypeenum\",{\"1\":{\"79\":1,\"81\":1,\"97\":7,\"98\":3,\"100\":1,\"109\":3,\"110\":1,\"112\":5,\"113\":5,\"114\":5,\"118\":2,\"156\":3,\"165\":1}}],[\"database\",{\"1\":{\"33\":1,\"48\":4,\"80\":2,\"81\":2,\"82\":2,\"99\":1,\"101\":3,\"109\":1,\"126\":1,\"128\":1,\"226\":1,\"280\":1,\"321\":2,\"329\":2}}],[\"data\",{\"0\":{\"95\":1,\"97\":1,\"103\":1,\"104\":1,\"106\":1,\"114\":1,\"115\":1,\"118\":1,\"152\":1,\"153\":1,\"156\":1,\"158\":1,\"159\":1,\"160\":2,\"161\":2,\"162\":1,\"164\":1,\"165\":1,\"166\":1,\"304\":1},\"1\":{\"25\":2,\"43\":2,\"48\":20,\"56\":1,\"57\":1,\"68\":3,\"80\":2,\"81\":4,\"82\":5,\"83\":4,\"85\":1,\"97\":9,\"98\":5,\"99\":6,\"100\":3,\"101\":11,\"103\":1,\"104\":33,\"105\":9,\"106\":3,\"110\":4,\"111\":1,\"112\":4,\"113\":3,\"114\":2,\"116\":1,\"117\":8,\"118\":3,\"119\":2,\"151\":5,\"154\":2,\"155\":1,\"156\":19,\"157\":4,\"159\":8,\"160\":2,\"161\":12,\"162\":9,\"164\":29,\"165\":9,\"166\":10,\"172\":3,\"173\":1,\"176\":1,\"177\":1,\"178\":1,\"182\":4,\"183\":3,\"185\":1,\"193\":1,\"195\":6,\"220\":3,\"226\":3,\"230\":2,\"236\":5,\"247\":1,\"292\":1,\"303\":1,\"304\":1,\"306\":1,\"312\":2,\"315\":2,\"321\":2}}],[\"datetime\",{\"1\":{\"226\":2}}],[\"date\",{\"1\":{\"13\":1,\"21\":1,\"24\":1,\"82\":2,\"104\":1,\"256\":1}}],[\"day\",{\"1\":{\"16\":3,\"256\":1,\"309\":1,\"320\":1}}],[\"daily\",{\"1\":{\"4\":2,\"254\":1}}],[\"druiddatasource\",{\"1\":{\"293\":1}}],[\"drawn\",{\"1\":{\"85\":1}}],[\"drat\",{\"1\":{\"54\":1}}],[\"drastic\",{\"0\":{\"32\":1}}],[\"drivers\",{\"1\":{\"127\":1,\"128\":2}}],[\"driversiterator\",{\"1\":{\"126\":3}}],[\"driverinfo\",{\"1\":{\"126\":1,\"127\":1}}],[\"driveraction\",{\"1\":{\"126\":1}}],[\"drivermanager\",{\"1\":{\"126\":7,\"127\":3,\"128\":4,\"129\":5}}],[\"driver\",{\"0\":{\"126\":1,\"127\":1},\"1\":{\"33\":1,\"43\":1,\"46\":1,\"125\":1,\"126\":18,\"127\":8,\"128\":5,\"129\":3,\"131\":1,\"280\":1,\"290\":1}}],[\"driverclassname\",{\"1\":{\"33\":1,\"43\":1,\"46\":1,\"280\":1}}],[\"dropped\",{\"1\":{\"189\":1}}],[\"drops\",{\"1\":{\"65\":1}}],[\"drop\",{\"1\":{\"29\":1}}],[\"dromara<\",{\"1\":{\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":1,\"203\":1,\"218\":1,\"228\":1,\"230\":1,\"279\":3,\"315\":2,\"316\":4}}],[\"dromara\",{\"0\":{\"12\":1,\"13\":2,\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"51\":1,\"255\":1,\"272\":1,\"322\":1},\"1\":{\"3\":2,\"5\":2,\"7\":3,\"8\":2,\"9\":4,\"10\":1,\"12\":1,\"14\":1,\"15\":1,\"19\":1,\"20\":1,\"23\":1,\"28\":1,\"49\":2,\"56\":1,\"130\":1,\"156\":5,\"160\":2,\"161\":2,\"162\":2,\"164\":14,\"165\":2,\"166\":2,\"179\":2,\"237\":1,\"247\":2,\"248\":3,\"249\":3,\"250\":2,\"251\":1,\"252\":4,\"253\":8,\"254\":2,\"256\":11,\"270\":1,\"271\":2,\"280\":1,\"282\":2,\"288\":1,\"295\":2,\"301\":3,\"306\":1,\"311\":3,\"316\":3,\"322\":5,\"323\":1,\"324\":1,\"325\":2,\"326\":2}}],[\"dreams\",{\"1\":{\"81\":1}}],[\"dream\",{\"0\":{\"12\":1,\"13\":1},\"1\":{\"12\":1,\"22\":1,\"25\":1}}],[\"demand\",{\"1\":{\"321\":1}}],[\"demonstrated\",{\"1\":{\"74\":1}}],[\"demonstrate\",{\"1\":{\"72\":1}}],[\"demonstration\",{\"1\":{\"48\":1}}],[\"demo\",{\"0\":{\"42\":1,\"122\":1,\"129\":1,\"149\":1},\"1\":{\"29\":1,\"43\":1,\"122\":1,\"129\":1,\"179\":2,\"183\":1,\"270\":1,\"285\":1}}],[\"dev\",{\"1\":{\"280\":1}}],[\"deventdispatcher\",{\"1\":{\"98\":1,\"165\":1}}],[\"developing\",{\"1\":{\"285\":1,\"308\":1,\"319\":1}}],[\"develop\",{\"1\":{\"253\":1,\"303\":1}}],[\"development\",{\"0\":{\"16\":1},\"1\":{\"22\":1,\"25\":1,\"247\":1,\"253\":1,\"254\":1,\"281\":2,\"287\":1,\"310\":1}}],[\"developers\",{\"0\":{\"306\":1},\"1\":{\"4\":1,\"306\":1,\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"degradeexception\",{\"1\":{\"214\":1}}],[\"degrade\",{\"1\":{\"214\":1}}],[\"degraderule\",{\"1\":{\"214\":2}}],[\"degraderulemanager\",{\"1\":{\"214\":4}}],[\"degraderules\",{\"1\":{\"214\":3}}],[\"degradation\",{\"1\":{\"212\":3}}],[\"deepen\",{\"1\":{\"197\":1}}],[\"deal\",{\"1\":{\"112\":1,\"212\":2,\"226\":1,\"309\":1,\"320\":1}}],[\"decoding\",{\"1\":{\"292\":3}}],[\"decentralized\",{\"1\":{\"274\":1}}],[\"december\",{\"1\":{\"13\":1}}],[\"decision\",{\"1\":{\"254\":2}}],[\"decide\",{\"1\":{\"129\":1,\"212\":1}}],[\"declaration\",{\"1\":{\"207\":1,\"232\":1}}],[\"decreases\",{\"1\":{\"211\":1}}],[\"decrease\",{\"1\":{\"89\":1}}],[\"def\",{\"1\":{\"329\":4}}],[\"define\",{\"1\":{\"119\":1,\"121\":1,\"284\":1,\"306\":2}}],[\"defined\",{\"1\":{\"112\":1,\"113\":1,\"121\":1,\"122\":1,\"164\":1,\"179\":1,\"205\":1,\"299\":1}}],[\"defines\",{\"1\":{\"84\":2,\"86\":1,\"97\":1,\"132\":1,\"275\":2}}],[\"definition\",{\"1\":{\"112\":1,\"121\":1,\"305\":1,\"315\":1}}],[\"definitely\",{\"1\":{\"104\":1,\"121\":1,\"309\":1,\"320\":1}}],[\"defer\",{\"1\":{\"86\":1,\"92\":1,\"93\":1,\"179\":1,\"185\":1,\"235\":1,\"238\":1}}],[\"defaultsoulcontext\",{\"1\":{\"180\":1}}],[\"defaultsoulpluginchain\",{\"1\":{\"86\":4,\"235\":2}}],[\"defaultsignservice\",{\"1\":{\"151\":1}}],[\"defaults\",{\"1\":{\"127\":1,\"221\":1,\"315\":1}}],[\"defaultwebclient\",{\"1\":{\"92\":2}}],[\"default\",{\"1\":{\"29\":1,\"33\":4,\"35\":1,\"43\":1,\"48\":1,\"69\":1,\"72\":1,\"82\":4,\"89\":1,\"97\":6,\"107\":1,\"111\":1,\"112\":9,\"113\":1,\"114\":1,\"118\":1,\"155\":1,\"156\":1,\"164\":2,\"165\":2,\"174\":3,\"177\":2,\"178\":1,\"179\":3,\"207\":5,\"213\":3,\"214\":2,\"218\":12,\"219\":3,\"220\":1,\"221\":2,\"222\":3,\"226\":5,\"234\":1,\"237\":1,\"256\":1,\"280\":3,\"292\":2,\"297\":1,\"305\":1,\"306\":1,\"314\":1,\"324\":4,\"326\":3}}],[\"debugging\",{\"1\":{\"48\":1,\"156\":1}}],[\"debug\",{\"0\":{\"197\":1},\"1\":{\"39\":1,\"48\":1,\"105\":1,\"123\":1,\"160\":1,\"161\":1,\"164\":1,\"165\":1,\"179\":1,\"183\":1,\"235\":1}}],[\"destined\",{\"1\":{\"305\":1}}],[\"destroy\",{\"1\":{\"35\":1}}],[\"deserialize\",{\"1\":{\"242\":8}}],[\"deserve\",{\"1\":{\"83\":1}}],[\"desc\",{\"1\":{\"230\":1}}],[\"desc`\",{\"1\":{\"226\":1}}],[\"describes\",{\"1\":{\"209\":1}}],[\"described\",{\"1\":{\"124\":1,\"212\":1}}],[\"describe\",{\"1\":{\"87\":1}}],[\"description\",{\"0\":{\"210\":1},\"1\":{\"48\":4,\"100\":1,\"212\":1,\"226\":1}}],[\"desired\",{\"1\":{\"139\":1}}],[\"designated\",{\"1\":{\"328\":1}}],[\"designating\",{\"1\":{\"254\":1}}],[\"designed\",{\"1\":{\"130\":1}}],[\"design\",{\"1\":{\"22\":1,\"69\":2,\"81\":1,\"84\":1,\"99\":1,\"101\":1,\"125\":1,\"130\":1,\"131\":1,\"169\":1,\"208\":1,\"274\":1,\"290\":2,\"309\":1,\"312\":1,\"320\":1,\"321\":3}}],[\"deprecated\",{\"1\":{\"292\":1}}],[\"depends\",{\"1\":{\"279\":1}}],[\"dependent\",{\"1\":{\"275\":1}}],[\"dependencies\",{\"0\":{\"323\":1},\"1\":{\"202\":1,\"217\":1,\"230\":1,\"277\":1,\"278\":1,\"284\":1,\"316\":4}}],[\"dependency>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":2,\"326\":2}}],[\"dependency\",{\"0\":{\"203\":1,\"278\":1},\"1\":{\"34\":1,\"48\":2,\"59\":1,\"86\":1,\"161\":1,\"166\":1,\"203\":1,\"217\":2,\"218\":1,\"279\":1,\"284\":1,\"315\":1,\"316\":1}}],[\"depend\",{\"1\":{\"210\":1,\"306\":1}}],[\"depending\",{\"1\":{\"90\":1}}],[\"deployed\",{\"1\":{\"214\":1}}],[\"deploys\",{\"1\":{\"214\":1}}],[\"deploy\",{\"1\":{\"42\":1,\"81\":1}}],[\"deployments\",{\"1\":{\"308\":1,\"319\":1}}],[\"deployment\",{\"0\":{\"31\":1},\"1\":{\"4\":1,\"31\":1,\"191\":1,\"195\":1,\"274\":1}}],[\"delegate\",{\"1\":{\"214\":1}}],[\"deletion\",{\"1\":{\"161\":1,\"162\":1,\"294\":1,\"322\":1}}],[\"deletezkpathrecursive\",{\"1\":{\"98\":3}}],[\"deleted\",{\"1\":{\"48\":1}}],[\"deletebyquery\",{\"1\":{\"48\":1}}],[\"delete\",{\"1\":{\"48\":2,\"98\":2,\"110\":3,\"117\":1,\"118\":2,\"214\":2,\"292\":1,\"329\":4}}],[\"deltarate\",{\"1\":{\"200\":1}}],[\"delta\",{\"1\":{\"200\":4}}],[\"delay\",{\"1\":{\"33\":2,\"100\":1,\"105\":1,\"151\":2,\"211\":1,\"312\":1,\"317\":1}}],[\"delved\",{\"1\":{\"32\":1}}],[\"determination\",{\"1\":{\"213\":1}}],[\"determining\",{\"1\":{\"197\":1}}],[\"determines\",{\"1\":{\"128\":1,\"165\":1}}],[\"determined\",{\"1\":{\"92\":1,\"212\":1,\"213\":1}}],[\"determine\",{\"1\":{\"78\":1,\"86\":1,\"90\":1,\"104\":1,\"114\":1,\"117\":1,\"127\":1,\"151\":1,\"177\":1,\"184\":1,\"212\":2,\"241\":2,\"242\":1}}],[\"detection\",{\"1\":{\"100\":1,\"174\":3}}],[\"detected\",{\"1\":{\"100\":1,\"212\":1}}],[\"detect\",{\"1\":{\"81\":1,\"212\":1}}],[\"detailed\",{\"0\":{\"139\":1},\"1\":{\"164\":2,\"280\":1}}],[\"detail\",{\"1\":{\"40\":1,\"48\":1,\"80\":1,\"200\":1,\"218\":1}}],[\"details\",{\"0\":{\"22\":1,\"25\":1},\"1\":{\"43\":1,\"46\":1,\"92\":1,\"97\":1,\"120\":1,\"124\":1,\"177\":1,\"189\":1,\"202\":1,\"243\":1,\"316\":1,\"329\":1}}],[\"detrimental\",{\"1\":{\"7\":2}}],[\"deducted\",{\"1\":{\"16\":1}}],[\"dedicated\",{\"1\":{\"4\":2}}],[\"domino\",{\"1\":{\"210\":1}}],[\"domain\",{\"1\":{\"87\":2,\"172\":2,\"176\":1,\"183\":2,\"305\":1,\"326\":2}}],[\"doprivileged\",{\"1\":{\"126\":1}}],[\"dog\",{\"1\":{\"122\":1}}],[\"dodelete\",{\"1\":{\"118\":1}}],[\"double\",{\"1\":{\"139\":1,\"197\":2,\"210\":2,\"311\":1}}],[\"doubtful\",{\"1\":{\"113\":1,\"114\":1}}],[\"doubts\",{\"1\":{\"78\":1,\"101\":1,\"200\":1}}],[\"doupdate\",{\"1\":{\"118\":2}}],[\"dorefresh\",{\"1\":{\"118\":1}}],[\"dofetchgroup\",{\"1\":{\"104\":1}}],[\"dofetchgroupconfig\",{\"1\":{\"104\":2,\"105\":3}}],[\"dolongpolling\",{\"1\":{\"100\":5,\"105\":3}}],[\"doing\",{\"0\":{\"98\":1},\"1\":{\"98\":1,\"105\":1,\"253\":1}}],[\"doonerror\",{\"1\":{\"92\":1,\"184\":1,\"197\":1,\"221\":1}}],[\"doonsuccess\",{\"1\":{\"86\":1,\"214\":1,\"221\":1}}],[\"doselect\",{\"1\":{\"89\":1,\"90\":1,\"91\":1,\"177\":2}}],[\"doexcute\",{\"1\":{\"182\":3,\"197\":1}}],[\"doexecuteresilience4jplugn\",{\"1\":{\"221\":1}}],[\"doexecute\",{\"1\":{\"84\":1,\"85\":4,\"87\":3,\"172\":3,\"182\":1,\"183\":1,\"197\":1,\"207\":1,\"214\":1,\"221\":2,\"236\":1}}],[\"doesn\",{\"1\":{\"29\":1,\"40\":1,\"86\":1,\"184\":2}}],[\"does\",{\"0\":{\"30\":1,\"117\":1,\"161\":2,\"162\":1,\"165\":1,\"166\":1,\"241\":1},\"1\":{\"7\":1,\"48\":1,\"69\":1,\"70\":1,\"74\":1,\"89\":2,\"97\":1,\"98\":2,\"99\":1,\"100\":3,\"101\":2,\"110\":1,\"122\":1,\"126\":1,\"131\":2,\"133\":1,\"164\":1,\"172\":1,\"182\":1,\"195\":1,\"210\":1,\"212\":1,\"214\":1,\"231\":1,\"241\":1,\"276\":2,\"285\":2,\"308\":1,\"319\":1,\"322\":1,\"329\":2}}],[\"doc是一款适合企业和个人私有化部署使用的\",{\"1\":{\"331\":1}}],[\"doc\",{\"0\":{\"330\":1},\"1\":{\"331\":1}}],[\"docs\",{\"1\":{\"49\":1,\"271\":1,\"280\":1,\"301\":1,\"311\":1,\"316\":3}}],[\"document3\",{\"1\":{\"322\":1}}],[\"document2\",{\"1\":{\"322\":1}}],[\"document1\",{\"1\":{\"322\":1}}],[\"documents\",{\"0\":{\"189\":1,\"271\":1},\"1\":{\"155\":1,\"189\":1}}],[\"document\",{\"1\":{\"49\":1,\"189\":1,\"250\":1,\"271\":1,\"298\":1,\"301\":1,\"306\":1,\"311\":1,\"328\":1}}],[\"documentation\",{\"0\":{\"250\":1},\"1\":{\"8\":1,\"247\":1}}],[\"download\",{\"1\":{\"310\":1,\"314\":1,\"329\":4}}],[\"downtime\",{\"1\":{\"210\":1,\"308\":1,\"319\":1}}],[\"downstream\",{\"1\":{\"87\":2,\"92\":3,\"171\":1,\"172\":2,\"178\":1,\"181\":1,\"183\":1,\"184\":1,\"211\":1}}],[\"down\",{\"1\":{\"31\":1,\"33\":2,\"43\":1,\"78\":1,\"81\":2,\"200\":1,\"210\":1}}],[\"donor\",{\"1\":{\"290\":1}}],[\"donext\",{\"1\":{\"92\":2,\"184\":3}}],[\"done\",{\"1\":{\"77\":1,\"83\":1,\"123\":1,\"184\":1,\"187\":1,\"197\":1}}],[\"don\",{\"1\":{\"40\":1,\"48\":2,\"78\":1,\"82\":1,\"86\":1,\"87\":1,\"106\":1,\"129\":1,\"183\":1,\"184\":1,\"192\":1,\"217\":1,\"280\":1,\"281\":1,\"305\":1,\"309\":1,\"316\":1,\"320\":1,\"328\":4}}],[\"dongdong\",{\"1\":{\"25\":1}}],[\"donate\",{\"1\":{\"322\":1}}],[\"donated\",{\"1\":{\"7\":3,\"8\":1,\"247\":1,\"248\":1,\"253\":1,\"322\":1}}],[\"donation\",{\"0\":{\"8\":1,\"245\":1,\"246\":1,\"253\":1},\"1\":{\"6\":1,\"290\":2}}],[\"do\",{\"1\":{\"2\":1,\"7\":2,\"16\":1,\"69\":1,\"85\":1,\"92\":1,\"97\":3,\"98\":2,\"99\":3,\"101\":3,\"105\":1,\"112\":1,\"123\":1,\"126\":3,\"129\":2,\"134\":1,\"180\":2,\"195\":1,\"212\":2,\"290\":1,\"308\":4,\"309\":2,\"316\":2,\"317\":1,\"319\":4,\"320\":2,\"321\":5}}],[\"hb\",{\"1\":{\"256\":1}}],[\"huawei\",{\"1\":{\"322\":1,\"324\":2,\"329\":1}}],[\"huangxiaofeng\",{\"1\":{\"110\":1,\"112\":1}}],[\"husky\",{\"1\":{\"290\":1}}],[\"hutool\",{\"0\":{\"289\":1,\"290\":1},\"1\":{\"256\":4,\"289\":1,\"290\":7,\"295\":2}}],[\"hystrix<\",{\"1\":{\"316\":1}}],[\"hystrix\",{\"1\":{\"87\":2,\"179\":2,\"217\":4,\"268\":1,\"276\":1,\"285\":1,\"312\":1,\"316\":2}}],[\"hi\",{\"1\":{\"256\":1}}],[\"hits\",{\"1\":{\"139\":1}}],[\"hit\",{\"1\":{\"135\":1,\"139\":1}}],[\"hijacked\",{\"1\":{\"105\":1}}],[\"historical\",{\"1\":{\"253\":1}}],[\"histogramobserveduration\",{\"1\":{\"86\":1}}],[\"his\",{\"1\":{\"91\":1}}],[\"higher\",{\"1\":{\"193\":1,\"210\":1,\"256\":1}}],[\"highest\",{\"1\":{\"91\":1}}],[\"highly\",{\"0\":{\"27\":1,\"28\":1},\"1\":{\"4\":1,\"302\":2}}],[\"high\",{\"0\":{\"33\":1,\"34\":1,\"41\":1,\"312\":1,\"313\":2},\"1\":{\"4\":3,\"33\":8,\"49\":1,\"68\":1,\"91\":2,\"211\":1,\"225\":3,\"274\":2,\"275\":2,\"283\":2,\"317\":1,\"321\":1}}],[\"html\",{\"1\":{\"49\":1,\"57\":1,\"271\":1,\"280\":1,\"301\":1,\"311\":1,\"314\":1,\"316\":3}}],[\"httprequest\",{\"1\":{\"293\":1}}],[\"httptestcontroller\",{\"1\":{\"219\":9}}],[\"httpentity\",{\"1\":{\"105\":4}}],[\"httpconstants\",{\"1\":{\"100\":2}}],[\"httpclient\",{\"1\":{\"61\":1,\"64\":6,\"87\":2,\"104\":1,\"105\":1,\"164\":1}}],[\"httplongpollingtask\",{\"1\":{\"104\":1}}],[\"httplongpollingdata\",{\"1\":{\"100\":2,\"101\":1}}],[\"httplongpollingdatachangedlistener\",{\"1\":{\"48\":2,\"97\":4,\"100\":2,\"112\":4}}],[\"httplongpollinglistener\",{\"1\":{\"97\":1,\"112\":1}}],[\"httpheaders\",{\"1\":{\"92\":4,\"105\":2,\"180\":1,\"184\":4,\"207\":1}}],[\"httpmethod\",{\"1\":{\"92\":3,\"180\":1,\"184\":2}}],[\"http\",{\"0\":{\"59\":1,\"61\":1,\"62\":1,\"76\":1,\"94\":1,\"95\":1,\"100\":1,\"102\":1,\"103\":1,\"179\":1,\"184\":1,\"185\":1},\"1\":{\"4\":1,\"25\":2,\"48\":5,\"56\":1,\"57\":1,\"59\":7,\"60\":1,\"61\":6,\"62\":1,\"63\":1,\"64\":21,\"65\":6,\"66\":1,\"69\":3,\"72\":2,\"73\":3,\"74\":1,\"77\":1,\"81\":2,\"82\":5,\"83\":1,\"85\":1,\"87\":3,\"92\":4,\"96\":3,\"97\":3,\"98\":2,\"100\":3,\"104\":3,\"105\":5,\"106\":1,\"108\":1,\"112\":4,\"116\":1,\"118\":1,\"164\":2,\"171\":3,\"172\":5,\"176\":3,\"179\":7,\"180\":8,\"183\":4,\"184\":3,\"185\":4,\"187\":1,\"193\":2,\"197\":1,\"214\":3,\"218\":1,\"219\":11,\"220\":3,\"225\":1,\"226\":1,\"280\":2,\"293\":4,\"294\":2,\"303\":1,\"304\":1,\"305\":5,\"314\":1,\"317\":1}}],[\"httpsyncdataservice\",{\"1\":{\"104\":2,\"105\":1}}],[\"httpsyncproperties\",{\"1\":{\"97\":4,\"112\":4}}],[\"httpservletresponse\",{\"1\":{\"100\":3}}],[\"httpservletrequest\",{\"1\":{\"100\":4,\"322\":1,\"328\":3}}],[\"httpstatuscodeexception\",{\"1\":{\"214\":1}}],[\"httpstatus\",{\"1\":{\"93\":3,\"185\":3,\"197\":1,\"207\":1,\"214\":6,\"221\":2,\"236\":2}}],[\"https\",{\"0\":{\"42\":1},\"1\":{\"3\":1,\"28\":2,\"46\":1,\"49\":2,\"52\":1,\"104\":5,\"105\":1,\"130\":1,\"182\":1,\"237\":1,\"244\":2,\"248\":2,\"250\":1,\"271\":3,\"280\":1,\"282\":2,\"288\":2,\"295\":2,\"301\":3,\"306\":1,\"311\":3,\"314\":1,\"315\":1,\"316\":3,\"321\":1,\"322\":5,\"326\":1,\"328\":1,\"329\":4,\"331\":2}}],[\"h\",{\"1\":{\"48\":2,\"219\":9}}],[\"hex\",{\"1\":{\"292\":1}}],[\"helle\",{\"1\":{\"280\":2}}],[\"hellboy0621\",{\"1\":{\"256\":1}}],[\"hellocontroller\",{\"1\":{\"280\":1}}],[\"helloservice=\",{\"1\":{\"280\":1}}],[\"helloserviceimpl\",{\"1\":{\"280\":2}}],[\"helloservice\",{\"1\":{\"280\":11}}],[\"helloworld\",{\"1\":{\"256\":1,\"306\":1}}],[\"hello\",{\"1\":{\"220\":1,\"230\":1,\"280\":17}}],[\"held\",{\"1\":{\"100\":2,\"101\":3}}],[\"helpful\",{\"1\":{\"243\":1}}],[\"help\",{\"1\":{\"137\":1,\"212\":1,\"311\":1}}],[\"helper\",{\"1\":{\"40\":1}}],[\"helps\",{\"1\":{\"4\":1}}],[\"head\",{\"1\":{\"249\":1,\"252\":1,\"254\":1}}],[\"headers\",{\"1\":{\"92\":1,\"93\":1,\"105\":3,\"180\":2,\"184\":1,\"185\":1}}],[\"header\",{\"0\":{\"148\":1},\"1\":{\"70\":2,\"92\":1,\"128\":2,\"151\":1,\"171\":1,\"184\":2,\"298\":1}}],[\"health\",{\"1\":{\"174\":2,\"175\":1,\"284\":1,\"315\":1}}],[\"hear\",{\"1\":{\"98\":1}}],[\"heartbeat\",{\"1\":{\"48\":1}}],[\"here\",{\"1\":{\"33\":1,\"35\":2,\"40\":1,\"43\":1,\"48\":10,\"78\":1,\"80\":2,\"81\":2,\"82\":2,\"86\":4,\"87\":2,\"91\":2,\"92\":3,\"96\":1,\"97\":1,\"99\":1,\"100\":4,\"104\":3,\"108\":1,\"109\":1,\"110\":2,\"112\":1,\"113\":5,\"114\":1,\"123\":1,\"127\":2,\"128\":1,\"129\":1,\"156\":1,\"164\":1,\"165\":2,\"174\":2,\"179\":1,\"180\":1,\"182\":3,\"191\":1,\"192\":1,\"197\":1,\"199\":1,\"200\":2,\"212\":1,\"278\":1,\"286\":1,\"288\":1,\"309\":1,\"320\":1,\"321\":1,\"324\":2,\"326\":2}}],[\"hessian\",{\"1\":{\"33\":4,\"34\":1,\"284\":1}}],[\"hmilyconsumerdatahandler\",{\"1\":{\"35\":7}}],[\"hmilytcc\",{\"1\":{\"280\":3}}],[\"hmilytransactionexecutor\",{\"1\":{\"36\":14}}],[\"hmilytransactioneventpublisher\",{\"1\":{\"35\":2,\"39\":1}}],[\"hmilytransactioneventtranslator\",{\"1\":{\"35\":2}}],[\"hmilytransactioneventfactory\",{\"1\":{\"35\":2}}],[\"hmilytransactionevent\",{\"1\":{\"35\":1}}],[\"hmilytransactionhandler\",{\"1\":{\"36\":2}}],[\"hmilytransactionbootstrap\",{\"1\":{\"33\":2,\"43\":2}}],[\"hmilythreadfactory\",{\"1\":{\"35\":2,\"36\":2}}],[\"hmily\",{\"0\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"41\":1,\"42\":3,\"46\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"272\":1,\"280\":1,\"283\":1,\"284\":1,\"285\":1},\"1\":{\"28\":5,\"29\":4,\"30\":1,\"31\":1,\"32\":1,\"33\":10,\"35\":11,\"36\":8,\"39\":1,\"40\":4,\"43\":9,\"44\":1,\"45\":1,\"46\":6,\"268\":1,\"270\":6,\"271\":3,\"276\":1,\"277\":4,\"280\":14,\"281\":1,\"282\":2,\"283\":1,\"284\":11,\"285\":3,\"286\":1,\"287\":1,\"288\":3,\"321\":1}}],[\"hope\",{\"1\":{\"243\":1,\"253\":1,\"286\":1,\"311\":1,\"321\":2}}],[\"hot\",{\"0\":{\"316\":1},\"1\":{\"169\":1,\"195\":1,\"312\":1,\"316\":2}}],[\"home\",{\"1\":{\"290\":1}}],[\"home=\",{\"1\":{\"155\":1}}],[\"homework\",{\"1\":{\"16\":2}}],[\"horse\",{\"1\":{\"122\":1}}],[\"horizons\",{\"1\":{\"15\":1}}],[\"hook\",{\"1\":{\"97\":1}}],[\"holder\",{\"1\":{\"135\":1,\"139\":2}}],[\"holder<object>\",{\"1\":{\"135\":1,\"139\":1}}],[\"holder<object>>\",{\"1\":{\"134\":1,\"135\":1}}],[\"holder<>\",{\"1\":{\"134\":1,\"136\":1,\"139\":1}}],[\"holder<map<string\",{\"1\":{\"134\":1,\"136\":1}}],[\"holding\",{\"1\":{\"98\":1,\"99\":1,\"101\":1}}],[\"hold\",{\"1\":{\"97\":1,\"99\":1,\"100\":3,\"189\":1}}],[\"holds\",{\"1\":{\"39\":1,\"99\":1,\"101\":1,\"135\":1,\"137\":1,\"139\":1,\"172\":1}}],[\"hole\",{\"1\":{\"86\":1}}],[\"hosted\",{\"1\":{\"247\":1}}],[\"hostport\",{\"1\":{\"176\":5}}],[\"host\",{\"0\":{\"173\":1},\"1\":{\"33\":1,\"46\":1,\"70\":2,\"92\":1,\"155\":1,\"176\":11,\"184\":1}}],[\"hostname\",{\"1\":{\"33\":1}}],[\"however\",{\"1\":{\"91\":1,\"182\":1,\"199\":1,\"210\":1,\"306\":1}}],[\"how\",{\"0\":{\"30\":1,\"42\":1,\"116\":1,\"117\":1,\"161\":2,\"162\":1,\"165\":1,\"166\":1,\"195\":1,\"196\":1,\"241\":1,\"302\":1},\"1\":{\"22\":2,\"29\":1,\"43\":1,\"48\":7,\"80\":1,\"81\":1,\"88\":1,\"98\":2,\"99\":4,\"100\":2,\"101\":4,\"106\":2,\"122\":1,\"123\":1,\"124\":2,\"126\":1,\"127\":1,\"129\":2,\"131\":1,\"136\":1,\"159\":2,\"173\":1,\"184\":1,\"189\":1,\"192\":1,\"207\":1,\"209\":3,\"211\":2,\"212\":4,\"240\":2,\"242\":1,\"243\":2,\"290\":1,\"308\":2,\"309\":1,\"316\":1,\"317\":1,\"319\":2,\"320\":1,\"325\":1,\"329\":1}}],[\"harm\",{\"1\":{\"254\":1}}],[\"harmful\",{\"1\":{\"210\":1}}],[\"harmony\",{\"1\":{\"2\":1,\"15\":1,\"275\":1,\"282\":1,\"286\":1,\"295\":1}}],[\"half\",{\"1\":{\"109\":2,\"212\":1,\"213\":3,\"218\":2,\"219\":1}}],[\"ha\",{\"1\":{\"78\":2}}],[\"happily\",{\"1\":{\"286\":1}}],[\"happiness\",{\"1\":{\"2\":1,\"275\":1,\"282\":1,\"295\":1}}],[\"happen\",{\"1\":{\"48\":1,\"123\":1,\"276\":1}}],[\"happylife\",{\"1\":{\"33\":1,\"46\":1}}],[\"havingvalue\",{\"1\":{\"97\":1,\"112\":2,\"116\":1}}],[\"having\",{\"1\":{\"32\":1,\"80\":1,\"112\":1,\"254\":1}}],[\"haven\",{\"1\":{\"32\":1,\"124\":1}}],[\"have\",{\"0\":{\"189\":1},\"1\":{\"8\":1,\"16\":1,\"31\":1,\"40\":1,\"46\":1,\"48\":2,\"69\":1,\"77\":1,\"78\":1,\"80\":1,\"83\":2,\"86\":1,\"87\":2,\"91\":1,\"96\":1,\"100\":2,\"101\":2,\"110\":1,\"118\":2,\"122\":1,\"124\":2,\"127\":1,\"129\":1,\"130\":1,\"131\":1,\"164\":3,\"179\":4,\"182\":1,\"187\":1,\"193\":1,\"197\":2,\"200\":2,\"210\":2,\"211\":1,\"214\":1,\"226\":1,\"231\":1,\"236\":3,\"247\":3,\"282\":1,\"288\":1,\"290\":1,\"295\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":5}}],[\"had\",{\"1\":{\"29\":1,\"48\":1}}],[\"handed\",{\"1\":{\"171\":1,\"199\":1}}],[\"handling\",{\"0\":{\"28\":1},\"1\":{\"117\":1,\"172\":1,\"183\":1,\"214\":3,\"218\":1,\"293\":1,\"322\":1}}],[\"handled\",{\"1\":{\"207\":1,\"248\":1,\"254\":1}}],[\"handledatadeleted\",{\"1\":{\"162\":1}}],[\"handledatachange\",{\"1\":{\"162\":1}}],[\"handleplugin\",{\"1\":{\"195\":1}}],[\"handleadd\",{\"1\":{\"79\":5,\"81\":6}}],[\"handleeventswithworkerpool\",{\"1\":{\"35\":2}}],[\"handlerresulthandler\",{\"1\":{\"207\":1}}],[\"handlerresulthandler>\",{\"1\":{\"207\":1}}],[\"handlerrule\",{\"1\":{\"118\":1,\"214\":1}}],[\"handleradapters\",{\"1\":{\"207\":2}}],[\"handleradapter\",{\"1\":{\"207\":2}}],[\"handleradapter>\",{\"1\":{\"207\":1}}],[\"handleru\",{\"1\":{\"182\":1}}],[\"handleruleisnull\",{\"1\":{\"182\":2}}],[\"handlerplugin\",{\"1\":{\"118\":1,\"195\":2}}],[\"handlermappings\",{\"1\":{\"207\":3}}],[\"handlermapping\",{\"1\":{\"207\":2}}],[\"handlermapping>\",{\"1\":{\"207\":1}}],[\"handlermap\",{\"1\":{\"118\":4}}],[\"handlerselector\",{\"1\":{\"118\":1}}],[\"handlers\",{\"1\":{\"118\":2}}],[\"handlerspringmvcrule\",{\"0\":{\"82\":1},\"1\":{\"78\":1,\"82\":1}}],[\"handlerspringmvcselector\",{\"0\":{\"79\":1},\"1\":{\"78\":1,\"79\":1,\"81\":2}}],[\"handleresult\",{\"1\":{\"117\":1,\"207\":1}}],[\"handlerequestbody\",{\"1\":{\"92\":3,\"184\":4}}],[\"handler\",{\"1\":{\"35\":1,\"36\":2,\"80\":2,\"86\":1,\"87\":1,\"117\":1,\"118\":7,\"164\":2,\"195\":1,\"207\":3,\"214\":2}}],[\"handleselectorisnull\",{\"1\":{\"182\":3}}],[\"handles\",{\"0\":{\"82\":1},\"1\":{\"30\":2,\"165\":1,\"179\":1,\"185\":1}}],[\"handle\",{\"0\":{\"27\":1,\"30\":1,\"79\":1},\"1\":{\"33\":1,\"69\":1,\"79\":3,\"81\":7,\"82\":9,\"86\":2,\"97\":1,\"117\":1,\"118\":1,\"182\":2,\"183\":1,\"184\":1,\"197\":2,\"207\":9,\"214\":1,\"221\":1,\"235\":2}}],[\"hand\",{\"1\":{\"16\":1,\"182\":1}}],[\"hasmoreelements\",{\"1\":{\"123\":1,\"139\":1}}],[\"hashmap\",{\"1\":{\"234\":3}}],[\"hashmap<>\",{\"1\":{\"139\":1}}],[\"hashvalue\",{\"1\":{\"195\":1}}],[\"hashkey\",{\"1\":{\"195\":1}}],[\"hashset<>\",{\"1\":{\"165\":1}}],[\"hashloadbalance\",{\"1\":{\"120\":1}}],[\"hash\",{\"0\":{\"89\":1},\"1\":{\"89\":9,\"173\":3,\"175\":3,\"177\":1}}],[\"hasnull\",{\"1\":{\"294\":1}}],[\"hasnextservice\",{\"1\":{\"123\":3}}],[\"hasnext\",{\"1\":{\"100\":1,\"123\":4,\"126\":1}}],[\"hasn\",{\"1\":{\"42\":1,\"88\":1}}],[\"has\",{\"0\":{\"81\":1,\"255\":1,\"270\":1},\"1\":{\"8\":2,\"29\":1,\"30\":1,\"33\":1,\"37\":1,\"48\":2,\"57\":1,\"69\":1,\"81\":3,\"82\":1,\"83\":1,\"85\":1,\"87\":1,\"98\":1,\"99\":2,\"100\":2,\"101\":3,\"104\":3,\"105\":1,\"122\":1,\"124\":1,\"129\":1,\"131\":1,\"134\":1,\"162\":1,\"164\":3,\"173\":1,\"177\":1,\"179\":2,\"180\":1,\"183\":1,\"185\":1,\"195\":1,\"207\":1,\"210\":1,\"213\":1,\"217\":1,\"247\":1,\"253\":1,\"254\":1,\"280\":1,\"288\":1,\"290\":1,\"297\":1,\"298\":1,\"302\":2,\"306\":1,\"308\":2,\"311\":2,\"319\":2,\"321\":1,\"322\":1}}],[\"aa\",{\"1\":{\"329\":5}}],[\"aaa\",{\"1\":{\"33\":1}}],[\"audi\",{\"1\":{\"256\":1}}],[\"authpath\",{\"1\":{\"156\":2}}],[\"authurl\",{\"1\":{\"147\":2}}],[\"authenticate\",{\"1\":{\"141\":1,\"142\":2,\"155\":1}}],[\"authentication\",{\"0\":{\"147\":1,\"148\":1},\"1\":{\"4\":4,\"151\":2,\"164\":1,\"169\":1,\"179\":1,\"180\":2,\"185\":1,\"308\":2,\"309\":1,\"317\":1,\"319\":2,\"320\":1}}],[\"authdatahandler\",{\"1\":{\"117\":1}}],[\"authdatasubscriber\",{\"1\":{\"117\":1}}],[\"authdatasubscribers\",{\"1\":{\"104\":3,\"117\":2,\"161\":5}}],[\"authsubscribers\",{\"1\":{\"117\":2,\"161\":4,\"166\":2}}],[\"auth\",{\"1\":{\"48\":3,\"97\":1,\"104\":1,\"110\":1,\"111\":1,\"113\":2,\"117\":1,\"156\":2,\"161\":2,\"164\":1}}],[\"authority\",{\"1\":{\"254\":1}}],[\"authors\",{\"1\":{\"253\":1}}],[\"author\",{\"1\":{\"35\":1,\"36\":1,\"40\":1,\"43\":1,\"110\":2,\"112\":2,\"156\":2,\"253\":4}}],[\"auto\",{\"1\":{\"281\":1,\"288\":1}}],[\"autosql\",{\"1\":{\"280\":1}}],[\"autonomy\",{\"1\":{\"254\":1}}],[\"autocloseable\",{\"1\":{\"104\":1,\"161\":1}}],[\"autoproxy\",{\"1\":{\"43\":1}}],[\"autowired\",{\"1\":{\"35\":2,\"36\":2,\"280\":1,\"328\":1}}],[\"automatictransitionfromopentohalfopenenabled\",{\"1\":{\"218\":1}}],[\"automatically\",{\"1\":{\"72\":3,\"129\":1,\"161\":1,\"164\":1,\"166\":2,\"210\":1,\"212\":1,\"218\":1,\"328\":1}}],[\"automatic\",{\"1\":{\"34\":1,\"225\":1}}],[\"automated\",{\"1\":{\"4\":1}}],[\"aim\",{\"0\":{\"216\":1,\"224\":1}}],[\"aimed\",{\"1\":{\"211\":1}}],[\"ain\",{\"1\":{\"155\":2}}],[\"ak\",{\"0\":{\"142\":1},\"1\":{\"142\":2}}],[\"avalibility\",{\"1\":{\"283\":1}}],[\"availability\",{\"0\":{\"313\":1},\"1\":{\"274\":1,\"275\":1}}],[\"availableprocessors\",{\"1\":{\"36\":1,\"43\":2}}],[\"available\",{\"1\":{\"4\":1,\"128\":1,\"151\":1,\"164\":2,\"172\":2,\"178\":2,\"200\":1}}],[\"avoid\",{\"1\":{\"211\":1}}],[\"avoided\",{\"1\":{\"124\":1}}],[\"average\",{\"1\":{\"177\":1,\"214\":1}}],[\"avg\",{\"1\":{\"65\":2,\"219\":1}}],[\"affordable\",{\"1\":{\"290\":1}}],[\"affairs\",{\"1\":{\"254\":1}}],[\"affected\",{\"1\":{\"182\":1}}],[\"affect\",{\"1\":{\"110\":1,\"184\":1}}],[\"af86\",{\"1\":{\"164\":4}}],[\"aforementioned\",{\"1\":{\"48\":1}}],[\"afterpropertiesset\",{\"1\":{\"111\":1,\"112\":1,\"156\":4,\"165\":2,\"195\":1}}],[\"afterpluginchanged\",{\"1\":{\"97\":2,\"100\":2}}],[\"after\",{\"0\":{\"195\":1},\"1\":{\"32\":2,\"43\":1,\"48\":8,\"65\":1,\"66\":1,\"68\":1,\"72\":1,\"80\":1,\"83\":1,\"87\":1,\"88\":1,\"91\":2,\"92\":1,\"96\":1,\"97\":2,\"98\":2,\"99\":1,\"100\":2,\"101\":2,\"104\":1,\"105\":1,\"106\":1,\"112\":2,\"114\":1,\"117\":1,\"118\":1,\"122\":1,\"123\":2,\"124\":2,\"129\":1,\"155\":2,\"156\":5,\"159\":1,\"160\":1,\"161\":2,\"164\":3,\"165\":3,\"166\":1,\"180\":3,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"198\":1,\"207\":1,\"212\":2,\"213\":2,\"214\":3,\"237\":1,\"240\":1,\"247\":1,\"248\":1,\"253\":4,\"254\":1,\"290\":2,\"302\":1,\"322\":1}}],[\"age\",{\"1\":{\"290\":1}}],[\"agents\",{\"1\":{\"225\":1}}],[\"aggregates\",{\"1\":{\"284\":1}}],[\"again\",{\"1\":{\"46\":1,\"48\":2,\"62\":1,\"74\":1,\"81\":1,\"104\":1,\"105\":1,\"164\":1,\"193\":1,\"213\":2}}],[\"ago\",{\"1\":{\"37\":1}}],[\"alone\",{\"1\":{\"326\":1}}],[\"along\",{\"1\":{\"139\":1,\"321\":1}}],[\"alos\",{\"1\":{\"321\":1}}],[\"aly\",{\"1\":{\"256\":1}}],[\"always\",{\"1\":{\"253\":1}}],[\"almost\",{\"1\":{\"177\":1,\"305\":1}}],[\"alternative\",{\"1\":{\"217\":1}}],[\"alt\",{\"1\":{\"112\":1}}],[\"although\",{\"1\":{\"110\":1,\"129\":1,\"131\":1,\"184\":1}}],[\"algorithm\",{\"0\":{\"200\":1},\"1\":{\"89\":1,\"91\":2,\"120\":3,\"172\":1,\"177\":7,\"178\":1,\"189\":6,\"191\":2,\"199\":4,\"312\":1}}],[\"already\",{\"1\":{\"87\":1,\"98\":1,\"128\":1,\"179\":1,\"182\":1}}],[\"alist\",{\"1\":{\"322\":2}}],[\"alias\",{\"1\":{\"293\":1}}],[\"aliyu\",{\"1\":{\"256\":1}}],[\"aliyuncs\",{\"1\":{\"326\":1}}],[\"aliyun\",{\"1\":{\"164\":2,\"326\":4,\"328\":1}}],[\"ali\",{\"1\":{\"209\":1}}],[\"aligned\",{\"1\":{\"72\":1,\"324\":2}}],[\"alibabadubboplugin\",{\"1\":{\"85\":2,\"86\":1}}],[\"alibaba\",{\"1\":{\"57\":1,\"87\":2,\"164\":1,\"179\":2,\"212\":1,\"312\":1,\"316\":4,\"321\":1,\"322\":2,\"326\":2}}],[\"also\",{\"1\":{\"33\":2,\"48\":2,\"68\":1,\"69\":3,\"83\":1,\"86\":2,\"87\":2,\"88\":1,\"92\":1,\"96\":1,\"98\":3,\"100\":3,\"101\":2,\"103\":1,\"105\":1,\"110\":1,\"121\":1,\"124\":1,\"129\":1,\"131\":1,\"132\":1,\"133\":2,\"185\":1,\"187\":1,\"195\":2,\"210\":1,\"211\":2,\"214\":1,\"225\":1,\"280\":1,\"290\":1,\"308\":1,\"315\":1,\"317\":1,\"319\":1,\"321\":2,\"329\":1}}],[\"allowunsaferenegotiation\",{\"1\":{\"293\":1}}],[\"allowunsafeservercertchange\",{\"1\":{\"293\":1}}],[\"allowed\",{\"1\":{\"189\":1,\"197\":4,\"200\":5}}],[\"allowing\",{\"1\":{\"100\":1,\"304\":1}}],[\"allow\",{\"1\":{\"62\":1,\"189\":1,\"315\":1}}],[\"allows\",{\"1\":{\"48\":1}}],[\"all\",{\"1\":{\"4\":1,\"5\":1,\"6\":1,\"7\":2,\"9\":2,\"32\":1,\"48\":2,\"69\":3,\"72\":1,\"85\":2,\"86\":4,\"90\":1,\"91\":1,\"100\":1,\"101\":1,\"104\":4,\"106\":1,\"107\":1,\"112\":1,\"113\":1,\"114\":1,\"116\":1,\"117\":3,\"118\":2,\"121\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"139\":1,\"151\":1,\"156\":3,\"164\":4,\"165\":2,\"171\":1,\"182\":3,\"210\":1,\"213\":1,\"214\":5,\"217\":1,\"231\":2,\"252\":1,\"254\":1,\"256\":1,\"269\":3,\"272\":1,\"287\":1,\"290\":2,\"292\":1,\"300\":1,\"303\":1,\"305\":1,\"307\":1,\"308\":3,\"312\":1,\"316\":2,\"317\":2,\"318\":1,\"319\":3,\"321\":2,\"322\":1,\"325\":1,\"329\":1}}],[\"acl\",{\"1\":{\"322\":1}}],[\"aclass\",{\"1\":{\"137\":4,\"139\":6}}],[\"acm\",{\"1\":{\"164\":4}}],[\"acquisition\",{\"1\":{\"100\":1}}],[\"acquired\",{\"1\":{\"151\":1,\"199\":1}}],[\"acquirebyname\",{\"1\":{\"82\":1,\"117\":1,\"118\":1}}],[\"acquire\",{\"1\":{\"40\":1,\"218\":1}}],[\"achieve\",{\"1\":{\"124\":1,\"277\":1,\"317\":1,\"321\":1}}],[\"achieved\",{\"1\":{\"100\":1}}],[\"achieving\",{\"1\":{\"30\":1,\"48\":2}}],[\"acc\",{\"1\":{\"123\":3}}],[\"accumulation\",{\"1\":{\"91\":1}}],[\"accumulated\",{\"1\":{\"90\":1}}],[\"accesskey\",{\"1\":{\"164\":2}}],[\"accesscontroller\",{\"1\":{\"123\":1,\"126\":1}}],[\"accessing\",{\"1\":{\"83\":1,\"287\":1}}],[\"accesses\",{\"1\":{\"77\":1,\"106\":1}}],[\"accessed\",{\"0\":{\"81\":1},\"1\":{\"48\":1,\"89\":1}}],[\"access\",{\"0\":{\"76\":1,\"80\":1,\"193\":1},\"1\":{\"48\":1,\"69\":1,\"80\":1,\"89\":1,\"142\":5,\"147\":1,\"151\":1,\"193\":1,\"212\":1,\"305\":1,\"312\":1,\"314\":1,\"316\":1,\"326\":2}}],[\"according\",{\"0\":{\"46\":1},\"1\":{\"48\":1,\"69\":1,\"70\":1,\"81\":2,\"82\":1,\"91\":1,\"97\":1,\"104\":3,\"107\":1,\"113\":1,\"116\":1,\"118\":1,\"120\":1,\"122\":1,\"123\":1,\"125\":1,\"156\":1,\"162\":1,\"164\":1,\"171\":1,\"172\":1,\"175\":1,\"177\":1,\"179\":1,\"183\":1,\"185\":1,\"205\":1,\"207\":1,\"209\":1,\"217\":1,\"226\":1,\"235\":1,\"242\":1,\"317\":1}}],[\"accountcontroller\",{\"1\":{\"280\":1}}],[\"accountservice\",{\"1\":{\"270\":2}}],[\"accounts\",{\"1\":{\"254\":1}}],[\"account\",{\"1\":{\"32\":1,\"46\":2,\"252\":1,\"254\":1,\"270\":1,\"280\":2}}],[\"accidental\",{\"1\":{\"32\":1}}],[\"actuator<\",{\"1\":{\"315\":1}}],[\"actuator\",{\"1\":{\"57\":1,\"164\":1}}],[\"actually\",{\"1\":{\"40\":1,\"85\":1,\"97\":1,\"100\":1,\"123\":1,\"135\":1,\"214\":1,\"235\":1}}],[\"actual\",{\"1\":{\"8\":1,\"105\":2,\"123\":1,\"128\":1,\"182\":1,\"185\":1,\"210\":1,\"214\":1,\"254\":1}}],[\"actives=\",{\"1\":{\"270\":1}}],[\"actively\",{\"1\":{\"99\":1,\"164\":2,\"176\":1,\"178\":1}}],[\"activate\",{\"1\":{\"241\":1,\"242\":1}}],[\"activity\",{\"0\":{\"11\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":1,\"22\":1,\"24\":1,\"25\":1,\"176\":1},\"1\":{\"16\":1,\"20\":1,\"23\":1,\"81\":1,\"173\":1,\"175\":2}}],[\"activities\",{\"1\":{\"6\":1,\"254\":1}}],[\"actions\",{\"1\":{\"179\":1}}],[\"action\",{\"1\":{\"39\":1,\"100\":1,\"179\":2,\"182\":1}}],[\"acts\",{\"1\":{\"7\":1,\"132\":1,\"156\":1}}],[\"aop\",{\"1\":{\"29\":2,\"31\":1,\"32\":1,\"36\":1,\"43\":1}}],[\"arabic\",{\"1\":{\"293\":1}}],[\"archive\",{\"1\":{\"253\":1}}],[\"architecture\",{\"0\":{\"272\":1,\"273\":1,\"284\":1,\"313\":1,\"316\":1},\"1\":{\"25\":2,\"212\":1,\"281\":1,\"283\":1,\"284\":2,\"287\":1,\"290\":2,\"308\":1,\"309\":1,\"312\":1,\"319\":1,\"320\":1}}],[\"archaius\",{\"1\":{\"217\":1}}],[\"argument\",{\"1\":{\"242\":1,\"292\":1}}],[\"arg\",{\"1\":{\"241\":6}}],[\"argv\",{\"1\":{\"200\":5}}],[\"args\",{\"1\":{\"122\":1,\"123\":1,\"129\":2,\"156\":1,\"200\":1,\"234\":4,\"241\":3,\"242\":14,\"327\":2}}],[\"around\",{\"1\":{\"100\":1}}],[\"arrayutil\",{\"1\":{\"293\":1}}],[\"arrayutils\",{\"1\":{\"105\":1}}],[\"arraylist\",{\"1\":{\"207\":3}}],[\"arraylist<handlermapping>\",{\"1\":{\"207\":1}}],[\"arraylist<long>\",{\"1\":{\"197\":1}}],[\"arraylist<>\",{\"1\":{\"111\":1,\"156\":1,\"165\":2,\"166\":1}}],[\"arrays\",{\"1\":{\"105\":1,\"147\":1,\"197\":2}}],[\"array\",{\"1\":{\"48\":1}}],[\"artificial\",{\"1\":{\"247\":1}}],[\"artifactid>\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3,\"59\":1,\"86\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":2,\"203\":1,\"217\":1,\"218\":1,\"228\":5,\"230\":1,\"279\":3,\"315\":4,\"316\":4,\"323\":2,\"326\":2}}],[\"articles\",{\"1\":{\"164\":1}}],[\"article\",{\"1\":{\"29\":1,\"48\":3,\"80\":1,\"106\":1,\"110\":1,\"159\":3,\"164\":1,\"179\":3,\"180\":1,\"182\":1,\"187\":1,\"209\":2,\"212\":1,\"235\":1,\"252\":1}}],[\"arises\",{\"1\":{\"37\":1}}],[\"arise\",{\"0\":{\"37\":1,\"38\":1}}],[\"areas\",{\"1\":{\"28\":1}}],[\"area\",{\"1\":{\"16\":1}}],[\"are\",{\"0\":{\"98\":1,\"307\":1,\"310\":1,\"318\":1},\"1\":{\"16\":1,\"29\":1,\"31\":1,\"32\":1,\"35\":1,\"38\":1,\"40\":1,\"43\":1,\"48\":4,\"69\":2,\"70\":2,\"72\":1,\"74\":1,\"78\":1,\"80\":3,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":3,\"87\":2,\"90\":4,\"91\":1,\"92\":1,\"97\":1,\"98\":3,\"99\":1,\"101\":2,\"104\":3,\"107\":1,\"110\":3,\"112\":5,\"113\":2,\"118\":2,\"119\":1,\"120\":2,\"122\":1,\"124\":2,\"126\":1,\"129\":1,\"134\":1,\"151\":2,\"164\":1,\"169\":1,\"171\":1,\"173\":1,\"174\":1,\"177\":3,\"179\":23,\"180\":1,\"182\":3,\"183\":2,\"184\":1,\"187\":1,\"189\":2,\"192\":1,\"195\":2,\"197\":1,\"198\":1,\"199\":2,\"200\":1,\"201\":1,\"206\":1,\"207\":2,\"209\":1,\"210\":4,\"211\":3,\"212\":3,\"213\":6,\"214\":5,\"231\":1,\"234\":1,\"236\":1,\"248\":2,\"254\":1,\"256\":1,\"276\":2,\"278\":1,\"295\":1,\"298\":1,\"302\":1,\"306\":2,\"307\":1,\"308\":2,\"309\":3,\"316\":2,\"317\":1,\"318\":1,\"319\":2,\"320\":3,\"321\":9,\"328\":1}}],[\"adimistration\",{\"0\":{\"308\":1,\"319\":1}}],[\"adheres\",{\"1\":{\"286\":1}}],[\"adhering\",{\"1\":{\"275\":1}}],[\"adjustment\",{\"1\":{\"281\":1,\"284\":1}}],[\"adjusted\",{\"1\":{\"272\":1}}],[\"adjust\",{\"0\":{\"284\":1},\"1\":{\"214\":1,\"328\":1}}],[\"adapter\",{\"1\":{\"328\":1}}],[\"adapterbeans\",{\"1\":{\"207\":2}}],[\"adaptive\",{\"1\":{\"212\":1}}],[\"adriver\",{\"1\":{\"127\":3}}],[\"ado\",{\"1\":{\"48\":1,\"72\":1}}],[\"adminsoul\",{\"1\":{\"164\":1}}],[\"adminurl\",{\"1\":{\"59\":1}}],[\"admin\",{\"0\":{\"47\":1,\"56\":1,\"153\":1,\"159\":2,\"160\":1,\"165\":1,\"229\":1,\"314\":1},\"1\":{\"48\":10,\"56\":3,\"57\":1,\"68\":2,\"77\":1,\"78\":1,\"106\":4,\"108\":1,\"116\":1,\"154\":2,\"155\":1,\"156\":8,\"157\":1,\"159\":3,\"160\":2,\"162\":2,\"164\":12,\"165\":3,\"178\":1,\"202\":2,\"218\":3,\"224\":1,\"229\":1,\"230\":2,\"249\":1,\"274\":1,\"297\":1,\"300\":1,\"308\":1,\"312\":1,\"314\":4,\"315\":1,\"316\":1,\"317\":2,\"319\":1,\"328\":1}}],[\"administrator\",{\"1\":{\"16\":1}}],[\"adds\",{\"1\":{\"166\":1,\"252\":1,\"293\":6}}],[\"addsubscribepath\",{\"1\":{\"162\":3}}],[\"addpath\",{\"1\":{\"162\":2}}],[\"addimg\",{\"1\":{\"293\":1}}],[\"addifabsent\",{\"1\":{\"126\":1}}],[\"adding\",{\"0\":{\"148\":1},\"1\":{\"121\":1,\"124\":1}}],[\"additional\",{\"1\":{\"281\":1}}],[\"addition\",{\"1\":{\"48\":1,\"100\":1,\"131\":1}}],[\"addall\",{\"1\":{\"92\":1,\"184\":1,\"197\":1}}],[\"adddivideupstream\",{\"1\":{\"79\":5,\"81\":6}}],[\"added\",{\"0\":{\"144\":1},\"1\":{\"48\":1,\"100\":1,\"101\":1,\"114\":1,\"162\":1,\"164\":1,\"192\":1,\"202\":1,\"211\":1,\"268\":1,\"270\":2,\"272\":1,\"280\":1,\"284\":7,\"285\":3,\"292\":2,\"293\":4,\"294\":1,\"322\":2}}],[\"add\",{\"0\":{\"145\":1,\"147\":1,\"192\":1},\"1\":{\"39\":1,\"46\":3,\"48\":1,\"58\":1,\"59\":1,\"79\":1,\"80\":1,\"81\":1,\"83\":2,\"92\":2,\"100\":4,\"113\":1,\"114\":1,\"121\":2,\"146\":2,\"147\":1,\"165\":1,\"166\":1,\"175\":1,\"192\":2,\"203\":1,\"207\":1,\"212\":1,\"214\":2,\"218\":1,\"220\":1,\"237\":1,\"275\":2,\"277\":3,\"280\":3,\"293\":8,\"300\":1,\"308\":1,\"309\":1,\"312\":2,\"315\":2,\"316\":5,\"319\":1,\"320\":1,\"326\":1,\"327\":1}}],[\"addresshash\",{\"1\":{\"89\":2}}],[\"addresses\",{\"1\":{\"74\":1,\"183\":1}}],[\"address\",{\"1\":{\"28\":1,\"48\":3,\"72\":1,\"73\":1,\"82\":1,\"89\":5,\"179\":2,\"180\":1,\"183\":5,\"184\":2,\"185\":1,\"201\":1,\"229\":1,\"315\":1}}],[\"adventure\",{\"0\":{\"179\":1}}],[\"advertisement\",{\"1\":{\"28\":1}}],[\"advantage\",{\"1\":{\"124\":1}}],[\"advance\",{\"1\":{\"16\":1}}],[\"aslist\",{\"1\":{\"197\":2}}],[\"aside\",{\"1\":{\"100\":1}}],[\"ashttpheaders\",{\"1\":{\"93\":1,\"185\":1}}],[\"assignments\",{\"1\":{\"254\":1}}],[\"assign\",{\"1\":{\"221\":1}}],[\"assigned\",{\"1\":{\"219\":1,\"249\":1}}],[\"assist\",{\"1\":{\"7\":1}}],[\"assets\",{\"1\":{\"290\":1}}],[\"assemble\",{\"1\":{\"179\":1,\"183\":1}}],[\"assembly\",{\"1\":{\"93\":1}}],[\"assert\",{\"1\":{\"151\":1,\"183\":1,\"184\":1,\"214\":1,\"221\":1,\"236\":2}}],[\"associated\",{\"1\":{\"130\":1,\"328\":2}}],[\"assuming\",{\"1\":{\"91\":1}}],[\"asyncrepository\",{\"1\":{\"280\":1}}],[\"async\",{\"1\":{\"241\":1,\"242\":1}}],[\"asynccontext\",{\"1\":{\"100\":12,\"101\":1}}],[\"asynctimeoutfuture\",{\"1\":{\"100\":4}}],[\"asyncthreads\",{\"1\":{\"33\":3}}],[\"asynchronously\",{\"0\":{\"32\":1},\"1\":{\"32\":1,\"36\":1,\"92\":1}}],[\"asynchronous\",{\"0\":{\"34\":1,\"35\":1,\"36\":1,\"41\":1},\"1\":{\"29\":3,\"33\":2,\"92\":2,\"236\":1,\"237\":1,\"276\":1}}],[\"as\",{\"0\":{\"143\":1},\"1\":{\"29\":2,\"30\":2,\"31\":1,\"33\":6,\"43\":2,\"48\":2,\"54\":1,\"57\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"69\":3,\"71\":2,\"72\":1,\"77\":1,\"81\":1,\"83\":1,\"86\":1,\"87\":4,\"88\":1,\"89\":2,\"91\":2,\"97\":1,\"98\":1,\"101\":1,\"105\":2,\"113\":2,\"114\":1,\"116\":2,\"117\":4,\"118\":4,\"119\":1,\"124\":2,\"126\":1,\"133\":2,\"134\":1,\"135\":2,\"137\":1,\"138\":1,\"139\":9,\"151\":1,\"156\":2,\"164\":1,\"165\":1,\"173\":1,\"177\":2,\"179\":5,\"180\":1,\"182\":2,\"183\":3,\"184\":1,\"185\":1,\"195\":2,\"197\":1,\"199\":1,\"201\":1,\"204\":1,\"207\":1,\"210\":2,\"211\":1,\"212\":7,\"213\":2,\"214\":5,\"218\":1,\"219\":1,\"221\":2,\"226\":1,\"235\":1,\"253\":2,\"254\":2,\"274\":2,\"280\":3,\"285\":2,\"303\":1,\"306\":1,\"308\":2,\"312\":2,\"317\":1,\"319\":2,\"321\":6,\"322\":2,\"324\":2,\"326\":1}}],[\"aspects\",{\"0\":{\"41\":1},\"1\":{\"328\":1}}],[\"aspectj\",{\"1\":{\"36\":1,\"43\":1}}],[\"aspect\",{\"1\":{\"29\":2,\"31\":1,\"32\":1,\"33\":2,\"36\":1,\"43\":2,\"91\":1}}],[\"ask\",{\"1\":{\"16\":1}}],[\"amazon\",{\"1\":{\"322\":2}}],[\"amiron\",{\"1\":{\"256\":1}}],[\"amount\",{\"1\":{\"211\":1,\"214\":1,\"256\":1,\"309\":1,\"320\":1}}],[\"among\",{\"1\":{\"40\":2}}],[\"amp\",{\"1\":{\"33\":1,\"43\":1,\"46\":1}}],[\"am\",{\"1\":{\"16\":1}}],[\"abc\",{\"1\":{\"326\":1,\"329\":4}}],[\"able\",{\"1\":{\"308\":1,\"319\":1}}],[\"absvalueparser\",{\"1\":{\"292\":1}}],[\"absorbed\",{\"1\":{\"272\":1}}],[\"absolute\",{\"1\":{\"248\":1}}],[\"abstractmatchstrategy\",{\"1\":{\"182\":1}}],[\"abstractdatahandler<plugindata>\",{\"1\":{\"118\":1}}],[\"abstractdatahandler<t>\",{\"1\":{\"118\":1}}],[\"abstractdatahandler\",{\"1\":{\"117\":1,\"118\":2}}],[\"abstractdata\",{\"1\":{\"97\":2,\"104\":1}}],[\"abstractdatachangedlistener\",{\"1\":{\"48\":5,\"97\":2,\"100\":1}}],[\"abstracts\",{\"1\":{\"85\":1}}],[\"abstractsoulplugin\",{\"0\":{\"85\":1,\"182\":1},\"1\":{\"61\":2,\"64\":12,\"85\":1,\"87\":1,\"172\":2,\"182\":4,\"197\":2,\"214\":1,\"221\":1}}],[\"abstract\",{\"1\":{\"84\":2,\"97\":1,\"118\":2,\"182\":1,\"292\":1}}],[\"abstractplugin\",{\"1\":{\"84\":1}}],[\"abnormal\",{\"1\":{\"212\":10,\"213\":3,\"274\":1,\"276\":2}}],[\"abortpolicy\",{\"1\":{\"35\":1,\"36\":1}}],[\"above\",{\"0\":{\"255\":1},\"1\":{\"33\":2,\"48\":3,\"72\":1,\"126\":1,\"164\":1,\"173\":1,\"177\":1,\"182\":2,\"183\":2,\"185\":1,\"195\":2,\"197\":1,\"199\":1,\"211\":1,\"212\":1,\"213\":1,\"235\":1,\"242\":1,\"243\":1,\"269\":1,\"306\":1,\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"about\",{\"0\":{\"0\":1},\"1\":{\"43\":1,\"80\":1,\"98\":1,\"99\":1,\"122\":1,\"124\":1,\"207\":1,\"212\":3,\"280\":1,\"281\":2,\"286\":1,\"288\":1,\"305\":1}}],[\"abruptly\",{\"1\":{\"32\":1}}],[\"ability\",{\"1\":{\"14\":1,\"69\":1,\"322\":1}}],[\"attacked\",{\"1\":{\"309\":1,\"320\":1}}],[\"attachment\",{\"1\":{\"241\":1}}],[\"attitude\",{\"1\":{\"253\":1,\"321\":1}}],[\"attempting\",{\"0\":{\"289\":1}}],[\"attempt\",{\"1\":{\"155\":1}}],[\"attention\",{\"0\":{\"307\":1,\"318\":1},\"1\":{\"48\":1,\"210\":1,\"324\":2,\"326\":1}}],[\"attract\",{\"1\":{\"256\":1}}],[\"attr\",{\"1\":{\"93\":1,\"184\":1,\"185\":1}}],[\"attributes\",{\"1\":{\"92\":1,\"180\":2,\"237\":1,\"293\":1,\"328\":1}}],[\"attribute\",{\"1\":{\"43\":1,\"72\":1,\"86\":1,\"123\":1,\"236\":2}}],[\"atomicinteger\",{\"1\":{\"35\":3}}],[\"atomic\",{\"1\":{\"35\":1}}],[\"at\",{\"0\":{\"79\":1,\"82\":1,\"98\":1,\"196\":1,\"288\":1,\"311\":1},\"1\":{\"8\":1,\"16\":1,\"28\":1,\"48\":6,\"73\":1,\"74\":1,\"77\":1,\"81\":1,\"82\":1,\"83\":2,\"88\":1,\"91\":1,\"92\":1,\"97\":1,\"98\":3,\"100\":3,\"101\":2,\"103\":2,\"105\":2,\"110\":1,\"112\":1,\"113\":1,\"114\":1,\"120\":4,\"121\":1,\"122\":4,\"123\":1,\"124\":1,\"129\":2,\"132\":1,\"133\":1,\"164\":16,\"172\":1,\"173\":2,\"175\":1,\"177\":1,\"179\":2,\"181\":1,\"182\":2,\"184\":1,\"185\":1,\"191\":1,\"192\":1,\"200\":1,\"207\":1,\"211\":3,\"212\":1,\"213\":1,\"214\":2,\"219\":2,\"220\":1,\"230\":1,\"250\":1,\"254\":1,\"275\":1,\"283\":1,\"288\":1,\"308\":1,\"309\":2,\"312\":1,\"319\":1,\"320\":2,\"321\":4}}],[\"anonymous\",{\"1\":{\"256\":1}}],[\"another\",{\"0\":{\"38\":1},\"1\":{\"48\":2,\"86\":1,\"92\":2,\"100\":2,\"104\":1,\"110\":1,\"184\":1,\"210\":1,\"211\":1,\"253\":1,\"308\":1,\"319\":1}}],[\"angle\",{\"1\":{\"211\":1,\"214\":1}}],[\"animal\",{\"1\":{\"122\":15,\"123\":5}}],[\"analyses\",{\"1\":{\"129\":1}}],[\"analysis\",{\"0\":{\"47\":1,\"48\":1,\"84\":1,\"94\":1,\"102\":1,\"106\":1,\"139\":1,\"150\":1,\"156\":1,\"200\":1},\"1\":{\"22\":2,\"25\":1,\"48\":5,\"80\":1,\"83\":2,\"85\":2,\"96\":2,\"100\":1,\"101\":1,\"103\":1,\"208\":1,\"243\":1}}],[\"analyzes\",{\"1\":{\"164\":1,\"209\":1}}],[\"analyzed\",{\"1\":{\"48\":5,\"81\":2,\"83\":1,\"100\":2,\"104\":2,\"105\":2,\"106\":1,\"187\":1}}],[\"analyze\",{\"1\":{\"48\":1,\"83\":1,\"86\":1,\"87\":2,\"101\":1,\"106\":1,\"110\":1,\"120\":1,\"122\":1,\"159\":1,\"164\":1}}],[\"analyzing\",{\"1\":{\"48\":1,\"100\":1,\"101\":1,\"120\":1,\"131\":1,\"159\":1}}],[\"announcements\",{\"1\":{\"253\":1}}],[\"announcement\",{\"1\":{\"252\":1}}],[\"annotated\",{\"1\":{\"156\":2}}],[\"annotate\",{\"1\":{\"46\":1}}],[\"annotationutil\",{\"1\":{\"293\":1}}],[\"annotations\",{\"1\":{\"230\":1,\"276\":2,\"285\":1}}],[\"annotationawareordercomparator\",{\"1\":{\"207\":3}}],[\"annotation<\",{\"1\":{\"43\":1,\"279\":1}}],[\"annotation\",{\"1\":{\"33\":1,\"35\":1,\"36\":1,\"59\":1,\"112\":1,\"114\":1,\"130\":2,\"139\":6,\"156\":1,\"164\":1,\"277\":1,\"280\":2,\"285\":1,\"327\":1}}],[\"annual\",{\"1\":{\"28\":1}}],[\"an\",{\"0\":{\"38\":1,\"41\":1,\"59\":1,\"143\":1},\"1\":{\"29\":2,\"30\":2,\"31\":1,\"33\":1,\"36\":1,\"37\":1,\"38\":1,\"70\":1,\"80\":2,\"84\":3,\"86\":2,\"92\":1,\"97\":3,\"99\":1,\"101\":2,\"109\":1,\"110\":3,\"113\":1,\"117\":2,\"121\":3,\"124\":2,\"135\":1,\"138\":1,\"139\":1,\"147\":1,\"156\":3,\"162\":1,\"171\":1,\"172\":1,\"179\":3,\"180\":1,\"182\":2,\"183\":1,\"184\":1,\"185\":1,\"195\":1,\"197\":1,\"200\":1,\"210\":1,\"212\":2,\"214\":6,\"217\":1,\"231\":1,\"236\":1,\"252\":1,\"308\":1,\"309\":4,\"312\":1,\"315\":1,\"319\":1,\"320\":4,\"321\":3,\"322\":1,\"326\":1}}],[\"answered\",{\"1\":{\"124\":1}}],[\"answer\",{\"1\":{\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"37\":1,\"38\":1,\"183\":1,\"195\":1}}],[\"anything\",{\"1\":{\"7\":1,\"256\":1}}],[\"any\",{\"1\":{\"7\":1,\"46\":1,\"69\":1,\"99\":1,\"101\":2,\"189\":1,\"214\":1,\"317\":1}}],[\"and\",{\"0\":{\"15\":1,\"17\":1,\"31\":1,\"36\":1,\"84\":1,\"95\":1,\"103\":1,\"115\":1,\"146\":1,\"153\":2,\"159\":1,\"160\":1,\"161\":1,\"195\":1,\"254\":1,\"269\":1,\"285\":1,\"300\":1,\"307\":1,\"313\":2,\"318\":1},\"1\":{\"2\":1,\"4\":4,\"6\":4,\"7\":2,\"8\":2,\"9\":2,\"14\":1,\"15\":3,\"16\":1,\"22\":4,\"25\":3,\"28\":4,\"29\":3,\"30\":2,\"31\":1,\"33\":8,\"34\":3,\"38\":1,\"40\":1,\"42\":1,\"46\":3,\"48\":22,\"56\":4,\"57\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":2,\"65\":3,\"68\":1,\"69\":11,\"70\":6,\"72\":4,\"74\":4,\"78\":2,\"80\":8,\"81\":5,\"82\":5,\"83\":8,\"84\":1,\"85\":4,\"86\":4,\"87\":9,\"89\":1,\"90\":3,\"91\":7,\"92\":5,\"96\":1,\"97\":3,\"98\":1,\"99\":3,\"100\":7,\"101\":7,\"103\":2,\"104\":10,\"105\":7,\"106\":3,\"107\":1,\"108\":1,\"109\":1,\"110\":4,\"112\":6,\"113\":4,\"114\":2,\"116\":2,\"117\":4,\"118\":2,\"119\":2,\"120\":2,\"121\":6,\"122\":4,\"123\":7,\"124\":3,\"126\":1,\"128\":3,\"129\":2,\"131\":1,\"132\":1,\"135\":1,\"136\":2,\"137\":1,\"139\":2,\"141\":1,\"142\":2,\"151\":1,\"156\":6,\"157\":1,\"159\":4,\"161\":4,\"162\":5,\"164\":11,\"165\":6,\"166\":2,\"169\":2,\"171\":3,\"172\":8,\"173\":3,\"174\":1,\"175\":3,\"176\":3,\"177\":7,\"179\":6,\"180\":4,\"181\":1,\"182\":4,\"183\":5,\"184\":2,\"185\":7,\"187\":3,\"189\":1,\"192\":2,\"195\":4,\"197\":3,\"199\":2,\"200\":5,\"201\":3,\"202\":2,\"204\":1,\"207\":2,\"208\":1,\"209\":6,\"210\":5,\"211\":6,\"212\":19,\"213\":8,\"214\":17,\"217\":1,\"218\":2,\"219\":2,\"220\":2,\"221\":2,\"222\":2,\"225\":7,\"226\":5,\"229\":1,\"230\":3,\"231\":3,\"232\":1,\"234\":2,\"235\":1,\"236\":2,\"237\":3,\"240\":2,\"241\":2,\"242\":7,\"243\":3,\"247\":5,\"249\":3,\"250\":1,\"251\":1,\"252\":2,\"253\":6,\"254\":12,\"256\":3,\"268\":1,\"269\":2,\"271\":1,\"272\":3,\"274\":2,\"275\":5,\"276\":3,\"280\":5,\"281\":2,\"282\":3,\"283\":3,\"284\":1,\"285\":1,\"286\":2,\"288\":2,\"289\":1,\"290\":5,\"292\":6,\"293\":3,\"294\":3,\"295\":2,\"298\":1,\"299\":2,\"302\":2,\"303\":1,\"304\":2,\"305\":1,\"306\":2,\"308\":4,\"310\":1,\"312\":7,\"314\":2,\"317\":9,\"319\":4,\"321\":11,\"322\":3,\"323\":1,\"324\":1,\"325\":1,\"328\":6}}],[\"apollo\",{\"1\":{\"275\":1,\"280\":3,\"284\":1,\"285\":1}}],[\"apachdubboplugin\",{\"0\":{\"236\":1},\"1\":{\"224\":1}}],[\"apachedubboproxyservice\",{\"0\":{\"237\":1}}],[\"apachedubboproxyserivce\",{\"1\":{\"224\":1}}],[\"apachedubboplugin\",{\"1\":{\"235\":1}}],[\"apache\",{\"0\":{\"223\":1,\"225\":1,\"227\":1,\"231\":1,\"241\":1},\"1\":{\"40\":1,\"57\":1,\"87\":2,\"121\":1,\"130\":3,\"155\":11,\"224\":3,\"225\":1,\"228\":5,\"230\":3,\"235\":1,\"287\":2,\"312\":1,\"316\":4,\"321\":4}}],[\"appid\",{\"1\":{\"280\":1}}],[\"applying\",{\"1\":{\"253\":1}}],[\"apply\",{\"1\":{\"253\":1}}],[\"applicationconfigcache\",{\"1\":{\"237\":3}}],[\"applicationconfig\",{\"1\":{\"232\":1}}],[\"applicationcontext\",{\"1\":{\"111\":7,\"156\":7,\"164\":1,\"165\":1,\"207\":1}}],[\"applicationlistener<datachangedevent>\",{\"1\":{\"97\":1,\"111\":1,\"156\":1}}],[\"applicationeventpublisher\",{\"1\":{\"80\":1,\"156\":1}}],[\"applicationname\",{\"1\":{\"43\":1}}],[\"application\",{\"1\":{\"4\":1,\"8\":1,\"31\":1,\"43\":1,\"48\":1,\"59\":1,\"105\":1,\"154\":2,\"164\":4,\"211\":1,\"226\":1,\"247\":1,\"253\":2,\"315\":1,\"326\":1}}],[\"appkey\",{\"0\":{\"145\":1},\"1\":{\"149\":1,\"180\":1}}],[\"appclassloader\",{\"1\":{\"123\":1}}],[\"appauthservice\",{\"1\":{\"156\":1}}],[\"appauthdata\",{\"1\":{\"151\":4}}],[\"appauthdatalist\",{\"1\":{\"113\":2}}],[\"appauthdatarefresh\",{\"1\":{\"104\":1}}],[\"appauth\",{\"1\":{\"112\":2}}],[\"appname\",{\"1\":{\"59\":1,\"72\":1,\"80\":4,\"280\":4}}],[\"append\",{\"1\":{\"104\":4}}],[\"appenders\",{\"1\":{\"57\":1}}],[\"appeared\",{\"1\":{\"297\":1}}],[\"appear\",{\"1\":{\"74\":1,\"113\":1}}],[\"appears\",{\"1\":{\"30\":1}}],[\"app\",{\"1\":{\"48\":3,\"97\":1,\"104\":1,\"110\":1,\"111\":1,\"113\":2,\"117\":1,\"156\":2}}],[\"approach\",{\"1\":{\"30\":1,\"33\":1,\"182\":1}}],[\"approved\",{\"1\":{\"8\":1,\"247\":1,\"253\":1}}],[\"apis即可展示当前控制器中的所有\",{\"1\":{\"264\":1}}],[\"apis\",{\"0\":{\"264\":1},\"1\":{\"260\":1}}],[\"api\",{\"0\":{\"232\":1,\"263\":1},\"1\":{\"4\":2,\"43\":1,\"49\":1,\"87\":1,\"101\":1,\"164\":2,\"224\":1,\"231\":1,\"232\":1,\"260\":9,\"261\":2,\"264\":1,\"270\":1}}],[\"a\",{\"0\":{\"32\":1,\"35\":1,\"37\":1,\"79\":1,\"82\":1,\"117\":1,\"122\":1,\"189\":1,\"270\":1,\"313\":1},\"1\":{\"4\":2,\"8\":3,\"9\":1,\"16\":2,\"22\":1,\"28\":1,\"29\":4,\"30\":5,\"31\":2,\"33\":5,\"36\":1,\"37\":1,\"38\":2,\"39\":1,\"40\":2,\"43\":3,\"48\":34,\"49\":1,\"57\":1,\"69\":4,\"70\":2,\"71\":1,\"72\":3,\"77\":1,\"81\":1,\"82\":1,\"84\":2,\"85\":4,\"86\":5,\"87\":2,\"88\":1,\"89\":2,\"91\":8,\"92\":2,\"97\":4,\"98\":2,\"99\":3,\"100\":5,\"101\":5,\"104\":3,\"105\":8,\"108\":1,\"114\":2,\"119\":1,\"120\":10,\"121\":6,\"122\":5,\"123\":3,\"124\":5,\"126\":2,\"127\":2,\"128\":1,\"129\":2,\"130\":1,\"131\":2,\"132\":2,\"133\":2,\"136\":1,\"139\":2,\"147\":1,\"151\":1,\"156\":5,\"160\":1,\"161\":1,\"162\":1,\"164\":6,\"165\":2,\"172\":1,\"173\":1,\"177\":4,\"178\":3,\"179\":9,\"180\":4,\"181\":1,\"182\":4,\"184\":1,\"185\":1,\"189\":1,\"191\":1,\"195\":4,\"197\":2,\"199\":5,\"201\":2,\"204\":2,\"205\":1,\"207\":2,\"210\":2,\"211\":13,\"212\":11,\"213\":1,\"214\":7,\"217\":3,\"218\":3,\"221\":1,\"225\":1,\"226\":4,\"230\":1,\"231\":1,\"235\":2,\"236\":1,\"241\":3,\"242\":2,\"247\":1,\"252\":1,\"253\":3,\"254\":4,\"256\":2,\"275\":1,\"280\":2,\"283\":2,\"284\":1,\"289\":1,\"290\":7,\"302\":2,\"304\":1,\"305\":5,\"306\":1,\"308\":5,\"309\":5,\"312\":1,\"316\":4,\"317\":1,\"319\":5,\"320\":5,\"321\":5,\"328\":2}}],[\"sdk\",{\"1\":{\"326\":3}}],[\"s3\",{\"1\":{\"322\":3}}],[\"sftp\",{\"1\":{\"322\":1}}],[\"sneakythrows\",{\"1\":{\"165\":1,\"166\":1}}],[\"smooth\",{\"1\":{\"164\":1}}],[\"smallest\",{\"1\":{\"198\":1}}],[\"smaller\",{\"1\":{\"70\":1,\"179\":1}}],[\"small\",{\"1\":{\"91\":2,\"212\":1,\"289\":1,\"290\":1,\"321\":1}}],[\"sk\",{\"0\":{\"142\":1},\"1\":{\"142\":2}}],[\"skipped\",{\"0\":{\"139\":1},\"1\":{\"84\":1,\"86\":1,\"100\":1,\"179\":13,\"235\":1}}],[\"skip\",{\"1\":{\"84\":1,\"85\":1,\"86\":3,\"120\":1,\"179\":3,\"235\":3}}],[\"skip=true\",{\"1\":{\"54\":4}}],[\"skills\",{\"1\":{\"15\":1}}],[\"src\",{\"1\":{\"130\":1,\"154\":2,\"164\":2}}],[\"sqlsever\",{\"1\":{\"285\":1}}],[\"sqlparser\",{\"1\":{\"284\":1}}],[\"sqlexception\",{\"1\":{\"126\":3,\"127\":5}}],[\"sql\",{\"1\":{\"126\":4,\"127\":3,\"128\":1,\"284\":2,\"287\":2,\"333\":1,\"334\":1}}],[\"svc\",{\"1\":{\"123\":2}}],[\"swap\",{\"0\":{\"316\":1},\"1\":{\"312\":1}}],[\"switch\",{\"1\":{\"97\":1,\"111\":1,\"113\":1,\"118\":1,\"156\":1,\"165\":2,\"174\":3,\"213\":1,\"214\":1,\"229\":1,\"303\":1}}],[\"switched\",{\"1\":{\"96\":1}}],[\"switching\",{\"1\":{\"96\":3,\"276\":1}}],[\"switchifempty\",{\"1\":{\"92\":1,\"207\":1}}],[\"sweet\",{\"1\":{\"4\":1}}],[\"slow\",{\"1\":{\"212\":1,\"213\":3}}],[\"slowly\",{\"1\":{\"211\":1}}],[\"slowed\",{\"1\":{\"210\":1}}],[\"slidingwindowtype\",{\"1\":{\"218\":1}}],[\"slidingwindowsize\",{\"1\":{\"218\":1}}],[\"sliding\",{\"1\":{\"189\":1,\"218\":2,\"219\":2}}],[\"slightly\",{\"1\":{\"65\":1,\"210\":1}}],[\"sleep\",{\"1\":{\"104\":1,\"105\":2,\"220\":2}}],[\"slf4j\",{\"1\":{\"100\":1,\"114\":1,\"117\":1,\"166\":1}}],[\"slander\",{\"1\":{\"7\":1}}],[\"sax\",{\"1\":{\"294\":1}}],[\"sakila\",{\"1\":{\"256\":1}}],[\"sasl\",{\"1\":{\"155\":1}}],[\"said\",{\"1\":{\"132\":1}}],[\"saw\",{\"1\":{\"120\":1,\"164\":1}}],[\"saving\",{\"1\":{\"48\":2}}],[\"save\",{\"1\":{\"39\":2,\"328\":2,\"329\":2}}],[\"saved\",{\"1\":{\"32\":1,\"48\":1,\"328\":1}}],[\"savespringmvcmetadata\",{\"1\":{\"78\":1}}],[\"saves\",{\"0\":{\"32\":1},\"1\":{\"29\":1}}],[\"sameweight\",{\"1\":{\"90\":4,\"177\":2}}],[\"same\",{\"1\":{\"40\":1,\"43\":1,\"48\":1,\"72\":2,\"89\":4,\"90\":5,\"104\":1,\"105\":1,\"118\":1,\"119\":1,\"122\":1,\"124\":1,\"151\":1,\"164\":1,\"173\":3,\"212\":1,\"214\":3}}],[\"sayhello\",{\"1\":{\"280\":2}}],[\"saycancel\",{\"1\":{\"280\":4}}],[\"sayconfrim\",{\"1\":{\"280\":4}}],[\"say\",{\"1\":{\"30\":1,\"89\":1,\"121\":1,\"131\":1,\"280\":8,\"308\":1,\"319\":1}}],[\"scene\",{\"0\":{\"210\":1},\"1\":{\"311\":1}}],[\"scenes\",{\"0\":{\"204\":1}}],[\"scenario2\",{\"0\":{\"309\":1,\"320\":1}}],[\"scenario1\",{\"0\":{\"308\":1,\"319\":1}}],[\"scenarios\",{\"0\":{\"33\":1,\"307\":1,\"318\":1},\"1\":{\"32\":2,\"33\":7,\"201\":1,\"210\":1,\"274\":2}}],[\"scenario\",{\"1\":{\"29\":1,\"37\":1,\"38\":1,\"124\":1,\"184\":1,\"209\":1,\"210\":3,\"211\":3,\"212\":1}}],[\"scriptargs\",{\"0\":{\"199\":1},\"1\":{\"197\":2,\"199\":1}}],[\"script\",{\"0\":{\"199\":1},\"1\":{\"197\":3,\"199\":2}}],[\"screenshot\",{\"1\":{\"179\":1}}],[\"screening\",{\"1\":{\"69\":2,\"317\":1}}],[\"scheme\",{\"1\":{\"128\":1,\"217\":1,\"226\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"174\":1}}],[\"schedule\",{\"1\":{\"100\":2}}],[\"scheduler\",{\"1\":{\"86\":1,\"100\":7,\"235\":1}}],[\"scheduledinitdelay\",{\"1\":{\"280\":1}}],[\"scheduledphydeleteddelay\",{\"1\":{\"280\":1}}],[\"scheduledpool\",{\"1\":{\"43\":2}}],[\"scheduledcleandelay\",{\"1\":{\"280\":1}}],[\"scheduledrecoverydelay\",{\"1\":{\"280\":1}}],[\"scheduledtime\",{\"1\":{\"174\":2}}],[\"scheduledthreadpoolexecutor\",{\"1\":{\"174\":1}}],[\"scheduledthreadmax\",{\"1\":{\"33\":1,\"43\":2,\"46\":1,\"280\":1}}],[\"scheduledexecutorservice\",{\"1\":{\"100\":1}}],[\"scheduleddelay\",{\"1\":{\"33\":1,\"43\":3,\"46\":1}}],[\"scheduled\",{\"1\":{\"30\":1,\"174\":3,\"175\":2}}],[\"scheduling\",{\"1\":{\"37\":1,\"225\":1,\"317\":1}}],[\"scores\",{\"1\":{\"91\":2}}],[\"score\",{\"1\":{\"88\":1,\"89\":1,\"90\":1,\"91\":11}}],[\"scalability\",{\"1\":{\"225\":1}}],[\"scalable\",{\"1\":{\"4\":1}}],[\"scale\",{\"1\":{\"210\":1}}],[\"scan\",{\"1\":{\"43\":2}}],[\"sh1yu\",{\"1\":{\"332\":1}}],[\"shufan\",{\"1\":{\"322\":1}}],[\"shuaiqiyu\",{\"1\":{\"288\":1}}],[\"shutdown\",{\"1\":{\"35\":1}}],[\"shanghai\",{\"1\":{\"326\":1}}],[\"shallwetalk\",{\"1\":{\"256\":1}}],[\"shaking\",{\"1\":{\"212\":1}}],[\"shardingsphere\",{\"1\":{\"287\":1,\"321\":2}}],[\"shares\",{\"1\":{\"254\":1}}],[\"share\",{\"1\":{\"129\":1,\"312\":1}}],[\"shared\",{\"1\":{\"33\":1,\"180\":1}}],[\"sharing\",{\"0\":{\"20\":1,\"23\":1},\"1\":{\"16\":2,\"22\":1,\"25\":6}}],[\"sh\",{\"1\":{\"155\":1}}],[\"shell\",{\"1\":{\"92\":1}}],[\"shen\",{\"1\":{\"25\":1}}],[\"shouyun\",{\"1\":{\"322\":1}}],[\"shouldn\",{\"1\":{\"200\":1}}],[\"should\",{\"0\":{\"307\":1,\"318\":1},\"1\":{\"33\":4,\"97\":1,\"99\":1,\"128\":1,\"147\":2,\"205\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":4,\"226\":1,\"235\":1,\"290\":1,\"307\":1,\"315\":1,\"316\":4,\"318\":1,\"321\":4}}],[\"shortcomings\",{\"1\":{\"131\":1}}],[\"showapis\",{\"1\":{\"264\":1}}],[\"show\",{\"1\":{\"120\":1,\"260\":1,\"275\":1,\"286\":1}}],[\"shows\",{\"1\":{\"104\":1,\"105\":1,\"121\":1}}],[\"showing\",{\"1\":{\"88\":1}}],[\"shown\",{\"1\":{\"48\":2,\"72\":1,\"164\":1,\"165\":1,\"179\":1,\"195\":1,\"206\":1,\"212\":1,\"213\":1,\"214\":1,\"218\":1}}],[\"syncconnected\",{\"1\":{\"155\":2}}],[\"syncconfiguration\",{\"1\":{\"97\":1,\"116\":1,\"156\":1}}],[\"syncdata\",{\"1\":{\"117\":2,\"156\":3,\"161\":1}}],[\"syncdataserviceimpl\",{\"1\":{\"156\":2}}],[\"syncdataservice\",{\"1\":{\"104\":1,\"112\":3,\"114\":1,\"117\":1,\"156\":14,\"161\":3,\"164\":2,\"166\":1}}],[\"syncall\",{\"1\":{\"114\":1,\"156\":4}}],[\"sync\",{\"1\":{\"48\":2,\"57\":1,\"96\":2,\"97\":1,\"112\":6,\"116\":2,\"117\":5,\"119\":2,\"154\":4,\"155\":1,\"156\":5,\"161\":7,\"162\":2,\"164\":15,\"165\":1,\"166\":6,\"315\":3}}],[\"synchronously\",{\"1\":{\"162\":1}}],[\"synchronous\",{\"1\":{\"48\":1,\"100\":1,\"276\":1}}],[\"synchronizing\",{\"1\":{\"48\":1,\"68\":1,\"156\":1,\"159\":1,\"160\":1,\"166\":1}}],[\"synchronizes\",{\"1\":{\"48\":4,\"98\":1,\"156\":1,\"166\":1,\"230\":1,\"252\":1}}],[\"synchronized\",{\"1\":{\"48\":2,\"106\":1,\"126\":2,\"139\":2,\"159\":1,\"161\":1,\"164\":1,\"214\":1,\"226\":1,\"317\":1}}],[\"synchronize\",{\"0\":{\"114\":1,\"153\":1,\"159\":1,\"165\":1,\"166\":1},\"1\":{\"48\":1,\"106\":1,\"156\":3,\"157\":2,\"159\":1,\"164\":10,\"165\":5,\"166\":1}}],[\"synchronization\",{\"0\":{\"95\":1,\"98\":1,\"103\":1,\"106\":1,\"115\":1,\"152\":1,\"156\":1,\"158\":1,\"160\":1,\"164\":1,\"304\":1},\"1\":{\"25\":2,\"48\":4,\"68\":2,\"96\":1,\"97\":1,\"98\":2,\"100\":1,\"101\":1,\"104\":1,\"106\":2,\"112\":2,\"114\":1,\"155\":1,\"156\":1,\"157\":1,\"159\":1,\"161\":1,\"162\":1,\"164\":4,\"166\":1,\"173\":1,\"176\":1,\"178\":1,\"182\":1,\"195\":2,\"226\":1,\"300\":1,\"304\":1,\"312\":2,\"317\":1,\"321\":1}}],[\"systems\",{\"0\":{\"107\":1},\"1\":{\"106\":1,\"274\":2}}],[\"system\",{\"0\":{\"97\":1},\"1\":{\"16\":1,\"38\":1,\"56\":1,\"57\":1,\"68\":1,\"81\":1,\"82\":1,\"91\":1,\"97\":1,\"106\":2,\"121\":1,\"122\":5,\"123\":3,\"129\":2,\"130\":1,\"147\":1,\"174\":2,\"175\":1,\"179\":2,\"191\":1,\"210\":1,\"211\":5,\"212\":2,\"214\":1,\"280\":6,\"281\":1,\"293\":1,\"306\":2,\"308\":2,\"309\":1,\"319\":2,\"320\":1}}],[\"split\",{\"1\":{\"176\":3,\"308\":1,\"319\":1}}],[\"spent\",{\"1\":{\"290\":1}}],[\"speed\",{\"1\":{\"189\":1,\"211\":1}}],[\"special\",{\"1\":{\"293\":1}}],[\"specially\",{\"1\":{\"179\":1}}],[\"specify\",{\"1\":{\"121\":1,\"280\":1}}],[\"specifies\",{\"1\":{\"213\":1,\"214\":1}}],[\"specified\",{\"1\":{\"97\":1,\"156\":1,\"171\":1,\"214\":3,\"280\":1,\"328\":1}}],[\"specifics\",{\"1\":{\"306\":1}}],[\"specifications\",{\"1\":{\"123\":1,\"321\":1}}],[\"specification\",{\"1\":{\"122\":1,\"321\":1}}],[\"specifically\",{\"1\":{\"105\":1}}],[\"specific\",{\"1\":{\"85\":1,\"87\":1,\"88\":1,\"104\":1,\"120\":2,\"122\":1,\"131\":1,\"135\":1,\"136\":1,\"139\":1,\"165\":2,\"171\":1,\"172\":1,\"178\":1,\"180\":2,\"182\":3,\"187\":1,\"195\":1,\"197\":2,\"199\":2,\"206\":1,\"207\":2,\"212\":1,\"214\":1,\"240\":1}}],[\"speaking\",{\"1\":{\"72\":1,\"151\":1}}],[\"space\",{\"1\":{\"46\":1}}],[\"springfilestoragetestapplication\",{\"1\":{\"327\":2}}],[\"springframework\",{\"1\":{\"35\":3,\"36\":2,\"164\":8,\"315\":2}}],[\"spring<\",{\"1\":{\"323\":1,\"326\":1}}],[\"springdataredis\",{\"1\":{\"195\":1}}],[\"springapplication\",{\"1\":{\"164\":1,\"327\":1}}],[\"springbootapplication\",{\"1\":{\"327\":1}}],[\"springboot\",{\"1\":{\"156\":1,\"164\":5,\"166\":1,\"207\":1,\"312\":1,\"315\":1,\"321\":1,\"326\":2}}],[\"springbeanutils\",{\"1\":{\"40\":2,\"114\":1,\"221\":1}}],[\"springmvcregisterdto\",{\"1\":{\"78\":5,\"79\":1,\"81\":1,\"82\":1}}],[\"springmvc\",{\"1\":{\"77\":1,\"78\":2,\"83\":1,\"182\":1}}],[\"springmvcclientbeanpostprocessor\",{\"1\":{\"77\":2}}],[\"springmvc<\",{\"1\":{\"59\":1}}],[\"springcloudrulehandle\",{\"1\":{\"82\":1}}],[\"springcloud<\",{\"1\":{\"44\":1,\"46\":1}}],[\"springcloud\",{\"0\":{\"44\":1},\"1\":{\"87\":2,\"268\":2,\"269\":1,\"274\":1,\"280\":1,\"312\":1}}],[\"spring\",{\"0\":{\"46\":1,\"78\":1,\"233\":1,\"269\":1},\"1\":{\"29\":1,\"34\":3,\"46\":4,\"48\":2,\"59\":1,\"77\":1,\"78\":2,\"80\":2,\"86\":4,\"87\":20,\"92\":1,\"112\":1,\"116\":1,\"117\":2,\"144\":1,\"154\":1,\"156\":2,\"161\":4,\"164\":7,\"166\":1,\"203\":1,\"208\":2,\"217\":2,\"218\":1,\"224\":1,\"226\":1,\"228\":1,\"230\":2,\"260\":1,\"269\":1,\"270\":1,\"274\":2,\"275\":2,\"276\":2,\"279\":1,\"280\":2,\"283\":3,\"284\":1,\"285\":2,\"309\":1,\"312\":1,\"314\":3,\"315\":5,\"316\":4,\"320\":1,\"321\":1,\"322\":2,\"324\":1,\"325\":4}}],[\"spi\",{\"0\":{\"120\":1,\"121\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"130\":1,\"131\":1},\"1\":{\"22\":2,\"120\":3,\"121\":2,\"122\":2,\"124\":2,\"125\":1,\"126\":3,\"128\":2,\"129\":4,\"130\":7,\"131\":2,\"132\":3,\"133\":1,\"135\":1,\"136\":1,\"139\":5,\"177\":1,\"275\":3,\"284\":4,\"321\":5}}],[\"sponsors\",{\"1\":{\"256\":2}}],[\"sponsorship\",{\"0\":{\"256\":1},\"1\":{\"9\":1,\"256\":3}}],[\"sponsoring\",{\"1\":{\"256\":1}}],[\"sponsor\",{\"1\":{\"9\":1,\"256\":2}}],[\"silent\",{\"1\":{\"256\":1}}],[\"silly\",{\"1\":{\"131\":1}}],[\"sikm\",{\"1\":{\"256\":1}}],[\"sissie\",{\"1\":{\"256\":1}}],[\"sirius\",{\"1\":{\"256\":2}}],[\"six\",{\"1\":{\"225\":1}}],[\"sigkey\",{\"1\":{\"151\":1}}],[\"signutils\",{\"1\":{\"151\":1}}],[\"signed\",{\"1\":{\"151\":2}}],[\"signauthdatacache\",{\"1\":{\"151\":1}}],[\"signature\",{\"1\":{\"149\":1,\"303\":1}}],[\"signdata\",{\"1\":{\"151\":2}}],[\"signverify\",{\"1\":{\"151\":1}}],[\"signplugin\",{\"1\":{\"151\":1,\"179\":1,\"180\":2}}],[\"sign<\",{\"1\":{\"144\":1}}],[\"sign\",{\"0\":{\"140\":1,\"144\":1,\"150\":1},\"1\":{\"87\":2,\"141\":2,\"144\":2,\"147\":2,\"149\":1,\"151\":5,\"179\":1,\"180\":1,\"256\":1}}],[\"significance\",{\"1\":{\"80\":1,\"209\":1}}],[\"sink\",{\"1\":{\"256\":1}}],[\"sing\",{\"1\":{\"151\":1}}],[\"singleton\",{\"1\":{\"195\":9,\"197\":1}}],[\"singletonlist\",{\"1\":{\"79\":2,\"80\":2,\"81\":2,\"82\":1,\"100\":1,\"109\":1,\"165\":1}}],[\"single\",{\"1\":{\"33\":1,\"74\":1,\"191\":1,\"195\":2}}],[\"since\",{\"1\":{\"48\":1,\"87\":1,\"104\":1,\"118\":1,\"180\":1,\"302\":1}}],[\"side\",{\"1\":{\"33\":4,\"98\":1,\"103\":1,\"105\":2,\"234\":2,\"240\":2,\"241\":1}}],[\"size\",{\"1\":{\"33\":4,\"35\":2,\"40\":1,\"43\":1,\"48\":2,\"85\":1,\"86\":1,\"90\":1,\"91\":2,\"104\":3,\"172\":1,\"175\":3,\"179\":1,\"182\":2,\"213\":2,\"218\":2,\"219\":1,\"235\":1,\"293\":1,\"328\":3}}],[\"simplify\",{\"1\":{\"281\":1}}],[\"simplified\",{\"1\":{\"212\":1}}],[\"simplicity\",{\"1\":{\"275\":2,\"286\":1}}],[\"simply\",{\"1\":{\"129\":1,\"151\":1,\"212\":1}}],[\"simplevalueparser\",{\"1\":{\"292\":1}}],[\"simplest\",{\"1\":{\"177\":1}}],[\"simpleinstantiationstrategy\",{\"1\":{\"164\":4}}],[\"simple\",{\"1\":{\"4\":1,\"46\":1,\"126\":1,\"129\":2,\"212\":1,\"290\":1}}],[\"simulate\",{\"0\":{\"62\":1}}],[\"simultaneously\",{\"1\":{\"31\":2}}],[\"similar\",{\"1\":{\"29\":1,\"48\":1,\"71\":1,\"86\":1,\"124\":1,\"234\":1}}],[\"situation\",{\"1\":{\"22\":1,\"210\":2,\"214\":1,\"306\":1}}],[\"s\",{\"0\":{\"31\":1,\"38\":1,\"82\":1,\"144\":1,\"269\":1},\"1\":{\"14\":1,\"15\":1,\"16\":1,\"28\":3,\"29\":2,\"30\":2,\"31\":1,\"32\":2,\"33\":4,\"35\":1,\"36\":1,\"37\":1,\"39\":1,\"43\":3,\"48\":15,\"57\":9,\"58\":1,\"59\":1,\"61\":1,\"64\":6,\"72\":1,\"77\":1,\"82\":4,\"86\":4,\"87\":1,\"88\":1,\"100\":3,\"104\":3,\"105\":2,\"110\":1,\"117\":1,\"120\":1,\"122\":2,\"123\":3,\"124\":1,\"126\":1,\"128\":1,\"129\":2,\"132\":2,\"133\":1,\"135\":1,\"142\":1,\"155\":2,\"162\":1,\"164\":13,\"165\":2,\"175\":1,\"177\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":2,\"184\":1,\"191\":1,\"200\":2,\"202\":1,\"206\":1,\"207\":2,\"212\":1,\"213\":1,\"214\":2,\"219\":11,\"234\":1,\"235\":1,\"241\":3,\"242\":1,\"247\":1,\"252\":1,\"253\":1,\"254\":2,\"256\":3,\"270\":1,\"275\":1,\"280\":1,\"281\":1,\"292\":1,\"302\":1,\"305\":2,\"309\":1,\"312\":1,\"320\":1}}],[\"semaphore\",{\"1\":{\"217\":1}}],[\"separated\",{\"1\":{\"226\":1}}],[\"separate\",{\"1\":{\"182\":1,\"226\":1,\"292\":3}}],[\"separately\",{\"1\":{\"48\":1}}],[\"several\",{\"1\":{\"104\":1,\"182\":1,\"195\":1,\"210\":1}}],[\"segment\",{\"1\":{\"90\":1,\"177\":1}}],[\"sense\",{\"0\":{\"162\":1},\"1\":{\"211\":1}}],[\"senses\",{\"1\":{\"159\":1}}],[\"sentine\",{\"1\":{\"214\":4}}],[\"sentinelreactortransformer<>\",{\"1\":{\"214\":1}}],[\"sentinelrulehandle\",{\"1\":{\"214\":2}}],[\"sentinelplugin\",{\"1\":{\"214\":2}}],[\"sentinelhandle\",{\"1\":{\"214\":19}}],[\"sentinelfallbackexception\",{\"1\":{\"214\":3}}],[\"sentinelfallbackhandler\",{\"1\":{\"214\":9}}],[\"sentinelfallback\",{\"1\":{\"214\":1}}],[\"sentinelurl\",{\"1\":{\"33\":1,\"46\":1}}],[\"sentinel\",{\"0\":{\"209\":1},\"1\":{\"33\":2,\"46\":1,\"87\":2,\"209\":3,\"212\":5,\"213\":3,\"214\":24}}],[\"sentence\",{\"1\":{\"100\":2}}],[\"sent\",{\"1\":{\"81\":2,\"83\":1,\"110\":1,\"113\":1,\"212\":1}}],[\"sending\",{\"1\":{\"118\":1}}],[\"sendtext\",{\"1\":{\"114\":2}}],[\"sendresponse\",{\"1\":{\"100\":6}}],[\"sends\",{\"1\":{\"82\":1,\"108\":1}}],[\"send\",{\"1\":{\"48\":3,\"83\":2,\"98\":3,\"100\":2,\"104\":3,\"112\":1,\"113\":6,\"114\":6,\"116\":1,\"290\":1,\"308\":1,\"319\":1}}],[\"seeing\",{\"1\":{\"110\":1,\"123\":1}}],[\"see\",{\"1\":{\"48\":2,\"57\":1,\"59\":1,\"61\":1,\"64\":1,\"68\":2,\"69\":1,\"71\":1,\"72\":1,\"77\":1,\"78\":1,\"80\":3,\"86\":2,\"87\":1,\"98\":1,\"99\":1,\"100\":2,\"101\":2,\"106\":2,\"108\":2,\"110\":1,\"112\":2,\"113\":1,\"122\":2,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"155\":2,\"164\":3,\"175\":1,\"179\":4,\"180\":1,\"183\":1,\"184\":1,\"189\":1,\"197\":1,\"202\":1}}],[\"seen\",{\"1\":{\"48\":3,\"86\":1,\"109\":1,\"112\":1,\"156\":1,\"164\":1,\"189\":1,\"197\":1}}],[\"season\",{\"1\":{\"288\":1}}],[\"sean\",{\"1\":{\"256\":1}}],[\"seamlessly\",{\"1\":{\"34\":2}}],[\"searching\",{\"1\":{\"135\":1,\"139\":1}}],[\"search\",{\"0\":{\"108\":1,\"133\":1},\"1\":{\"28\":1,\"78\":1,\"109\":1,\"123\":1,\"134\":1}}],[\"seriously\",{\"1\":{\"210\":1}}],[\"serializable\",{\"1\":{\"305\":1}}],[\"serializationcontext\",{\"1\":{\"195\":2}}],[\"serialization\",{\"1\":{\"33\":2,\"34\":1,\"242\":2,\"275\":1,\"276\":1,\"285\":1,\"297\":3,\"300\":1}}],[\"serialize\",{\"1\":{\"240\":1,\"243\":1}}],[\"serializeenum\",{\"1\":{\"43\":1}}],[\"serializer\",{\"1\":{\"33\":2,\"43\":3,\"46\":1,\"195\":5,\"280\":1,\"284\":2}}],[\"serverhttprequest\",{\"1\":{\"180\":1,\"207\":1,\"221\":1}}],[\"serverhttpresponse\",{\"1\":{\"93\":1,\"185\":1,\"207\":1}}],[\"serverendpoint\",{\"1\":{\"114\":2}}],[\"serverendpointexporter\",{\"1\":{\"112\":4}}],[\"serverlist\",{\"1\":{\"104\":6}}],[\"serverweb\",{\"1\":{\"87\":1}}],[\"serverwebexchange\",{\"1\":{\"85\":1,\"86\":2,\"87\":1,\"92\":3,\"93\":1,\"172\":2,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":2,\"184\":3,\"185\":1,\"197\":1,\"207\":3,\"214\":2,\"221\":5,\"235\":2,\"236\":1,\"237\":1,\"238\":1}}],[\"server\",{\"1\":{\"81\":2,\"93\":1,\"100\":2,\"104\":9,\"105\":6,\"155\":4,\"172\":2,\"176\":1,\"185\":1,\"214\":2,\"220\":1,\"221\":1,\"236\":2,\"241\":1,\"280\":4,\"284\":1}}],[\"servicecacheruledata\",{\"1\":{\"162\":1}}],[\"serviceloaders\",{\"1\":{\"123\":2,\"124\":1}}],[\"serviceloader<driver>\",{\"1\":{\"126\":1}}],[\"serviceloader<>\",{\"1\":{\"123\":1}}],[\"serviceloader<s>\",{\"1\":{\"123\":4}}],[\"serviceloader<animal>\",{\"1\":{\"122\":2,\"123\":2}}],[\"serviceloader<interface>\",{\"1\":{\"121\":1}}],[\"serviceloader\",{\"1\":{\"121\":1,\"122\":3,\"123\":8,\"124\":1,\"126\":1,\"131\":1,\"132\":3,\"133\":2}}],[\"service\",{\"0\":{\"59\":1,\"60\":1,\"63\":1,\"147\":1,\"155\":1,\"230\":1,\"241\":1,\"242\":1},\"1\":{\"32\":1,\"33\":2,\"36\":3,\"43\":1,\"48\":1,\"64\":1,\"65\":2,\"69\":2,\"72\":3,\"78\":1,\"81\":1,\"87\":2,\"89\":1,\"92\":2,\"93\":4,\"104\":5,\"105\":1,\"106\":1,\"114\":1,\"117\":1,\"121\":2,\"123\":15,\"147\":1,\"154\":3,\"155\":4,\"156\":6,\"161\":6,\"162\":1,\"164\":3,\"166\":7,\"172\":2,\"173\":6,\"175\":10,\"176\":1,\"177\":3,\"178\":2,\"185\":4,\"201\":1,\"205\":2,\"206\":1,\"209\":1,\"210\":7,\"211\":7,\"212\":20,\"213\":7,\"214\":8,\"224\":1,\"225\":3,\"226\":2,\"230\":1,\"234\":2,\"235\":1,\"238\":2,\"240\":2,\"242\":2,\"243\":2,\"270\":1,\"277\":1,\"279\":2,\"280\":3,\"300\":1,\"309\":1,\"316\":1,\"320\":1}}],[\"services\",{\"0\":{\"62\":1},\"1\":{\"9\":1,\"69\":1,\"92\":1,\"123\":1,\"164\":1,\"172\":2,\"173\":3,\"175\":2,\"177\":3,\"178\":3,\"210\":4,\"212\":1,\"214\":2,\"218\":1,\"231\":1,\"256\":1,\"308\":1,\"319\":1,\"322\":1}}],[\"section\",{\"1\":{\"197\":1}}],[\"sections\",{\"1\":{\"29\":1}}],[\"secretary\",{\"1\":{\"252\":1}}],[\"secretkey\",{\"0\":{\"145\":1},\"1\":{\"147\":1,\"164\":2}}],[\"secret\",{\"1\":{\"142\":2,\"280\":1,\"326\":1}}],[\"sec\",{\"1\":{\"65\":6,\"82\":1}}],[\"secondly\",{\"1\":{\"214\":1,\"315\":1}}],[\"seconds\",{\"1\":{\"33\":2,\"43\":3,\"48\":2,\"57\":1,\"101\":3,\"104\":2,\"105\":1,\"164\":1,\"174\":3,\"178\":1,\"200\":1,\"213\":3,\"214\":3}}],[\"second\",{\"0\":{\"137\":1},\"1\":{\"28\":1,\"38\":1,\"74\":1,\"85\":1,\"91\":2,\"97\":1,\"101\":1,\"109\":1,\"123\":1,\"137\":1,\"139\":1,\"189\":2,\"197\":1,\"198\":1,\"199\":2,\"210\":1,\"211\":3,\"212\":1,\"213\":5,\"219\":3}}],[\"sessionid\",{\"1\":{\"155\":2}}],[\"sessions\",{\"1\":{\"114\":1,\"116\":1}}],[\"sessionkey\",{\"1\":{\"114\":1}}],[\"sessiontimeout=5000\",{\"1\":{\"155\":1}}],[\"sessiontimeout\",{\"1\":{\"33\":1,\"46\":1,\"154\":2}}],[\"session\",{\"0\":{\"20\":1,\"23\":1},\"1\":{\"98\":3,\"114\":38,\"116\":2,\"155\":3}}],[\"setbasepath\",{\"1\":{\"329\":1}}],[\"setobjecttype\",{\"1\":{\"328\":1}}],[\"setobjectid\",{\"1\":{\"328\":1}}],[\"setoperator\",{\"1\":{\"80\":1,\"82\":2}}],[\"setfilename\",{\"1\":{\"329\":1}}],[\"setfields\",{\"1\":{\"293\":1}}],[\"setfailureratethreshold\",{\"1\":{\"219\":1}}],[\"setfallbackuri\",{\"1\":{\"219\":1}}],[\"setinvoker\",{\"1\":{\"242\":1}}],[\"setinterface\",{\"1\":{\"232\":1}}],[\"setid\",{\"1\":{\"109\":1}}],[\"setattachment\",{\"1\":{\"237\":1,\"241\":1}}],[\"setapplication\",{\"1\":{\"232\":1}}],[\"setaction\",{\"1\":{\"39\":1}}],[\"setgeneric\",{\"1\":{\"232\":1}}],[\"setgrade\",{\"1\":{\"214\":2}}],[\"setname\",{\"1\":{\"230\":1}}],[\"setusername\",{\"1\":{\"220\":1}}],[\"setuserid\",{\"1\":{\"220\":1}}],[\"setwaitintervalfunctioninopenstate\",{\"1\":{\"219\":1}}],[\"setweight\",{\"1\":{\"91\":2}}],[\"setminimumnumberofcalls\",{\"1\":{\"219\":1}}],[\"setcircuitenable\",{\"1\":{\"219\":1}}],[\"setcontrolbehavior\",{\"1\":{\"214\":1}}],[\"setcontenttype\",{\"1\":{\"105\":1}}],[\"setcount\",{\"1\":{\"214\":2}}],[\"setcomplete\",{\"1\":{\"207\":1}}],[\"setlimitforperiod\",{\"1\":{\"219\":2}}],[\"setlimitrefreshperiod\",{\"1\":{\"219\":2}}],[\"setlastupdate\",{\"1\":{\"91\":1}}],[\"setex\",{\"1\":{\"200\":3}}],[\"set<string>\",{\"1\":{\"165\":1}}],[\"set<session>\",{\"1\":{\"114\":1}}],[\"setvalue\",{\"1\":{\"139\":2}}],[\"setregistry\",{\"1\":{\"232\":1}}],[\"setruleid\",{\"1\":{\"82\":1}}],[\"setruleconditions\",{\"1\":{\"82\":1}}],[\"setrole\",{\"1\":{\"39\":1}}],[\"setplatform\",{\"1\":{\"328\":1,\"329\":1}}],[\"setpluginid\",{\"1\":{\"80\":5}}],[\"setpath\",{\"1\":{\"328\":1,\"329\":1}}],[\"setparamvalue\",{\"1\":{\"80\":1}}],[\"setparamname\",{\"1\":{\"80\":1}}],[\"setparamtype\",{\"1\":{\"80\":1}}],[\"setprotocol\",{\"1\":{\"232\":1}}],[\"setpermittednumberofcallsinhalfopenstate\",{\"1\":{\"219\":1}}],[\"sethandle\",{\"1\":{\"79\":2,\"80\":4,\"81\":2}}],[\"setslidingwindowtype\",{\"1\":{\"219\":1}}],[\"setslidingwindowsize\",{\"1\":{\"219\":1}}],[\"sets\",{\"1\":{\"172\":1}}],[\"setselectorconditions\",{\"1\":{\"80\":1}}],[\"setselectorid\",{\"1\":{\"48\":2,\"80\":1}}],[\"setstatuscode\",{\"1\":{\"93\":1,\"185\":1,\"197\":1,\"207\":1,\"214\":4,\"221\":1,\"236\":2}}],[\"setstatus\",{\"1\":{\"36\":1,\"175\":2}}],[\"setthfilename\",{\"1\":{\"329\":1}}],[\"settargetserviceuniquename\",{\"1\":{\"242\":1}}],[\"settimewindow\",{\"1\":{\"214\":1}}],[\"settimestamp\",{\"1\":{\"175\":1}}],[\"settimeoutduration\",{\"1\":{\"219\":2,\"220\":1}}],[\"settimeoutdurationrate\",{\"1\":{\"219\":1}}],[\"settimeout\",{\"1\":{\"100\":2}}],[\"setting\",{\"1\":{\"121\":1,\"211\":1}}],[\"settings\",{\"1\":{\"46\":1,\"96\":1,\"212\":1,\"292\":1,\"294\":1}}],[\"settransid\",{\"1\":{\"39\":1}}],[\"setdefaultexceptionhandler\",{\"1\":{\"35\":1}}],[\"set\",{\"0\":{\"117\":1},\"1\":{\"16\":1,\"30\":1,\"33\":4,\"39\":4,\"48\":1,\"82\":1,\"85\":1,\"91\":1,\"99\":1,\"101\":1,\"114\":8,\"165\":2,\"172\":1,\"174\":1,\"178\":1,\"182\":1,\"183\":2,\"184\":6,\"199\":1,\"200\":2,\"202\":2,\"212\":3,\"214\":12,\"219\":1,\"220\":1,\"221\":1,\"226\":11,\"241\":1,\"249\":2,\"315\":1,\"321\":1}}],[\"sel\",{\"1\":{\"91\":1}}],[\"selects\",{\"1\":{\"177\":1,\"185\":1}}],[\"selecting\",{\"1\":{\"172\":1}}],[\"selection\",{\"1\":{\"128\":1,\"178\":1,\"182\":1,\"185\":1}}],[\"selective\",{\"1\":{\"81\":1}}],[\"select\",{\"1\":{\"82\":1,\"91\":2,\"120\":3,\"129\":2,\"172\":2,\"177\":1,\"179\":1,\"182\":3,\"183\":1,\"192\":1,\"214\":1}}],[\"selectorlog\",{\"1\":{\"182\":2}}],[\"selectorparentpath\",{\"1\":{\"98\":2}}],[\"selectortypeenum\",{\"1\":{\"80\":1,\"85\":1,\"172\":1,\"182\":1}}],[\"selectorid\",{\"1\":{\"78\":2,\"79\":5,\"81\":5,\"82\":5,\"173\":2}}],[\"selectorserviceimpl\",{\"1\":{\"80\":1}}],[\"selectorservice\",{\"1\":{\"79\":2,\"80\":1,\"81\":2,\"156\":1}}],[\"selectors\",{\"0\":{\"146\":1,\"192\":1},\"1\":{\"69\":1,\"70\":1,\"71\":1,\"80\":1,\"85\":4,\"172\":2,\"182\":4,\"185\":1,\"305\":1,\"317\":1}}],[\"selectormapper\",{\"1\":{\"48\":2,\"79\":1,\"80\":1,\"81\":1}}],[\"selectorconditionquery\",{\"1\":{\"48\":1}}],[\"selectorconditiondo\",{\"1\":{\"48\":5,\"80\":1}}],[\"selectorconditiondto\",{\"1\":{\"48\":6,\"80\":11}}],[\"selectorconditiondtos\",{\"1\":{\"48\":4,\"80\":3}}],[\"selectorconditionmapper\",{\"1\":{\"48\":3,\"80\":1}}],[\"selectorcount\",{\"1\":{\"48\":4}}],[\"selectordatahandler\",{\"1\":{\"117\":1,\"118\":1}}],[\"selectordatalist\",{\"1\":{\"113\":2,\"156\":2}}],[\"selectordatarefresh\",{\"1\":{\"104\":1}}],[\"selectordata\",{\"1\":{\"79\":4,\"81\":5,\"85\":8,\"87\":1,\"118\":5,\"172\":6,\"182\":7,\"183\":1,\"197\":1,\"207\":1,\"214\":1,\"221\":1,\"236\":1}}],[\"selectordo\",{\"1\":{\"48\":9,\"79\":7,\"80\":8,\"81\":7}}],[\"selectordto\",{\"1\":{\"48\":5,\"80\":20}}],[\"selector\",{\"0\":{\"70\":1,\"71\":1,\"79\":1},\"1\":{\"48\":5,\"61\":4,\"64\":25,\"69\":6,\"70\":1,\"72\":3,\"74\":1,\"79\":1,\"80\":4,\"81\":2,\"82\":1,\"83\":3,\"85\":6,\"87\":4,\"97\":1,\"104\":2,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"117\":1,\"118\":2,\"120\":2,\"146\":1,\"156\":1,\"157\":1,\"159\":1,\"164\":2,\"172\":9,\"173\":4,\"177\":2,\"182\":11,\"183\":5,\"185\":1,\"192\":2,\"197\":1,\"202\":2,\"207\":1,\"212\":1,\"214\":1,\"221\":1,\"236\":1}}],[\"selectedwrr\",{\"1\":{\"91\":3}}],[\"selectedinvoker\",{\"1\":{\"91\":4}}],[\"selected\",{\"1\":{\"16\":1,\"91\":5}}],[\"self\",{\"0\":{\"206\":1},\"1\":{\"6\":1,\"206\":1,\"207\":1,\"254\":1}}],[\"suffered\",{\"1\":{\"321\":1}}],[\"suffix\",{\"1\":{\"43\":2,\"249\":1,\"324\":4}}],[\"suggestions\",{\"1\":{\"271\":1,\"302\":1}}],[\"sudong\",{\"1\":{\"256\":1}}],[\"suddenly\",{\"1\":{\"48\":1}}],[\"sudden\",{\"1\":{\"32\":1,\"210\":1,\"211\":1}}],[\"superbenchmarker\",{\"1\":{\"219\":1}}],[\"super\",{\"1\":{\"214\":1,\"249\":1}}],[\"suppresswarnings\",{\"1\":{\"111\":1,\"113\":1,\"156\":1,\"165\":1}}],[\"supported\",{\"1\":{\"272\":1,\"276\":1,\"277\":1,\"287\":1,\"322\":2}}],[\"supporter\",{\"1\":{\"9\":1,\"256\":1}}],[\"supports\",{\"1\":{\"33\":2,\"34\":2,\"70\":1,\"177\":1,\"274\":2,\"297\":1,\"299\":2,\"312\":2,\"317\":1,\"321\":2,\"328\":1}}],[\"supporting\",{\"1\":{\"9\":1}}],[\"support\",{\"0\":{\"9\":1,\"31\":1,\"144\":1,\"256\":1,\"269\":1},\"1\":{\"9\":3,\"28\":1,\"40\":1,\"70\":1,\"112\":1,\"164\":3,\"169\":1,\"180\":1,\"256\":2,\"269\":1,\"272\":1,\"274\":3,\"275\":4,\"276\":2,\"280\":1,\"281\":3,\"283\":1,\"284\":5,\"285\":4,\"287\":1,\"288\":3,\"290\":2,\"292\":3,\"293\":1,\"294\":1,\"297\":1,\"303\":2,\"310\":2,\"312\":4,\"322\":1,\"328\":1}}],[\"suspension\",{\"1\":{\"274\":1,\"276\":1,\"285\":1,\"288\":1}}],[\"suspended\",{\"1\":{\"105\":1,\"211\":1}}],[\"suspected\",{\"1\":{\"180\":1}}],[\"suitable\",{\"0\":{\"307\":1,\"318\":1},\"1\":{\"179\":1,\"308\":1,\"319\":1}}],[\"surrounding\",{\"1\":{\"290\":1}}],[\"surge\",{\"1\":{\"210\":1}}],[\"survival\",{\"1\":{\"175\":3}}],[\"surviving\",{\"1\":{\"173\":1,\"175\":2}}],[\"surpasses\",{\"1\":{\"91\":1}}],[\"sure\",{\"1\":{\"48\":1,\"57\":1,\"321\":1}}],[\"sum\",{\"0\":{\"83\":1,\"101\":1,\"167\":1,\"178\":1,\"222\":1,\"243\":1},\"1\":{\"91\":1,\"92\":1,\"224\":1}}],[\"summarizes\",{\"1\":{\"103\":1}}],[\"summarize\",{\"1\":{\"83\":1,\"119\":1,\"128\":1}}],[\"summarized\",{\"1\":{\"46\":1}}],[\"summary\",{\"0\":{\"128\":1,\"138\":1,\"157\":1,\"163\":1},\"1\":{\"22\":2,\"25\":1,\"105\":1,\"164\":1,\"165\":1,\"166\":1,\"302\":1}}],[\"such\",{\"1\":{\"32\":1,\"37\":1,\"38\":1,\"43\":2,\"87\":1,\"117\":2,\"118\":3,\"119\":1,\"121\":1,\"135\":2,\"179\":1,\"185\":1,\"210\":1,\"212\":1,\"303\":1,\"306\":1,\"312\":2,\"317\":1,\"321\":2,\"322\":1,\"324\":2}}],[\"success\",{\"1\":{\"48\":2,\"56\":1,\"61\":2,\"64\":12,\"78\":1,\"85\":2,\"104\":3,\"109\":2,\"184\":1,\"197\":1,\"237\":1,\"238\":5}}],[\"successful\",{\"1\":{\"48\":1,\"57\":2,\"61\":1,\"64\":1,\"114\":1,\"184\":1,\"237\":1,\"247\":1,\"253\":1,\"321\":1}}],[\"successfully\",{\"1\":{\"31\":1,\"122\":1,\"164\":1,\"193\":1,\"197\":1,\"328\":5}}],[\"succeeded\",{\"1\":{\"30\":1}}],[\"sunday\",{\"1\":{\"13\":1,\"21\":1,\"24\":1}}],[\"subtraction\",{\"1\":{\"200\":1}}],[\"subtype\",{\"1\":{\"123\":1}}],[\"sub\",{\"1\":{\"131\":1,\"254\":4,\"321\":2}}],[\"subscription\",{\"1\":{\"118\":1}}],[\"subscribe\",{\"1\":{\"162\":1}}],[\"subscribeplugindatachanges\",{\"1\":{\"161\":1}}],[\"subscribechildchanges\",{\"1\":{\"161\":1,\"162\":1}}],[\"subscribedatachanges\",{\"1\":{\"162\":1}}],[\"subscribedata\",{\"1\":{\"161\":1,\"162\":1}}],[\"subscriberuledatachanges\",{\"1\":{\"162\":2}}],[\"subscribers\",{\"1\":{\"105\":1,\"117\":2,\"161\":4}}],[\"subscriber\",{\"1\":{\"104\":2,\"117\":1,\"118\":4,\"161\":3}}],[\"subscribeon\",{\"1\":{\"86\":1,\"235\":1}}],[\"subsequent\",{\"1\":{\"9\":1,\"80\":1,\"81\":1,\"92\":1,\"173\":1,\"210\":1,\"211\":1,\"221\":1,\"226\":1,\"254\":1,\"256\":1}}],[\"subclass\",{\"1\":{\"85\":1,\"86\":1,\"87\":1,\"97\":2,\"119\":1,\"120\":3,\"121\":2,\"122\":2,\"124\":1,\"139\":3,\"182\":2,\"292\":1}}],[\"subclasses\",{\"1\":{\"85\":1,\"87\":1,\"118\":1,\"121\":2,\"131\":1,\"182\":1}}],[\"submit\",{\"1\":{\"28\":1,\"79\":2,\"80\":1,\"81\":3,\"173\":1,\"321\":1}}],[\"submitted\",{\"1\":{\"16\":1,\"249\":1}}],[\"submission\",{\"1\":{\"16\":1,\"247\":1}}],[\"submissions\",{\"1\":{\"8\":1}}],[\"soon\",{\"1\":{\"253\":1}}],[\"sorting\",{\"1\":{\"187\":1}}],[\"sortedmap<long\",{\"1\":{\"89\":1}}],[\"sorted\",{\"1\":{\"86\":1,\"101\":1,\"147\":1,\"165\":1,\"179\":1,\"183\":1,\"207\":1}}],[\"sort\",{\"1\":{\"80\":1,\"82\":2,\"179\":2,\"182\":1,\"207\":3}}],[\"socketlistener\",{\"1\":{\"116\":1}}],[\"socketcontroller\",{\"1\":{\"114\":1}}],[\"socketdata\",{\"1\":{\"112\":1,\"113\":2,\"117\":1}}],[\"socket\",{\"0\":{\"115\":1,\"116\":1,\"117\":1},\"1\":{\"68\":1,\"81\":1,\"82\":1,\"98\":1,\"106\":1,\"112\":3,\"113\":1,\"114\":5,\"116\":3,\"117\":3,\"155\":2,\"176\":5}}],[\"social\",{\"1\":{\"22\":1}}],[\"solves\",{\"1\":{\"294\":1,\"308\":1,\"319\":1}}],[\"solve\",{\"0\":{\"276\":1,\"285\":1},\"1\":{\"131\":1,\"164\":1,\"285\":1,\"288\":1,\"290\":2,\"309\":1,\"320\":1}}],[\"solved\",{\"1\":{\"48\":1,\"66\":1,\"129\":1,\"272\":1,\"290\":1}}],[\"solving\",{\"1\":{\"32\":1,\"286\":1}}],[\"solutions\",{\"1\":{\"211\":1,\"247\":1}}],[\"solution\",{\"1\":{\"4\":3,\"8\":1,\"32\":1,\"38\":1,\"164\":1,\"275\":1,\"283\":1}}],[\"so\",{\"0\":{\"312\":1},\"1\":{\"29\":1,\"30\":1,\"37\":1,\"48\":4,\"68\":1,\"69\":1,\"80\":3,\"86\":1,\"87\":2,\"91\":1,\"97\":1,\"98\":3,\"100\":1,\"101\":1,\"104\":3,\"112\":1,\"122\":1,\"123\":2,\"124\":1,\"126\":1,\"129\":1,\"131\":1,\"132\":1,\"164\":1,\"169\":1,\"179\":2,\"180\":2,\"182\":2,\"197\":1,\"200\":1,\"207\":1,\"212\":2,\"214\":2,\"219\":1,\"235\":1,\"236\":2,\"253\":1,\"254\":1,\"305\":1,\"308\":1,\"319\":1,\"321\":2,\"322\":1}}],[\"something\",{\"1\":{\"101\":1,\"184\":1}}],[\"somewhat\",{\"1\":{\"29\":1}}],[\"some\",{\"1\":{\"28\":2,\"29\":1,\"46\":1,\"81\":1,\"84\":2,\"85\":1,\"92\":1,\"121\":1,\"131\":1,\"179\":2,\"210\":1,\"211\":1,\"214\":1,\"220\":2,\"290\":1,\"308\":2,\"316\":2,\"319\":2,\"321\":5,\"328\":2}}],[\"soft\",{\"1\":{\"155\":1}}],[\"software\",{\"1\":{\"4\":1}}],[\"sofarulehandle\",{\"1\":{\"82\":1}}],[\"sofa\",{\"1\":{\"25\":1,\"80\":2,\"82\":1,\"87\":2,\"180\":1,\"274\":1}}],[\"soul3\",{\"1\":{\"311\":1}}],[\"souldubboclient\",{\"1\":{\"230\":2}}],[\"soulbootstrap\",{\"0\":{\"144\":1}}],[\"soulbootstrapapplication\",{\"1\":{\"57\":2,\"164\":4}}],[\"souladmin\",{\"1\":{\"151\":1}}],[\"souladminresult\",{\"1\":{\"109\":4}}],[\"souladminbootstrap\",{\"1\":{\"56\":1}}],[\"soulthreadfactory\",{\"1\":{\"104\":1,\"174\":1}}],[\"soulresultwrap\",{\"1\":{\"183\":2,\"184\":1,\"185\":2,\"197\":1,\"214\":3,\"236\":2,\"238\":2}}],[\"soulresultwarp\",{\"1\":{\"93\":2}}],[\"soulresultenum\",{\"1\":{\"93\":4,\"151\":1,\"183\":4,\"184\":2,\"185\":4,\"197\":2,\"214\":6,\"236\":4,\"238\":4}}],[\"soulresultmessage\",{\"1\":{\"78\":1,\"109\":1}}],[\"soulcontext\",{\"0\":{\"180\":1},\"1\":{\"87\":3,\"151\":11,\"172\":1,\"180\":9,\"181\":1,\"183\":4,\"184\":3,\"214\":3,\"221\":3,\"236\":4}}],[\"soulconfiguration\",{\"1\":{\"86\":1,\"164\":2,\"179\":1}}],[\"soulclientregisterserviceimpl\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":2}}],[\"soulclientregisterservice\",{\"1\":{\"78\":1}}],[\"soulclientcontroller\",{\"1\":{\"78\":2}}],[\"soulwebsocketclient\",{\"1\":{\"117\":1,\"118\":1}}],[\"soulweb\",{\"1\":{\"86\":1,\"117\":1}}],[\"soulwebhandler\",{\"1\":{\"86\":7,\"179\":3,\"207\":5,\"235\":1}}],[\"soulplugins\",{\"1\":{\"86\":3,\"179\":2,\"207\":3}}],[\"soulpluginchain\",{\"0\":{\"86\":1},\"1\":{\"85\":1,\"86\":3,\"87\":1,\"92\":3,\"93\":1,\"172\":2,\"179\":3,\"180\":1,\"182\":1,\"183\":1,\"184\":3,\"185\":1,\"197\":1,\"207\":1,\"214\":1,\"221\":3,\"236\":1,\"238\":1}}],[\"soulplugin\",{\"1\":{\"84\":1,\"86\":7,\"87\":1,\"92\":1,\"179\":5,\"182\":2,\"207\":4,\"235\":1}}],[\"soulexception\",{\"1\":{\"82\":1,\"104\":3,\"105\":1,\"237\":3}}],[\"soulspringmvcconfig\",{\"1\":{\"77\":7}}],[\"soulspringmvcclient\",{\"1\":{\"59\":1}}],[\"soul\",{\"0\":{\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"47\":1,\"49\":1,\"51\":2,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"67\":1,\"76\":1,\"80\":1,\"81\":1,\"84\":1,\"94\":1,\"102\":1,\"106\":1,\"114\":1,\"120\":1,\"130\":1,\"140\":1,\"152\":1,\"153\":2,\"156\":1,\"158\":1,\"160\":1,\"161\":1,\"162\":1,\"164\":1,\"165\":1,\"166\":1,\"168\":1,\"170\":1,\"179\":1,\"186\":1,\"201\":1,\"209\":1,\"215\":1,\"218\":1,\"223\":1,\"228\":1,\"229\":1,\"235\":1,\"296\":1,\"297\":1,\"302\":1,\"307\":1,\"312\":1,\"314\":1,\"317\":1,\"318\":1},\"1\":{\"22\":4,\"25\":1,\"48\":15,\"49\":4,\"52\":1,\"56\":3,\"57\":5,\"58\":2,\"59\":5,\"61\":3,\"62\":1,\"64\":13,\"65\":3,\"66\":1,\"68\":4,\"69\":3,\"72\":2,\"77\":6,\"78\":1,\"81\":4,\"82\":2,\"83\":6,\"86\":5,\"87\":37,\"88\":1,\"89\":1,\"96\":3,\"97\":1,\"104\":1,\"106\":9,\"108\":1,\"112\":6,\"114\":1,\"116\":3,\"117\":6,\"118\":1,\"119\":4,\"130\":2,\"131\":1,\"132\":5,\"135\":1,\"139\":1,\"144\":2,\"151\":1,\"154\":8,\"155\":4,\"156\":9,\"157\":2,\"159\":4,\"160\":2,\"161\":6,\"162\":6,\"164\":45,\"165\":3,\"166\":8,\"169\":3,\"174\":4,\"177\":1,\"178\":1,\"179\":7,\"180\":1,\"184\":1,\"185\":2,\"187\":2,\"191\":3,\"192\":1,\"195\":1,\"199\":1,\"201\":1,\"202\":3,\"203\":1,\"205\":1,\"207\":2,\"209\":4,\"212\":5,\"213\":3,\"214\":13,\"216\":1,\"218\":7,\"220\":1,\"221\":2,\"222\":1,\"224\":2,\"229\":1,\"230\":4,\"237\":1,\"297\":1,\"300\":2,\"301\":4,\"302\":1,\"305\":5,\"306\":5,\"307\":1,\"308\":4,\"309\":4,\"311\":4,\"312\":2,\"314\":4,\"315\":5,\"316\":13,\"317\":7,\"318\":1,\"319\":3,\"320\":3,\"321\":4}}],[\"sourced\",{\"1\":{\"302\":1,\"311\":1}}],[\"source\",{\"0\":{\"20\":1,\"21\":1,\"23\":1,\"24\":1,\"47\":1,\"48\":1,\"50\":1,\"53\":1,\"54\":1,\"76\":1,\"139\":1,\"170\":1,\"194\":2,\"207\":1,\"221\":1,\"248\":1,\"321\":1,\"322\":1},\"1\":{\"1\":2,\"2\":2,\"3\":1,\"4\":1,\"5\":1,\"8\":1,\"14\":1,\"16\":1,\"25\":1,\"28\":1,\"32\":1,\"48\":6,\"96\":1,\"100\":2,\"101\":1,\"159\":1,\"182\":1,\"207\":1,\"209\":1,\"212\":2,\"214\":3,\"216\":1,\"219\":1,\"221\":1,\"225\":1,\"247\":1,\"248\":1,\"252\":2,\"254\":2,\"272\":1,\"321\":8,\"322\":2}}],[\"stmt\",{\"1\":{\"129\":4}}],[\"stuffed\",{\"1\":{\"101\":1}}],[\"students\",{\"1\":{\"164\":1}}],[\"study\",{\"1\":{\"83\":1}}],[\"studied\",{\"1\":{\"81\":1}}],[\"style\",{\"1\":{\"70\":1,\"275\":1}}],[\"stdev\",{\"1\":{\"65\":4}}],[\"step\",{\"1\":{\"81\":1,\"91\":1,\"96\":1,\"97\":1,\"185\":2}}],[\"steps\",{\"1\":{\"48\":1,\"91\":2,\"97\":1,\"104\":1,\"277\":1}}],[\"stereotype\",{\"1\":{\"35\":1,\"36\":1}}],[\"still\",{\"1\":{\"48\":3,\"66\":1,\"101\":1,\"110\":1,\"129\":1,\"131\":1,\"164\":2,\"179\":1,\"182\":1,\"197\":2,\"200\":1,\"211\":1,\"212\":1,\"213\":2}}],[\"stone\",{\"1\":{\"256\":1}}],[\"story\",{\"0\":{\"321\":1},\"1\":{\"312\":1}}],[\"storing\",{\"1\":{\"139\":1,\"173\":2}}],[\"stores\",{\"1\":{\"136\":1,\"151\":1,\"290\":1,\"322\":1}}],[\"storedays\",{\"1\":{\"280\":1}}],[\"storedkeys\",{\"1\":{\"147\":2}}],[\"stored\",{\"1\":{\"43\":1,\"81\":1,\"93\":1,\"151\":1,\"226\":3}}],[\"store\",{\"1\":{\"43\":2,\"114\":1,\"151\":1,\"200\":1,\"226\":1,\"321\":1}}],[\"storage<\",{\"1\":{\"323\":2,\"326\":1}}],[\"storage\",{\"0\":{\"38\":1,\"322\":2},\"1\":{\"33\":7,\"34\":1,\"38\":2,\"39\":1,\"56\":1,\"272\":1,\"274\":1,\"275\":1,\"276\":1,\"280\":1,\"284\":1,\"322\":11,\"323\":1,\"324\":6,\"325\":5,\"326\":8,\"328\":3,\"329\":1}}],[\"stopping\",{\"1\":{\"32\":1}}],[\"stop\",{\"0\":{\"322\":1},\"1\":{\"4\":1,\"219\":1}}],[\"strutil\",{\"1\":{\"293\":1}}],[\"structured\",{\"1\":{\"226\":1}}],[\"structure\",{\"0\":{\"87\":1},\"1\":{\"80\":1,\"81\":1,\"83\":1,\"139\":4,\"221\":1,\"234\":1,\"272\":1,\"280\":1,\"290\":1,\"292\":1,\"293\":1,\"306\":2,\"322\":1}}],[\"strict\",{\"1\":{\"275\":1,\"321\":2}}],[\"strictly\",{\"1\":{\"214\":1}}],[\"striking\",{\"1\":{\"123\":1}}],[\"stringredisserializer\",{\"1\":{\"195\":1}}],[\"string>newserializationcontext\",{\"1\":{\"195\":1}}],[\"string>\",{\"1\":{\"105\":1,\"147\":1,\"180\":1,\"195\":2}}],[\"stringbuilder\",{\"1\":{\"104\":2}}],[\"string\",{\"1\":{\"40\":6,\"43\":3,\"70\":1,\"78\":5,\"79\":8,\"80\":7,\"81\":8,\"82\":8,\"85\":1,\"87\":2,\"89\":2,\"90\":1,\"91\":3,\"92\":1,\"97\":1,\"98\":3,\"104\":8,\"105\":9,\"109\":4,\"114\":3,\"117\":5,\"118\":2,\"120\":2,\"122\":1,\"123\":4,\"127\":10,\"129\":2,\"132\":1,\"135\":1,\"137\":1,\"139\":10,\"147\":9,\"151\":2,\"156\":4,\"161\":5,\"162\":4,\"165\":3,\"166\":4,\"172\":4,\"173\":1,\"176\":5,\"177\":3,\"180\":1,\"182\":1,\"183\":3,\"184\":1,\"197\":2,\"207\":1,\"214\":6,\"220\":1,\"221\":1,\"234\":5,\"236\":1,\"237\":3,\"241\":1,\"242\":5,\"280\":10,\"292\":1,\"305\":3,\"327\":1,\"328\":2}}],[\"stringutils\",{\"1\":{\"40\":2,\"48\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"104\":1,\"109\":4,\"114\":1,\"127\":4,\"139\":3,\"151\":3,\"165\":1,\"176\":3,\"180\":1,\"184\":1,\"207\":1,\"221\":1,\"236\":2,\"237\":2,\"242\":2}}],[\"straightforward\",{\"1\":{\"90\":1}}],[\"strategies\",{\"0\":{\"98\":1},\"1\":{\"88\":1,\"98\":2,\"112\":1,\"177\":1,\"304\":1}}],[\"strategy\",{\"1\":{\"48\":2,\"74\":1,\"87\":2,\"88\":1,\"106\":1,\"112\":2,\"114\":1,\"120\":1,\"172\":1,\"178\":1,\"182\":1,\"183\":1,\"184\":1,\"211\":5,\"214\":3,\"268\":1,\"270\":1}}],[\"strange\",{\"1\":{\"48\":1}}],[\"stream\",{\"1\":{\"86\":1,\"124\":1,\"147\":2,\"162\":1,\"165\":1,\"179\":1,\"207\":1,\"214\":4,\"322\":1}}],[\"stress\",{\"1\":{\"33\":2}}],[\"strengthened\",{\"1\":{\"288\":1}}],[\"strength\",{\"1\":{\"14\":1,\"15\":1,\"91\":2}}],[\"strongly\",{\"1\":{\"4\":1}}],[\"stable\",{\"1\":{\"290\":1}}],[\"stability\",{\"1\":{\"212\":1,\"288\":1}}],[\"standard\",{\"1\":{\"286\":1}}],[\"stands\",{\"1\":{\"32\":1}}],[\"staff\",{\"1\":{\"247\":1,\"253\":2}}],[\"statintervalms\",{\"1\":{\"213\":1}}],[\"statistics\",{\"1\":{\"213\":1,\"218\":1}}],[\"statistical\",{\"1\":{\"180\":1,\"212\":2,\"213\":4}}],[\"station\",{\"1\":{\"97\":1}}],[\"static\",{\"1\":{\"36\":1,\"40\":8,\"82\":4,\"86\":2,\"97\":2,\"104\":1,\"112\":4,\"114\":3,\"116\":1,\"117\":1,\"120\":1,\"122\":3,\"123\":5,\"126\":8,\"127\":6,\"129\":3,\"132\":3,\"156\":1,\"176\":3,\"177\":1,\"214\":2,\"327\":1}}],[\"stats\",{\"1\":{\"65\":2}}],[\"statuscode\",{\"1\":{\"93\":1,\"184\":1,\"185\":1,\"214\":2}}],[\"status\",{\"1\":{\"48\":1,\"81\":1,\"160\":1,\"175\":2,\"177\":1,\"185\":2,\"191\":2,\"214\":8,\"219\":1,\"221\":5}}],[\"statement\",{\"1\":{\"129\":2}}],[\"state\",{\"1\":{\"32\":1,\"155\":2,\"191\":1,\"212\":2,\"213\":4,\"218\":3,\"219\":2,\"226\":1,\"303\":1}}],[\"stars\",{\"1\":{\"247\":1}}],[\"startwith\",{\"1\":{\"293\":1}}],[\"startdatetime\",{\"1\":{\"180\":1}}],[\"startasync\",{\"1\":{\"100\":2}}],[\"starting\",{\"1\":{\"91\":1,\"123\":1,\"155\":3,\"164\":2,\"207\":1,\"212\":1,\"219\":1}}],[\"starttimer\",{\"1\":{\"86\":1}}],[\"startswith\",{\"1\":{\"176\":1,\"207\":1}}],[\"startswithignorecase\",{\"1\":{\"127\":4}}],[\"starts\",{\"1\":{\"48\":1,\"81\":1,\"86\":1,\"112\":1,\"166\":1,\"213\":1}}],[\"startup\",{\"0\":{\"55\":1,\"56\":1,\"57\":1,\"59\":1,\"62\":1,\"104\":1,\"155\":1},\"1\":{\"38\":1,\"43\":2,\"57\":1,\"59\":1,\"62\":1,\"66\":1,\"87\":1,\"103\":1,\"105\":3,\"117\":1,\"122\":1,\"159\":2,\"161\":1,\"164\":1,\"230\":1,\"327\":1}}],[\"starterhmilytransactionhandler\",{\"1\":{\"36\":2}}],[\"starter\",{\"1\":{\"36\":1,\"43\":1,\"46\":3,\"59\":1,\"86\":3,\"87\":17,\"117\":1,\"144\":1,\"154\":1,\"161\":1,\"164\":6,\"166\":2,\"203\":1,\"218\":1,\"228\":1,\"230\":2,\"276\":1,\"279\":1,\"285\":1,\"315\":4,\"316\":4}}],[\"started\",{\"1\":{\"33\":3,\"48\":1,\"57\":2,\"72\":1,\"86\":1,\"104\":3,\"105\":2,\"107\":1,\"114\":1,\"155\":5,\"156\":3,\"157\":1,\"161\":1,\"164\":7,\"166\":1,\"321\":1}}],[\"start\",{\"0\":{\"46\":1,\"107\":1,\"122\":1,\"153\":1,\"159\":1},\"1\":{\"28\":1,\"35\":3,\"39\":3,\"48\":4,\"68\":2,\"72\":1,\"74\":1,\"84\":1,\"87\":1,\"92\":1,\"100\":1,\"104\":6,\"105\":3,\"106\":2,\"108\":1,\"144\":1,\"154\":1,\"155\":2,\"164\":8,\"166\":3,\"173\":1,\"174\":1,\"180\":1,\"206\":1,\"211\":2,\"218\":1,\"300\":1,\"315\":2,\"316\":4,\"325\":1,\"329\":1}}],[\"star\",{\"1\":{\"4\":1,\"46\":1,\"271\":1}}],[\"stack\",{\"1\":{\"2\":1,\"156\":1}}],[\"tps\",{\"1\":{\"312\":1}}],[\"tshirt\",{\"1\":{\"256\":1}}],[\"ttl\",{\"1\":{\"200\":6}}],[\"tusi\",{\"1\":{\"256\":1}}],[\"turned\",{\"1\":{\"174\":1,\"213\":3}}],[\"turning\",{\"1\":{\"113\":1}}],[\"turn\",{\"1\":{\"104\":1,\"105\":1,\"106\":1,\"179\":1,\"241\":1}}],[\"turren\",{\"1\":{\"104\":2}}],[\"tureen\",{\"1\":{\"104\":1}}],[\"tuning\",{\"0\":{\"33\":1}}],[\"t8\",{\"1\":{\"65\":2}}],[\"typename\",{\"1\":{\"293\":1}}],[\"type`\",{\"1\":{\"226\":1}}],[\"type\",{\"1\":{\"35\":3,\"70\":1,\"80\":1,\"82\":8,\"85\":2,\"86\":1,\"87\":1,\"92\":2,\"97\":1,\"104\":7,\"105\":1,\"110\":3,\"112\":8,\"113\":1,\"114\":6,\"117\":4,\"118\":3,\"119\":2,\"121\":1,\"156\":8,\"182\":1,\"184\":2,\"214\":4,\"218\":1,\"219\":1,\"226\":2,\"230\":1,\"234\":1,\"237\":2,\"242\":3,\"328\":1}}],[\"types`\",{\"1\":{\"226\":1}}],[\"types\",{\"1\":{\"34\":1,\"82\":1,\"85\":1,\"97\":1,\"105\":2,\"110\":5,\"113\":1,\"118\":1,\"134\":1,\"180\":1,\"198\":1,\"226\":1,\"234\":1,\"237\":1,\"242\":2}}],[\"tccfileconfig\",{\"1\":{\"43\":2}}],[\"tccconfig\",{\"1\":{\"43\":1}}],[\"tcc<\",{\"1\":{\"43\":2,\"44\":1,\"45\":1,\"46\":3}}],[\"tccroleenum\",{\"1\":{\"39\":2}}],[\"tccredisconfig\",{\"1\":{\"33\":6,\"43\":2,\"46\":1}}],[\"tccactionenum\",{\"1\":{\"36\":2,\"39\":1}}],[\"tcctransaction>\",{\"1\":{\"40\":3}}],[\"tcctransactioncachemanager\",{\"1\":{\"40\":7}}],[\"tcctransactioncontext\",{\"1\":{\"36\":2,\"39\":3}}],[\"tcctransaction\",{\"1\":{\"35\":6,\"36\":7,\"39\":10,\"40\":18}}],[\"tcczookeeperconfig\",{\"1\":{\"33\":2,\"43\":2}}],[\"tccmongoconfig\",{\"1\":{\"33\":2,\"43\":2}}],[\"tccdbconfig\",{\"1\":{\"33\":2,\"43\":4,\"46\":1}}],[\"tcc\",{\"0\":{\"34\":1,\"41\":1,\"42\":1},\"1\":{\"33\":9,\"35\":10,\"36\":7,\"40\":6,\"43\":9,\"44\":1,\"45\":1,\"46\":7,\"284\":4,\"287\":1,\"288\":3}}],[\"trend\",{\"1\":{\"309\":1,\"320\":1}}],[\"treemap\",{\"1\":{\"89\":5}}],[\"tree\",{\"0\":{\"42\":1},\"1\":{\"256\":1}}],[\"trouble\",{\"1\":{\"309\":1,\"320\":1}}],[\"troubles\",{\"1\":{\"308\":2,\"319\":2}}],[\"truing\",{\"1\":{\"256\":1}}],[\"truth\",{\"1\":{\"112\":1}}],[\"true\",{\"1\":{\"33\":4,\"43\":1,\"46\":1,\"80\":3,\"81\":1,\"82\":2,\"90\":1,\"91\":1,\"96\":1,\"97\":1,\"104\":3,\"112\":6,\"116\":2,\"123\":3,\"156\":1,\"161\":1,\"174\":1,\"175\":1,\"176\":1,\"182\":1,\"184\":1,\"207\":3,\"218\":1,\"232\":1,\"233\":1,\"242\":3,\"270\":1,\"280\":5,\"294\":1,\"315\":1,\"321\":1,\"326\":1}}],[\"trial\",{\"1\":{\"254\":3}}],[\"triggers\",{\"1\":{\"214\":2}}],[\"trigger\",{\"1\":{\"212\":2,\"218\":1}}],[\"triggering\",{\"1\":{\"211\":1,\"213\":1}}],[\"triggered\",{\"1\":{\"48\":1,\"114\":1,\"126\":1,\"136\":1,\"212\":3,\"213\":2,\"214\":2}}],[\"trim\",{\"1\":{\"147\":1,\"242\":1}}],[\"tried\",{\"1\":{\"74\":1,\"105\":1,\"124\":1}}],[\"trying\",{\"1\":{\"36\":1,\"39\":1}}],[\"try\",{\"1\":{\"30\":1,\"32\":3,\"36\":4,\"37\":1,\"39\":1,\"40\":2,\"82\":1,\"91\":1,\"104\":3,\"105\":3,\"114\":3,\"123\":3,\"126\":2,\"127\":1,\"129\":3,\"139\":4,\"160\":1,\"164\":1,\"176\":3,\"193\":1,\"242\":2,\"256\":1,\"276\":1,\"281\":1}}],[\"traditional\",{\"1\":{\"312\":1,\"321\":1}}],[\"travis\",{\"1\":{\"285\":1}}],[\"traverse\",{\"1\":{\"156\":2,\"165\":1,\"241\":1}}],[\"traversed\",{\"1\":{\"101\":1,\"113\":1,\"123\":1}}],[\"traversing\",{\"1\":{\"100\":1,\"128\":1,\"175\":2}}],[\"traversal\",{\"1\":{\"99\":1,\"101\":1}}],[\"tracked\",{\"1\":{\"179\":1}}],[\"tracks\",{\"0\":{\"160\":1},\"1\":{\"159\":1}}],[\"track\",{\"1\":{\"159\":1,\"179\":1}}],[\"tracking\",{\"1\":{\"4\":1,\"160\":1}}],[\"tracing\",{\"1\":{\"156\":1,\"182\":1}}],[\"traces\",{\"1\":{\"180\":1}}],[\"traced\",{\"1\":{\"114\":1,\"179\":1,\"180\":1}}],[\"trace\",{\"1\":{\"86\":1,\"100\":1}}],[\"traffic\",{\"1\":{\"69\":3,\"70\":6,\"210\":2,\"211\":2,\"212\":4,\"225\":1,\"317\":4}}],[\"transient\",{\"1\":{\"294\":1}}],[\"transition\",{\"1\":{\"218\":1}}],[\"transit\",{\"1\":{\"97\":1}}],[\"transmit\",{\"1\":{\"214\":1}}],[\"transmitting\",{\"1\":{\"211\":1}}],[\"transmitted\",{\"1\":{\"195\":1,\"214\":1}}],[\"transformdeferred\",{\"1\":{\"221\":3}}],[\"transform\",{\"1\":{\"214\":1}}],[\"transformer\",{\"1\":{\"214\":1}}],[\"transformmap\",{\"1\":{\"180\":1}}],[\"transformation\",{\"1\":{\"133\":1,\"281\":1}}],[\"transferred\",{\"1\":{\"248\":1}}],[\"transferring\",{\"1\":{\"247\":1,\"248\":1}}],[\"transfer\",{\"1\":{\"39\":1,\"65\":2,\"247\":1,\"250\":1,\"253\":3,\"299\":1}}],[\"translator\",{\"1\":{\"35\":1}}],[\"transactional\",{\"1\":{\"78\":1,\"109\":1,\"165\":1}}],[\"transactioncontextlocal\",{\"1\":{\"39\":1}}],[\"transactions\",{\"0\":{\"27\":1,\"28\":1},\"1\":{\"29\":2,\"33\":1,\"247\":1,\"274\":1,\"280\":2,\"321\":1}}],[\"transaction\",{\"0\":{\"34\":1,\"35\":1,\"272\":1,\"283\":1},\"1\":{\"4\":3,\"33\":2,\"34\":3,\"36\":1,\"39\":3,\"40\":2,\"43\":2,\"268\":1,\"274\":3,\"275\":4,\"276\":4,\"277\":1,\"280\":2,\"283\":2,\"284\":4,\"285\":5,\"288\":2,\"321\":1}}],[\"tab\",{\"1\":{\"333\":1}}],[\"tablemap\",{\"1\":{\"293\":1}}],[\"tables\",{\"1\":{\"80\":2,\"82\":1,\"83\":1,\"173\":1}}],[\"table\",{\"1\":{\"43\":2,\"48\":1,\"80\":2,\"81\":1,\"82\":2,\"83\":2,\"173\":2,\"175\":3,\"179\":1,\"226\":4,\"293\":1,\"300\":1,\"321\":1}}],[\"tac\",{\"1\":{\"281\":1,\"284\":4,\"287\":1,\"288\":2}}],[\"talk\",{\"1\":{\"207\":1,\"275\":1,\"286\":1}}],[\"tar\",{\"1\":{\"293\":1}}],[\"target\",{\"1\":{\"172\":1,\"178\":1,\"201\":1}}],[\"tars\",{\"1\":{\"80\":2,\"87\":2,\"281\":1}}],[\"taking\",{\"1\":{\"128\":1}}],[\"take\",{\"0\":{\"79\":1,\"82\":1,\"143\":1},\"1\":{\"48\":3,\"70\":1,\"82\":1,\"87\":1,\"88\":1,\"91\":1,\"92\":1,\"97\":2,\"100\":2,\"104\":1,\"120\":2,\"123\":1,\"126\":1,\"172\":1,\"173\":1,\"177\":1,\"181\":1,\"182\":1,\"184\":1,\"200\":1,\"207\":1,\"214\":1,\"309\":1,\"312\":1,\"320\":1,\"326\":1}}],[\"takes\",{\"0\":{\"195\":1},\"1\":{\"30\":1,\"105\":1,\"212\":1,\"277\":1}}],[\"tailmap\",{\"1\":{\"89\":1}}],[\"tasks\",{\"1\":{\"35\":1,\"81\":1,\"254\":1,\"281\":1}}],[\"task\",{\"1\":{\"30\":1,\"33\":4,\"48\":1,\"100\":1,\"105\":2,\"174\":3,\"175\":2,\"176\":1,\"254\":1}}],[\"tag\",{\"1\":{\"4\":1,\"237\":3,\"294\":1}}],[\"t\",{\"1\":{\"29\":1,\"30\":1,\"32\":3,\"33\":1,\"40\":2,\"42\":1,\"48\":2,\"78\":1,\"82\":1,\"86\":3,\"87\":1,\"106\":1,\"124\":1,\"126\":2,\"129\":1,\"135\":2,\"137\":2,\"139\":4,\"179\":1,\"183\":1,\"184\":3,\"192\":1,\"200\":2,\"217\":1,\"221\":4,\"256\":1,\"280\":1,\"281\":1,\"305\":1,\"309\":1,\"316\":1,\"320\":1,\"328\":4}}],[\"tianyi\",{\"1\":{\"322\":2}}],[\"tianye\",{\"1\":{\"25\":1}}],[\"title\",{\"1\":{\"293\":1}}],[\"timing\",{\"1\":{\"285\":1}}],[\"timetamp\",{\"1\":{\"147\":3}}],[\"time++\",{\"1\":{\"105\":1}}],[\"timed\",{\"1\":{\"48\":4,\"100\":1,\"174\":1}}],[\"timeunit\",{\"1\":{\"35\":2,\"36\":2,\"77\":1,\"100\":2,\"104\":2,\"105\":2,\"174\":1,\"221\":1}}],[\"timestamps\",{\"1\":{\"200\":1}}],[\"timestamp\",{\"1\":{\"81\":1,\"147\":2,\"180\":2,\"197\":1,\"198\":2,\"200\":6,\"226\":1}}],[\"times\",{\"1\":{\"30\":1,\"33\":2,\"91\":1,\"104\":2,\"105\":2,\"124\":1,\"172\":1,\"183\":1,\"184\":1,\"210\":1,\"211\":2,\"213\":1}}],[\"timeoutms\",{\"1\":{\"280\":1}}],[\"timeout=\",{\"1\":{\"270\":1}}],[\"timeoutexception\",{\"1\":{\"221\":1}}],[\"timeoutduration\",{\"1\":{\"218\":1}}],[\"timeoutdurationrate\",{\"1\":{\"218\":1}}],[\"timeouttime\",{\"1\":{\"100\":3}}],[\"timeout\",{\"1\":{\"30\":3,\"33\":2,\"82\":1,\"92\":4,\"93\":3,\"100\":4,\"149\":1,\"151\":3,\"155\":2,\"172\":3,\"183\":3,\"184\":9,\"185\":4,\"211\":1,\"218\":2,\"219\":3,\"220\":2,\"221\":4,\"276\":1,\"285\":1}}],[\"timeouts\",{\"0\":{\"30\":1}}],[\"time\",{\"0\":{\"98\":1},\"1\":{\"21\":1,\"24\":1,\"33\":2,\"43\":2,\"48\":3,\"86\":3,\"91\":4,\"96\":1,\"99\":4,\"100\":4,\"101\":3,\"104\":2,\"105\":5,\"110\":1,\"114\":1,\"120\":1,\"131\":3,\"133\":1,\"134\":1,\"151\":2,\"164\":2,\"171\":1,\"172\":2,\"173\":1,\"174\":1,\"179\":1,\"180\":1,\"183\":2,\"184\":1,\"199\":1,\"200\":5,\"210\":1,\"211\":10,\"212\":9,\"213\":3,\"214\":3,\"217\":1,\"218\":3,\"219\":5,\"220\":1,\"225\":1,\"226\":2,\"284\":1,\"288\":1,\"294\":1,\"308\":1,\"319\":1}}],[\"tinyint\",{\"1\":{\"226\":1}}],[\"ting\",{\"1\":{\"25\":1}}],[\"tier\",{\"0\":{\"134\":1,\"135\":1,\"137\":1},\"1\":{\"135\":1}}],[\"tips\",{\"0\":{\"119\":1}}],[\"ticket\",{\"1\":{\"38\":1}}],[\"ted\",{\"1\":{\"256\":1}}],[\"terms\",{\"1\":{\"254\":1,\"283\":1,\"321\":1}}],[\"team\",{\"0\":{\"272\":1},\"1\":{\"254\":2,\"272\":1}}],[\"tease\",{\"1\":{\"182\":1}}],[\"teasing\",{\"1\":{\"179\":2}}],[\"ten\",{\"1\":{\"200\":1}}],[\"tencent\",{\"1\":{\"21\":1,\"24\":1,\"322\":1}}],[\"temporarily\",{\"1\":{\"179\":1}}],[\"temporary\",{\"1\":{\"173\":1}}],[\"temp\",{\"1\":{\"173\":5,\"175\":2}}],[\"template\",{\"1\":{\"84\":1,\"97\":1,\"182\":1}}],[\"tests\",{\"1\":{\"33\":4}}],[\"testing\",{\"1\":{\"29\":1,\"32\":1,\"219\":1,\"247\":1}}],[\"test\",{\"0\":{\"58\":1,\"60\":1,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"73\":1,\"74\":1},\"1\":{\"22\":1,\"48\":1,\"54\":1,\"58\":1,\"60\":1,\"61\":3,\"63\":1,\"64\":13,\"65\":7,\"68\":1,\"70\":1,\"73\":2,\"74\":1,\"122\":3,\"123\":4,\"129\":2,\"176\":8,\"179\":1,\"193\":1,\"219\":11,\"220\":2,\"317\":1,\"326\":1,\"329\":5}}],[\"text\",{\"1\":{\"16\":1}}],[\"technical\",{\"1\":{\"8\":1,\"15\":1,\"252\":1,\"254\":1}}],[\"technology\",{\"1\":{\"2\":1,\"14\":1,\"321\":2}}],[\"twice\",{\"1\":{\"104\":1}}],[\"two\",{\"0\":{\"62\":1},\"1\":{\"16\":1,\"40\":1,\"48\":1,\"64\":1,\"65\":1,\"68\":2,\"69\":2,\"74\":1,\"80\":1,\"81\":1,\"84\":1,\"85\":1,\"91\":2,\"97\":1,\"98\":1,\"103\":1,\"119\":2,\"122\":1,\"124\":1,\"131\":3,\"133\":1,\"134\":1,\"173\":1,\"174\":1,\"189\":1,\"198\":1,\"199\":1,\"200\":2,\"201\":1,\"210\":1,\"212\":1,\"219\":1,\"240\":1,\"276\":1,\"290\":1,\"294\":1,\"308\":1,\"312\":1,\"319\":1}}],[\"twelve\",{\"1\":{\"16\":1}}],[\"th\",{\"1\":{\"328\":2}}],[\"thumbnailator\",{\"1\":{\"328\":1}}],[\"thumbnail\",{\"1\":{\"324\":4,\"328\":2}}],[\"thunder\",{\"1\":{\"322\":1}}],[\"thus\",{\"1\":{\"195\":1,\"307\":1,\"318\":1}}],[\"threshold\",{\"1\":{\"199\":1,\"211\":6,\"212\":3,\"213\":7,\"214\":16,\"218\":2,\"219\":1}}],[\"threw\",{\"1\":{\"164\":2}}],[\"three\",{\"1\":{\"82\":1,\"87\":1,\"99\":1,\"134\":2,\"177\":1,\"184\":1,\"211\":1,\"212\":2,\"213\":1,\"214\":3,\"218\":1,\"277\":1,\"304\":1}}],[\"threadutils\",{\"1\":{\"104\":1,\"105\":2}}],[\"threadlocalutil\",{\"1\":{\"114\":5}}],[\"threadlocal\",{\"0\":{\"39\":1},\"1\":{\"39\":2,\"40\":2,\"180\":1,\"280\":1}}],[\"threadpoolexecutor\",{\"1\":{\"35\":3,\"36\":3,\"77\":1,\"104\":1}}],[\"threadpool\",{\"1\":{\"35\":1,\"36\":1}}],[\"thread\",{\"1\":{\"33\":3,\"35\":3,\"36\":4,\"37\":1,\"40\":1,\"43\":1,\"48\":10,\"65\":2,\"92\":2,\"100\":5,\"101\":1,\"104\":1,\"105\":2,\"123\":1,\"155\":2,\"199\":1,\"211\":1,\"214\":1,\"220\":1,\"268\":1,\"276\":1,\"284\":1,\"317\":1}}],[\"threadsize\",{\"1\":{\"35\":8,\"104\":3}}],[\"threads\",{\"1\":{\"33\":1,\"48\":1,\"61\":3,\"64\":18,\"65\":2,\"104\":1,\"211\":2,\"214\":4,\"219\":1}}],[\"throttling\",{\"1\":{\"214\":3,\"219\":1}}],[\"throughput\",{\"1\":{\"211\":1}}],[\"through\",{\"0\":{\"232\":1,\"242\":1},\"1\":{\"48\":2,\"68\":2,\"73\":3,\"80\":1,\"81\":2,\"82\":1,\"83\":2,\"85\":1,\"96\":1,\"100\":2,\"101\":2,\"106\":1,\"114\":1,\"124\":1,\"137\":1,\"138\":1,\"156\":1,\"165\":1,\"173\":1,\"176\":1,\"177\":2,\"179\":1,\"189\":1,\"211\":2,\"212\":2,\"214\":1,\"221\":1,\"226\":1,\"231\":1,\"232\":1,\"235\":1,\"293\":1,\"298\":2,\"317\":1,\"322\":1}}],[\"thrown\",{\"1\":{\"220\":1,\"234\":1}}],[\"throw\",{\"0\":{\"37\":1},\"1\":{\"36\":1,\"82\":1,\"97\":1,\"104\":2,\"105\":1,\"111\":1,\"113\":1,\"123\":2,\"126\":2,\"139\":2,\"151\":1,\"156\":1,\"165\":1,\"197\":1,\"214\":1,\"220\":1,\"221\":2,\"242\":5}}],[\"throwable\",{\"1\":{\"36\":4,\"114\":1,\"123\":1,\"126\":1,\"197\":3,\"214\":8,\"221\":3}}],[\"throws\",{\"1\":{\"36\":1,\"104\":1,\"126\":2,\"127\":4,\"129\":1,\"136\":1,\"139\":2,\"166\":1,\"220\":1,\"234\":3,\"237\":1,\"241\":1,\"242\":1}}],[\"though\",{\"1\":{\"308\":1,\"319\":1}}],[\"thought\",{\"1\":{\"48\":1,\"124\":1,\"290\":1}}],[\"thoughts\",{\"1\":{\"32\":1}}],[\"thorough\",{\"1\":{\"130\":1}}],[\"those\",{\"1\":{\"16\":1,\"31\":1,\"46\":1,\"78\":1,\"247\":1}}],[\"than\",{\"0\":{\"127\":1},\"1\":{\"33\":2,\"80\":1,\"89\":1,\"90\":1,\"175\":1,\"193\":1,\"210\":1,\"211\":2,\"212\":3,\"213\":1,\"214\":1,\"219\":1,\"221\":1,\"222\":1,\"235\":1,\"290\":1}}],[\"thank\",{\"1\":{\"28\":1,\"46\":1,\"272\":1,\"290\":2}}],[\"that\",{\"0\":{\"195\":1},\"1\":{\"7\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"39\":1,\"40\":1,\"43\":1,\"46\":1,\"48\":11,\"68\":1,\"69\":3,\"70\":4,\"71\":1,\"72\":4,\"73\":1,\"74\":4,\"77\":1,\"80\":1,\"81\":3,\"84\":1,\"85\":1,\"86\":2,\"87\":1,\"89\":1,\"91\":5,\"92\":1,\"97\":1,\"98\":1,\"100\":7,\"101\":3,\"105\":3,\"106\":2,\"108\":1,\"109\":1,\"110\":2,\"111\":1,\"112\":2,\"118\":1,\"119\":3,\"120\":2,\"121\":1,\"123\":5,\"124\":5,\"126\":1,\"128\":1,\"129\":1,\"131\":2,\"132\":2,\"133\":2,\"134\":1,\"156\":2,\"161\":1,\"162\":1,\"164\":2,\"165\":1,\"173\":1,\"176\":1,\"179\":15,\"180\":1,\"182\":4,\"184\":1,\"185\":4,\"187\":1,\"189\":2,\"191\":1,\"195\":4,\"197\":2,\"198\":2,\"199\":3,\"200\":1,\"207\":4,\"210\":5,\"211\":8,\"212\":7,\"213\":5,\"214\":13,\"217\":1,\"219\":1,\"220\":2,\"235\":1,\"247\":1,\"253\":3,\"254\":1,\"256\":1,\"275\":2,\"289\":1,\"290\":2,\"297\":1,\"305\":1,\"306\":2,\"308\":1,\"316\":1,\"319\":1,\"321\":5}}],[\"third\",{\"1\":{\"91\":1,\"101\":1,\"139\":1,\"197\":1,\"201\":1,\"211\":1,\"268\":1}}],[\"thinking\",{\"0\":{\"99\":1,\"124\":1},\"1\":{\"100\":1,\"101\":1,\"129\":1}}],[\"think\",{\"1\":{\"80\":1,\"98\":1,\"99\":1,\"128\":1,\"129\":2,\"212\":1,\"286\":1,\"307\":1,\"317\":1,\"318\":1}}],[\"thinks\",{\"1\":{\"30\":1}}],[\"thing\",{\"1\":{\"48\":1,\"123\":2,\"135\":1,\"306\":1}}],[\"things\",{\"1\":{\"6\":1,\"7\":1,\"48\":1,\"133\":1,\"184\":1,\"241\":1,\"306\":1,\"321\":2}}],[\"this\",{\"0\":{\"46\":1,\"98\":1,\"199\":1},\"1\":{\"14\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":10,\"35\":3,\"36\":2,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"43\":6,\"48\":22,\"72\":1,\"73\":1,\"74\":1,\"77\":1,\"81\":1,\"82\":1,\"83\":2,\"85\":1,\"86\":7,\"91\":2,\"92\":5,\"96\":1,\"97\":4,\"98\":3,\"100\":10,\"101\":5,\"104\":12,\"105\":6,\"106\":1,\"109\":1,\"110\":1,\"111\":2,\"112\":7,\"114\":4,\"118\":1,\"120\":3,\"121\":1,\"122\":1,\"123\":3,\"124\":2,\"126\":1,\"129\":1,\"131\":1,\"132\":1,\"134\":1,\"137\":1,\"156\":7,\"159\":1,\"161\":4,\"162\":1,\"164\":5,\"165\":1,\"166\":1,\"174\":1,\"179\":8,\"180\":3,\"182\":3,\"183\":2,\"184\":2,\"185\":2,\"187\":1,\"189\":3,\"195\":1,\"197\":4,\"198\":1,\"199\":1,\"207\":12,\"209\":3,\"210\":4,\"211\":4,\"212\":3,\"213\":5,\"214\":6,\"218\":3,\"226\":1,\"234\":1,\"235\":7,\"254\":2,\"272\":1,\"280\":2,\"288\":2,\"290\":5,\"305\":1,\"306\":1,\"308\":3,\"309\":1,\"316\":1,\"317\":3,\"319\":3,\"320\":1,\"326\":2,\"328\":2}}],[\"theory\",{\"1\":{\"69\":1}}],[\"thenapply\",{\"1\":{\"237\":1}}],[\"then\",{\"1\":{\"48\":11,\"56\":1,\"73\":1,\"80\":1,\"81\":1,\"87\":1,\"92\":2,\"93\":1,\"98\":1,\"101\":2,\"105\":1,\"121\":1,\"136\":1,\"156\":3,\"164\":1,\"165\":1,\"172\":2,\"177\":1,\"185\":1,\"200\":3,\"207\":2,\"209\":1,\"212\":2,\"214\":2,\"226\":1,\"230\":1,\"236\":1,\"238\":1,\"240\":1,\"241\":2,\"243\":1,\"253\":1,\"280\":1,\"307\":1,\"312\":1,\"316\":3,\"318\":1,\"321\":2}}],[\"therefore\",{\"1\":{\"42\":1,\"48\":2,\"86\":1,\"199\":1}}],[\"there\",{\"0\":{\"38\":1,\"310\":1},\"1\":{\"36\":1,\"37\":1,\"40\":1,\"43\":1,\"48\":6,\"69\":1,\"70\":1,\"74\":1,\"80\":1,\"81\":2,\"82\":1,\"86\":2,\"87\":2,\"99\":3,\"100\":1,\"101\":4,\"104\":1,\"105\":6,\"106\":1,\"110\":3,\"112\":2,\"113\":1,\"119\":1,\"120\":1,\"121\":3,\"123\":1,\"124\":1,\"127\":1,\"129\":2,\"164\":5,\"174\":1,\"177\":2,\"182\":2,\"187\":1,\"189\":1,\"195\":1,\"199\":2,\"200\":1,\"201\":1,\"210\":2,\"211\":2,\"214\":2,\"234\":1,\"248\":1,\"278\":1,\"286\":1,\"290\":2,\"306\":1,\"309\":1,\"320\":1,\"321\":1,\"328\":1}}],[\"theme\",{\"1\":{\"183\":1}}],[\"themselves\",{\"0\":{\"37\":1},\"1\":{\"91\":1}}],[\"them\",{\"1\":{\"32\":1,\"83\":2,\"86\":2,\"91\":1,\"117\":1,\"119\":1,\"121\":1,\"187\":1,\"214\":1,\"308\":2,\"319\":2,\"328\":1}}],[\"these\",{\"0\":{\"41\":1},\"1\":{\"32\":1,\"48\":2,\"97\":1,\"98\":1,\"101\":3,\"104\":1,\"110\":1,\"112\":1,\"118\":1,\"119\":1,\"129\":2,\"131\":1,\"134\":1,\"212\":1,\"321\":1}}],[\"they\",{\"1\":{\"16\":1,\"48\":2,\"107\":1,\"177\":1,\"199\":1,\"210\":1,\"213\":1,\"221\":1,\"248\":1,\"253\":2,\"308\":1,\"319\":1,\"321\":1}}],[\"their\",{\"1\":{\"16\":1,\"42\":1,\"43\":1,\"86\":2,\"87\":2,\"91\":1,\"98\":1,\"122\":1,\"139\":1,\"164\":1,\"182\":1,\"209\":1,\"305\":1}}],[\"the\",{\"0\":{\"19\":1,\"37\":1,\"52\":1,\"53\":1,\"54\":1,\"60\":1,\"63\":1,\"66\":1,\"68\":1,\"79\":2,\"82\":2,\"98\":1,\"99\":1,\"105\":1,\"110\":1,\"116\":1,\"117\":1,\"147\":1,\"148\":1,\"149\":1,\"153\":1,\"159\":2,\"160\":2,\"189\":1,\"191\":1,\"194\":1,\"195\":4,\"196\":2,\"225\":1,\"232\":3,\"241\":1,\"242\":2,\"255\":3,\"269\":1,\"272\":2,\"285\":1,\"302\":1,\"313\":1,\"316\":1},\"1\":{\"1\":1,\"4\":1,\"5\":1,\"6\":8,\"7\":2,\"8\":9,\"9\":3,\"14\":6,\"15\":3,\"16\":5,\"22\":2,\"25\":3,\"28\":5,\"29\":5,\"30\":11,\"31\":1,\"32\":8,\"33\":27,\"35\":3,\"36\":3,\"37\":2,\"38\":4,\"39\":2,\"40\":5,\"42\":3,\"43\":8,\"46\":3,\"48\":119,\"54\":1,\"56\":7,\"57\":7,\"58\":1,\"59\":3,\"60\":1,\"61\":5,\"62\":1,\"63\":1,\"64\":9,\"65\":6,\"66\":4,\"68\":15,\"69\":23,\"70\":18,\"71\":1,\"72\":17,\"73\":6,\"74\":8,\"77\":7,\"78\":4,\"80\":16,\"81\":27,\"82\":19,\"83\":16,\"84\":9,\"85\":25,\"86\":25,\"87\":22,\"88\":6,\"89\":13,\"90\":20,\"91\":35,\"92\":18,\"93\":5,\"96\":9,\"97\":12,\"98\":18,\"99\":16,\"100\":51,\"101\":40,\"103\":7,\"104\":47,\"105\":39,\"106\":16,\"107\":1,\"108\":4,\"109\":6,\"110\":6,\"111\":1,\"112\":41,\"113\":15,\"114\":22,\"116\":9,\"117\":17,\"118\":22,\"119\":14,\"120\":13,\"121\":14,\"122\":14,\"123\":36,\"124\":16,\"125\":2,\"126\":15,\"127\":3,\"128\":14,\"129\":12,\"130\":7,\"131\":13,\"132\":13,\"133\":8,\"134\":2,\"135\":16,\"136\":6,\"137\":9,\"138\":4,\"139\":26,\"141\":1,\"142\":4,\"147\":3,\"151\":15,\"154\":1,\"155\":7,\"156\":54,\"157\":8,\"159\":16,\"160\":6,\"161\":27,\"162\":16,\"164\":40,\"165\":19,\"166\":10,\"169\":3,\"171\":10,\"172\":24,\"173\":23,\"174\":6,\"175\":14,\"176\":14,\"177\":22,\"178\":5,\"179\":53,\"180\":29,\"181\":4,\"182\":37,\"183\":21,\"184\":24,\"185\":28,\"187\":6,\"189\":14,\"191\":8,\"192\":6,\"193\":4,\"195\":30,\"197\":23,\"198\":12,\"199\":13,\"200\":28,\"201\":7,\"202\":4,\"203\":2,\"204\":1,\"205\":4,\"206\":8,\"207\":13,\"209\":11,\"210\":21,\"211\":64,\"212\":59,\"213\":55,\"214\":79,\"217\":4,\"218\":11,\"219\":15,\"220\":6,\"221\":4,\"222\":5,\"224\":2,\"225\":4,\"226\":16,\"229\":4,\"230\":7,\"231\":3,\"232\":2,\"234\":15,\"235\":12,\"236\":2,\"237\":4,\"240\":6,\"241\":11,\"242\":31,\"243\":8,\"247\":6,\"248\":4,\"249\":6,\"250\":3,\"251\":3,\"252\":7,\"253\":24,\"254\":26,\"256\":2,\"268\":1,\"270\":2,\"272\":3,\"275\":8,\"276\":10,\"277\":2,\"278\":2,\"280\":17,\"281\":8,\"282\":1,\"283\":1,\"284\":2,\"285\":6,\"286\":4,\"287\":1,\"288\":3,\"290\":20,\"292\":2,\"293\":3,\"294\":2,\"295\":1,\"297\":4,\"298\":5,\"299\":1,\"300\":3,\"304\":1,\"305\":9,\"306\":10,\"308\":12,\"309\":10,\"311\":1,\"312\":9,\"314\":1,\"315\":2,\"316\":8,\"317\":13,\"319\":12,\"320\":10,\"321\":16,\"322\":6,\"324\":6,\"326\":7,\"327\":2,\"328\":14,\"329\":6}}],[\"tom\",{\"1\":{\"256\":1}}],[\"tomillis\",{\"1\":{\"221\":1}}],[\"together\",{\"1\":{\"253\":1,\"286\":1,\"290\":1,\"295\":1}}],[\"torun\",{\"1\":{\"221\":2}}],[\"top\",{\"1\":{\"214\":1,\"321\":1}}],[\"topics\",{\"1\":{\"187\":1}}],[\"tonumber\",{\"1\":{\"200\":6}}],[\"token\",{\"1\":{\"189\":4,\"191\":3,\"197\":1,\"198\":1,\"199\":4,\"200\":5}}],[\"tokens+\",{\"1\":{\"200\":1}}],[\"tokensleft\",{\"1\":{\"197\":2}}],[\"tokens\",{\"1\":{\"189\":1,\"197\":1,\"198\":1,\"199\":3,\"200\":18,\"218\":3,\"219\":4}}],[\"tos\",{\"1\":{\"182\":1}}],[\"tostring\",{\"1\":{\"104\":1,\"105\":1,\"121\":1,\"183\":1,\"197\":1,\"236\":1}}],[\"touppercase\",{\"1\":{\"147\":1}}],[\"toarray\",{\"1\":{\"147\":1}}],[\"toepochmilli\",{\"1\":{\"147\":2}}],[\"toinstant\",{\"1\":{\"147\":2}}],[\"took\",{\"1\":{\"219\":1}}],[\"tool\",{\"1\":{\"120\":1,\"219\":1,\"247\":1,\"289\":1,\"290\":1}}],[\"tools\",{\"1\":{\"4\":2,\"247\":2}}],[\"too\",{\"1\":{\"91\":1,\"197\":3,\"210\":1,\"214\":4}}],[\"total=310mb\",{\"1\":{\"155\":1}}],[\"totalweight\",{\"1\":{\"90\":4,\"91\":3,\"177\":5}}],[\"total\",{\"1\":{\"90\":4,\"91\":1,\"177\":4}}],[\"told\",{\"1\":{\"309\":1,\"320\":1}}],[\"tolerance\",{\"1\":{\"212\":1,\"217\":2,\"225\":1}}],[\"tolerant\",{\"1\":{\"22\":1,\"253\":1}}],[\"tolist\",{\"1\":{\"86\":1,\"147\":1,\"165\":1,\"179\":1,\"207\":1,\"214\":4}}],[\"tojson\",{\"1\":{\"79\":2,\"80\":2,\"81\":2,\"82\":1,\"97\":1,\"98\":1,\"113\":5,\"117\":1,\"165\":1}}],[\"todatabuffers\",{\"1\":{\"93\":1,\"185\":1}}],[\"today\",{\"1\":{\"33\":1,\"74\":1,\"77\":1,\"106\":1}}],[\"todo\",{\"1\":{\"78\":1,\"113\":1,\"114\":1}}],[\"to\",{\"0\":{\"42\":1,\"46\":2,\"51\":1,\"62\":1,\"69\":1,\"79\":1,\"80\":1,\"105\":1,\"114\":1,\"116\":1,\"153\":2,\"159\":2,\"188\":1,\"189\":1,\"195\":1,\"225\":1,\"226\":1,\"231\":1,\"240\":1,\"300\":2,\"307\":1,\"318\":1,\"322\":1},\"1\":{\"2\":1,\"4\":3,\"5\":1,\"7\":3,\"9\":4,\"14\":1,\"16\":4,\"22\":3,\"28\":2,\"29\":4,\"30\":2,\"31\":1,\"32\":3,\"33\":3,\"35\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":2,\"42\":4,\"43\":2,\"46\":3,\"48\":31,\"56\":4,\"58\":1,\"59\":1,\"62\":1,\"65\":1,\"68\":3,\"69\":7,\"70\":8,\"71\":1,\"72\":7,\"73\":2,\"74\":3,\"77\":2,\"78\":3,\"80\":4,\"81\":12,\"82\":11,\"83\":7,\"84\":3,\"85\":4,\"86\":14,\"87\":5,\"88\":1,\"89\":4,\"90\":1,\"91\":7,\"92\":6,\"93\":2,\"96\":1,\"97\":4,\"98\":6,\"99\":3,\"100\":12,\"101\":8,\"103\":1,\"104\":16,\"105\":10,\"106\":10,\"107\":2,\"108\":1,\"109\":2,\"110\":2,\"112\":4,\"113\":4,\"114\":4,\"116\":4,\"117\":3,\"118\":7,\"119\":3,\"120\":5,\"121\":7,\"122\":4,\"123\":5,\"124\":7,\"125\":1,\"126\":2,\"127\":1,\"129\":5,\"131\":7,\"132\":1,\"133\":2,\"135\":1,\"136\":1,\"137\":1,\"139\":4,\"141\":1,\"142\":1,\"147\":2,\"151\":4,\"154\":1,\"155\":2,\"156\":20,\"157\":2,\"159\":5,\"160\":3,\"161\":1,\"162\":6,\"164\":26,\"165\":11,\"166\":5,\"169\":2,\"171\":2,\"172\":8,\"173\":3,\"174\":2,\"175\":2,\"176\":2,\"177\":6,\"178\":1,\"179\":11,\"180\":9,\"182\":10,\"183\":4,\"184\":4,\"185\":6,\"189\":2,\"191\":2,\"192\":3,\"193\":1,\"195\":3,\"197\":2,\"198\":2,\"199\":3,\"200\":4,\"201\":6,\"202\":1,\"205\":1,\"206\":2,\"207\":6,\"209\":5,\"210\":5,\"211\":16,\"212\":17,\"213\":12,\"214\":20,\"217\":4,\"218\":6,\"219\":5,\"220\":2,\"221\":10,\"224\":4,\"225\":5,\"226\":5,\"229\":1,\"230\":3,\"234\":7,\"235\":3,\"236\":1,\"237\":1,\"240\":4,\"241\":1,\"242\":7,\"243\":3,\"247\":5,\"248\":3,\"249\":1,\"250\":1,\"251\":3,\"252\":3,\"253\":11,\"254\":4,\"256\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"274\":2,\"275\":5,\"276\":3,\"277\":2,\"278\":3,\"280\":14,\"281\":3,\"282\":2,\"283\":1,\"284\":1,\"285\":2,\"286\":1,\"288\":2,\"290\":15,\"292\":6,\"293\":4,\"294\":2,\"295\":1,\"297\":1,\"299\":1,\"303\":1,\"304\":2,\"305\":10,\"306\":3,\"307\":2,\"308\":10,\"309\":5,\"312\":4,\"315\":3,\"316\":4,\"317\":7,\"318\":2,\"319\":10,\"320\":5,\"321\":7,\"322\":6,\"324\":4,\"325\":2,\"326\":3,\"327\":1,\"328\":10,\"329\":4}}],[\"oos\",{\"1\":{\"322\":1}}],[\"oh\",{\"1\":{\"290\":1}}],[\"occasionally\",{\"1\":{\"322\":1}}],[\"occupied\",{\"1\":{\"211\":1}}],[\"occurring\",{\"1\":{\"322\":1}}],[\"occurred\",{\"1\":{\"48\":1}}],[\"occurrences\",{\"1\":{\"32\":1}}],[\"occur\",{\"1\":{\"248\":1}}],[\"occurs\",{\"0\":{\"32\":1},\"1\":{\"36\":1,\"221\":1,\"276\":1}}],[\"october\",{\"1\":{\"302\":1}}],[\"oc\",{\"1\":{\"166\":3}}],[\"oss<\",{\"1\":{\"326\":2}}],[\"oss\",{\"1\":{\"322\":4,\"326\":6,\"328\":1}}],[\"oschina\",{\"1\":{\"244\":1}}],[\"os\",{\"1\":{\"155\":1}}],[\"obs\",{\"1\":{\"322\":2,\"324\":2,\"329\":1}}],[\"observability\",{\"1\":{\"274\":1}}],[\"observe\",{\"1\":{\"162\":1}}],[\"observer\",{\"1\":{\"80\":1}}],[\"obey\",{\"1\":{\"254\":1}}],[\"obviously\",{\"1\":{\"123\":1}}],[\"obtains\",{\"1\":{\"161\":1,\"172\":1,\"199\":1}}],[\"obtainselectordata\",{\"1\":{\"85\":1,\"172\":1,\"182\":1}}],[\"obtainauthdata\",{\"1\":{\"151\":1}}],[\"obtain\",{\"1\":{\"85\":1,\"89\":1,\"105\":1,\"151\":1,\"165\":1,\"172\":2,\"173\":1,\"182\":2,\"183\":4,\"184\":3,\"198\":1}}],[\"obtainruledata\",{\"1\":{\"85\":1,\"172\":1,\"182\":1}}],[\"obtainplugindata\",{\"1\":{\"85\":1,\"172\":1,\"182\":1}}],[\"obtained\",{\"1\":{\"82\":1,\"89\":1,\"90\":1,\"112\":1,\"131\":2,\"156\":1,\"161\":1,\"173\":2,\"182\":1,\"183\":1,\"197\":1,\"198\":1,\"247\":1,\"328\":1}}],[\"obtaining\",{\"0\":{\"147\":1},\"1\":{\"48\":1,\"294\":1}}],[\"objectutil\",{\"1\":{\"294\":1}}],[\"objectholder\",{\"1\":{\"135\":2,\"139\":6}}],[\"object>\",{\"1\":{\"134\":1,\"137\":1}}],[\"objectprovider<configservice>\",{\"1\":{\"166\":1}}],[\"objectprovider<zkclient>\",{\"1\":{\"161\":1}}],[\"objectprovider<list<authdatasubscriber>>\",{\"1\":{\"117\":1,\"161\":1,\"166\":1}}],[\"objectprovider<list<metadatasubscriber>>\",{\"1\":{\"117\":1,\"161\":1,\"166\":1}}],[\"objectprovider<list<soulplugin>>\",{\"1\":{\"86\":1,\"179\":1,\"207\":1}}],[\"objectprovider<plugindatasubscriber>\",{\"1\":{\"117\":1,\"161\":1,\"166\":1}}],[\"objectprovider<websocketconfig>\",{\"1\":{\"117\":1}}],[\"objectprovider\",{\"1\":{\"86\":1}}],[\"objects\",{\"1\":{\"39\":1,\"78\":1,\"79\":1,\"81\":1,\"82\":2,\"85\":2,\"93\":1,\"109\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"137\":1,\"139\":3,\"172\":1,\"182\":2,\"183\":2,\"185\":1,\"195\":3,\"207\":2,\"221\":2,\"237\":2,\"238\":1}}],[\"object\",{\"0\":{\"180\":1},\"1\":{\"36\":2,\"80\":1,\"82\":3,\"92\":1,\"93\":2,\"101\":1,\"118\":1,\"122\":1,\"123\":4,\"124\":2,\"128\":1,\"131\":3,\"132\":2,\"135\":5,\"136\":1,\"137\":4,\"139\":9,\"162\":1,\"165\":1,\"172\":1,\"180\":7,\"181\":1,\"183\":2,\"184\":2,\"185\":3,\"197\":1,\"214\":1,\"221\":2,\"234\":8,\"236\":2,\"237\":2,\"238\":3,\"241\":4,\"242\":3,\"328\":2,\"329\":1}}],[\"o\",{\"1\":{\"48\":6,\"57\":4,\"61\":3,\"64\":18,\"133\":1,\"137\":3,\"139\":4,\"164\":6,\"219\":9}}],[\"otherwise\",{\"1\":{\"101\":1,\"175\":1,\"176\":1,\"177\":1,\"211\":1,\"221\":1}}],[\"other\",{\"0\":{\"98\":1,\"310\":1},\"1\":{\"34\":1,\"48\":1,\"74\":1,\"81\":1,\"85\":1,\"91\":2,\"98\":2,\"103\":1,\"112\":1,\"113\":1,\"119\":1,\"164\":1,\"180\":1,\"185\":1,\"201\":1,\"221\":1,\"254\":1,\"268\":1,\"272\":1,\"274\":1,\"281\":1,\"283\":1,\"305\":1,\"308\":2,\"319\":2,\"322\":1,\"326\":2,\"329\":4}}],[\"others\",{\"1\":{\"7\":1}}],[\"omits\",{\"1\":{\"212\":1}}],[\"omitted\",{\"1\":{\"164\":2,\"241\":1}}],[\"om\",{\"1\":{\"33\":1}}],[\"ourselves\",{\"1\":{\"130\":1}}],[\"our\",{\"1\":{\"33\":4,\"72\":1,\"98\":1,\"100\":3,\"101\":2,\"121\":1,\"123\":1,\"124\":1,\"179\":1,\"211\":1,\"214\":1,\"272\":1,\"308\":1,\"319\":1}}],[\"outstanding\",{\"1\":{\"272\":1}}],[\"outer\",{\"1\":{\"129\":1}}],[\"outputs\",{\"1\":{\"219\":1}}],[\"output\",{\"1\":{\"57\":1,\"66\":1,\"179\":1,\"219\":1}}],[\"out\",{\"1\":{\"16\":1,\"30\":1,\"43\":1,\"48\":4,\"86\":1,\"101\":1,\"104\":2,\"106\":1,\"112\":1,\"121\":1,\"122\":5,\"123\":2,\"124\":1,\"128\":1,\"129\":3,\"147\":1,\"172\":1,\"179\":4,\"182\":2,\"183\":2,\"184\":2,\"187\":1,\"207\":1,\"211\":1,\"226\":1,\"253\":1,\"280\":6,\"284\":1,\"309\":1,\"320\":1}}],[\"opt\",{\"1\":{\"292\":1}}],[\"options\",{\"1\":{\"212\":2}}],[\"option\",{\"1\":{\"182\":1,\"229\":1}}],[\"optional\",{\"1\":{\"39\":1,\"40\":3,\"118\":3,\"162\":2,\"184\":2}}],[\"optimizations\",{\"1\":{\"268\":1}}],[\"optimization\",{\"1\":{\"104\":1,\"302\":1}}],[\"optimizes\",{\"1\":{\"293\":2}}],[\"optimize\",{\"1\":{\"80\":1,\"293\":1,\"312\":1,\"322\":3}}],[\"optimized\",{\"0\":{\"132\":1},\"1\":{\"33\":1,\"131\":1,\"306\":1}}],[\"opportunity\",{\"0\":{\"174\":1}}],[\"opposite\",{\"1\":{\"156\":1}}],[\"operatorenum\",{\"1\":{\"80\":1,\"82\":2}}],[\"operating\",{\"1\":{\"9\":1}}],[\"operational\",{\"1\":{\"256\":1}}],[\"operations\",{\"0\":{\"329\":1},\"1\":{\"29\":1,\"48\":2,\"80\":1,\"81\":1,\"185\":1,\"187\":1,\"247\":1,\"329\":4}}],[\"operation\",{\"0\":{\"48\":1,\"108\":1,\"159\":1},\"1\":{\"4\":1,\"7\":1,\"30\":2,\"82\":1,\"104\":1,\"164\":1,\"200\":1,\"208\":2,\"221\":2,\"225\":1,\"254\":2,\"256\":1,\"308\":1,\"319\":1}}],[\"operates\",{\"1\":{\"162\":1}}],[\"operated\",{\"1\":{\"48\":1,\"249\":1,\"253\":1}}],[\"operate\",{\"1\":{\"9\":1,\"109\":1,\"198\":1,\"329\":1}}],[\"openness\",{\"1\":{\"275\":1}}],[\"opendoc\",{\"1\":{\"263\":1}}],[\"openstream\",{\"1\":{\"139\":1}}],[\"opens\",{\"1\":{\"114\":1}}],[\"opened\",{\"1\":{\"70\":1,\"185\":1}}],[\"opening\",{\"1\":{\"22\":1,\"25\":1,\"121\":1,\"155\":1}}],[\"open\",{\"0\":{\"53\":1,\"309\":1,\"320\":1,\"321\":1,\"322\":1},\"1\":{\"1\":2,\"2\":2,\"3\":1,\"4\":1,\"5\":1,\"8\":1,\"22\":1,\"28\":1,\"48\":2,\"69\":1,\"70\":2,\"86\":1,\"106\":1,\"108\":1,\"114\":2,\"212\":3,\"213\":7,\"218\":6,\"219\":2,\"220\":1,\"225\":1,\"229\":1,\"247\":1,\"252\":2,\"253\":1,\"254\":2,\"272\":1,\"275\":1,\"286\":1,\"302\":1,\"309\":1,\"311\":1,\"317\":1,\"320\":1,\"321\":7,\"322\":2}}],[\"ownership\",{\"1\":{\"90\":1,\"254\":1}}],[\"own\",{\"0\":{\"315\":1},\"1\":{\"30\":1,\"43\":1,\"84\":1,\"86\":1,\"87\":2,\"91\":1,\"128\":1,\"206\":1,\"212\":1,\"270\":1,\"292\":1}}],[\"overriding\",{\"1\":{\"315\":1}}],[\"overrides\",{\"1\":{\"112\":1}}],[\"override\",{\"1\":{\"35\":1,\"36\":1,\"40\":1,\"78\":1,\"80\":1,\"82\":1,\"85\":1,\"86\":1,\"87\":1,\"92\":1,\"97\":2,\"98\":2,\"100\":5,\"104\":2,\"105\":1,\"109\":1,\"111\":2,\"112\":1,\"113\":6,\"118\":5,\"122\":2,\"156\":4,\"162\":2,\"165\":4,\"166\":1,\"207\":1,\"214\":7,\"221\":2,\"235\":2,\"236\":1,\"238\":1,\"241\":1,\"242\":1}}],[\"overtime\",{\"1\":{\"274\":1}}],[\"overload\",{\"1\":{\"293\":1}}],[\"overloaded\",{\"1\":{\"234\":1}}],[\"overly\",{\"1\":{\"38\":1}}],[\"overview\",{\"0\":{\"171\":1},\"1\":{\"134\":1,\"179\":1}}],[\"overwritable\",{\"1\":{\"97\":1}}],[\"overall\",{\"1\":{\"25\":1,\"103\":1,\"105\":1,\"132\":1,\"179\":1,\"195\":1,\"200\":1,\"309\":1,\"320\":1}}],[\"over\",{\"1\":{\"16\":1,\"100\":1,\"124\":1,\"129\":1,\"131\":2,\"134\":1,\"171\":1,\"182\":1,\"185\":1,\"199\":1}}],[\"oldclass\",{\"1\":{\"139\":2}}],[\"oldval\",{\"1\":{\"97\":2}}],[\"old\",{\"1\":{\"6\":2,\"48\":5,\"97\":2,\"101\":1,\"281\":1,\"290\":2}}],[\"oracle\",{\"1\":{\"274\":1,\"284\":1,\"285\":1,\"293\":1,\"335\":1}}],[\"orange\",{\"1\":{\"256\":1}}],[\"ordinary\",{\"1\":{\"121\":1}}],[\"ordered\",{\"1\":{\"89\":1,\"292\":1}}],[\"order\",{\"1\":{\"14\":1,\"16\":1,\"33\":2,\"70\":2,\"73\":2,\"82\":2,\"105\":1,\"106\":1,\"113\":1,\"156\":4,\"179\":4,\"187\":1,\"212\":1,\"214\":1,\"235\":1,\"241\":1,\"242\":1,\"290\":1,\"292\":1,\"308\":1,\"319\":1}}],[\"orpost\",{\"1\":{\"92\":1}}],[\"orelse\",{\"1\":{\"40\":2,\"184\":2}}],[\"originally\",{\"1\":{\"178\":1,\"290\":1,\"322\":1}}],[\"original\",{\"1\":{\"7\":1,\"8\":1,\"247\":1,\"252\":1,\"290\":1}}],[\"oriented\",{\"1\":{\"4\":1}}],[\"or\",{\"0\":{\"37\":1},\"1\":{\"6\":1,\"7\":3,\"9\":1,\"32\":3,\"33\":2,\"46\":1,\"48\":2,\"59\":1,\"70\":5,\"72\":1,\"81\":1,\"83\":3,\"86\":1,\"89\":1,\"90\":2,\"98\":1,\"99\":1,\"101\":2,\"104\":1,\"106\":1,\"109\":1,\"116\":1,\"156\":1,\"165\":1,\"184\":1,\"210\":3,\"211\":1,\"212\":2,\"214\":8,\"241\":1,\"242\":4,\"247\":1,\"252\":1,\"253\":2,\"254\":2,\"256\":1,\"279\":1,\"280\":2,\"298\":1,\"309\":1,\"312\":1,\"316\":1,\"320\":1,\"321\":1}}],[\"organize\",{\"1\":{\"237\":1}}],[\"organized\",{\"1\":{\"14\":1,\"321\":1}}],[\"organizational\",{\"0\":{\"254\":1},\"1\":{\"254\":4}}],[\"organizations\",{\"1\":{\"6\":1}}],[\"organization\",{\"0\":{\"252\":1},\"1\":{\"6\":1,\"8\":1,\"247\":3,\"248\":1,\"249\":2,\"252\":1,\"253\":7,\"254\":7,\"322\":1}}],[\"org\",{\"0\":{\"241\":1},\"1\":{\"3\":1,\"5\":1,\"10\":1,\"35\":3,\"36\":3,\"40\":1,\"49\":1,\"56\":1,\"57\":1,\"130\":2,\"155\":15,\"156\":6,\"160\":2,\"161\":2,\"162\":2,\"164\":22,\"165\":2,\"166\":2,\"179\":2,\"249\":1,\"250\":1,\"251\":1,\"253\":1,\"256\":2,\"270\":1,\"271\":1,\"280\":1,\"301\":1,\"311\":1,\"316\":3,\"322\":1,\"325\":2}}],[\"onrulesubscribe\",{\"1\":{\"118\":2,\"162\":1}}],[\"onrulechanged\",{\"1\":{\"48\":1,\"97\":2,\"111\":1,\"112\":1,\"113\":2,\"165\":4}}],[\"onchange\",{\"1\":{\"166\":1}}],[\"onclose\",{\"1\":{\"114\":2}}],[\"once\",{\"1\":{\"46\":1,\"91\":1,\"174\":1}}],[\"onmessage\",{\"1\":{\"114\":2}}],[\"onmetadatachanged\",{\"1\":{\"48\":1,\"97\":2,\"111\":1,\"112\":1,\"113\":2}}],[\"onopen\",{\"1\":{\"114\":3}}],[\"onselectorsubscribe\",{\"1\":{\"118\":2}}],[\"onselectorchanged\",{\"1\":{\"48\":1,\"97\":2,\"111\":1,\"112\":1,\"113\":2}}],[\"onsubscribe\",{\"1\":{\"104\":1,\"118\":5}}],[\"onappauthchanged\",{\"1\":{\"97\":2,\"111\":1,\"112\":1,\"113\":2,\"156\":1}}],[\"onapplicationevent\",{\"1\":{\"97\":1,\"111\":1,\"113\":1,\"156\":2,\"160\":1,\"165\":3}}],[\"onpluginchanged\",{\"1\":{\"48\":1,\"97\":5,\"98\":5,\"100\":2,\"111\":1,\"112\":1,\"113\":2}}],[\"on\",{\"0\":{\"99\":1,\"104\":1,\"299\":1},\"1\":{\"16\":1,\"25\":1,\"32\":1,\"35\":1,\"46\":1,\"48\":11,\"57\":1,\"69\":1,\"70\":4,\"85\":2,\"86\":2,\"87\":1,\"90\":2,\"91\":3,\"96\":1,\"98\":1,\"100\":1,\"103\":1,\"104\":1,\"105\":3,\"106\":1,\"112\":1,\"114\":5,\"117\":2,\"118\":1,\"130\":1,\"133\":1,\"134\":1,\"155\":4,\"156\":1,\"162\":2,\"164\":5,\"169\":1,\"174\":1,\"176\":1,\"177\":3,\"179\":1,\"180\":2,\"183\":1,\"184\":1,\"185\":3,\"187\":1,\"191\":2,\"195\":1,\"199\":1,\"202\":1,\"207\":1,\"209\":1,\"210\":1,\"212\":3,\"213\":3,\"214\":3,\"217\":2,\"218\":4,\"226\":1,\"229\":1,\"235\":3,\"237\":3,\"242\":1,\"247\":1,\"253\":2,\"254\":2,\"275\":1,\"279\":1,\"284\":1,\"290\":1,\"306\":1,\"308\":1,\"319\":1,\"321\":4,\"329\":1}}],[\"onlyif\",{\"1\":{\"184\":1}}],[\"only\",{\"1\":{\"9\":1,\"31\":1,\"43\":1,\"69\":1,\"74\":1,\"85\":2,\"86\":2,\"88\":1,\"89\":1,\"92\":1,\"101\":1,\"104\":1,\"113\":1,\"121\":2,\"124\":1,\"128\":1,\"129\":1,\"156\":1,\"164\":2,\"172\":1,\"179\":3,\"180\":1,\"182\":1,\"195\":1,\"202\":1,\"212\":1,\"214\":2,\"218\":3,\"226\":1,\"234\":1,\"235\":1,\"256\":1,\"270\":1,\"277\":1,\"278\":1,\"280\":1,\"281\":1,\"287\":1,\"293\":1,\"305\":1,\"308\":1,\"319\":1,\"321\":2,\"328\":1}}],[\"online\",{\"1\":{\"4\":1,\"16\":1,\"20\":1,\"23\":1}}],[\"onerrormap\",{\"1\":{\"237\":1}}],[\"onerrorresume\",{\"1\":{\"197\":1,\"214\":1,\"221\":4}}],[\"onerror\",{\"1\":{\"114\":2,\"221\":1}}],[\"one\",{\"0\":{\"272\":1,\"322\":1},\"1\":{\"4\":1,\"28\":1,\"48\":2,\"69\":1,\"70\":1,\"72\":2,\"81\":3,\"85\":1,\"91\":1,\"103\":1,\"104\":1,\"113\":1,\"119\":1,\"126\":1,\"128\":1,\"175\":2,\"181\":1,\"182\":1,\"184\":1,\"187\":1,\"189\":1,\"199\":1,\"200\":1,\"201\":1,\"210\":1,\"213\":1,\"214\":5,\"226\":1,\"235\":4,\"256\":1,\"308\":1,\"317\":1,\"319\":1,\"322\":1}}],[\"ofemptyable\",{\"1\":{\"292\":1}}],[\"ofseconds\",{\"1\":{\"184\":1}}],[\"ofmillis\",{\"1\":{\"92\":1,\"184\":2}}],[\"often\",{\"1\":{\"78\":1,\"210\":2}}],[\"ofnullable\",{\"1\":{\"39\":1,\"40\":2,\"118\":3,\"162\":2,\"184\":2}}],[\"offer\",{\"1\":{\"286\":1}}],[\"offers\",{\"1\":{\"34\":1,\"217\":1}}],[\"off\",{\"1\":{\"218\":1,\"220\":1,\"222\":1}}],[\"offline\",{\"1\":{\"173\":1}}],[\"offset\",{\"1\":{\"90\":3,\"177\":3}}],[\"officially\",{\"1\":{\"254\":1}}],[\"official\",{\"0\":{\"189\":1},\"1\":{\"3\":1,\"106\":1,\"162\":1,\"164\":2,\"189\":2,\"214\":1,\"217\":1,\"218\":1,\"247\":1,\"250\":1,\"252\":1,\"253\":2,\"254\":2,\"271\":1,\"301\":1,\"315\":1}}],[\"of\",{\"0\":{\"7\":1,\"35\":1,\"36\":1,\"39\":1,\"40\":1,\"68\":1,\"72\":1,\"99\":1,\"123\":1,\"147\":1,\"149\":1,\"150\":1,\"156\":2,\"174\":1,\"189\":1,\"200\":1,\"221\":1,\"272\":1,\"302\":1,\"307\":1,\"317\":1,\"318\":1},\"1\":{\"1\":1,\"4\":1,\"6\":5,\"7\":2,\"8\":2,\"9\":3,\"14\":4,\"15\":1,\"22\":1,\"25\":3,\"28\":1,\"29\":1,\"32\":1,\"33\":12,\"34\":1,\"35\":1,\"39\":1,\"43\":2,\"48\":16,\"57\":2,\"61\":1,\"64\":1,\"65\":2,\"66\":3,\"68\":1,\"69\":10,\"70\":5,\"71\":2,\"72\":2,\"74\":2,\"80\":2,\"81\":3,\"82\":1,\"83\":4,\"84\":3,\"85\":5,\"86\":7,\"87\":5,\"88\":4,\"89\":4,\"90\":1,\"91\":10,\"92\":3,\"96\":1,\"97\":5,\"98\":1,\"99\":4,\"100\":9,\"101\":7,\"103\":4,\"104\":10,\"105\":6,\"106\":2,\"110\":2,\"112\":5,\"113\":2,\"114\":2,\"116\":4,\"117\":4,\"118\":8,\"119\":5,\"120\":9,\"121\":5,\"122\":3,\"123\":4,\"124\":1,\"126\":4,\"128\":2,\"129\":2,\"130\":4,\"131\":4,\"132\":4,\"133\":3,\"134\":2,\"135\":5,\"137\":6,\"138\":2,\"139\":4,\"147\":4,\"151\":4,\"155\":1,\"156\":11,\"159\":1,\"160\":2,\"161\":2,\"162\":4,\"164\":8,\"169\":3,\"171\":1,\"172\":7,\"173\":4,\"174\":1,\"175\":3,\"177\":5,\"178\":7,\"179\":15,\"180\":10,\"181\":1,\"182\":11,\"183\":3,\"184\":4,\"185\":8,\"187\":5,\"189\":6,\"191\":2,\"192\":2,\"195\":7,\"197\":8,\"198\":4,\"199\":5,\"200\":8,\"204\":1,\"208\":2,\"209\":4,\"210\":7,\"211\":14,\"212\":16,\"213\":16,\"214\":18,\"216\":1,\"217\":2,\"218\":7,\"219\":5,\"220\":1,\"221\":4,\"226\":7,\"229\":2,\"230\":1,\"234\":6,\"235\":3,\"237\":3,\"241\":1,\"242\":1,\"243\":2,\"247\":1,\"249\":1,\"250\":1,\"252\":1,\"253\":2,\"254\":10,\"256\":2,\"268\":2,\"269\":1,\"270\":1,\"274\":2,\"275\":3,\"276\":3,\"278\":1,\"280\":5,\"281\":5,\"282\":1,\"283\":5,\"284\":5,\"285\":1,\"286\":2,\"287\":1,\"288\":1,\"290\":8,\"292\":1,\"293\":4,\"294\":3,\"295\":1,\"297\":1,\"298\":1,\"299\":1,\"300\":4,\"302\":1,\"305\":2,\"306\":2,\"307\":1,\"308\":6,\"309\":3,\"312\":2,\"317\":4,\"318\":1,\"319\":6,\"320\":3,\"321\":4,\"322\":2,\"324\":2,\"328\":10}}],[\"eos\",{\"1\":{\"322\":1}}],[\"eureka\",{\"1\":{\"312\":1}}],[\"eclipse\",{\"1\":{\"256\":1}}],[\"ee\",{\"1\":{\"256\":1}}],[\"et\",{\"1\":{\"237\":1}}],[\"etcd\",{\"1\":{\"284\":1,\"285\":1}}],[\"etc\",{\"1\":{\"34\":1,\"85\":1,\"86\":1,\"92\":1,\"117\":1,\"118\":1,\"119\":1,\"157\":1,\"159\":1,\"248\":1,\"254\":2,\"274\":1,\"275\":1,\"284\":1,\"303\":1,\"306\":1,\"312\":1,\"317\":1,\"321\":2,\"328\":1}}],[\"evan\",{\"1\":{\"256\":1}}],[\"evaluated\",{\"1\":{\"210\":1}}],[\"evenly\",{\"1\":{\"214\":1}}],[\"even\",{\"0\":{\"46\":1},\"1\":{\"28\":1,\"32\":2,\"38\":1,\"91\":1,\"179\":1,\"211\":1,\"213\":1}}],[\"eventthread\",{\"1\":{\"155\":2}}],[\"eventtype\",{\"1\":{\"97\":8,\"98\":5,\"100\":1,\"109\":3,\"110\":1,\"112\":10,\"113\":15,\"117\":4,\"118\":3,\"165\":3}}],[\"eventtypeenum\",{\"1\":{\"35\":2,\"39\":1,\"118\":2}}],[\"eventpublisher\",{\"1\":{\"79\":1,\"81\":2,\"109\":1,\"156\":4,\"165\":2}}],[\"events\",{\"0\":{\"111\":1},\"1\":{\"32\":1,\"104\":1,\"110\":1,\"111\":1,\"156\":2,\"160\":1,\"165\":1}}],[\"eventually\",{\"1\":{\"120\":1}}],[\"eventual\",{\"1\":{\"30\":1}}],[\"event\",{\"0\":{\"13\":1,\"32\":1,\"110\":1,\"113\":1},\"1\":{\"14\":1,\"35\":3,\"48\":3,\"79\":1,\"80\":1,\"81\":2,\"97\":16,\"109\":2,\"110\":7,\"111\":13,\"112\":8,\"113\":14,\"117\":2,\"118\":3,\"155\":2,\"156\":13,\"157\":2,\"159\":2,\"160\":1,\"162\":2,\"165\":14,\"195\":1}}],[\"ever\",{\"1\":{\"4\":1}}],[\"everything\",{\"1\":{\"29\":1,\"134\":1,\"173\":1,\"256\":1,\"281\":1}}],[\"everyone\",{\"1\":{\"9\":1,\"14\":1,\"15\":1,\"16\":1,\"28\":1,\"256\":1,\"272\":1,\"286\":1,\"321\":2}}],[\"every\",{\"1\":{\"1\":1,\"16\":1,\"48\":2,\"101\":2,\"131\":3,\"174\":1,\"178\":1,\"214\":1,\"308\":1,\"309\":1,\"319\":1,\"320\":1}}],[\"edition\",{\"1\":{\"133\":1}}],[\"editing\",{\"1\":{\"121\":1}}],[\"edge\",{\"1\":{\"38\":1}}],[\"errors\",{\"1\":{\"212\":1,\"214\":2}}],[\"error\",{\"1\":{\"86\":1,\"92\":2,\"93\":9,\"105\":1,\"109\":1,\"114\":9,\"123\":2,\"139\":2,\"149\":2,\"151\":3,\"155\":1,\"164\":4,\"183\":9,\"184\":5,\"185\":9,\"197\":7,\"207\":1,\"212\":1,\"213\":1,\"214\":21,\"218\":1,\"220\":1,\"221\":1,\"236\":14,\"238\":5,\"241\":2,\"294\":2}}],[\"ervice\",{\"1\":{\"80\":1}}],[\"eq\",{\"1\":{\"82\":1}}],[\"equally\",{\"1\":{\"90\":1}}],[\"equals\",{\"1\":{\"79\":1,\"80\":4,\"81\":1,\"85\":2,\"114\":1,\"165\":1,\"180\":1,\"195\":1,\"214\":4,\"219\":1,\"241\":2,\"242\":2}}],[\"equal\",{\"1\":{\"70\":1}}],[\"equivalent\",{\"1\":{\"69\":1,\"72\":1,\"156\":1,\"321\":1}}],[\"estimated\",{\"1\":{\"214\":1}}],[\"establishment\",{\"1\":{\"155\":2}}],[\"establishing\",{\"1\":{\"117\":1}}],[\"establish\",{\"0\":{\"116\":1},\"1\":{\"156\":1,\"254\":1}}],[\"established\",{\"1\":{\"81\":1,\"155\":1}}],[\"essentially\",{\"1\":{\"29\":1}}],[\"elasticseach\",{\"1\":{\"321\":1}}],[\"elaborated\",{\"1\":{\"182\":1}}],[\"elegant\",{\"1\":{\"289\":1}}],[\"elegance\",{\"1\":{\"275\":1,\"286\":1}}],[\"element\",{\"1\":{\"231\":1}}],[\"elements\",{\"1\":{\"100\":1}}],[\"eliminated\",{\"1\":{\"81\":1}}],[\"else\",{\"1\":{\"48\":1,\"79\":2,\"80\":6,\"81\":2,\"82\":1,\"85\":1,\"86\":2,\"93\":1,\"104\":2,\"109\":1,\"123\":3,\"126\":1,\"127\":1,\"172\":1,\"175\":2,\"176\":2,\"180\":1,\"182\":1,\"184\":1,\"207\":1,\"214\":3,\"237\":1,\"241\":1,\"242\":4}}],[\"efficient\",{\"1\":{\"289\":1,\"304\":1}}],[\"effective\",{\"1\":{\"171\":1,\"220\":1,\"317\":1}}],[\"effectiveness\",{\"1\":{\"48\":1}}],[\"effect\",{\"0\":{\"195\":1},\"1\":{\"70\":1,\"122\":1,\"124\":1,\"131\":1,\"210\":1,\"214\":3,\"219\":2}}],[\"effort\",{\"1\":{\"32\":1}}],[\"e\",{\"1\":{\"40\":1,\"57\":1,\"82\":2,\"92\":4,\"104\":5,\"105\":6,\"114\":4,\"126\":1,\"129\":6,\"139\":3,\"162\":2,\"164\":1,\"176\":1,\"184\":4,\"219\":9,\"234\":2,\"242\":8,\"256\":1}}],[\"email\",{\"1\":{\"253\":2}}],[\"emails\",{\"1\":{\"249\":1}}],[\"emailing\",{\"1\":{\"5\":1}}],[\"emptylist\",{\"1\":{\"86\":1,\"117\":2,\"161\":2,\"166\":2,\"207\":1}}],[\"empty\",{\"1\":{\"48\":1,\"86\":1,\"104\":1,\"109\":1,\"164\":1,\"165\":1,\"179\":1,\"235\":1,\"236\":1,\"237\":1,\"315\":1}}],[\"employed\",{\"1\":{\"35\":1}}],[\"embedded\",{\"1\":{\"34\":1,\"57\":1,\"164\":1,\"268\":1}}],[\"earlier\",{\"1\":{\"179\":1}}],[\"ease\",{\"1\":{\"274\":1,\"283\":2}}],[\"easley\",{\"1\":{\"256\":1}}],[\"easier\",{\"0\":{\"46\":1},\"1\":{\"281\":1,\"321\":1,\"329\":1}}],[\"easily\",{\"1\":{\"33\":1,\"70\":1,\"210\":1}}],[\"easy\",{\"0\":{\"27\":1,\"312\":1},\"1\":{\"120\":2,\"169\":1,\"211\":1,\"214\":1,\"275\":1,\"317\":1}}],[\"each\",{\"1\":{\"16\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":3,\"91\":2,\"97\":1,\"104\":3,\"117\":1,\"118\":1,\"119\":2,\"122\":2,\"123\":1,\"126\":1,\"134\":2,\"156\":1,\"175\":1,\"179\":2,\"180\":1,\"212\":1,\"214\":5,\"218\":1,\"219\":2,\"226\":1,\"241\":1,\"254\":5,\"290\":2,\"306\":1,\"317\":1}}],[\"exhaustion\",{\"1\":{\"211\":1}}],[\"exactly\",{\"1\":{\"195\":1}}],[\"example\",{\"0\":{\"143\":1},\"1\":{\"86\":2,\"97\":1,\"98\":1,\"121\":1,\"165\":1,\"211\":1,\"280\":2,\"285\":1,\"290\":1,\"305\":1,\"306\":1,\"308\":1,\"319\":1,\"321\":1,\"326\":2}}],[\"examples\",{\"1\":{\"58\":1,\"59\":2,\"62\":1,\"72\":2,\"87\":1,\"179\":1,\"218\":1,\"220\":1,\"278\":1}}],[\"examining\",{\"1\":{\"48\":1,\"132\":1}}],[\"ex\",{\"1\":{\"127\":1}}],[\"extname\",{\"1\":{\"293\":1}}],[\"ext\",{\"1\":{\"226\":2}}],[\"ext`\",{\"1\":{\"226\":1}}],[\"external\",{\"1\":{\"147\":1}}],[\"extensiable\",{\"1\":{\"321\":1}}],[\"extensible\",{\"1\":{\"302\":1,\"306\":2}}],[\"extensions\",{\"1\":{\"182\":1,\"297\":1}}],[\"extensionloader<>\",{\"1\":{\"132\":1}}],[\"extensionloader<\",{\"1\":{\"132\":1}}],[\"extensionloader<t>\",{\"1\":{\"132\":6}}],[\"extensionloader\",{\"1\":{\"120\":2,\"132\":4,\"134\":1,\"139\":1,\"177\":1,\"242\":1}}],[\"extension\",{\"0\":{\"132\":1},\"1\":{\"104\":1,\"130\":1,\"131\":1,\"132\":2,\"133\":1,\"138\":1,\"139\":1,\"177\":1,\"178\":1,\"226\":1,\"293\":1}}],[\"extent\",{\"1\":{\"211\":1,\"290\":1}}],[\"extend\",{\"1\":{\"130\":1}}],[\"extends\",{\"1\":{\"82\":3,\"100\":1,\"117\":1,\"118\":1,\"126\":1,\"214\":2}}],[\"extreme\",{\"1\":{\"211\":1,\"276\":1}}],[\"extremely\",{\"1\":{\"38\":1}}],[\"extract\",{\"1\":{\"275\":3}}],[\"extra\",{\"1\":{\"65\":1,\"101\":1,\"129\":1,\"214\":1}}],[\"exclusive\",{\"1\":{\"254\":1}}],[\"excluding\",{\"1\":{\"210\":1}}],[\"excute\",{\"1\":{\"179\":2,\"180\":2,\"182\":2,\"184\":1,\"185\":1,\"197\":1}}],[\"exchangefunction\",{\"1\":{\"92\":1}}],[\"exchange\",{\"1\":{\"85\":11,\"86\":6,\"87\":7,\"92\":15,\"93\":6,\"105\":1,\"151\":2,\"172\":12,\"179\":4,\"180\":8,\"182\":9,\"183\":11,\"184\":22,\"185\":6,\"197\":4,\"207\":9,\"214\":11,\"221\":18,\"235\":6,\"236\":13,\"237\":5,\"238\":5}}],[\"excited\",{\"1\":{\"80\":1}}],[\"excelwriter\",{\"1\":{\"293\":1}}],[\"excelbase\",{\"1\":{\"293\":1}}],[\"excelreader\",{\"1\":{\"293\":2}}],[\"excelutil\",{\"1\":{\"292\":1}}],[\"excellent\",{\"1\":{\"212\":1,\"214\":1,\"271\":1}}],[\"exceeded\",{\"1\":{\"213\":1,\"218\":1}}],[\"exceeding\",{\"1\":{\"212\":1,\"247\":1}}],[\"exceed\",{\"1\":{\"211\":1,\"214\":1}}],[\"exceeds\",{\"1\":{\"30\":1,\"211\":3,\"214\":2}}],[\"excessive\",{\"1\":{\"32\":1}}],[\"exceptions\",{\"0\":{\"37\":1},\"1\":{\"210\":1,\"285\":1}}],[\"exception\",{\"0\":{\"38\":1},\"1\":{\"36\":3,\"37\":1,\"82\":1,\"105\":1,\"109\":1,\"114\":2,\"129\":2,\"151\":1,\"164\":6,\"165\":1,\"166\":1,\"184\":1,\"213\":7,\"214\":4,\"220\":3,\"221\":1,\"234\":1,\"237\":4,\"242\":1,\"285\":2,\"322\":1}}],[\"except\",{\"1\":{\"7\":1}}],[\"existing\",{\"1\":{\"214\":2}}],[\"exists\",{\"1\":{\"156\":3,\"161\":1,\"226\":1,\"329\":4}}],[\"exist\",{\"1\":{\"78\":2,\"79\":4,\"81\":4,\"86\":1,\"195\":1,\"329\":2}}],[\"exits\",{\"1\":{\"253\":1}}],[\"exiting\",{\"1\":{\"253\":2,\"254\":1}}],[\"exit\",{\"0\":{\"253\":1},\"1\":{\"32\":1,\"253\":5}}],[\"expansion\",{\"1\":{\"321\":1}}],[\"expand\",{\"1\":{\"15\":1,\"169\":1}}],[\"export\",{\"1\":{\"234\":1}}],[\"exponential\",{\"1\":{\"184\":1}}],[\"exposing\",{\"1\":{\"57\":1,\"164\":1}}],[\"exposes\",{\"1\":{\"100\":1,\"101\":1}}],[\"expose\",{\"1\":{\"43\":1}}],[\"explore\",{\"1\":{\"174\":1}}],[\"exploration\",{\"0\":{\"174\":1,\"175\":1},\"1\":{\"173\":1}}],[\"explicitly\",{\"1\":{\"129\":1}}],[\"explanations\",{\"1\":{\"280\":1}}],[\"explanation\",{\"1\":{\"86\":1,\"164\":1,\"189\":1,\"197\":1}}],[\"explained\",{\"1\":{\"48\":1,\"182\":2}}],[\"explain\",{\"1\":{\"29\":1,\"91\":1,\"200\":1,\"235\":1}}],[\"expressions\",{\"1\":{\"217\":1,\"309\":1,\"320\":1}}],[\"expression\",{\"1\":{\"70\":1,\"299\":1,\"309\":1,\"320\":1}}],[\"expressive\",{\"1\":{\"14\":1}}],[\"experiment\",{\"1\":{\"122\":1}}],[\"experience\",{\"0\":{\"218\":1,\"313\":1,\"316\":1},\"1\":{\"1\":1,\"25\":1,\"96\":1,\"216\":1}}],[\"expected\",{\"1\":{\"211\":3}}],[\"expect\",{\"1\":{\"86\":1}}],[\"expenses\",{\"1\":{\"9\":1,\"256\":1}}],[\"exeute\",{\"1\":{\"182\":1}}],[\"exec\",{\"1\":{\"48\":1}}],[\"executor=\",{\"1\":{\"104\":1}}],[\"executorservice\",{\"1\":{\"77\":1}}],[\"executor\",{\"1\":{\"35\":5,\"36\":6,\"104\":6,\"117\":2,\"118\":1,\"221\":3}}],[\"executes\",{\"1\":{\"166\":1,\"172\":1,\"179\":1,\"241\":1}}],[\"executequery\",{\"1\":{\"129\":2}}],[\"execute\",{\"0\":{\"199\":1},\"1\":{\"33\":2,\"36\":6,\"48\":1,\"84\":2,\"85\":9,\"86\":6,\"87\":1,\"88\":1,\"92\":4,\"93\":2,\"100\":3,\"104\":1,\"105\":1,\"156\":1,\"165\":4,\"172\":5,\"177\":1,\"178\":1,\"179\":3,\"180\":2,\"182\":3,\"183\":1,\"184\":2,\"185\":2,\"189\":2,\"197\":3,\"207\":1,\"214\":1,\"219\":1,\"221\":5,\"235\":4,\"236\":1,\"238\":2}}],[\"executed\",{\"1\":{\"32\":1,\"36\":2,\"48\":6,\"70\":1,\"156\":2,\"174\":1,\"179\":2,\"180\":1,\"181\":1,\"221\":1}}],[\"executionexception\",{\"1\":{\"40\":2}}],[\"execution\",{\"0\":{\"36\":1},\"1\":{\"32\":1,\"33\":2,\"38\":1,\"43\":1,\"70\":2,\"84\":1,\"122\":1,\"156\":1,\"179\":4,\"197\":2,\"212\":1,\"214\":1,\"221\":1,\"254\":1,\"275\":1,\"284\":1}}],[\"executing\",{\"1\":{\"6\":1,\"37\":1,\"87\":1,\"172\":2,\"180\":1,\"199\":1}}],[\"exercise\",{\"1\":{\"14\":1,\"15\":1}}],[\"env\",{\"1\":{\"280\":1}}],[\"environments\",{\"0\":{\"31\":1},\"1\":{\"40\":1,\"326\":1}}],[\"environment\",{\"0\":{\"49\":1,\"154\":1},\"1\":{\"30\":1,\"31\":1,\"155\":6,\"164\":1,\"260\":1,\"304\":1,\"326\":1}}],[\"engineer\",{\"1\":{\"308\":1,\"319\":1}}],[\"engine\",{\"1\":{\"226\":1}}],[\"engage\",{\"1\":{\"6\":1,\"7\":3}}],[\"enhance\",{\"1\":{\"217\":1,\"312\":1}}],[\"enhanced\",{\"0\":{\"133\":1},\"1\":{\"22\":1,\"131\":1,\"134\":1,\"312\":1}}],[\"encoding\",{\"1\":{\"292\":3}}],[\"encountered\",{\"1\":{\"164\":2,\"210\":1,\"321\":1}}],[\"encounter\",{\"1\":{\"113\":1,\"164\":1}}],[\"encapsulation\",{\"1\":{\"180\":1}}],[\"encapsulating\",{\"1\":{\"80\":1,\"197\":1}}],[\"encapsulates\",{\"1\":{\"184\":1,\"185\":1,\"214\":1}}],[\"encapsulated\",{\"1\":{\"110\":1,\"113\":1,\"180\":1,\"183\":1,\"195\":1}}],[\"encapsulate\",{\"1\":{\"93\":1,\"180\":1}}],[\"enumutil\",{\"1\":{\"293\":1}}],[\"enummap<>\",{\"1\":{\"104\":1,\"117\":1}}],[\"enummap<configgroupenum\",{\"1\":{\"104\":1,\"117\":1}}],[\"enum\",{\"1\":{\"104\":7,\"110\":5,\"117\":7}}],[\"enumeration<url>\",{\"1\":{\"139\":1}}],[\"enumeration\",{\"1\":{\"104\":1,\"110\":2,\"179\":2,\"195\":1,\"293\":1}}],[\"enums\",{\"1\":{\"35\":1,\"36\":1,\"43\":2}}],[\"endwith\",{\"1\":{\"293\":1}}],[\"endless\",{\"1\":{\"105\":1}}],[\"ending\",{\"1\":{\"97\":1,\"326\":1}}],[\"ended\",{\"1\":{\"72\":1}}],[\"endpoint\",{\"1\":{\"57\":1,\"164\":3}}],[\"endpointlinksresolver\",{\"1\":{\"57\":1,\"164\":1}}],[\"end\",{\"0\":{\"308\":1,\"319\":1},\"1\":{\"48\":1,\"98\":1,\"100\":2,\"103\":1,\"104\":3,\"105\":1,\"144\":1,\"172\":1,\"185\":1,\"200\":3,\"213\":1,\"214\":1,\"230\":2,\"306\":1,\"308\":2,\"316\":4,\"319\":2,\"326\":1}}],[\"energy\",{\"1\":{\"48\":1}}],[\"enough\",{\"1\":{\"48\":1,\"200\":1}}],[\"ensures\",{\"1\":{\"211\":1,\"212\":1}}],[\"ensure\",{\"0\":{\"195\":1},\"1\":{\"48\":1,\"211\":1,\"212\":1,\"214\":1}}],[\"ensuring\",{\"1\":{\"38\":1,\"39\":1,\"40\":1}}],[\"enablefilestorage\",{\"1\":{\"327\":2}}],[\"enables\",{\"1\":{\"156\":1,\"221\":1}}],[\"enableconfigurationproperties\",{\"1\":{\"97\":1,\"112\":2,\"116\":1,\"156\":3}}],[\"enable=false\",{\"1\":{\"48\":1}}],[\"enabled\",{\"1\":{\"48\":1,\"69\":1,\"80\":1,\"82\":2,\"96\":2,\"97\":1,\"112\":4,\"116\":2,\"155\":1,\"164\":3,\"171\":1,\"182\":1,\"191\":1,\"192\":1,\"214\":2,\"221\":1,\"270\":1,\"315\":1}}],[\"enable\",{\"0\":{\"191\":1},\"1\":{\"43\":1,\"100\":1,\"104\":1,\"116\":1,\"212\":1,\"214\":2,\"218\":1,\"219\":1,\"226\":1,\"316\":1,\"326\":2}}],[\"enlistparticipant\",{\"1\":{\"39\":1}}],[\"entrance\",{\"0\":{\"309\":1,\"320\":1},\"1\":{\"69\":1,\"117\":1,\"210\":1,\"309\":1,\"320\":1}}],[\"entryset\",{\"1\":{\"91\":1}}],[\"entry\",{\"1\":{\"40\":2,\"48\":3,\"86\":1,\"118\":1,\"132\":1,\"156\":1,\"159\":1,\"235\":1,\"294\":1}}],[\"entered\",{\"1\":{\"162\":1,\"235\":1,\"254\":1}}],[\"entering\",{\"1\":{\"48\":1}}],[\"enter\",{\"1\":{\"48\":2,\"74\":1,\"80\":1,\"85\":1,\"91\":1,\"113\":1,\"213\":3,\"214\":1}}],[\"enters\",{\"1\":{\"48\":1,\"212\":1}}],[\"enterprise\",{\"1\":{\"4\":2}}],[\"entity\",{\"1\":{\"35\":2,\"36\":1,\"40\":1,\"48\":1,\"156\":2}}],[\"entire\",{\"1\":{\"31\":1,\"179\":1,\"180\":1,\"210\":2,\"243\":1,\"254\":1,\"272\":1,\"321\":1}}],[\"enthusiasm\",{\"1\":{\"14\":1}}],[\"enthusiast\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2},\"/zh/\":{\"documentCount\":838,\"nextId\":838,\"documentIds\":{\"0\":\"v-3befa56a\",\"1\":\"v-3befa56a#我们的愿景\",\"2\":\"v-3befa56a#社区口号\",\"3\":\"v-3befa56a#官网\",\"4\":\"v-3befa56a#社区项目\",\"5\":\"v-3befa56a#加入组织\",\"6\":\"v-3befa56a#组织责任\",\"7\":\"v-3befa56a#行为准则\",\"8\":\"v-3befa56a#项目捐赠\",\"9\":\"v-3befa56a#赞助-支持\",\"10\":\"v-3befa56a#联系我们\",\"11\":\"v-84834d5c\",\"12\":\"v-84834d5c#时间地点\",\"13\":\"v-84834d5c#签到入场\",\"14\":\"v-84834d5c#微信端门票二维码获取方式\",\"15\":\"v-2fe5fb1c\",\"16\":\"v-a1f062fa\",\"17\":\"v-a1f062fa#-1\",\"18\":\"v-a1f062fa#-2\",\"19\":\"v-3100e6d8\",\"20\":\"v-1c782d50\",\"21\":\"v-1c782d50#dromara-梦码读书会-dromara-2020-活动介绍\",\"22\":\"v-1c782d50#活动背景\",\"23\":\"v-1c782d50#活动目的-意义和目标\",\"24\":\"v-1c782d50#活动开展\",\"25\":\"v-1c782d50#活动负责人以及主要参与者\",\"26\":\"v-1c782d50#负责人\",\"27\":\"v-1c782d50#主要参与者\",\"28\":\"v-583fae6e\",\"29\":\"v-583fae6e#dromara-源码阅读-soul-2021-首次活动\",\"30\":\"v-583fae6e#活动详情\",\"31\":\"v-a74bd796\",\"32\":\"v-a74bd796#dromara-源码阅读-soul-2021-首次活动\",\"33\":\"v-a74bd796#活动详情\",\"34\":\"v-089be869\",\"35\":\"v-089be869#开源之夏-2023\",\"36\":\"v-089be869#学生开启报名\",\"37\":\"v-089be869#dromara-社区介绍\",\"38\":\"v-089be869#dromara-社区课题项目系列一\",\"39\":\"v-089be869#一-dromara-开源组织官网设计开发\",\"40\":\"v-089be869#项目需求-1\",\"41\":\"v-089be869#项目需求-2\",\"42\":\"v-089be869#主要产出如下\",\"43\":\"v-089be869#项目技术要求\",\"44\":\"v-089be869#项目成果仓库\",\"45\":\"v-089be869#二-为-easy-es-提供自定义注解-支持字段与索引一对多映射关系\",\"46\":\"v-089be869#项目简介\",\"47\":\"v-089be869#项目产出要求\",\"48\":\"v-089be869#项目技术要求-1\",\"49\":\"v-089be869#项目成果仓库-1\",\"50\":\"v-089be869#快速参与开源之夏-2023\",\"51\":\"v-62fcfd62\",\"52\":\"v-62fcfd62#本期直播详解\",\"53\":\"v-62fcfd62#hertzbeat-是什么\",\"54\":\"v-62fcfd62#hertzbeat-的强大自定义功能\",\"55\":\"v-62fcfd62#hertzbeat-的易用来自于诸多模板支持\",\"56\":\"v-62fcfd62#开源项目离不开小伙伴协助\",\"57\":\"v-62fcfd62#hertzbeat-for-huawei-cloud\",\"58\":\"v-2b4be8a5\",\"59\":\"v-4038dd53\",\"60\":\"v-4038dd53#hmily-高并发事务处理\",\"61\":\"v-4038dd53#_1-hmily-的性能问题\",\"62\":\"v-4038dd53#_2-关于-rpc-调用超时-hmily-是怎么处理的\",\"63\":\"v-4038dd53#_3-hmily-支持集群部署的问题-以及集群环境中-定时任务日志恢复的问题\",\"64\":\"v-4038dd53#_4-hmily-是异步保存日志的-那么很极端情况下-代码刚好执行到这一行-然后-jvm-退出-断电啦什么的-日志还没保存那怎么处理呢\",\"65\":\"v-54df0e8c\",\"66\":\"v-54df0e8c#_1-采用-disruptor-进行事务日志的异步读写-disruptor-是一个无锁-无-gc-的并发编程框架\",\"67\":\"v-54df0e8c#_2-异步执行-confrim-cancel-方法。\",\"68\":\"v-54df0e8c#这里有人可能会问-那么-cancel-方法异常-或者-confrim-方法异常怎么办呢\",\"69\":\"v-54df0e8c#有人又会问-这里如果日志保存异常了怎么办\",\"70\":\"v-54df0e8c#_3-threadlocal-缓存的使用。\",\"71\":\"v-54df0e8c#_4-guavacache-的使用\",\"72\":\"v-54df0e8c#以上-4-点造就了-hmily-是一个异步的高性能分布式事务-tcc-框架的原因。\",\"73\":\"v-54df0e8c#hmily-如何使用-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo\",\"74\":\"v-54df0e8c#_1-dubbo-用户\",\"75\":\"v-54df0e8c#springcloud-用户\",\"76\":\"v-54df0e8c#motan-用户\",\"77\":\"v-54df0e8c#hmily-spring-boot-start-那这个就更容易了-只需要根据你的-rpc-框架去引入不同的-jar-包。\",\"78\":\"v-0ff719d4\",\"79\":\"v-0ff719d4#_0x01-纵观发展\",\"80\":\"v-0ff719d4#_0x02-详细解读\",\"81\":\"v-0ff719d4#jdk9-新特性\",\"82\":\"v-0ff719d4#jdk10-新特性\",\"83\":\"v-0ff719d4#jdk11-新特性\",\"84\":\"v-0ff719d4#jdk12-新特性\",\"85\":\"v-0ff719d4#jdk13-新特性\",\"86\":\"v-0ff719d4#jdk14-新特性\",\"87\":\"v-0ff719d4#jdk15-新特性\",\"88\":\"v-0ff719d4#jdk16-新特性\",\"89\":\"v-0ff719d4#jdk17-新特性\",\"90\":\"v-0ff719d4#总结\",\"91\":\"v-0ff719d4#小记\",\"92\":\"v-9279702a\",\"93\":\"v-cd99f858\",\"94\":\"v-cd99f858#_1-源代码准备\",\"95\":\"v-cd99f858#_1-1-fork-dromara-soul源代码至自己的仓库cchenxi-soul\",\"96\":\"v-cd99f858#_1-2-clone-自己仓库中的-soul-源代码至本地\",\"97\":\"v-cd99f858#_1-3-使用-idea-打开-soul-源代码\",\"98\":\"v-cd99f858#_1-4-编译-soul-源代码\",\"99\":\"v-cd99f858#_2-启动-soul\",\"100\":\"v-cd99f858#_2-1-启动soul-admin模块\",\"101\":\"v-cd99f858#_2-2-启动soul-bootstrap模块\",\"102\":\"v-cd99f858#_3-测试-http-请求转发\",\"103\":\"v-cd99f858#_3-1-启动一个服务\",\"104\":\"v-cd99f858#_3-1-1-测试-http-服务\",\"105\":\"v-cd99f858#_3-1-2-测试网关转发\",\"106\":\"v-cd99f858#_3-2-启动两个服务模拟负载均衡\",\"107\":\"v-cd99f858#_3-2-1-测试-http-服务\",\"108\":\"v-cd99f858#_3-2-2-测试负载均衡\",\"109\":\"v-cd99f858#_3-2-3-压测\",\"110\":\"v-cd99f858#_3-2-4-问题\",\"111\":\"v-03b4590e\",\"112\":\"v-03b4590e#一、启动项目\",\"113\":\"v-03b4590e#二、divide-插件介绍\",\"114\":\"v-03b4590e#选择器\",\"115\":\"v-03b4590e#选择器规则\",\"116\":\"v-03b4590e#三、divide-插件使用\",\"117\":\"v-03b4590e#测试网关路由\",\"118\":\"v-03b4590e#测试负载均衡\",\"119\":\"v-82df6d82\",\"120\":\"v-78e31f20\",\"121\":\"v-78e31f20#_1-注册入口\",\"122\":\"v-78e31f20#_2-springmvc-register-接口逻辑\",\"123\":\"v-78e31f20#_2-1-先看看这个方法-handlerspringmvcselector-处理-selector。\",\"124\":\"v-78e31f20#_2-1-1-第一次接入-soul-网关\",\"125\":\"v-78e31f20#_2-1-2-已经接入-soul-网关\",\"126\":\"v-78e31f20#_2-2-再来看看这个方法-handlerspringmvcrule-处理-rule。\",\"127\":\"v-78e31f20#_3-总结\",\"128\":\"v-24edce70\",\"129\":\"v-24edce70#abstractsoulplugin\",\"130\":\"v-24edce70#soulpluginchain\",\"131\":\"v-24edce70#插件项目结构\",\"132\":\"v-24edce70#负载均衡\",\"133\":\"v-24edce70#hash\",\"134\":\"v-24edce70#randomloadbalance\",\"135\":\"v-24edce70#roundrobinloadbalance\",\"136\":\"v-24edce70#webclientplugin\",\"137\":\"v-24edce70#webclientresponseclient\",\"138\":\"v-09f19465\",\"139\":\"v-09f19465#后台与网关数据同步-http-长轮询篇\",\"140\":\"v-09f19465#配置\",\"141\":\"v-09f19465#datachangedlistener-体系\",\"142\":\"v-09f19465#其他同步策略此时在干什么\",\"143\":\"v-09f19465#长轮询实现方式思考\",\"144\":\"v-09f19465#httplongpollingdatachangedlistener-长轮询实现\",\"145\":\"v-09f19465#总结\",\"146\":\"v-e0528bf6\",\"147\":\"v-e0528bf6#后台与网关数据同步-http-长轮询篇\",\"148\":\"v-e0528bf6#网关启动时拉取数据\",\"149\":\"v-e0528bf6#网关轮询监听变化\",\"150\":\"v-30374624\",\"151\":\"v-30374624#_2-1-启动-2-个系统\",\"152\":\"v-30374624#_2-2-页面操作查找接口\",\"153\":\"v-30374624#_2-3-后台接口\",\"154\":\"v-30374624#_2-4-发布事件\",\"155\":\"v-30374624#_2-5-监听事件\",\"156\":\"v-30374624#_2-5-1-监听器注入\",\"157\":\"v-30374624#_2-5-2-监听事件处理逻辑\",\"158\":\"v-30374624#_2-6-同步数据给-soul-bootstrap\",\"159\":\"v-30374624#后台与网关数据同步-websocket-篇\",\"160\":\"v-30374624#后台如何建立-websocket\",\"161\":\"v-30374624#网关如何建立-websocket\",\"162\":\"v-30374624#网关数据变动调用链\",\"163\":\"v-30374624#tips\",\"164\":\"v-85ba6f30\",\"165\":\"v-85ba6f30#java-spi\",\"166\":\"v-85ba6f30#从一个-demo-开始\",\"167\":\"v-85ba6f30#spi-的实现\",\"168\":\"v-85ba6f30#java-spi-思考\",\"169\":\"v-85ba6f30#jdbc-spi-使用方式\",\"170\":\"v-85ba6f30#mysql-驱动包-spi\",\"171\":\"v-85ba6f30#筛选-driver-约定大于配置\",\"172\":\"v-85ba6f30#总结-mysql-jdbc\",\"173\":\"v-85ba6f30#jdbc-demo\",\"174\":\"v-85ba6f30#soul-spi-实现\",\"175\":\"v-85ba6f30#java-spi-缺陷\",\"176\":\"v-85ba6f30#优化的-extensionloader\",\"177\":\"v-85ba6f30#增强型搜索-getjoin\",\"178\":\"v-85ba6f30#多层缓存\",\"179\":\"v-85ba6f30#第一层缓存-cachedinstances\",\"180\":\"v-85ba6f30#第二层缓存之-cachedclasses\",\"181\":\"v-85ba6f30#第二层缓存之-joininstances\",\"182\":\"v-85ba6f30#缓存小结\",\"183\":\"v-85ba6f30#详细源码分析-可跳过\",\"184\":\"v-72beb47c\",\"185\":\"v-72beb47c#介绍\",\"186\":\"v-72beb47c#ak-sk-介绍\",\"187\":\"v-72beb47c#插件使用-以-dubbo-findall-为例\",\"188\":\"v-72beb47c#在-soulbootstrap-的-pom-xml-文件中添加-sign-的支持\",\"189\":\"v-72beb47c#新增-appkey-secretkey\",\"190\":\"v-72beb47c#配置选择器和规则器\",\"191\":\"v-72beb47c#增加获取鉴权服务\",\"192\":\"v-72beb47c#在网关中增加鉴权头信息\",\"193\":\"v-72beb47c#请求的结果演示\",\"194\":\"v-72beb47c#sign-插件的实现分析\",\"195\":\"v-72beb47c#java-中-pair\",\"196\":\"v-e838d468\",\"197\":\"v-e838d468#启动-soul-admin、soul-bootstrap-使用-zookeeper-同步数据到网关\",\"198\":\"v-e838d468#一、配置环境\",\"199\":\"v-e838d468#二、启动服务\",\"200\":\"v-e838d468#三、soul-网关-zookeeper-数据同步原理解析\",\"201\":\"v-e838d468#四、总结\",\"202\":\"v-e4cf232a\",\"203\":\"v-e4cf232a#启动-admin-与网关。-admin-操作-使用-zookeeper-同步数据到网关\",\"204\":\"v-e4cf232a#一、soul-admin-变更网关数据-跟踪数据同步过程\",\"205\":\"v-e4cf232a#二、soul-bootstrap-如何获取-zookeeper-数据的-如何感知网关数据变化的。\",\"206\":\"v-e4cf232a#三、soul-bootstrap-是如何感知网关数据变化的\",\"207\":\"v-e4cf232a#四、总结\",\"208\":\"v-85a42546\",\"209\":\"v-85a42546#soul-admin-如何同步网关数据\",\"210\":\"v-85a42546#soul-bootstrap-如何同步网关数据\",\"211\":\"v-85a42546#总结\",\"212\":\"v-5786670d\",\"213\":\"v-5786670d#一、引言\",\"214\":\"v-5786670d#二、微内核架构\",\"215\":\"v-5786670d#_1、架构释义\",\"216\":\"v-5786670d#_2、设计关键点\",\"217\":\"v-5786670d#三、soul-的插件化设计\",\"218\":\"v-5786670d#四、soul-的插件化实现\",\"219\":\"v-5786670d#_1、插件实现\",\"220\":\"v-5786670d#_2、插件链实现\",\"221\":\"v-5786670d#总结\",\"222\":\"v-c2878338\",\"223\":\"v-c2878338#插件概述\",\"224\":\"v-c2878338#插件处理流程\",\"225\":\"v-c2878338#主机探活\",\"226\":\"v-c2878338#_3-1-探活时机\",\"227\":\"v-c2878338#_3-2-探活任务\",\"228\":\"v-c2878338#_3-3-活性检查\",\"229\":\"v-c2878338#负载均衡\",\"230\":\"v-c2878338#总结\",\"231\":\"v-79eeff9c\",\"232\":\"v-79eeff9c#globalplugin-soulcontext-对象封装插件\",\"233\":\"v-79eeff9c#divideplugin-路由选择插件\",\"234\":\"v-79eeff9c#abstractsoulplugin\",\"235\":\"v-79eeff9c#divideplugin\",\"236\":\"v-79eeff9c#webclientplugin-http-请求调用插件\",\"237\":\"v-79eeff9c#webclientresponseplugin-http-结果处理插件\",\"238\":\"v-92e572f6\",\"239\":\"v-92e572f6#回顾\",\"240\":\"v-92e572f6#学习使用\",\"241\":\"v-92e572f6#阅读官方文档-对其有大概认知\",\"242\":\"v-92e572f6#初步使用\",\"243\":\"v-92e572f6#启用对应插件\",\"244\":\"v-92e572f6#添加限流选择器、规则\",\"245\":\"v-92e572f6#接口对应访问\",\"246\":\"v-92e572f6#源码阅读-带着问题读源码\",\"247\":\"v-92e572f6#如何保证在页面修改-redis-配置后立即生效的-后台对应的-redis-连接立马变更的。\",\"248\":\"v-92e572f6#限流插件是底层是如何实现的呢\",\"249\":\"v-92e572f6#debug-调用链\",\"250\":\"v-92e572f6#方法-getkeys-id\",\"251\":\"v-92e572f6#execute-this-script-keys-scriptargs\",\"252\":\"v-92e572f6#lua-限流算法分析\",\"253\":\"v-2a063bca\",\"254\":\"v-2a063bca#插件配置\",\"255\":\"v-2a063bca#maven-依赖\",\"256\":\"v-2a063bca#场景\",\"257\":\"v-2a063bca#重定向\",\"258\":\"v-2a063bca#网关自身接口转发\",\"259\":\"v-2a063bca#源码解析\",\"260\":\"v-2a063bca#参考链接\",\"261\":\"v-23b8cbd0\",\"262\":\"v-23b8cbd0#场景描述\",\"263\":\"v-23b8cbd0#流量控制\",\"264\":\"v-23b8cbd0#熔断\",\"265\":\"v-23b8cbd0#熔断-1\",\"266\":\"v-23b8cbd0#流量控制-1\",\"267\":\"v-1fc031d4\",\"268\":\"v-1fc031d4#目标\",\"269\":\"v-1fc031d4#什么是-resilience4j\",\"270\":\"v-1fc031d4#soul-的-resilience4j-体验\",\"271\":\"v-1fc031d4#限流\",\"272\":\"v-1fc031d4#熔断\",\"273\":\"v-1fc031d4#resilience4j-插件源码解读\",\"274\":\"v-1fc031d4#总结\",\"275\":\"v-552cbe11\",\"276\":\"v-552cbe11#目标\",\"277\":\"v-552cbe11#apache-dubbo-插件介绍\",\"278\":\"v-552cbe11#元数据介绍\",\"279\":\"v-552cbe11#apache-dubbo-插件配置\",\"280\":\"v-552cbe11#soul-bootstrap-pom-配置\",\"281\":\"v-552cbe11#soul-admin-配置\",\"282\":\"v-552cbe11#dubbo-服务-pom-配置\",\"283\":\"v-552cbe11#apache-dubbo-泛化调用介绍\",\"284\":\"v-552cbe11#通过-api-方式使用泛化调用-网关目前使用方式\",\"285\":\"v-552cbe11#通过-spring-使用泛化调用\",\"286\":\"v-552cbe11#泛化调用实现流程\",\"287\":\"v-552cbe11#soul-dubbo-插件调用解析\",\"288\":\"v-552cbe11#apachdubboplugin-泛化调用准备\",\"289\":\"v-552cbe11#apachedubboproxyservice\",\"290\":\"v-552cbe11#dubboresponseplugin\",\"291\":\"v-552cbe11#webfluxresultutils-返回结果\",\"292\":\"v-552cbe11#dubbo-泛化调用介绍\",\"293\":\"v-552cbe11#服务消费端-org-apache-dubbo-rpc-filter-genericimplfilter-是如何拦截泛化调用\",\"294\":\"v-552cbe11#服务提供端通过-genericfilter-拦截泛化请求\",\"295\":\"v-552cbe11#总结\",\"296\":\"v-552cbe11#参考\",\"297\":\"v-fd983a96\",\"298\":\"v-fd983a96#项目捐赠\",\"299\":\"v-fd983a96#基本条件\",\"300\":\"v-fd983a96#源仓库影响\",\"301\":\"v-fd983a96#仓库权限\",\"302\":\"v-fd983a96#仓库文档\",\"303\":\"v-fd983a96#版本发布\",\"304\":\"v-fd983a96#组织-社区\",\"305\":\"v-fd983a96#捐赠项目退出事宜-初版\",\"306\":\"v-fd983a96#权责与组织形式\",\"307\":\"v-fd983a96#以上规定-dromara-组委会有最终解释权\",\"308\":\"v-fd983a96#赞助-支持\",\"309\":\"v-7761875e\",\"310\":\"v-04c4cca5\",\"311\":\"v-04c4cca5#关于-apache-shenyu\",\"312\":\"v-04c4cca5#版本预览\",\"313\":\"v-04c4cca5#新特性\",\"314\":\"v-04c4cca5#增强\",\"315\":\"v-04c4cca5#重构\",\"316\":\"v-04c4cca5#bug-修复\",\"317\":\"v-04c4cca5#贡献者\",\"318\":\"v-04c4cca5#成为贡献者\",\"319\":\"v-5699072f\",\"320\":\"v-5699072f#项目介绍\",\"321\":\"v-5699072f#项目特性\",\"322\":\"v-5699072f#应用场景\",\"323\":\"v-5699072f#下载安装\",\"324\":\"v-5699072f#简单使用\",\"325\":\"v-5699072f#高级特性\",\"326\":\"v-5699072f#在-spring-boot-集成\",\"327\":\"v-5699072f#单表监听\",\"328\":\"v-5699072f#复杂监听\",\"329\":\"v-5699072f#相关链接\",\"330\":\"v-1d3999ed\",\"331\":\"v-1d3999ed#重要更新\",\"332\":\"v-1d3999ed#安装部署\",\"333\":\"v-1d3999ed#docker-部署-推荐\",\"334\":\"v-1d3999ed#社区参与\",\"335\":\"v-1d3999ed#致谢\",\"336\":\"v-1d3999ed#项目简介\",\"337\":\"v-f5ca7268\",\"338\":\"v-f5ca7268#新增功能-features\",\"339\":\"v-f5ca7268#修复缺陷-bug-fixes\",\"340\":\"v-f5ca7268#优化改进-enhancements\",\"341\":\"v-18fec81c\",\"342\":\"v-18fec81c#此次版本更新主要功能\",\"343\":\"v-18fec81c#功能展示\",\"344\":\"v-18fec81c#_1、实例中心-展示当前实例信息\",\"345\":\"v-18fec81c#_2、基础信息-点击实例-》展示当前实例的基础信息\",\"346\":\"v-18fec81c#_3、依赖监控-点击实例-》展示当前实例的依赖包信息\",\"347\":\"v-18fec81c#_4、arthas-命令操作\",\"348\":\"v-18fec81c#_5、线程池监控\",\"349\":\"v-18fec81c#_6、实时线程栈\",\"350\":\"v-18fec81c#_7、历史线程栈\",\"351\":\"v-f9eaa3e6\",\"352\":\"v-f9eaa3e6#_1-、为什么更名为-dante-cloud\",\"353\":\"v-f9eaa3e6#_2-、版本说明\",\"354\":\"v-f9eaa3e6#_3-、本次更新内容\",\"355\":\"v-f9eaa3e6#_4-、dante-cloud-2-7-x-特点\",\"356\":\"v-f9eaa3e6#一、前端\",\"357\":\"v-f9eaa3e6#二、后端\",\"358\":\"v-0aa6c4cd\",\"359\":\"v-0aa6c4cd#_1-新特性背景\",\"360\":\"v-0aa6c4cd#_2-本次更新内容\",\"361\":\"v-0aa6c4cd#_3-dante-cloud-3-0-0-后端新特性\",\"362\":\"v-0aa6c4cd#_1-核心基础依赖便捷切换\",\"363\":\"v-0aa6c4cd#_2-支持-graalvm-原生镜像\",\"364\":\"v-0aa6c4cd#_3-spring-authorization-server-全特性支持及扩展\",\"365\":\"v-0aa6c4cd#_4-dante-cloud-3-0-0-前端新特性\",\"366\":\"v-0aa6c4cd#采用-pnpm-monorepo-重构前端\",\"367\":\"v-d9da4c20\",\"368\":\"v-d9da4c20#_1-本次更新内容\",\"369\":\"v-d9da4c20#_2-生态产品-dante-oss\",\"370\":\"v-d9da4c20#优点-advantages\",\"371\":\"v-d9da4c20#对比-compare\",\"372\":\"v-d9da4c20#_1-不只是简单的-spring-boot-starter-构建\",\"373\":\"v-d9da4c20#_2-标准化业务逻辑和解决方案集合\",\"374\":\"v-d9da4c20#_3-具体差异说明\",\"375\":\"v-d9da4c20#_3-dante-cloud-3-0-0-后端新特性\",\"376\":\"v-d9da4c20#_1-核心基础依赖便捷切换\",\"377\":\"v-d9da4c20#_2-支持-graalvm-原生镜像\",\"378\":\"v-d9da4c20#_3-spring-authorization-server-全特性支持及扩展\",\"379\":\"v-d9da4c20#_4-spring-authorization-server-oauth2-device-authorization-grant-认证模式\",\"380\":\"v-d9da4c20#_4-dante-cloud-3-0-0-前端新特性\",\"381\":\"v-d9da4c20#采用-pnpm-monorepo-重构前端\",\"382\":\"v-1b286898\",\"383\":\"v-1b286898#_1-本次更新内容\",\"384\":\"v-1b286898#_2-生态产品-dante-oss\",\"385\":\"v-1b286898#优点-advantages\",\"386\":\"v-1b286898#对比-compare\",\"387\":\"v-1b286898#_1-不只是简单的-spring-boot-starter-构建\",\"388\":\"v-1b286898#_2-标准化业务逻辑和解决方案集合\",\"389\":\"v-1b286898#_3-具体差异说明\",\"390\":\"v-1b286898#_3-dante-cloud-3-0-0-后端新特性\",\"391\":\"v-1b286898#_1-核心基础依赖便捷切换\",\"392\":\"v-1b286898#_2-支持-graalvm-原生镜像\",\"393\":\"v-1b286898#_3-spring-authorization-server-全特性支持及扩展\",\"394\":\"v-1b286898#_4-spring-authorization-server-oauth2-device-authorization-grant-认证模式\",\"395\":\"v-1b286898#_4-dante-cloud-3-0-0-前端新特性\",\"396\":\"v-7f0d665a\",\"397\":\"v-7f0d665a#_1-本次更新内容\",\"398\":\"v-7f0d665a#_2-dante-cloud-3-1-x-后端新特性\",\"399\":\"v-7f0d665a#_1-核心基础依赖便捷切换\",\"400\":\"v-7f0d665a#_2-spring-authorization-server-全特性支持及扩展\",\"401\":\"v-7f0d665a#_3-spring-authorization-server-oauth2-device-authorization-grant-认证模式\",\"402\":\"v-7f0d665a#_3-dante-cloud-3-1-x-前端新特性\",\"403\":\"v-4dda72da\",\"404\":\"v-4dda72da#作者简介\",\"405\":\"v-4dda72da#关于-disjob\",\"406\":\"v-4dda72da#应用场景举例\",\"407\":\"v-4dda72da#结语\",\"408\":\"v-35d5f9a6\",\"409\":\"v-35d5f9a6#dynamictp-简介\",\"410\":\"v-35d5f9a6#v1-1-3-发布记录\",\"411\":\"v-35d5f9a6#feature\",\"412\":\"v-35d5f9a6#bugfix\",\"413\":\"v-35d5f9a6#optimize\",\"414\":\"v-35d5f9a6#项目地址\",\"415\":\"v-35d5f9a6#加入社群\",\"416\":\"v-35d5f9a6#参考资料\",\"417\":\"v-378ad245\",\"418\":\"v-378ad245#dynamictp-简介\",\"419\":\"v-378ad245#dynamictp-特性\",\"420\":\"v-378ad245#v1-1-4-发版记录\",\"421\":\"v-378ad245#bugfix\",\"422\":\"v-378ad245#optimize\",\"423\":\"v-378ad245#项目地址\",\"424\":\"v-378ad245#加入社群\",\"425\":\"v-3c7ee947\",\"426\":\"v-3c7ee947#forest-介绍\",\"427\":\"v-3c7ee947#获得奖项\",\"428\":\"v-3c7ee947#简单的栗子\",\"429\":\"v-3c7ee947#v1-5-33-新增特性\",\"430\":\"v-3c7ee947#增强自定义注解组合\",\"431\":\"v-3c7ee947#socks-协议代理\",\"432\":\"v-3c7ee947#声明式-socks-代理\",\"433\":\"v-3c7ee947#编程式-socks-代理\",\"434\":\"v-3c7ee947#官网和仓库地址\",\"435\":\"v-3c7ee947#官网地址\",\"436\":\"v-3c7ee947#gitee-仓库地址\",\"437\":\"v-3c7ee947#github-仓库地址\",\"438\":\"v-3c7ee947#本次更新内容\",\"439\":\"v-616decd0\",\"440\":\"v-616decd0#_50-天-36-位小伙伴的贡献-开源实时监控工具-hertzbeat-v1-3-1-发布\",\"441\":\"v-616decd0#what-is-hertzbeat\",\"442\":\"v-616decd0#v1-3-1-版本来了\",\"443\":\"v-616decd0#release-doc\",\"444\":\"v-616decd0#升级注意-⚠️\",\"445\":\"v-616decd0#⛄-已支持\",\"446\":\"v-6322c56f\",\"447\":\"v-6322c56f#hertzbeat-介绍\",\"448\":\"v-6322c56f#v1-3-2-来了\",\"449\":\"v-6322c56f#⛄-已支持\",\"450\":\"v-70cb7de0\",\"451\":\"v-70cb7de0#什么是-hertzbeat\",\"452\":\"v-70cb7de0#特点\",\"453\":\"v-70cb7de0#集群版来啦\",\"454\":\"v-70cb7de0#高性能集群\",\"455\":\"v-70cb7de0#云边协同\",\"456\":\"v-70cb7de0#为什么要开源集群版\",\"457\":\"v-70cb7de0#尝试部署集群版\",\"458\":\"v-70cb7de0#更多的-v1-4-0-版本更新\",\"459\":\"v-70cb7de0#⛄-已支持\",\"460\":\"v-6d61cca2\",\"461\":\"v-6d61cca2#总结起来如下\",\"462\":\"v-6d61cca2#上效果图\",\"463\":\"v-6d61cca2#什么是-hertzbeat\",\"464\":\"v-6d61cca2#特点\",\"465\":\"v-6d61cca2#尝试部署\",\"466\":\"v-90900d0a\",\"467\":\"v-90900d0a#liteflow-介绍\",\"468\":\"v-90900d0a#liteflow-v2-10-4\",\"469\":\"v-90900d0a#低头砍树-抬头看路\",\"470\":\"v-90900d0a#支持和赞助-liteflow\",\"471\":\"v-90900d0a#如何加群\",\"472\":\"v-8d265bcc\",\"473\":\"v-8d265bcc#liteflow-介绍\",\"474\":\"v-8d265bcc#liteflow-v2-10-5\",\"475\":\"v-8d265bcc#循环场景中的一些-bug-的修复\",\"476\":\"v-8d265bcc#完整更新列表\",\"477\":\"v-8d265bcc#支持和赞助-liteflow\",\"478\":\"v-8d265bcc#如何加群\",\"479\":\"v-89bcaa8e\",\"480\":\"v-89bcaa8e#liteflow-介绍\",\"481\":\"v-89bcaa8e#前言\",\"482\":\"v-89bcaa8e#全面支持-jdk17\",\"483\":\"v-89bcaa8e#支持-sql-插件使用自己定义的数据源\",\"484\":\"v-89bcaa8e#liteflow-的测试用例全面转向-junit5\",\"485\":\"v-89bcaa8e#对脚本和-java-的联动进行加强\",\"486\":\"v-89bcaa8e#对声明式组件增加了组件名称的设定\",\"487\":\"v-89bcaa8e#错误事件通知的改造\",\"488\":\"v-89bcaa8e#全局拦截器的改造\",\"489\":\"v-89bcaa8e#布尔表达式中or的短路判断\",\"490\":\"v-89bcaa8e#同一个组件复用时-step-的记录问题\",\"491\":\"v-89bcaa8e#日志方面的增强\",\"492\":\"v-89bcaa8e#完整更新列表\",\"493\":\"v-89bcaa8e#liteflow-发展路线\",\"494\":\"v-89bcaa8e#支持和赞助-liteflow\",\"495\":\"v-89bcaa8e#如何加群\",\"496\":\"v-18c5c3de\",\"497\":\"v-18c5c3de#liteflow-介绍\",\"498\":\"v-18c5c3de#v2-11-0-介绍\",\"499\":\"v-18c5c3de#新的项目-logo\",\"500\":\"v-18c5c3de#启用全新域名\",\"501\":\"v-18c5c3de#新的-slogan\",\"502\":\"v-18c5c3de#特性-1-能够用-java-原生语言来写脚本\",\"503\":\"v-18c5c3de#特性-2-支持了-redis-中存储规则和脚本\",\"504\":\"v-18c5c3de#特性-3-全方位的超时控制\",\"505\":\"v-18c5c3de#特性-4-异步循环模式\",\"506\":\"v-18c5c3de#特性-5-组件回滚\",\"507\":\"v-18c5c3de#测试用例增加到-1200-个左右\",\"508\":\"v-18c5c3de#ppt-更新\",\"509\":\"v-18c5c3de#完整更新列表\",\"510\":\"v-18c5c3de#支持和赞助-liteflow\",\"511\":\"v-18c5c3de#如何加群\",\"512\":\"v-1a7a9c7d\",\"513\":\"v-1a7a9c7d#liteflow-介绍\",\"514\":\"v-1a7a9c7d#前言\",\"515\":\"v-1a7a9c7d#sql-插件支持轮询自动更新模式\",\"516\":\"v-1a7a9c7d#when-增加-must-语法\",\"517\":\"v-1a7a9c7d#推出-el-表达式的动态组装-api\",\"518\":\"v-1a7a9c7d#链路继承\",\"519\":\"v-1a7a9c7d#组件降级\",\"520\":\"v-1a7a9c7d#支持绝对路径的模糊匹配\",\"521\":\"v-1a7a9c7d#when-线程池隔离\",\"522\":\"v-1a7a9c7d#完整的更新列表\",\"523\":\"v-1a7a9c7d#如何加群\",\"524\":\"v-7192c801\",\"525\":\"v-7192c801#概述\",\"526\":\"v-7192c801#产品特性\",\"527\":\"v-7192c801#界面\",\"528\":\"v-7192c801#下载\",\"529\":\"v-7192c801#版本说明\",\"530\":\"v-7347a0a0\",\"531\":\"v-7347a0a0#概述\",\"532\":\"v-7347a0a0#产品特性\",\"533\":\"v-7347a0a0#界面\",\"534\":\"v-7347a0a0#下载\",\"535\":\"v-7347a0a0#版本说明\",\"536\":\"v-74fc793f\",\"537\":\"v-74fc793f#概述\",\"538\":\"v-74fc793f#产品特性\",\"539\":\"v-74fc793f#界面\",\"540\":\"v-74fc793f#下载\",\"541\":\"v-74fc793f#版本说明\",\"542\":\"v-96b43fc2\",\"543\":\"v-96b43fc2#概述\",\"544\":\"v-96b43fc2#产品特性\",\"545\":\"v-96b43fc2#界面\",\"546\":\"v-96b43fc2#下载\",\"547\":\"v-96b43fc2#版本说明\",\"548\":\"v-96b43fc2#roadmap\",\"549\":\"v-96b43fc2#增强身份管理\",\"550\":\"v-96b43fc2#数据同步优化\",\"551\":\"v-96b43fc2#权限管理优化\",\"552\":\"v-934a8e84\",\"553\":\"v-934a8e84#概述\",\"554\":\"v-934a8e84#产品特性\",\"555\":\"v-934a8e84#界面\",\"556\":\"v-934a8e84#下载\",\"557\":\"v-934a8e84#版本说明\",\"558\":\"v-934a8e84#roadmap\",\"559\":\"v-934a8e84#增强身份管理\",\"560\":\"v-934a8e84#数据同步优化\",\"561\":\"v-934a8e84#权限管理优化\",\"562\":\"v-8fe0dd46\",\"563\":\"v-8fe0dd46#概述\",\"564\":\"v-8fe0dd46#产品特性\",\"565\":\"v-8fe0dd46#界面\",\"566\":\"v-8fe0dd46#下载\",\"567\":\"v-8fe0dd46#版本说明\",\"568\":\"v-8fe0dd46#roadmap\",\"569\":\"v-8fe0dd46#增强身份管理\",\"570\":\"v-8fe0dd46#数据同步优化\",\"571\":\"v-8fe0dd46#权限管理优化\",\"572\":\"v-31ac0ce5\",\"573\":\"v-31ac0ce5#内网穿透神器-neutrinoproxy-1-9-0-版本发布\",\"574\":\"v-31ac0ce5#更新内容\",\"575\":\"v-31ac0ce5#升级须知\",\"576\":\"v-31ac0ce5#项目简介\",\"577\":\"v-31ac0ce5#主要特点\",\"578\":\"v-31ac0ce5#快速使用\",\"579\":\"v-31ac0ce5#_1、-部署服务端\",\"580\":\"v-31ac0ce5#_1-1、-docker-一键部署\",\"581\":\"v-31ac0ce5#使用默认-sqlite-数据库\",\"582\":\"v-31ac0ce5#指定自己的-mysql-数据库\",\"583\":\"v-31ac0ce5#_1-2、使用-jar-包自行部署\",\"584\":\"v-31ac0ce5#_2、管理后台配置\",\"585\":\"v-31ac0ce5#_3、启动客户端\",\"586\":\"v-31ac0ce5#_4、代理验证\",\"587\":\"v-31ac0ce5#联系我们\",\"588\":\"v-fc61a36a\",\"589\":\"v-fc61a36a#【导读】自从-alphago-问世以来-我一直在思考打造一个可以集成-ai-计算能力的量化交易平台。但交易智能化的前提-是交易的程序化与自动化。只有实现了交易的程序化与自动化-才有可能谈智能化。northstar-盈富量化平台从-v1-0-至今-v6-0-前前后后摸索了两三年时间-一直在做架构迭代。务求把基础架构打牢-才有可能在智能化应用中得到快速发展。如今-v6-0-正式版经历了一个多月的实盘反复测试-确认了架构的稳定性与可扩展性得到验证。\",\"590\":\"v-fc61a36a#策略研发\",\"591\":\"v-fc61a36a#策略回测\",\"592\":\"v-fc61a36a#策略模拟运行\",\"593\":\"v-fc61a36a#策略实盘运行\",\"594\":\"v-f8f7f22c\",\"595\":\"v-f8f7f22c#【导读】v6-1-版本最大的变化是增加了监控台对移动端的适配-使得用户可以通过手机来监控自动化模组的运行状态。之前提到的策略集成强化学习-会有的-下半年重点就搞这个-敬请期待\",\"596\":\"v-f8f7f22c#新增\",\"597\":\"v-f8f7f22c#优化\",\"598\":\"v-f8f7f22c#修复\",\"599\":\"v-f8f7f22c#更多有意思的课题进行中\",\"600\":\"v-2bf1f394\",\"601\":\"v-0b741afe\",\"602\":\"v-0b741afe#更新日志\",\"603\":\"v-0b741afe#依赖升级\",\"604\":\"v-0b741afe#功能更新\",\"605\":\"v-0b741afe#新增功能\",\"606\":\"v-0b741afe#问题修复\",\"607\":\"v-0b741afe#平台简介\",\"608\":\"v-0b741afe#本框架与-ruoyi-的功能差异\",\"609\":\"v-0b741afe#本框架与-ruoyi-的业务差异\",\"610\":\"v-0b741afe#参考文档\",\"611\":\"v-7f485666\",\"612\":\"v-7f485666#开发历程\",\"613\":\"v-7f485666#视频介绍\",\"614\":\"v-7f485666#更新日志\",\"615\":\"v-7f485666#重大更新\",\"616\":\"v-7f485666#依赖升级\",\"617\":\"v-7f485666#功能更新\",\"618\":\"v-7f485666#新增功能\",\"619\":\"v-7f485666#修复问题\",\"620\":\"v-7f485666#移除功能\",\"621\":\"v-7f485666#框架文档\",\"622\":\"v-7f485666#加公开群\",\"623\":\"v-34f1ff8e\",\"624\":\"v-34f1ff8e#sa-token-v1-35-0-更新-新增动态-active-timeout-能力\",\"625\":\"v-34f1ff8e#代码仓库-https-gitee-com-dromara-sa-token\",\"626\":\"v-2b082567\",\"627\":\"v-2b082567#🌟-testhub-自动化测试工具加入-dromara-社区-🌟\",\"628\":\"v-2b082567#testhub-提供的内置能力\",\"629\":\"v-2b082567#喜欢我们的开源项目吗-请给我们点颗星\",\"630\":\"v-2b082567#软件发布阶段\",\"631\":\"v-2b082567#v-1-0-1\",\"632\":\"v-2b082567#v-1-0-0\",\"633\":\"v-2b082567#内测\",\"634\":\"v-2b082567#诚邀开发者加入\",\"635\":\"v-2b082567#加入-dromara-testhub-技术支持群的好处\",\"636\":\"v-7d5c3260\",\"637\":\"v-7d5c3260#本次更新\",\"638\":\"v-7d5c3260#使用场景\",\"639\":\"v-7d5c3260#_1-常规桌面软件\",\"640\":\"v-7d5c3260#_2-vue、react、web-转换成桌面软件\",\"641\":\"v-7d5c3260#_3-用户案例\",\"642\":\"v-7d5c3260#更多案例\",\"643\":\"v-26b980cc\",\"644\":\"v-26b980cc#本次更新\",\"645\":\"v-26b980cc#使用场景\",\"646\":\"v-26b980cc#_1-常规桌面软件\",\"647\":\"v-26b980cc#_2-vue、react、web-转换成桌面软件\",\"648\":\"v-26b980cc#_3-用户案例\",\"649\":\"v-26b980cc#更多案例\",\"650\":\"v-06d49224\",\"651\":\"v-06d49224#简介\",\"652\":\"v-06d49224#_1-团队协作支\",\"653\":\"v-06d49224#_2-openai-api-接口优化字段支持\",\"654\":\"v-06d49224#_3-api-与存储文件跳转\",\"655\":\"v-06d49224#_4-api-与存储文件跳转项目配置刷新\",\"656\":\"v-06d49224#_5-rfr-currentmodulename-支持\",\"657\":\"v-06d49224#_6-api-文档同步支持自定义分支\",\"658\":\"v-06d49224#_7-工具栏优化\",\"659\":\"v-06d49224#_8-get、post、delete、put、patch-图标\",\"660\":\"v-06d49224#修复重要-bug\",\"661\":\"v-06d49224#更多详情\",\"662\":\"v-08896ac3\",\"663\":\"v-08896ac3#简介\",\"664\":\"v-08896ac3#_1-自动域名\",\"665\":\"v-08896ac3#更多详情\",\"666\":\"v-0da7f4a0\",\"667\":\"v-0da7f4a0#简介\",\"668\":\"v-0da7f4a0#_1-全新扁平化图标\",\"669\":\"v-0da7f4a0#_2-searcheverywhere-加入过滤条件\",\"670\":\"v-0da7f4a0#_3-精简版-http-图标\",\"671\":\"v-0da7f4a0#_4-字段拷贝\",\"672\":\"v-0da7f4a0#功能更新视频介绍\",\"673\":\"v-0da7f4a0#更多详情\",\"674\":\"v-0f5ccd3f\",\"675\":\"v-0f5ccd3f#简介\",\"676\":\"v-0f5ccd3f#_1-environment\",\"677\":\"v-0f5ccd3f#_1-1-定义\",\"678\":\"v-0f5ccd3f#_1-2-使用\",\"679\":\"v-0f5ccd3f#_1-3-脚本支持\",\"680\":\"v-0f5ccd3f#_2-方法描述截断\",\"681\":\"v-0f5ccd3f#更多详情\",\"682\":\"v-1111a5de\",\"683\":\"v-1111a5de#简介\",\"684\":\"v-1111a5de#_1-快捷添加-environment-变量\",\"685\":\"v-1111a5de#_2-environment-使用界面增删改支持\",\"686\":\"v-1111a5de#_3-show-apis-快捷触发\",\"687\":\"v-1111a5de#_4-response-新增-size-属性\",\"688\":\"v-1111a5de#_5-api-名称保存优化\",\"689\":\"v-1111a5de#_6-输入参数-trim-优化\",\"690\":\"v-1111a5de#更多详情\",\"691\":\"v-6b4c0dc5\",\"692\":\"v-6b4c0dc5#简介\",\"693\":\"v-6b4c0dc5#最新域名\",\"694\":\"v-6b4c0dc5#_1-ui-简化\",\"695\":\"v-6b4c0dc5#_2-api-文档支持保存和打开\",\"696\":\"v-6b4c0dc5#_3-apis-放入到右键菜单\",\"697\":\"v-6b4c0dc5#_4-统计页面加入了版本号\",\"698\":\"v-6b4c0dc5#更多详情\",\"699\":\"v-9f83481e\",\"700\":\"v-9f83481e#hmily-发布-2-0-2-release-版本\",\"701\":\"v-9f83481e#hmily-对现在流行-rpc-框架以及-spring-的支持情况。\",\"702\":\"v-9f83481e#hmily-在-2-0-2-版本对使用者-rpc-集群时候负载均衡策略。\",\"703\":\"v-9f83481e#hmily-的具体使用文档\",\"704\":\"v-166ab031\",\"705\":\"v-166ab031#架构全景图\",\"706\":\"v-166ab031#功能\",\"707\":\"v-166ab031#重构部分\",\"708\":\"v-166ab031#解决疑难-bug\",\"709\":\"v-166ab031#用户使用与升级指南\",\"710\":\"v-166ab031#下一个版本\",\"711\":\"v-166ab031#社区共建\",\"712\":\"v-2dae727a\",\"713\":\"v-2dae727a#调整-hmily-架构-更合理的模块划分\",\"714\":\"v-2dae727a#梳理-hmily-社区-issue-解决-bug。\",\"715\":\"v-2dae727a#社区共建\",\"716\":\"v-2dae727a#最近\",\"717\":\"v-2dae727a#大约在冬季\",\"718\":\"v-2dae727a#以后的以后\",\"719\":\"v-5224044c\",\"720\":\"v-5224044c#hutool-是什么\",\"721\":\"v-5224044c#_5-8-0-m1\",\"722\":\"v-5224044c#❌-不兼容特性\",\"723\":\"v-5224044c#🐣-新特性\",\"724\":\"v-5224044c#🐞bug-修复\",\"725\":\"v-5224044c#社区共建\",\"726\":\"v-db346158\",\"727\":\"v-db346158#sms4j-v2-0-1-版本正式发布\",\"728\":\"v-d7cab01a\",\"729\":\"v-d7cab01a#sms4j-2-0-2-版本发布\",\"730\":\"v-d7cab01a#项目结构优化\",\"731\":\"v-d7cab01a#去除腾讯-sdk-依赖\",\"732\":\"v-d7cab01a#去除-uni-sms-的-sdk-依赖\",\"733\":\"v-d7cab01a#修复自定义配置抛出异常问题\",\"734\":\"v-d7cab01a#优化腾讯云短信实现\",\"735\":\"v-d7cab01a#修复-sql-配置问题\",\"736\":\"v-d7cab01a#已知问题\",\"737\":\"v-38feb2b7\",\"738\":\"v-38feb2b7#sms4j-2-0-全新来袭\",\"739\":\"v-38feb2b7#首先是-maven-的变化\",\"740\":\"v-38feb2b7#其次是功能的调整\",\"741\":\"v-38feb2b7#其他的方面\",\"742\":\"v-0edbb8d8\",\"743\":\"v-0edbb8d8#🎊sms4j-2-1-0-版本正式发布-🎊\",\"744\":\"v-0edbb8d8#🎉-新特性-🎉\",\"745\":\"v-0edbb8d8#新增天翼云短信支持\",\"746\":\"v-0edbb8d8#添加-solon-框架支持\",\"747\":\"v-0edbb8d8#supplierfactory-添加一个通用的-set-方法\",\"748\":\"v-0edbb8d8#添加负载均衡工具\",\"749\":\"v-0edbb8d8#添加了一个静态方法用于获取-linkedhashmap-实例\",\"750\":\"v-0edbb8d8#🔧-修复-🔧\",\"751\":\"v-0edbb8d8#📀-优化-📀\",\"752\":\"v-60735073\",\"753\":\"v-60735073#sms4j-2-2-0-版本正式发布\",\"754\":\"v-60735073#新特性\",\"755\":\"v-60735073#bug-修复\",\"756\":\"v-60735073#优化\",\"757\":\"v-60735073#java-se-适配\",\"758\":\"v-60735073#maven-依赖\",\"759\":\"v-60735073#配置文件\",\"760\":\"v-60735073#读取配置\",\"761\":\"v-60735073#发送短信\",\"762\":\"v-60735073#网易云短信接入\",\"763\":\"v-60735073#redis-支持接口化处理\",\"764\":\"v-60735073#插件能力发布\",\"765\":\"v-60735073#现有插件\",\"766\":\"v-60735073#结语\",\"767\":\"v-f60b3058\",\"768\":\"v-f60b3058#🎉sms4j-3-0-0-版本震撼发布-短信重试-多方共用-负载均衡正式来袭-🎉\",\"769\":\"v-f60b3058#🚀-新特性\",\"770\":\"v-f60b3058#🏇-使用方式变更\",\"771\":\"v-f60b3058#🔧-配置方式变更\",\"772\":\"v-f60b3058#yml-配置\",\"773\":\"v-f60b3058#接口类配置\",\"774\":\"v-f60b3058#📧-邮件插件\",\"775\":\"v-f60b3058#📩-邮箱监听\",\"776\":\"v-f60b3058#🔨-问题修复\",\"777\":\"v-adf1a874\",\"778\":\"v-adf1a874#soul-网关发布-1-0-4-release-版本\",\"779\":\"v-adf1a874#对-dubbo-用户使用的更改。\",\"780\":\"v-adf1a874#关于使用-1-0-4-版本的建议。\",\"781\":\"v-adf1a874#如果您之前使用的-1-0-2-版本-想要更新到-1-0-4-版本。\",\"782\":\"v-adf1a874#遇到问题\",\"783\":\"v-793b5400\",\"784\":\"v-793b5400#公司入口网关-开放平台\",\"785\":\"v-793b5400#零零总总还有很多其他功能\",\"786\":\"v-793b5400#最后最后\",\"787\":\"v-663f9427\",\"788\":\"v-663f9427#体验新架构-10-分钟搞定一个高可用高性能网关。\",\"789\":\"v-663f9427#体验新架构下的插件热插拔\",\"790\":\"v-663f9427#soul-网关的特性\",\"791\":\"v-663f9427#soul-网关有哪些使用场景-又有哪些值得你关注或者学习的\",\"792\":\"v-663f9427#从发布-2-2-0-谈谈近几年的开源体会。\",\"793\":\"v-55818bda\",\"794\":\"v-55818bda#项目背景\",\"795\":\"v-55818bda#技术选型\",\"796\":\"v-55818bda#_1-系统环境\",\"797\":\"v-55818bda#_2-主框架\",\"798\":\"v-55818bda#_3-持久层\",\"799\":\"v-55818bda#_4-视图层\",\"800\":\"v-55818bda#_5-工具类\",\"801\":\"v-55818bda#_6-通信层\",\"802\":\"v-55818bda#项目结构\",\"803\":\"v-55818bda#通信层\",\"804\":\"v-55818bda#开源地址\",\"805\":\"v-55818bda#issues-pull-requests\",\"806\":\"v-55818bda#作者介绍\",\"807\":\"v-7a1c1106\",\"808\":\"v-7a1c1106#📚-简介\",\"809\":\"v-7a1c1106#📜-更新内容\",\"810\":\"v-7a1c1106#项目依赖的变化\",\"811\":\"v-7a1c1106#配置参数的变化\",\"812\":\"v-7a1c1106#包名的变化\",\"813\":\"v-7a1c1106#📦-使用\",\"814\":\"v-7a1c1106#🔧-配置\",\"815\":\"v-7a1c1106#🔨-编码\",\"816\":\"v-7a1c1106#✨-开始上传\",\"817\":\"v-7a1c1106#🎨-其它操作\",\"818\":\"v-5b026f84\",\"819\":\"v-5b026f84#yft-design-基于-canvas-的开源版-创客贴\",\"820\":\"v-5b026f84#项目介绍\",\"821\":\"v-5b026f84#项目运行\",\"822\":\"v-5b026f84#目录结构\",\"823\":\"v-5b026f84#页面编辑\",\"824\":\"v-5b026f84#画布编辑\",\"825\":\"v-5b026f84#文字编辑\",\"826\":\"v-5b026f84#图片编辑\",\"827\":\"v-5b026f84#元素编辑\",\"828\":\"v-5b026f84#图层编辑\",\"829\":\"v-5b026f84#未来规划\",\"830\":\"v-2896140b\",\"831\":\"v-2896140b#简介\",\"832\":\"v-2896140b#v1-1-6-更新内容\",\"833\":\"v-2896140b#新增功能\",\"834\":\"v-2896140b#功能优化\",\"835\":\"v-2896140b#问题修复\",\"836\":\"v-2896140b#更新详情\",\"837\":\"v-210f2266\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,6],\"2\":[1,4],\"3\":[1,7],\"4\":[1,40],\"5\":[1,11],\"6\":[1,6],\"7\":[1,12],\"8\":[1,35],\"9\":[2,9],\"10\":[1,5],\"11\":[5,34],\"12\":[1,46],\"13\":[1,33],\"14\":[2,18],\"15\":[6,122],\"16\":[5,24],\"17\":[1,10],\"18\":[1,20],\"19\":[1],\"20\":[2,2],\"21\":[5,8],\"22\":[1,6],\"23\":[2,10],\"24\":[1,19],\"25\":[1],\"26\":[1,3],\"27\":[1,2],\"28\":[3,2],\"29\":[6,14],\"30\":[1,40],\"31\":[2,2],\"32\":[6,14],\"33\":[1,44],\"34\":[4],\"35\":[2,6],\"36\":[1,42],\"37\":[2,29],\"38\":[2,16],\"39\":[3,10],\"40\":[3,20],\"41\":[3,5],\"42\":[2,25],\"43\":[2,14],\"44\":[2,15],\"45\":[6],\"46\":[1,41],\"47\":[1,33],\"48\":[2,14],\"49\":[2,16],\"50\":[2,14],\"51\":[9],\"52\":[1,13],\"53\":[3,58],\"54\":[3,56],\"55\":[3,22],\"56\":[2,36],\"57\":[5,81],\"58\":[1],\"59\":[2],\"60\":[2,36],\"61\":[4,42],\"62\":[7,33],\"63\":[6,18],\"64\":[11,206],\"65\":[2,23],\"66\":[9,119],\"67\":[6,106],\"68\":[8,11],\"69\":[3,18],\"70\":[4,75],\"71\":[3,118],\"72\":[8],\"73\":[12,9],\"74\":[3,196],\"75\":[2,16],\"76\":[2,16],\"77\":[11,118],\"78\":[2,27],\"79\":[2,125],\"80\":[2],\"81\":[2,101],\"82\":[2,67],\"83\":[2,65],\"84\":[2,57],\"85\":[2,54],\"86\":[2,56],\"87\":[2,57],\"88\":[2,67],\"89\":[2,69],\"90\":[1,60],\"91\":[1,39],\"92\":[1,378],\"93\":[3,19],\"94\":[2],\"95\":[6],\"96\":[6,8],\"97\":[7],\"98\":[5,16],\"99\":[3],\"100\":[6,26],\"101\":[5,101],\"102\":[4,7],\"103\":[3,42],\"104\":[5,10],\"105\":[4,52],\"106\":[3,9],\"107\":[6,10],\"108\":[3,75],\"109\":[3,90],\"110\":[4,13],\"111\":[4],\"112\":[2,26],\"113\":[3,43],\"114\":[1,56],\"115\":[1,5],\"116\":[3,37],\"117\":[1,15],\"118\":[1,22],\"119\":[3,2],\"120\":[4],\"121\":[2,47],\"122\":[4,58],\"123\":[7,81],\"124\":[5,139],\"125\":[5,167],\"126\":[6,225],\"127\":[2,34],\"128\":[1,18],\"129\":[1,103],\"130\":[1,158],\"131\":[1,133],\"132\":[1,15],\"133\":[1,63],\"134\":[1,50],\"135\":[1,123],\"136\":[1,121],\"137\":[1,68],\"138\":[1],\"139\":[4],\"140\":[1,32],\"141\":[2,155],\"142\":[2,86],\"143\":[1,22],\"144\":[2,202],\"145\":[1,69],\"146\":[1],\"147\":[4,6],\"148\":[1,238],\"149\":[1,179],\"150\":[1,53],\"151\":[4,3],\"152\":[2,17],\"153\":[3,82],\"154\":[3,55],\"155\":[3,66],\"156\":[4,169],\"157\":[3,98],\"158\":[5,119],\"159\":[4],\"160\":[3,54],\"161\":[3,140],\"162\":[1,140],\"163\":[1,21],\"164\":[1,56],\"165\":[2,52],\"166\":[3,66],\"167\":[2,190],\"168\":[3,34],\"169\":[3,7],\"170\":[3,107],\"171\":[3,98],\"172\":[3,37],\"173\":[2,77],\"174\":[3,38],\"175\":[3,30],\"176\":[2,68],\"177\":[3,31],\"178\":[1,27],\"179\":[2,44],\"180\":[2,48],\"181\":[2,36],\"182\":[1,5],\"183\":[3,145],\"184\":[1],\"185\":[1,2],\"186\":[3,12],\"187\":[5],\"188\":[8,23],\"189\":[3],\"190\":[1,2],\"191\":[1,64],\"192\":[1,2],\"193\":[1,9],\"194\":[2],\"195\":[3,93],\"196\":[1],\"197\":[7],\"198\":[2,47],\"199\":[2,152],\"200\":[5,232],\"201\":[2,15],\"202\":[1],\"203\":[7,26],\"204\":[5,25],\"205\":[8,146],\"206\":[4,91],\"207\":[2,1],\"208\":[1,303],\"209\":[4,159],\"210\":[4,107],\"211\":[1,1],\"212\":[1],\"213\":[2,18],\"214\":[2],\"215\":[2,13],\"216\":[2,24],\"217\":[3,39],\"218\":[3,6],\"219\":[2,157],\"220\":[2,158],\"221\":[1,22],\"222\":[1],\"223\":[1,16],\"224\":[1,121],\"225\":[1,40],\"226\":[3,47],\"227\":[3,61],\"228\":[2,78],\"229\":[1,75],\"230\":[1,18],\"231\":[1,180],\"232\":[3,113],\"233\":[2,10],\"234\":[1,147],\"235\":[1,114],\"236\":[3,158],\"237\":[3,103],\"238\":[1],\"239\":[1,21],\"240\":[1],\"241\":[2,20],\"242\":[1],\"243\":[1,14],\"244\":[2,13],\"245\":[1,27],\"246\":[2],\"247\":[6,89],\"248\":[2],\"249\":[2,139],\"250\":[4,16],\"251\":[6,27],\"252\":[2,94],\"253\":[1,18],\"254\":[1,21],\"255\":[2,25],\"256\":[1,6],\"257\":[1,11],\"258\":[1,9],\"259\":[1,195],\"260\":[2,4],\"261\":[1,17],\"262\":[1,28],\"263\":[1,60],\"264\":[1,89],\"265\":[1,66],\"266\":[1,316],\"267\":[1],\"268\":[1,9],\"269\":[2,55],\"270\":[4,86],\"271\":[1,175],\"272\":[1,69],\"273\":[2,170],\"274\":[1,5],\"275\":[2],\"276\":[1,29],\"277\":[3,27],\"278\":[1,109],\"279\":[3],\"280\":[4,29],\"281\":[3,9],\"282\":[4,55],\"283\":[3,13],\"284\":[5,19],\"285\":[3,12],\"286\":[1,70],\"287\":[3,59],\"288\":[2,86],\"289\":[1,109],\"290\":[1,39],\"291\":[2,2],\"292\":[2,8],\"293\":[8,89],\"294\":[3,155],\"295\":[1,5],\"296\":[1,18],\"297\":[1],\"298\":[1],\"299\":[1,40],\"300\":[1,14],\"301\":[1,13],\"302\":[1,7],\"303\":[1,6],\"304\":[2,12],\"305\":[3,37],\"306\":[1,43],\"307\":[3],\"308\":[2,528],\"309\":[1],\"310\":[7],\"311\":[3,28],\"312\":[1,28],\"313\":[1,182],\"314\":[1,219],\"315\":[1,254],\"316\":[2,253],\"317\":[1,71],\"318\":[1,15],\"319\":[8],\"320\":[1,7],\"321\":[1,21],\"322\":[1,9],\"323\":[1,14],\"324\":[1,52],\"325\":[1,71],\"326\":[4,47],\"327\":[1,38],\"328\":[1,43],\"329\":[1,6],\"330\":[5,17],\"331\":[1,73],\"332\":[1],\"333\":[4,29],\"334\":[1,39],\"335\":[1,33],\"336\":[1,41],\"337\":[5],\"338\":[3,26],\"339\":[4,19],\"340\":[3,64],\"341\":[6],\"342\":[2,29],\"343\":[1],\"344\":[4],\"345\":[5],\"346\":[5],\"347\":[3],\"348\":[2],\"349\":[2],\"350\":[2],\"351\":[7,58],\"352\":[5,43],\"353\":[3,40],\"354\":[3,111],\"355\":[8],\"356\":[2,46],\"357\":[2,155],\"358\":[9,81],\"359\":[3,29],\"360\":[3,55],\"361\":[6],\"362\":[2,13],\"363\":[4,15],\"364\":[5,127],\"365\":[7],\"366\":[4,22],\"367\":[9,118],\"368\":[3,105],\"369\":[5],\"370\":[3,58],\"371\":[3],\"372\":[6,39],\"373\":[2,41],\"374\":[2,119],\"375\":[6],\"376\":[2,13],\"377\":[4,15],\"378\":[5,127],\"379\":[8,29],\"380\":[7],\"381\":[4,22],\"382\":[8,119],\"383\":[3,77],\"384\":[5],\"385\":[3,58],\"386\":[3],\"387\":[6,39],\"388\":[2,41],\"389\":[2,119],\"390\":[6],\"391\":[2,13],\"392\":[4,15],\"393\":[5,127],\"394\":[8,29],\"395\":[7,64],\"396\":[9,98],\"397\":[3,212],\"398\":[8],\"399\":[2,13],\"400\":[5,127],\"401\":[8,29],\"402\":[7,76],\"403\":[6],\"404\":[1,12],\"405\":[2,15],\"406\":[1,171],\"407\":[1,23],\"408\":[5],\"409\":[2,131],\"410\":[4,5],\"411\":[1,42],\"412\":[1,12],\"413\":[1,19],\"414\":[1,15],\"415\":[1,9],\"416\":[1,13],\"417\":[5],\"418\":[2,7],\"419\":[2,121],\"420\":[4,51],\"421\":[1,32],\"422\":[1,19],\"423\":[1,15],\"424\":[1,21],\"425\":[6],\"426\":[2,18],\"427\":[1,8],\"428\":[1,33],\"429\":[4,4],\"430\":[1,67],\"431\":[2,30],\"432\":[3,26],\"433\":[3,20],\"434\":[1],\"435\":[2,4],\"436\":[3,5],\"437\":[3,5],\"438\":[1,42],\"439\":[7],\"440\":[10,8],\"441\":[4,41],\"442\":[4,82],\"443\":[2,10],\"444\":[3,22],\"445\":[2,72],\"446\":[7],\"447\":[2,44],\"448\":[4,69],\"449\":[2,93],\"450\":[6],\"451\":[3,8],\"452\":[1,57],\"453\":[1,16],\"454\":[1,9],\"455\":[1,17],\"456\":[2,95],\"457\":[1,45],\"458\":[5,248],\"459\":[2,83],\"460\":[4,40],\"461\":[2,50],\"462\":[2,5],\"463\":[3,8],\"464\":[1,47],\"465\":[1,56],\"466\":[5],\"467\":[2,38],\"468\":[4,34],\"469\":[2,78],\"470\":[2,15],\"471\":[1,15],\"472\":[5],\"473\":[2,38],\"474\":[4,57],\"475\":[3,11],\"476\":[1,21],\"477\":[2,15],\"478\":[1,15],\"479\":[5],\"480\":[2,38],\"481\":[1,12],\"482\":[2,39],\"483\":[3,24],\"484\":[3,25],\"485\":[3,19],\"486\":[1,8],\"487\":[1,13],\"488\":[1,30],\"489\":[3,24],\"490\":[3,8],\"491\":[1,16],\"492\":[1,42],\"493\":[2,28],\"494\":[2,15],\"495\":[1,15],\"496\":[7],\"497\":[2,43],\"498\":[4,21],\"499\":[2,32],\"500\":[1,13],\"501\":[2,27],\"502\":[5,26],\"503\":[5,31],\"504\":[3,34],\"505\":[3,31],\"506\":[3,29],\"507\":[3,17],\"508\":[2,15],\"509\":[1,34],\"510\":[2,15],\"511\":[1,15],\"512\":[6],\"513\":[2,43],\"514\":[1,52],\"515\":[2,35],\"516\":[4,31],\"517\":[4,49],\"518\":[1,47],\"519\":[1,29],\"520\":[1,25],\"521\":[2,26],\"522\":[1,36],\"523\":[1,15],\"524\":[4],\"525\":[1,47],\"526\":[1,128],\"527\":[1],\"528\":[1,17],\"529\":[1,80],\"530\":[4],\"531\":[1,47],\"532\":[1,128],\"533\":[1],\"534\":[1,17],\"535\":[1,49],\"536\":[4],\"537\":[1,47],\"538\":[1,128],\"539\":[1],\"540\":[1,17],\"541\":[1,61],\"542\":[3],\"543\":[1,47],\"544\":[1,128],\"545\":[1],\"546\":[1,16],\"547\":[1,85],\"548\":[1],\"549\":[1],\"550\":[1],\"551\":[1],\"552\":[4],\"553\":[1,47],\"554\":[1,141],\"555\":[1],\"556\":[1,17],\"557\":[1,50],\"558\":[1],\"559\":[1],\"560\":[1],\"561\":[1],\"562\":[4],\"563\":[1,47],\"564\":[1,141],\"565\":[1],\"566\":[1,17],\"567\":[1,62],\"568\":[1],\"569\":[1],\"570\":[1],\"571\":[1],\"572\":[4],\"573\":[6],\"574\":[1,39],\"575\":[1,34],\"576\":[1,23],\"577\":[2,49],\"578\":[1,5],\"579\":[2],\"580\":[3,17],\"581\":[3,21],\"582\":[3,55],\"583\":[5,46],\"584\":[2,23],\"585\":[2,58],\"586\":[2,17],\"587\":[1,27],\"588\":[4],\"589\":[25,5],\"590\":[1,20],\"591\":[1,9],\"592\":[1,5],\"593\":[1,20],\"594\":[2],\"595\":[10],\"596\":[1,10],\"597\":[1,6],\"598\":[1,19],\"599\":[1,16],\"600\":[1],\"601\":[8],\"602\":[1],\"603\":[1,25],\"604\":[1,83],\"605\":[1,25],\"606\":[1,43],\"607\":[1,16],\"608\":[3,400],\"609\":[3,91],\"610\":[1,23],\"611\":[12],\"612\":[1,52],\"613\":[1,18],\"614\":[1],\"615\":[1,50],\"616\":[1,51],\"617\":[1,121],\"618\":[1,19],\"619\":[1,64],\"620\":[1,9],\"621\":[1,7],\"622\":[1,1],\"623\":[9],\"624\":[10,226],\"625\":[7,1],\"626\":[4],\"627\":[5,21],\"628\":[2,44],\"629\":[3,17],\"630\":[1],\"631\":[3,24],\"632\":[3,22],\"633\":[1,58],\"634\":[1,30],\"635\":[4,45],\"636\":[6,27],\"637\":[1,47],\"638\":[1],\"639\":[2,9],\"640\":[5,8],\"641\":[2],\"642\":[1,11],\"643\":[6,27],\"644\":[1,75],\"645\":[1],\"646\":[2,9],\"647\":[5,8],\"648\":[2],\"649\":[1,11],\"650\":[6],\"651\":[1,69],\"652\":[2,19],\"653\":[4,8],\"654\":[3,5],\"655\":[3,3],\"656\":[4,4],\"657\":[3,5],\"658\":[2,4],\"659\":[7,2],\"660\":[2,17],\"661\":[1,10],\"662\":[7],\"663\":[1,46],\"664\":[2,50],\"665\":[1,11],\"666\":[7],\"667\":[1,64],\"668\":[2],\"669\":[3,3],\"670\":[4],\"671\":[2,6],\"672\":[1,9],\"673\":[1,11],\"674\":[8],\"675\":[1,47],\"676\":[2],\"677\":[2,29],\"678\":[3,19],\"679\":[3,7],\"680\":[2,4],\"681\":[1,4],\"682\":[8],\"683\":[1,63],\"684\":[4,4],\"685\":[3],\"686\":[4,9],\"687\":[5],\"688\":[3,15],\"689\":[4,5],\"690\":[1,4],\"691\":[6],\"692\":[1,68],\"693\":[1,17],\"694\":[3,14],\"695\":[3,1],\"696\":[3,8],\"697\":[2,4],\"698\":[1,4],\"699\":[4],\"700\":[6,20],\"701\":[7,19],\"702\":[8,39],\"703\":[3,21],\"704\":[4,12],\"705\":[1,1],\"706\":[1,43],\"707\":[1,55],\"708\":[3,28],\"709\":[1,243],\"710\":[1,26],\"711\":[1,16],\"712\":[1,20],\"713\":[4,60],\"714\":[7,47],\"715\":[1,27],\"716\":[1,21],\"717\":[1,22],\"718\":[1,21],\"719\":[7,7],\"720\":[2,54],\"721\":[4],\"722\":[2,76],\"723\":[2,117],\"724\":[2,81],\"725\":[1,13],\"726\":[4],\"727\":[5,113],\"728\":[4],\"729\":[4,17],\"730\":[2,4],\"731\":[4,6],\"732\":[7,10],\"733\":[2,5],\"734\":[2,3],\"735\":[4,5],\"736\":[2,16],\"737\":[4],\"738\":[4,19],\"739\":[3,23],\"740\":[1,95],\"741\":[1,65],\"742\":[5,4],\"743\":[6,4],\"744\":[2],\"745\":[1,8],\"746\":[3,13],\"747\":[4,7],\"748\":[1,8],\"749\":[3,11],\"750\":[2,33],\"751\":[2,9],\"752\":[3],\"753\":[4,13],\"754\":[1,7],\"755\":[2,12],\"756\":[1,1],\"757\":[3,7],\"758\":[2,15],\"759\":[1,16],\"760\":[1,4],\"761\":[1,12],\"762\":[1,10],\"763\":[2,47],\"764\":[1,49],\"765\":[1,12],\"766\":[1,15],\"767\":[7],\"768\":[8,16],\"769\":[2,11],\"770\":[2,25],\"771\":[2,13],\"772\":[2,32],\"773\":[1,34],\"774\":[2,37],\"775\":[2,13],\"776\":[2,16],\"777\":[4],\"778\":[7,16],\"779\":[4,17],\"780\":[6,9],\"781\":[8,16],\"782\":[2,19],\"783\":[5,202],\"784\":[3,22],\"785\":[1,6],\"786\":[1,33],\"787\":[5,61],\"788\":[4,98],\"789\":[1,68],\"790\":[2,55],\"791\":[4,103],\"792\":[5,108],\"793\":[6],\"794\":[1,49],\"795\":[1],\"796\":[2,7],\"797\":[2,9],\"798\":[2,16],\"799\":[2,7],\"800\":[2,5],\"801\":[2,9],\"802\":[1,36],\"803\":[1,45],\"804\":[1,8],\"805\":[3,7],\"806\":[1,17],\"807\":[8,8],\"808\":[2,73],\"809\":[2,24],\"810\":[1,26],\"811\":[1,26],\"812\":[1,14],\"813\":[2,4],\"814\":[2,79],\"815\":[2,15],\"816\":[2,93],\"817\":[2,50],\"818\":[9],\"819\":[7],\"820\":[1,32],\"821\":[1,6],\"822\":[1,46],\"823\":[1,8],\"824\":[1,20],\"825\":[1,19],\"826\":[1,4],\"827\":[1,17],\"828\":[1,6],\"829\":[1,10],\"830\":[5],\"831\":[1,24],\"832\":[4,5],\"833\":[1,12],\"834\":[1,16],\"835\":[1,8],\"836\":[1,8],\"837\":[1]},\"averageFieldLength\":[2.6742243436754176,47.400312898604696],\"storedFields\":{\"0\":{\"h\":\"关于\"},\"1\":{\"h\":\"我们的愿景\",\"t\":[\"为往圣继绝学，一个人或许能走的更快，但一群人会走的更远,让每一位开源爱好者，体会到开源的快乐。\"]},\"2\":{\"h\":\"社区口号\",\"t\":[\"技术栈全面开源共建、保持社区中立、和谐快乐做开源 。\"]},\"3\":{\"h\":\"官网\",\"t\":[\"https://dromara.org 是 Dromara 开源社区官方网站。\"]},\"4\":{\"h\":\"社区项目\",\"t\":[\"目前已加入 Dromara 社区的项目包括：\",\"项目名称\",\"关注量\",\"项目介绍\",\"高性能一站式分布式事务解决方案。\",\"强一致性分布式事务解决方案。\",\"可靠消息分布式事务解决方案。\",\"轻量级的分布式日志标记追踪神器。\",\"高层的、极简的轻量级 HTTP 调用 API 框架。\",\"一个使 Java 保持甜美的工具类库。\",\"业界领先的企业级开源 IAM 身份管理和身份认证产品。\",\"无侵入分布式监控，致力于应用级监控，帮助开发人员快速定位问题。\",\"专门用于图片合成的工具。\",\"一款简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件。\",\"史上功能最全的 Java 权限认证框架！。\",\"面向 REST API 的高性能认证鉴权框架。\",\"企业生产级百亿日 PV 高可用可拓展的 RPC 框架。\",\"点击查看全部项目\"]},\"5\":{\"h\":\"加入组织\",\"t\":[\"Dromara 社区欢迎所有热爱开源的小伙伴加入，可以点击组织界面 【申请加入组织】链接进行申请，也可以发送电子邮件至 xiaoyu@dromara.org 联系我们。\"]},\"6\":{\"h\":\"组织责任\",\"t\":[\"组织不得从事违法或损人利己的事情\",\"负责社区新旧捐赠项目评审工作\",\"负责新旧社区成员管理工作\",\"负责社区下所有孵化项目推广，宣传和项目版本更新日志维护\",\"负责统筹和执行社区组织的活动\"]},\"7\":{\"h\":\"行为准则\",\"t\":[\"捐赠项目准则：所有捐赠给 Dromara 社区的项目均保留原有项目的所有权利及商业化行为，Dromara 社区除协助推广、宣传、运营不做任何干涉，但捐赠项目不得从事违法行为或诋毁 Dromara 社区名声。\",\"社区成员准则：不得从事违法或损人利己的事情。\",\"社区项目：不得从事违法或损人利己的事情\"]},\"8\":{\"h\":\"项目捐赠\",\"t\":[\"Dromara 开源社区组织对捐赠项目有以下最基本条件要求：\",\"项目必须是原创且不能是 Fork 版本。\",\"项目必须是完整的应用解决方案。\",\"项目必须有良好的代码注释和不断完善的使用文档。\",\"项目至少在近 2 个月内有实际有效的代码提交记录。\",\"项目必须得到 dromara 社区组织评委会的认可。\",\"优先考虑 Gitee 推荐项目或已获得 GVP 的项目。（GVP 项目需联系 Gitee 官方人员取消 GVP 后才能转移到组织，转移成功后恢复 GVP）\",\"优选考虑 容器工具、微服务框架和工具、分布式事务、分布式中间件、大数据处理、人工智能、IoT 物联网、开发/测试/运维相关工具链等领域项目。\",\"点击查看项目捐赠\"]},\"9\":{\"h\":\"赞助/支持\",\"t\":[\"Dromara 社区能够持续运营和提供更加优质的服务离不开大家的支持。如果想成为 Dromara 社区赞助商或支持者，请考虑支持：\",\"Dromara 社区承诺将收到的所有赞助支持资金完全公开化，且后续资金用途仅限于 Dromara 社区运营支出。\",\"点击查看全部赞助商\"]},\"10\":{\"h\":\"联系我们\",\"t\":[\"捐赠项目/加入组织：xiaoyu@dromara.org\"]},\"11\":{\"h\":\"CommunityOverCode Asia 2023 参会攻略出炉，共享开源盛宴\",\"t\":[\"从一个项目成长到今天，Apache 软件基金会（ASF）已经成为目前为止全球最大的开源软件基金会，维护着包括 350 多个顶级项目以及数十个孵化器项目，为全球提供着几十亿甚至上百亿美元市值的开源软件，是推动全球开源软件发展的重要力量。\",\"伴随着全球开源项目数量的迅速增长，我们很高兴看到越来越多中国的开发者与开源项目加入，以及越来越多高质量项目的涌现。种种迹象表明，中国在国际基金会的影响力愈发重要。\",\"今年，Apache 软件基金会的官方全球系列大会 CommunityOverCode Asia（原 ApacheCon Asia）将首次在中国线下举办，囊括 17 个论坛方向、上百个前沿议题，期待和各个层次的参与者，共赴开源盛宴，探索“今天的明天技术”。\",\"如今大会已经进入最后的倒计时，我们也为大家制作了一份详尽的参会攻略，赶紧收藏分享起来吧！\"]},\"12\":{\"h\":\"时间地点\",\"t\":[\"大会时间：\",\"2023 年 8 月 18 日 - 2023 年 8 月 20 日，早 09:30 - 18:00\",\"请参会者根据所选票种安排好自己的行程，并在早上 08:30 - 9:30 间至大会签到处签到入场\",\"大会地址：\",\"北京市海淀区知春路 25 号 北京丽亭华苑酒店\",\"路线（推荐绿色出行）：\",\"公交：至知春路站下车，步行约 81 米，约 2 分钟到达北京丽亭华苑酒店；\",\"地铁：地铁 10 号线至知春路站下车，F 东北口出步行 348 米，约 5 分钟到达北京丽亭华苑酒店；\",\"打车/自驾：可直接定位导航至北京丽亭华苑酒店，酒店停车位有限，推荐绿色出行。\",\"会议在酒店3 楼宴会厅，到达酒店后会有指引牌和引导人员哦～\"]},\"13\":{\"h\":\"签到入场\",\"t\":[\"CommunityOverCode Asia 2023 采用售票制，所有参会者（含讲师及工作人员）皆需凭票扫码入场，请您确保在大会开始前已完成购票注册。\",\"今年的大会为期 3 天，从 8 月 18 日至 8 月 20 日，各票种价格从 199 元至 6999 元不等，您可 点击此处 查看大会各票种介绍。\",\"所有成功购票的用户皆会收到大会官方的报名成功邮件，如您未收到邮件，请尝试在垃圾邮件中寻找。报名成功的邮件中，附有您的专属电子门票二维码。您也可以在百格活动微信公众号找到您的电子门票。\"]},\"14\":{\"h\":\"微信端门票二维码获取方式：\",\"t\":[\"微信搜索并关注微信公众号“百格活动”\",\"点击底部菜单栏，并选择【我的电子票】绑定您在报名系统中输入的手机号码，即可查看大会门票\",\"8 月 18 日至 8 月 20 日，北京丽亭华苑\",\"CommunityOverCode Asia，论道开源\",\"我们不见不散\"]},\"15\":{\"h\":\"摆摊啦，Dromara 与您在全球开源技术峰会（GOTC 2023）不见不散\",\"t\":[\"全球开源技术峰会（Global Open-source Technology Conference） GOTC 2023 由开放原子开源基金会、 上海浦东软件园、Linux 基金会亚太区和开源中国联合发起， 将于 5 月 27 日至 28 日在上海张江科学会堂隆重举行，Dromara 开源社区将出席本次大会。\",\"为期 2 天的开源行业盛会，将以行业展览、主题发言、论坛、圆桌、快闪演讲、开源市集等形式来诠释此次大会主题 ——“Open Source, Into the Future”。与会者将一起探讨元宇宙、安全、3D 引擎、eBPF、Web3.0、区块链等热门技术主题，以及开源治理、汽车软件、AIGC、AI 编程、开源教育培训、云原生等热门话题，探讨开源未来，助力开源发展。大会主论坛将邀请国内外多位重磅嘉宾发表致辞、主题演讲，并设置两大圆桌讨论，从多个角度探讨开源与各项技术、各个行业的结合与落地实践，探讨未来可能的发展方向。敬请关注！\",\"大会报名通道：https://www.bagevent.com/event/8387611\",\"大会官网： https://gotc.oschina.net\",\"GOTC 2023 由一个主论坛、十余个分论坛组成。\",\"本次大会将邀请 LF AI & Data 基金会执行董事、PyTorch 基金会执行董事 Ibrahim Haddad、OpenSSF 总经理 Brian Behlendorf、Open 3D 基金会执行董事 Royal O'Brien、Hyperledger 基金会执行董事 Daniela Barbosa，以及来自百度、华为、腾讯、火山引擎、红帽、Intel、VMWare、F5、微软、开源中国等企业的全球开源重磅嘉宾出席，为开发者、为行业分享开源的观点、经验借鉴与未来探索。\",\"● 开源市集\",\"在大会展厅，三十多家开源技术社区将以创意摆摊的方式，打造一场身临其境的沉浸式市集体验，展示开源项目、周边商品，交流开源技术、开源理念、开放协作方式。Dromara开源社区将在开源集市展位等待大家，我们给大家准备精美礼品~ Hutool 阿超，LiteFlow 铂赛东，Forest 子骏，DataCompare 子房等众多大佬等你线下网友面基\",\"张江科学会堂\"]},\"16\":{\"h\":\"HDC.Cloud 2023 | Dromara社区在华为云开发者大会精彩花絮\",\"t\":[\"华为开发者大会 2023（Cloud）在东莞圆满落幕，会上众多 AI 黑科技与精彩演讲，Dromara 社区和 Apache Shenyu 社区的小伙伴也应邀参加，和开发者们分享了开源的故事。\",\"Dromara 开源社区加入 HuaweiCloud 开源业务全景图\",\"开源是开发者生态中不可或缺的环节，华为云一直在倡导和推动开源生态发展，推出了开源 For 华为云业务生态全景图，Dromara 开源社区也作为开源社区组织加入其中，未来更多与华为云开源生态的结合。\"]},\"17\":{\"h\":\"\",\"t\":[\"开源生态合作圆桌讨论会\",\"各个领域的专家齐聚一堂，围绕着华为云如何帮助开源开发者实现商业化价值各抒己见，其中不乏尖锐的开源白嫖等话题，加深了开源企业，开源组织，开源个人和开源高校的之间的交流认知，Dromara 猫大也作为开源组织代表发表了自己的见解。\"]},\"18\":{\"h\":\"\",\"t\":[\"开源演讲-让每一位开源爱好者享受开源红利\",\"Dromara 社区的小伙伴 猫大 tom 永伦分别给大家介绍了我们的 Dromara 开源社区，社区与华为云开源解决方案合作进展，HertzBeat 开源项目介绍和与华为云的结合，Apache ShenYu 助力中小型企业应对高并发洪流，线下和开发者与开源爱好者们接触交流，收获良多。\",\"Done!  期待下一次再与开源小伙伴们和开发者们线下交流学习，一起进步。\"]},\"19\":{\"h\":\"活动\"},\"20\":{\"h\":\"Dromara 梦码读书会介绍\",\"t\":[\"Dromara 梦码读书会介绍\"]},\"21\":{\"h\":\"Dromara 梦码读书会（Dromara 2020 活动介绍）\",\"t\":[\"日期：2020 年 12 月 27 日，星期日\"]},\"22\":{\"h\":\"活动背景\",\"t\":[\"为了提高社区参与者的积极性, 促进 Dromara 社区的建设, 锻炼大家的表达能力和提升技术核心力量, 社区以源码阅读形式自发行的组织本次活动\"]},\"23\":{\"h\":\"活动目的,意义和目标\",\"t\":[\"提高积极性\",\"提升技术力量,扩展大家视野\",\"锻炼语言表达能力\",\"促进社区的和谐、团结、共进\",\"将 Dromara 社区做的越来越大\"]},\"24\":{\"h\":\"活动开展\",\"t\":[\"活动分多期,先是挑选十二位组员进行为期 12 天的源码阅读,期间进行两次线上分享\",\"为了提高大家的自觉性我们设立了惩罚制度,先交出 500 元/人给管理员,隔天的早上 8 点作业未提交,分享迟到者扣 100 元/次,提前请假者无需惩罚\",\"每人根据每天阅读的内容,以文字形式写到各自的作业提交区\"]},\"25\":{\"h\":\"活动负责人以及主要参与者\"},\"26\":{\"h\":\"负责人\",\"t\":[\"崔,kimming,猫大人\"]},\"27\":{\"h\":\"主要参与者\",\"t\":[\"Dromara 社区组员\"]},\"28\":{\"h\":\"Dromara Soul 源码01期阅读分享会02\",\"t\":[\"Dromara 线上活动\"]},\"29\":{\"h\":\"Dromara 源码阅读（Soul 2021 首次活动）\",\"t\":[\"日期：2021 年 2 月 6 日，星期日\",\"时间：20:00 – 23:00\",\"地点：线上腾讯会议室\"]},\"30\":{\"h\":\"活动详情\",\"t\":[\"20:00 - 20:10 开场介绍近期梦码分享情况 by kimming & 崔\",\"20:10 - 20:25 SPI 介绍以及 Soul SPI 如何增强实现 by 朱明\",\"20:25 - 20:50 响应式编程介绍 by Ztzzz\",\"20:50 - 21:10 Soul 单测小结 by 阿行\",\"21:10 - 21:25 容错设计 by 蒋文博\",\"21:25 - 21:40 Soul WebFlux 加载流程以及处理请求分析 by rwby\",\"21:40 - 21:55 Soul 限流和熔断分析 by 刘鹏辉\",\"21:55 - 22:05 Java 常见问题总结 by 木偶\",\"22:05 - 22:20 如何打开社交面 by 伟楷\",\"22:20 - 22:30 Soul 作者 猫大人 总结与 展望 by 猫大人\"]},\"31\":{\"h\":\"Dromara Soul源码01期阅读分享会01\",\"t\":[\"Dromara 线上活动\"]},\"32\":{\"h\":\"Dromara 源码阅读（Soul 2021 首次活动）\",\"t\":[\"日期：2021 年 1 月 24 日，星期日\",\"时间：15:00 – 17:00\",\"地点：线上腾讯会议室\"]},\"33\":{\"h\":\"活动详情\",\"t\":[\"15:00 - 15:10 开场介绍梦码分享流程 by kimming & 崔\",\"15:10 - 15:25 Soul 数据同步之 websocket by 婷\",\"15:25 - 15:50 Http 探活分享 by 朱明\",\"15:50 - 16:10 基于 Sofa-Rpc 协议的分析 by 东东\",\"16:10 - 16:25 Metrics 监控 by 葛天野\",\"16:25 - 16:40 Http 长轮询分享 by 杜宇航\",\"16:40 - 16:55 数据同步整体架构分享与介绍 by 夏文涛\",\"16:55 - 17:05 微内核架构分享 by 沈祥俊\",\"17:05 - 17:20 分享读源码的心得与感悟 by 金泽\",\"17:20 - 17:30 Soul 作者 猫大人 总结与 社区发展 展望 by 猫大人\"]},\"34\":{\"h\":\"开源之夏学生招募中 | 认领项目赢取丰厚奖金。Dromara课题项目介绍之系列一\"},\"35\":{\"h\":\"开源之夏 2023\",\"t\":[\"开源之夏是由中科院软件所开源软件供应链点亮计划发起并长期支持的一项暑期开源活动，旨在鼓励在校学生积极参与开源软件的开发维护，培养和发掘更多优秀的开发者，促进优秀开源软件社区的蓬勃发展，助力开源软件供应链建设。\"]},\"36\":{\"h\":\"学生开启报名\",\"t\":[\"开源之夏 2023 学生报名 4 月 29 日正式开启啦！明天开始，同学们就可以在开源之夏官网 https://summer-ospp.ac.cn/ 挑选项目，与导师沟通并准备项目申请材料、提交申请。\",\" 这么多项目任务，是不是已经跃跃欲试了？不管你是新手还是老手，无论你想要贡献代码，还是学习开源技术和进行开发实践，或是想为自己的履历增添优势，在开源之夏，你都能找到自己的机会。带着对开源的探索和求知之心，欢迎在校的你报名加入开源之夏 2023，一起探索今夏的无限可能！\",\"在开源之夏，参与学生有机会与众多开源社区和资深开发者导师进行交流和互动，提升自己的技术水平和实践能力，掌握更多开源知识和技能。成功结项的你还将获得丰厚项目奖金——基础难度项目：8000 元、进阶难度项目：12000 元（税前），以及有机会成为 Dromara 社区成员享受福利多多！\"]},\"37\":{\"h\":\"Dromara 社区介绍\",\"t\":[\"Dromara 是由国内顶尖的开源项目作者共同组成的开源社区。提供包括分布式事务，流行工具，企业级认证，微服务 RPC，运维监控，Agent 监控，分布式日志，调度编排等一系列开源产品、解决方案与咨询、技术支持与培训认证服务。技术栈全面开源共建、 保持社区中立，致力于为全球用户提供微服务云原生解决方案。让参与的每一位开源爱好者，体会到开源的快乐。\",\"Dromara 开源社区目前拥有 10+GVP 项目，总 star 数量超过十万，构建了上万人的开源社区，有成千上万的个人及团队在使用 Dromara 社区的开源项目。\"]},\"38\":{\"h\":\"Dromara 社区课题项目系列一\",\"t\":[\"我们在接下来的几天陆续推送 Dromara 社区下课题项目介绍，欢迎大家关注了解。选择自己感兴趣的课题申请。 今天给大家带来的是 Dromara 开源组织官网设计开发 和 为 Easy-Es 提供自定义注解，支持字段与索引一对多映射关系课题任务门槛不会太高的哦，且全程由 Dromara 社区导师倾心指导。\"]},\"39\":{\"h\":\"一. Dromara 开源组织官网设计开发\",\"t\":[\"重新设计 dromara 官网。目前 dromara 组织有 30+的项目，超过 20W+star。是开源中国最受欢迎的组织。\"]},\"40\":{\"h\":\"项目需求 1：\",\"t\":[\"新官网除了要表现出大气，美观。还要梳理出目前社区组织结构，成员列表，贡献者文档等。\",\"最重要的由于我们的项目比较多，新闻，活动，版本发布比较多。所有需要按照项目维度去设计项目，博客，社区等分类。学生需要会前端开发，自定义开发官网，包含不限于 node.js.vue.js 等。\"]},\"41\":{\"h\":\"项目需求 2：\",\"t\":[\"需要搬运已经存在的新闻，发版活动，并且翻译成英文。（这也是个挑战）\"]},\"42\":{\"h\":\"主要产出如下：\",\"t\":[\"包括主页的重新设计\",\"项目的重新分类，设计，更新项目\",\"Blog 按照项目分类，更新博客\",\"社区按照项目分类，并且更新文档\",\"新增社区组织架构与成员文档\",\"新增社区捐赠流程等文档\",\"其他（可以自己提一些好的想法和建议，与导师沟通）\",\"地址：https://dromara.org\",\"项目源码：https://github.com/dromara/dromara.github.io\",\"导师联系邮箱：549477611@qq.com\"]},\"43\":{\"h\":\"项目技术要求：\",\"t\":[\"熟练的前端开发，会 JavaScrpt，Node.js, react.js, vue.js 中的其中之一\",\"熟悉 Github action\",\"熟悉 hugo 这种静态网站框架\",\"较强的英文表达能力\"]},\"44\":{\"h\":\"项目成果仓库：\",\"t\":[\"https://github.com/dromara/dromara.github.io\",\"申请地址：https://summer-ospp.ac.cn/org/prodetail/23ee40016?lang=zh&list=pro\"]},\"45\":{\"h\":\"二. 为 Easy-Es 提供自定义注解，支持字段与索引一对多映射关系\"},\"46\":{\"h\":\"项目简介\",\"t\":[\"Easy-Es 是一款由国内开发者打造并完全开源的 ElasticSearch 搜索引擎 ORM 框架. 兼具轻量,智能,高效,低码,易用,易拓展等特性,全自动索引托管及数据迁移,平均可节省 3-8 倍代码量，并显著减少开发和运维负担。上线仅一年多时间,收获 STAR 总计 4K+,社区 Q 及微信群成员近 2000 人,OSC 搜索引擎类目排名第一并长期占据该类目热搜榜首, 社区活跃,处理 issue 200+，以及解答 Easy-Es 共计 9 个社区群内的各种问题，长期坚持用爱发电。\"]},\"47\":{\"h\":\"项目产出要求\",\"t\":[\"1.通过提供自定义注解，能够支持对单个类成员变量配置生成索引逻辑，能够生成一对多的索引关系，以此来支持实际使用中针对单字段检索时可以既使用中文分词器，又使用拼音分词器和英文分词器的场景，比如在实际使用 ES 的业务场景中，有用户需要检索药品库中某种药品，针对同一个字段，无论用户输入的是该药品的中文名称或是汉语拼音甚至英文学名等均可以被检索到对应药品，此时就可以通过此功能来解决。其底层实现可以参考目前已有的@IndexField注解，目前该注解仅支持一对一映射，若要实现上述功能需要用户创建多个冗余字段才可以，因此需要学生新增@IndexMultiField注解，并将其拓展为支持一对多的映射关系，通过一对多映射可以更加优雅解决此类需求，不需要额外创建冗余字段，并且占用的磁盘存储空间也相对更少。\",\"2.该自定义注解需要在框架已有的索引托管-“自动挡模式”下自动创建索引，并在项目启动时感知索引变化，自动完成索引的创建/更新以及数据的自动迁移，需要在现有的自动挡模式下兼容此一对多索引关系，其实现原理仍然可以参考当前已有的单字段注解@IndexField注解。\"]},\"48\":{\"h\":\"项目技术要求：\",\"t\":[\"掌握 Java 编程语言及 Git 和 Elasticsearch\",\"熟悉 Java 及 lambda 语法\",\"熟悉 Git 常用命令\",\"熟悉 Elasticsearch 搜索引擎\",\"了解 Springboot\"]},\"49\":{\"h\":\"项目成果仓库：\",\"t\":[\"https://gitee.com/dromara/easy-es\",\"申请地址：https://summer-ospp.ac.cn/org/prodetail/23ee40017?list=org&navpage=org\"]},\"50\":{\"h\":\"快速参与开源之夏 2023\",\"t\":[\"开源之夏 2023 Dromara 社区各项目课题将从 4 月 29 日开始接受学生参与项目申请，欢迎通过上方联系方式，与各导师沟通并准备项目申请材料。\",\"我们 Dromara 社区会在接下来几天陆续介绍项目课题系列，欢迎大家关注了解选择你感兴趣的课题申请。\"]},\"51\":{\"h\":\"DTSE Tech Talk | 第29期：理解读与用户一起“跳动”的开源实时监控工具 HertzBeat\"},\"52\":{\"h\":\"本期直播详解\",\"t\":[\"在本期《开源实时监控工具 HertzBeat 如何与用户一起“跳动？》的主题直播中，HertzBeat & TanCloud 创始人巩超与开发者和伙伴朋友们交流当前主流指标监控方案，解读 HertzBeat 及能力特点，并为大家演示了如何通过华为云商店安装部署 HertzBeat 方法。\"]},\"53\":{\"h\":\"* *HertzBeat 是什么？**\",\"t\":[\"可以把它定义为一款指标监控工具，然后也是一个开源项目：https://github.com/dromara/hertzbeat 。\",\"HertzBeat 中文名称为赫兹跳动 ，是一个拥有强大自定义监控能力，无需 Agent 的开源实时监控告警工具。HertzBeat 集 监控+告警+通知 为一体，支持对应用服务，数据库，操作系统，中间件，云原生，网络等监控，阈值告警通知一步到位。具有更自由化的阈值规则(计算表达式)，邮件、Discord Slack Telegram、钉钉、微信、飞书、短信、Webhook 等方式及时送达。而且，HertzBeat 可将 Http、Jmx、Ssh、Snmp、Jdbc 等协议规范可配置化，用户只需在浏览器配置 YML 就能使用这些协议去自定义采集任何您想要的指标。\",\"你相信，只需配置下就能立刻适配一款 K8s 或 Docker 等新的监控类型吗？HertzBeat 的强大自定义，多类型支持，易扩展，低耦合，能帮助开发者和中小团队快速搭建自有监控系统。\"]},\"54\":{\"h\":\"* *HertzBeat 的强大自定义功能**\",\"t\":[\"作为一款新出的监控工具，Hertzbeat 并没有去创建自有的协议让对端监控去适配，因为这需要大量的生态适配和自生产品强大的影响力才能做到让别人来改造适配，这对一个新晋开源项目来说是不现实的。针对市面上已有的标准协议，Hertzbeat 只需使用这些协议并把它们做好，就可以满足绝大部分需求。\",\"在网管协议 snmp 中，主流数据库的 sdk 中要属 java 的最完整规范。java jdbc 规范可以让我们去直连所有的主流数据库。java mbean 指标信息通过 jmx 方式暴露，很多应用都提供 api json 接口供我们获取，当然还有 ssh 直连 linux unix 系统运行脚本获取回显，ipmi 去监控服务器指标，现有的 promethues exporter，openmetrics 规范等等，这些协议规范可以满足我们绝大部分场景。\",\"而 Hertzbeat 就是将 http、jmx、snmp、jdbc、ssh 等等协议或格式抽象规范，使其可统一配置化。用户通过配置 YML 格式的监控模版定义， 就能使用这些协议来采集想要的指标。\",\"一个监控类型对应一个监控模版，监控模版定义的配置也是在页面可操作的，目前官方支持的所有监控类型，其实就是一个个监控模版。用户可以在页面新增自定义的监控模版，也可以对内置模版修改更新。\"]},\"55\":{\"h\":\"* *HertzBeat 的易用来自于诸多模板支持**\",\"t\":[\"目前 HertzBeat 已支持应用服务、数据库、操作系统、云原生等领域的监控模板。主要原理是它将监控采集类型(mysql、jvm、k8s)都定义为 yml 监控模版，用户可以导入这些模版来支持对应类型的监控。\",\"不仅如此，也支持多平台告警消息渠道，标签&级别过滤，支持告警静默，恢复，通知时段等等。\"]},\"56\":{\"h\":\"* *开源项目离不开小伙伴协助**\",\"t\":[\"Hertzbeat 目前在 github gitee 都有同步仓库，其是开源社区 Dromara 下的开源项目。\",\"https://github.com/dromara/hertzbeat github star 3k，\",\"https://gitee.com/dromara/hertzbeat gitee star 1.6k , gitee gvp\",\"Dockerhub 下载量 10K+。作为一个开源项目，除了项目本身的 star 数量，下载数量等活跃度之外，项目的开发者生态也是及其重要的。目前有超过 121 位小伙伴给 hertzbeat 代码仓库贡献过 PR，hertzbeat 的现在离不开开发者们的每一行代码。我们作为程序员可能大家都会有这样一个想法，就是自己写的代码可以部署到成千上万的服务器跑起来中给他人使用，这样的想法或者说是小梦想我们正在慢慢做到，想想有点小激动哈哈。\"]},\"57\":{\"h\":\"* *HertzBeat for Huawei Cloud**\",\"t\":[\"关于 HuaweiCloud 开源活动，华为云面向开源软件工具链与环境、开源应用构建和开源生态组件构建这三大重点场景，提供技术支持、奖金支持、活动支持，邀请更多的开发者，携手构建开源 for HuaweiCloud。\",\"开发者将开源软件工具、开源应用和开源组件与华为云对象存储 OBS、数仓 DWS、云容器 CCE 等云服务对接，同时基于 Terraform 模板，上架到华为云云商店，支持其他开发者一键部署使用开源组件 ，称为“开源 xxx for HuaweiCloud”。\",\"Hertzbeat 与 Huaweicloud 的开源合作需求已经作为 feature issue 发布到 github 仓库了，已经实现了三个，欢迎大家了解。\",\"[Task] support using Huawei Cloud OBS to store custom define yml file #841\",\"[Task] support Huawei Cloud CCE metrics monitoring #839\",\"[Task] support EulerOS metrics monitoring #838\",\"[Task] support using Huawei Cloud SMN send alarm notification message #837\",\"[Task] support using GaussDB For Influx store history metrics data #836\",\"为了更好的方便用户基于华为云部署 Hertzbeat，大家可前往华为云商店参看，只需几分钟就可一键部署 Hertzbeat。通过华为云商店部署 Hertzbeat，除了对用户的方便快捷之外，对开源团队也是有意义。Hertzbeat 本身在云商店完全免费，用户在云商店部署只收取本来的云服务器费用。当用户通过这样方式部署到云服务器时，华为云会给开源团队一定的云服务器费用分成来资助开源团队的发展。\",\"如果你刚好需要云服务器来部署 hertzbeat，可以通过华为云商店免费使用。\"]},\"58\":{\"h\":\"博客\"},\"59\":{\"h\":\"Hmily：轻松搞定高并发分布式事务\"},\"60\":{\"h\":\"Hmily 高并发事务处理\",\"t\":[\"开始先打个小小的广告 Hmily 在参加开源中国年度受欢迎投票 https://www.oschina.net/project/top_cn_2018?origin=zhzd 点击链接，搜索 Hmily 帮忙投下票,在第 11 横排第二个，感谢大家！ 也欢迎大家关注，或者提交 pr，让 Hmily 变的更好，更完美。 gitHub: [https://github.com/yu199195/hmily] gitee: [https://gitee.com/dromara/hmily]\",\"接下来回答一下 社区的一些问题，和大家一些疑惑的地方！\"]},\"61\":{\"h\":\"1. Hmily 的性能问题？\",\"t\":[\"答：Hmily 是采用 AOP 切面的方式与你的 RPC 方法绑定，无非就是在你 RPC 调用的时候，保存了日志（通过异步 disruptor），传递了一些参数。现在 confrim，cancel 也都为异步的调用，因此其性能与你的 rpc 性能一样。记住 Hmily 不生产事务，Hmily 只是分布式事务的搬运工。之前 Hmily 在 AOP 切面加了一把锁，导致了性能下降，也就是 Spring cloud 中国社区做的那篇文章。现在已经全部修复，并且全部异步化。其实那么测试时不合理的，因为是压测的 demo，都是默认的配置。下文我会讲解，怎么样才能提高 Hmiy 性能。\"]},\"62\":{\"h\":\"2. 关于 RPC 调用超时 Hmily 是怎么处理的？\",\"t\":[\"答： 我们支持在分布式环境中调用一个 RPC 方法，如果超时了。比如 dubbo 设置的超时时间是 100ms,可能你的方法用了 140ms,但是你的方法是执行成功了的。但是对调用方来说，你是失败的。这个时候需要回滚。所以 Hmily 的做法是。调用者认为你是失败的，不会将加入的回滚调用链条中。因此超时的 rpc 接口方，进行自身的回滚。会有一个定时任务来进行回滚，因为日志状态是 try 阶段，会调用 cancel 方法进行回滚，从而到达最终一致性！\"]},\"63\":{\"h\":\"3.Hmily 支持集群部署的问题？以及集群环境中，定时任务日志恢复的问题？\",\"t\":[\"答：Hmily 是和你的应用 AOP 切面绑定在一起的，天然支持集群。集群环境中定时恢复问题，其实几乎没有，除非你的集群同时一下挂掉，才会有这个问题。当你集群同时挂掉，在恢复的时候，日志会有一个 version 字段，更新成功的，才会去进行恢复。\"]},\"64\":{\"h\":\"4.Hmily 是异步保存日志的，那么很极端情况下（代码刚好执行到这一行,然后 jvm 退出，断电啦什么的），日志还没保存那怎么处理呢？\",\"t\":[\"答:这种想法的，肯定是没看源码，或者是看了没怎么看懂。在 AOP 切面中，会先进行日志的异步保存，注意状态是 PRE_TRY。在 try 执行完成后，更新为 try。就算存在可能你说的什么断电，什么你在打断电调试，然后 kill 服务之类的。（Mysql 我都可以让他事务失效，你信不信？）我只能说，不要花大力气去解决那些偶然的事情，最好的解决办法是不解决它。 Hmily 针对高并发时候的参数配置调优。 可能这部门内容针对熟悉 Hmily 的人来说，不熟悉的也没关系。直接上 github 上看相关文档就好。 hmily 支持 Spring bean xml 方式的配置，同时也支持 spring boot start yml 方式的配置。\",\" <bean id=\\\"hmilyTransactionBootstrap\\\" class=\\\"com.hmily.tcc.core.bootstrap.HmilyTransactionBootstrap\\\"> <property name=\\\"serializer\\\" value=\\\"kryo\\\"/> <property name=\\\"recoverDelayTime\\\" value=\\\"120\\\"/> <property name=\\\"retryMax\\\" value=\\\"3\\\"/> <property name=\\\"loadFactor\\\" value=\\\"2\\\"/> <property name=\\\"scheduledDelay\\\" value=\\\"120\\\"/> <property name=\\\"scheduledThreadMax\\\" value=\\\"4\\\"/> <property name=\\\"bufferSize\\\" value=\\\"4096\\\"/> <property name=\\\"consumerThreads\\\" value=\\\"32\\\"/> <property name=\\\"started\\\" value=\\\"false\\\"/> <property name=\\\"asyncThreads\\\" value=\\\"32\\\"/> <property name=\\\"repositorySupport\\\" value=\\\"db\\\"/> <property name=\\\"tccDbConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccDbConfig\\\"> <property name=\\\"url\\\" value=\\\"jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8\\\"/> <property name=\\\"driverClassName\\\" value=\\\"com.mysql.jdbc.Driver\\\"/> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> </bean> \",\"serializer :这里我推荐使用是 kroy。当然 hmily 也支持 hessian,protostuff,jdk。在我们测试中表现为: kroy>hessian>protostuff>jdk\",\"recoverDelayTime :定时任务延迟时间（单位是秒，默认 120。这个参数只是要大于你的 rpc 调用的超时时间设置。\",\"retryMax : 最大重复次数，默认 3 次。当你的服务 down 机，定时任务会执行 retryMax 次数去执行你的 cancel 还是 confrim。\",\"bufferSize: disruptor 的 bufferSize,当高并发的时候，可以调大。注意是 2n 次方\",\"consumerThreads distuptor 消费线程数量,高并发的时候，可以调大。\",\"started: 注意在是发起方的时候，把此属性设置为 true。参与方为 false。\",\"asyncThreads 异步执行 confirm 和 cancel 线程池线程的大小，高并发的时候请调大\",\"接下来是最重要的事务日志的存储 在我们的压测中，推荐使用 mongo。表现为 mongodb>redis 集群>mysql>zookeeper\",\"如果你采用 mongodb 存储日志,配置如下(url 可以配置成 mongdb 集群的 url)\",\" <property name=\\\"repositorySupport\\\" value=\\\"mongodb\\\"/> <property name=\\\"tccMongoConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccMongoConfig\\\"> <property name=\\\"mongoDbUrl\\\" value=\\\"192.168.1.68:27017\\\"/> <property name=\\\"mongoDbName\\\" value=\\\"happylife\\\"/> <property name=\\\"mongoUserName\\\" value=\\\"xiaoyu\\\"/> <property name=\\\"mongoUserPwd\\\" value=\\\"123456\\\"/> </bean> </property> \",\"如果你采用 redis 存储日志,配置如下：\",\"redis 单节点\",\" <property name=\\\"repositorySupport\\\" value=\\\"redis\\\" /> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"hostName\\\" value=\\\"192.168.1.68\\\"/> <property name=\\\"port\\\" value=\\\"6379\\\"/> <property name=\\\"password\\\" value=\\\"\\\"/> </bean> </property> \",\"redis 哨兵模式集群:\",\"<property name=\\\"repositorySupport\\\" value=\\\"redis\\\"/> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"masterName\\\" value=\\\"aaa\\\"/> <property name=\\\"sentinel\\\" value=\\\"true\\\"/> <property name=\\\"sentinelUrl\\\" value=\\\"192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> \",\"redis 集群:\",\"<property name=\\\"repositorySupport\\\" value=\\\"redis\\\"/> <property name=\\\"tccRedisConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccRedisConfig\\\"> <property name=\\\"cluster\\\" value=\\\"true\\\"/> <property name=\\\"clusterUrl\\\" value=\\\"192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> \",\"如果你采用 zookeeper 存储日志,配置如下：\",\" <property name=\\\"repositorySupport\\\" value=\\\"zookeeper\\\"/> <property name=\\\"tccZookeeperConfig\\\"> <bean class=\\\"om.hmily.tcc.common.config.TccZookeeperConfig\\\"> <property name=\\\"host\\\" value=\\\"192.168.1.73:2181\\\"/> <property name=\\\"sessionTimeOut\\\" value=\\\"100000\\\"/> <property name=\\\"rootPath\\\" value=\\\"/tcc\\\"/> </bean> </property> \",\"数据库的配置在上面已经有了，使用 file 方式的存储我就不介绍了.\",\"以上就是今天分享的内容，一个注解，几行配置轻轻松松搞定高并发分布式事务！\"]},\"65\":{\"h\":\"Hmily：高性能异步分布式事务TCC框架\",\"t\":[\"无缝集成 Spring,Spring boot start。\",\"无缝集成 Dubbo,SpringCloud,Motan 等 rpc 框架。\",\"多种事务日志的存储方式（redis，mongdb,mysql 等）。\",\"多种不同日志序列化方式（Kryo,protostuff,hession）。\",\"事务自动恢复。\",\"支持内嵌事务的依赖传递。\",\"代码零侵入,配置简单灵活。\"]},\"66\":{\"h\":\"1.采用 disruptor 进行事务日志的异步读写（disruptor 是一个无锁，无 GC 的并发编程框架）\",\"t\":[\"package com.hmily.tcc.core.disruptor.publisher; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.common.enums.EventTypeEnum; import com.hmily.tcc.core.concurrent.threadpool.HmilyThreadFactory; import com.hmily.tcc.core.coordinator.CoordinatorService; import com.hmily.tcc.core.disruptor.event.HmilyTransactionEvent; import com.hmily.tcc.core.disruptor.factory.HmilyTransactionEventFactory; import com.hmily.tcc.core.disruptor.handler.HmilyConsumerDataHandler; import com.hmily.tcc.core.disruptor.translator.HmilyTransactionEventTranslator; import com.lmax.disruptor.BlockingWaitStrategy; import com.lmax.disruptor.IgnoreExceptionHandler; import com.lmax.disruptor.RingBuffer; import com.lmax.disruptor.dsl.Disruptor; import com.lmax.disruptor.dsl.ProducerType; import org.springframework.beans.factory.DisposableBean; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Component; import java.util.concurrent.Executor; import java.util.concurrent.LinkedBlockingQueue; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; import java.util.concurrent.atomic.AtomicInteger; /** * event publisher. * * @author xiaoyu(Myth) */ @Component public class HmilyTransactionEventPublisher implements DisposableBean { private Disruptor<HmilyTransactionEvent> disruptor; private final CoordinatorService coordinatorService; @Autowired public HmilyTransactionEventPublisher(final CoordinatorService coordinatorService) { this.coordinatorService = coordinatorService; } /** * disruptor start. * * @param bufferSize this is disruptor buffer size. * @param threadSize this is disruptor consumer thread size. */ public void start(final int bufferSize, final int threadSize) { disruptor = new Disruptor<>(new HmilyTransactionEventFactory(), bufferSize, r -> { AtomicInteger index = new AtomicInteger(1); return new Thread(null, r, \\\"disruptor-thread-\\\" + index.getAndIncrement()); }, ProducerType.MULTI, new BlockingWaitStrategy()); final Executor executor = new ThreadPoolExecutor(threadSize, threadSize, 0, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), HmilyThreadFactory.create(\\\"hmily-log-disruptor\\\", false), new ThreadPoolExecutor.AbortPolicy()); HmilyConsumerDataHandler[] consumers = new HmilyConsumerDataHandler[threadSize]; for (int i = 0; i < threadSize; i++) { consumers[i] = new HmilyConsumerDataHandler(executor, coordinatorService); } disruptor.handleEventsWithWorkerPool(consumers); disruptor.setDefaultExceptionHandler(new IgnoreExceptionHandler()); disruptor.start(); } /** * publish disruptor event. * * @param tccTransaction {@linkplain com.hmily.tcc.common.bean.entity.TccTransaction } * @param type {@linkplain EventTypeEnum} */ public void publishEvent(final TccTransaction tccTransaction, final int type) { final RingBuffer<HmilyTransactionEvent> ringBuffer = disruptor.getRingBuffer(); ringBuffer.publishEvent(new HmilyTransactionEventTranslator(type), tccTransaction); } @Override public void destroy() { disruptor.shutdown(); } } \",\"在这里 bufferSize 的默认值是 4094 * 4,用户可以根据自行的情况进行配置。\",\" HmilyConsumerDataHandler[] consumers = new HmilyConsumerDataHandler[threadSize]; for (int i = 0; i < threadSize; i++) { consumers[i] = new HmilyConsumerDataHandler(executor, coordinatorService); } disruptor.handleEventsWithWorkerPool(consumers); \",\"这里是采用多个消费者去处理队列里面的任务。\"]},\"67\":{\"h\":\"2.异步执行 confrim,cancel 方法。\",\"t\":[\"package com.hmily.tcc.core.service.handler; import com.hmily.tcc.common.bean.context.TccTransactionContext; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.common.enums.TccActionEnum; import com.hmily.tcc.core.concurrent.threadpool.HmilyThreadFactory; import com.hmily.tcc.core.service.HmilyTransactionHandler; import com.hmily.tcc.core.service.executor.HmilyTransactionExecutor; import org.aspectj.lang.ProceedingJoinPoint; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Component; import java.util.concurrent.Executor; import java.util.concurrent.LinkedBlockingQueue; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit; /** * this is transaction starter. * * @author xiaoyu */ @Component public class StarterHmilyTransactionHandler implements HmilyTransactionHandler { private static final int MAX_THREAD = Runtime.getRuntime().availableProcessors() << 1; private final HmilyTransactionExecutor hmilyTransactionExecutor; private final Executor executor = new ThreadPoolExecutor(MAX_THREAD, MAX_THREAD, 0, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(), HmilyThreadFactory.create(\\\"hmily-execute\\\", false), new ThreadPoolExecutor.AbortPolicy()); @Autowired public StarterHmilyTransactionHandler(final HmilyTransactionExecutor hmilyTransactionExecutor) { this.hmilyTransactionExecutor = hmilyTransactionExecutor; } @Override public Object handler(final ProceedingJoinPoint point, final TccTransactionContext context) throws Throwable { Object returnValue; try { TccTransaction tccTransaction = hmilyTransactionExecutor.begin(point); try { //execute try returnValue = point.proceed(); tccTransaction.setStatus(TccActionEnum.TRYING.getCode()); hmilyTransactionExecutor.updateStatus(tccTransaction); } catch (Throwable throwable) { //if exception ,execute cancel final TccTransaction currentTransaction = hmilyTransactionExecutor.getCurrentTransaction(); executor.execute(() -> hmilyTransactionExecutor .cancel(currentTransaction)); throw throwable; } //execute confirm final TccTransaction currentTransaction = hmilyTransactionExecutor.getCurrentTransaction(); executor.execute(() -> hmilyTransactionExecutor.confirm(currentTransaction)); } finally { hmilyTransactionExecutor.remove(); } return returnValue; } } \",\"当 try 方法的 AOP 切面有异常的时候，采用线程池异步去执行 cancel，无异常的时候去执行 confrim 方法。\"]},\"68\":{\"h\":\"这里有人可能会问：那么 cancel 方法异常，或者 confrim 方法异常怎么办呢？\",\"t\":[\"答：首先这种情况是非常罕见的，因为你上一面才刚刚执行完 try。其次如果出现这种情况，在 try 阶段会保存好日志，Hmily 有内置的调度线程池来进行恢复，不用担心。\"]},\"69\":{\"h\":\"有人又会问：这里如果日志保存异常了怎么办？\",\"t\":[\"答：首先这又是一个牛角尖问题，首先日志配置的参数，在框架启动的时候，会要求你配置的。其次，就算在运行过程中日志保存异常，这时候框架会取缓存中的，并不会影响程序正确执行。最后，万一日志保存异常了，系统又在很极端的情况下 down 机了，恭喜你，你可以去买彩票了，最好的解决办法就是不去解决它。\"]},\"70\":{\"h\":\"3.ThreadLocal 缓存的使用。\",\"t\":[\" /** * transaction begin. * * @param point cut point. * @return TccTransaction */ public TccTransaction begin(final ProceedingJoinPoint point) { LogUtil.debug(LOGGER, () -> \\\"......hmily transaction！start....\\\"); //build tccTransaction final TccTransaction tccTransaction = buildTccTransaction(point, TccRoleEnum.START.getCode(), null); //save tccTransaction in threadLocal CURRENT.set(tccTransaction); //publishEvent hmilyTransactionEventPublisher.publishEvent(tccTransaction, EventTypeEnum.SAVE.getCode()); //set TccTransactionContext this context transfer remote TccTransactionContext context = new TccTransactionContext(); //set action is try context.setAction(TccActionEnum.TRYING.getCode()); context.setTransId(tccTransaction.getTransId()); context.setRole(TccRoleEnum.START.getCode()); TransactionContextLocal.getInstance().set(context); return tccTransaction; } \",\"首先要理解，threadLocal 保存的发起者一方法的事务信息。这个很重要，不要会有点懵逼。rpc 的调用，会形成调用链，进行保存。\",\" /** * add participant. * * @param participant {@linkplain Participant} */ public void enlistParticipant(final Participant participant) { if (Objects.isNull(participant)) { return; } Optional.ofNullable(getCurrentTransaction()) .ifPresent(c -> { c.registerParticipant(participant); updateParticipant(c); }); } \"]},\"71\":{\"h\":\"4.GuavaCache 的使用\",\"t\":[\"package com.hmily.tcc.core.cache; import com.google.common.cache.CacheBuilder; import com.google.common.cache.CacheLoader; import com.google.common.cache.LoadingCache; import com.google.common.cache.Weigher; import com.hmily.tcc.common.bean.entity.TccTransaction; import com.hmily.tcc.core.coordinator.CoordinatorService; import com.hmily.tcc.core.helper.SpringBeanUtils; import org.apache.commons.lang3.StringUtils; import java.util.Optional; import java.util.concurrent.ExecutionException; /** * use google guava cache. * @author xiaoyu */ public final class TccTransactionCacheManager { private static final int MAX_COUNT = 10000; private static final LoadingCache<String, TccTransaction> LOADING_CACHE = CacheBuilder.newBuilder().maximumWeight(MAX_COUNT) .weigher((Weigher<String, TccTransaction>) (string, tccTransaction) -> getSize()) .build(new CacheLoader<String, TccTransaction>() { @Override public TccTransaction load(final String key) { return cacheTccTransaction(key); } }); private static CoordinatorService coordinatorService = SpringBeanUtils.getInstance().getBean(CoordinatorService.class); private static final TccTransactionCacheManager TCC_TRANSACTION_CACHE_MANAGER = new TccTransactionCacheManager(); private TccTransactionCacheManager() { } /** * TccTransactionCacheManager. * * @return TccTransactionCacheManager */ public static TccTransactionCacheManager getInstance() { return TCC_TRANSACTION_CACHE_MANAGER; } private static int getSize() { return (int) LOADING_CACHE.size(); } private static TccTransaction cacheTccTransaction(final String key) { return Optional.ofNullable(coordinatorService.findByTransId(key)).orElse(new TccTransaction()); } /** * cache tccTransaction. * * @param tccTransaction {@linkplain TccTransaction} */ public void cacheTccTransaction(final TccTransaction tccTransaction) { LOADING_CACHE.put(tccTransaction.getTransId(), tccTransaction); } /** * acquire TccTransaction. * * @param key this guava key. * @return {@linkplain TccTransaction} */ public TccTransaction getTccTransaction(final String key) { try { return LOADING_CACHE.get(key); } catch (ExecutionException e) { return new TccTransaction(); } } /** * remove guava cache by key. * @param key guava cache key. */ public void removeByKey(final String key) { if (StringUtils.isNotEmpty(key)) { LOADING_CACHE.invalidate(key); } } } \",\"在参与者中，我们使用了 ThreadLocal，而在参与者中，我们为什么不使用呢？ 其实原因有二点：首先.因为 try，和 confrim 会不在一个线程里，会造成 ThreadLocal 失效。当考虑到 RPC 集群的时候，可能会负载到不同的机器上。这里有一个细节就是：\",\" private static TccTransaction cacheTccTransaction(final String key) { return Optional.ofNullable(coordinatorService.findByTransId(key)).orElse(new TccTransaction()); } \",\"当 GuavaCache 里面没有的时候，会去查询日志返回，这样就保证了对集群环境的支持。\"]},\"72\":{\"h\":\"以上 4 点造就了 Hmily 是一个异步的高性能分布式事务 TCC 框架的原因。\"},\"73\":{\"h\":\"Hmily 如何使用？（ https://github.com/yu199195/hmily/tree/master/hmily-tcc-demo）\",\"t\":[\"首先因为之前的包命名问题，框架包并没有上传到 maven 中心仓库，固需要使用者自己拉取代码，编译 deploy 到自己的私服。\"]},\"74\":{\"h\":\"1.dubbo 用户\",\"t\":[\"在你的 Api 接口项目引入\",\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-annotation</artifactId> <version>{you version}</version> </dependency> \",\"在你的服务提供者项目引入\",\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-dubbo</artifactId> <version>{you version}</version> </dependency> \",\"配置启动 bean\",\" <!-- Aspect 切面配置，是否开启AOP切面--> <aop:aspectj-autoproxy expose-proxy=\\\"true\\\"/> <!--扫描框架的包--> <context:component-scan base-package=\\\"com.hmily.tcc.*\\\"/> <!--启动类属性配置--> <bean id=\\\"hmilyTransactionBootstrap\\\" class=\\\"com.hmily.tcc.core.bootstrap.HmilyTransactionBootstrap\\\"> <property name=\\\"serializer\\\" value=\\\"kryo\\\"/> <property name=\\\"recoverDelayTime\\\" value=\\\"120\\\"/> <property name=\\\"retryMax\\\" value=\\\"3\\\"/> <property name=\\\"scheduledDelay\\\" value=\\\"120\\\"/> <property name=\\\"scheduledThreadMax\\\" value=\\\"4\\\"/> <property name=\\\"repositorySupport\\\" value=\\\"db\\\"/> <property name=\\\"tccDbConfig\\\"> <bean class=\\\"com.hmily.tcc.common.config.TccDbConfig\\\"> <property name=\\\"url\\\" value=\\\"jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8\\\"/> <property name=\\\"driverClassName\\\" value=\\\"com.mysql.jdbc.Driver\\\"/> <property name=\\\"username\\\" value=\\\"root\\\"/> <property name=\\\"password\\\" value=\\\"123456\\\"/> </bean> </property> </bean> \",\"当然配置属性很多，这里我只给出了 demo，具体可以参考这个类：\",\"package com.hmily.tcc.common.config; import com.hmily.tcc.common.enums.RepositorySupportEnum; import lombok.Data; /** * hmily config. * * @author xiaoyu */ @Data public class TccConfig { /** * Resource suffix this parameter please fill in about is the transaction store path. * If it's a table store this is a table suffix, it's stored the same way. * If this parameter is not filled in, the applicationName of the application is retrieved by default */ private String repositorySuffix; /** * log serializer. * {@linkplain com.hmily.tcc.common.enums.SerializeEnum} */ private String serializer = \\\"kryo\\\"; /** * scheduledPool Thread size. */ private int scheduledThreadMax = Runtime.getRuntime().availableProcessors() << 1; /** * scheduledPool scheduledDelay unit SECONDS. */ private int scheduledDelay = 60; /** * retry max. */ private int retryMax = 3; /** * recoverDelayTime Unit seconds * (note that this time represents how many seconds after the local transaction was created before execution). */ private int recoverDelayTime = 60; /** * Parameters when participants perform their own recovery. * 1.such as RPC calls time out * 2.such as the starter down machine */ private int loadFactor = 2; /** * repositorySupport. * {@linkplain RepositorySupportEnum} */ private String repositorySupport = \\\"db\\\"; /** * disruptor bufferSize. */ private int bufferSize = 4096 * 2 * 2; /** * this is disruptor consumerThreads. */ private int consumerThreads = Runtime.getRuntime().availableProcessors() << 1; /** * db config. */ private TccDbConfig tccDbConfig; /** * mongo config. */ private TccMongoConfig tccMongoConfig; /** * redis config. */ private TccRedisConfig tccRedisConfig; /** * zookeeper config. */ private TccZookeeperConfig tccZookeeperConfig; /** * file config. */ private TccFileConfig tccFileConfig; } \"]},\"75\":{\"h\":\"SpringCloud 用户\",\"t\":[\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-springcloud</artifactId> <version>{you version}</version> </dependency> \"]},\"76\":{\"h\":\"Motan 用户\",\"t\":[\" <dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-motan</artifactId> <version>{you version}</version> </dependency> \"]},\"77\":{\"h\":\"hmily-spring-boot-start 那这个就更容易了，只需要根据你的 RPC 框架去引入不同的 jar 包。\",\"t\":[\"如果你是 dubbo 用户，那么引入\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-dubbo</artifactId> <version>${your version}</version> </dependency> \",\"如果你是 SpringCloud 用户，那么引入\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-springcloud</artifactId> <version>${your version}</version> </dependency> \",\"如果你是 Motan 用户，那么引入:\",\"<dependency> <groupId>com.hmily.tcc</groupId> <artifactId>hmily-tcc-spring-boot-starter-motan</artifactId> <version>${your version}</version> </dependency> \",\"然后在你的 yml 里面进行如下配置：\",\"hmily: tcc: serializer: kryo recoverDelayTime: 128 retryMax: 3 scheduledDelay: 128 scheduledThreadMax: 10 repositorySupport: db tccDbConfig: driverClassName: com.mysql.jdbc.Driver url: jdbc:mysql://192.168.1.98:3306/tcc?useUnicode=true&amp;characterEncoding=utf8 username: root password: 123456 #repositorySupport : redis #tccRedisConfig: #masterName: mymaster #sentinel : true #sentinelUrl : 192.168.1.91:26379;192.168.1.92:26379;192.168.1.93:26379 #password : foobaredbbexONE123 # repositorySupport : zookeeper # host : 92.168.1.73:2181 # sessionTimeOut : 100000 # rootPath : /tcc # repositorySupport : mongodb # mongoDbUrl : 192.168.1.68:27017 # mongoDbName : happylife # mongoUserName : xiaoyu # mongoUserPwd : 123456 # repositorySupport : file # path : /account # prefix : account \",\"就这么简单，然后就可以在接口方法上加上@Tcc 注解，进行愉快的使用了。\",\"当然因为篇幅问题，很多东西只是简单的描述，尤其是逻辑方面的。\",\"如果你感兴趣，可以在 github 上进行 star 和 fork，也可以加微信和 QQ 群进行交流。\",\"下面是 github 地址：https://github.com/yu199195/hmily\",\"最后再次感谢大家，如果有兴趣的朋友，可以提供你的优秀牛逼轰轰的 PR。。。。\"]},\"78\":{\"h\":\"都JDK17了，你还在用8吗\",\"t\":[\"Spring Boot 3.1.0-M1 已经发布一段时间了，不知道各位小伙伴是否关注了。随着 Spring 6.0 以及 SpringBoot 3.0 的发布，整个开发界也逐步进入到 jdk17 的时代。大有当年从 jdk6 到 jdk8 升级过程，痛苦并快乐着。\",\"为了不被时代抛弃，开发者应追逐新的技术发展，拥抱变化，不要固步自封。\"]},\"79\":{\"h\":\"0x01 纵观发展\",\"t\":[\"Pre-alpha（Dev）指在软件项目进行正式测试之前执行的所有活动\",\"LTS（Long-Term Support）版本指的是长期支持版本\",\"Alpha 软件发布生命周期的 alpha 阶段是软件测试的第一阶段\",\"Beta 阶段是紧随 alpha 阶段之后的软件开发阶段，以希腊字母第二个字母命名\",\"Release candidate 发行候选版（RC），也被称为“银色版本”，是具备成为稳定产品的潜力的 beta 版本，除非出现重大错误，否则准备好发布\",\"Stable release 稳定版又称为生产版本，是通过所有验证和测试阶段的最后一个发行候选版（RC）\",\"Release 一旦发布，软件通常被称为“稳定版”\",\"下面我们来看下 JDK9~JDK17 的发展：\",\"版本\",\"发布时间\",\"版本类型\",\"支持时间\",\"新特性\",\"JDK 9\",\"2017 年 9 月\",\"长期支持版（LTS）\",\"5 年\",\"-模块化系统（Jigsaw）- JShell - 接口的私有方法- 改进的 try-with-resources - 集合工厂方法 - 改进的 Stream API\",\"JDK 10\",\"2018 年 3 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- 局部变量类型推断 - G1 垃圾回收器并行全阶段 - 应用级别的 Java 类数据共享\",\"JDK 11\",\"2018 年 9 月\",\"长期支持版（LTS）\",\"8 年\",\"- HTTP 客户端 API - ZGC 垃圾回收器 - 移除 Java EE 和 CORBA 模块\",\"JDK 12\",\"2019 年 3 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- switch 表达式 - JVM 原生 HTTP 客户端 - 微基准测试套件\",\"JDK 13\",\"2019 年 9 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- switch 表达式增强 - 文本块 - ZGC 垃圾回收器增强\",\"JDK 14\",\"2020 年 3 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- switch 表达式增强 - 记录类型 - Pattern Matching for instanceof\",\"JDK 15\",\"2020 年 9 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- 移除 Nashorn JavaScript 引擎 - ZGC 垃圾回收器增强 - 隐藏类和动态类文件\",\"JDK 16\",\"2021 年 3 月\",\"短期支持版（non-LTS）\",\"6 个月\",\"- 位操作符增强- Records 类型的完整性 - Vector API\",\"JDK 17\",\"2021 年 9 月\",\"长期支持版（LTS）\",\"8 年\",\"- 垃圾回收器改进 - Sealed 类和接口 - kafka 客户端更新 - 全新的安全存储机制\",\"需要注意的是，LTS 版本的支持时间可能会受到 Oracle 官方政策变化的影响，因此表格中的支持时间仅供参考。\"]},\"80\":{\"h\":\"0x02 详细解读\"},\"81\":{\"h\":\"JDK9 新特性\",\"t\":[\"JDK 9 是 Java 平台的一个重大版本，于 2017 年 9 月发布。它引入了多项新特性，其中最重要的是模块化系统。以下是 JDK 9 新增内容的详细解释：\",\"模块化系统（Jigsaw）：\",\"Jigsaw 是 JDK 9 引入的一个模块化系统，它将 JDK 拆分为约 90 个模块。这些模块相互独立，可以更好地管理依赖关系和可见性，从而提高了代码的可维护性和可重用性。模块化系统还提供了一些新的工具和命令，如 jmod 命令和 jlink 命令，用于构建和组装模块化应用程序。\",\"JShell：\",\"JShell 是一个交互式的 Java 命令行工具，可以在命令行中执行 Java 代码片段。它可以非常方便地进行代码测试和调试，并且可以快速地查看和修改代码。JShell 还提供了一些有用的功能，如自动补全、实时反馈和历史记录等。\",\"接口的私有方法：\",\"JDK 9 允许在接口中定义 private 和 private static 方法。这些方法可以被接口中的其他方法调用，但不能被实现该接口的类使用。这样可以避免在接口中重复编写相同的代码，提高了代码的重用性和可读性。\",\"改进的 try-with-resources：\",\"在 JDK 9 中，可以在 try-with-resources 语句块中使用 final 或 effectively final 的变量。这样可以避免在 finally 语句块中手动关闭资源，提高了代码的可读性和可维护性。\",\"集合工厂方法：\",\"JDK 9 提供了一系列工厂方法，用于创建 List、Set 和 Map 等集合对象。这些方法可以使代码更加简洁和易读，而且还可以为集合对象指定初始容量和类型参数。\",\"改进的 Stream API：\",\"JDK 9 引入了一些新的 Stream API 方法，如 takeWhile、dropWhile 和 ofNullable 等。takeWhile 和 dropWhile 方法可以根据指定的条件从流中选择元素，而 ofNullable 方法可以创建一个包含一个非空元素或空元素的 Stream 对象。\",\"除了以上几个新特性，JDK 9 还引入了一些其他的改进和优化，如改进的 Stack-Walking API、改进的 CompletableFuture API、Java 应用程序启动时优化（Application Class-Data Sharing）等等。这些新特性和改进都为 Java 应用程序的开发和运行提供了更好的支持。\"]},\"82\":{\"h\":\"JDK10 新特性\",\"t\":[\"JDK10 是 JDK 的一个短期支持版本，于 2018 年 3 月发布。它的主要特性如下：\",\"局部变量类型推断：Java 10 中引入了一种新的语法——var关键字，可以用于推断局部变量的类型，使代码更加简洁。例如，可以这样定义一个字符串类型的局部变量：var str = \\\"hello\\\"。\",\"G1 垃圾回收器并行全阶段：JDK10 中对 G1 垃圾回收器进行了改进，使其可以在并行全阶段进行垃圾回收，从而提高了 GC 效率。\",\"应用级别的 Java 类数据共享：Java 10 中引入了一项新的特性，即应用级别的 Java 类数据共享（AppCDS），可以在多个 JVM 进程之间共享 Java 类元数据，从而加速 JVM 的启动时间。\",\"线程局部握手协议：Java 10 中引入了线程局部握手协议（Thread-Local Handshakes），可以在不影响整个 JVM 性能的情况下，暂停所有线程执行特定的操作。\",\"其他改进：Java 10 还包含一些其他的改进，例如对 Unicode 10.0 的支持，对时间 API 的改进，以及对容器 API 的改进等等。\",\"总的来说，JDK10 主要关注于提高 Java 应用程序的性能和可维护性，通过引入一些新的特性和改进对 JDK 进行优化。\"]},\"83\":{\"h\":\"JDK11 新特性\",\"t\":[\"JDK11 是 JDK 的一个长期支持版本，于 2018 年 9 月发布。它的主要特性如下：\",\"HTTP 客户端 API：Java 11 中引入了一个全新的 HTTP 客户端 API，可以用于发送 HTTP 请求和接收 HTTP 响应，而不需要依赖第三方库。\",\"ZGC 垃圾回收器：Java 11 中引入了 ZGC 垃圾回收器（Z Garbage Collector），它是一种可伸缩且低延迟的垃圾回收器，可以在数百 GB 的堆上运行，且最大停顿时间不超过 10ms。\",\"移除 Java EE 和 CORBA 模块：Java 11 中移除了 Java EE 和 CORBA 模块，这些模块在 Java 9 中已被标记为“过时”，并在 Java 11 中被完全移除。\",\"Epsilon 垃圾回收器：Java 11 中引入了一种新的垃圾回收器，称为 Epsilon 垃圾回收器，它是一种无操作的垃圾回收器，可以在不进行垃圾回收的情况下运行应用程序，适用于测试和基准测试等场景。\",\"其他改进：Java 11 还包含一些其他的改进，例如对 Lambda 参数的本地变量类型推断，对字符串 API 的改进，以及对嵌套的访问控制的改进等等。\",\"总的来说，JDK11 主要关注于提高 Java 应用程序的性能和安全性，通过引入一些新的特性和改进对 JDK 进行优化。其中，HTTP 客户端 API 和 ZGC 垃圾回收器是最值得关注的特性之一。\"]},\"84\":{\"h\":\"JDK12 新特性\",\"t\":[\"JDK12 是 JDK 的一个短期支持版本，于 2019 年 3 月发布。它的主要特性如下：\",\"Switch 表达式：Java 12 中引入了一种新的 Switch 表达式，可以使用 Lambda 表达式风格来简化代码。此外，Switch 表达式也支持返回值，从而可以更方便地进行流程控制。\",\"Microbenchmark Suite：Java 12 中引入了一个 Microbenchmark Suite，可以用于进行微基准测试，从而更好地评估 Java 程序的性能。\",\"JVM Constants API：Java 12 中引入了 JVM Constants API，可以用于在运行时获取常量池中的常量，从而更好地支持动态语言和元编程。\",\"Shenandoah 垃圾回收器：Java 12 中引入了 Shenandoah 垃圾回收器，它是一种低暂停时间的垃圾回收器，可以在非常大的堆上运行，且最大暂停时间不超过几毫秒。\",\"其他改进：Java 12 还包含一些其他的改进，例如对 Unicode 11.0 的支持，对预览功能的改进，以及对集合 API 的改进等等。\",\"总的来说，JDK12 主要关注于提高 Java 应用程序的性能和可维护性，通过引入一些新的特性和改进对 JDK 进行优化。其中，Switch 表达式和 Shenandoah 垃圾回收器是最值得关注的特性之一。\"]},\"85\":{\"h\":\"JDK13 新特性\",\"t\":[\"JDK13 是 JDK 的一个短期支持版本，于 2019 年 9 月发布。它的主要特性如下：\",\"Text Blocks：Java 13 中引入了一种新的语法，称为 Text Blocks，可以用于在代码中编写多行字符串，从而简化代码编写的复杂度。\",\"Switch 表达式增强：Java 13 中对 Switch 表达式进行了增强，支持多个表达式和 Lambda 表达式。\",\"ZGC 并行处理引用操作：Java 13 中对 ZGC 垃圾回收器进行了改进，支持并行处理引用操作，从而提高了 GC 效率。\",\"Reimplement the Legacy Socket API：Java 13 中重新实现了 Legacy Socket API，从而提高了网络编程的性能和可维护性。\",\"其他改进：Java 13 还包含一些其他的改进，例如对预览功能的改进，对嵌套访问控制的改进，以及对集合 API 的改进等等。\",\"总的来说，JDK13 主要关注于提高 Java 应用程序的性能和可维护性，通过引入一些新的特性和改进对 JDK 进行优化。其中，Text Blocks 和 Switch 表达式增强是最值得关注的特性之一。\"]},\"86\":{\"h\":\"JDK14 新特性\",\"t\":[\"JDK14 是 JDK 的一个短期支持版本，于 2020 年 3 月发布。它的主要特性如下：\",\"Records：Java 14 中引入了一种新的语法，称为 Records，可以用于定义不可变的数据类，从而简化代码编写的复杂度。\",\"Switch 表达式增强：Java 14 中对 Switch 表达式进行了增强，支持使用关键字 yield 返回值，从而可以更方便地进行流程控制。\",\"Text Blocks 增强：Java 14 中对 Text Blocks 进行了增强，支持在 Text Blocks 中嵌入表达式，从而可以更方便地生成动态字符串。\",\"Pattern Matching for instanceof：Java 14 中引入了一种新的语法，称为 Pattern Matching for instanceof，可以用于在判断对象类型时，同时对对象进行转换和赋值。\",\"其他改进：Java 14 还包含一些其他的改进，例如对垃圾回收器和 JVM 的改进，对预览功能的改进，以及对 JFR 的改进等等。\",\"总的来说，JDK14 主要关注于提高 Java 应用程序的可维护性和易用性，通过引入一些新的特性和改进对 JDK 进行优化。其中，Records 和 Pattern Matching for instanceof 是最值得关注的特性之一。\"]},\"87\":{\"h\":\"JDK15 新特性\",\"t\":[\"JDK15 是 JDK 的一个短期支持版本，于 2020 年 9 月发布。它的主要特性如下：\",\"Sealed Classes：Java 15 中引入了一种新的语法，称为 Sealed Classes，可以用于限制某个类的子类的数量，从而提高代码的可维护性。\",\"Text Blocks 增强：Java 15 中对 Text Blocks 进行了增强，支持在 Text Blocks 中使用反斜杠和$符号来表示特殊字符，从而可以更方便地生成动态字符串。\",\"Hidden Classes：Java 15 中引入了一种新的类，称为 Hidden Classes，可以在运行时动态创建和卸载类，从而提高代码的灵活性和安全性。\",\"ZGC 并发垃圾回收器增强：Java 15 中对 ZGC 垃圾回收器进行了增强，支持在启动时指定内存大小，从而提高了 GC 效率。\",\"其他改进：Java 15 还包含一些其他的改进，例如对预览功能的改进，对 JVM 和垃圾回收器的改进，以及对集合 API 和 I/O API 的改进等等。\",\"总的来说，JDK15 主要关注于提高 Java 应用程序的可维护性和性能，通过引入一些新的特性和改进对 JDK 进行优化。其中，Sealed Classes 和 Hidden Classes 是最值得关注的特性之一。\"]},\"88\":{\"h\":\"JDK16 新特性\",\"t\":[\"JDK16 是 JDK 的一个短期支持版本，于 2021 年 3 月发布。它的主要特性如下：\",\"Records 增强：Java 16 中对 Records 进行了增强，支持在 Records 中定义静态方法和构造方法，从而可以更方便地进行对象的创建和操作。\",\"Pattern Matching for instanceof 增强：Java 16 中对 Pattern Matching for instanceof 进行了增强，支持在判断对象类型时，同时对对象进行转换和赋值，并支持对 switch 语句进行模式匹配。\",\"Vector API：Java 16 中引入了一种新的 API，称为 Vector API，可以用于进行 SIMD（Single Instruction Multiple Data）向量计算，从而提高计算效率。\",\"JEP 388：Java 16 中引入了一个新的 JEP（JDK Enhancement Proposal），称为 JEP 388，可以用于提高 Java 应用程序的性能和可维护性。\",\"其他改进：Java 16 还包含一些其他的改进，例如对垃圾回收器、JVM 和 JFR 的改进，对预览功能的改进，以及对集合 API 和 I/O API 的改进等等。\",\"总的来说，JDK16 主要关注于提高 Java 应用程序的性能和可维护性，通过引入一些新的特性和改进对 JDK 进行优化。其中，Records 增强和 Pattern Matching for instanceof 增强是最值得关注的特性之一。\"]},\"89\":{\"h\":\"JDK17 新特性\",\"t\":[\"JDK17 是 JDK 的一个长期支持版本，于 2021 年 9 月发布。它的主要特性如下：\",\"Sealed Classes 增强：Java 17 中对 Sealed Classes 进行了增强，支持在 Sealed Classes 中定义接口和枚举类型，从而提高代码的灵活性。\",\"Pattern Matching for switch 增强：Java 17 中对 Pattern Matching for switch 进行了增强，支持在 switch 语句中使用嵌套模式和 or 运算符，从而提高代码的可读性和灵活性。\",\"Foreign Function and Memory API：Java 17 中引入了一种新的 API，称为 Foreign Function and Memory API，可以用于在 Java 中调用 C 和 C++的函数和库，从而提高代码的可扩展性和互操作性。\",\"JEP 391：Java 17 中引入了一个新的 JEP（JDK Enhancement Proposal），称为 JEP 391，可以用于提高 Java 应用程序的性能和可维护性。\",\"其他改进：Java 17 还包含一些其他的改进，例如对垃圾回收器、JVM 和 JFR 的改进，对预览功能的改进，以及对集合 API 和 I/O API 的改进等等。\",\"总的来说，JDK17 主要关注于提高 Java 应用程序的灵活性、可扩展性和性能，通过引入一些新的特性和改进对 JDK 进行优化。其中，Sealed Classes 增强和 Foreign Function and Memory API 是最值得关注的特性之一。\"]},\"90\":{\"h\":\"总结\",\"t\":[\"JDK9：引入了模块化系统、JShell、私有接口方法、多版本兼容性等新特性\",\"JDK10：引入了局部变量类型推断、垃圾回收器接口、并行全垃圾回收器等新特性\",\"JDK11：引入了 ZGC 垃圾回收器、HTTP 客户端 API、VarHandles API 等新特性\",\"JDK12：引入了 Switch 表达式、新的字符串方法、HTTP/2 客户端 API 等新特性\",\"JDK13：引入了 Text Blocks、Switch 表达式增强、改进的 ZGC 性能等新特性\",\"JDK14：引入了 Records、Switch 表达式增强、Pattern Matching for instanceof 等新特性\",\"JDK15：引入了 Sealed Classes、Text Blocks 增强、Hidden Classes 等新特性\",\"JDK16：引入了 Records 增强、Pattern Matching for instanceof 增强、Vector API 等新特性\",\"JDK17：引入了 Sealed Classes 增强、Pattern Matching for switch 增强、Foreign Function and Memory API 等新特性\",\"总的来说，JDK9 到 JDK17 的更新涵盖了 Java 应用程序开发的各个方面，包括模块化、垃圾回收、性能优化、API 增强等等，为 Java 开发者提供了更多的选择和工具，以提高代码的质量和效率\"]},\"91\":{\"h\":\"小记\",\"t\":[\"Java 作为一门长盛不衰的编程语言，未来的发展仍然有许多潜力和机会。\",\"云计算和大数据：随着云计算和大数据的发展，Java 在这些领域的应用也越来越广泛。Java 已经成为了许多云计算平台和大数据处理框架的首选语言之一。\",\"移动端和 IoT：Java 也逐渐开始在移动端和物联网领域崭露头角。Java 的跨平台特性和安全性，使得它成为了许多移动应用和物联网设备的首选开发语言。\",\"前沿技术的应用：Java 社区一直在积极探索和应用前沿技术，例如人工智能、机器学习、区块链等。Java 在这些领域的应用和发展也将会是未来的趋势。\",\"开源社区的发展：Java 开源社区的发展也将会对 Java 的未来产生重要影响。Java 社区的开源项目和社区贡献者数量不断增加，将会为 Java 的发展提供更多的动力和资源。\",\"新的 Java 版本：Oracle 已经宣布将在未来两年内发布两个新的 Java 版本，其中一个是短期支持版本，另一个是长期支持版本。这将会为 Java 开发者提供更多的新特性和改进，以满足不断变化的需求。\",\"总的来说，Java 作为一门优秀的编程语言，具有广泛的应用和发展前景。随着技术的不断创新和社区的不断发展，Java 的未来将会更加光明。\"]},\"92\":{\"h\":\"Soul网关学习Admin源码分析\",\"t\":[\"页面操作源码分析\",\"在分析源码之前，先看下图，页面显示加载的插件列表会对应后端的请求，根据后端请求，找到对应的 controller 类 然后找到对应的方法，在上图可以看到这里是访问 plugin 中默认为空的 mapping，传入到分页相关的参数，然后去查询数据库中对应的插件记录 数据库中对应的表为下图所示，divide 状态是启用，在上一篇中，就是用这个插件来测试网关 同时请求的还有选择器，请求的 controller 见下图。在上篇的演示中，我们直接在页面把选择器中的条件 CRUD，可以实时反应到网关中去，而不需要重启网关，所以这里除了 query 方法中，增加、删除、和修改方法中,在保存到数据库之后都有一个 publishEvent 方法。就是这个事件方法，可以让用户直接在 soul 后台配置规则，从而达到时时生效的目地\",\"public int createOrUpdate(final SelectorDTO selectorDTO) { int selectorCount; SelectorDO selectorDO = SelectorDO.buildSelectorDO(selectorDTO); List<SelectorConditionDTO> selectorConditionDTOs = selectorDTO.getSelectorConditions(); if (StringUtils.isEmpty(selectorDTO.getId())) { selectorCount = selectorMapper.insertSelective(selectorDO); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); selectorConditionMapper.insertSelective(SelectorConditionDO.buildSelectorConditionDO(selectorConditionDTO)); }); } else { selectorCount = selectorMapper.updateSelective(selectorDO); //delete rule condition then add selectorConditionMapper.deleteByQuery(new SelectorConditionQuery(selectorDO.getId())); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); SelectorConditionDO selectorConditionDO = SelectorConditionDO.buildSelectorConditionDO(selectorConditionDTO); selectorConditionMapper.insertSelective(selectorConditionDO); }); } publishEvent(selectorDO, selectorConditionDTOs); return selectorCount; } \",\"与 soul-bootstrap 数据同步(websocket)源码分析\",\"之前介绍了 admin 页面操作之后把数据保存数据库，然后用了 spring 自带的响应式编程把数据同步到 bootstrap 项目，以达到动态刷新网关规则及插件，而不用添加配置后去重启网关。 当 soul-bootstrap 启动时，看日志会打出来这么一段\",\"2021-01-21 00:33:39.620 INFO 14276 --- [0.0-9095-exec-5] o.d.s.a.l.websocket.WebsocketCollector : websocket on open successful.... \",\"那么问题来了，它用 websocket 和谁连接了，又是怎么连接的？下面通过找到打日志的代码，再通过打断点的方式来调试一下，这里是打日志出来的地方 先来分析一下这个代码：\",\"从 websocketConfig 这个配置里面拿到配的请求地址，这个配置文件当然是在下图的这个地方配的\",\"拿到这个配置地址后，创建了一个定时的线程池，线程池大小为 urls.length，线程名称前缀为\\\"websocket-connect\\\"的守护线程。这里为什么要创建守护线程，因为这只是为了保证 bootstrap 和 admin 的 websocket 连接不断，类似于心跳的作用，所以用守护线程是最好的\",\"根据创建的 client 端，一个一个的去请求配置文件配的地址，然后打印之前所找到的日志\",\"后面就启动线程去判断 client 是否关闭，如果关闭就会去重新连接(初始间隔 10 秒，然后每 30 秒去执行一次检查，所以如果你看到控制台有时会打印多个连接成功的日志，说明重连了)\",\"我们再来看看在 admin 后台操作的数据是怎么同步到 bootstrap 中的呢，之前有说过，在后台保存或者更新数据之后，会调用 publishEvent 方法，这个是 spring 自带响应式编程的方法，既然是响应式，那就是基于事件的，那就得有 listener\",\"一找果不其然，上图画红框的地方是不是很眼熟，没错，监听器，和 websocket 相关的监听器，如果还是有点看不明白监听和之前的 publishEvent 有什么关系，那就把监听器里的代码打上断点，调试一把。我这里为了方便，就点了这个同步所有数据 这里进的是 DataChangedEventDispatcher 这个类，调用了 event 相关的方法，在左下角这个地方，是不是看到了熟悉了方法了，没错就是上面说的 publishEvent\",\"然后会跳转到 WebsocketDataChangedListener 这个类中，这里重点看一下在调试方法中 send 方法\",\"这里通过 send 方法把更新的数据发到 bootstrap 中，到此 admin 怎么同步数据到 bootstrap 中就真相大白了\",\"与 soul-bootstrap 数据同步(zookeeper)源码分析 话不多说，先上图，把 websocket 的配置先注释掉，打开 zookeeper 的配置，前提是把本地或者远程的 zookeeper 服务打开，然后启动 soul-admin 首先进入了 ZookeeperDataInit 类的 run 方法，这个方法执行完之后，奇怪的一点是跳到了 WebsocketDataChangedListener 类中去了 这一点没弄明白，等这个类里面的 onPluginChanged 方法执行完了之后，回到了 ZookeeperDataChangedListener 类里来了 如果不是删除的话，就会更新 zkNode 节点数据 更新 zk 节点的方法 而且之后的 onSelectorChanged、onMetaDataChanged 、onRuleChanged 方法都会先走 WebsocketDataChangedListener 类里面相对应的方法，然后才会进 ZookeeperDataChangedListener 类的方法。如果插件数据有更改，也是通过上面的步骤重新来一遍。 这里面同步数据会进两个 Listener 类的问题到这还没解决，突然想到在 pom 文件里面有对 websocket 的依赖，因为 application.yml 文件中已经把 websocket 这个配置注释掉了(不是把 enable=false)，先把这个依赖注释掉再看，然后看着代码编译都不通过了。还有一个办法是把 websocket 改成不启用，改完重启发现不会再跳到 websocket 相关的类中了\",\"与 soul-bootstrap 数据同步(http)源码分析\",\"老规矩，改 yml 文件中的配置，然后找到对应的 listener 类打断点调试，这里如果是用 http 的话 websocket 相关的类还是会被访问到，所以这里一样的不能直接注释\",\"下面来看看里面的代码： 这里一个构造方法，里面实例化了一个 clients 数组阻塞队列，大小为 1024。一个定时任务线程池，线程数为 1，名字前缀为 \\\"long-polling\\\" 的后台守护线程，看名字可以知道，这是用来长轮询的。一个相关的属性配置 初始化前方法里面启动了定时线程，间隔 5 分钟之后，每 5 分钟执行一次，去执行 refreshLocalCache 这个刷新本地缓存的方法\",\" private void refreshLocalCache() { this.updateAppAuthCache(); this.updatePluginCache(); this.updateRuleCache(); this.updateSelectorCache(); this.updateMetaDataCache(); } \",\"如果是手动点同步数据时，会去执行下面这些相关的方法，也是通过定时线程池来执行，只不过是立即执行 五分钟后，执行相关的刷新方法，打印的日志\",\"2021-01-22 01:00:19.007 INFO 20800 --- [-long-polling-2] a.l.h.HttpLongPollingDataChangedListener : http sync strategy refresh config start. 2021-01-22 01:00:19.010 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[APP_AUTH], old: {group='APP_AUTH', md5='d751713988987e9331980363e24189ce', lastModifyTime=1611248118794}, updated: {group='APP_AUTH', md5='d751713988987e9331980363e24189ce', lastModifyTime=1611248419010} 2021-01-22 01:00:19.012 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[PLUGIN], old: {group='PLUGIN', md5='70b269257d47f0f6404ae7b7e976d8f1', lastModifyTime=1611248295740}, updated: {group='PLUGIN', md5='70b269257d47f0f6404ae7b7e976d8f1', lastModifyTime=1611248419012} 2021-01-22 01:00:19.069 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[RULE], old: {group='RULE', md5='5811b56257e31109621976d39fc226aa', lastModifyTime=1611248301607}, updated: {group='RULE', md5='5811b56257e31109621976d39fc226aa', lastModifyTime=1611248419069} 2021-01-22 01:00:19.075 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[SELECTOR], old: {group='SELECTOR', md5='70bad5ebb1cf6e3fc55278eef2df42f3', lastModifyTime=1611248299419}, updated: {group='SELECTOR', md5='70bad5ebb1cf6e3fc55278eef2df42f3', lastModifyTime=1611248419075} 2021-01-22 01:00:19.077 INFO 20800 --- [-long-polling-2] o.d.s.a.l.AbstractDataChangedListener : update config cache[META_DATA], old: {group='META_DATA', md5='5f79d821e3b601330631a2d53294fb34', lastModifyTime=1611248302571}, updated: {group='META_DATA', md5='5f79d821e3b601330631a2d53294fb34', lastModifyTime=1611248419077} 2021-01-22 01:00:19.077 INFO 20800 --- [-long-polling-2] a.l.h.HttpLongPollingDataChangedListener : http sync strategy refresh config success. \",\"soul 中还有其它方法同步数据，这些后面有精力再分析，soul-admin 源码先分析到这，如果后续再分析的话，会另外再写一遍文章，这里就先到此为止\",\"soul-admin 中还有功能现在还没有使用到，还有很多好玩的东西，这篇会持续更新，到用到的时候再去具体分析里面的源码。\",\"2021-01-20 分析了 soul-admin 用 websocket 同步数据到 soul-bootstrap 中\",\"2021-01-21 分析了 soul-admin 用 zookeeper 同步数据到 soul-bootstrap 中\",\"2021-01-21 分析了 soul-admin 用 http 同步数据到 soul-bootstrap 中\"]},\"93\":{\"h\":\"Soul网关学习(1)环境配置\",\"t\":[\"soul is a High-Performance Java API Gateway\",\"GitHub：https://github.com/dromara/soul\",\"官方文档：https://dromara.org/zh-cn/docs/soul/soul.html\"]},\"94\":{\"h\":\"1. 源代码准备\"},\"95\":{\"h\":\"1.1. fork dromara/soul 源代码至自己的仓库 cchenxi/soul\"},\"96\":{\"h\":\"1.2. clone 自己仓库中的 soul 源代码至本地\",\"t\":[\"git clone https://github.com/cchenxi/soul.git \"]},\"97\":{\"h\":\"1.3.使用 idea 打开 soul 源代码\"},\"98\":{\"h\":\"1.4.编译 soul 源代码\",\"t\":[\"执行以下 maven 命令，等待编译完成\",\"-w1723\",\"mvn clean package install -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Drat.skip=true -Dcheckstyle.skip=true \"]},\"99\":{\"h\":\"2. 启动 soul\"},\"100\":{\"h\":\"2.1. 启动 soul-admin 模块\",\"t\":[\"soul-admin是 soul 网关的后台管理系统\",\"选择使用 MySQL 数据库存储网关数据，修改数据源配置为自己的数据库配置。\",\"-w1186\",\"运行启动类 org.dromara.soul.admin.SoulAdminBootstrap。\",\"启动成功后，访问地址 http://localhost:9095/ ，跳转到登录页 ↓\",\"-w593\",\"使用用户名admin，密码 123456 登录。\",\"-w1262\"]},\"101\":{\"h\":\"2.2. 启动 soul-bootstrap 模块\",\"t\":[\"soul-bootstrap是网关系统的核心\",\"检查soul-bootstrap的配置\",\"-w917\",\"这里需要配置成 soul-admin的 ip 和端口\",\"控制台输出如下内容表示 soul-bootstrap启动成功\",\"2021-01-14 15:01:15.832 INFO 17943 --- [ main] b.s.s.d.w.WebsocketSyncDataConfiguration : you use websocket sync soul data....... 2021-01-14 15:01:15.924 INFO 17943 --- [ main] o.d.s.p.s.d.w.WebsocketSyncDataService : websocket connection is successful..... 2021-01-14 15:01:16.113 INFO 17943 --- [ main] o.s.b.a.e.web.EndpointLinksResolver : Exposing 2 endpoint(s) beneath base path '/actuator' log4j:WARN No appenders could be found for logger (com.alibaba.dubbo.common.logger.LoggerFactory). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info. 2021-01-14 15:01:17.150 INFO 17943 --- [ main] o.s.b.web.embedded.netty.NettyWebServer : Netty started on port(s): 9195 2021-01-14 15:01:17.154 INFO 17943 --- [ main] o.d.s.b.SoulBootstrapApplication : Started SoulBootstrapApplication in 5.508 seconds (JVM running for 6.762) \"]},\"102\":{\"h\":\"3. 测试 http 请求转发\",\"t\":[\"为了方便测试，把soul-examples模块添加到 soul 的 pom 里\"]},\"103\":{\"h\":\"3.1. 启动一个服务\",\"t\":[\"启动soul-examples-http项目\",\"soul-examples-http的 pom 中引入了依赖\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-client-springmvc</artifactId> <version>${soul.version}</version> </dependency> \",\"在 application.yml中配置\",\"soul: http: adminUrl: http://localhost:9095 port: 8188 contextPath: /http appName: http full: false \",\"如果 soul.http.full=false，则需要在具体的 http 接口上配置 @SoulSpringMvcClient 注解\"]},\"104\":{\"h\":\"3.1.1. 测试 http 服务\",\"t\":[\"执行 http 请求 http://localhost:8188/test/findByUserId?userId=1 结果如下图\",\"-w684\"]},\"105\":{\"h\":\"3.1.2. 测试网关转发\",\"t\":[\"执行 http 请求 http://localhost:9195/http/test/findByUserId?userId=1 结果如下图\",\" 在soul-bootstrap的控制台中输出如下信息\",\"2021-01-14 20:42:57.123 INFO 29812 --- [work-threads-11] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:42:57.125 INFO 29812 --- [work-threads-11] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:42:57.126 INFO 29812 --- [work-threads-11] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 \",\"可以观察到网关可以将请求正常转发。\"]},\"106\":{\"h\":\"3.2. 启动两个服务模拟负载均衡\",\"t\":[\"勾选 Allow parallel run，修改端口为8189，再次启动soul-examples-http项目\",\"-w1104\"]},\"107\":{\"h\":\"3.2.1. 测试 http 服务\",\"t\":[\"执行 http 请求 http://localhost:8189/test/findByUserId?userId=1 结果如下图\",\"-w693\"]},\"108\":{\"h\":\"3.2.2. 测试负载均衡\",\"t\":[\"-w1096\",\"将 8188 和 8189 两个端口对应的服务配置到选择器中\",\"多次执行 http 请求 http://localhost:9195/http/test/findByUserId?userId=1 结果如下图\",\" 在soul-bootstrap的控制台中输出如下信息\",\"2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:34.460 INFO 29812 --- [work-threads-21] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8189/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:35.147 INFO 29812 --- [work-threads-22] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:38.755 INFO 29812 --- [work-threads-23] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:38.756 INFO 29812 --- [work-threads-23] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:38.756 INFO 29812 --- [work-threads-23] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:39.609 INFO 29812 --- [work-threads-24] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8189/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:40.317 INFO 29812 --- [work-threads-25] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 2021-01-14 20:48:40.976 INFO 29812 --- [-work-threads-1] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http 2021-01-14 20:48:40.976 INFO 29812 --- [-work-threads-1] o.d.soul.plugin.base.AbstractSoulPlugin : divide selector success match , selector name :/http/test/** 2021-01-14 20:48:40.977 INFO 29812 --- [-work-threads-1] o.d.s.plugin.httpclient.WebClientPlugin : The request urlPath is http://172.27.121.155:8188/test/findByUserId?userId=1, retryTimes is 0 \",\"可以观察到请求既有转发到 8188 端口的，也有转发到 8189 的，可以实现负载均衡\"]},\"109\":{\"h\":\"3.2.3. 压测\",\"t\":[\"简单对直连和使用网关两种方式的请求进行压测\",\"➜ soul git:(master) ✗ wrk -t8 -c40 -d30s http://localhost:8189/test/findByUserId\\\\?userId\\\\=1 Running 30s test @ http://localhost:8189/test/findByUserId?userId=1 8 threads and 40 connections Thread Stats Avg Stdev Max +/- Stdev Latency 6.06ms 28.81ms 442.25ms 98.22% Req/Sec 2.05k 493.86 2.84k 74.82% 486269 requests in 30.05s, 51.01MB read Requests/sec: 16179.68 Transfer/sec: 1.70MB ➜ soul git:(master) ✗ wrk -t8 -c40 -d30s http://localhost:9195/http/test/findByUserId\\\\?userId\\\\=1 Running 30s test @ http://localhost:9195/http/test/findByUserId?userId=1 8 threads and 40 connections Thread Stats Avg Stdev Max +/- Stdev Latency 14.37ms 18.11ms 255.66ms 93.06% Req/Sec 459.41 139.11 1.01k 74.23% 109533 requests in 30.09s, 11.49MB read Requests/sec: 3639.60 Transfer/sec: 390.98KB \",\"可以发现，使用网关后性能有些下降，主要是因为多了一层转发。\"]},\"110\":{\"h\":\"3.2.4. 问题\",\"t\":[\"在启动 8189 端口时，注册的客户端端口还是 8188\",\"-w1675\",\"先手动配置选择器的配置，后来在群友的帮助下定位到是 soul.http.port没有改\",\"修改后的配置如下\",\"-w520\"]},\"111\":{\"h\":\"Soul网关学习(2-1)Http代理之divide插件使用\"},\"112\":{\"h\":\"一、启动项目\",\"t\":[\"先启动 soul-bootstrap（9195）、soul-admin（9095）两个模块，我们通过 bootstrap 配置文件可以看到，两者是通过 WebSocket 协议进行数据同步：\",\"图片\",\"通过 bootstrap 日志也可以看到：\",\"图片\",\"所谓的数据同步是指将 soul-admin 中配置的数据，同步到 soul 集群中的 JVM 内存里面，是网关高性能的关键。\",\"我们启动两个项目之后就可以通过后台管理系统测试 divide 插件了。\"]},\"113\":{\"h\":\"二、divide 插件介绍\",\"t\":[\"divide 插件是网关处理 http 协议请求的核心处理插件，也是 soul 唯一默认开启的插件：\",\"图片\",\"我们可以想象一下网关到底是做什么的，去猜测一下处理 http 请求的 divide 插件可能具备哪些功能呢？\",\"首先，作为微服务网关，它的背后一定存在多条业务线的分布式微服务集群，而网关作为所有服务的统一入口，必须具备的能力就是流量分发/路由/负载均衡等，而 divide 这个单词顾名思义就是分配、分发的意思，所以我们可以猜测 divide 插件就是对 http 请求进行各种规则的路由转发，这也是网关最基础的能力。\",\"我们打开管理界面上的插件列表，可以看到所有插件都是由两部分组成：选择器（selector）和选择器规则。\",\"插件化设计思想是 soul 网关最核心的设计思想，而选择器和规则这两个概念也是 soul 网关的灵魂所在，理论上来说，我们掌握好它，就能对任何接入网关的流量进行管理。\",\"一个插件有多个选择器，一个选择器对应多种规则。选择器相当于是对流量的第一次筛选，规则就是最终的筛选。\"]},\"114\":{\"h\":\"选择器\",\"t\":[\"图片\",\"* **名称**：为你的选择器起一个容易分辨的名字 * **类型**：custom flow 是自定义流量。full flow 是全流量。自定义流量就是请求会走你下面的匹配方式与条件。全流量则不走。 * **匹配方式**：and 或者or 是指下面多个条件是按照and 还是or的方式来组合。 * **条件**： * uri：是指你根据uri的方式来筛选流量，match的方式支持模糊匹配（/**） * header：是指根据请求头里面的字段来筛选流量。 * query：是指根据uri的查询条件来进行筛选流量。 * ip：是指根据你请求的真实ip，来筛选流量。 * host：是指根据你请求的真实host，来筛选流量。 * post：建议不要使用。 * 条件匹配： * match : 模糊匹配，建议和uri条件搭配，支持 restful风格的匹配。（/test/**） * = : 前后值相等，才能匹配。 * regEx : 正则匹配，表示前面一个值去匹配后面的正则表达式。 * like ：字符串模糊匹配。 * **是否开启**：打开才会生效 * **打印日志**：打开的时候，当匹配上的时候，会打印匹配日志。 * **执行顺序**：当多个选择器的时候，执行顺序小的优先执行。 \"]},\"115\":{\"h\":\"选择器规则\",\"t\":[\"图片\",\"图片\",\"可以看到，规则的配置和选择器类似，可以理解为更细粒度的自定义配置。\"]},\"116\":{\"h\":\"三、divide 插件使用\",\"t\":[\"废话少说，我们直接运行 soul 提供的 examples 模块来演示 divide 插件。\",\"图片\",\"注意，我们最终运行的是 soul-examples-http 模块。配置文件可以使用默认的，也可以自定义 contextPath 和 appName，如上图。\",\"我们需要注意，contextPath 这个属性非常重要，相当于是我们所有 http 请求的 namespace，和选择器一一对齐。一般来说，我们可以配置一个业务对应一个 contextPath，一个业务下面配置相同 contextPath 的多个服务实例会自动映射到同一个选择器进行负载均衡。\",\"我们启动端口为 8188 的这个进程后，可以发现管理控制台 divide 插件列表中自动配置了这个实例对应的选择器、规则：\",\"图片\",\"可以看到我启动的这个 8188 项目地址自动注册上去了：\",\"图片\"]},\"117\":{\"h\":\"测试网关路由\",\"t\":[\"通过 postman 先测试不经过网关转发：\",\"http://localhost:8188/order/findById?id=1 \",\"图片\",\"然后再测试通过网关转发到这个接口：\",\"http://localhost:9195/my-http/order/findById?id=1 \",\"图片\",\"看日志发现确实经过了网关转发到了 8188 接口地址：\",\"图片\"]},\"118\":{\"h\":\"测试负载均衡\",\"t\":[\"我们修改端口为 8189，启动第二个进程。\",\"图片\",\"注意 IDEA 需要取消 Single instance only 的限制：\",\"图片\",\"我们再进入管理控制台，发现 my-http 选择器下出现两个配置地址：\",\"图片\",\"此时我们继续测试，发现负载均衡策略确实生效了：\",\"图片\",\"今天只是演示了 divide 插件最基础的配置，还有其他各种规则配置后面都可以试一试~\"]},\"119\":{\"h\":\"Soul网关学习(2-2)Http代理之divide插件源码解析\",\"t\":[\"待补，文章内部有报错\"]},\"120\":{\"h\":\"Soul网关学习(2-3)Http客户端接入源码解析\"},\"121\":{\"h\":\"1. 注册入口\",\"t\":[\"HTTP 用户接入 Soul 网关时，会调用 soul-admin 一个接口，把需要 Soul 网关管理的接口注册，今天就具体看看到底干了点儿啥。\",\"先看下调用的接口信息如下：\",\"// SpringMvcClientBeanPostProcessor.java /** * Instantiates a new Soul client bean post processor. * * @param soulSpringMvcConfig the soul spring mvc config */ public SpringMvcClientBeanPostProcessor(final SoulSpringMvcConfig soulSpringMvcConfig) { ValidateUtils.validate(soulSpringMvcConfig); this.soulSpringMvcConfig = soulSpringMvcConfig; url = soulSpringMvcConfig.getAdminUrl() + \\\"/soul-client/springmvc-register\\\"; executorService = new ThreadPoolExecutor(1, 1, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>()); } \"]},\"122\":{\"h\":\"2. springmvc-register 接口逻辑\",\"t\":[\"全局搜索 \\\"springmvc-register\\\"，找到 soul-admin 模块下的 SoulClientController，看到这里，对于经常写 CRUD 的我们是不是很熟悉？哈哈~\",\"// SoulClientController.java /** * Register spring mvc string. * * @param springMvcRegisterDTO the spring mvc register dto * @return the string */ @PostMapping(\\\"/springmvc-register\\\") public String registerSpringMvc(@RequestBody final SpringMvcRegisterDTO springMvcRegisterDTO) { return soulClientRegisterService.registerSpringMvc(springMvcRegisterDTO); } \",\"Service 层实现类：\",\"// SoulClientRegisterServiceImpl.java @Override @Transactional public String registerSpringMvc(final SpringMvcRegisterDTO dto) { if (dto.isRegisterMetaData()) { MetaDataDO exist = metaDataMapper.findByPath(dto.getPath()); if (Objects.isNull(exist)) { saveSpringMvcMetaData(dto); } } String selectorId = handlerSpringMvcSelector(dto); handlerSpringMvcRule(selectorId, dto); return SoulResultMessage.SUCCESS; } \",\"dto.isRegisterMetaData() 这个是否注册元数据信息的判断，不知道什么时候用，存疑 //TODO，先往下走。\"]},\"123\":{\"h\":\"2.1 先看看这个方法 handlerSpringMvcSelector，处理 Selector。\",\"t\":[\"// SoulClientRegisterServiceImpl.java private String handlerSpringMvcSelector(final SpringMvcRegisterDTO dto) { String contextPath = dto.getContext(); // 根据 contextPath 到数据库里查询，是否已经注册过。 SelectorDO selectorDO = selectorService.findByName(contextPath); String selectorId; String uri = String.join(\\\":\\\", dto.getHost(), String.valueOf(dto.getPort())); if (Objects.isNull(selectorDO)) { // 还没有注册过 selectorId = registerSelector(contextPath, dto.getRpcType(), dto.getAppName(), uri); } else { // 已经注册过，业务系统重启了会到这里 selectorId = selectorDO.getId(); //update upstream String handle = selectorDO.getHandle(); String handleAdd; DivideUpstream addDivideUpstream = buildDivideUpstream(uri); SelectorData selectorData = selectorService.buildByName(contextPath); if (StringUtils.isBlank(handle)) { handleAdd = GsonUtils.getInstance().toJson(Collections.singletonList(addDivideUpstream)); } else { List<DivideUpstream> exist = GsonUtils.getInstance().fromList(handle, DivideUpstream.class); for (DivideUpstream upstream : exist) { if (upstream.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) { return selectorId; } } exist.add(addDivideUpstream); handleAdd = GsonUtils.getInstance().toJson(exist); } selectorDO.setHandle(handleAdd); selectorData.setHandle(handleAdd); // update db selectorMapper.updateSelective(selectorDO); // submit upstreamCheck upstreamCheckService.submit(contextPath, addDivideUpstream); // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, DataEventTypeEnum.UPDATE, Collections.singletonList(selectorData))); } return selectorId; } \"]},\"124\":{\"h\":\"2.1.1 第一次接入 Soul 网关\",\"t\":[\"新接入的，到数据库里肯定查不到 selectorDO，进入 registerSelector 方法，仔细看看到底往哪些数据库表中插数据了。\",\"// SoulClientRegisterServiceImpl.java private String registerSelector(final String contextPath, final String rpcType, final String appName, final String uri) { SelectorDTO selectorDTO = SelectorDTO.builder() .name(contextPath) .type(SelectorTypeEnum.CUSTOM_FLOW.getCode()) .matchMode(MatchModeEnum.AND.getCode()) .enabled(Boolean.TRUE) .loged(Boolean.TRUE) .continued(Boolean.TRUE) .sort(1) .build(); if (RpcTypeEnum.DUBBO.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.DUBBO.getName())); } else if (RpcTypeEnum.SPRING_CLOUD.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.SPRING_CLOUD.getName())); selectorDTO.setHandle(GsonUtils.getInstance().toJson(buildSpringCloudSelectorHandle(appName))); } else if (RpcTypeEnum.SOFA.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.SOFA.getName())); selectorDTO.setHandle(appName); } else if (RpcTypeEnum.TARS.getName().equals(rpcType)) { selectorDTO.setPluginId(getPluginId(PluginEnum.TARS.getName())); selectorDTO.setHandle(appName); } else { //is divide DivideUpstream divideUpstream = buildDivideUpstream(uri); String handler = GsonUtils.getInstance().toJson(Collections.singletonList(divideUpstream)); selectorDTO.setHandle(handler); selectorDTO.setPluginId(getPluginId(PluginEnum.DIVIDE.getName())); upstreamCheckService.submit(selectorDTO.getName(), divideUpstream); } SelectorConditionDTO selectorConditionDTO = new SelectorConditionDTO(); selectorConditionDTO.setParamType(ParamTypeEnum.URI.getName()); selectorConditionDTO.setParamName(\\\"/\\\"); selectorConditionDTO.setOperator(OperatorEnum.MATCH.getAlias()); selectorConditionDTO.setParamValue(contextPath + \\\"/**\\\"); selectorDTO.setSelectorConditions(Collections.singletonList(selectorConditionDTO)); return selectorService.register(selectorDTO); } \",\"看到这么多 if else，是不是很兴奋，小伙伴们可以想想怎么优化掉这么多 if else，PR 搞起来 ^ - ^。\",\"写了这么多，无非是封装 SelectorDTO 对象，最后调用 selectorService.register(selectorDTO) 入库，继续跟进去。\",\"// SelectorServiceImpl.java @Override public String register(final SelectorDTO selectorDTO) { SelectorDO selectorDO = SelectorDO.buildSelectorDO(selectorDTO); List<SelectorConditionDTO> selectorConditionDTOs = selectorDTO.getSelectorConditions(); if (StringUtils.isEmpty(selectorDTO.getId())) { selectorMapper.insertSelective(selectorDO); selectorConditionDTOs.forEach(selectorConditionDTO -> { selectorConditionDTO.setSelectorId(selectorDO.getId()); // 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？ selectorConditionMapper.insertSelective(SelectorConditionDO .buildSelectorConditionDO(selectorConditionDTO)); }); } publishEvent(selectorDO, selectorConditionDTOs); return selectorDO.getId(); } \",\"看到这里有 2 条入库方法，分别向 selector 和 selector_condition 表中插入了数据。这里我们先不具体追究表结构及业务意义，后面补上。\",\"publishEvent 方法，涉及到 ApplicationEventPublisher 接口，是观察者模式的一个实现，发布事件后通过监听器完成后续操作，这里先按下不表，后续单写一篇文章分析。\"]},\"125\":{\"h\":\"2.1.2 已经接入 Soul 网关\",\"t\":[\"就跟盗梦空间似的，我们回退 2 层梦境，回到插入数据的另一个分支，可以想见，就是，已经接入过 Soul 网关的系统重启，或新节点启动走的逻辑。\",\"把前面的代码再贴过来：\",\"// SoulClientRegisterServiceImpl.java private String handlerSpringMvcSelector(final SpringMvcRegisterDTO dto) { String contextPath = dto.getContext(); // 根据 contextPath 到数据库里查询，是否已经注册过。 SelectorDO selectorDO = selectorService.findByName(contextPath); String selectorId; String uri = String.join(\\\":\\\", dto.getHost(), String.valueOf(dto.getPort())); if (Objects.isNull(selectorDO)) { // 还没有注册过 selectorId = registerSelector(contextPath, dto.getRpcType(), dto.getAppName(), uri); } else { // 已接入的业务系统重启，或新节点启动，会到这里 selectorId = selectorDO.getId(); //update upstream // handle 字段存储这个接口真实节点信息，可能存在多台机器需要负载均衡的场景 String handle = selectorDO.getHandle(); String handleAdd; DivideUpstream addDivideUpstream = buildDivideUpstream(uri); SelectorData selectorData = selectorService.buildByName(contextPath); if (StringUtils.isBlank(handle)) { // 这个接口虽然之前注册过，但第1个服务器节点接入 Soul 时会进来 handleAdd = GsonUtils.getInstance().toJson(Collections.singletonList(addDivideUpstream)); } else { // 如果已经至少有1个服务器节点已接入，会进到这里，判断是否是同一个节点（使用 upstreamUrl 区分），如果相同直接返回 List<DivideUpstream> exist = GsonUtils.getInstance().fromList(handle, DivideUpstream.class); for (DivideUpstream upstream : exist) { if (upstream.getUpstreamUrl().equals(addDivideUpstream.getUpstreamUrl())) { return selectorId; } } // 如果不是同一个节点，把新节点加入到 handle 字段中 exist.add(addDivideUpstream); handleAdd = GsonUtils.getInstance().toJson(exist); } selectorDO.setHandle(handleAdd); selectorData.setHandle(handleAdd); // update db 更新数据库 selectorMapper.updateSelective(selectorDO); // submit upstreamCheck upstreamCheckService.submit(contextPath, addDivideUpstream); // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, DataEventTypeEnum.UPDATE, Collections.singletonList(selectorData))); } return selectorId; } \",\"因为还没有研究数据库表结构设计，根据已知部分猜测，1 个 selector 对应一个 divide 插件，这个插件以 contextPath 为标识（在这里就是 \\\"/http\\\"），一个 contextPath 可以部署多个服务器节点，这些节点信息已 json 形式保存在 handle 字段中。\",\"// handle/handleAdd 数据格式 [ { \\\"upstreamHost\\\": \\\"localhost\\\", \\\"protocol\\\": \\\"http://\\\", \\\"upstreamUrl\\\": \\\"10.0.0.12:8188\\\", \\\"weight\\\": 50, \\\"status\\\": true, \\\"timestamp\\\": 0, \\\"warmup\\\": 0 } ] \",\"下面紧接着就是更新数据库 updateSelective。\",\"upstreamCheckService.submit(contextPath, addDivideUpstream); 把真实服务器节点信息缓存在一个 Map(UPSTREAM_MAP) 里，有定时任务定期探活，如果发现服务节点宕机了，就把他剔除出去，防止把请求发送到已经宕机的节点上。\",\"然后就是 eventPublisher.publishEvent()，跟前面的 publishEvent 方法一样，发布事件后通过监听器完成后续操作（简单介绍下，这里是通过与 Soul 网关建立的 websocket 长连接发送数据 SelectorData 修改的消息，Soul 网关根据消息修改数据，这个具体改的什么数据，怎么修改的，后面分析）。\",\"到这里终于把 handlerSpringMvcSelector 这个方法分析完了。\"]},\"126\":{\"h\":\"2.2 再来看看这个方法 handlerSpringMvcRule，处理 Rule。\",\"t\":[\"// SoulClientRegisterServiceImpl.java private void handlerSpringMvcRule(final String selectorId, final SpringMvcRegisterDTO dto) { RuleDO ruleDO = ruleMapper.findByName(dto.getRuleName()); if (Objects.isNull(ruleDO)) { registerRule(selectorId, dto.getPath(), dto.getRpcType(), dto.getRuleName()); } } \",\"首先拿着规则名字，到 rule 表里捞数据，如果捞到了表名已经注册过了，无操作。\",\"看下数据库数据，就是业务系统下的接口地址。\",\"mysql> use soul; Database changed mysql> select * from rule where name = '/http/order/findById' \\\\G *************************** 1. row *************************** id: 1349650371868782592 selector_id: 1349650371302551552 match_mode: 0 name: /http/order/findById enabled: 1 loged: 1 sort: 1 handle: {\\\"loadBalance\\\":\\\"random\\\",\\\"retry\\\":0,\\\"timeout\\\":3000} date_created: 2021-01-14 17:31:39 date_updated: 2021-01-14 17:31:39 1 row in set (0.00 sec) \",\"如果没捞到数据，注册这个规则。\",\"// SoulClientRegisterServiceImpl.java private void registerRule(final String selectorId, final String path, final String rpcType, final String ruleName) { RuleHandle ruleHandle = RuleHandleFactory.ruleHandle(RpcTypeEnum.acquireByName(rpcType), path); RuleDTO ruleDTO = RuleDTO.builder() .selectorId(selectorId) .name(ruleName) .matchMode(MatchModeEnum.AND.getCode()) .enabled(Boolean.TRUE) .loged(Boolean.TRUE) .sort(1) .handle(ruleHandle.toJson()) .build(); RuleConditionDTO ruleConditionDTO = RuleConditionDTO.builder() .paramType(ParamTypeEnum.URI.getName()) .paramName(\\\"/\\\") .paramValue(path) .build(); if (path.indexOf(\\\"*\\\") > 1) { ruleConditionDTO.setOperator(OperatorEnum.MATCH.getAlias()); } else { ruleConditionDTO.setOperator(OperatorEnum.EQ.getAlias()); } ruleDTO.setRuleConditions(Collections.singletonList(ruleConditionDTO)); ruleService.register(ruleDTO); } \",\"第 1 行，根据 rpcType(\\\"http\\\") 获取其对应的 RuleHandle，这里，默认内置 3 种类型，我们这里的是 HTTP，对应 DivideRuleHandle。\",\"// RuleHandleFactory.java public final class RuleHandleFactory { /** * The RpcType to RuleHandle class map. */ private static final Map<RpcTypeEnum, Class<? extends RuleHandle>> RPC_TYPE_TO_RULE_HANDLE_CLASS = new ConcurrentHashMap<>(); /** * The default RuleHandle. */ private static final Class<? extends RuleHandle> DEFAULT_RULE_HANDLE = SpringCloudRuleHandle.class; static { RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.HTTP, DivideRuleHandle.class); RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.DUBBO, DubboRuleHandle.class); RPC_TYPE_TO_RULE_HANDLE_CLASS.put(RpcTypeEnum.SOFA, SofaRuleHandle.class); } /** * Get a RuleHandle object with given rpc type and path. * @param rpcType rpc type. * @param path path. * @return RuleHandle object. */ public static RuleHandle ruleHandle(final RpcTypeEnum rpcType, final String path) { if (Objects.isNull(rpcType)) { return null; } Class<? extends RuleHandle> clazz = RPC_TYPE_TO_RULE_HANDLE_CLASS.getOrDefault(rpcType, DEFAULT_RULE_HANDLE); try { return clazz.newInstance().createDefault(path); } catch (InstantiationException | IllegalAccessException e) { throw new SoulException( String.format(\\\"Init RuleHandle failed with rpc type: %s, rule class: %s, exception: %s\\\", rpcType, clazz.getSimpleName(), e.getMessage())); } } } \",\"下面构造 RuleDTO 对象，注册规则。\",\"// RuleServiceImpl.java @Override public String register(final RuleDTO ruleDTO) { RuleDO ruleDO = RuleDO.buildRuleDO(ruleDTO); List<RuleConditionDTO> ruleConditions = ruleDTO.getRuleConditions(); if (StringUtils.isEmpty(ruleDTO.getId())) { ruleMapper.insertSelective(ruleDO); ruleConditions.forEach(ruleConditionDTO -> { ruleConditionDTO.setRuleId(ruleDO.getId()); // 这里在 for 循环里调用 dao 层插入数据，是不是可以考虑挪出去一次性批量插入？ ruleConditionMapper.insertSelective(RuleConditionDO .buildRuleConditionDO(ruleConditionDTO)); }); } publishEvent(ruleDO, ruleConditions); return ruleDO.getId(); } \",\"分别向 rule 和 rule_condition 表中插入数据。\",\"publishEvent() 方法，通过 websocket 长连接，向 Soul 网关发送 RuleData 数据。\"]},\"127\":{\"h\":\"3.总结\",\"t\":[\"到这里，调用 \\\"/soul-client/springmvc-register\\\" 接口逻辑分析完了，我们总结下：\",\"处理 selector \",\"新增或修改 selector、selector_condition 表数据，持久化到 MySQL。\",\"通过 websocket 向 Soul 网关发送数据改动信息。\",\"处理 rule \",\"新增或修改 rule、rule_condition 表数据，持久化到 MySQL。\",\"通过 websocket 向 Soul 网关发送数据改动信息。\",\"其中表结构及字段含义还需进一步学习和研究，websocket 发送给 Soul 网关后，网关做了什么处理也需要后续分析。\",\"到这里，HTTP 用户接入 Soul 网关注册逻辑就分析完了。\",\"如果在工作中你有使用网关的需求，或是个人有学习网关的追求，欢迎来跟我一起分析和学习，Soul 网关，你值得拥有。\"]},\"128\":{\"h\":\"Soul网关学习插件链与负载均衡解析\",\"t\":[\"从一个类关系图说起:\",\"plugin关系图\",\"其中两个最基本的插件类:\",\"SoulPlugin: 定义插件职责的接口, 重点方法execute() 被上层调用, skip() 方法可以使某些插件在某些请求中被跳过.\",\"AbstractPlugin: 抽象类, 实现接口的 execute(), 定义一套通用的执行流程, 并使用模板方法的设计模式, 提供doExecute()抽象方法供实现类写自己的逻辑.\"]},\"129\":{\"h\":\"AbstractSoulPlugin\",\"t\":[\"具体分析下 AbstractSoulPlugin 类的 execute():\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String pluginName = named(); final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); // 如果 pluginData.getEnabled() 为 false, 会直接跳到下个插件, 仅有为数不多的插件会进入这个条件判断 (DividePlugin、AlibabaDubboPlugin等) if (pluginData != null && pluginData.getEnabled()) { // 获得插件上的所有选择器 final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); if (CollectionUtils.isEmpty(selectors)) { return CheckUtils.checkSelector(pluginName, exchange, chain); } // 检查上下文中的请求路径, 是否与选择器匹配, 并得到唯一一个匹配的选择器数据 final SelectorData selectorData = matchSelector(exchange, selectors); if (Objects.isNull(selectorData)) { if (PluginEnum.WAF.getName().equals(pluginName)) { return doExecute(exchange, chain, null, null); } return CheckUtils.checkSelector(pluginName, exchange, chain); } if (selectorData.getLoged()) { log.info(\\\"{} selector success match , selector name :{}\\\", pluginName, selectorData.getName()); } // 获得选择器中的各个资源规则 final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); if (CollectionUtils.isEmpty(rules)) { if (PluginEnum.WAF.getName().equals(pluginName)) { return doExecute(exchange, chain, null, null); } return CheckUtils.checkRule(pluginName, exchange, chain); } RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { rule = rules.get(rules.size() - 1); } else { // 匹配路径, 获得唯一一个规则 rule = matchRule(exchange, rules); } if (Objects.isNull(rule)) { return CheckUtils.checkRule(pluginName, exchange, chain); } if (rule.getLoged()) { log.info(\\\"{} rule success match ,rule name :{}\\\", pluginName, rule.getName()); } // 执行子类的方法 return doExecute(exchange, chain, selectorData, rule); } // 执行插件链上的下个插件 return chain.execute(exchange); } \",\"通过代码分析, 可以得到一些结论:\",\"execute() 有两个逻辑: 一是请求路径与选择器和规则的匹配, 最终确认一个唯一规则, 并调用子类 doExecute(); 二是执行插件链上的下个插件.\",\"execute() 实际抽象了一套规则匹配逻辑, 供所有\\\"转发类型\\\"的插件使用的, 转发类型的插件目前我了解的有 DividePlugin (http 请求) 和 AlibabaDubboPlugin (dubbo 请求), 其他类型的插件如果不重写 execute() 的方法, 会直接走入下个插件.\"]},\"130\":{\"h\":\"SoulPluginChain\",\"t\":[\"这里还有个点, 就是插件链的形成与链式调用, 我们来分析下 SoulPluginChain 这块:\",\"plugin02\",\"SoulPluginChain 接口同样定义了 execute() 方法供调用者使用, 它的唯一子类 DefaultSoulPluginChain 实现了链式调用:\",\"public Mono<Void> execute(final ServerWebExchange exchange) { return Mono.defer(() -> { // plugins 中包含所有网关加载的插件 if (this.index < plugins.size()) { // 每次调用execute()方法, index索引自增, 会调用到下一个插件 SoulPlugin plugin = plugins.get(this.index++); // 结合上下文判断当前插件是否需要跳过 Boolean skip = plugin.skip(exchange); if (skip) { return this.execute(exchange); } else { return plugin.execute(exchange, this); } } else { return Mono.empty(); } }); } \",\"看到这会很好奇 plugins 这个插件列表是哪里来的, 这里来解释下, DefaultSoulPluginChain 是 SoulWebHandler 的静态内部类, plugins就是 SoulWebHandle 中的一个属性:\",\"public final class SoulWebHandler implements WebHandler { private List<SoulPlugin> plugins; public SoulWebHandler(final List<SoulPlugin> plugins) { this.plugins = plugins; // ... } @Override public Mono<Void> handle(@NonNull final ServerWebExchange exchange) { // ... return new DefaultSoulPluginChain(plugins).execute(exchange).subscribeOn(scheduler) .doOnSuccess(t -> startTimer.ifPresent(time -> MetricsTrackerFacade.getInstance().histogramObserveDuration(time))); } private static class DefaultSoulPluginChain implements SoulPluginChain { } } \",\"那么 SoulWebHandler 中的 plugins 又是怎么来的呢? 可以继续追溯下它构造器被调用的地方:\",\"@Configuration public class SoulConfiguration { @Bean(\\\"webHandler\\\") public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { List<SoulPlugin> pluginList = plugins.getIfAvailable(Collections::emptyList); final List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); soulPlugins.forEach(soulPlugin -> log.info(\\\"loader plugin:[{}] [{}]\\\", soulPlugin.named(), soulPlugin.getClass().getName())); return new SoulWebHandler(soulPlugins); } } \",\"可以看到是通过 Spring Bean 的方式开始写入 plugins, 即在容器启动时, 加载了所有插件. 这里入口参数使用 ObjectProvider 就是延迟加载所有 SoulPlugin 类型的 Bean(若一个都没有也不会报错), 并注入到 SoulWebHandler 中.\",\"有个小坑需要注意 !\",\"包括 DividePlugin、AlibabaDubboPlugin 等等的所有插件, 都是由各自的 soul-spring-boot-starter-plugin-xx 项目中的 XXPluginConfiguration 配置类, 注册自己的插件成为 Bean, 类似下面示例:\",\"@Configuration public class DividePluginConfiguration { @Bean public SoulPlugin dividePlugin() { return new DividePlugin(); } } \",\"所以在网关项目 soul-bootstrap 中, 如果需要用到某个插件, 不仅仅是在管理后台开启这个插件, 还需要确认下 soul-bootstrap 的 pom.xml 中是否存在相关插件所在的 soul-spring-boot-starter-plugin-xx 依赖, 比如:\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-divide</artifactId> <version>${project.version}</version> </dependency> \",\"如果这里你给注释了或者根本不存在, 不要幻想在插件链上看到它...\"]},\"131\":{\"h\":\"插件项目结构\",\"t\":[\"最后简单说下各个插件项目的功能:\",\"首先是刚刚提到的 spring bean 启动类项目 , 列出个大概:\",\"soul-spring-boot-starter-plugin-alibaba-dubbo soul-spring-boot-starter-plugin-apache-dubbo soul-spring-boot-starter-plugin-context-path soul-spring-boot-starter-plugin-divide soul-spring-boot-starter-plugin-global soul-spring-boot-starter-plugin-httpclient soul-spring-boot-starter-plugin-hystrix soul-spring-boot-starter-plugin-monitor soul-spring-boot-starter-plugin-ratelimiter soul-spring-boot-starter-plugin-resilience4j soul-spring-boot-starter-plugin-rewrite soul-spring-boot-starter-plugin-sentinel soul-spring-boot-starter-plugin-sign soul-spring-boot-starter-plugin-sofa soul-spring-boot-starter-plugin-springcloud soul-spring-boot-starter-plugin-tars soul-spring-boot-starter-plugin-waf \",\"它们的主要作用刚刚也提到了, 将自身的 SoulPlugin 子类注册为 spring bean, 以及注册 spring bean 给 AbstractSoulPlugin 中调用到的 PluginDataHandler 接口, 提供自身的实现子类, 比如 DividePluginDataHandler.\",\"具体的插件类所在项目:\",\"soul-plugin-alibaba-dubbo soul-plugin-apache-dubbo soul-plugin-api soul-plugin-base soul-plugin-context-path soul-plugin-divide soul-plugin-global soul-plugin-httpclient soul-plugin-hystrix soul-plugin-monitor soul-plugin-ratelimiter soul-plugin-resilience4j soul-plugin-rewrite soul-plugin-sentinel soul-plugin-sign soul-plugin-sofa soul-plugin-springcloud soul-plugin-tars soul-plugin-waf \",\"拿 soul-plugin-divide 项目举例, 刚刚提到的 DividePlugin 与 DividePluginDataHandler 就在其中. 并且项目里还有节点信息缓存管理器 UpstreamCacheManager, 负载均衡策略类 LoadBalance 等等.\",\"DividePlugin 的作用是匹配 Http 请求, 既然有 Http 请求自然也有转发下游和返回响应, 所以这里我们会分析到三个插件: DividePlugin、WebClientPlugin、WebClientResponsePlugin.\",\"首先来看 DividePlugin 中 doExecute() 具体实现, 这里我只保留了核心点:\",\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // 通过选择器ID, 在缓存中得到服务节点集群 final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); // 调用负载均衡方法并传入策略类型, 得到唯一节点 DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); // 获得节点的真实url, 并放入 exchange 上下文中 String domain = buildDomain(divideUpstream); String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); // 继续调用下个插件 return chain.execute(exchange); } \",\"可以看到, 在执行完 DividePlugin 的 doExecute() 方法后, 我们的 ServerWebExchange 上下文中已经有了下游服务节点的真实路径, 接下来只要请求它就搞定. 不过先别着急, 这里的负载均衡策略也是关键点, 接着分析下.\"]},\"132\":{\"h\":\"负载均衡\",\"t\":[\"Soul 网关的负载均衡如何执行, 不止涉及到各种策略 (hasn、随机、轮询), 也涉及到 \\\"权重分数\\\" 这个概念, 管理后台的具体配置如下:\",\"待补，文章内部有报错\",\"待补，文章内部有报错\",\"待补，文章内部有报错\",\"展示完后台配置, 我们具体看看各个策略的代码实现.\"]},\"133\":{\"h\":\"Hash\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { final ConcurrentSkipListMap<Long, DivideUpstream> treeMap = new ConcurrentSkipListMap<>(); for (DivideUpstream address : upstreamList) { // 每个节点*VIRTUAL_NODE_NUM(默认5), 使hash更加均匀 for (int i = 0; i < VIRTUAL_NODE_NUM; i++) { long addressHash = hash(\\\"SOUL-\\\" + address.getUpstreamUrl() + \\\"-HASH-\\\" + i); treeMap.put(addressHash, address); } } // 从当前ip得到一个hash值, 并比对treemap(有序), 找到大于此hash值的位置 long hash = hash(String.valueOf(ip)); SortedMap<Long, DivideUpstream> lastRing = treeMap.tailMap(hash); // 只要服务节点不增减, 同一个ip得到的节点就可以保持不变 if (!lastRing.isEmpty()) { return lastRing.get(lastRing.firstKey()); } return treeMap.firstEntry().getValue(); } \",\"hash 算法的负载均衡, 并没有使用到 \\\"权重分数\\\" 这个概念, 也就是说针对每个未知的 IP 各个节点被访问的可能性是一致的. (当然, 同一个 IP 多次调用只会访问同个节点)\"]},\"134\":{\"h\":\"RandomLoadBalance\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { // 总个数 int length = upstreamList.size(); // 总权重 int totalWeight = 0; // 权重是否都一样 boolean sameWeight = true; for (int i = 0; i < length; i++) { int weight = upstreamList.get(i).getWeight(); // 累计总权重 totalWeight += weight; if (sameWeight && i > 0 && weight != upstreamList.get(i - 1).getWeight()) { // 计算所有权重是否一样 sameWeight = false; } } if (totalWeight > 0 && !sameWeight) { // 如果权重不相同且权重大于0则按总权重数随机 int offset = RANDOM.nextInt(totalWeight); // 并确定随机值落在哪个片断上 for (DivideUpstream divideUpstream : upstreamList) { offset -= divideUpstream.getWeight(); if (offset < 0) { return divideUpstream; } } } // 如果权重相同或权重为0则均等随机 return upstreamList.get(RANDOM.nextInt(length)); } \",\"当使用 random 规则时, 所有节点权重分累加并随机得到数字, 看具体是落在那个节点的权重片段上; 如果分数 0 或者相同则很直接的随机集群长度即可.\"]},\"135\":{\"h\":\"RoundRobinLoadBalance\",\"t\":[\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { String key = upstreamList.get(0).getUpstreamUrl(); ConcurrentMap<String, WeightedRoundRobin> map = methodWeightMap.get(key); if (map == null) { methodWeightMap.putIfAbsent(key, new ConcurrentHashMap<>(16)); map = methodWeightMap.get(key); } int totalWeight = 0; long maxCurrent = Long.MIN_VALUE; long now = System.currentTimeMillis(); DivideUpstream selectedInvoker = null; WeightedRoundRobin selectedWRR = null; for (DivideUpstream upstream : upstreamList) { String rKey = upstream.getUpstreamUrl(); // 取出节点在缓存中的信息 WeightedRoundRobin weightedRoundRobin = map.get(rKey); int weight = upstream.getWeight(); if (weightedRoundRobin == null) { weightedRoundRobin = new WeightedRoundRobin(); weightedRoundRobin.setWeight(weight); map.putIfAbsent(rKey, weightedRoundRobin); } if (weight != weightedRoundRobin.getWeight()) { weightedRoundRobin.setWeight(weight); } // 这里是第一个关键: 缓存中的分数增加当前节点权重分 long cur = weightedRoundRobin.increaseCurrent(); weightedRoundRobin.setLastUpdate(now); // 选择缓存分值高的节点 if (cur > maxCurrent) { maxCurrent = cur; selectedInvoker = upstream; selectedWRR = weightedRoundRobin; } totalWeight += weight; } if (!updateLock.get() && upstreamList.size() != map.size() && updateLock.compareAndSet(false, true)) { try { ConcurrentMap<String, WeightedRoundRobin> newMap = new ConcurrentHashMap<>(map); newMap.entrySet().removeIf(item -> now - item.getValue().getLastUpdate() > recyclePeriod); methodWeightMap.put(key, newMap); } finally { updateLock.set(false); } } if (selectedInvoker != null) { // 这里是第二个关键: 缓存中的分数, 减少总节点权重分 selectedWRR.sel(totalWeight); return selectedInvoker; } return upstreamList.get(0); } \",\"这个算法有点复杂, 我解释下核心计算权重的方面:\",\"两个分值分别为 2、100 的节点进入, 缓存中保留它们各自, 分值从 0 开始\",\"经过 for 循环后, 两个节点在缓存中的分值会以自身为基数增加, 假设后面步骤不进行, 则缓存第一次为 2、100, 第二次为 4、200, 依次类推.\",\"关键的第三步, 选出节点缓存中分值最高的, 进行\\\"处罚\\\"措施, 减少所有节点的累计分值, 即 102.\",\"根据这个算法的步骤, 一直没有被选中的节点, 作为\\\"成长奖励\\\", 会持续以自身为基数自增; 而被选中的节点, 作为\\\"惩罚\\\", 会减少其他节点的权重分之和.\",\"可以预见, 权重分小的节点, 要自增到很久之后, 才会等来自身被选中的一刻, 然而那一刻它被惩罚的力度会非常大, 导致它一朝回到解放前, 又要开始漫长的积蓄力量. 而权重分大的节点, 每次被选上的惩罚力度很小, 即使多次后分数太低没被选上, 他的奖励分数(自身)也特别高, 一次增加就远远超越其他节点.\"]},\"136\":{\"h\":\"WebClientPlugin\",\"t\":[\"经过 DividePlugin 插件的调用后, 下游服务节点路径被确定, 接着就是 WebClientPlugin 插件发挥作用了. 它直接实现了 SoulPlugin 接口并实现了 execute() 方法 (仅保留核心代码):\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String urlPath = exchange.getAttribute(Constants.HTTP_URL); // 请求类型: Get请求orPost请求等 HttpMethod method = HttpMethod.valueOf(exchange.getRequest().getMethodValue()); // 构建一个请求对象空壳, 注入请求类型和URL WebClient.RequestBodySpec requestBodySpec = webClient.method(method).uri(urlPath); return handleRequestBody(requestBodySpec, exchange, timeout, chain); } private Mono<Void> handleRequestBody(final WebClient.RequestBodySpec requestBodySpec, final ServerWebExchange exchange, final long timeout, final SoulPluginChain chain) { return requestBodySpec.headers(httpHeaders -> { // 补充上下文中请求头... 后面也是补充些属性, 不赘述 httpHeaders.addAll(exchange.getRequest().getHeaders()); httpHeaders.remove(HttpHeaders.HOST); }) .contentType(buildMediaType(exchange)) .body(BodyInserters.fromDataBuffers(exchange.getRequest().getBody())) // 开始异步http调用下游服务 .exchange() .doOnError(e -> log.error(e.getMessage())) .timeout(Duration.ofMillis(timeout)) // 回调接收返回值 .flatMap(e -> doNext(e, exchange, chain)); } // 这里是异步的回调方法, 在另一个线程中工作 private Mono<Void> doNext(final ClientResponse res, final ServerWebExchange exchange, final SoulPluginChain chain) { // ... // 继续完成剩下的插件链调用 return chain.execute(exchange); } \",\"简单看下 handleRequestBody() 中 exchange() 这个方法的实现, 这里有关键的 Http 调用:\",\"class DefaultWebClient implements WebClient { @Override public Mono<ClientResponse> exchange() { ClientRequest request = (this.inserter != null ? initRequestBuilder().body(this.inserter).build() : initRequestBuilder().build()); // 这里是关键调用, 会走到 spring-web-reactive return Mono.defer(() -> exchangeFunction.exchange(request) .checkpoint(\\\"Request to \\\" + this.httpMethod.name() + \\\" \\\" + this.uri + \\\" [DefaultWebClient]\\\") .switchIfEmpty(NO_HTTP_CLIENT_RESPONSE_ERROR)); } } \",\"总结下, 经过 WebClientPlugin 的处理会异步调用下游服务, 等待响应后再在另一个线程中, 执行后续的插件链调用.\"]},\"137\":{\"h\":\"WebClientResponseClient\",\"t\":[\"最后插件链走到 WebClientResponseClient 这一环, 封装响应信息:\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { // 获取上下文中存放的响应信息 ServerHttpResponse response = exchange.getResponse(); ClientResponse clientResponse = exchange.getAttribute(Constants.CLIENT_RESPONSE_ATTR); if (Objects.isNull(clientResponse) || response.getStatusCode() == HttpStatus.BAD_GATEWAY || response.getStatusCode() == HttpStatus.INTERNAL_SERVER_ERROR) { Object error = SoulResultWarp.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } else if (response.getStatusCode() == HttpStatus.GATEWAY_TIMEOUT) { Object error = SoulResultWarp.error(SoulResultEnum.SERVICE_TIMEOUT.getCode(), SoulResultEnum.SERVICE_TIMEOUT.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // 各种拼装 response.setStatusCode(clientResponse.statusCode()); response.getCookies().putAll(clientResponse.cookies()); response.getHeaders().putAll(clientResponse.headers().asHttpHeaders()); return response.writeWith(clientResponse.body(BodyExtractors.toDataBuffers())); })); } \"]},\"138\":{\"h\":\"Soul网关学习Http长轮询解析01\"},\"139\":{\"h\":\"后台与网关数据同步 (Http 长轮询篇)\"},\"140\":{\"h\":\"配置\",\"t\":[\"后台信息模式切换\",\"在上篇分析 Zookeeper 同步的文章 (Soul 网关源码分析-11 期) 中, 我们通过 DataSyncConfiguration 这个配置类做的切换, 这次有了经验, 直接贴配置\",\"soul: sync: websocket: enabled: false http: enabled: true \",\"网关信息模式切换\",\"后台模式切换完成, 接下来就是网关, 继续照葫芦画瓢找到关键配置类上的参数设置. 这里也直接贴网关配置\",\"soul: sync: # websocket: # urls: ws://localhost:9095/websocket http: url: http://localhost:9095 \"]},\"141\":{\"h\":\"DataChangedListener 体系\",\"t\":[\"后台数据初始化 DataSyncConfiguration 配置关键 Bean , 看看这里关于 Http 长轮询的 Bean\",\"@Configuration public class DataSyncConfiguration { @Configuration @ConditionalOnProperty(name = \\\"soul.sync.http.enabled\\\", havingValue = \\\"true\\\") @EnableConfigurationProperties(HttpSyncProperties.class) static class HttpLongPollingListener { @Bean @ConditionalOnMissingBean(HttpLongPollingDataChangedListener.class) public HttpLongPollingDataChangedListener httpLongPollingDataChangedListener(final HttpSyncProperties httpSyncProperties) { return new HttpLongPollingDataChangedListener(httpSyncProperties); } } } \",\"HttpLongPollingDataChangedListener 继承自 AbstractDataChangedListener, 他们都实现自接口 DataChangedListener.\",\"DataChangedListener 这个接口我们应该非常熟悉了, 它提供了众多不同数据类型变动的方法, 供 DataChangedEventDispatcher 调用, 这个类更是一个 \\\"老朋友\\\" 了, 作为一个中转站, 辛勤的处理数据同步的事件分类及分发\",\"public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { // 持有 DataChangedListener 集合 private List<DataChangedListener> listeners; // 事件变动时, 通知 DataChangedListener 的不同事件类型的方法 public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } } \",\"public interface DataChangedListener { default void onAppAuthChanged(List<AppAuthData> changed, DataEventTypeEnum eventType) {} default void onPluginChanged(List<PluginData> changed, DataEventTypeEnum eventType) {} default void onSelectorChanged(List<SelectorData> changed, DataEventTypeEnum eventType) {} default void onMetaDataChanged(List<MetaData> changed, DataEventTypeEnum eventType) {} default void onRuleChanged(List<RuleData> changed, DataEventTypeEnum eventType) {} } \",\"这两个的作用了解了, 那 AbstractDataChangedListener 又做了什么事情? 举个 onPluginChanged() 的例子:\",\"public abstract class AbstractDataChangedListener implements DataChangedListener, InitializingBean { protected static final ConcurrentMap<String, ConfigDataCache> CACHE = new ConcurrentHashMap<>(); @Override public void onPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { if (CollectionUtils.isEmpty(changed)) { return; } this.updatePluginCache(); this.afterPluginChanged(changed, eventType); } // 修改缓存 (可重写) protected void updatePluginCache() { this.updateCache(ConfigGroupEnum.PLUGIN, pluginService.listAll()); } protected <T> void updateCache(final ConfigGroupEnum group, final List<T> data) { String json = GsonUtils.getInstance().toJson(data); ConfigDataCache newVal = new ConfigDataCache(group.name(), json, Md5Utils.md5(json), System.currentTimeMillis()); ConfigDataCache oldVal = CACHE.put(newVal.getGroup(), newVal); log.info(\\\"update config cache[{}], old: {}, updated: {}\\\", group, oldVal, newVal); } // 钩子, 自定义结束数据变动后要干什么 (可重写) protected void afterPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { } } \",\"对于一个插件数据变动方法 (onPluginChanged), 其实 AbstractDataChangedListener 就是定义了一个模板, 让子类可以按照指定步骤进行工作, 具体每个步骤的工作细节可以由子类自己实现.\",\"其次, 如果不重写它的缓存更新, 就由这个类在 CACHE 中维护.\"]},\"142\":{\"h\":\"其他同步策略此时在干什么?\",\"t\":[\"在 DataChangedEventDispatcher 调取 onPluginChanged() 之后, 长轮询模块会怎么实现呢? 不妨先想想其他同步方式在此时做了什么\",\"举例 websocket 模式, 它自己重写了 onPluginChanged(), 发送 websocket 信息给持有会话, 其中就有网关.\",\"public class WebsocketDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> pluginDataList, final DataEventTypeEnum eventType) { WebsocketData<PluginData> websocketData = new WebsocketData<>(ConfigGroupEnum.PLUGIN.name(), eventType.name(), pluginDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } } \",\"再看 zookeeper 模式, 它也重写了 onPluginChanged(), 去修改 zookeeper 上的节点信息, 这样网关端会监听到他们的节点变动.\",\"public class ZookeeperDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { for (PluginData data : changed) { String pluginPath = ZkPathConstants.buildPluginPath(data.getName()); // delete if (eventType == DataEventTypeEnum.DELETE) { deleteZkPathRecursive(pluginPath); String selectorParentPath = ZkPathConstants.buildSelectorParentPath(data.getName()); deleteZkPathRecursive(selectorParentPath); String ruleParentPath = ZkPathConstants.buildRuleParentPath(data.getName()); deleteZkPathRecursive(ruleParentPath); continue; } //create or update insertZkNode(pluginPath, data); } } } \",\"可以知道, 到这个节骨眼, 其他同步策略已经在忙着通知网关了, 那 Http 长轮询也肯定要做这事.\",\"这两个策略的通知方式也不同, websocket 是好人做到底, 直接找到 session 会话把信息亲自送过去. zookeeper 将节点信息改变后撒手不管, 网关自己监听到变更再做的同步.\",\"那么我们的 Http 长轮询现在要以何种方式去通知网关呢? 接着看.\"]},\"143\":{\"h\":\"长轮询实现方式思考\",\"t\":[\"先思考下我自己设计长轮询, 会怎么实现 ?\",\"正常的长轮询实现应该由网关主动请求, 后台接住这个请求并 hold 住, 如果有更新就直接返回, 没有就阻塞一定时间. 而后台则是做好数据的更新, hold 住时检查数据是否有变化.\",\"那这里涉及到三个点:\",\"数据怎样知道是有变化的, 是不是设置个最后更新时间, 与网关的请求时间比较, 得出是否有数据修改?\",\"hold 住之后, 后台怎么获知是否数据更新, 反复遍历还是阻塞等待?\",\"那些用于更新的数据放哪里, 用缓存的话, 考虑后台缓存与数据库的交互是怎样的.\"]},\"144\":{\"h\":\"HttpLongPollingDataChangedListener 长轮询实现\",\"t\":[\"围绕我们的思考, 看看 HttpLongPollingDataChangedListener 是如何实现的. 先看看关于父类 onPluginChanged() 这块的实现\",\"public class HttpLongPollingDataChangedListener extends AbstractDataChangedListener { private final ScheduledExecutorService scheduler; @Override protected void afterPluginChanged(final List<PluginData> changed, final DataEventTypeEnum eventType) { scheduler.execute(new DataChangeTask(ConfigGroupEnum.PLUGIN)); } } \",\"Http 长轮询不会直接覆盖 onPluginChanged() 而是直接使用其父类的, 意味着使用了它的 CACHE, 那最终我们的信息获取肯定也少不了分析这个, 先暂放一边.\",\"接下来的逻辑会调用到我们这块实现的 afterPluginChanged() 方法, 这里用了一个定时类型的线程池, 去跑一个 Runnable 类型的任务 DataChangeTask.\",\"class DataChangeTask implements Runnable { @Override public void run() { // 遍历 clients for (Iterator<LongPollingClient> iter = clients.iterator(); iter.hasNext();) { LongPollingClient client = iter.next(); iter.remove(); // 说明完成 response 响应了 client.sendResponse(Collections.singletonList(groupKey)); log.info(\\\"send response with the changed group,ip={}, group={}, changeTime={}\\\", client.ip, groupKey, changeTime); } } } \",\"数据变动后使用线程池调到了这个方法, 拿取所有 clients , 一边遍历一边剔除元素, 且调用方法 sendResponse(), 像是标记已完成了响应.\",\"我来猜测下它干了什么, 这里的 clients 很有可能就是网关被 hold 住的请求, 而 sendResponse() 则很有可能就是真的给请求上下文加了响应信息. 还有一个关键动作就是结束 hold, 让网关接收到响应信息, 并在集合中剔除这个请求.\",\"我们现在追踪下 client 的产生, 它是 HttpLongPollingDataChangedListener 里的一个 BlockingQueue 阻塞队列, 在 LongPollingClient 中被定时检测\",\"class LongPollingClient implements Runnable { @Override public void run() { this.asyncTimeoutFuture = scheduler.schedule(() -> { clients.remove(LongPollingClient.this); List<ConfigGroupEnum> changedGroups = compareChangedGroup((HttpServletRequest) asyncContext.getRequest()); sendResponse(changedGroups); }, timeoutTime, TimeUnit.MILLISECONDS); // 这里是关键, 表明来源 clients.add(this); } } \",\"先不去分析这个 remove() 的检测代码块, 直接看到最后一句的 add(), 这里就是 clients 数据来源.\",\"找到 LongPollingClient 被调用处, HttpLongPollingDataChangedListener#doLongPolling\",\"public void doLongPolling(final HttpServletRequest request, final HttpServletResponse response) { // ... // listen for configuration changed. // 开启同步阻塞请求 final AsyncContext asyncContext = request.startAsync(); // AsyncContext.settimeout() does not timeout properly, so you have to control it yourself asyncContext.setTimeout(0L); // block client's thread. // 线程池调用 LongPollingClient#run scheduler.execute(new LongPollingClient(asyncContext, clientIp, HttpConstants.SERVER_MAX_HOLD_TIMEOUT)); } \",\"这里的最后一句会调用并添加 client, 这里有行关键代码阻塞住了请求:\",\"final AsyncContext asyncContext = request.startAsync(); \",\"而在 LongPollingClient#sendResponse 中, 刚刚也分析了, 除了包装注入响应信息, 还会将 hold 住的请求释放\",\"class LongPollingClient implements Runnable { void sendResponse(final List<ConfigGroupEnum> changedGroups) { // cancel scheduler if (null != asyncTimeoutFuture) { asyncTimeoutFuture.cancel(false); } generateResponse((HttpServletResponse) asyncContext.getResponse(), changedGroups); // 同步完成结束阻塞 asyncContext.complete(); } } \",\"这块分析完了再回到 doLongPolling(), 其中线程池调用这还有个关键点\",\"scheduler.execute(new LongPollingClient(asyncContext, clientIp, HttpConstants.SERVER_MAX_HOLD_TIMEOUT)); \",\"这里给 LongPollingClient 传入了 60S 的 timeout 时间, 做什么用的呢? 还记得我们在 LongPollingClient#run 时略过的一块代码吗\",\"class LongPollingClient implements Runnable { @Override public void run() { // 定时启动, 延迟时间根据 timeoutTime this.asyncTimeoutFuture = scheduler.schedule(() -> { // 移除管理的连接 clients.remove(LongPollingClient.this); List<ConfigGroupEnum> changedGroups = compareChangedGroup((HttpServletRequest) asyncContext.getRequest()); // 这个方法会将阻塞的请求释放 sendResponse(changedGroups); }, timeoutTime, TimeUnit.MILLISECONDS); clients.add(this); } } \",\"这里我们已经搞懂了后台这块对长轮询流程的实现, 最后再看看 doLongPolling() 是怎么被调用到的, 找到调用类 ConfigController\",\"@ConditionalOnBean(HttpLongPollingDataChangedListener.class) @RestController @RequestMapping(\\\"/configs\\\") @Slf4j public class ConfigController { @PostMapping(value = \\\"/listener\\\") public void listener(final HttpServletRequest request, final HttpServletResponse response) { longPollingListener.doLongPolling(request, response); } } \",\"看到这也基本明了, 后台通过这个 Controller 暴露 http 路径供网关调用并监听数据变化.\"]},\"145\":{\"h\":\"总结\",\"t\":[\"后台通过 Controller 层暴露 API 给网关, 网关请求后台时后台并不是立即返回响应 (数据有无变化), 而是 hold 住请求最大 60 秒的时间. 这些被 hold 住的请求会加入到阻塞队列中作为内存缓存.\",\"这 60 秒钟如果有数据变化, 通过 DataChangedEventDispatcher 分发到我们的 HttpLongPollingDataChangedListener , 则 立即调用线程池 在阻塞队列中遍历所有被 hold 住的请求, 塞入响应信息并释放掉.\",\"如果 60 秒过后依然没有数据变化, hold 住的请求会被释放, 且阻塞队列的对应请求对象被剔除.\",\"到这里, 我们已经理清它最最基本的长轮询逻辑, 那么对应下一开始的思考, 看有什么结论 or 疑惑.\",\"数据怎样知道是有变化的, 是不是设置个最后更新时间, 与网关的请求时间比较, 得出是否有数据修改?\",\"hold 住之后, 后台怎么获知是否数据更新, 反复遍历还是阻塞等待?\",\"那些用于更新的数据放哪里, 用缓存的话, 考虑后台缓存与数据库的交互是怎样的.\",\"针对第 1 点, 我们是如何得知数据有变化的呢?\",\"目前我们分析的数据变动来源是 DataChangedEventDispatcher, 它可不仅仅只会在数据变动时告知我们信息, 每次手动点下后台同步这里立马就来调用了.\",\"那么这里肯定有新旧数据比对之类的东西了, 不然每次调用就直接把网关的阻塞请求放跑了, 这可不成, 白白的 IO 消耗肯定不是个好设计.\",\"针对第 2 点, 我们现在知道了模式是阻塞等待, 利用的是 AsyncContext 这种方式, 这块我也没有了解过, 会出个番外讨论一二.\",\"针对第 3 点, 我们知道后台配置肯定修改完是要落盘到数据库的, 所以这块缓存与数据库的交互也是个值得分析的点. 这些疑问我会在下一章继续分析~\"]},\"146\":{\"h\":\"Soul网关学习Http长轮询解析02\"},\"147\":{\"h\":\"后台与网关数据同步 (Http 长轮询篇)\",\"t\":[\"长轮询分析的最后一篇, 总结网关端的长轮询的实现, 以及数据流动方式.\",\"网关端长轮询的流程总体也分两个模块: 一是启动时拉取, 二是轮询监听变化\"]},\"148\":{\"h\":\"网关启动时拉取数据\",\"t\":[\"网关启动后, 会调用后台提供的接口拉取数据, 并将数据发送到各个插件的数据处理类中\",\"下面展示下网关启动拉取数据的处理流程:\",\"这几个处理步骤被分散到下面这些类的方法协作中:\",\"02\",\"HttpSyncDataService#start: 网关启动时, HttpSyncDataService 初始化会调用 start() 方法, 该方法会调用后台拉取数据, 并开启多个线程进行轮询监听 (这块在下个模块分析)\",\"public class HttpSyncDataService implements SyncDataService, AutoCloseable { private void start() { // 防止二次调用的CAS操作 if (RUNNING.compareAndSet(false, true)) { // 这里是本次流程的重点, 调用拉取数据的方法 this.fetchGroupConfig(ConfigGroupEnum.values()); int threadSize = serverList.size(); // 这里将在下个模块分析, 会根据后台集群开启线程轮询监听 this.executor = new ThreadPoolExecutor(threadSize, threadSize, 60L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(), SoulThreadFactory.create(\\\"http-long-polling\\\", true)); this.serverList.forEach(server -> this.executor.execute(new HttpLongPollingTask(server))); } else { log.info(\\\"soul http long polling was started, executor=[{}]\\\", executor); } } } \",\"HttpSyncDataService#fetchGroupConfig: 作用仅是根据数据类型, 循环多次调用拉取数据方法(针对同一个后台会请求多次, 每次拉取某一种数据类型的信息), 这里的数据类型指的是 plugin、rule、selector 等\",\"private void fetchGroupConfig(final ConfigGroupEnum... groups) throws SoulException { for (int index = 0; index < this.serverList.size(); index++) { String server = serverList.get(index); try { // 根据传入的数据类型枚举, 多次调用拉取数据方法 this.doFetchGroupConfig(server, groups); break; } catch (SoulException e) { if (index >= serverList.size() - 1) { throw e; } log.warn(\\\"fetch config fail, try another one: {}\\\", serverList.get(index + 1)); } } } \",\"HttpSyncDataService#doFetchGroupConfig: 请求后台的 /configs/fetch 接口, 拿到某个类型的数据, 并更新缓存. 更新缓存前会检测是否变动, 如果变动则结束, 数据未发生变动则睡眠 30s (由于是第一次启动, 数据为空的情况下肯定会更新缓存, 所以会直接结束)\",\"private void doFetchGroupConfig(final String server, final ConfigGroupEnum... groups) { StringBuilder params = new StringBuilder(); for (ConfigGroupEnum groupKey : groups) { params.append(\\\"groupKeys\\\").append(\\\"=\\\").append(groupKey.name()).append(\\\"&\\\"); } // 具体请求路径, 拉取后台数据 String url = server + \\\"/configs/fetch?\\\" + StringUtils.removeEnd(params.toString(), \\\"&\\\"); log.info(\\\"request configs: [{}]\\\", url); String json = null; try { json = this.httpClient.getForObject(url, String.class); } catch (RestClientException e) { String message = String.format(\\\"fetch config fail from server[%s], %s\\\", url, e.getMessage()); log.warn(message); throw new SoulException(message, e); } // 修改缓存信息 boolean updated = this.updateCacheWithJson(json); // 判断是否修改, 修改则直接结束 if (updated) { log.info(\\\"get latest configs: [{}]\\\", json); return; } log.info(\\\"The config of the server[{}] has not been updated or is out of date. Wait for 30s to listen for changes again.\\\", server); ThreadUtils.sleep(TimeUnit.SECONDS, 30); } \",\"HttpSyncDataService#updateCacheWithJson: 取出响应信息中的 data , 即变化的数据信息, 传给数据刷新工厂 DataRefreshFactory\",\"private DataRefreshFactory factory; public HttpSyncDataService(...){ this.factory = new DataRefreshFactory(pluginDataSubscriber, metaDataSubscribers, authDataSubscribers); } private boolean updateCacheWithJson(final String json) { JsonObject jsonObject = GSON.fromJson(json, JsonObject.class); JsonObject data = jsonObject.getAsJsonObject(\\\"data\\\"); return factory.executor(data); } \",\"DataRefreshFactory#executor: 将数据发送给各类数据刷新类 (这里没有去区别信息类型, 而是通知所有数据刷新类, 可考虑优化)\",\"public final class DataRefreshFactory { private static final EnumMap<ConfigGroupEnum, DataRefresh> ENUM_MAP = new EnumMap<>(ConfigGroupEnum.class); public DataRefreshFactory(final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { // 注入各类型订阅器到 MAP 中 ENUM_MAP.put(ConfigGroupEnum.PLUGIN, new PluginDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.SELECTOR, new SelectorDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.RULE, new RuleDataRefresh(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.APP_AUTH, new AppAuthDataRefresh(authDataSubscribers)); ENUM_MAP.put(ConfigGroupEnum.META_DATA, new MetaDataRefresh(metaDataSubscribers)); } public boolean executor(final JsonObject data) { final boolean[] success = {false}; // Tureen: 所有数据类型的 DataRefresh 全调用 ENUM_MAP.values().parallelStream().forEach(dataRefresh -> success[0] = dataRefresh.refresh(data)); return success[0]; } } \",\"AbstractDataRefresh#refresh: 判断是否要更新缓存, 若更新则调用各类型的 refresh() 方法\",\"@Override public Boolean refresh(final JsonObject data) { boolean updated = false; JsonObject jsonObject = convert(data); if (null != jsonObject) { ConfigData<T> result = fromJson(jsonObject); if (this.updateCacheIfNeed(result)) { updated = true; // Turren: 调用 refresh refresh(result.getData()); } } return updated; } \",\"PluginDataRefresh#refresh: 调用 plugin 的订阅器, 接下来会通知所有扩展插件的相关事件变动\",\"@Override protected void refresh(final List<PluginData> data) { if (CollectionUtils.isEmpty(data)) { log.info(\\\"clear all plugin data cache\\\"); pluginDataSubscriber.refreshPluginDataAll(); } else { pluginDataSubscriber.refreshPluginDataAll(); // Turren: http同步, 调用插件数据订阅器 data.forEach(pluginDataSubscriber::onSubscribe); } } \"]},\"149\":{\"h\":\"网关轮询监听变化\",\"t\":[\"网关启动时, 同时也开启了线程做后台监听请求, 监听请求做了 while 死循环来轮询, 在后台端会劫持住请求, 这块在后台总结中有具体分析 (后台与网关数据同步 (Http 长轮询篇 <二>))\",\"下面展示下网关监听数据变动的整体流程:\",\"03\",\"对应的实际代码实现如下:\",\"04\",\"网关端监听的流程实现都在 HttpSyncDataService 类中, 在最后会经由 doFetchGroupConfig() 传到到各类订阅器, 后面的流程与启动时的一致\",\"HttpSyncDataService#start: 启动线程执行 HttpLongPollingTask 这个 Runnable\",\"HttpLongPollingTask#run: 开启循环调用轮询方法.\",\"@Override public void run() { while (RUNNING.get()) { for (int time = 1; time <= retryTimes; time++) { try { doLongPolling(server); } catch (Exception e) { if (time < retryTimes) { log.warn(\\\"Long polling failed, tried {} times, {} times left, will be suspended for a while! {}\\\", time, retryTimes - time, e.getMessage()); ThreadUtils.sleep(TimeUnit.SECONDS, 5); continue; } log.error(\\\"Long polling failed, try again after 5 minutes!\\\", e); ThreadUtils.sleep(TimeUnit.MINUTES, 5); } } } } \",\"HttpLongPollingTask#doLongPolling: 得到监听请求的响应结果, 如果返回值中有变化的类型, 则调用数据拉取方法.\",\"private void doLongPolling(final String server) { // 从缓存中获取数据 MultiValueMap<String, String> params = new LinkedMultiValueMap<>(8); for (ConfigGroupEnum group : ConfigGroupEnum.values()) { ConfigData<?> cacheConfig = factory.cacheConfigData(group); String value = String.join(\\\",\\\", cacheConfig.getMd5(), String.valueOf(cacheConfig.getLastModifyTime())); params.put(group.name(), Lists.newArrayList(value)); } // 构建 http 请求信息 HttpHeaders headers = new HttpHeaders(); headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED); HttpEntity httpEntity = new HttpEntity(params, headers); String listenerUrl = server + \\\"/configs/listener\\\"; log.debug(\\\"request listener configs: [{}]\\\", listenerUrl); JsonArray groupJson = null; try { String json = this.httpClient.postForEntity(listenerUrl, httpEntity, String.class).getBody(); groupJson = GSON.fromJson(json, JsonObject.class).getAsJsonArray(\\\"data\\\"); } catch (RestClientException e) { String message = String.format(\\\"listener configs fail, server:[%s], %s\\\", server, e.getMessage()); throw new SoulException(message, e); } // 得到变化的类型 if (groupJson != null) { ConfigGroupEnum[] changedGroups = GSON.fromJson(groupJson, ConfigGroupEnum[].class); if (ArrayUtils.isNotEmpty(changedGroups)) { log.info(\\\"Group config changed: {}\\\", Arrays.toString(changedGroups)); // 拉取后台对应类型的数据 this.doFetchGroupConfig(server, changedGroups); } } } \",\"LongPollingClient#doFetchGroupConfig:\",\"之前的启动里分析了这块的代码, 它与启动里最不同的点是, 如果拉取的数据与缓存比对后, 发现没有变化则睡眠 30s, 会导致下次的监听延后 30s.\",\"什么意思呢? 如果网关去 fetch 后台的数据, 拿回来比对后发现被骗了! 啥变化也没有, 就等 30s 再启动下次监听, 这个期间如果后台发生数据变化肯定是没法通知到网关的.\",\"网关为什么这么做? 自然是为了防止大量的循环的无用拉取, 如果后台出现问题不断的通知数据变动, 但实际没有任何变动, 那么网关不延迟就会与后台产生大量无用的 网络 IO 与 数据交换\"]},\"150\":{\"h\":\"Soul网关学习WebSocket数据同步解析\",\"t\":[\"范金鹏\",\"在第 4 篇中，我们分析了 HTTP 用户业务系统接入 Soul 网关后，会调用 soul-admin 的注册接口，把需要网关代理的接口信息全部注册到 soul-admin 上，在最后，会通过 websocket 长连接，将 soul-admin 接收到的接口信息同步给 Soul 网关（即 soul-bootstrap），今天就来接着继续分析，数据是怎么同步到 soul-bootstrap 的。\",\"不清楚流程的可以出门左转看下第 4 篇文章 【Soul 源码阅读】4.HTTP 用户接入 Soul 调用 /soul-client/springmvc-register 接口逻辑分析\",\"这里为了验证数据同步流程，其实也没必要非得启动业务系统，完全可以只启动 soul-admin 和 soul-bootstrap 两个系统即可，可以在页面打开或关闭插件，看看这个流程是怎么实现的。\",\"数据同步策略官网链接 https://dromara.org/zh-cn/docs/soul/user-dataSync.html\"]},\"151\":{\"h\":\"2.1 启动 2 个系统\",\"t\":[\"都是按照项目默认启动的，无需修改任何配置文件。\"]},\"152\":{\"h\":\"2.2 页面操作查找接口\",\"t\":[\"这里把 divide 插件启动，F12，看下前台会调用 soul-admin 哪个接口。\",\"open_divide_plugin\",\"可以看到前台向后台发送了一个 PUT 请求：http://localhost:9095/plugin/5\"]},\"153\":{\"h\":\"2.3 后台接口\",\"t\":[\"在项目中搜索这个接口\",\"// PluginController.java @RestController @RequestMapping(\\\"/plugin\\\") public class PluginController { ... /** * update plugin. * * @param id primary key. * @param pluginDTO plugin. * @return {@linkplain SoulAdminResult} */ @PutMapping(\\\"/{id}\\\") public SoulAdminResult updatePlugin(@PathVariable(\\\"id\\\") final String id, @RequestBody final PluginDTO pluginDTO) { Objects.requireNonNull(pluginDTO); pluginDTO.setId(id); final String result = pluginService.createOrUpdate(pluginDTO); if (StringUtils.isNoneBlank(result)) { return SoulAdminResult.error(result); } return SoulAdminResult.success(SoulResultMessage.UPDATE_SUCCESS); } ... } \",\"进到实现类里\",\"// PluginServiceImpl.java /** * create or update plugin. * * @param pluginDTO {@linkplain PluginDTO} * @return rows */ @Override @Transactional(rollbackFor = Exception.class) public String createOrUpdate(final PluginDTO pluginDTO) { final String msg = checkData(pluginDTO); if (StringUtils.isNoneBlank(msg)) { return msg; } PluginDO pluginDO = PluginDO.buildPluginDO(pluginDTO); DataEventTypeEnum eventType = DataEventTypeEnum.CREATE; if (StringUtils.isBlank(pluginDTO.getId())) { pluginMapper.insertSelective(pluginDO); } else { eventType = DataEventTypeEnum.UPDATE; pluginMapper.updateSelective(pluginDO); } // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, eventType, Collections.singletonList(PluginTransfer.INSTANCE.mapToData(pluginDO)))); return StringUtils.EMPTY; } \",\"这里可以看出来，前半部分都是在操作数据库，把相关信息持久化；后半部分是发布了一个事件。\"]},\"154\":{\"h\":\"2.4 发布事件\",\"t\":[\"这里发布的事件用 DataChangedEvent 封装了一层，再看里面有 1 个枚举，这里有很多种类型：\",\"/** * configuration group. * * @author huangxiaofeng */ public enum ConfigGroupEnum { APP_AUTH, PLUGIN, RULE, SELECTOR, META_DATA; ... } \",\"看到这几种类型，如果对第 4 篇还有印象的话，可以看出当时发送事件的类型就是 SELECTOR 和 RULE，现在是 PLUGIN，虽然类型不同，但不影响我们继续分析后面的逻辑，我们继续。\",\"另外一个 eventType 也是枚举，这里有 DELETE、CREATE、UPDATE、REFRESH、MYSELF 5 种类型，此时是 UPDATE。\",\"/** * The enum Data event type. * * @author xiaoyu */ public enum DataEventTypeEnum { /** * delete event. */ DELETE, /** * insert event. */ CREATE, /** * update event. */ UPDATE, /** * REFRESH data event type enum. */ REFRESH, /** * Myself data event type enum. */ MYSELF; ... } \"]},\"155\":{\"h\":\"2.5 监听事件\",\"t\":[\"找到监听事件的代码：\",\"// DataChangedEventDispatcher.java @Component public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { private ApplicationContext applicationContext; private List<DataChangedListener> listeners; public DataChangedEventDispatcher(final ApplicationContext applicationContext) { this.applicationContext = applicationContext; } @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } } \"]},\"156\":{\"h\":\"2.5.1 监听器注入\",\"t\":[\"可以看到 DataChangedEventDispatcher 实现了 InitializingBean 接口，覆写了 afterPropertiesSet 方法，并且使用了 @Component，当 Spring 启动时，会在容器加载完成后调用这个覆写方法。 afterPropertiesSet 方法中，把 DataChangedListener 类型的 Bean 全部获取后，放到类属性 listeners 里。\",\"那么问题来了，这些监听器是什么时候注入到容器中的呢？\",\"先看下 DataChangedListener 接口定义：\",\"/** * Event listener, used to send notification of event changes, * used to support HTTP, websocket, zookeeper and other event notifications. * * @author huangxiaofeng * @author xiaoyu */ public interface DataChangedListener { /** * invoke this method when AppAuth was received. * * @param changed the changed * @param eventType the event type */ default void onAppAuthChanged(List<AppAuthData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Plugin was received. * * @param changed the changed * @param eventType the event type */ default void onPluginChanged(List<PluginData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Selector was received. * * @param changed the changed * @param eventType the event type */ default void onSelectorChanged(List<SelectorData> changed, DataEventTypeEnum eventType) { } /** * On meta data changed. * * @param changed the changed * @param eventType the event type */ default void onMetaDataChanged(List<MetaData> changed, DataEventTypeEnum eventType) { } /** * invoke this method when Rule was received. * * @param changed the changed * @param eventType the event type */ default void onRuleChanged(List<RuleData> changed, DataEventTypeEnum eventType) { } } \",\"可以看到接口中定义了 5 个方法，分别针对当监听到 appAuth、plugin、selector、metaData、rule 数据变动时对应的处理方法。\",\"其继承关系：\",\"DataChangedListener\",\"因为默认是采用的 websocket，这里的监听器对应的就是 WebsocketDataChangedListener，Alt + F7，搜索到这个类实例化的地方，就是如下的配置类：\",\"// DataSyncConfiguration.java @Configuration public class DataSyncConfiguration { /** * http long polling. */ @Configuration @ConditionalOnProperty(name = \\\"soul.sync.http.enabled\\\", havingValue = \\\"true\\\") @EnableConfigurationProperties(HttpSyncProperties.class) static class HttpLongPollingListener { @Bean @ConditionalOnMissingBean(HttpLongPollingDataChangedListener.class) public HttpLongPollingDataChangedListener httpLongPollingDataChangedListener(final HttpSyncProperties httpSyncProperties) { return new HttpLongPollingDataChangedListener(httpSyncProperties); } } /** * The type Zookeeper listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.zookeeper\\\", name = \\\"url\\\") @Import(ZookeeperConfiguration.class) static class ZookeeperListener { @Bean @ConditionalOnMissingBean(ZookeeperDataChangedListener.class) public DataChangedListener zookeeperDataChangedListener(final ZkClient zkClient) { return new ZookeeperDataChangedListener(zkClient); } @Bean @ConditionalOnMissingBean(ZookeeperDataInit.class) public ZookeeperDataInit zookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { return new ZookeeperDataInit(zkClient, syncDataService); } } /** * The type Nacos listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.nacos\\\", name = \\\"url\\\") @Import(NacosConfiguration.class) static class NacosListener { @Bean @ConditionalOnMissingBean(NacosDataChangedListener.class) public DataChangedListener nacosDataChangedListener(final ConfigService configService) { return new NacosDataChangedListener(configService); } } /** * The WebsocketListener(default strategy). */ @Configuration @ConditionalOnProperty(name = \\\"soul.sync.websocket.enabled\\\", havingValue = \\\"true\\\", matchIfMissing = true) @EnableConfigurationProperties(WebsocketSyncProperties.class) static class WebsocketListener { @Bean @ConditionalOnMissingBean(WebsocketDataChangedListener.class) public DataChangedListener websocketDataChangedListener() { return new WebsocketDataChangedListener(); } @Bean @ConditionalOnMissingBean(WebsocketCollector.class) public WebsocketCollector websocketCollector() { return new WebsocketCollector(); } @Bean @ConditionalOnMissingBean(ServerEndpointExporter.class) public ServerEndpointExporter serverEndpointExporter() { return new ServerEndpointExporter(); } } } \",\"一共有 4 种同步数据策略，http 长轮询、zookeeper、nacos、websocket（默认策略）。\",\"看到 websocket 的注解 @ConditionalOnProperty(name = \\\"soul.sync.websocket.enabled\\\", havingValue = \\\"true\\\", matchIfMissing = true)，到配置文件中找到如下配置：\",\"soul: sync: websocket: enabled: true \",\"到这里就真相大白了。\",\"如果不想使用 websocket 的默认同步策略，在配置文件中写上对应的配置即可。\"]},\"157\":{\"h\":\"2.5.2 监听事件处理逻辑\",\"t\":[\"为了防止大家再翻回去看，不方便，我这里再把处理逻辑代码贴出来：\",\"// DataChangedEventDispatcher.java @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; case PLUGIN: listener.onPluginChanged((List<PluginData>) event.getSource(), event.getEventType()); break; case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; case SELECTOR: listener.onSelectorChanged((List<SelectorData>) event.getSource(), event.getEventType()); break; case META_DATA: listener.onMetaDataChanged((List<MetaData>) event.getSource(), event.getEventType()); break; default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } \",\"这里遍历所有的监听器，对于目前的 websocket 只会有一个监听器，其他多个的情况暂时不知道什么时候会出现，这里存疑，后续碰到相关的 case 时再回来补充（// TODO）。\",\"根据发布事件的类型走不同的逻辑，这里分的类型跟 DataChangedListener 接口中定义的方法一一对应。\",\"这里的 listener 是 WebsocketDataChangedListener 的实例，会进到类中对应的方法：\",\"// WebsocketDataChangedListener.java public class WebsocketDataChangedListener implements DataChangedListener { @Override public void onPluginChanged(final List<PluginData> pluginDataList, final DataEventTypeEnum eventType) { WebsocketData<PluginData> websocketData = new WebsocketData<>(ConfigGroupEnum.PLUGIN.name(), eventType.name(), pluginDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } @Override public void onSelectorChanged(final List<SelectorData> selectorDataList, final DataEventTypeEnum eventType) { WebsocketData<SelectorData> websocketData = new WebsocketData<>(ConfigGroupEnum.SELECTOR.name(), eventType.name(), selectorDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(websocketData), eventType); } @Override public void onRuleChanged(final List<RuleData> ruleDataList, final DataEventTypeEnum eventType) { WebsocketData<RuleData> configData = new WebsocketData<>(ConfigGroupEnum.RULE.name(), eventType.name(), ruleDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } @Override public void onAppAuthChanged(final List<AppAuthData> appAuthDataList, final DataEventTypeEnum eventType) { WebsocketData<AppAuthData> configData = new WebsocketData<>(ConfigGroupEnum.APP_AUTH.name(), eventType.name(), appAuthDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } @Override public void onMetaDataChanged(final List<MetaData> metaDataList, final DataEventTypeEnum eventType) { WebsocketData<MetaData> configData = new WebsocketData<>(ConfigGroupEnum.META_DATA.name(), eventType.name(), metaDataList); WebsocketCollector.send(GsonUtils.getInstance().toJson(configData), eventType); } } \",\"看到代码中，将数据封装为 WebsocketData 后，使用 WebsocketController.send 方法发送出去了。\"]},\"158\":{\"h\":\"2.6 同步数据给 soul-bootstrap\",\"t\":[\"// WebsocketCollector.java @Slf4j @ServerEndpoint(\\\"/websocket\\\") public class WebsocketCollector { private static final Set<Session> SESSION_SET = new CopyOnWriteArraySet<>(); private static final String SESSION_KEY = \\\"sessionKey\\\"; /** * On open. * * @param session the session */ @OnOpen public void onOpen(final Session session) { log.info(\\\"websocket on open successful....\\\"); SESSION_SET.add(session); } /** * On message. * * @param message the message * @param session the session */ @OnMessage public void onMessage(final String message, final Session session) { if (message.equals(DataEventTypeEnum.MYSELF.name())) { try { ThreadLocalUtil.put(SESSION_KEY, session); SpringBeanUtils.getInstance().getBean(SyncDataService.class).syncAll(DataEventTypeEnum.MYSELF); } finally { ThreadLocalUtil.clear(); } } } /** * On close. * * @param session the session */ @OnClose public void onClose(final Session session) { SESSION_SET.remove(session); ThreadLocalUtil.clear(); } /** * On error. * * @param session the session * @param error the error */ @OnError public void onError(final Session session, final Throwable error) { SESSION_SET.remove(session); ThreadLocalUtil.clear(); log.error(\\\"websocket collection error: \\\", error); } /** * Send. * * @param message the message * @param type the type */ public static void send(final String message, final DataEventTypeEnum type) { if (StringUtils.isNotBlank(message)) { if (DataEventTypeEnum.MYSELF == type) { try { Session session = (Session) ThreadLocalUtil.get(SESSION_KEY); if (session != null) { session.getBasicRemote().sendText(message); } } catch (IOException e) { log.error(\\\"websocket send result is exception: \\\", e); } return; } for (Session session : SESSION_SET) { try { session.getBasicRemote().sendText(message); } catch (IOException e) { log.error(\\\"websocket send result is exception: \\\", e); } } } } } \",\"WebsocketController 使用了 @ServerEndpoint(\\\"/websocket\\\") 注解，开启了一个 websocket 服务接口，等待连接。\",\"当 soul-bootstrap 启动后，会连接这个 websocket，这时触发 onOpen 方法，将此次连接信息的 Session 存放在 SESSION_SET 这个 Set 集合里。\",\"在 send 方法中，会先判断 DataEventTypeEnum type 是不是 MYSELF，这个 type 可以追溯到 2.3-2.4，此次是 UPDATE，关于什么时候是 MYSELF，还需要后续补充，此处存疑（// TODO）。\",\"下面的 for 循环遍历所有的 websocket 连接 Session，发送变动数据。\",\"到这里，默认的 websocket 同步数据策略就分析清楚了。\",\"朱明\"]},\"159\":{\"h\":\"后台与网关数据同步 (Websocket 篇)\"},\"160\":{\"h\":\"后台如何建立 Websocket?\",\"t\":[\" DataSyncConfiguration: 作为 Spring Bean 的配置工厂, 可以根据配置信息, 构建各类监听器, 包括 HTTP 长轮询方式、Zookeeper 方式、Nacos 方式、Websocket 方法.\",\"@Configuration public class DataSyncConfiguration { // soul-admin 项目的配置信息中, 使用 soul.sync.websocket.enabled 开启或关闭 websocket @Configuration @ConditionalOnProperty(name = \\\"soul.sync.websocket.enabled\\\", havingValue = \\\"true\\\", matchIfMissing = true) @EnableConfigurationProperties(WebsocketSyncProperties.class) static class WebsocketListener { @Bean @ConditionalOnMissingBean(WebsocketCollector.class) public WebsocketCollector websocketCollector() { return new WebsocketCollector(); } } } \",\"WebsocketListener: 作为 DataSyncConfiguration 的内部类, 负责 websocket 监听器初始化. WebsocketCollector: 监听 websocket 连接及接收信息, 维护所有连接后台的 session 会话, 提供 send() 方法通知 session 信息.\"]},\"161\":{\"h\":\"网关如何建立 Websocket?\",\"t\":[\"06\",\"WebsocketSyncDataConfiguration: 作为 Spring Bean 的配置工厂, 是网关端构建 Websocket 通信的入口. (独立出一个启动项目 soul-spring-boot-starter-sync-data-websocket , 供网关自由选用)\",\"@Configuration @ConditionalOnClass(WebsocketSyncDataService.class) @ConditionalOnProperty(prefix = \\\"soul.sync.websocket\\\", name = \\\"urls\\\") @Slf4j public class WebsocketSyncDataConfiguration { // 收集所有注册为 Bean 的订阅器, 如 PluginDataSubscriber、MetaDataSubscriber、AuthDataSubscriber @Bean public SyncDataService websocketSyncDataService(final ObjectProvider<WebsocketConfig> websocketConfig, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use websocket sync soul data.......\\\"); return new WebsocketSyncDataService(websocketConfig.getIfAvailable(WebsocketConfig::new), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } // soul-bootstrap 项目的配置信息中, 使用 soul.sync.websocket 配置要建立连接的后台路径 @Bean @ConfigurationProperties(prefix = \\\"soul.sync.websocket\\\") public WebsocketConfig websocketConfig() { return new WebsocketConfig(); } } \",\"WebsocketSyncDataService: 获取所有注册为 Bean 的 WebsocketConfig 以及各种 DataSubscriber 订阅器, 构建实现了 WebsocketClient 的 SoulWebsocketClient 列表\",\"SoulWebsocketClient: Websocket 通信类, 监听 websocket 连接及接收信息, 在接收到后台传来的信息后会通知各个订阅器.\",\"public final class SoulWebsocketClient extends WebSocketClient { private final WebsocketDataHandler websocketDataHandler; private void handleResult(final String result) { WebsocketData websocketData = GsonUtils.getInstance().fromJson(result, WebsocketData.class); ConfigGroupEnum groupEnum = ConfigGroupEnum.acquireByName(websocketData.getGroupType()); // 根据传入信息得到数据变更的事件类型, 如 refresh、update、delete 等 String eventType = websocketData.getEventType(); String json = GsonUtils.getInstance().toJson(websocketData.getData()); websocketDataHandler.executor(groupEnum, json, eventType); } } \",\"WebsocketDataHandler: 初始化时构建各类实现 AbstractDataHandler 的数据处理类并缓存.\",\"public class WebsocketDataHandler { // 缓存所有 DataHandler 数据变动处理类 private static final EnumMap<ConfigGroupEnum, DataHandler> ENUM_MAP = new EnumMap<>(ConfigGroupEnum.class); public WebsocketDataHandler(final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { ENUM_MAP.put(ConfigGroupEnum.PLUGIN, new PluginDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.SELECTOR, new SelectorDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.RULE, new RuleDataHandler(pluginDataSubscriber)); ENUM_MAP.put(ConfigGroupEnum.APP_AUTH, new AuthDataHandler(authDataSubscribers)); ENUM_MAP.put(ConfigGroupEnum.META_DATA, new MetaDataHandler(metaDataSubscribers)); } public void executor(final ConfigGroupEnum type, final String json, final String eventType) { // 根据数据变动事件类型, 调用相应的 DataHandler 数据处理类 ENUM_MAP.get(type).handle(json, eventType); } } \"]},\"162\":{\"h\":\"网关数据变动调用链\",\"t\":[\"实现 Websocket 通信的入口类 SoulWebsocketClient 在接到后台通信后, 调用 WebsocketDataHandler 的 executor() 方法匹配信息类型, 并调用对应的 DataHandler 的 handler() 去处理信息.\",\"07\",\"AbstractDataHandler: 实现 handler() 方法, 根据事件的类型 (如刷新、更新、创建、删除等), 调用对应事件抽象方法.\",\"public abstract class AbstractDataHandler<T> implements DataHandler { // 根据数据的事件类型 (eventType) 分发到各自方法, 这些被调用的方法由子类实现, 因为不同类型的元数据处理类的处理方式不同 @Override public void handle(final String json, final String eventType) { List<T> dataList = convert(json); if (CollectionUtils.isNotEmpty(dataList)) { DataEventTypeEnum eventTypeEnum = DataEventTypeEnum.acquireByName(eventType); switch (eventTypeEnum) { case REFRESH: case MYSELF: doRefresh(dataList); break; case UPDATE: case CREATE: doUpdate(dataList); break; case DELETE: doDelete(dataList); break; default: break; } } } } \",\"XXXDataHandler: 这里指的是 AbstractDataHandler 的各个实现类 (如 PluginDataHandler 等), 主要作用是调用其订阅器.\",\"不同的 DataHandler 调用的订阅方法不同:\",\"PluginDataHandler 会调用 onSubscribe() 通知插件元数据变更\",\"SelectorDataHandler 会调用 onSelectorSubscribe() 通知选择器元数据变更\",\"RuleDataHandler 会调用 onRuleSubscribe() 通知规则元数据变更\",\"@RequiredArgsConstructor public class PluginDataHandler extends AbstractDataHandler<PluginData> { private final PluginDataSubscriber pluginDataSubscriber; @Override protected void doUpdate(final List<PluginData> dataList) { // 调用订阅器的 onSubscribe(), 发送数据对象 PluginData dataList.forEach(pluginDataSubscriber::onSubscribe); } // ... } \",\"CommonPluginDataSubscriber: 订阅器的 onSubscribe() 方法会通知到所有注入为 Bean 的 PluginDataHandler 类 (不要和前面的同名类混淆, 它是 soul-plugin-base 下的接口, 它的实现类在各个可插拔插件包)\",\"image-20210122172333111\",\"public class CommonPluginDataSubscriber implements PluginDataSubscriber { // 收集所有注册为 Bean 的数据处理器并缓存, 比如 HTTP 插件 divide 下的 DividePluginDataHandler private final Map<String, PluginDataHandler> handlerMap; // 插件元数据变动调用 @Override public void onSubscribe(final PluginData pluginData) { BaseDataCache.getInstance().cachePluginData(pluginData); Optional.ofNullable(handlerMap.get(pluginData.getName())).ifPresent(handler -> handler.handlerPlugin(pluginData)); } // 选择器元数据变动调用 @Override public void onSelectorSubscribe(final SelectorData selectorData) { BaseDataCache.getInstance().cacheSelectData(selectorData); Optional.ofNullable(handlerMap.get(selectorData.getPluginName())).ifPresent(handler -> handler.handlerSelector(selectorData)); } // 规则元数据变动调用 @Override public void onRuleSubscribe(final RuleData ruleData) { BaseDataCache.getInstance().cacheRuleData(ruleData); Optional.ofNullable(handlerMap.get(ruleData.getPluginName())).ifPresent(handler -> handler.handlerRule(ruleData)); } } \"]},\"163\":{\"h\":\"TIPS\",\"t\":[\"整个大项目下存在两个同名的类 PluginDataHandler, 其中一个在项目 soul-sync-data-websocket 下, 用于通知插件元数据变更, 另一个在 soul-plugin-base 下, 用于定义各个插件的各个类型元数据更新.\",\"总结下这两个类命名的意义, soul-sync-data-websocket 下类名的 \\\"plugin\\\" 指元数据的类型为插件类, soul-plugin-base 下类名的 \\\"plugin\\\" 指继承它的子类来自与各个可插播插件, 比如 divide、dubbo 插件等\"]},\"164\":{\"h\":\"Soul网关学习SPI学习使用\",\"t\":[\"在之前分析 divide 插件的负载均衡策略时, 有看到过一行代码:\",\"DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); \",\"当时很简单的略过了它的实现, 它的作用很容易分析, 调用一个看似工具类的方法, 传入多个节点组成的集群, 返回一个节点. 这是一个负载均衡器.\",\"但是细节却非常多, 最重要的一点是使用 SPI 来选择具体的实现类. 看看这个方法的代码:\",\"public class LoadBalanceUtils { public static DivideUpstream selector(final List<DivideUpstream> upstreamList, final String algorithm, final String ip) { // 调用自定义的 SPI 得到一个子类 LoadBalance loadBalance = ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); return loadBalance.select(upstreamList, ip); } } \",\"后面的是调用具体子类的 select() 方法, 根据子类的不同实现, 最终会表现出各种形式. 目前的子类实现有:\",\"HashLoadBalance\",\"RandomLoadBalance\",\"RoundRobinLoadBalance\",\"关键就在于 ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); 这行.\",\"在研究它之前, 我们先不妨研究下 Java 提供的 SPI 机制.\"]},\"165\":{\"h\":\"Java SPI\",\"t\":[\"<<高可用可伸缩微服务架构>> 第 3 章 Apache Dubbo 框架的原理与实现 中有这样的一句定义.\",\"SPI 全称为 Service Provider Interface, 是 JDK 内置的一种服务提供发现功能, 一种动态替换发现的机制. 举个例子, 要想在运行时动态地给一个接口添加实现, 只需要添加一个实现即可.\",\"书中也有个非常形象的脑图, 展示了 SPI 的使用:\",\"08\",\"也就是说在我们代码中的实现里, 无需去写入一个 Factory 工厂, 用 MAP 去包装一些子类, 最终返回的类型是父接口. 只需要定义好资源文件, 让父接口与它的子类在文件中写明, 即可通过设置好的方式拿到所有定义的子类对象:\",\"ServiceLoader<Interface> loaders = ServiceLoader.load(Interface.class) for(Interface interface : loaders){ System.out.println(interface.toString()); } \",\"这种方式相比与普通的工厂模式, 肯定是更符合开闭原则, 新加入一个子类不用去修改工厂方法, 而是编辑资源文件.\"]},\"166\":{\"h\":\"从一个 Demo 开始\",\"t\":[\"按照 SPI 的规范, 我建了一个 demo, 看看具体的实现效果\",\"image-20210129095623013\",\"image-20210129095703911\",\"Animal 中定义一个 run() 方法, 而子类实现它.\",\"public interface Animal { void run(); } public class Dog implements Animal { @Override public void run() { System.out.println(\\\"狗在跑\\\"); } } public class Horse implements Animal { @Override public void run() { System.out.println(\\\"马在跑\\\"); } } \",\"使用 SPI 的加载类, 得到子类的执行结果:\",\"private static void test() { final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\"image-20210129103047851\",\"在调用后我们得到之前在资源文件中写入的实现类, 并成功调取它们各自的 run() 方法.\",\"到这里我产生一个疑问, 是否每次调用 ServiceLoader.load(Animal.class) 返回的都是同一个对象? 如果是我猜测它是在启动时加载到缓存了, 如果不是, 可能就是在底层用了反射, 每次调用都有一定消耗. 我们看看下面的实验:\",\"public static void main(String[] args) { for (int i = 0; i < 2; i++) { test(); System.out.println(\\\"----------\\\"); } } private static void test() { final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\"image-20210129103451844\",\"两次调用出现的对象却不一样, 不由让我替其性能揪心一下, 所以我们先分析下它的代码, 看看到底怎么实现.\"]},\"167\":{\"h\":\"SPI 的实现\",\"t\":[\"找到 java.util,ServiceLoaders 这个类, 入眼最醒目的就是之前我们按照规范放置资源文件的目录\",\"public final class ServiceLoader<S> implements Iterable<S> { private static final String PREFIX = \\\"META-INF/services/\\\"; } \",\"在 debug PREFIX 属性的被调用处时, 发现 ServiceLoader.load 实际是使用懒加载的方式, 并没有在调用它的时候, 找寻到实际返回类, 而是在遍历时查找.\",\"它的懒加载具体实现在如下代码:\",\"public final class ServiceLoader<S> implements Iterable<S> { public static <S> ServiceLoader<S> load(Class<S> service) { // 获取当前的类加载器 (我们自己的通常是弟中弟 AppClassLoader ) ClassLoader cl = Thread.currentThread().getContextClassLoader(); return ServiceLoader.load(service, cl); } public static <S> ServiceLoader<S> load(Class<S> service, ClassLoader loader) { // 调用构造器初始化对象 (说明每次调用都使用新的 ServiceLoader 对象) return new ServiceLoader<>(service, loader); } private ServiceLoader(Class<S> svc, ClassLoader cl) { service = Objects.requireNonNull(svc, \\\"Service interface cannot be null\\\"); loader = (cl == null) ? ClassLoader.getSystemClassLoader() : cl; acc = (System.getSecurityManager() != null) ? AccessController.getContext() : null; // 上面都是将信息放入对象实例属性中, 这行才是关键调用 reload(); } public void reload() { providers.clear(); // 创建懒加载迭代器, 传入关键的接口 Class 以及加载器 lookupIterator = new LazyIterator(service, loader); } } \",\"调用 ServiceLoader.load 后关键事情都没干, 仅仅是将接口 class 和加载器传给 LazyIterator 这个迭代器的实现类.\",\"看到这可以猜测, 真正迭代调用返回的对象时, 肯定需要迭代器完成实现类的搜索和初始化, 而传参是 Class 信息和加载器, 实现类的初始化也明显会是反射了.\",\"看下 LazyIterator 的实现方式, 先从其最开始会被调用到的 hasNext() 开始:\",\"private class LazyIterator implements Iterator<S> { public boolean hasNext() { if (acc == null) { return hasNextService(); } else { // ... } } private boolean hasNextService() { if (nextName != null) { return true; } if (configs == null) { try { String fullName = PREFIX + service.getName(); if (loader == null) configs = ClassLoader.getSystemResources(fullName); else // 加载资源文件 configs = loader.getResources(fullName); } catch (IOException x) { fail(service, \\\"Error locating configuration files\\\", x); } } while ((pending == null) || !pending.hasNext()) { if (!configs.hasMoreElements()) { return false; } // 解析出资源文件中写入的实现类类名 pending = parse(service, configs.nextElement()); } // 获取一个类名 nextName = pending.next(); return true; } } \",\"image-20210129111231212\",\"hasNext() 的调用可以获取到我们资源中的类名, 写入到实例属性 nextName 中, 并返回 true, 让迭代器可以进行 next() 的调用\",\"public S next() { if (acc == null) { return nextService(); } else { // ... } } private S nextService() { if (!hasNextService()) throw new NoSuchElementException(); String cn = nextName; nextName = null; Class<?> c = null; try { // 反射得到 Class 对象 c = Class.forName(cn, false, loader); } catch (ClassNotFoundException x) { fail(service, \\\"Provider \\\" + cn + \\\" not found\\\"); } if (!service.isAssignableFrom(c)) { fail(service, \\\"Provider \\\" + cn + \\\" not a subtype\\\"); } try { // 初始化对象, 并判断是否与接口符合 S p = service.cast(c.newInstance()); // 将初始化的对象放入hash缓存 (关键步骤) providers.put(cn, p); return p; } catch (Throwable x) { fail(service, \\\"Provider \\\" + cn + \\\" could not be instantiated\\\", x); } throw new Error(); // This cannot happen } \",\"看到这里我们明白了, 在初始化后会将对象放入缓存中, key 就是接口 class 二次调用不会再有反射消耗.\",\"那么之前我们在测试时的方式为什么会产生不同对象实例呢? 原因就是每次调用 ServiceLoader.load() 都会产生新的 ServiceLoader 对象. 我们将测试方法改进下:\",\"public static void main(String[] args) { // 复用 ServiceLoaders final ServiceLoader<Animal> load = ServiceLoader.load(Animal.class); for (int i = 0; i < 2; i++) { test(load); System.out.println(\\\"----------\\\"); } } private static void test(ServiceLoader<Animal> load) { for (Animal animal : load) { System.out.println(animal); animal.run(); } } \",\"image-20210129113307494\"]},\"168\":{\"h\":\"Java SPI 思考\",\"t\":[\"Java SPI 中我们还有很多的细节没有描述到, 但主流程就是这些. 我们之前的两个疑问点, 如何实现以及性能情况也可以得到解答:\",\"如何实现: 通过 IO 流读取到资源文件, 反射加载对应路径并生成 Class 对象, 初始化后放入缓存中\",\"性能情况: 首次迭代调用即会有反射调用, 但多次使用时, 只要保证是用同一个 ServiceLoader 对象, 即可避免多次反射, 因为会直接复用缓存中的对象.\",\"写到这我有个非常疑惑的地方, 之前我觉得它和工厂方法很类似但比它有优势, 因为添加子类后仅需用改动资源文件不用变动工厂类.\",\"但我尝试用 Java SPI 去真正实现时, 发现并不能达到这个效果, 一个重要的原因是, 资源文件中的各个实现类没有区分度, 我无法去筛选出某一个我需要的缓存在 ServiceLoaders 中的实现类.\",\"那么它的使用场景在哪呢?\"]},\"169\":{\"h\":\"JDBC SPI 使用方式\",\"t\":[\"经过查阅资料得知, 在 JDBC 中最关键的可插拔式驱动设计就是由 SPI 实现.\"]},\"170\":{\"h\":\"Mysql 驱动包 SPI\",\"t\":[\"各个数据库连接包中关于 JDBC 方式实现, 都需要实现其 Driver 接口, 这块其实用的就是 SPI 的方式, 我们看看 mysql-connector-java.jar\",\"image-20210130202512831\",\"那么 JDK 中的 JDBC 相关类, 是如何实现这块的? 关键类就是 DriverManager\",\"public class DriverManager { static { loadInitialDrivers(); } private static void loadInitialDrivers() { // ... AccessController.doPrivileged(new PrivilegedAction<Void>() { public Void run() { // 这里就是 SPI 的实现, 迭代时实际会 Class.forName() 初始化实现类 ServiceLoader<Driver> loadedDrivers = ServiceLoader.load(Driver.class); Iterator<Driver> driversIterator = loadedDrivers.iterator(); try{ while(driversIterator.hasNext()) { driversIterator.next(); } } catch(Throwable t) { // Do nothing } return null; } }); // ... } } \",\"如果代码中调用到 DriverManager 的静态方法, 即会触发上面这些代码, 而这些代码的作用便是将 SPI 资源文件中 Driver 实现类全部初始化, 那么初始化实现类后又有什么作用呢? 接着看看 com.mysql.jdbc.Driver\",\"public class Driver extends NonRegisteringDriver implements java.sql.Driver { static { try { // 调用 DriverManager 的注册方法, 将此 Driver 实现类注册到 JDBC 的 Driver 管理器中 java.sql.DriverManager.registerDriver(new Driver()); } catch (SQLException E) { throw new RuntimeException(\\\"Can't register driver!\\\"); } } } \",\"DriverManager 的注册方法实现很简单, 即将入参放入静态变量作为全局缓存\",\"public class DriverManager { // 缓存 Driver 实现类 private final static CopyOnWriteArrayList<DriverInfo> registeredDrivers = new CopyOnWriteArrayList<>(); public static synchronized void registerDriver(java.sql.Driver driver) throws SQLException { registerDriver(driver, null); } public static synchronized void registerDriver(java.sql.Driver driver, DriverAction da) throws SQLException { if(driver != null) { // 注册到变量中 registeredDrivers.addIfAbsent(new DriverInfo(driver, da)); } else { throw new NullPointerException(); } } } \"]},\"171\":{\"h\":\"筛选 Driver: 约定大于配置\",\"t\":[\"正常使用时, 我们会直接用 DriverManager.getConnection(url, user, passwd) 获取到连接, 但这里就有疑问了, 我们在 DriverManager 中注册了多个 Driver, 为什么这里能确定一个唯一 Driver 呢?\",\"先找到 DriverManager 的 getConnection() 方法:\",\"public static Connection getConnection(String url, String user, String password) throws SQLException { // ... return (getConnection(url, info, Reflection.getCallerClass())); } private static Connection getConnection( String url, java.util.Properties info, Class<?> caller) throws SQLException { // ... for(DriverInfo aDriver : registeredDrivers) { // isDriverAllowed() 仅是通过 Class.forName() 初始化, 没有甄别作用 if(isDriverAllowed(aDriver.driver, callerCL)) { try { // 最关键的点在这行, 筛选工作其实在实现类自身的 connect() 方法中, 会根据传入的 url 筛选 Connection con = aDriver.driver.connect(url, info); if (con != null) { return (con); } } catch (SQLException ex) { } } else { } } // ... } \",\"看看最重要的 Mysql 的 Driver 中如何实现筛选 (Driver 继承自 NonRegisteringDriver)\",\"public class NonRegisteringDriver implements java.sql.Driver { private static final String URL_PREFIX = \\\"jdbc:mysql://\\\"; private static final String REPLICATION_URL_PREFIX = \\\"jdbc:mysql:replication://\\\"; private static final String MXJ_URL_PREFIX = \\\"jdbc:mysql:mxj://\\\"; public static final String LOADBALANCE_URL_PREFIX = \\\"jdbc:mysql:loadbalance://\\\"; public java.sql.Connection connect(String url, Properties info) throws SQLException { // ... // parseURL() 会匹配 url 是否符合其所在 Driver 的连接方式 // 这里就是采用\\\"约定大于配置\\\"的思想, 通过匹配路径头做筛选 if ((props = parseURL(url, info)) == null) { return null; } // ... } public Properties parseURL(String url, Properties defaults) throws java.sql.SQLException { // ... // 如果 url 不匹配此 Driver 的路径则返回null, 最外层会继续尝试下个 Driver if (!StringUtils.startsWithIgnoreCase(url, URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, MXJ_URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, LOADBALANCE_URL_PREFIX) && !StringUtils.startsWithIgnoreCase(url, REPLICATION_URL_PREFIX)) { return null; } // ... } } \"]},\"172\":{\"h\":\"总结 MySQL & JDBC\",\"t\":[\"看到这里我想你已经了解 MySQL & JDBC 中关于 SPI 的实现方式了, 归纳几点\",\"JDBC 中的 DriverManager 会加载 SPI 资源文件, 将 java.sql.Driver 的实现类全部初始化\",\"其实现类初始化时, 会自主创建自身对象并注入到 DriverManager 中进行统一管理\",\"DriverManager 对于管理的 Driver 筛选方式是交由 Driver 实现类自身进行的, 它仅负责遍历并取出可用的 Driver\",\"Driver 实现类通过传入的数据库 url 头, 判断是否该返回自身. 如果判断为否则返回 null. JDBC 的 DriverManager 接收到 null 会继续下个 Driver 实现类的调用.\",\"MySql 驱动实选方案是路径头匹配, 是一种 约定大于配置的思想\"]},\"173\":{\"h\":\"JDBC Demo\",\"t\":[\"写完这些分析我们再来看如果实现个简单的 demo.\",\"先分享个我以前写的方式\",\"static { try { // 反射, 该类加载时会在静态块中, 向 DriverManager 注册 Driver Class.forName(\\\"com.mysql.jdbc.Driver\\\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } } public static void main(String[] args) { try ( final Connection conn = DriverManager.getConnection(url, user, passwd); final Statement stmt = conn.createStatement(); final ResultSet rs = stmt.executeQuery(\\\"select count(1) from test\\\") ) { while (rs.next()) { int count = rs.getInt(\\\"count(1)\\\"); System.out.println(count); } } catch (Exception e) { e.printStackTrace(); } } \",\"虽然这样可以使用, 但不觉得有多余的代码吗? 看看我新写的方式\",\"public static void main(String[] args) throws ClassNotFoundException { try ( final Connection conn = DriverManager.getConnection(url, user, passwd); final Statement stmt = conn.createStatement(); final ResultSet rs = stmt.executeQuery(\\\"select count(1) from test\\\") ) { while (rs.next()) { int count = rs.getInt(\\\"count(1)\\\"); System.out.println(count); } } catch (Exception e) { e.printStackTrace(); } } \",\"仅仅需要这些简单的代码即可, DriverManager.getConnection() 被调用时 DriverManager 会自动加载 SPI 中的实现类, 不需要我们再去 Class.forName() 手动调用 java.mysql.Driver 的初始化.\",\"看到这里我想你依然明白 SPI 最最重要的作用了. 无需显式的写出接口对应的实现类\",\"那么我们还有个在 \\\"Java SPI 思考\\\" 中的问题也解开了. **如何区分出 SPI 中要使用的实现类呢? 让实现类自己判定即可, 外层调用仅需迭代所有. **\"]},\"174\":{\"h\":\"SOUL SPI 实现\",\"t\":[\"Java 中 SPI 的使用方式我们已经掰开来了解透彻了, 而 Soul 中的 SPI 是自己设计的, 采用 Dubbo 中 SPI 的设计思想. 在 org.dromara.soul.spi.SPI 注释类上可以看到相关注释.\",\"/** * SPI Extend the processing. * All spi system reference the apache implementation of * https://github.com/apache/dubbo/blob/master/dubbo-common/src/main/java/org/apache/dubbo/common/extension. */ \"]},\"175\":{\"h\":\"Java SPI 缺陷\",\"t\":[\"在上两个模块中分析 Java SPI 使用时, 发现了些缺点:\",\"如果使用 ServiceLoader 不当, 没有正确利用到它的缓存机制, 会导致每次获取具体实现类都要反射出类对象以及初始化实例对象, 性能完蛋不说, 每次得到的对象都不一样可能会引发程序问题.\",\"即每次找寻具体实现类都要迭代一遍才行, 虽然子类少的使用没什么影响, 但这种方式还是很傻. 另外参考 MySQL 驱动中 JDBC 的实现, 还需要自行设计一套比较复杂的筛选机制.\",\"那么 Soul SPI 的实现, 是如何解决这两个问题的? 关键就在接下来的两个子模块中\",\"优化的 ExtensionLoader\",\"增强型 getJoin()\"]},\"176\":{\"h\":\"优化的 ExtensionLoader\",\"t\":[\"先来看 SPI 实现项目的全貌, 项目为 soul-spi:\",\"image-20210130214402997\",\"其中最核心的类就是 ExtensionLoader, 可以说是 Soul 版的 ServiceLoader, 它也定义了 SPI 资源文件的路径位置\",\"public final class ExtensionLoader<T> { private static final String SOUL_DIRECTORY = \\\"META-INF/soul/\\\"; } \",\"通过检查它各个方法的调用处, 我们找到入口方法 getExtensionLoader()\",\"public final class ExtensionLoader<T> { private static final Map<Class<?>, ExtensionLoader<?>> LOADERS = new ConcurrentHashMap<>(); public static <T> ExtensionLoader<T> getExtensionLoader(final Class<T> clazz) { // ... // 根据加载类对象取出缓存中数据, 如果没有则新建 ExtensionLoader 对象并放入缓存 ExtensionLoader<T> extensionLoader = (ExtensionLoader<T>) LOADERS.get(clazz); if (extensionLoader != null) { return extensionLoader; } LOADERS.putIfAbsent(clazz, new ExtensionLoader<>(clazz)); return (ExtensionLoader<T>) LOADERS.get(clazz); } } \",\"这个方法的作用其实就像是 ServiceLoader 的 load() 方法, 会返回一个 ServiceLoader 对象.\",\"只是 Soul 中的实现改了种方式, 将 ExtensionLoader 对象缓存起来, 这样 二次调用时传入相同 Class 对象也会返回同样的 ExtensionLoader, 避免了 ServiceLoader 使用时不理解其机制导致没有用到它的缓存, 每次迭代都去反射初始化所有实现类\"]},\"177\":{\"h\":\"增强型搜索 getJoin()\",\"t\":[\"再来看看 ExtensionLoader 的 getJoin() 方法, 我将它理解为 更优的 ServiceLoader 迭代器版实现. 它同样是做了两件 ServiceLoader 迭代时做过的事情:\",\"初始化 SPI 中的实现类\",\"将实现类缓存 -> 缓存为 Key-Value 形式的 Map 集合\",\"基于 K-V 缓存模式, 它还做了一件我最期待的改造:\",\"时间复杂度 O(1) 的直接匹配实现类方式\"]},\"178\":{\"h\":\"多层缓存\",\"t\":[\"ExtensionLoader 之所以能做到这种增强型搜索, 无需每次都迭代所有, 是依靠三种不同类型的缓存.\",\"这三种缓存我将它分为二层, 它们各有不同用途, 总览如下:\",\"// 一层缓存 private final Map<String, Holder<Object>> cachedInstances = new ConcurrentHashMap<>(); // 二层缓存之一 private final Holder<Map<String, Class<?>>> cachedClasses = new Holder<>(); // 二层缓存之一 private final Map<Class<?>, Object> joinInstances = new ConcurrentHashMap<>(); \"]},\"179\":{\"h\":\"第一层缓存: cachedInstances\",\"t\":[\"首先是第一层缓存, 它是我们搜索接口的具体实现类时最先接触到的, 如果命中它则直接可以得到实现类的对象\",\"private final Map<String, Holder<Object>> cachedInstances = new ConcurrentHashMap<>(); \",\"它的 key 其实就是 Soul SPI 资源文件中我们配置的信息, 比如 Divide 插件的负载均衡实现类的资源文件\",\"image-20210130230250748\",\"而它的 value 则是 Holder 对象, 其中存有实现类的对象. 调用 getJoin() 时传入标识 (比如 random) 获得实现类对象.\",\"public T getJoin(final String name) { // ... Holder<Object> objectHolder = cachedInstances.get(name); Object value = objectHolder.getValue(); // ... return (T) value; } \"]},\"180\":{\"h\":\"第二层缓存之: cachedClasses\",\"t\":[\"cachedClasses 存放的是 标识(random) 与 类对象 的映射\",\"private final Holder<Map<String, Class<?>>> cachedClasses = new Holder<>(); \",\"cachedClasses 缓存的信息如何填充的呢? 是直接触发到检索 SPI 资源文件, 然后解析成 cachedClasses 缓存. 具体方法在 loadResources() 中\",\"private void loadResources(final Map<String, Class<?>> classes, final URL url) throws IOException { Properties properties = new Properties(); // 解析资源文件 properties.load(inputStream); properties.forEach((name, classPath) -> { // 读出 K-V 结构并组装成 classes, 外层调用会包装到 cachedClasses loadClass(classes, name, classPath); }); } \"]},\"181\":{\"h\":\"第二层缓存之: joinInstances\",\"t\":[\"joinInstances 缓存存放的是 类对象与对象实例 的映射\",\"private final Map<Class<?>, Object> joinInstances = new ConcurrentHashMap<>(); \",\"这一层缓存会借助第二层缓存, 得到对应标识(random) 的类对象, 并通过类对象初始化实例, 缓存到自身中. 对应实现方法为 createExtension()\",\"private T createExtension(final String name) { Class<?> aClass = getExtensionClasses().get(name); Object o = joinInstances.get(aClass); if (o == null) { joinInstances.putIfAbsent(aClass, aClass.newInstance()); } return (T) o; } \"]},\"182\":{\"h\":\"缓存小结\",\"t\":[\"通过 ExtensionLoader 加载某个接口的实现类时, 缓存调用流程图如下:\",\"09\"]},\"183\":{\"h\":\"详细源码分析 (可跳过)\",\"t\":[\"// name 理解为标识, 用于甄别 SPI 文件中, 想要获取的某个实现类 public T getJoin(final String name) { // ... // cachedInstances 缓存所有 Holder 对象. Holder 对象的 value 属性存放具体实现类 // 我将 cachedInstances 理解为第一层缓存, 命中则直接返回要找的类 Holder<Object> objectHolder = cachedInstances.get(name); if (objectHolder == null) { cachedInstances.putIfAbsent(name, new Holder<>()); objectHolder = cachedInstances.get(name); } Object value = objectHolder.getValue(); // 双重锁, 如果没有命中则调用 createExtension() if (value == null) { synchronized (cachedInstances) { value = objectHolder.getValue(); if (value == null) { value = createExtension(name); objectHolder.setValue(value); } } } return (T) value; } \",\"private T createExtension(final String name) { // 关键代码, 搜索标识对应的类对象 Class<?> aClass = getExtensionClasses().get(name); if (aClass == null) { throw new IllegalArgumentException(\\\"name is error\\\"); } // joinInstances 理解为第二层缓存, K-V 存放类对象与其初始化对象 Object o = joinInstances.get(aClass); if (o == null) { try { joinInstances.putIfAbsent(aClass, aClass.newInstance()); o = joinInstances.get(aClass); } catch (InstantiationException | IllegalAccessException e) { // ... } } return (T) o; } \",\"public Map<String, Class<?>> getExtensionClasses() { // cachedClasses 为第三层缓存, 存放标识与类对象映射 Map<String, Class<?>> classes = cachedClasses.getValue(); if (classes == null) { synchronized (cachedClasses) { classes = cachedClasses.getValue(); if (classes == null) { // 构造 classes 缓存, classes 的 K-V 结构为 标识-类对象 classes = loadExtensionClass(); cachedClasses.setValue(classes); } } } return classes; } \",\"private Map<String, Class<?>> loadExtensionClass() { // 拿到接口的 SPI 注解 SPI annotation = clazz.getAnnotation(SPI.class); if (annotation != null) { String value = annotation.value(); if (StringUtils.isNotBlank(value)) { cachedDefaultName = value; } } // 构造 classes 缓存, classes 的 K-V 结构为 标识-类对象 Map<String, Class<?>> classes = new HashMap<>(16); loadDirectory(classes); return classes; } \",\"private void loadDirectory(final Map<String, Class<?>> classes) { String fileName = SOUL_DIRECTORY + clazz.getName(); try { ClassLoader classLoader = ExtensionLoader.class.getClassLoader(); // 读取 SPI 资源文件 Enumeration<URL> urls = classLoader != null ? classLoader.getResources(fileName) : ClassLoader.getSystemResources(fileName); if (urls != null) { while (urls.hasMoreElements()) { URL url = urls.nextElement(); // 构造 classes 缓存, classes 的 K-V 结构为 标识-类对象 loadResources(classes, url); } } } } \",\"private void loadResources(final Map<String, Class<?>> classes, final URL url) throws IOException { try (InputStream inputStream = url.openStream()) { Properties properties = new Properties(); properties.load(inputStream); // 解析资源文件为 KV 结构 properties.forEach((k, v) -> { String name = (String) k; String classPath = (String) v; if (StringUtils.isNotBlank(name) && StringUtils.isNotBlank(classPath)) { try { // 加载路径, 传入 classes 缓存、标识、类路径 loadClass(classes, name, classPath); } catch (ClassNotFoundException e) { throw new IllegalStateException(\\\"load extension resources error\\\", e); } } }); } } \",\"private void loadClass(final Map<String, Class<?>> classes, final String name, final String classPath) throws ClassNotFoundException { // 将资源文件中的类路径反射成类对象 Class<?> subClass = Class.forName(classPath); // 拿到实现类的 Join 注解 Join annotation = subClass.getAnnotation(Join.class); Class<?> oldClass = classes.get(name); if (oldClass == null) { // 放入入参 classes 缓存中, K-V 形式为 标识-类对象 classes.put(name, subClass); } } \"]},\"184\":{\"h\":\"Soul网关学习Sign插件\"},\"185\":{\"h\":\"介绍\",\"t\":[\"sign 插件用来对请求进行签名认证的插件\"]},\"186\":{\"h\":\"AK/SK 介绍\",\"t\":[\"AK/SK（Access Key ID/Secret Access Key）即访问密钥，包含访问密钥 ID（AK）和秘密访问密钥（SK）两部分，主要用于对用户的调用行为进行鉴权和认证。\"]},\"187\":{\"h\":\"插件使用-以（/dubbo/findAll）为例\"},\"188\":{\"h\":\"在 SoulBootstrap 的 pom.xml 文件中添加 sign 的支持\",\"t\":[\" <!-- soul sign plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-sign</artifactId> <version>${last.version}</version> </dependency> <!-- soul sign plugin end--> \"]},\"189\":{\"h\":\"新增 appKey，secretKey\"},\"190\":{\"h\":\"配置选择器和规则器\",\"t\":[\"添加选择器 添加规则器\"]},\"191\":{\"h\":\"增加获取鉴权服务\",\"t\":[\"在自己服务中增加一个对外访问的方法\",\" @GetMapping(\\\"/authUrl\\\") public String authUrl() { Map<String, String> map = Maps.newHashMapWithExpectedSize(2); //timestamp为毫秒数的字符串形式 String.valueOf(LocalDateTime.now().toInstant(ZoneOffset.of(\\\"+8\\\")).toEpochMilli()) String timetamp = String.valueOf(LocalDateTime.now().toInstant(ZoneOffset.of(\\\"+8\\\")).toEpochMilli()) ; System.out.println(timetamp); map.put(\\\"timestamp\\\",timetamp); //值应该为毫秒数的字符串形式 map.put(\\\"path\\\", \\\"/dubbo/findAll\\\"); map.put(\\\"version\\\", \\\"1.0.0\\\"); List<String> storedKeys = Arrays.stream(map.keySet() .toArray(new String[]{})) .sorted(Comparator.naturalOrder()) .collect(Collectors.toList()); final String sign = storedKeys.stream() .map(key -> String.join(\\\"\\\", key, map.get(key))) .collect(Collectors.joining()).trim() .concat(\\\"D19CF79F647A465AB9C5C66F430CAD28\\\");//SECRETkey return DigestUtils.md5DigestAsHex(sign.getBytes()).toUpperCase(); } \",\"下面需要注意的\"]},\"192\":{\"h\":\"在网关中增加鉴权头信息\",\"t\":[\"image.png\"]},\"193\":{\"h\":\"请求的结果演示\",\"t\":[\"通过的返回 5min 超时的返回 appKey 填写错误的返回 签名错误的返回 禁用 sign 插件的返回\"]},\"194\":{\"h\":\"sign 插件的实现分析\"},\"195\":{\"h\":\"java 中 Pair\",\"t\":[\"简单的说就是 pair 保存的是一对 key value，而 map 可以保存多对 key value。 SignPlugin 插件调用 DefaultSignService 中 signVerify 方法 判断 sign 插件是否可用，如果可用获取在 global 插件存入的 soulContext 并调用 verify 方法\",\"if (signData != null && signData.getEnabled()) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; return verify(soulContext, exchange); } \",\"verify 方法中 判断请求头信息是否正确 如果不正确就抛出 log.error(\\\"sign parameters are incomplete,{}\\\", soulContext)异常\",\"if (StringUtils.isBlank(soulContext.getAppKey()) || StringUtils.isBlank(soulContext.getSign()) || StringUtils.isBlank(soulContext.getTimestamp())) { log.error(\\\"sign parameters are incomplete,{}\\\", soulContext); return Pair.of(Boolean.FALSE, Constants.SIGN_PARAMS_ERROR); } \",\"判断请求时间是否超时\",\" if (between > delay) { return Pair.of(Boolean.FALSE, String.format(SoulResultEnum.SING_TIME_IS_TIMEOUT.getMsg(), delay)); } \",\"没有超时继续调用 sign 方法 获取认证数据，这个数据在 soulAdmin 中配置\",\"AppAuthData appAuthData = SignAuthDataCache.getInstance().obtainAuthData(soulContext.getAppKey()); \",\"后面对 appAuthData 数据进行判断，数据有错误就不通过 对获取的参数再次签名，判断传入的和再次签名的是否一样\",\"String sigKey = SignUtils.generateSign(appAuthData.getAppSecret(), buildParamsMap(soulContext)); \",\"如果都校验都通过就完成认证 访问请求。\"]},\"196\":{\"h\":\"Soul网关学习Zookeeper数据同步01\"},\"197\":{\"h\":\"启动 soul-admin、soul-bootstrap， 使用 zookeeper 同步数据到网关\"},\"198\":{\"h\":\"一、配置环境\",\"t\":[\"1、soul-admin 服务配置，需要重启服务\",\"soul-admin/src/main/resources/application.yml\",\"soul: sync: zookeeper: url: localhost:2181 sessionTimeout: 5000 connectionTimeout: 2000 \",\"2、soul-bootstrap 网关服务配置，需要重启\",\"soul-bootstrap/pom.xml\",\"<!--soul data sync start use zookeeper--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-zookeeper</artifactId> <version>${project.version}</version> </dependency> \",\"soul-bootstrap/src/main/resources/application-local.yml\",\"soul: sync: zookeeper: url: localhost:2181 sessionTimeout: 5000 connectionTimeout: 2000 \"]},\"199\":{\"h\":\"二、启动服务\",\"t\":[\"1、 启动 zookeeper\",\"zookeeper ./bin/zkServer.sh start /usr/bin/java ZooKeeper JMX enabled by default Using config: /Documents/soft/zookeeper/bin/../conf/zoo.cfg Starting zookeeper ... STARTED \",\"2、soul-admin 网关后台服务启动，服务启动后可以看到发起的 ZooKeeper 请求调用\",\" 2021-01-20 17:34:48.752 INFO 64500 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread : Starting ZkClient event thread. 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:zookeeper.version=3.5.6-c11b7e26bc554b8523dc929761dd28808913f091, built on 10/08/2019 20:18 GMT 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:host.name=10.7.254.31 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:java.version=1.8.0_261 2021-01-20 17:34:48.761 INFO 64500 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:java.vendor=Oracle Corporation ...... 2021-01-20 17:34:48.806 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Opening socket connection to server localhost/0:0:0:0:0:0:0:1:2181. Will not attempt to authenticate using SASL (unknown error) 2021-01-20 17:34:48.826 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Socket connection established, initiating session, client: /0:0:0:0:0:0:0:1:58214, server: localhost/0:0:0:0:0:0:0:1:2181 2021-01-20 17:34:48.857 INFO 64500 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Session establishment complete on server localhost/0:0:0:0:0:0:0:1:2181, sessionid = 0x1000b5e22f50001, negotiated timeout = 5000 2021-01-20 17:34:48.861 INFO 64500 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient : zookeeper state changed (SyncConnected) \",\"3、soul-bootstrap 网关服务启动，服务启动后可以看到发起的 ZooKeeper 请求调用\",\"2021-01-20 17:35:58.996 INFO 64583 --- [ main] s.b.s.d.z.ZookeeperSyncDataConfiguration : you use zookeeper sync soul data....... 2021-01-20 17:35:59.003 INFO 64583 --- [-localhost:2181] org.I0Itec.zkclient.ZkEventThread : Starting ZkClient event thread. ...... 2021-01-20 17:35:59.012 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:user.home=/Users/liquan 2021-01-20 17:35:59.012 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Client environment:os.memory.total=310MB 2021-01-20 17:35:59.018 INFO 64583 --- [ main] org.apache.zookeeper.ZooKeeper : Initiating client connection, connectString=localhost:2181 sessionTimeout=5000 watcher=org.I0Itec.zkclient.ZkClient@114a5e0 2021-01-20 17:35:59.121 INFO 64583 --- [localhost:2181)] org.apache.zookeeper.ClientCnxn : Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1000b5e22f50002, negotiated timeout = 5000 2021-01-20 17:35:59.126 INFO 64583 --- [ain-EventThread] org.I0Itec.zkclient.ZkClient : zookeeper state changed (SyncConnected) \",\"4、查看 zookeeper 上的 soul 网关同步的注册信息\"]},\"200\":{\"h\":\"三、Soul 网关 Zookeeper 数据同步原理解析\",\"t\":[\"在 soul-admin 启动后在控制台中看到了 org.I0Itec.zkclient.ZkClient，以此为入口进行跟踪调试。\",\"1、ZookeeperConfiguration 作用：注册 zkClient 到 Spring 容器。\",\"// EnableConfigurationProperties 作用：使用 @ConfigurationProperties 注解的类生效。如果一个配置类只配置@ConfigurationProperties注解，而没有使用@Component，那么在IOC容器中是获取不到properties 配置文件转化的bean。@EnableConfigurationProperties 相当于把使用@ConfigurationProperties 的类进行了一次注入。 // @ConditionalOnMissingBean 容器中没有指定的类，就进行注入，@ConditionalOnBean与之相反 /** * ZookeeperConfiguration . * @author xiaoyu(Myth) */ @EnableConfigurationProperties(ZookeeperProperties.class) public class ZookeeperConfiguration { /** * register zkClient in spring ioc. * * @param zookeeperProp the zookeeper configuration * @return ZkClient {@linkplain ZkClient} */ @Bean @ConditionalOnMissingBean(ZkClient.class) public ZkClient zkClient(final ZookeeperProperties zookeeperProp) { return new ZkClient(zookeeperProp.getUrl(), zookeeperProp.getSessionTimeout(), zookeeperProp.getConnectionTimeout()); } } \",\"soul-admin 启动后，会实读取 zookeeper 配置信息，向容器中注入 zkClient 和 zookeeper 建立连接。\",\"在这里插入图片描述\",\"2、实例化 ZkClient 的调用栈中会调用 DataChangedEventDispatcher 的 afterPropertiesSet 方法。\",\"org.dromara.soul.admin.listener.DataChangedEventDispatcher 作用：事件转发器，将更改的事件转发到每个 ConfigEventListener。\",\"此类 实现了 InitializingBean，在 DataChangedEventDispatcher 初始化过程中，会执行 afterPropertiesSet 方法。\",\"afterPropertiesSet 方法会在容器中查找类型是 DataChangedListener.class 的 bean。\",\"@Component public class DataChangedEventDispatcher implements ApplicationListener<DataChangedEvent>, InitializingBean { private ApplicationContext applicationContext; private List<DataChangedListener> listeners; public DataChangedEventDispatcher(final ApplicationContext applicationContext) { this.applicationContext = applicationContext; } @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { case APP_AUTH: listener.onAppAuthChanged((List<AppAuthData>) event.getSource(), event.getEventType()); break; ....... default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } ...... @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } } \",\"3、afterPropertiesSet 方法的执行会查找 DataChangedListener.class 相关类的实例化。\",\"org.dromara.soul.admin.config.DataSyncConfiguration 作用：数据同步配置类。\",\"ZookeeperDataChangedListener 数据变化监听器，作用：应该是监听元数据变化，然后同步到 zookeeper。\",\"ZookeeperDataInit zookeeper 数据初始化，作用：向 zookeeper 同步初始化数据。\",\"/** * The type Zookeeper listener. */ @Configuration @ConditionalOnProperty(prefix = \\\"soul.sync.zookeeper\\\", name = \\\"url\\\") @Import(ZookeeperConfiguration.class) static class ZookeeperListener { /** * Config event listener data changed listener. * @param zkClient the zk client * @return the data changed listener */ @Bean @ConditionalOnMissingBean(ZookeeperDataChangedListener.class) public DataChangedListener zookeeperDataChangedListener(final ZkClient zkClient) { return new ZookeeperDataChangedListener(zkClient); } /** * Zookeeper data init zookeeper data init * @param zkClient the zk client * @param syncDataService the sync data service * @return the zookeeper data init */ @Bean @ConditionalOnMissingBean(ZookeeperDataInit.class) public ZookeeperDataInit zookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { return new ZookeeperDataInit(zkClient, syncDataService); } } \",\"4、org.dromara.soul.admin.listener.zookeeper.ZookeeperDataInit 作用：负责向 zookeeper 同步初始化数据。此类实现了 CommandLineRunner。\",\"CommandLineRunner：作用：SpringBoot 在项目启动后会遍历所有实现 CommandLineRunner 的实体类并执行 run 方法，如果需要按照一定的顺序去执行，那么就需要在实体类上使用一个@Order 注解（或者实现 Order 接口）来表明顺序。\",\"run 方法会调用 syncDataService.syncAll 方法。\",\"public class ZookeeperDataInit implements CommandLineRunner { private final ZkClient zkClient; private final SyncDataService syncDataService; /** * Instantiates a new Zookeeper data init. * @param zkClient the zk client * @param syncDataService the sync data service */ public ZookeeperDataInit(final ZkClient zkClient, final SyncDataService syncDataService) { this.zkClient = zkClient; this.syncDataService = syncDataService; } @Override public void run(final String... args) { String pluginPath = ZkPathConstants.PLUGIN_PARENT; String authPath = ZkPathConstants.APP_AUTH_PARENT; String metaDataPath = ZkPathConstants.META_DATA; if (!zkClient.exists(pluginPath) && !zkClient.exists(authPath) && !zkClient.exists(metaDataPath)) { syncDataService.syncAll(DataEventTypeEnum.REFRESH); } } } \",\"5、org.dromara.soul.admin.service.sync.SyncDataServiceImpl\",\"syncAll 方法会调用事件发布器进行事件发布，事件类型是 DataEventTypeEnum.REFRESH。\",\"/** * The type sync data service. * @author xiaoyu(Myth) */ @Service(\\\"syncDataService\\\") public class SyncDataServiceImpl implements SyncDataService { // 发布事件，也就是把某个事件告诉的所有与这个事件相关的监听器 private final ApplicationEventPublisher eventPublisher; ...... @Override public boolean syncAll(final DataEventTypeEnum type) { appAuthService.syncData(); List<PluginData> pluginDataList = pluginService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, type, pluginDataList)); List<SelectorData> selectorDataList = selectorService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.SELECTOR, type, selectorDataList)); List<RuleData> ruleDataList = ruleService.listAll(); eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.RULE, type, ruleDataList)); metaDataService.syncData(); return true; } ...... } \",\"在这里插入图片描述\",\"6、事件发布后 org.dromara.soul.admin.listener.DataChangedEventDispatcher 类的 onApplicationEvent 方法会监听事件变化，遍历所有的监听者进行数据同步处理，这里的监听者实现类是 ZookeeperDataChangedListener，根据对应的事件类型通过 zkClient 向 zookeeper 同步数据。\",\"在这里插入图片描述\",\"7、soul-admin 初始化到数据到 zookeeper 思维导图\",\"在这里插入图片描述\"]},\"201\":{\"h\":\"四、总结\",\"t\":[\"soul-admin 启动就会同步网关数据 rule、metaData、selector、plugin 等到 zookeeper。数据变化会发布 DataChangedEvent 事件，监听事件将数据同步至 zookeeper。\",\"Soul 网关数据同步原理\"]},\"202\":{\"h\":\"Soul网关学习Zookeeper数据同步02\"},\"203\":{\"h\":\"启动 admin，与网关。 admin 操作，使用 zookeeper 同步数据到网关\",\"t\":[\"上一篇，通过 soul-admin 启动过程为入口，分析了 soul-admin 启动就会同步网关数据 rule、metaData、selector、plugin 等到 zookeeper。\",\"数据变化会发布 DataChangedEvent 事件，监听事件将数据同步至 zookeeper。 本篇接着上一篇继续跟踪源码分析 zookeeper 同步数据到网关原理：\",\"soul-admin 变更网关数据，跟踪数据同步过程。\",\"soul-bootstrap 如何获取 zookeeper 数据的，如何感知网关数据变化的。\"]},\"204\":{\"h\":\"一、soul-admin 变更网关数据，跟踪数据同步过程\",\"t\":[\"1、在网关后台尝试更改 divide 插件状态，debug 跟踪。\",\"在这里插入图片描述\",\"2、插件更新后会发布一个 DataChangedEvent 事件\",\"在这里插入图片描述\",\"3、org.dromara.soul.admin.listener.DataChangedEventDispatcher --> onApplicationEvent() 负责监听事件\",\"在这里插入图片描述\",\"4、org.dromara.soul.admin.listener.zookeeper.ZookeeperDataChangedListener 负责同步数据至 zookeeper\",\"在这里插入图片描述\"]},\"205\":{\"h\":\"二、soul-bootstrap 如何获取 zookeeper 数据的，如何感知网关数据变化的。\",\"t\":[\"1、soul-bootstrap 依赖\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-zookeeper</artifactId> <version>${project.version}</version> </dependency> \",\"2、soul-bootstrap 启动后会自动注入 org.dromara.soul.spring.boot.sync.data.zookeeper.ZookeeperSyncDataConfiguration\",\"读取 Zookeeper 配置向容器中注入 ZkClient。\",\"SyncDataService 向容器注入数据同步服务 bean，从 Spring 容器中获取，ZkClient（zookeeper 客户端）， pluginSubscriber（插件数据订阅）、metaSubscribers （元数据订阅）、authSubscribers（权限订阅）。\",\"public class ZookeeperSyncDataConfiguration { /** * Sync data service sync data service. * @param zkClient the zk client * @param pluginSubscriber the plugin subscriber * @param metaSubscribers the meta subscribers * @param authSubscribers the auth subscribers * @return the sync data service */ @Bean public SyncDataService syncDataService(final ObjectProvider<ZkClient> zkClient, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use zookeeper sync soul data.......\\\"); return new ZookeeperSyncDataService(zkClient.getIfAvailable(), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } /** * register zkClient in spring ioc. * @param zookeeperConfig the zookeeper configuration * @return ZkClient {@linkplain ZkClient} */ @Bean public ZkClient zkClient(final ZookeeperConfig zookeeperConfig) { return new ZkClient(zookeeperConfig.getUrl(), zookeeperConfig.getSessionTimeout(), zookeeperConfig.getConnectionTimeout()); } } \",\"3、org.dromara.soul.sync.data.zookeeper.ZookeeperSyncDataService 初始化，也就是 soul-bootstrap 启动后就会从 zookeeper 获取数据，同步至内存。\",\"watcherData()--> watcherAll() --> watcherPlugin() --> cachePluginData()。\",\"zkClient.subscribeDataChanges() 监听 当前节点和子节点的内容修改、删除。\",\"public class ZookeeperSyncDataService implements SyncDataService, AutoCloseable { private final ZkClient zkClient; private final PluginDataSubscriber pluginDataSubscriber; private final List<MetaDataSubscriber> metaDataSubscribers; private final List<AuthDataSubscriber> authDataSubscribers; /** * Instantiates a new Zookeeper cache manager. * @param zkClient the zk client * @param pluginDataSubscriber the plugin data subscriber * @param metaDataSubscribers the meta data subscribers * @param authDataSubscribers the auth data subscribers */ public ZookeeperSyncDataService(final ZkClient zkClient, final PluginDataSubscriber pluginDataSubscriber, final List<MetaDataSubscriber> metaDataSubscribers, final List<AuthDataSubscriber> authDataSubscribers) { this.zkClient = zkClient; this.pluginDataSubscriber = pluginDataSubscriber; this.metaDataSubscribers = metaDataSubscribers; this.authDataSubscribers = authDataSubscribers; watcherData(); watchAppAuth(); watchMetaData(); } ...... private void watcherData() { final String pluginParent = ZkPathConstants.PLUGIN_PARENT; List<String> pluginZKs = zkClientGetChildren(pluginParent); for (String pluginName : pluginZKs) { watcherAll(pluginName); } zkClient.subscribeChildChanges(pluginParent, (parentPath, currentChildren) -> { if (CollectionUtils.isNotEmpty(currentChildren)) { for (String pluginName : currentChildren) { watcherAll(pluginName); } } }); } ...... private void watcherPlugin(final String pluginName) { String pluginPath = ZkPathConstants.buildPluginPath(pluginName); if (!zkClient.exists(pluginPath)) { zkClient.createPersistent(pluginPath, true); } cachePluginData(zkClient.readData(pluginPath)); subscribePluginDataChanges(pluginPath, pluginName); } } \",\"4、debug 过程\",\"在这里插入图片描述\"]},\"206\":{\"h\":\"三、soul-bootstrap 是如何感知网关数据变化的\",\"t\":[\"1、org.dromara.soul.sync.data.zookeeper.ZookeeperSyncDataService cacheRuleData 方法上打上断点，更新插件规则，观察是否会进入此断点。\",\"private void cacheRuleData(final RuleData ruleData) { Optional.ofNullable(ruleData) .ifPresent(data -> Optional.ofNullable(pluginDataSubscriber).ifPresent(e -> e.onRuleSubscribe(data))); } \",\"2、soul-admin 后台操作更改 divide 插件规则，首先 soul-admin 会发布事件，并监听事件同步更新数据至 zookeeper。\",\"在这里插入图片描述\",\"3、soul-bootstrap 确实收到了插件数据的更新，根据 Soul 官网介绍的\\\"zookeeper 的同步原理\\\"这里主要是依赖 zookeeper 的 watch 机制。\",\"org.dromara.soul.sync.data.zookeeper.ZookeeperSyncDataService 类：\",\"zkClient.subscribeDataChanges() 监听 当前节点和子节点的内容修改、删除。\",\"zkClient.subscribeChildChanges(groupParentPath, (parentPath, currentChildren) -> { if (CollectionUtils.isNotEmpty(currentChildren)) { List<String> addSubscribePath = addSubscribePath(childrenList, currentChildren); // Get the newly added node data and subscribe to that node addSubscribePath.stream().map(addPath -> { String realPath = buildRealPath(parentPath, addPath); cacheRuleData(zkClient.readData(realPath)); return realPath; }).forEach(this::subscribeRuleDataChanges); } }); private void subscribeRuleDataChanges(final String path) { zkClient.subscribeDataChanges(path, new IZkDataListener() { @Override public void handleDataChange(final String dataPath, final Object data) { cacheRuleData((RuleData) data); } @Override public void handleDataDeleted(final String dataPath) { unCacheRuleData(dataPath); } }); } \",\"在这里插入图片描述\"]},\"207\":{\"h\":\"四、总结\",\"t\":[\"在这里插入图片描述\"]},\"208\":{\"h\":\"Soul网关学习Nacos数据同步\",\"t\":[\"本篇分析一下 Nacos 同步数据原理\",\"1、先配置一下环境\",\"soul-admin soul-admin/src/main/resources/application.yml\",\"soul: sync: nacos: url: localhost:8848 namespace: 1c10d748-af86-43b9-8265-75f487d20c6c # acm: # enabled: false # endpoint: acm.aliyun.com # namespace: # accessKey: # secretKey: \",\"soul-admin/pom.xml，这里默认配置是有的\",\"<dependency> <groupId>com.alibaba.nacos</groupId> <artifactId>nacos-client</artifactId> <version>${nacos-client.version}</version> </dependency> \",\"soul-bootstrap soul-bootstrap/src/main/resources/application-local.yml\",\"soul: sync: nacos: url: localhost:8848 namespace: 1c10d748-af86-43b9-8265-75f487d20c6c # acm: # enabled: false # endpoint: acm.aliyun.com # namespace: # accessKey: # secretKey: \",\"soul-bootstrap/pom.xml，下面的配置默认是没有的，需要手动添加\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-nacos</artifactId> <version>${project.version}</version> </dependency> \",\"启动服务\",\"1、启动 nacos 2、启动 soul-admin 3、启动 soul-bootstrap \",\"2、上面看着挺顺利，这个过程遇到了坑，soul-bootstrap 启动不起来报空指针异常，下面详细记录一下。 首先 soul-admin 启动后不会主动向 nacos 同步网关数据，需要手动同步，官网这一点没有提到。这个问题绊了我好久，最后是看到了群里其他同学遇到了同样的问题，参考了他们的文章才解决，下面记录一下解决过程。\",\"1）soul-bootstrap 启动的时候遇到了如下的错误，NullPointerException。\",\"soul-bootstrap 启动的时候会去，nacos 获取网关数据，看到下面的断点，拿到的是空数据。\",\"Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 2021-01-25 16:49:06.052 ERROR 5273 --- [ main] o.s.boot.SpringApplication : Application run failed org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'nacosSyncDataService' defined in class path resource [org/dromara/soul/springboot/starter/sync/data/nacos/NacosSyncDataConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.dromara.soul.sync.data.api.SyncDataService]: Factory method 'nacosSyncDataService' threw exception; nested exception is java.lang.NullPointerException ...... at org.dromara.soul.bootstrap.SoulBootstrapApplication.main(SoulBootstrapApplication.java:37) [classes/:na] Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.dromara.soul.sync.data.api.SyncDataService]: Factory method 'nacosSyncDataService' threw exception; nested exception is java.lang.NullPointerException at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] ... 19 common frames omitted Caused by: java.lang.NullPointerException: null at org.dromara.soul.sync.data.nacos.handler.NacosCacheHandler.updateMetaDataMap(NacosCacheHandler.java:128) ~[classes/:na] at org.dromara.soul.sync.data.nacos.handler.NacosCacheHandler.watcherData(NacosCacheHandler.java:167) ~[classes/:na] at org.dromara.soul.sync.data.nacos.NacosSyncDataService.start(NacosSyncDataService.java:59) ~[classes/:na] at org.dromara.soul.sync.data.nacos.NacosSyncDataService.<init>(NacosSyncDataService.java:49) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration.nacosSyncDataService(NacosSyncDataConfiguration.java:66) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7.CGLIB$nacosSyncDataService$0(<generated>) ~[classes/:na] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7$$FastClassBySpringCGLIB$$3830e886.invoke(<generated>) ~[classes/:na] at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244) ~[spring-core-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363) ~[spring-context-5.2.2.RELEASE.jar:5.2.2.RELEASE] at org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration$$EnhancerBySpringCGLIB$$cce084b7.nacosSyncDataService(<generated>) ~[classes/:na] ...... at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.2.2.RELEASE.jar:5.2.2.RELEASE] ... 20 common frames omitted \",\"在这里插入图片描述\",\"2）到 nacos 去看一下是否有网关的数据，根据配置的 “namespace: 1c10d748-af86-43b9-8265-75f487d20c6c” 结果是什么都没有。\",\"在这里插入图片描述\",\"在这里插入图片描述\",\"3、尝试去 soul-admin 手动同步，nacos 也看不到数据，必须需要手动创建命名空间“1c10d748-af86-43b9-8265-75f487d20c6c”，如下图。\",\"在这里插入图片描述\",\"4、去 soul-admin 手动同步数据后，就看到了 nacos 上有了网关的配置信息，这时候 soul-bootstrap 还是启动不起来，因为这里还缺少元数据信息。元数据只有 dubbo、springcloud 服务有数据，http 是没有元数据的，所以还得去启动一下 dubbo 服务。然后在 soul-admin 同步一下元数据。\",\"在这里插入图片描述\",\"soul-admin 点击同步数据，将元数据会同步到 nacos\",\"在这里插入图片描述\",\"soul-admin 点击同步数据，将认证数据会同步到 nacos\",\"在这里插入图片描述\",\"这时候 nacos 已经看到了全部的网关数据\",\"在这里插入图片描述\",\"5、再去启动 soul-bootstrap，终于启动成功\",\"2021-01-25 17:56:54.798 INFO 10051 --- [ main] o.d.s.w.configuration.SoulConfiguration : load plugin:[monitor] [org.dromara.soul.plugin.monitor.MonitorPlugin] 2021-01-25 17:56:54.798 INFO 10051 --- [ main] o.d.s.w.configuration.SoulConfiguration : load plugin:[response] [org.dromara.soul.plugin.httpclient.response.WebClientResponsePlugin] 2021-01-25 17:56:54.990 INFO 10051 --- [ main] d.s.s.s.s.d.n.NacosSyncDataConfiguration : you use nacos sync soul data....... 2021-01-25 17:56:58.890 INFO 10051 --- [ main] o.s.b.a.e.web.EndpointLinksResolver : Exposing 2 endpoint(s) beneath base path '/actuator' 2021-01-25 17:56:59.758 INFO 10051 --- [ main] o.s.b.web.embedded.netty.NettyWebServer : Netty started on port(s): 9195 2021-01-25 17:56:59.764 INFO 10051 --- [ main] o.d.s.b.SoulBootstrapApplication : Started SoulBootstrapApplication in 8.401 seconds (JVM running for 9.95) \",\"6、小结：\",\"配置下来感觉使用 nacos 同步数据不是很友好，配置过程遇到了很多坑，首先 soul-admin 不会主动同步网关数据到 nacos，需要手动同步。soul-bootstrap 必须依赖所有的网关配置数据 soul.plugin、soul.selector、soul.selector、soul.meta、soul.auth，缺一不可。如果网关只代理 http 服务（无元数据），soul-bootstrap 是启动不起来的。官网这一块没有做详细说明，对小白不是很友好。\",\"我们知道 soul-admin 启动后不会自动向 nacos 同步数据，需要手动操作。\",\"下面分析一下 soul-admin，nacos，soul-bootstrap 同步数据的过程。\"]},\"209\":{\"h\":\"soul-admin 如何同步网关数据？\",\"t\":[\"1、插件信息更新后会发布一个 DataChangedEvent 事件\",\"/** * create or update plugin * @param pluginDTO {@linkplain PluginDTO} * @return rows */ @Override @Transactional(rollbackFor = Exception.class) public String createOrUpdate(final PluginDTO pluginDTO) { ...... // publish change event. eventPublisher.publishEvent(new DataChangedEvent(ConfigGroupEnum.PLUGIN, eventType, Collections.singletonList(PluginTransfer.INSTANCE.mapToData(pluginDO)))); return StringUtils.EMPTY; } \",\"2、由监听事件处理类 DataChangedEventDispatcher 负责调用具体的监听实现类对 DataChangedEvent 事件进行处理，这里的具体实现类是 NacosDataChangedListener。\",\"org.dromara.soul.admin.listener.DataChangedEventDispatcher\",\"DataChangedEventDispatcher 初始化完成后会执行 afterPropertiesSet()，在容器中获取所有类型是 DataChangedListener.class 的 bean\",\" @Override public void afterPropertiesSet() { Collection<DataChangedListener> listenerBeans = applicationContext.getBeansOfType(DataChangedListener.class).values(); this.listeners = Collections.unmodifiableList(new ArrayList<>(listenerBeans)); } \",\"DataChangedEventDispatcher 监听到变更事件后，会执行 onApplicationEvent，遍历所有的监听类对监听事件进行处理，这里是 NacosDataChangedListener，如下图的 debug。\",\" @Override @SuppressWarnings(\\\"unchecked\\\") public void onApplicationEvent(final DataChangedEvent event) { for (DataChangedListener listener : listeners) { switch (event.getGroupKey()) { ...... case RULE: listener.onRuleChanged((List<RuleData>) event.getSource(), event.getEventType()); break; ...... default: throw new IllegalStateException(\\\"Unexpected value: \\\" + event.getGroupKey()); } } } \",\"在这里插入图片描述\",\"3、NacosDataChangedListener 会执行 onRuleChanged，updateRuleMap 先将网关数据同步至内存，在通过 publishConfig 同步至 nacos。\",\"org.dromara.soul.admin.listener.nacos.NacosDataChangedListener\",\"// 执行监听事件 @Override public void onRuleChanged(final List<RuleData> changed, final DataEventTypeEnum eventType) { updateRuleMap(getConfig(RULE_DATA_ID)); switch (eventType) { ...... default: changed.forEach(rule -> { List<RuleData> ls = RULE_MAP .getOrDefault(rule.getSelectorId(), new ArrayList<>()) .stream() .filter(s -> !s.getId().equals(rule.getSelectorId())) .sorted(RULE_DATA_COMPARATOR) .collect(Collectors.toList()); ls.add(rule); RULE_MAP.put(rule.getSelectorId(), ls); }); break; } publishConfig(RULE_DATA_ID, RULE_MAP); } // 同步至内存 private void updateRuleMap(final String configInfo) { JsonObject jo = GsonUtils.getInstance().fromJson(configInfo, JsonObject.class); Set<String> set = new HashSet<>(RULE_MAP.keySet()); ...... RULE_MAP.keySet().removeAll(set); } // 同步至nacos @SneakyThrows private void publishConfig(final String dataId, final Object data) { configService.publishConfig(dataId, GROUP, GsonUtils.getInstance().toJson(data)); } \",\"在这里插入图片描述\",\"4、DataChangedEventDispatcher 、NacosDataChangedListener 类继承关系\",\"在这里插入图片描述\",\"在这里插入图片描述\",\"5、小结\",\"1、例如 soul-admin 更新网关数据，发布一个 DataChangedEvent 事件，eventPublisher.publishEvent(new DataChangedEvent()) 2、DataChangedEventDispatcher --> onApplicationEvent()方法监听事件到事件，判断监听类是 NacosDataChangedListener 3、NacosDataChangedListener --> onRuleChanged()处理事件 4、同步至内存 updateRuleMap(getConfig(RULE_DATA_ID)) 5、同步至 nacos publishConfig(RULE_DATA_ID, RULE_MAP)\"]},\"210\":{\"h\":\"soul-bootstrap 如何同步网关数据？\",\"t\":[\"1、soul-bootstrap 添加了 nacos 依赖 soul-spring-boot-starter-sync-data-nacos，服务启动后会自动注入 NacosSyncDataConfiguration\",\"org.dromara.soul.springboot.starter.sync.data.nacos.NacosSyncDataConfiguration\",\"NacosSyncDataService 负责读取和同步 nacos 网关数据\",\"@Configuration @ConditionalOnClass(NacosSyncDataService.class) @ConditionalOnProperty(prefix = \\\"soul.sync.nacos\\\", name = \\\"url\\\") @Slf4j public class NacosSyncDataConfiguration { // 注入nacos数据同步服务 @Bean public SyncDataService nacosSyncDataService(final ObjectProvider<ConfigService> configService, final ObjectProvider<PluginDataSubscriber> pluginSubscriber, final ObjectProvider<List<MetaDataSubscriber>> metaSubscribers, final ObjectProvider<List<AuthDataSubscriber>> authSubscribers) { log.info(\\\"you use nacos sync soul data.......\\\"); return new NacosSyncDataService(configService.getIfAvailable(), pluginSubscriber.getIfAvailable(), metaSubscribers.getIfAvailable(Collections::emptyList), authSubscribers.getIfAvailable(Collections::emptyList)); } // 注入nacos客户端配置服务 @Bean public ConfigService nacosConfigService(final NacosConfig nacosConfig) throws Exception { Properties properties = new Properties(); ...... return NacosFactory.createConfigService(properties); } // 注入nacos配置服务 @Bean @ConfigurationProperties(prefix = \\\"soul.sync.nacos\\\") public NacosConfig nacosConfig() { return new NacosConfig(); } } \",\"2、org.dromara.soul.sync.data.nacos.NacosSyncDataService\",\"初始化会执行 start\",\"watcherData 负责监听 nacos 网关数据\",\"updatePluginMap 同步网关数据到内存\",\"public void start() { ...... watcherData(RULE_DATA_ID, this::updateRuleMap); ...... } @SneakyThrows private String getConfigAndSignListener(final String dataId, final Listener listener) { return configService.getConfigAndSignListener(dataId, GROUP, 6000, listener); } protected void watcherData(final String dataId, final OnChange oc) { Listener listener = new Listener() { @Override public void receiveConfigInfo(final String configInfo) { oc.change(configInfo); } ...... }; oc.change(getConfigAndSignListener(dataId, listener)); LISTENERS.getOrDefault(dataId, new ArrayList<>()).add(listener); } \",\"在这里插入图片描述\",\"3、NacosSyncDataService 类关系图\",\"在这里插入图片描述\",\"4、小结\",\"1、soul-bootstrap 启动向容器自动注入 NacosSyncDataConfiguration 2、NacosSyncDataConfiguration 类中会向容器注入 NacosSyncDataService 3、NacosSyncDataService --> start() --> watcherData() 监听 nacos，同步网关数据到内存 4、watcherData() --> updatePluginMap()\"]},\"211\":{\"h\":\"总结\",\"t\":[\"在这里插入图片描述\"]},\"212\":{\"h\":\"Soul网关学习插件链实现\"},\"213\":{\"h\":\"一、引言\",\"t\":[\"插件是 Soul 的灵魂。\",\"Soul 使用了插件化设计思想，实现了插件的热插拔，且极易扩展。内置丰富的插件支持，鉴权，限流，熔断，防火墙等等。\",\"image-20210122021834793\",\"Soul 是如何实现插件化设计的呢？\",\"在探究插件化设计之前，我们需要先了解下微内核架构（又称插件化架构）。\"]},\"214\":{\"h\":\"二、微内核架构\"},\"215\":{\"h\":\"1、架构释义\",\"t\":[\"img\",\"微内核架构也被称为插件化架构，是一种面向功能进行拆分的可扩展性架构，通常用于实现基于产品的应用。\",\"应用逻辑被分割为独立的插件模块和核心系统，提供了可扩展性、灵活性、功能隔离和自定义处理逻辑的特性。\",\"微内核架构的本质，是将变化封装在插件里面，从而达到快速灵活扩展的目的，而又不影响整体系统的稳定。\"]},\"216\":{\"h\":\"2、设计关键点\",\"t\":[\"核心系统设计的关键技术：\",\"**插件管理：**当前有哪些插件可用？如何加载这些插件？什么时候加载插件？\",\"常见的实现方法是插件注册表机制。\",\"**插件连接：**插件如何连接到核心系统？\",\"通常由核心系统制定连接规范，然后插件按照规范实现，核心系统按照规范加载即可。\",\"常见连接机制主要有：OSGi（Eclipse 使用）、消息模式、依赖注入（Spring 使用）。\",\"**插件通信：**插件与插件、插件与核心系统如何通信？\",\"通信必须经过核心系统，因此通常由核心系统提供插件通信机制。\"]},\"217\":{\"h\":\"三、Soul 的插件化设计\",\"t\":[\"参照微内核架构来看，Soul 的 soul-web 模块相当于核心系统，soul-plugin 下的子模块相当于插件模块。\",\"插件管理方面：\",\"soul-bootstrap 模块的 pom 文件充当插件列表， 以硬编码的方式引入各插件。\",\"在容器启动阶段，借助 springboot 的 starter 机制自动扫描并注册插件 bean 到 Spring 容器。\",\"插件连接方面：\",\"借助 springboot 支持的多实例自动注入能力（ObjectProvider<List> plugins），将插件 Bean 列表注入到网关的插件链，实现插件与网关的连接。\",\"插件通信方面：\",\"先在插件链初始化阶段完成插件排序，然后在插件处理时，借助贯穿整个插件链的 ServerWebExchange 完成向下游插件的定向传参，即某种意义上的插件通信机制。\"]},\"218\":{\"h\":\"四、Soul 的插件化实现\",\"t\":[\"Soul 网关中定义了一条插件链，所有的插件都在这条链上依次处理。\",\"在探究插件链之前，我们先来看看插件实现。\"]},\"219\":{\"h\":\"1、插件实现\",\"t\":[\"Soul 中所有插件最终均继承自 SoulPlugin，其完整继承关系如下所示：\",\"SoulPlugin\",\"可以看到，Soul 的插件生态极其丰富，正是如此丰富的插件支撑起了 Soul 网关强大的扩展能力。\",\"我们以常用的 DividePlugin 为例，分析插件内部所做工作。\",\"DividePlugin 继承结构：\",\"DividePlugin\",\"DividePlugin 继承自 AbstractSoulPlugin，最终实现了 SoulPlugin 接口。\",\"1）先关注 SoulPlugin，该插件接口结构如下：\",\"image-20210122025700589\",\"execute 方法：处理方法，需要传入 exchange 交换区 和 SoulPluginChain 插件链\",\"getOrder 方法：取得序号，用作插件排序\",\"named 方法：获得插件名\",\"skip 方法：判断是否跳过本次处理\",\"每次处理时，将先进行 skip 判断，不跳过则执行 excute 处理方法。\",\"2）再来看下 AbstractSoulPlugin，该抽象类结构如下：\",\"image-20210122030444704\",\"重点关注 execute 方法，其核心代码如下：\",\"if (pluginData.getEnable()){ // 获取插件数据 final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); // 获取选择器数据 final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); final SelectorData selectorData = matchSelector(exchange, selectors); // 获取规则 final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { //get last rule = rules.get(rules.size() - 1); } else { rule = matchRule(exchange, rules); } // 执行具体处理 return doExecute(exchange, chain, selectorData, rule); } // 继续执行后续插件处理 return chain.execute(exchange); \",\"获取选择器数据和规则，然后传入 doExecute 方法进行具体处理，doExecute 方法为抽象方法，交由子类具体实现。\",\"3）查看插件子类 DividePlugin，其结构如下：\",\"image-20210122032336069\",\"重点关注 doExecute 方法，以下是核心代码：\",\"// 获取网关上下文和规则处理器 final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // 获取上游列表 final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); // 选择待分发的目标上游 final String ip = Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress(); DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); // 设置 http url String domain = buildDomain(divideUpstream); String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); // 设置 http timeout exchange.getAttributes().put(Constants.HTTP_TIME_OUT, ruleHandle.getTimeout()); exchange.getAttributes().put(Constants.HTTP_RETRY, ruleHandle.getRetry()); return chain.execute(exchange); \",\"很明显，divide 插件只是完成目标上游服务的待分发，即根据选择器和规则找到对应服务，再通过负载均衡策略分配上游服务实例。\",\"而调用上游服务的工作是由其他相应的 client 类插件完成。\"]},\"220\":{\"h\":\"2、插件链实现\",\"t\":[\"借由插件链，Soul 将众多插件整合到一起进行统一调度处理。\",\"插件链继承结构：\",\"SoulPluginChain\",\"可以看到，Soul 中插件链 SoulPluginChain 仅有一个默认实现类 DefaultSoulPluginChain。\",\"1）DefaultSoulPluginChain 类结构如下：\",\"image-20210122040245671\",\"其持有通过构造方法传入的插件链，看看 execute 方法：\",\"public Mono<Void> execute(final ServerWebExchange exchange) { // 反应式编程语法：Mono.defer return Mono.defer(() -> { if (this.index < plugins.size()) { SoulPlugin plugin = plugins.get(this.index++); // 判断是否需要调过 Boolean skip = plugin.skip(exchange); if (skip) { return this.execute(exchange); } // 依次执行插件处理逻辑 return plugin.execute(exchange, this); } return Mono.empty(); }); } \",\"依次处理插件链上的插件，执行插件处理逻辑。\",\"DefaultSoulPluginChain 是 SoulWebHandler 的内部类，看下 SoulWebHandler 的实现。\",\"2）SoulWebHandler 结构如下：\",\"image-20210122035525261\",\"SoulWebHandler 是 web 请求处理的起点，在此创建并开始插件链的处理。\",\"同 DefaultSoulPluginChain 一样，SoulWebHandler 也是持有通过构造方法传入的插件链。\",\"看看 handle 方法：\",\"public Mono<Void> handle(@NonNull final ServerWebExchange exchange) { MetricsTrackerFacade.getInstance().counterInc(MetricsLabelEnum.REQUEST_TOTAL.getName()); Optional<HistogramMetricsTrackerDelegate> startTimer = MetricsTrackerFacade.getInstance().histogramStartTimer(MetricsLabelEnum.REQUEST_LATENCY.getName()); return new DefaultSoulPluginChain(plugins).execute(exchange).subscribeOn(scheduler) .doOnSuccess(t -> startTimer.ifPresent(time -> MetricsTrackerFacade.getInstance().histogramObserveDuration(time))); } \",\"handle 方法负责插件链执行指标度量的采集，通过在 DefaultSoulPluginChain 执行时加订阅实现，DefaultSoulPluginChain 在此处完成初始化。\",\"全局查找 SoulWebHandler 构造方法，定位到 SoulConfiguration 的 soulWebHandler 方法。\",\"3）SoulConfiguration 结构如下：\",\"image-20210122042354171\",\"SoulConfiguration 是 Soul 的核心配置类，负责自动装配网关所需的核心 bean 对象。\",\"如装配 SoulWebHandler：\",\"@Bean(\\\"webHandler\\\") public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { // 获取可用的插件 List<SoulPlugin> pluginList = plugins.getIfAvailable(Collections::emptyList); // 插件重排 final List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); soulPlugins.forEach(soulPlugin -> log.info(\\\"load plugin:[{}] [{}]\\\", soulPlugin.named(), soulPlugin.getClass().getName())); return new SoulWebHandler(soulPlugins); } \",\"注意此处的插件列表经过了一次重排，重排顺序参见 PluginEnum。\",\"4）初始化 SoulWebHandler\",\"soul-bootstrap 启动的过程中，所有插件是怎么形成 ObjectProvider<List<SoulPlugin>> plugins，然后初始化 SoulWebHandler 的呢？\",\"SoulWebHandler 所在的配置类通过配置 @ComponentScan(\\\"org.dromara.soul\\\")，通知 spring 扫描 org.dromara.soul 包。\",\"借助 springboot 的 starter 机制，将 spring.factories 里指定的配置类自动加载到容器。\",\"DividePluginConfiguration\",\"最后，借助 spring4.3 开始支持的 ObjectProvider，实现容器内插件 bean 的集合式注入，最终形成我们看到的插件链。\"]},\"221\":{\"h\":\"总结\",\"t\":[\"本篇从微内核架构说起，并以此为框架分析 Soul 的插件化设计，再结合源码实现，基本理清了 Soul 中插件式设计的实现。\",\"需要注意：\",\"1）由 SoulConfiguration 自动装配 SoulWebHandler，此时 SoulWebHandler 持有插件列表，但未初始化插件链。\",\"2）待调用 handle 方法处理请求时，才初始化插件链进入插件处理。\"]},\"222\":{\"h\":\"Soul网关学习divide插件源码解读\"},\"223\":{\"h\":\"插件概述\",\"t\":[\"插件定位\",\"divide 插件是一个 http 正向代理插件，所有的 http 请求都由该插件进行负载均衡处理（具体的负载均衡策略在规则中指定）。\",\"生效时机\",\"当请求头的 rpcType = http 且插件开启时，它将根据请求参数匹配规则，最终交由下游插件进行响应式代理调用。\"]},\"224\":{\"h\":\"插件处理流程\",\"t\":[\"1）先回顾下请求处理类插件的通用流程（AbstractSoulPlugin # execute）：\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { // 获取插件数据 String pluginName = named(); final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); if (pluginData != null && pluginData.getEnabled()) { // 获取选择器数据 final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); ... // 匹配选择器 final SelectorData selectorData = matchSelector(exchange, selectors); ... // 获取规则数据 final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); ... // 匹配规则 RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { //get last rule = rules.get(rules.size() - 1); } else { rule = matchRule(exchange, rules); } ... // 执行自定义处理 return doExecute(exchange, chain, selectorData, rule); } // 继续执行插件链处理 return chain.execute(exchange); } \",\"AbstractSoulPlugin 先匹配到对应的选择器和规则，匹配通过则执行插件的自定义处理。\",\"2）再来看看 divide 插件的自定义处理流程（DividePlugin # doExecute）：\",\"protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { ... // 准备规则处理对象（内部持有：负载均衡算法名、重试次数以及超时时间） final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); // 获取选择器对应的可用服务列表 final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); ... // 选择具体分发的服务实例ip（负载均衡） final String ip = Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress(); DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); ... //设置 http url、超时时间以及重试次数 String domain = buildDomain(divideUpstream); String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); exchange.getAttributes().put(Constants.HTTP_TIME_OUT, ruleHandle.getTimeout()); exchange.getAttributes().put(Constants.HTTP_RETRY, ruleHandle.getRetry()); // 继续执行插件链处理 return chain.execute(exchange); } \",\"DividePlugin 先获取到选择器对应的可用服务列表，然后进行负载均衡选择即将分发的目标服务器实例 ip，最后设置最终的 url、超时时间以及重试次数并交由插件链下游进行处理。\",\"注意：\",\"divide 插件自身只是负责根据选择器、规则和负载均衡策略选出待分发的服务器实例，并不直接向后端服务发起 http 请求。\"]},\"225\":{\"h\":\"主机探活\",\"t\":[\"上面提到，divide 需要获取服务列表，看下获取的实现（UpstreamCacheManager # findUpstreamListBySelectorId）：\",\"public List<DivideUpstream> findUpstreamListBySelectorId(final String selectorId) { return UPSTREAM_MAP_TEMP.get(selectorId); } \",\"内部通过 UPSTREAM_MAP_TEMP 获取存活服务列表。\",\"UpstreamCacheManager 内部维护了两份散列表：\",\"UPSTREAM_MAP：\",\"全量服务散列表，负责存放全量的上游服务信息，key 为 选择器 id，value 为使用相同选择器的服务列表。\",\"UPSTREAM_MAP_TEMP：\",\"临时服务散列表，负责存放活动的上游服务信息，key 为 选择器 id，value 为使用相同选择器的服务列表。\",\"前面章节我们提到，数据同步时，submit 方法同时更新了 UPSTREAM_MAP 和 UPSTREAM_MAP_TEMP，但后续服务下线如何维护 UPSTREAM_MAP_TEMP 呢，一切还得从 ip 探活说起。\"]},\"226\":{\"h\":\"3.1 探活时机\",\"t\":[\"探活时机得从 UpstreamCacheManager 初始化说起：\",\"private UpstreamCacheManager() { // 探活开关检查 boolean check = Boolean.parseBoolean(System.getProperty(\\\"soul.upstream.check\\\", \\\"false\\\")); if (check) { // 启动定时探活任务 new ScheduledThreadPoolExecutor(1, SoulThreadFactory.create(\\\"scheduled-upstream-task\\\", false)) .scheduleWithFixedDelay(this::scheduled, 30, Integer.parseInt(System.getProperty(\\\"soul.upstream.scheduledTime\\\", \\\"30\\\")), TimeUnit.SECONDS); } } \",\"UpstreamCacheManager 初始化时，若探活开关打开，则创建定时探活任务，此处默认 30 秒执行一次。\",\"此处共涉及到两个配置参数：\",\"soul.upstream.check 探活开关：默认为 ture，设置为 false 表示不检测\",\"soul.upstream.scheduledTime 探活时间间隔，默认 10 秒\"]},\"227\":{\"h\":\"3.2 探活任务\",\"t\":[\"1）接下来看看探活任务实现（UpstreamCacheManager # scheduled）：\",\"private void scheduled() { if (UPSTREAM_MAP.size() > 0) { UPSTREAM_MAP.forEach((k, v) -> { // 活动检查 List<DivideUpstream> result = check(v); if (result.size() > 0) { UPSTREAM_MAP_TEMP.put(k, result); } else { UPSTREAM_MAP_TEMP.remove(k); } }); } } \",\"任务负责逐条遍历登记全量服务散列表，检查服务活性：\",\"若存活数大于 0，则更新存活服务散列表\",\"否则，移除存活服务散列表相应内容\",\"2）继续看服务列表活性检查处理（UpstreamCacheManager # check）：\",\"private List<DivideUpstream> check(final List<DivideUpstream> upstreamList) { List<DivideUpstream> resultList = Lists.newArrayListWithCapacity(upstreamList.size()); for (DivideUpstream divideUpstream : upstreamList) { // 检查服务活性 final boolean pass = UpstreamCheckUtils.checkUrl(divideUpstream.getUpstreamUrl()); if (pass) { // 更新服务状态 if (!divideUpstream.isStatus()) { divideUpstream.setTimestamp(System.currentTimeMillis()); divideUpstream.setStatus(true); ... } // 记录存活的服务 resultList.add(divideUpstream); } else { // 更新服务状态 divideUpstream.setStatus(false); ... } } return resultList; } \",\"负责遍历服务列表，根据 url 检查各服务活性并登记存活的服务。\"]},\"228\":{\"h\":\"3.3 活性检查\",\"t\":[\"1）服务活性检查实现（UpstreamCheckUtils # checkUrl）：\",\"public static boolean checkUrl(final String url) { ... // 检查url是否为ip+端口格式 if (checkIP(url)) { // 处理 ip 和端口 String[] hostPort; if (url.startsWith(HTTP)) { final String[] http = StringUtils.split(url, \\\"\\\\\\\\/\\\\\\\\/\\\"); hostPort = StringUtils.split(http[1], Constants.COLONS); } else { hostPort = StringUtils.split(url, Constants.COLONS); } // 测试主机是否可连通 return isHostConnector(hostPort[0], Integer.parseInt(hostPort[1])); } else { // 测试主机是否可达 return isHostReachable(url); } } \",\"检查 url 是否为 ip + port 格式：\",\"若为 ip + 端口格式，则测试主机是否可连接\",\"否则，测试主机是否可达\",\"2）测试主机是否可连接（UpstreamCheckUtils # isHostConnector）：\",\"private static boolean isHostConnector(final String host, final int port) { try (Socket socket = new Socket()) { socket.connect(new InetSocketAddress(host, port)); } catch (IOException e) { return false; } return true; } \",\"通过 socket 的 connection 测试 ip 的连通性。\",\"3）测试主机是否可达（UpstreamCheckUtils # isHostReachable）：\",\"private static boolean isHostReachable(final String host) { try { return InetAddress.getByName(host).isReachable(1000); } catch (IOException ignored) { } return false; } \",\"非 ip + 端口格式 url 尝试使用域名格式测试主机是否可达。\",\"整体看下来，divide 插件从缓存里拿到的服务器信息，来源于数据同步，由探活任务定期主动更新。\"]},\"229\":{\"h\":\"负载均衡\",\"t\":[\"上面提到，divide 通过负载均衡算法挑选最终分发的服务 ip，看下负载均衡的实现（LoadBalanceUtils # selector）：\",\"public static DivideUpstream selector(final List<DivideUpstream> upstreamList, final String algorithm, final String ip) { LoadBalance loadBalance = ExtensionLoader.getExtensionLoader(LoadBalance.class).getJoin(algorithm); return loadBalance.select(upstreamList, ip); } \",\"内部使用 ExtensionLoader 实现 SPI 机制，然后通过算法名加载对应的负载均衡算法，执行负载均衡计算最终分发到的服务 ip。\",\"soul 网关里默认支持三种负载均衡策略\",\"HASH(需要计算，可能存在不均衡的情况)\",\"RANDOM(最简单最快，大量请求下几乎平均)\",\"ROUND_ROBIN(需要记录状态，有一定的影响，大数据量下随机和轮询并无太大结果上的差异)\",\"默认为 RANDOM 随机算法，算法处理如下（RandomLoadBalance # doSelect）：\",\"public DivideUpstream doSelect(final List<DivideUpstream> upstreamList, final String ip) { int totalWeight = calculateTotalWeight(upstreamList); boolean sameWeight = isAllUpStreamSameWeight(upstreamList); // 若权重不一致，则按总权重随机 if (totalWeight > 0 && !sameWeight) { return random(totalWeight, upstreamList); } // 按服务数随机 return random(upstreamList); } \",\"判断服务列表内服务的权重是否一致：\",\"若权重不一致，则按总权重随机\",\"否则，按服务数随机\",\"按总权重随机细节（RandomLoadBalance # random）：\",\"private DivideUpstream random(final int totalWeight, final List<DivideUpstream> upstreamList) { // 按总权重取随机数 int offset = RANDOM.nextInt(totalWeight); // 确定随机值落在哪个段上 for (DivideUpstream divideUpstream : upstreamList) { offset -= getWeight(divideUpstream); if (offset < 0) { return divideUpstream; } } return upstreamList.get(0); } \"]},\"230\":{\"h\":\"总结\",\"t\":[\"divide 插件处理流程：\",\"获取可用服务列表\",\"服务列表最初来自 soul-admin 数据同步\",\"可用服务列表默认每 30 秒主动探活更新\",\"负载均衡\",\"扩展加载器加载目标负载均衡算法\",\"执行具体均衡策略\",\"返回一个最终选择的服务信息\",\"设置最终服务的的 url 信息\",\"交由插件链下游进行处理\"]},\"231\":{\"h\":\"Soul网关学习Http请求探险\",\"t\":[\"在 Soul 请求处理概览概览这篇文章中，我们已经知晓了 Soul 针对于请求的处理入库在DefaultSoulPluginChain 的 excute，其中执行了一个插件链的模式来完成了请求的处理。\",\"我们大体梳理了注入到plugins的插件，但是即使这样依然不能纵观全局，对此特地对 soul 插件所涉及的类进行了相关梳理，整体梳理结果如下图。\",\"在梳理文章中可以看到核心类是SoulPlugin、PluginEnum、PluginDataHandler、MetaDataSubscriber，在梳理请求的相关文章中我们目前只需要重点关注 SoulPlugin 与 PluginEnum 类。\",\"SoulPlugin 类我们已经有了一定的理解，那 PluginEnum 枚举类的主要作用是什么呢？\",\"PluginEnum:插件的枚举类\",\"属性\",\"作用\",\"code\",\"插件的执行顺序 越小越先执行\",\"role\",\"角色 暂时未发现实际引用地址\",\"name\",\"插件名称\",\"其实我们不难发现在DefaultSoulPluginChain 的 plugins的插件都是有固定的执行顺序的，那这个插件的执行顺序是在哪定义的呢？\",\"最终可以追溯到SoulConfiguration类下\",\" public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { //省略 final List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); return new SoulWebHandler(soulPlugins); } \",\"整理整个 PluginEnum 类相关引用，整理出如下表格，不难看出插件与插件之间的顺序关系\",\"等级\",\"作用\",\"第一等级\",\"只有 GlobalPlugin 全局插件\",\"第二等级到第八等级\",\"可以理解为在请求发起前的前置处理插件\",\"第九等级到第十一等级\",\"可以理解为针对调用方的方式所针对的不同调用处理\",\"第十二等级\",\"只有 MonitorPlugin 监控插件\",\"第十三等级\",\"是针对于各个调用方返回结果处理的 Response 相关插件\",\"在刚才的回顾中我们已经明白 soul 处理请求的大体流程\",\"1.GloBalPlugin 插件 进行全局的初始化\",\"2.部分插件根据鉴权、限流、熔断等规则对请求进行处理\",\"3.选择适合自己的调用方式进行拼装参数，发起调用。\",\"4.进行监控\",\"5.对调用的结果进行处理\",\"以下演示代码截图来自于 soul-examples 下的 http demo，调用的接口地址为http://127.0.0.1:9195/http/test/findByUserId?userId=10\",\"在DefaultSoulPluginChain 的 excute方法进行埋点，查看一次 http 请求调用经过了哪些类？\",\"public Mono<Void> execute(final ServerWebExchange exchange) { return Mono.defer(() -> { if (this.index < plugins.size()) { SoulPlugin plugin = plugins.get(this.index++); Boolean skip = plugin.skip(exchange); if (skip) { System.out.println(\\\"跳过的插件为\\\"+plugin.getClass().getName().replace(\\\"org.dromara.soul.plugin.\\\",\\\"\\\")); return this.execute(exchange); } System.out.println(\\\"未跳过的插件为\\\"+plugin.getClass().getName().replace(\\\"org.dromara.soul.plugin.\\\",\\\"\\\")); return plugin.execute(exchange, this); } return Mono.empty(); }); } \",\"最终输出的未跳过的插件如下：\",\"未跳过的插件为 global.GlobalPlugin 未跳过的插件为 sign.SignPlugin 未跳过的插件为 waf.WafPlugin 未跳过的插件为 ratelimiter.RateLimiterPlugin 未跳过的插件为 hystrix.HystrixPlugin 未跳过的插件为 resilience4j.Resilience4JPlugin 未跳过的插件为 divide.DividePlugin 未跳过的插件为 httpclient.WebClientPlugin 未跳过的插件为 alibaba.dubbo.param.BodyParamPlugin 未跳过的插件为 monitor.MonitorPlugin 未跳过的插件为 httpclient.response.WebClientResponsePlugin\",\"这里有个小疑惑，为啥这个 alibaba.dubbo.param.BodyParamPlugin 插件会被执行，暂时忽略，后期跟踪。\",\"我们发现一次针对于 http 请求的网关调用 所执行的插件的大体流程与我们猜想的处理流程一致。 目前我们只挑重点来讲，即GlobalPlugin、DividePlugin、WebClientPlugin、WebClientResponsePlugin。\",\"发起 Debug 调用依次追踪上述四个插件的作用。\"]},\"232\":{\"h\":\"GlobalPlugin SoulContext 对象封装插件\",\"t\":[\"GlobalPlugin 的插件的 excute 方法如下所示\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { final ServerHttpRequest request = exchange.getRequest(); final HttpHeaders headers = request.getHeaders(); final String upgrade = headers.getFirst(\\\"Upgrade\\\"); SoulContext soulContext; if (StringUtils.isBlank(upgrade) || !\\\"websocket\\\".equals(upgrade)) { soulContext = builder.build(exchange); } else { final MultiValueMap<String, String> queryParams = request.getQueryParams(); soulContext = transformMap(queryParams); } exchange.getAttributes().put(Constants.CONTEXT, soulContext); return chain.execute(exchange); } \",\"不难看出 在 GlobalPlugin 的 excute 方法中主要目的就是封装一个SoulContext 对象，放入 exchange 中（exchange 对象是整个插件链上的共享对象，有一个插件执行完成后传递给下一个插件，本人理解的就是一个类似于 ThreadLocal 对象）。\",\"那 SoulContext 对象中又包含哪些属性呢？\",\"属性\",\"含义\",\"module\",\"每种 RPCType 针对的值不同 http 调用时指代网关调用的前置地址\",\"method\",\"切割后的方法名（在 RpcType 为 http 时）\",\"rpcType\",\"RPC 调用类型有 Http、dubbo、sofa 等\",\"httpMethod\",\"Http 调用的方式目前只支持 get、post\",\"sign\",\"鉴权的相关属性目前不知道具体作用，可能与 SignPlugin 插件有关\",\"timestamp\",\"时间戳\",\"appKey\",\"鉴权的相关属性目前不知道具体作用，可能与 SignPlugin 插件有关\",\"path\",\"路径指代调用到 soul 网关的全路径（在 RpcType 为 http 时）\",\"contextPath\",\"与 module 取值一致（在 RPCType 为 http 时）\",\"realUrl\",\"与 method 的值一致（在 RpcType 为 http 时）\",\"dubboParams\",\"dubbo 的参数？\",\"startDateTime\",\"开始时间怀疑与监控插件和统计指标模块有联用\",\"在执行完 GlobalPlugin 插件后，最终封装完成的 SoulContext 对象如下所示。\",\"其他 RPCType 的 SoulContext 的参数封装可以查看DefaultSoulContextBuilder 的 build方法进行追踪，由于本编文章主要追溯 http 调用，故在这里不在多余讨论。\"]},\"233\":{\"h\":\"DividePlugin 路由选择插件\",\"t\":[\"在执行完成 GlobalPlugin 插件后，最终封装成了一个SoulContext 对象，并将其放在了ServerWebExchange中，供下游的调用链使用。\",\"接下来让我们看一下DividePlugin 插件在整个链式调用过程中到底起了一个什么样的作用？\"]},\"234\":{\"h\":\"AbstractSoulPlugin\",\"t\":[\"通过追溯源码得知DividePlugin 插件继承于 AbstractSoulPlugin 类，而 AbstractSoulPlugin 类实现了 SoulPlugin 接口。\",\"那么AbstractSoulPlugin又做了哪些扩展呢？让我们梳理一下该类的方法。\",\"方法名\",\"作用\",\"excute\",\"实现于 SoulPlugin 接口，在 AbstractSoulPlugin 中起到一个模板方法的作用\",\"doexcute\",\"抽象方法 交由各个子类实现\",\"matchSelector\",\"匹配选择器\",\"filterSelector\",\"筛选选择器\",\"matchRule\",\"匹配规则\",\"filterRule\",\"筛选规则\",\"handleSelectorIsNull\",\"处理选择器为空情况\",\"handleRuleIsNull\",\"处理规则为空情况\",\"selectorLog\",\"选择器日志打印\",\"ruleLog\",\"规则日志打印\",\"看一下excute方法的具体作用\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { String pluginName = named(); //获取对应插件 final PluginData pluginData = BaseDataCache.getInstance().obtainPluginData(pluginName); //判断插件是否启用 if (pluginData != null && pluginData.getEnabled()) { //获取插件下的所有选择器 final Collection<SelectorData> selectors = BaseDataCache.getInstance().obtainSelectorData(pluginName); if (CollectionUtils.isEmpty(selectors)) { return handleSelectorIsNull(pluginName, exchange, chain); } //匹配选择器 final SelectorData selectorData = matchSelector(exchange, selectors); if (Objects.isNull(selectorData)) { return handleSelectorIsNull(pluginName, exchange, chain); } //打印选择器日志 selectorLog(selectorData, pluginName); final List<RuleData> rules = BaseDataCache.getInstance().obtainRuleData(selectorData.getId()); if (CollectionUtils.isEmpty(rules)) { return handleRuleIsNull(pluginName, exchange, chain); } RuleData rule; if (selectorData.getType() == SelectorTypeEnum.FULL_FLOW.getCode()) { rule = rules.get(rules.size() - 1); } else { //匹配规则 rule = matchRule(exchange, rules); } if (Objects.isNull(rule)) { return handleRu![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f523f655f0014d288b7a4502cc6a08d1~tplv-k3u1fbpfcp-watermark.image)leIsNull(pluginName, exchange, chain); } //打印规则日志 ruleLog(rule, pluginName); //执行子类具体实现 return doExecute(exchange, chain, selectorData, rule); } return chain.execute(exchange); } \",\"最终整理的流程图如下所示：\",\"ps：在上述的流程图中并没有细化到具体的方法级别的处理。\",\"但仍有几个点需要着重解释一下：\",\"1.插件数据、选择器数据、规则数据的获取全部来自于BaseDataCache，该类是数据同步过程中最终会影响的类。\",\"2.选择器的类型，在使用 SpringMvc 项目进行接口注册时，会有一个 isFull 的选项为 true 代表全局代理，在全局代理模式下只会注册一个选择器\\\\规则(指代代理所有的接口),所以这里的对应处理为 rule.size()-1.\",\"3.选择器和规则的选择，实际的处理要复杂的多，考虑到是介绍一次请求流程的大体逻辑，所以这里不展开阐述，有兴趣的可以查看MatchStrategy、AbstractMatchStrategy 及其相关实现类（后期会单独开一篇具体讲解），此处对应页面的如下：\",\"梳理一下AbstractSoulPlugin 的 exeute 方法作用，经过上述流程图的引导，我们已经知晓该方法的作用是为了选取插件--->选取选择器--->选取规则，最后交由子类的doexcute方法。\",\"接下来让我们看一下DividePlugin 的 doexcute方法具体做了哪些事。\"]},\"235\":{\"h\":\"DividePlugin\",\"t\":[\"protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; //获取规则处理数据 final DivideRuleHandle ruleHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), DivideRuleHandle.class); //获取该选择器下的注入的地址 final List<DivideUpstream> upstreamList = UpstreamCacheManager.getInstance().findUpstreamListBySelectorId(selector.getId()); if (CollectionUtils.isEmpty(upstreamList)) { log.error(\\\"divide upstream configuration error： {}\\\", rule.toString()); Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } final String ip = Objects.requireNonNull(exchange.getRequest().getRemoteAddress()).getAddress().getHostAddress(); //通过规则对应的负载均衡策略选择一个地址 DivideUpstream divideUpstream = LoadBalanceUtils.selector(upstreamList, ruleHandle.getLoadBalance(), ip); if (Objects.isNull(divideUpstream)) { log.error(\\\"divide has no upstream\\\"); Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // set the http url String domain = buildDomain(divideUpstream); //拼装真实调用地址 String realURL = buildRealURL(domain, soulContext, exchange); exchange.getAttributes().put(Constants.HTTP_URL, realURL); //设置超时时间 及重试次数 exchange.getAttributes().put(Constants.HTTP_TIME_OUT, ruleHandle.getTimeout()); exchange.getAttributes().put(Constants.HTTP_RETRY, ruleHandle.getRetry()); return chain.execute(exchange); } \",\"通过上述代码梳理完成后大体逻辑如下：\",\"1.获取选择器对应的注册地址，对应页面数据如下\",\"2.根据规则的 handle 字段获取负载均衡策略，并选择真实的调用地址（LoadBalanceUtils），重试次数和超时时间，对应页面数据如下。\",\"3.将真实调用地址，超时时间，重试次数传递到ServerWebExchange中，供下游调用链使用。 debug 演示： ps：在上述的主题逻辑中我们没有看到参数在哪里？那这个参数在哪封装的呢？答案在buildRealURL 方法中，是从exchange上下文中获取到的。\"]},\"236\":{\"h\":\"WebClientPlugin Http 请求调用插件\",\"t\":[\"接下来让我们看看 Soul 如何发起的请求调用\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; //获取真实地址 String urlPath = exchange.getAttribute(Constants.HTTP_URL); if (StringUtils.isEmpty(urlPath)) { Object error = SoulResultWrap.error(SoulResultEnum.CANNOT_FIND_URL.getCode(), SoulResultEnum.CANNOT_FIND_URL.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } //获取超时时间 long timeout = (long) Optional.ofNullable(exchange.getAttribute(Constants.HTTP_TIME_OUT)).orElse(3000L); //获取重试次数 int retryTimes = (int) Optional.ofNullable(exchange.getAttribute(Constants.HTTP_RETRY)).orElse(0); log.info(\\\"The request urlPath is {}, retryTimes is {}\\\", urlPath, retryTimes); HttpMethod method = HttpMethod.valueOf(exchange.getRequest().getMethodValue()); WebClient.RequestBodySpec requestBodySpec = webClient.method(method).uri(urlPath); return handleRequestBody(requestBodySpec, exchange, timeout, retryTimes, chain); } \",\"在 webClient 的excute方法中，主要做了三个事\",\"1.将从 Divide 插件中放入 exchange 的属性取出来，调用的真实地址、超时时间、重试次数。\",\"2.封装了一个RequestBodySpec对象（不认识这个响应式编程的东西）\",\"3.调用了一个handleRequestBody方法\",\"先认识handleRequestBody方法\",\"private Mono<Void> handleRequestBody(final WebClient.RequestBodySpec requestBodySpec, final ServerWebExchange exchange, final long timeout, final int retryTimes, final SoulPluginChain chain) { return requestBodySpec.headers(httpHeaders -> { httpHeaders.addAll(exchange.getRequest().getHeaders()); httpHeaders.remove(HttpHeaders.HOST); }) .contentType(buildMediaType(exchange)) .body(BodyInserters.fromDataBuffers(exchange.getRequest().getBody())) .exchange() //失败打印日志 .doOnError(e -> log.error(e.getMessage())) //设置超时时间 .timeout(Duration.ofMillis(timeout)) //设置请求重试实际 .retryWhen(Retry.onlyIf(x -> x.exception() instanceof ConnectTimeoutException) .retryMax(retryTimes) .backoff(Backoff.exponential(Duration.ofMillis(200), Duration.ofSeconds(20), 2, true))) //请求结束后对应的处理 .flatMap(e -> doNext(e, exchange, chain)); } \",\"在这个方法里，大体可以理解为\",\"exchange 中的请求头放到本次调用的请求头中\",\"设置 contentType\",\"设置超时时间\",\"设置失败响应\",\"设置重试的场景及重试次数\",\"最终结果的处理。 在流程中需要还需要看一个doNext 方法\",\"大体逻辑就是判断请求是否成功，将请求结果放入 exchange 中交给下游插件处理。\",\"private Mono<Void> doNext(final ClientResponse res, final ServerWebExchange exchange, final SoulPluginChain chain) { if (res.statusCode().is2xxSuccessful()) { exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.SUCCESS.getName()); } else { exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.ERROR.getName()); } exchange.getAttributes().put(Constants.CLIENT_RESPONSE_ATTR, res); return chain.execute(exchange); } \",\"ps： 虽然并不懂响应式编程，但并不影响我们阅读代码。\"]},\"237\":{\"h\":\"WebClientResponsePlugin Http 结果处理插件\",\"t\":[\"该实现的 excute 方法没有什么核心逻辑，就是判断请求状态码，根据状态码返回给前端不同的数据格式。\",\"public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { ServerHttpResponse response = exchange.getResponse(); ClientResponse clientResponse = exchange.getAttribute(Constants.CLIENT_RESPONSE_ATTR); if (Objects.isNull(clientResponse) || response.getStatusCode() == HttpStatus.BAD_GATEWAY || response.getStatusCode() == HttpStatus.INTERNAL_SERVER_ERROR) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } if (response.getStatusCode() == HttpStatus.GATEWAY_TIMEOUT) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_TIMEOUT.getCode(), SoulResultEnum.SERVICE_TIMEOUT.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } response.setStatusCode(clientResponse.statusCode()); response.getCookies().putAll(clientResponse.cookies()); response.getHeaders().putAll(clientResponse.headers().asHttpHeaders()); return response.writeWith(clientResponse.body(BodyExtractors.toDataBuffers())); })); } \",\"到此为止，一个基于 Soul 网关发起的 Http 请求调用流程大体已经结束。\",\"梳理 http 请求调用流程\",\"Global 插件封装 SoulContext 对象\",\"前置插件处理熔断限流鉴权等操作。\",\"Divide 插件选择对应调用的真实地址，重试次数，超时时间。\",\"WebClient 插件发起真实的 Http 调用\",\"WebClientResponse 插件处理对应结果，返回前台。\",\"基于 Http 调用的大体流程，我们可以大体猜测出基于别 RPC 调用的流程，就是替换发起请求的插件和返回结果处理的插件。\",\"在上文中我们还提到了路由规则的选择LoadBalanceUtils，选择器和规则的处理MatchStrategy。\",\"之后将会开启新篇章一步步揭开 RPC 泛化调用，路由选择，选择器、规则匹配的神秘面纱。\"]},\"238\":{\"h\":\"Soul网关学习RateLimiter插件原理解析\"},\"239\":{\"h\":\"回顾\",\"t\":[\"在之前的 HTTP 请求初探的文章中，大体梳理了 Soul 插件的处理流程，也得知了 DividePlugin、GlobalPlugin，WebClientPlugin，WebCilentResponsePlugin 插件的具体作用，在梳理流程中，发现 Soul 的插件是有先后顺序的，在 DividePlugin 插件之前做了很多前置插件的操作，其中包含了我们本章分析的主题RateLimiterPlugin 限流插件（其中一种）。\"]},\"240\":{\"h\":\"学习使用\"},\"241\":{\"h\":\"阅读官方文档 对其有大概认知\",\"t\":[\"rateLimiter 插件\",\"通过官方文档的阅读我们得知了RateLimiterPlugin的两个核心点速率、容量\",\"以下讲解来源于官方文档\",\"容量：是允许用户在一秒钟内执行的最大请求数。这是令牌桶可以保存的令牌数。\",\"速率：是你允许用户每秒执行多少请求，而丢弃任何请求。这是令牌桶的填充速率。\",\"可以看出RateLimiterPlugin限流核心在于令牌桶算法的实现。\",\"ps：关于限流算法常见的有四种实现令牌桶算法，漏斗算法，计数器（固定窗口）算法，滑动窗口算法，详情看对应博客介绍\"]},\"242\":{\"h\":\"初步使用\"},\"243\":{\"h\":\"启用对应插件\",\"t\":[\"在 Soul 网关系统管理-插件管理处，将状态更改为启用状态，注意此处需要填写 redis 相关配置，Soul 令牌桶基于 Redis。\",\"为什么 Soul 的令牌桶算法要基于 redis？\",\"在集群部署情况下单机的令牌桶算法无法满足集群状态下的限流功能。\"]},\"244\":{\"h\":\"添加限流选择器、规则\",\"t\":[\"在 Soul 网关插件列表处，选择 rate_limiter 处添加规则及选择器配置，不懂如何添加的可以先阅读选择器\\\\规则的匹配逻辑. 在此处添加的容量及速率都为 1 主要为了验证插件是否启用。\"]},\"245\":{\"h\":\"接口对应访问\",\"t\":[\"调用http://127.0.0.1:9195/http/test/findByUserId?userId=10 进行访问，速率高于 1 的情况下出现如下接口返回结果，代表插件成功使用。\",\"{ \\\"code\\\": 429, \\\"message\\\": \\\"You have been restricted, please try again later!\\\", \\\"data\\\": null } \"]},\"246\":{\"h\":\"源码阅读 带着问题读源码\"},\"247\":{\"h\":\"如何保证在页面修改 redis 配置后立即生效的，后台对应的 redis 连接立马变更的。\",\"t\":[\"答案自然数据同步脱不了干系。\",\"在修改插件的配置时，也发布了一个插件数据变更的事件通知，在之前梳理Soul 网关同步数据整体流程时,已经得知修改的插件数据除了更改了 JVM 缓存内的数据外，还对对应的插件进行下发操作，如下图 而针对于RateLimiterPlugin而言，其主要实现了handlePlugin的接口，那这个对应的实现到底做了哪些事呢？\",\"具体的方法为RateLimiterPluginDataHandler 的 handlerPlugin。\",\"public void handlerPlugin(final PluginData pluginData) { if (Objects.nonNull(pluginData) && pluginData.getEnabled()) { //加载限流插件配置 RateLimiterConfig rateLimiterConfig = GsonUtils.getInstance().fromJson(pluginData.getConfig(), RateLimiterConfig.class); //判断是否需要重新加载redis连接值 if (Objects.isNull(Singleton.INST.get(ReactiveRedisTemplate.class)) || Objects.isNull(Singleton.INST.get(RateLimiterConfig.class)) || !rateLimiterConfig.equals(Singleton.INST.get(RateLimiterConfig.class))) { LettuceConnectionFactory lettuceConnectionFactory = createLettuceConnectionFactory(rateLimiterConfig); lettuceConnectionFactory.afterPropertiesSet(); RedisSerializer<String> serializer = new StringRedisSerializer(); RedisSerializationContext<String, String> serializationContext = RedisSerializationContext.<String, String>newSerializationContext().key(serializer).value(serializer).hashKey(serializer).hashValue(serializer).build(); ReactiveRedisTemplate<String, String> reactiveRedisTemplate = new ReactiveRedisTemplate<>(lettuceConnectionFactory, serializationContext); Singleton.INST.single(ReactiveRedisTemplate.class, reactiveRedisTemplate); Singleton.INST.single(RateLimiterConfig.class, rateLimiterConfig); } } } \",\"上述代码有几个较为关键的点：\",\"在上述代码中将限流插件的配置和对应的 redisTemplate 实例放入了 Singleton.INST 对应 map 中。\",\"在插件数据过来时，判断是否存在 redis 连接实例，是否存在限流配置实例，判断当前的限流配置实例是否和传递的限流实例一致，不一致就认为配置是有更改的，就重新初始化限流实例和连接池实例放入 Singleton.INST 的 map 中，由此而言就保证了更改 redis 配置的热部署。\",\"if 判断中的代码就是基于 SpringDataRedis 封装成一个对应 redis 连接池。\",\"ps：Singleton.INST 是枚举实现的单例模式。\"]},\"248\":{\"h\":\"限流插件是底层是如何实现的呢？\"},\"249\":{\"h\":\"Debug 调用链\",\"t\":[\"RateLimiterPlugin由于需要对特定规则进行限流，所以依旧实现了AbstractSoulPlugin，之前依旧梳理过AbstractSoulPlugin 的 excute的方法和作用了，所以这里不重复解释，可观看Http 调用流程梳理，加深对该类的印象。\",\"本节重点还是看具体的doexcute方法做了哪些事。\",\" protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final String handle = rule.getHandle(); final RateLimiterHandle limiterHandle = GsonUtils.getInstance().fromJson(handle, RateLimiterHandle.class); return redisRateLimiter.isAllowed(rule.getId(), limiterHandle.getReplenishRate(), limiterHandle.getBurstCapacity()) .flatMap(response -> { if (!response.isAllowed()) { //返回的错误信息 429错误编码 exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); Object error = SoulResultWrap.error(SoulResultEnum.TOO_MANY_REQUESTS.getCode(), SoulResultEnum.TOO_MANY_REQUESTS.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } return chain.execute(exchange); }); } \",\"在上述代码中可以看出是通过redisRateLimiter.isAllowed来判断是否获取令牌成功的。 该方法如下\",\" public Mono<RateLimiterResponse> isAllowed(final String id, final double replenishRate, final double burstCapacity) { if (!this.initialized.get()) { throw new IllegalStateException(\\\"RedisRateLimiter is not initialized\\\"); } //获取redis Key List<String> keys = getKeys(id); //封装lua脚本执行所需的参数 第一位是速率 第二位是容量 第三位是当前时间戳10位 第四位固定参数值1 代表申请的令牌数 List<String> scriptArgs = Arrays.asList(replenishRate + \\\"\\\", burstCapacity + \\\"\\\", Instant.now().getEpochSecond() + \\\"\\\", \\\"1\\\"); //执行lua脚本 Flux<List<Long>> resultFlux = Singleton.INST.get(ReactiveRedisTemplate.class).execute(this.script, keys, scriptArgs); return resultFlux.onErrorResume(throwable -> Flux.just(Arrays.asList(1L, -1L))) .reduce(new ArrayList<Long>(), (longs, l) -> { longs.addAll(l); return longs; }).map(results -> { //allowed 代表执行的结果 为1 代表执行成功 boolean allowed = results.get(0) == 1L; Long tokensLeft = results.get(1); RateLimiterResponse rateLimiterResponse = new RateLimiterResponse(allowed, tokensLeft); log.info(\\\"RateLimiter response:{}\\\", rateLimiterResponse.toString()); return rateLimiterResponse; }).doOnError(throwable -> log.error(\\\"Error determining if user allowed from redis:{}\\\", throwable.getMessage())); } \"]},\"250\":{\"h\":\"方法 getKeys(id)\",\"t\":[\"该方法是获取 redis 需要操作的 key，一共获取了两个类型的 Key，格式如下:\",\"中间那位特别长的数字是规则 ID，因为限流的最小粒度是规则。\",\"第一个 timestamp 记录的是上一次调用的时间戳\",\"第二个 tokens 记录的是上一次调用完成后剩余的令牌数量\"]},\"251\":{\"h\":\"execute(this.script, keys, scriptArgs）\",\"t\":[\"执行 lua 脚本 keys 传递的是 getKeys(id)返回值，scriptArgs 传递的是所需的参数\",\"通过阅读上述代码已经知晓 限流规则的具体实现是交给特定的 lua 脚本的。\",\"ps：这里需要提醒一下限流算法是令牌桶算法，令牌桶算法一共有两种大体实现，一种是有个线程不断生成令牌，当请求进来时，先从对应的队列中获取令牌，但这种令牌生成方式在设定阈值特别大时，会非常消耗性能，所以有了第二种令牌桶算法，在获取令牌时实时计算令牌数量，而 soul 就是基于第二种实现的。\"]},\"252\":{\"h\":\"Lua 限流算法分析\",\"t\":[\"-- 当前规则令牌剩余数量存储key local tokens_key = KEYS[1] -- 当前规则上次调用时间 local timestamp_key = KEYS[2] -- 速率 local rate = tonumber(ARGV[1]) -- 容量 local capacity = tonumber(ARGV[2]) -- 时间戳 local now = tonumber(ARGV[3]) -- 值为1 local requested = tonumber(ARGV[4]) -- 容量除以速率 计算填充时间 local fill_time = capacity/rate -- 计算过期时间 取下限 local ttl = math.floor(fill_time*2) -- 获取当前存有的令牌数 local last_tokens = tonumber(redis.call(\\\"get\\\", tokens_key)) if last_tokens == nil then -- 将令牌数量赋值为设定的容量 last_tokens = capacity end -- 获取上一次调用时间 local last_refreshed = tonumber(redis.call(\\\"get\\\", timestamp_key)) if last_refreshed == nil then last_refreshed = 0 end -- 计算出上次调用和本次调用之间的时间差 local delta = math.max(0, now-last_refreshed) -- 计算出当前剩余的令牌数量 local filled_tokens = math.min(capacity, last_tokens+(delta*rate)) -- 判断当前令牌数量 数量>=1 代表获取成功 local allowed = filled_tokens >= requested local new_tokens = filled_tokens local allowed_num = 0 if allowed then -- 申请一个令牌 new_tokens = filled_tokens - requested allowed_num = 1 end -- setex 设置过期key 过期时间 新值 redis.call(\\\"setex\\\", tokens_key, ttl, new_tokens) redis.call(\\\"setex\\\", timestamp_key, ttl, now) return { allowed_num, new_tokens } \",\"推荐先了解一下 luaKEYS ARGS的作用redis lua 中 keys[1] 和 argv[1] 的理解.\",\"Lua 代码整体逻辑还是非常明朗的，在这里细讲也讲不出个啥来，代码注释已经打全了。\",\"本人在这里疑惑的有两点\",\"ttl参数的计算 乘 2 的目的是为了怕不是整数？，所以进行的*2 取最小操作?\",\"filled_tokens参数的计算 核心代码 last_tokens+(delta*rate)，其中 delta 参数是两个十位时间戳相减得来 ，但是 rate 是按秒来生成的，难道不应该是 last_tokens+((delta/1000)*rate)吗？\"]},\"253\":{\"h\":\"Soul网关学习Redirect插件原理解析\",\"t\":[\"Soul 网关在对目标服务进行代理调用的时候，可以使用 redirect 插件来重定向请求。其中包含两种场景：一种把 redirectUrl 配置为第三方 URL 地址，直接使用 308 进行转发跳转，另一种是把 redirectUrl 配置以 / 开头的转发到网关自身。\"]},\"254\":{\"h\":\"插件配置\",\"t\":[\"在 soul-admin –> 插件管理 –> redirect，设置为开启。\",\"在 soul-bootstrap 项目的 pom.xml 文件中添加 redirect 的 maven 依赖。\",\"在 soul- admin 后台设置选择器规则，只有匹配的请求，才会进行转发和重定向，请详细看：选择器规则。\"]},\"255\":{\"h\":\"Maven 依赖\",\"t\":[\"在 soul-bootstrap 工程的 pom.xml 文件中添加插件依赖。\",\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-redirect</artifactId> <version>${last.version}</version> </dependency> \"]},\"256\":{\"h\":\"场景\",\"t\":[\"顾名思义，redirect 插件就是对 uri 的重新转发和重定向。\"]},\"257\":{\"h\":\"重定向\",\"t\":[\"我们在 Rule 配置自定义路径时，应该为一个可达的服务路径。\",\"当匹配到请求后，根据自定义的路径，Soul 网关会进行 308 服务跳转。\",\"重定向配置\"]},\"258\":{\"h\":\"网关自身接口转发\",\"t\":[\"当满足匹配规则时，服务内部会使用 DispatcherHandler 内部接口转发。\",\"要实现网关自身接口转发，我们需要在配置路径使用 / 作为前缀开始，具体配置如下图。\",\"自身接口转发\"]},\"259\":{\"h\":\"源码解析\",\"t\":[\"在解析 redirect 重定向源码之前，有必要说一些大前提，我们明白 Soul 网关基于 SpringBoot WebFlux 实现，其中对于 WebFlux 如果默认什么都不配置，请求会默认执行 DispatcherHandler 处理，这个是响应式 MVC 的处理核心，可以看一下初始化：\",\"protected void initStrategies(ApplicationContext context) { Map<String, HandlerMapping> mappingBeans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerMapping.class, true, false); ArrayList<HandlerMapping> mappings = new ArrayList(mappingBeans.values()); AnnotationAwareOrderComparator.sort(mappings); // handlerMapping 相关 this.handlerMappings = Collections.unmodifiableList(mappings); Map<String, HandlerAdapter> adapterBeans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerAdapter.class, true, false); // handlerAdapter 相关 this.handlerAdapters = new ArrayList(adapterBeans.values()); AnnotationAwareOrderComparator.sort(this.handlerAdapters); Map<String, HandlerResultHandler> beans = BeanFactoryUtils.beansOfTypeIncludingAncestors(context, HandlerResultHandler.class, true, false); // resultHandler 相关 this.resultHandlers = new ArrayList(beans.values()); AnnotationAwareOrderComparator.sort(this.resultHandlers); } \",\"再之后就是我们熟悉的 MVC 核心处理 DispatcherHandler#handle 方法\",\"public Mono<Void> handle(ServerWebExchange exchange) { return this.handlerMappings == null ? this.createNotFoundError() : Flux.fromIterable(this.handlerMappings).concatMap((mapping) -> { return mapping.getHandler(exchange); }).next().switchIfEmpty(this.createNotFoundError()).flatMap((handler) -> { return this.invokeHandler(exchange, handler); }).flatMap((result) -> { return this.handleResult(exchange, result); }); } \",\"搞清楚默认 DispatcherHandler 如何处理，我们再来说一下 Soul 网关，SoulWebHandler 实现了 WebHandler 接口，再把 BeanName 声明为 webHandler 替代了之前 DispatcherHandler 注册成默认处理 handler。\",\"@Bean(\\\"webHandler\\\") public SoulWebHandler soulWebHandler(final ObjectProvider<List<SoulPlugin>> plugins) { List<SoulPlugin> pluginList = plugins.getIfAvailable(Collections::emptyList); List<SoulPlugin> soulPlugins = pluginList.stream() .sorted(Comparator.comparingInt(SoulPlugin::getOrder)).collect(Collectors.toList()); soulPlugins.forEach(soulPlugin -> log.info(\\\"load plugin:[{}] [{}]\\\", soulPlugin.named(), soulPlugin.getClass().getName())); return new SoulWebHandler(soulPlugins); } \",\"到此为止我们明白了，默认请求都通过了 SoulWebHandler#handle 处理，如果我们需要转发到网关自身的 MVC 如何做呢？下面通过初始化RedirectPlugin 的时候把 DispatcherHandler 注入，根据具体请求再由 DispatcherHandler 分发，具体核心代码如下：\",\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final String handle = rule.getHandle(); final RedirectHandle redirectHandle = GsonUtils.getInstance().fromJson(handle, RedirectHandle.class); if (Objects.isNull(redirectHandle) || StringUtils.isBlank(redirectHandle.getRedirectURI())) { log.error(\\\"uri redirect rule can not configuration: {}\\\", handle); return chain.execute(exchange); } // 处理以 / 开头自身转发 if (redirectHandle.getRedirectURI().startsWith(ROOT_PATH_PREFIX)) { ServerHttpRequest request = exchange.getRequest().mutate() .uri(Objects.requireNonNull(UriUtils.createUri(redirectHandle.getRedirectURI()))).build(); ServerWebExchange mutated = exchange.mutate().request(request).build(); return dispatcherHandler.handle(mutated); } else { // 否则就 308 跳转 ServerHttpResponse response = exchange.getResponse(); response.setStatusCode(HttpStatus.PERMANENT_REDIRECT); response.getHeaders().add(HttpHeaders.LOCATION, redirectHandle.getRedirectURI()); return response.setComplete(); } } \"]},\"260\":{\"h\":\"参考链接：\",\"t\":[\"Spring WebFlux 的设计及工作原理剖析\",\"Spring WebFlux 工作原理\"]},\"261\":{\"h\":\"Soul网关学习Sentinel插件原理解析\",\"t\":[\"在业务网关中熔断和流量控制都是非常必要的功能。soul 在实现这部分功能时使用了不同的成熟组件，用户可以根据自己的喜好选择。本文将介绍如何在 soul 中使用阿里的 Sentinel 组件实现熔断及流控功能。本文首先会介绍熔断和流控的场景及意义。然后介绍如何在 soul 上配置使用 sentinel 插件做流控和熔断。最后从源码的层面简略分析 soul 是如何使用 Sentinel 组件的。\"]},\"262\":{\"h\":\"场景描述\",\"t\":[\"业务网关作为流量的入口，有保护后继服务的职责。以下两个对服务有严重危害的场景在生产中经常会遇到，也是业务网关必须要关注处理的问题。一种情况是在比如双 11 或双 12 这些大型促销时，接口的请求量是平时是数倍，如果没有评估好容量，这种激增的请求很容易导致整个服务完全不可用。这种宕机往往不是因为业务逻辑的漏洞而是因为请求过多资源不够导致的。另一种情况是在整个服务体系中有一些核心服务，多个业务流程都依赖该服务。然而是服务都有出现处理不稳定或者服务损坏的情况，导致请求处理时间长或者老是频繁抛出异常。排除业务 BUG 的情况，可能就是突发的非常随机的阻塞，一般减缓请求量就会自动修复，但是如果不加保护就有出现多米诺效应导致整个服务不可用。此场景和第一种场景有略微不同，第一种场景是实际流量确实出现了不可处理的峰值，而第二种场景主要考虑的是服务本身出现了不可避免、不可预测的抖动而引发的连锁反应。\"]},\"263\":{\"h\":\"流量控制\",\"t\":[\"针对第一种场景我们通常的做法是进行流量控制，核心思路是业务网关保证打到后面的请求是业务可以承受的量，多余的请求直接拒绝或者加入等待队列，保证服务不会宕掉，大部分请求还是可以正常处理。在考虑流量控制的策略时，我们应该主要思考以下几个问题：\",\"通过什么角度控制流量？\",\"阈值是多少？\",\"流量控制的策略是什么？\",\"对于第一个问题，正常思路是通过 QPS 来监控流量，即每秒钟请求的数量超过某限额时进行流控。但其实还有一种思路是从并发数来监控流量。这种控制场景也是非常有意义的，例如当下游应用由于某种原因导致服务不稳定、响应延迟增加，对于网关来说，意味着吞吐量下降和更多的线程数占用，极端情况下甚至导致线程池耗尽。从某种意义上讲通过并发进行流控可以一定程度上保护网关服务本身。对于第二个问题阈值来说比较好理解，就是触发流控的边界，如果从 QPS 来考虑就是每秒达到多少时开始流控，从并发数来考量的话就是请求上下文的线程数目超过多少进行流控。对于第三个问题，我们一般有以下 3 中处理方案：\",\"直接拒绝，这种策略非常好理解就是当 QPS 高于阈值时直接拒接服务，不把请求传输到后面的服务中。\",\"预热启动，这个策略所针对的场景是系统长期处于低水位的情况下，可能出现流量突然增加时，而直接把系统拉升到高水位可能瞬间把系统压垮。预热启动的方式是让阈值缓慢增加，在一定时间内逐渐增加阈值直至达到设置，给冷系统一个预热的时间，避免冷系统被压垮。对于超出阈值的请求也是触发拒绝。\",\"匀速排队，此策略核心思路是以固定间隔时间让请求通过。当请求到来的时候，如果当前请求距离上个通过的请求通过的时间间隔不小于预设值，则让当前请求通过；否则，计算当前请求的预期通过时间，如果该请求的预期通过时间小于规则预设的 timeout 时间，则该请求会等待直到预设时间到来通过（排队等待处理）；若预期的通过时间超出最大排队时长，则直接拒接这个请求。\"]},\"264\":{\"h\":\"熔断\",\"t\":[\"针对第二种场景通常的处理方式是设置服务熔断。简单的说就是当我们探测的一个服务出现了异常，则不再访问它以免更多的请求对它造成更大的压力。一段时间后如果探测到服务恢复了再将流量发送过去。我们首先需要判断出这个服务是否出现了不稳定\\\\抖动的情况。然后思考如果发现了抖动的服务我们应该怎么办。如何判断服务是否恢复正常了。对于服务是否不稳定这一点我们一般可以通过一下 3 个方式进行判断。\",\"慢调用比例：当单位统计时长内请求数目大于设置的最小请求数目，并且超过最大忍受时间的请求大于阈值，则判断服务异常，触发熔断；\",\"异常比例：当单位统计时长内异常请求的比例大于阈值则我们判定服务异常，触发熔断；\",\"异常数：当单位时长内出现异常的请求的数量的达到阈值则判定服务异常，触发熔断；\",\"当我们通过以上 3 个指标判断服务为异常并熔断服务后，对于一定时间内（熔断时长内）的请求我们可以选择直接报错，不阻塞上游服务，让请求方来自行决定如何处理。或者直接触发服务降级。服务降级粗略的可以理解为请求此业务的简版，该简版省掉了很多非核心流程，并且只是最终保证流程处理完（最终一致性）。和现实中的熔断一样服务熔断是会自动恢复的。一般是触发熔断后的一段时间内服务处于熔断状态不提供服务，然后进入半开状态，若接下来的少量请求没有报错且响应时间合理则服务恢复，如果还是异常则继续熔断。\",\"Sentinel 是阿里开源的面向分布式服务架构的流量控制组件，主要以流量为切入点，从流量控制、熔断降级、系统自适应保护等多个维度来帮助您保障微服务的稳定性。Soul 作为国内优秀的开源网关，将 Sentinel 整合为插件融入了自己的体系中，使用户通过简单的配置就可以使用 Sentinel 提供的流量控制和服务熔断功能。下面将简要介绍在 soul 中如何配置使用 sentinel 插件。\",\"首先登陆 soul 管理平台在\\\"插件列表\\\" --> \\\"sentinel\\\"中配置插件。其中\\\"选择器\\\"的配置不是本文的重点不再介绍，点击\\\"增加规则\\\"来进行具体设置如下图。\",\"在这个配置页面中\\\"名称\\\"、\\\"匹配方式\\\"、\\\"条件\\\"、\\\"日志打印\\\"、\\\"是否开启\\\"、\\\"执行顺序\\\"属于 soul 插件的常规配置这里也不再赘述。我们重点需要关注的是\\\"处理\\\"中的配置项。这些配置项主要可以分为 2 组，前 4 个选项是关于熔断的配置，后 4 个选项是关于流量控制的配置。在 soul 中我们可以针对某一组请求同时设置它的流量控制和熔断策略。下面来重点分析下各个配置项如何使用。\"]},\"265\":{\"h\":\"熔断\",\"t\":[\"首先来看熔断相关的配置，它有四个配置项\\\"熔断阈值\\\"、\\\"是否开启熔断\\\"、\\\"熔断窗口大小\\\"以及没有注名字的是服务异常判断方式。熔断开关表示是否开启熔断（1 开\\\\0 不开）。熔断窗口大小指的是触发熔断后经过多少秒后进入半开状态，在半开状态如果请求正常则会进入正常状态如果请求依然不正常则继续熔断。熔断判定方式和熔断阈值需要结合来看。soul 中使用了 sentinel 的 3 种服务异常判定方式。分别是：\",\"慢调用比例，在此模式下阈值指的是判定为慢调用的毫秒数。慢调用的比例默认是 1 不能更改即单位统计时长内全部超过阈值则触发熔断。该模式是 sentinel 的默认模式。\",\"异常比例，在此模式下阈值指的是单位统计时长内异常请求的比例上限，需要填写 1 个[0.0, 1.0]的数，表示 0%-100%\",\"异常数策略，在该模式下阈值指的是单位统计时间内异常请求个数的上限。\",\"需要注意的是 soul 对于单位统计时长（statIntervalMs）和熔断最小请求数（minRequestAmount）使用的是 sentinel 的默认参数。分别是 1 秒钟和 5 次。单位时长指定的是异常判断以是 1 秒钟为统计范围，下一秒重新开始计数。最小请求数指的是 1 秒钟内如果请求的次数少于 5 那么即使达到阈值也不会触发熔断。\",\"如上图配置表示的意思是，开启熔断配置，如果此服务在 1 秒钟内有 5 个请求都出现了异常那么则熔断 10 秒，10 秒后进入如半开状态，如果请求都正常则变为正常状态，如果还不正常则继续熔断。熔断期间如果请求该服务则 soul 网关会直接返回请求错误，保护后端服务不会再接到请求。\"]},\"266\":{\"h\":\"流量控制\",\"t\":[\"流量控制的相关配置有 5 个，从上到下从左到右分别是\\\"流控效果\\\"，\\\"限流阈值\\\"，\\\"流控开关\\\"，\\\"限流阈值类型\\\"。首先是限流类型，我们可以选择\\\"QPS\\\"或\\\"并发线程数\\\"，这个参数规定了我们从哪个角度来设置限流的阈值。阈值则是 QPS 的上限或者是线程数量，达到此阈值则会启动限流策略。具体的限流策略在\\\"流控效果\\\"中配置，流控策略里我们可以选择\\\"直接拒绝\\\"、\\\"warm up（预热）\\\"、\\\"匀速排队\\\"、\\\"预热+匀速排队\\\"。直接拒绝比较好理解，就是 QPS 或线程数达到阈值后，多余的请求直接报错返回。预热指的是在 10 秒钟内阈值逐步增长到指定阈值，即头 2-3 秒的阈值是低于设置阈值的，但阈值是逐步增长的，10 秒后达到指定阈值，这样可以使系统有个预热过程。超过阈值的请求 soul 网关会直接报错返回。匀速队列这种模式会严格控制每个请求的时间间隔，如果流控类型是 QPS 阈值是 10，那么 soul 会控制每 100ms 将 1 个请求传导到后端服务上。多余的请求首先会进入等待队列，每个请求最多等待 500ms，如果请求预计等待时间超过 500ms 则直接报错返回。需要注意的是如果限流类型是并发线程数，那么流控效果只能是\\\"直接拒绝\\\"。如下图所示该配置表示的是 soul 网关会保证该服务的 QPS 不超过 10，多余的请求将会直接报错。\",\"需要注意的是 Sentinel 组件独立运行于 soul 的每个网关中，如果网关是集群，那么在做流控时，实际传到后面服务中的量是需要乘上 soul 网关服务的数量的。即如果我们的 soul 网关部署了 3 个节点，通过 nginx 将所有请求平均负载到了每个节点上。对应 1 个接口我们配置的流控是 10 qps，那么实际后向服务需要处理的 QPS 是 10*3。熔断同样需要考虑这种情况，只有 3 个节点上某个服务都触发熔断时，那么该服务才不会再收到任何请求。\",\"soul 中 Sentinel 插件的源码主要有 3 块，\\\"SentinelRuleHandle\\\"负责处理当有 Sentinel 规则从管理节点同步过来时的处理逻辑，\\\"SentinelPlugin\\\"插件的处理逻辑，\\\"SentinelFallbackHandler\\\"对于触发了流控或熔断的处理逻辑。下面我一个个来看一下。首先是\\\"SentinelRuleHandle\\\"，源码如下：\",\"public class SentinelRuleHandle implements PluginDataHandler { @Override public void handlerRule(final RuleData ruleData) { // 处理新的sentinel配置 SentinelHandle sentinelHandle = GsonUtils.getInstance().fromJson(ruleData.getHandle(), SentinelHandle.class); sentinelHandle.checkData(sentinelHandle); // 获取所有现有流控配置，删除与新配置同resourceName的配置 List<FlowRule> flowRules = FlowRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList()); if (sentinelHandle.getFlowRuleEnable() == Constants.SENTINEL_ENABLE_FLOW_RULE) { // 如果开启了流控 // 根据配置设置sentinel流控规则 FlowRule rule = new FlowRule(getResourceName(ruleData)); // 配置阈值 rule.setCount(sentinelHandle.getFlowRuleCount()); // 流控方式 QPS or 线程 rule.setGrade(sentinelHandle.getFlowRuleGrade()); // 流控行为: 0. default(reject directly), 1. warm up, 2. rate limiter, 3. warm up + rate limiter rule.setControlBehavior(sentinelHandle.getFlowRuleControlBehavior()); flowRules.add(rule); } // 更新全部流控配置 FlowRuleManager.loadRules(flowRules); // 获取所有现有熔断配置，删除与新配置同resourceName的配置 List<DegradeRule> degradeRules = DegradeRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList()); if (sentinelHandle.getDegradeRuleEnable() == Constants.SENTINEL_ENABLE_DEGRADE_RULE) { // 如果开启了流控 // 根据配置设置sentinel熔断规则 DegradeRule rule = new DegradeRule(getResourceName(ruleData)); // 熔断阈值 rule.setCount(sentinelHandle.getDegradeRuleCount()); // 熔断判断的依据 0: average RT, 1: exception ratio, 2: exception count rule.setGrade(sentinelHandle.getDegradeRuleGrade()); // 熔断时间窗口 rule.setTimeWindow(sentinelHandle.getDegradeRuleTimeWindow()); degradeRules.add(rule); } // 更新全部熔断配置 DegradeRuleManager.loadRules(degradeRules); } @Override public void removeRule(final RuleData ruleData) { // 删除指定规则 FlowRuleManager.loadRules(FlowRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList())); DegradeRuleManager.loadRules(DegradeRuleManager.getRules() .stream() .filter(r -> !r.getResource().equals(getResourceName(ruleData))) .collect(Collectors.toList())); } @Override public String pluginNamed() { return PluginEnum.SENTINEL.getName(); } /** * return sentinel resource name. * * @param ruleData ruleData * @return string string */ public static String getResourceName(final RuleData ruleData) { return ruleData.getSelectorId() + \\\"_\\\" + ruleData.getName(); } } \",\"插件执行逻辑代码\\\"SentinelPlugin\\\"如下\",\"public class SentinelPlugin extends AbstractSoulPlugin { // 异常处理的handler private final SentinelFallbackHandler sentinelFallbackHandler; public SentinelPlugin(final SentinelFallbackHandler sentinelFallbackHandler) { this.sentinelFallbackHandler = sentinelFallbackHandler; } @Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // 从插件配置中生成sentinel使用的资源名称，该名称对应1个流控或熔断策略 String resourceName = SentinelRuleHandle.getResourceName(rule); // 验证sentinel插件的配置信息 SentinelHandle sentinelHandle = GsonUtils.getInstance().fromJson(rule.getHandle(), SentinelHandle.class); sentinelHandle.checkData(sentinelHandle); // 引入sentinel官方的Transformer，将请求交给sentinel处理 return chain.execute(exchange).transform(new SentinelReactorTransformer<>(resourceName)) .doOnSuccess(v -> { HttpStatus status = exchange.getResponse().getStatusCode(); if (status == null || !status.is2xxSuccessful()) { exchange.getResponse().setStatusCode(null); throw new SentinelFallbackException(status == null ? HttpStatus.INTERNAL_SERVER_ERROR : status); } }) //sentinel 触发了流控或熔断而报错调用sentinelFallbackHandler返回错误信息 .onErrorResume(throwable -> sentinelFallbackHandler.fallback(exchange, UriUtils.createUri(sentinelHandle.getFallbackUri()), throwable)); } // 插件名sentinel @Override public String named() { return PluginEnum.SENTINEL.getName(); } // 顺序 45 @Override public int getOrder() { return PluginEnum.SENTINEL.getCode(); } public static class SentinelFallbackException extends HttpStatusCodeException { public SentinelFallbackException(final HttpStatus statusCode) { super(statusCode); } } } \",\"异常处理\\\"SentinelFallbackHandler\\\"，在 soul 中不管是熔断后请求的处理还是被流控的请求，都是有 soul 直接返回报错\",\"public class SentinelFallbackHandler implements FallbackHandler { @Override public Mono<Void> generateError(final ServerWebExchange exchange, final Throwable throwable) { Object error; if (throwable instanceof DegradeException) { // 触发熔断 // http status 设为500 exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); // request body 设置 error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); } else if (throwable instanceof FlowException) { // 流控报错 该错提示客户端再次尝试 // http status 设为429 exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); // request body 设置 error = SoulResultWrap.error(SoulResultEnum.TOO_MANY_REQUESTS.getCode(), SoulResultEnum.TOO_MANY_REQUESTS.getMsg(), null); } else if (throwable instanceof BlockException) { // FlowException的父类 该错提示服务已阻塞 // http status 设为429 exchange.getResponse().setStatusCode(HttpStatus.TOO_MANY_REQUESTS); // request body 设置 error = SoulResultWrap.error(SoulResultEnum.SENTINEL_BLOCK_ERROR.getCode(), SoulResultEnum.SENTINEL_BLOCK_ERROR.getMsg(), null); } else { return Mono.error(throwable); } return WebFluxResultUtils.result(exchange, error); } } \",\"soul 网关封装了优秀的流控组件——sentinel，为用户提供了好用的流量控制和熔断功能。需要注意的是 soul 在使用 sentinel 时部分参数是默认配置，如果有修改的需求则需要自行调整源码。其次 soul 网关可以分布式部署，但是使用 sentinel 时并没有用分布式流控，每个 soul 网关节点对于同一个资源的流控是独立但相同的。\"]},\"267\":{\"h\":\"Soul网关学习Resilience4j插件原理解析\"},\"268\":{\"h\":\"目标\",\"t\":[\"什么是 Resilience4J\",\"soul 的 Resilience4j 体验 \",\"限流\",\"熔断\",\"Resilience4J 插件源码解读\"]},\"269\":{\"h\":\"什么是 Resilience4j\",\"t\":[\"Resilience4J 是 Spring Cloud Gateway 推荐的容错方案，它是一个轻量级的容错库\",\"借鉴了 Hystrix 而设计，并且采用 JDK8 这个函数式编程，即 lambda 表达式\",\"相比之下， Netflix Hystrix 对 Archaius 具有编译依赖性，Resilience4j 你无需引用全部依赖，可以根据自己需要的功能引用相关的模块即可 Hystrix 不更新了，Spring 提供 Netflix Hystrix 的替换方案，即 Resilence4J\",\"Resilience4J 提供了一系列增强微服务的可用性功能：\",\"断路器 CircuitBreaker\",\"限流 RateLimiter\",\"基于信号量的隔离\",\"缓存\",\"限时 Timelimiter\",\"请求重启 Retry\",\"官方提供的依赖包\",\" <dependency> <groupId>io.github.resilience4j</groupId> <artifactId>resilience4j-circuitbreaker</artifactId> <version>${resilience.version}</version> </dependency> \"]},\"270\":{\"h\":\"soul 的 Resilience4j 体验\",\"t\":[\"首先在 soul-admin 控制台插件管理开启 Resilience4j\",\"在 soul 网关添加依赖\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-ratelimiter</artifactId> <version>${project.version}</version> </dependency> \",\"启动三个服务,分别是一个 soul-admin，一个 soul-bootstrap，一个 soul-examples-http\",\"在 soul-admin 控制台找到插件列表的 Resilience4j，自定义配置，如下图，\",\"soul 官网的配置介绍\",\"* Resilience4j处理详解： * timeoutDurationRate：等待获取令牌的超时时间，单位ms，默认值：5000。 * limitRefreshPeriod：刷新令牌的时间间隔，单位ms，默认值：500。 * limitForPeriod：每次刷新令牌的数量，默认值：50。 * circuitEnable：是否开启熔断，0：关闭，1：开启，默认值：0。 * timeoutDuration：熔断超时时间，单位ms，默认值：30000。 * fallbackUri：降级处理的uri。 * slidingWindowSize：滑动窗口大小，默认值：100。 * slidingWindowType：滑动窗口类型，0：基于计数，1：基于时间，默认值：0。 * minimumNumberOfCalls：开启熔断的最小请求数，超过这个请求数才开启熔断统计，默认值：100。 * waitIntervalFunctionInOpenState：熔断器开启持续时间，单位ms，默认值：10。 * permittedNumberOfCallsInHalfOpenState：半开状态下的环形缓冲区大小，必须达到此数量才会计算失败率，默认值：10。 * failureRateThreshold：错误率百分比，达到这个阈值，熔断器才会开启，默认值50。 * automaticTransitionFromOpenToHalfOpenEnabled：是否自动从open状态转换为half-open状态，,true：是，false：否，默认值：false。 \"]},\"271\":{\"h\":\"限流\",\"t\":[\"参数配置 如下是参数配置校验，参数值小于默认值，会直接赋值默认值，因此方便测试效果直接修改源码的配置 ： 每次刷新令牌的数量为 2 ，刷新令牌的时间间隔为 1s，超时时间为 1s\",\" /** * check filed default value. * * @param resilience4JHandle {@linkplain Resilience4JHandle} * @return {@linkplain Resilience4JHandle} */ public Resilience4JHandle checkData(final Resilience4JHandle resilience4JHandle) { resilience4JHandle.setTimeoutDurationRate(Math.max(resilience4JHandle.getTimeoutDurationRate(), Constants.TIMEOUT_DURATION_RATE)); //resilience4JHandle.setLimitRefreshPeriod(Math.max(resilience4JHandle.getLimitRefreshPeriod(), Constants.LIMIT_REFRESH_PERIOD)); //resilience4JHandle.setLimitForPeriod(Math.max(resilience4JHandle.getLimitForPeriod(), Constants.LIMIT_FOR_PERIOD)); //每次刷新令牌的数量为2 ，刷新令牌的时间间隔为1s resilience4JHandle.setLimitRefreshPeriod(1000); resilience4JHandle.setLimitForPeriod(2); resilience4JHandle.setTimeoutDuration(1000); resilience4JHandle.setCircuitEnable(Math.max(resilience4JHandle.getCircuitEnable(), Constants.CIRCUIT_ENABLE)); //resilience4JHandle.setTimeoutDuration(Math.max(resilience4JHandle.getTimeoutDuration(), Constants.TIMEOUT_DURATION)); resilience4JHandle.setFallbackUri(!\\\"0\\\".equals(resilience4JHandle.getFallbackUri()) ? resilience4JHandle.getFallbackUri() : \\\"\\\"); resilience4JHandle.setSlidingWindowSize(Math.max(resilience4JHandle.getSlidingWindowSize(), Constants.SLIDING_WINDOW_SIZE)); resilience4JHandle.setSlidingWindowType(Math.max(resilience4JHandle.getSlidingWindowType(), Constants.SLIDING_WINDOW_TYPE)); resilience4JHandle.setMinimumNumberOfCalls(Math.max(resilience4JHandle.getMinimumNumberOfCalls(), Constants.MINIMUM_NUMBER_OF_CALLS)); resilience4JHandle.setWaitIntervalFunctionInOpenState(Math.max(resilience4JHandle.getWaitIntervalFunctionInOpenState(), Constants.WAIT_INTERVAL_FUNCTION_IN_OPEN_STATE)); resilience4JHandle.setPermittedNumberOfCallsInHalfOpenState(Math.max(resilience4JHandle.getPermittedNumberOfCallsInHalfOpenState(), Constants.PERMITTED_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE)); resilience4JHandle.setFailureRateThreshold(Math.max(resilience4JHandle.getFailureRateThreshold(), Constants.FAILURE_RATE_THRESHOLD)); return resilience4JHandle; } \",\"使用 SuperBenchmarker 工具，4 个线程，执行 10s\",\"C:\\\\Users\\\\v-yanb07>sb -u http://localhost:9195/http/test/findByUserId?userId=1 -c 4 -N 10 Starting at 2021-03-14 15:46:28 [Press C to stop the test] 23 (RPS: 1) ---------------Finished!---------------- Finished at 2021-03-14 15:46:51 (took 00:00:23.0477097) 24 (RPS: 1) Status 200: 25 RPS: 2.2 (requests/second) Max: 2020ms Min: 472ms Avg: 1677ms 50% below 1994ms 60% below 1997ms 70% below 1999ms 80% below 1999ms 90% below 2001ms 95% below 2019ms 98% below 2020ms 99% below 2020ms 99.9% below 2020ms \",\"输出日志\",\"2021-03-14 12:16:35.252 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:36.249 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:36.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:37.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:37.250 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:38.250 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:38.250 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:39.252 INFO 379336 --- [ctor-http-nio-7] o.d.s.e.h.controller.HttpTestController : 限流测试 2021-03-14 12:16:39.252 INFO 379336 --- [ctor-http-nio-4] o.d.s.e.h.controller.HttpTestController : 限流测试 \",\"控制台日志每秒输出两条，由此验证限流生效\"]},\"272\":{\"h\":\"熔断\",\"t\":[\"从配置信息我们知道熔断器默认是关闭，我们需要开打\",\"soul-examples-http 调用接口处添加休眠时间\",\" @GetMapping(\\\"/findByUserId\\\") public UserDTO findByUserId(@RequestParam(\\\"userId\\\") final String userId) throws Exception{ UserDTO userDTO = new UserDTO(); userDTO.setUserId(userId); userDTO.setUserName(\\\"hello world\\\"); log.info(\\\"限流测试\\\"); int i = RandomUtils.nextInt(1,3); if(i %2==0){ //throw new Exception(\\\"异常抛出\\\"); Thread.currentThread().sleep(2000); } return userDTO; } \",\"Resilience4JHandle#checkData 手动设置超时时间为 1s\",\" resilience4JHandle.setTimeoutDuration(1000); \",\"pos 接口调用 \",\"http://localhost:9195/http/test/findByUserId?userId=1\",\"多次请求时，有的请求返回正常数据，有的请求返回如下数据，表示超时熔断生效\",\"{ \\\"code\\\": 500, \\\"message\\\": \\\"Internal Server Error\\\", \\\"data\\\": \\\"404 NOT_FOUND\\\" } \"]},\"273\":{\"h\":\"Resilience4J 插件源码解读\",\"t\":[\"soul 网关 Resilience4j 插件源码大量使用了响应式编程方式，首先需要对响应式编程了解\",\"Resilience4J 插件目录结构\",\"└─resilience4j │ Resilience4JPlugin.java //插件处理，核心类 │ ├─build │ Resilience4JBuilder.java //构建Resilience4JConf对象 │ ├─conf │ Resilience4JConf.java │ ├─executor │ CombinedExecutor.java //限流和熔断执行器 │ Executor.java │ RateLimiterExecutor.java //限流执行器 │ ├─factory │ Resilience4JRegistryFactory.java //限流和熔断对象构建 │ └─handler Resilience4JHandler.java \",\"Resilience4JPlugn#doExecute Resilience4JPlugn 其他 soul 中插件一样继承 AbstractSoulPlugin，只要开启了，通过链式机制执行，都会走到核心方法 doExecute\",\" @Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { final SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; //获取配置信息对象 Resilience4JHandle resilience4JHandle = GsonUtils.getGson().fromJson(rule.getHandle(), Resilience4JHandle.class); //校验配置信息，如果小于默认值，则赋值默认值 resilience4JHandle = resilience4JHandle.checkData(resilience4JHandle); //circuitEnable配置：1 开启熔断组件 ，否则走限流组件 if (resilience4JHandle.getCircuitEnable() == 1) { return combined(exchange, chain, rule); } return rateLimiter(exchange, chain, rule); } \",\"限流 Resilience4JPlugin#rateLimiter\",\" private Mono<Void> rateLimiter(final ServerWebExchange exchange, final SoulPluginChain chain, final RuleData rule) { return ratelimiterExecutor.run( // chain.execute(exchange) 后续插件执行 chain.execute(exchange), fallback(ratelimiterExecutor, exchange, null), Resilience4JBuilder.build(rule)) .onErrorResume(throwable -> ratelimiterExecutor.withoutFallback(exchange, throwable)) //ratelimiterExecutor.run调用 @Override public <T> Mono<T> run(final Mono<T> toRun, final Function<Throwable, Mono<T>> fallback, final Resilience4JConf conf) { //限流器组件 RateLimiter rateLimiter = Resilience4JRegistryFactory.rateLimiter(conf.getId(), conf.getRateLimiterConfig()); //限流执行 Mono<T> to = toRun.transformDeferred(RateLimiterOperator.of(rateLimiter)); if (fallback != null) { //回调的执行 return to.onErrorResume(fallback); } return to; } // to.onErrorResume(fallback); default Mono<Void> fallback(ServerWebExchange exchange, String uri, Throwable t) { if (StringUtils.isBlank(uri)) { return withoutFallback(exchange, t); } DispatcherHandler dispatcherHandler = SpringBeanUtils.getInstance().getBean(DispatcherHandler.class); ServerHttpRequest request = exchange.getRequest().mutate().uri(Objects.requireNonNull(UriUtils.createUri(uri))).build(); ServerWebExchange mutated = exchange.mutate().request(request).build(); //回调的执行地方 return dispatcherHandler.handle(mutated); } \",\"熔断 Resilience4JPlugin#combined\",\" private Mono<Void> combined(final ServerWebExchange exchange, final SoulPluginChain chain, final RuleData rule) { Resilience4JConf conf = Resilience4JBuilder.build(rule); return combinedExecutor.run( chain.execute(exchange).doOnSuccess(v -> { HttpStatus status = exchange.getResponse().getStatusCode(); if (status == null || !status.is2xxSuccessful()) { exchange.getResponse().setStatusCode(null); throw new CircuitBreakerStatusCodeException(status == null ? HttpStatus.INTERNAL_SERVER_ERROR : status); } }), fallback(combinedExecutor, exchange, conf.getFallBackUri()), conf); } //combinedExecutor#run执行的内容 public <T> Mono<T> run(final Mono<T> run, final Function<Throwable, Mono<T>> fallback, final Resilience4JConf resilience4JConf) { RateLimiter rateLimiter = Resilience4JRegistryFactory.rateLimiter(resilience4JConf.getId(), resilience4JConf.getRateLimiterConfig()); CircuitBreaker circuitBreaker = Resilience4JRegistryFactory.circuitBreaker(resilience4JConf.getId(), resilience4JConf.getCircuitBreakerConfig()); //断路器的操作 Mono<T> to = run.transformDeferred(CircuitBreakerOperator.of(circuitBreaker)) //限流操作 .transformDeferred(RateLimiterOperator.of(rateLimiter)) //设置超时时间 .timeout(resilience4JConf.getTimeLimiterConfig().getTimeoutDuration()) //如果超时了抛出超时异常 .doOnError(TimeoutException.class, t -> circuitBreaker.onError( resilience4JConf.getTimeLimiterConfig().getTimeoutDuration().toMillis(), TimeUnit.MILLISECONDS, t)); if (fallback != null) { to = to.onErrorResume(fallback); } return to; } \"]},\"274\":{\"h\":\"总结\",\"t\":[\"soul 网关提供限流和熔断，熔断默认是关闭的\",\"参数值小于默认值，会直接使用默认值\"]},\"275\":{\"h\":\"Soul网关学习Apache Dubbo插件原理解析\"},\"276\":{\"h\":\"目标\",\"t\":[\"Apache Dubbo 插件介绍 \",\"元数据介绍\",\"Apache Dubbo 插件配置 \",\"Bootstrap pom 配置\",\"soul-admin 配置\",\"dubbo 服务 pom 配置\",\"Apache Dubbo 泛化调用介绍 \",\"通过 API 方式使用泛化调用\",\"通过 spring 使用泛化调用\",\"泛化调用实现流程\",\"Soul Dubbo 插件调用解析 \",\"ApachDubboPlugin 泛化调用准备\",\"ApacheDubboProxySerivce\",\"DubboResponsePlugin\",\"WebFluxResultUtils 返回结果\",\"Dubbo 泛化调用介绍\",\"总结\",\"参考\"]},\"277\":{\"h\":\"Apache Dubbo 插件介绍\",\"t\":[\"Apache Dubbo 是一款高性能、轻量级的开源 Java 服务框架,主要提供了六大核心能力,面向接口代理的高性能 RPC 调用,智能容错和负载均衡,服务自动注册与发现,高度可扩展能力,运行期流量调度,可视化的服务治理与运维。 网关中 Dubbo 插件主要是将 Http协议 转换成 Dubbo协议 ,也是网关实现 Dubbo 泛化调用的关键。而 Dubbo 插件需要配合 元数据 才能实现 Dubbo 调用。\"]},\"278\":{\"h\":\"元数据介绍\",\"t\":[\"元数据作用就是在进行协议转换时候要获取真实的请求 path 、methodName 、 parameterTypes 为泛化调用做好准备\",\"image.png\",\"在数据库中,我们有一张表单独存储 Dubbo 元信息，通过数据同步方案,会把这张表的数据同步到网关的 JVM 内存中\",\"表结构如下\",\"CREATE TABLE IF NOT EXISTS `meta_data` ( `id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'id', `app_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '应用名称', `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '路径,不能重复', `path_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '路径描述', `rpc_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'rpc类型', `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '服务名称', `method_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '方法名称', `parameter_types` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT '参数类型 多个参数类型 逗号隔开', `rpc_ext` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT 'rpc的扩展信息，json格式', `date_created` datetime(0) NOT NULL COMMENT '创建时间', `date_updated` datetime(0) NOT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT '更新时间', `enabled` tinyint(4) NOT NULL DEFAULT 0 COMMENT '启用状态', PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic; \",\"path 字段主要是在请求网关的时候,会根据你的 path 字段来匹配到一条数据,然后进行后续的处理流程\",\"rpc_ext 字段如果代理的接口是 Dubbo 类型的服务接口,同时设置了 groupversion 字段时候,那么信息就会存储到 rpc_ext 中\",\"每一个 Dubbo 接口方法会应对一条元数据,对比 SpringCloud、http 分别是只存储一条/contextPath/** 和不存储\"]},\"279\":{\"h\":\"Apache Dubbo 插件配置\"},\"280\":{\"h\":\"soul-bootstrap pom 配置\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-apache-dubbo</artifactId> <version>${project.version}</version> </dependency> <dependency> <groupId>org.apache.dubbo</groupId> <artifactId>dubbo</artifactId> <version>2.7.5</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-client</artifactId> <version>${curator.version}</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-framework</artifactId> <version>${curator.version}</version> </dependency> <dependency> <groupId>org.apache.curator</groupId> <artifactId>curator-recipes</artifactId> <version>${curator.version}</version> </dependency> \"]},\"281\":{\"h\":\"soul-admin 配置\",\"t\":[\"image.png\",\"登录 soul-admin 后台在插件管理页面打开 Dubbo 配置选项的开关,和填写注册中心的连接地址\"]},\"282\":{\"h\":\"dubbo 服务 pom 配置\",\"t\":[\"<dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-client-apache-dubbo</artifactId> <version>${soul.version}</version> </dependency> \",\"@SoulDubboClient(path = \\\"/insert\\\", desc = \\\"Insert a row of data\\\") public DubboTest insert(final DubboTest dubboTest) { dubboTest.setName(\\\"hello world Soul Apache Dubbo: \\\" + dubboTest.getName()); return dubboTest; } \",\"被代理的服务使用提供的 soul-spring-boot-starter-client-apache-dubbo 客户端依赖,同时使用@SoulDubboClient 注解,在启动时候将接口的名称,参数类型,参数内容注册到 soul-admin 端,然后 admin 端将数据同步到 bootstrap 端。\"]},\"283\":{\"h\":\"Apache Dubbo 泛化调用介绍\",\"t\":[\"泛化接口调用方式主要用于客户端没有 API 接口及模型类元的情况,参数及返回值中的所有 POJO 均用 Map 表示, 通常用于框架集成,可通过 GenericSerivce 调用所有服务实现。\"]},\"284\":{\"h\":\"通过 API 方式使用泛化调用(网关目前使用方式)\",\"t\":[\"ReferenceConfig<GenericService> reference = new ReferenceConfig<>(); reference.setGeneric(true); reference.setApplication(applicationConfig); reference.setRegistry(registryConfig); reference.setInterface(metaData.getServiceName()); reference.setProtocol(\\\"dubbo\\\"); \",\"网关通过 API 方式声明注册使用泛化调用\"]},\"285\":{\"h\":\"通过 Spring 使用泛化调用\",\"t\":[\"<dubbo:reference id=\\\"barService\\\" interface=\\\"com.foo.BarService\\\" generic=\\\"true\\\" /> \"]},\"286\":{\"h\":\"泛化调用实现流程\",\"t\":[\"+-------------------------------------------+ +-------------------------------------------+ | consumer 端 | | provider 端 | | | | | | | | | | | | | | | | | | +------------------+ | | +--------------+ | | |GenericImplFilter | | Invocation | |GenericFilter | | | +----> | +-------------------------> | | | | | +------------------+ | | +--------------+ | | +-----------+ | | | +-----------+ | | | | | | | | | | | |Client | | | +--> | Service | | | | | | | | | | | +-----------+ | | +-------+---+ | | | | | | | ^ +------------------+ | | +--------------+ | | | | |GenericImplFilter | | | |GenericFilter | <----------+ | | +-------------+ | <-------------------------+ | | | +------------------+ | | +--------------+ | | | | | | | | | | | | | | | | | +-------------------------------------------+ +-------------------------------------------+ \",\"GenericService 这个接口和 Java 的反射调用非常像,只需提供调用的方法名称,参数的类型以及参数的值就可以直接调用对应方法了。\",\"GenericFilter : 负责 provider 端参数的转换 \",\"调用时,将 hashMap 结构的参数转换成对应 Pojo\",\"返回结果是,将 Pojo 转换成 hashMap\",\"image.png\",\"GenericImplFilter : 负责 consumer 端参数的转换,将 Pojo 转换成 hashMap 接口\",\"image.png\",\"/** * Generic service interface * * @export */ public interface GenericService { /** * Generic invocation * * @param method 方法名，如：findPerson，如果有重载方法，需带上参数列表，如：findPerson(java.lang.String) * @param parameterTypes 参数类型 * @param args 参数列表 * @return invocation 返回值 * @throws GenericException 方法抛出的异常 */ Object $invoke(String method, String[] parameterTypes, Object[] args) throws GenericException; default CompletableFuture<Object> $invokeAsync(String method, String[] parameterTypes, Object[] args) throws GenericException { Object object = $invoke(method, parameterTypes, args); if (object instanceof CompletableFuture) { return (CompletableFuture<Object>) object; } return CompletableFuture.completedFuture(object); } } \"]},\"287\":{\"h\":\"Soul Dubbo 插件调用解析\",\"t\":[\"当业务请求发起时候,首先进入 SoulWebHandler (至于为什么成为请求入口自行查询,本文不作解释) 类的 Handle 方法,下面就带了 plugins 从 DefaultSoulPluginChain 类开始进入插件链调用。\",\"@Override public Mono<Void> handle(@NonNull final ServerWebExchange exchange) { return new DefaultSoulPluginChain(plugins).execute(exchange).subscribeOn(scheduler); } \",\"@Override public Mono<Void> execute(final ServerWebExchange exchange) { // 响应式编程 return Mono.defer(() -> { // 判断当前index 是否 < 插件数量 if (this.index < plugins.size()) { // 依次从plugins 中获取一种插件进行调用 SoulPlugin plugin = plugins.get(this.index++); // 判断此插件是否未打开 Boolean skip = plugin.skip(exchange); if (skip) { return this.execute(exchange); } return plugin.execute(exchange, this); } return Mono.empty(); }); } \",\"本章只关注 Apache Dubbo 所以我们重点放到 Dubbo 插件的调用。 经过 Debug 网关程序我们知道其实是按照上面的顺序一个一个的进行判断调用。下面我们关注 ApacheDubboPlugin\"]},\"288\":{\"h\":\"ApachDubboPlugin 泛化调用准备\",\"t\":[\"@Override protected Mono<Void> doExecute(final ServerWebExchange exchange, final SoulPluginChain chain, final SelectorData selector, final RuleData rule) { // 获取 dubbo_params 数据 String body = exchange.getAttribute(Constants.DUBBO_PARAMS); // 获取 exchange context的属性值 SoulContext soulContext = exchange.getAttribute(Constants.CONTEXT); assert soulContext != null; // 获取 exchange metaData 属性值 MetaData metaData = exchange.getAttribute(Constants.META_DATA); // 判断metaData是否有误,如果有误直接返回 metaData 有误的返回信息 if (!checkMetaData(metaData)) { assert metaData != null; log.error(\\\" path is :{}, meta data have error.... {}\\\", soulContext.getPath(), metaData.toString()); exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); Object error = SoulResultWrap.error(SoulResultEnum.META_DATA_ERROR.getCode(), SoulResultEnum.META_DATA_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // 判断 metaData的parameterTypes 和 body 是否为空,如果有误则返回Body错误信息 if (StringUtils.isNoneBlank(metaData.getParameterTypes()) && StringUtils.isBlank(body)) { exchange.getResponse().setStatusCode(HttpStatus.INTERNAL_SERVER_ERROR); Object error = SoulResultWrap.error(SoulResultEnum.DUBBO_HAVE_BODY_PARAM.getCode(), SoulResultEnum.DUBBO_HAVE_BODY_PARAM.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } // 带着exchange、body、metaData 进行 Dubbo GenericsService的异步调用 final Mono<Object> result = dubboProxyService.genericInvoker(body, metaData, exchange); return result.then(chain.execute(exchange)); } \",\"首先对泛化调用所需要的参数进行检查\"]},\"289\":{\"h\":\"ApacheDubboProxyService\",\"t\":[\"public Mono<Object> genericInvoker(final String body, final MetaData metaData, final ServerWebExchange exchange) throws SoulException { // issue(https://github.com/dromara/soul/issues/471), add dubbo tag route String dubboTagRouteFromHttpHeaders = exchange.getRequest().getHeaders().getFirst(Constants.DUBBO_TAG_ROUTE); if (StringUtils.isNotBlank(dubboTagRouteFromHttpHeaders)) { RpcContext.getContext().setAttachment(CommonConstants.TAG_KEY, dubboTagRouteFromHttpHeaders); } // 根据metaData路径获取ferference ReferenceConfig<GenericService> reference = ApplicationConfigCache.getInstance().get(metaData.getPath()); if (Objects.isNull(reference) || StringUtils.isEmpty(reference.getInterface())) { ApplicationConfigCache.getInstance().invalidate(metaData.getPath()); reference = ApplicationConfigCache.getInstance().initRef(metaData); } // 根据ferference 获取泛化调用的实例 GenericService GenericService genericService = reference.get(); Pair<String[], Object[]> pair; if (ParamCheckUtils.dubboBodyIsEmpty(body)) { pair = new ImmutablePair<>(new String[]{}, new Object[]{}); } else { // 根据body 和 parameterTypes 组织Dubbo 泛化调用的参数类型和参数值 pair = dubboParamResolveService.buildParameter(body, metaData.getParameterTypes()); } // 下面使用GenericSerice 默认方法$invokeAsync进行异步调用 CompletableFuture<Object> future = genericService.$invokeAsync(metaData.getMethodName(), pair.getLeft(), pair.getRight()); return Mono.fromFuture(future.thenApply(ret -> { if (Objects.isNull(ret)) { ret = Constants.DUBBO_RPC_RESULT_EMPTY; } // 等调用成功之后 将结果和类型复制到exchagne 对应的属性上 exchange.getAttributes().put(Constants.DUBBO_RPC_RESULT, ret); exchange.getAttributes().put(Constants.CLIENT_RESPONSE_RESULT_TYPE, ResultEnum.SUCCESS.getName()); return ret; })).onErrorMap(exception -> exception instanceof GenericException ? new SoulException(((GenericException) exception).getExceptionMessage()) : new SoulException(exception)); } \"]},\"290\":{\"h\":\"DubboResponsePlugin\",\"t\":[\"@Override public Mono<Void> execute(final ServerWebExchange exchange, final SoulPluginChain chain) { return chain.execute(exchange).then(Mono.defer(() -> { final Object result = exchange.getAttribute(Constants.DUBBO_RPC_RESULT); if (Objects.isNull(result)) { Object error = SoulResultWrap.error(SoulResultEnum.SERVICE_RESULT_ERROR.getCode(), SoulResultEnum.SERVICE_RESULT_ERROR.getMsg(), null); return WebFluxResultUtils.result(exchange, error); } Object success = SoulResultWrap.success(SoulResultEnum.SUCCESS.getCode(), SoulResultEnum.SUCCESS.getMsg(), JsonUtils.removeClass(result)); return WebFluxResultUtils.result(exchange, success); })); } \"]},\"291\":{\"h\":\"WebFluxResultUtils 返回结果\",\"t\":[\"image.png\"]},\"292\":{\"h\":\"Dubbo 泛化调用介绍\",\"t\":[\"Dubbo 泛化调用主要就分为两块分别是消费端如何使用 GenericImplFilter 拦截泛化调用、服务提供端如何使用 GenericFilter 拦截请求后把泛化参数序列化然后请求给具体服务。\"]},\"293\":{\"h\":\"服务消费端 org.apache.dubbo.rpc.filter.GenericImplFilter 是如何拦截泛化调用\",\"t\":[\"@Activate(group = CommonConstants.CONSUMER, value = GENERIC_KEY, order = 20000) public class GenericImplFilter implements Filter, Filter.Listener { @Override public Result invoke(Invoker<?> invoker, Invocation invocation) throws RpcException { // ... 省略非核心代码 // 判断是否为泛化调用 if (isMakingGenericCall(generic, invocation)) { // 获取泛化参数 Object[] args = (Object[]) invocation.getArguments()[2]; // 如果泛化为nativeJava if (ProtocolUtils.isJavaGenericSerialization(generic)) { for (Object arg : args) { if (!(byte[].class == arg.getClass())) { error(generic, byte[].class.getName(), arg.getClass().getName()); } } // 如果泛化方式为bean } else if (ProtocolUtils.isBeanGenericSerialization(generic)) { for (Object arg : args) { if (!(arg instanceof JavaBeanDescriptor)) { error(generic, JavaBeanDescriptor.class.getName(), arg.getClass().getName()); } } } // 设置attachment ,以便与服务端调用 invocation.setAttachment( GENERIC_KEY, invoker.getUrl().getParameter(GENERIC_KEY)); } // 发起远程调用 return invoker.invoke(invocation); } private boolean isMakingGenericCall(String generic, Invocation invocation) { return (invocation.getMethodName().equals($INVOKE) || invocation.getMethodName().equals($INVOKE_ASYNC)) && invocation.getArguments() != null && invocation.getArguments().length == 3 && ProtocolUtils.isGeneric(generic); } } \",\"GenericImplFilter 实现接口 Filter(关于 Dubbo 中的 Filter,不做介绍)然后执行 Invoke 方法,invoke 方法主要做如下事情:\",\"参数校验,检查这个调用是否是泛化调用\",\"获取泛化参数\",\"判断泛化调用方式:遍历每个参数,然后依次判断参数的泛化方式是 nativejava 还是 bean 方式\",\"发起远程调用\"]},\"294\":{\"h\":\"服务提供端通过 GenericFilter 拦截泛化请求\",\"t\":[\"@Activate(group = CommonConstants.PROVIDER, order = -20000) public class GenericFilter implements Filter, Filter.Listener { @Override public Result invoke(Invoker<?> invoker, Invocation inv) throws RpcException { // 参数校验 if ((inv.getMethodName().equals($INVOKE) || inv.getMethodName().equals($INVOKE_ASYNC)) && inv.getArguments() != null && inv.getArguments().length == 3 && !GenericService.class.isAssignableFrom(invoker.getInterface())) { // 获取参数名称、参数类型、参数值 String name = ((String) inv.getArguments()[0]).trim(); String[] types = (String[]) inv.getArguments()[1]; Object[] args = (Object[]) inv.getArguments()[2]; try { // 使用反射获取调用的方法 Method method = ReflectUtils.findMethodByMethodSignature(invoker.getInterface(), name, types); Class<?>[] params = method.getParameterTypes(); if (args == null) { args = new Object[params.length]; } // 获取泛化引用使用的泛化类型,true or bean or nativejava String generic = inv.getAttachment(GENERIC_KEY); if (StringUtils.isBlank(generic)) { generic = RpcContext.getContext().getAttachment(GENERIC_KEY); } // 如果generic=true 则使用true方式对入参进行反序列化 if (StringUtils.isEmpty(generic) || ProtocolUtils.isDefaultGenericSerialization(generic) || ProtocolUtils.isGenericReturnRawResult(generic)) { args = PojoUtils.realize(args, params, method.getGenericParameterTypes()); // 如果 generic=nativejava,则使用nativejava方式对入参进行反序列化 } else if (ProtocolUtils.isJavaGenericSerialization(generic)) { for (int i = 0; i < args.length; i++) { if (byte[].class == args[i].getClass()) { try (UnsafeByteArrayInputStream is = new UnsafeByteArrayInputStream((byte[]) args[i])) { args[i] = ExtensionLoader.getExtensionLoader(Serialization.class) .getExtension(GENERIC_SERIALIZATION_NATIVE_JAVA) .deserialize(null, is).readObject(); } catch (Exception e) { throw new RpcException(\\\"Deserialize argument [\\\" + (i + 1) + \\\"] failed.\\\", e); } } else { throw new RpcException(...); } } // 如果 generic=bean 则使用bean方式对入参进行反序列化 } else if (ProtocolUtils.isBeanGenericSerialization(generic)) { for (int i = 0; i < args.length; i++) { if (args[i] instanceof JavaBeanDescriptor) { args[i] = JavaBeanSerializeUtil.deserialize((JavaBeanDescriptor) args[i]); } else { throw new RpcException(...); } } } ... // 将本次请求传递到FilterChain的下一个Filter中,并返回结果result RpcInvocation rpcInvocation = new RpcInvocation(method, invoker.getInterface().getName(), args, inv.getAttachments(), inv.getAttributes()); rpcInvocation.setInvoker(inv.getInvoker()); rpcInvocation.setTargetServiceUniqueName(inv.getTargetServiceUniqueName()); return invoker.invoke(rpcInvocation); } catch (NoSuchMethodException e) { throw new RpcException(e.getMessage(), e); } catch (ClassNotFoundException e) { throw new RpcException(e.getMessage(), e); } } // 如果不是泛化调用,直接把请求传给FilterChain的下一个Filter return invoker.invoke(inv); } } \",\"以上就是 Dubbo 服务提供端如何拦截泛化请求,并进行处理的大体流程:\",\"参数校验,判断此次请求是不是泛化调用\",\"获取参数名称、参数类型、参数值\",\"使用反射获取调用的方法,和使用的泛化方式 true or nativejava or bean\",\"根据泛化方式,反序列化泛化参数\",\"将本次请求，包括调用的方法，参数和上下文信息传递给 FilterChain 的下一个 Filter 中,并返回 Result 结果\",\"根据泛化方式,反序列化 Result 结果返回给服务消费端\"]},\"295\":{\"h\":\"总结\",\"t\":[\"以上从如何配置 Dubbo 插件到整个调用流程的分析,然后分别介绍服务消费端与服务提供端如何拦截泛化调用流程对参数进行序列化细节,希望对你有所帮助\"]},\"296\":{\"h\":\"参考\",\"t\":[\"https://my.oschina.net/u/4564034/blog/4409382\",\"https://qsli.github.io/2018/05/02/dubbo-generic-invoke/\"]},\"297\":{\"h\":\"捐赠\"},\"298\":{\"h\":\"项目捐赠\"},\"299\":{\"h\":\"基本条件\",\"t\":[\"Dromara 开源社区组织对捐赠项目有以下最基本条件要求：\",\"项目必须是原创且不能是 Fork 版本。\",\"项目必须是完整的应用解决方案。\",\"项目必须有良好的代码注释和不断完善的使用文档。\",\"项目必须在 Gitee 平台托管且 Stars 关注量大于 100。\",\"项目至少在近 2 个月内有实际有效的代码提交记录。\",\"项目必须得到 dromara 社区组织评委会的认可。\",\"优先考虑 Gitee 推荐项目或已获得 GVP 的项目。（GVP 项目需联系 Gitee 官方人员取消 GVP 后才能转移到组织，转移成功后恢复 GVP）\",\"优选考虑 容器工具、微服务框架和工具、分布式事务、分布式中间件、大数据处理、人工智能、IoT 物联网、开发/测试/运维相关工具链等领域项目。\"]},\"300\":{\"h\":\"源仓库影响\",\"t\":[\"目前捐赠项目采用转移到 dromara 组织仓库方式进行处理，项目转移后会有以下影响：\",\"gitee ：https://gitee.com/dromara/仓库名\",\"github：https://github.com/dromara/仓库名\",\"项目源码中如果存在绝对路径的引用（图片，文件等）则需改为相对路径。\"]},\"301\":{\"h\":\"仓库权限\",\"t\":[\"dromara 组织负责人会给新加项目负责人设置超级管理员权限。\",\"项目 PMC/Committers 会被邀请加入 dromara 组织，设置相关读写权限。项目独立提交与运营。\",\"项目 PMC/Committers 会被分配@dromara.org 后缀邮箱。\"]},\"302\":{\"h\":\"仓库文档\",\"t\":[\"原则上需要联系 dromara 官网负责人，在 https://dromara.org 进行更新转移文档\"]},\"303\":{\"h\":\"版本发布\",\"t\":[\"原则上要求下一个版本，需要更改包名前缀为org.dromara, 并且发布到 MAVEN 仓库\"]},\"304\":{\"h\":\"组织/社区\",\"t\":[\"dromara 开源组织负责人或者秘书，邀请进入 dromara 社区群，并进行全员公告。\",\"dromara 开源社区公众号，发布欢迎加入文章，并同步到技术社区。\",\"原仓库社区群加上 dromara-xxx 前缀。\"]},\"305\":{\"h\":\"捐赠项目退出事宜（初版）\",\"t\":[\"dromara 社区组织始终抱有积极开放宽容的态度，如果捐赠项目作者加入 dromara 组织后无法认同组织的发展理念或想转移到其他组织/个人，则可向 dromara 评委会申请退出。申请退出流程：\",\"项目作者需书面或邮件编写项目退出事由并电邮至 pmc@dromara.org 。\",\"dromara 评委会收到申请后第一时间与项目作者沟通并确认退出意向，若作者执意退出，则批准处理。\",\"特别注意，如果申请退出的项目是 GVP 项目，则需联系 Gitee 官方人员取消 GVP 后转回个人名下，转回成功后联系 Gitee 官方人员恢复即可。非 GVP 项目可直接操作。\",\"项目退出后，dromara 组织会在各大平台和社区群进行公告推送告知，并将该项目历史记录进行归档保存。\",\"最后，希望项目作者在考虑退出 dromara 组织之前可以先和我们沟通，指出 dromara 组织哪里做的不好的地方，以便我们能够改进，共同发展。\"]},\"306\":{\"h\":\"权责与组织形式\",\"t\":[\"社区内各个子项目团队，共享所有开源资源，包括且不限于组织品牌、社区公众号、官方社群、主流技术网站和媒体的专属账号和频道等。\",\"原则上，每个项目内部管理自治，组织委员会由每个项目的主要负责人组成。\",\"dromara 组织相关决策事务(指定和修改规则、加入或者退出项目等)，需要由组织委员会投票通过后执行。日常事务由组织的常任负责人处理。\",\"在组织层面做出决策以后，每个项目的管理团队必须无条件服从组织，或者配合其他项目的一些工作和任务，做到整个组织在宣传活动、任务安排等方面口径一致。\",\"dromara 开源组织从 2021 年 3 月到 2022 年 3 月进入试运行阶段，本原则为组织的试运行指导方案，各个子项目在此期间，在不违反法律、道德原则，不涉及抄袭侵权，以及不伤害组织，不对社区和用户造成恶劣影响的前提下，拥有完整的自治和管理权限、以及项目子品牌的著作权和实际拥有权。\",\"在试运行期内，社区将成立正式的委员会，对于后续社区发展方式，子项目的管理和权限约束，出台正式的规则，并经由投票通过后生效。\"]},\"307\":{\"h\":\"以上规定 dromara 组委会有最终解释权\"},\"308\":{\"h\":\"赞助/支持\",\"t\":[\"加入知识星球\",\"Dromara 社区能够持续运营和提供更加优质的服务离不开大家的支持。如果想成为 Dromara 社区赞助商或支持者，请考虑联系：\",\"xiaoyu@dromara.org\",\"Dromara 社区承诺将收到的所有赞助支持资金完全公开化，且后续资金用途仅限于 Dromara 社区运营支出。赞助任何事情，可以联系 xiaoyu@dromara.org 目前赞助商有(没有显示名称的赞助者，默认：无名)：\",\"赞助商\",\"赞助金额（元）\",\"附语\",\"赞助日期\",\"连洁\",\"20\",\"小小赞赏\",\"2023-05-26\",\"一夏千晨\",\"50\",\"一包辣条奉上\",\"2023-05-22\",\"无名\",\"50\",\"2023-05-22\",\"无名\",\"100\",\"五一快乐(勿回应)\",\"2023-04-29\",\"meta.木予\",\"10\",\"2023-04-26\",\"无名\",\"100\",\"纯粹赞助(无需回应)\",\"2023-04-24\",\"Java 开发小王\",\"1\",\"很强\",\"2023-04-20\",\"令狐冲\",\"10\",\"加油\",\"2023-04-12\",\"如愿\",\"10\",\"猫大人帅哥，祝社区越来越好\",\"2023-04-04\",\"cszj\",\"100\",\"帮助很大，希望越来越好\",\"2023-04-03\",\"海子\",\"50\",\"感谢诸位无私的奉献\",\"2023-04-02\",\"西岭千秋雪\",\"50\",\"2023-03-29\",\"是白菜\",\"1\",\"2023-03-28\",\"泛微网络刘启成\",\"50\",\"学习 ee，对我非常有帮助，感谢\",\"2023-03-27\",\"无名\",\"10\",\"加油！\",\"2023-03-19\",\"无名\",\"100\",\"加油！\",\"2023-03-16\",\"Yyy\",\"1\",\"2023-03-01\",\"无名\",\"100\",\"2023-02-28\",\"Evan\",\"20\",\"2023-02-26\",\"朔\",\"10\",\"钱不多，但是心意是满满的，加油！\",\"2023-02-24\",\"无名\",\"200\",\"2023-02-05\",\"方\",\"28.88\",\"新年快乐，感谢开源\",\"2023-01-21\",\"无名\",\"200\",\"祝社区的兄弟姐妹们新年快乐\",\"2023-01-21\",\"无名\",\"0.26\",\"2023-01-11\",\"无名\",\"50\",\"2023-01-06\",\"紫气东来\",\"50\",\"感谢开源，坚持信念\",\"2022-12-14\",\"枫原万耶\",\"16.66\",\"2022-11-13\",\"岁月无声\",\"10.24\",\"希望越来越好\",\"2022-11-10\",\"邵昌明\",\"20\",\"买雪糕吃\",\"2022-11-02\",\"无名\",\"1\",\"2022-10-27\",\"大熊同学\",\"9.9\",\"希望我们开源社区长长久久！\",\"2022-10-26\",\"曙光\",\"50\",\"2022-10-25\",\"无名\",\"1\",\"Zdp 奉上\",\"2022-10-04\",\"无名\",\"200\",\"2022-09-28\",\"无名\",\"200\",\"2022-09-28\",\"无名\",\"200\",\"2022-09-28\",\"晚风\",\"100\",\"从接触 hutool 开始就喜欢上了，太好用了\",\"2022-09-08\",\"无名\",\"100\",\"支持开源，加油！\",\"2022-09-07\",\"陈乐辉\",\"100\",\"祝开源的路上越走越远\",\"2022-08-12\",\"阿超\",\"50\",\"开源就是人人为我，我为人人\",\"2022-07-27\",\"QZWML\",\"10\",\"2022-07-22\",\"无名\",\"100\",\"2022-06-30\",\"Eclipse\",\"20\",\"支持！\",\"2022-06-28\",\"朋云\",\"10\",\"2022-06-24\",\"红豆生南国\",\"10\",\"吃个雪糕\",\"2022-06-22\",\"修理工\",\"80\",\"代码规范，值得学习，用的方便，强烈推荐\",\"2022-05-27\",\"苗对我很重要\",\"10\",\"2022-05-19\",\"王磊\",\"50\",\"2022-05-19\",\"Hi\",\"10.24\",\"感谢开发\",\"2022-04-24\",\"哈哈\",\"66.66\",\"支持猫大人，祝社区越来越好~\",\"2022-04-14\",\"liming\",\"50\",\"祝社区越来越好!\",\"2022-04-14\",\"胡泰室\",\"50\",\"祝社区越来越好\",\"2022-04-14\",\"金卫信曾小燕\",\"10.24\",\"2022-04-14\",\"Chris\",\"150\",\"2022-04-12\",\"无名\",\"100\",\"2022-04-05\",\"青衫烟雨客\",\"10\",\"2022-03-20\",\"Zack\",\"20\",\"省了我好多事，太 nb 了！！支持下\",\"2022-03-10\",\"许伟超\",\"10\",\"感恩，尽我绵薄之力\",\"2022-03-09\",\"无名\",\"10\",\"虽然钱不多，但是我会一直打赏\",\"2022-03-09\",\"_\",\"20\",\"虎年吉祥\",\"2022-02-03\",\"无名\",\"166\",\"祝社区能做的越来越好\",\"2022-01-17\",\"吴南方\",\"20\",\"希望 hutool 能做的越来越好\",\"2022-01-09\",\"忘忧\",\"50\",\"2021-12-30\",\"达\",\"5\",\"hutool 省了很多重复造轮子的时间，特别棒，小小心意赞助一下\",\"2021-12-24\",\"吃瓜群众丙\",\"100\",\"为往圣继绝学。加油吧，少年。\",\"2021-12-23\",\"早点下班吧\",\"10\",\"2021-12-14\",\"Amiron 今天早睡了吗\",\"20\",\"2021-12-02\",\"phantom\",\"100\",\"2021-11-30\",\"无名\",\"11.27\",\"感谢，表示支持\",\"2021-11-27\",\"夏和顺顺\",\"50\",\"为往圣继绝学\",\"2021-11-25\",\"Chris\",\"100\",\"2021-11-24\",\"光明星辰\",\"50\",\"辣条钱\",\"2021-11-04\",\"无名\",\"3\",\"辣条钱\",\"2021-10-29\",\"奥利弗\",\"15\",\"2021-10-13\",\"XXXL\",\"50\",\"聊表心意，祝越来越好\",\"2021-09-30\",\"用用\",\"20\",\"2021-09-17\",\"宋不醒\",\"10\",\"加油\",\"2021-09-10\",\"🐶\",\"20\",\"聊表心意，有大用了\",\"2021-08-24\",\"Coffee\",\"10\",\"冲冲\",\"2021-07-29\",\"aliyu\",\"10\",\"aly\",\"2021-07-22\",\"段大志\",\"20\",\"国产开源蒸蒸日上\",\"2021-07-14\",\"喜世\",\"20\",\"感谢铁锚助教辛勤解答问题\",\"2021-06-28\",\"Group\",\"1.00\",\"蚊子腿也是肉\",\"2021-06-08\",\"大大的时间小小的我\",\"20\",\"2021-05-26\",\"Leo\",\"15\",\"真心不错，加油！\",\"2021-05-20\",\"辉辉同学\",\"66.66\",\"hutool 工具个人认为是封神佳作，顶礼膜拜！\",\"2021-05-19\",\"0X17\",\"100\",\"2021-05-16\",\"鑫爷\",\"16.8\",\"fans99\",\"2021-05-11\",\"こうう\",\"3\",\"2021-05-06\",\"一只想要奋斗的咸鱼\",\"66\",\"2021-04-29\",\"锄禾\",\"20\",\"能力有限，聊表心意\",\"2021-04-27\",\"然而\",\"64\",\"越开源越进步\",\"2021-04-23\",\"路，还很远\",\"20\",\"国产开源牛逼\",\"2021-04-23\",\"纳兰-曼孚\",\"20\",\"2021-04-15\",\"Stone\",\"200\",\"跟着猫大人搞开源，芜湖起飞\",\"2021-04-14\",\"疯子\",\"200\",\"国产开源,加油!\",\"2021-04-14\",\"tom\",\"50\",\"祝越来越好\",\"2021-04-14\",\"子豪 sirius\",\"50\",\"支持猫大人\",\"2021-04-14\",\"Sissie\",\"50\",\"感谢开源，支持喵大人\",\"2021-04-14\",\"WilliamSky\",\"50\",\"感谢开源，支持喵大人\",\"2021-04-14\",\"Sink\",\"10\",\"向大佬致敬\",\"2021-04-14\",\"石启蒙\",\"10\",\"祝开源社区越来越好\",\"2021-04-14\",\"吴俊杰_ken\",\"66.88\",\"学习加交流，社区越来越好\",\"2021-04-13\",\"正是在下李某人\",\"20\",\"猫大人牛批\",\"2021-04-13\",\"Zhw\",\"400\",\"做大做强，再创辉煌\",\"2021-04-13\",\"彭伟伦\",\"20\",\"猫大人的华子\",\"2021-04-13\",\"心中的明月\",\"30\",\"Tshirt 好漂亮，好想要\",\"2021-04-13\",\"刘进\",\"20\",\"撸下胸毛\",\"2021-04-13\",\"黄灿达\",\"20\",\"支持\",\"2021-04-13\",\"赵镇\",\"33\",\"做大做强，再创辉煌\",\"2021-04-13\",\"kimmking\",\"2000\",\"祝福社区越来越好\",\"2021-04-12\",\"John\",\"400\",\"猫大人抽华子\",\"2021-04-12\",\"Charlyfeng\",\"10\",\"为往圣继绝学\",\"2021-04-12\",\"梁胜芳\",\"6.66\",\"祝组织越来越好\",\"2021-04-12\",\"Chris\",\"200\",\"祝福社区越来越好\",\"2021-04-11\",\"Jtiag\",\"20\",\"做大做强\",\"2021-04-02\",\"Nelson\",\"66\",\"做大做强，走向辉煌\",\"2021-04-02\",\"好方\",\"60\",\"我们一起学猫叫，一起喵喵喵喵喵~\",\"2021-04-02\",\"哼干嘛\",\"20\",\"加入的第一个组织，感谢猫大人\",\"2021-04-01\",\"静晓晨曦\",\"20\",\"支持猫大人，祝福社区越来越好\",\"2021-03-31\",\"Attract\",\"20\",\"聊表心意，祝福社区越来越好\",\"2021-03-31\",\"杨大侠\",\"60\",\"跟着猫大人搞开源\",\"2021-03-31\",\"ian\",\"200\",\"Dromara 最棒\",\"2021-03-31\",\"白\",\"20\",\"2021-03-31\",\"静静\",\"80\",\"强\",\"2021-03-31\",\"blizzard\",\"20\",\"感谢猫大人花费巨大的心血\",\"2021-03-31\",\"Jenkins\",\"100\",\"参加开源，共建社区\",\"2021-03-31\",\"Sean\",\"128\",\"祝社区越走越远\",\"2021-03-31\",\"肖邦\",\"20\",\"全力支持参与开源贡献自己的微博力量\",\"2021-03-31\",\"Ted 丶 L\",\"100\",\"祝社区越办越好\",\"2021-03-31\",\"hb\",\"60\",\"支持开源\",\"2021-03-31\",\"大黄蜂\",\"60\",\"感谢猫大人，请猫大人抽根华子\",\"2021-03-30\",\"半盏清茶\",\"20\",\"越来越好\",\"2021-03-30\",\"小旭\",\"20\",\"2021-03-30\",\"阳有白\",\"60\",\"请猫大人喝几吨白开水\",\"2021-03-30\",\"韩小波\",\"20\",\"中国开源加油\",\"2021-03-30\",\"Vilochen\",\"60\",\"希望猫大人的开源组织越来越壮大\",\"2021-03-30\",\"滴流乱转的小胖子\",\"60\",\"向猫大人老师致敬\",\"2021-03-30\",\"泊\",\"20\",\"支持猫大人的开源\",\"2021-03-30\",\"赵瑞\",\"20\",\"2021-03-30\",\"心想事成\",\"1\",\"2021-03-30\",\"李\",\"20\",\"支持一下\",\"2021-03-30\",\"Yul\",\"20\",\"2021-03-30\",\"bing\",\"20\",\"2021-03-30\",\"榕\",\"20\",\"2021-03-30\",\"keepCarry\",\"160\",\"dromara 永存\",\"2021-03-30\",\"xiaochun\",\"20\",\"猫大人加油，看好你哦\",\"2021-03-30\",\"梁超-ISAAC\",\"20\",\"支持支持\",\"2021-03-30\",\"子豪 sirius\",\"20\",\"支持开源\",\"2021-03-30\",\"瓦让\",\"80\",\"大家一起加油\",\"2021-03-30\",\"wyj\",\"20\",\"支持支持\",\"2021-03-30\",\"小小的太阳\",\"20\",\"猫大人牛批\",\"2021-03-30\",\"小雨淅淅\",\"20\",\"请猫大人喝奶茶\",\"2021-03-30\",\"苦了芥末\",\"20\",\"2021-03-30\",\"成龙\",\"50\",\"谢谢猫大人对于开源的贡献，感谢引路\",\"2021-03-30\",\"Chasen\",\"80\",\"哈哈，支持支持\",\"2021-03-30\",\"Menglg\",\"20\",\"2021-03-30\",\"闫兵\",\"66.66\",\"2021-03-30\",\"王一飞\",\"60\",\"2021-03-30\",\"张民鹏\",\"60\",\"祝 Dromara 社区越办越好\",\"2021-03-30\",\"Jasper\",\"60\",\"猫大人牛逼！\",\"2021-03-30\",\"子不语\",\"60\",\"一直想做开源，这也是离我最近的社区，社区加油！\",\"2021-03-30\",\"阿行\",\"20\",\"猫大人的小迷弟\",\"2021-03-30\",\"Wincher\",\"10.24\",\"为往圣继绝学\",\"2021-03-30\",\"Marcus\",\"20\",\"一个人可能走的更快，但一群人会走得更远\",\"2021-03-30\",\"欧葵\",\"60\",\"猫大人加油\",\"2021-03-30\",\"有。无。\",\"20\",\"2021-03-30\",\"哲一\",\"20\",\"2021-03-30\",\"刘耿华\",\"66\",\"猫大人牛逼\",\"2021-03-30\",\"乔帝鸽\",\"20\",\"做大做强，再创辉煌\",\"2021-03-30\",\"和尘同光\",\"20\",\"请猫大人喝咖啡\",\"2021-03-30\",\"~zZZachary\",\"60\",\"2021-03-30\",\"唐甜\",\"20\",\"跟着猫大人做开源\",\"2021-03-30\",\"小程故事多\",\"60\",\"加油，一如既往的支持\",\"2021-03-30\",\"东东\",\"60\",\"做大做强\",\"2021-03-30\",\"Truing\",\"20\",\"猫大人牛逼\",\"2021-03-30\",\"sikm\",\"20\",\"为往圣继绝学，大风起不可当石立\",\"2021-03-30\",\"One Day\",\"299\",\"2021-03-30\",\"jihe\",\"20\",\"开源冲\",\"2021-03-30\",\"豆豆\",\"99.99\",\"支持开源\",\"2021-03-30\",\"斯普特尼克\",\"60\",\"祝社区越来越繁荣\",\"2021-03-30\",\"orange\",\"20\",\"猫大人帅气\",\"2021-03-30\",\"钟如雷\",\"200\",\"请老板抽和天下\",\"2021-03-30\",\"Goku\",\"20\",\"加油，愿社区越来越好\",\"2021-03-30\",\"Try Everything\",\"20\",\"支持猫大人\",\"2021-03-30\",\"郡鸿\",\"20\",\"支持猫大人，支持开源\",\"2021-03-30\",\"FangQ\",\"20\",\"猫大人加油，Dromara 加油\",\"2021-03-30\",\"cycle\",\"120\",\"愿中国的开源事业越来越好，猫大人及其同仁们威武\",\"2021-03-30\",\"夜羽\",\"20\",\"向开源精神，脱帽致敬\",\"2021-03-30\",\"SUDONG\",\"80\",\"2021-03-30\",\"婷\",\"20\",\"猫大人牛批，超大声！\",\"2021-03-30\",\"Tusi\",\"20\",\"2021-03-30\",\"任富飞\",\"88\",\"越来越好\",\"2021-03-30\",\"时间会咬人\",\"60\",\"再接再励，做大做强\",\"2021-03-30\",\"sakila\",\"60\",\"猫大人抽华子\",\"2021-03-30\",\"虎宝\",\"66.66\",\"婷宝&虎宝，崔猫求疵\",\"2021-03-30\",\"一条小青龙\",\"20\",\"请猫大人吃鸡排\",\"2021-03-30\",\"徐培\",\"60\",\"请猫大人抽华子\",\"2021-03-30\",\"pengshao\",\"20\",\"猫大人加油\",\"2021-03-30\",\"F.C\",\"20\",\"猫大人威武，祝 Dromara 社区越办越好\",\"2021-03-30\",\"hellboy0621\",\"66.66\",\"为往圣继绝学\",\"2021-03-30\",\"吴哭哭\",\"60\",\"精神股东\",\"2021-03-30\",\"不忘初心\",\"120\",\"2021-03-29\",\"陈宏\",\"20\",\"2021-03-29\",\"恬恬好甜\",\"20\",\"2021-03-29\",\"瑞\",\"120\",\"2021-03-29\",\"Uncle George\",\"10.24\",\"2021-03-29\",\"Tree\",\"20\",\"2021-03-29\",\"Shallwetalk\",\"20\",\"2021-03-29\",\"莫生\",\"60\",\"请猫大人抽包华子\",\"2021-03-29\",\"YEZJ\",\"20\",\"2021-03-29\",\"Silent\",\"60\",\"2021-03-29\",\"SIGN\",\"20\",\"猫大人的狸猫\",\"2021-03-29\",\"张*\",\"20\",\"2021-03-29\",\"荼九\",\"66\",\"2021-03-29\",\"？\",\"20\",\"2021-03-29\",\"睡觉大王小汤\",\"1\",\"2021-03-29\",\"守候\",\"20\",\"猫大人牛逼\",\"2021-03-29\",\"Bruce\",\"10\",\"2021-03-29\",\"晏鹏\",\"10.24\",\"猫大人加油\",\"2021-03-29\",\"一条小路的距离\",\"20\",\"猫大人的华子\",\"2021-03-29\",\"嘉宝\",\"80\",\"请师父喝咖啡\",\"2021-03-29\",\"PeiXy\",\"60\",\"猫大人的胸毛\",\"2021-03-29\",\"L3nvy\",\"13\",\"猫大人 lol 分队第一塞拉斯\",\"2021-03-29\",\"comforyo\",\"20\",\"2021-03-29\",\"莫白\",\"9.99\",\"感恩\",\"2021-03-29\",\"做成一件小事\",\"20\",\"猫大人的小学徒\",\"2021-03-29\",\"zendwang\",\"20\",\"2021-03-29\",\"星尘\",\"9.99\",\"气氛搞起来\",\"2021-03-29\",\"萧\",\"60\",\"为往圣继绝学\",\"2021-03-29\",\"陈龙\",\"20\",\"开源无敌，拒绝 996\",\"2021-03-29\",\"**涛\",\"50\",\"2021-03-29\",\"yarne\",\"66.66\",\"共同的事业，深深的友情\",\"2021-03-29\",\"E.S.\",\"60\",\"大锅，喝阔落！\",\"2021-03-29\",\"东江 DJ\",\"20\",\"2021-03-29\",\"ZhW\",\"20\",\"2021-03-29\",\"Mr...犯\",\"20\",\"2021-03-29\",\"林\",\"20\",\"2021-03-29\",\"天地\",\"20\",\"2021-03-29\",\"项峥\",\"20\",\"猫大人牛逼\",\"2021-03-29\",\"Easley\",\"200\",\"猫大人牛逼\",\"2021-03-29\",\"秦旭\",\"60\",\"2021-03-29\",\"Neal\",\"20\",\"猫大人的错别字检查员\",\"2021-03-29\",\"Chovi.Wu\",\"10.24\",\"表哥加油\",\"2021-03-29\",\"Niverkk\",\"20\",\"2021-03-29\",\"～阿槑～\",\"20\",\"2021-03-29\",\"Witt\",\"20\",\"支持猫大人\",\"2021-03-29\",\"屈仁能\",\"218.88\",\"猫大人家的菜鸟\",\"2021-03-29\",\"侯瑞哲\",\"20\",\"请猫大人喝咖啡\",\"2021-03-29\",\"Phoenix\",\"20\",\"感谢猫大人带我们认识开源\",\"2021-03-29\",\"黄放\",\"20\",\"为往圣继绝学\",\"2021-03-29\",\"那会\",\"20\",\"感谢猫大人\",\"2021-03-29\",\"Liquid\",\"20\",\"2021-03-29\",\"audi\",\"15\",\"喵小喵\",\"2021-03-29\",\"KaitoShy\",\"6.66\",\"2021-03-29\",\"氺\",\"20\",\"2021-03-29\",\"Ncy\",\"20\",\"喵喵喵\",\"2021-03-29\",\"HelloWorld\",\"20\",\"靡不有初，鲜克有终\",\"2021-03-29\",\"孙龙\",\"60\",\"2021-03-29\",\"maybe\",\"10.24\",\"2021-03-29\",\"biao\",\"20\",\"2021-03-29\",\"BetterWp\",\"66.66\",\"跟着猫大人冲\",\"2021-03-29\",\"502819\",\"20\",\"猫大人威武霸气\",\"2021-03-29\",\"Z\",\"10\",\"猫大人抽华子\",\"2021-03-29\",\"陈曦\",\"66.66\",\"2021-03-29\",\"一朵云\",\"20\",\"2021-03-29\",\"姜吉宁\",\"60\",\"做大做强\",\"2021-03-29\",\"飞鸿雪泥\",\"60\",\"开源万岁\",\"2021-03-29\"]},\"309\":{\"h\":\"成员\"},\"310\":{\"h\":\"Apache ShenYu 2.6.0 Released！\"},\"311\":{\"h\":\"关于 Apache ShenYu\",\"t\":[\"Apache ShenYu 一款使用 Java Reactor 开发的响应式API 网关。以其高性能，动态灵活的流量管控，热插拔，易部署等特性，开箱即用为用户提供整套全生命周期的 API网关，包含 API注册、服务代理、协议转换、API文档与 API治理等功能。Apache ShenYu 于2022年7月毕业成为Apache顶级项目。\",\"官网: https://shenyu.apache.org GitHub: https://github.com/apache/shenyu\"]},\"312\":{\"h\":\"版本预览\",\"t\":[\"时隔半年，Apache ShenYu发布了 2.6.0 版本，该版本共计提交了280+个 Pull Request,新增约20+个新特性，新增了若干增强，重构了若干功能，并且修复了若干个 bug。共计78位贡献者参与其中，累计贡献者达 350+位。\",\"版本记录：https://github.com/apache/shenyu/compare/v2.5.1…v2.6.0\"]},\"313\":{\"h\":\"新特性\",\"t\":[\"1.支持插件上传功能，支持网关热加载插件\",\"具体使用请查看：https://shenyu.apache.org/zh/docs/next/developer/custom-plugin\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4392\",\"2.支持使用 Apollo 作为数据同步和注册中心\",\"sheneyu: sync: apollo: appId: shenyu meta: http://localhost:8080 env: dev clusterName: test namespace: application \",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4532\",\"3.支持 springboot client 在 shenyu client 中动态配置\",\"4.添加 TCP 插件\",\"具体使用请查看：https://shenyu.apache.org/zh/docs/next/plugin-center/proxy/tcp-plugin\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4607\",\"https://github.com/apache/shenyu/pull/4766\",\"5.支持 springmvn(boot)在 shenyu client 中收集 api-meta data\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4600\",\"6.添加 shenyu ingress controller 的支持\",\"具体使用请查看：https://shenyu.apache.org/zh/docs/user-guide/kubernetes-controller/build-deploy\",\"https://shenyu.apache.org/zh/docs/user-guide/kubernetes-controller/config\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4620\",\"配置如下：\",\"shenyu: netty: http: sni: enabled: true mod: k8s #k8s模式适用 defaultK8sSecretNamespace: shenyu-ingress #默认secret资源的namespace defaultK8sSecretName: default-cert #默认secret资源名字 \",\"7.添加 zookeeper,naocs,apollo,HttpLongPolling,consul 作为 shenyu 服务发现\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4636\",\"https://github.com/apache/shenyu/pull/4657\",\"https://github.com/apache/shenyu/pull/4802\",\"https://github.com/apache/shenyu/pull/4795\",\"https://github.com/apache/shenyu/pull/4800\",\"https://github.com/apache/shenyu/issues/4562\",\"8.添加华为云 lts 日志收集\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4812\",\"9.添加 opengauss 数据库支持\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4856\",\"10.添加 polaris 作为 shenyu 的数据同步和注册中心\",\"shenyu: sync: polaris: url: 127.0.0.1:8093 namespace: fileGroup: \",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4410\",\"https://github.com/apache/shenyu/pull/4897\",\"11.添加 shenyu 匹配缓存\",\"shenyu: selectorMatchCache: ## selector L1 cache cache: enabled: false initialCapacity: 10000 # initial capacity in cache maximumSize: 10000 # max size in cache ## selector L2 cache, use trie as L2 cache trie: enabled: false cacheSize: 128 # the number of plug-ins matchMode: antPathMatch ruleMatchCache: ## rule L1 cache cache: enabled: true initialCapacity: 10000 # initial capacity in cache maximumSize: 65536 # max size in cache ## rule L2 cache, use trie as L2 cache trie: enabled: false cacheSize: 1024 # the number of selectors matchMode: antPathMatch \",\"具体使用请查看：https://shenyu.apache.org/zh/docs/next/user-guide/property-config/client-property-config\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4417\",\"https://github.com/apache/shenyu/pull/4536\",\"12.新增 shenyu admin 对 prometheus 的支持\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4336\",\"13.暴露 shenyu actuator 端点\",\"说明：可通过 pr 查看 shenyu 网关的内存数据\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4637\",\"如何关闭请查看 actuator 配置：\",\"management: endpoints: web: exposure: include: \\\"*\\\" # or health,info \"]},\"314\":{\"h\":\"增强\",\"t\":[\"1.对 API doc client 增加 tags 属性\",\"具体使用请查看：https://shenyu.apache.org/docs/user-guide/api-doc/shenyu-annotation-apidoc\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4362\",\"2.添加 Brpc 的集成测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4319\",\"3.Brpc 支持共享线程池\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4402\",\"4.为加密插件(cryptorRequst 和 cryptorResponse)增加映射类型\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4418\",\"5.加密插件支持多个个字段加密\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4435\",\"6.添加 p2c 负载均衡算法\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4451\",\"7.使用 base64 生成插件字符串，并存储到插件数据中\",\"具体使用请查看：https://shenyu.apache.org/zh/docs/next/developer/custom-plugin\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4473\",\"8.添加最短响应负载均衡算法\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4488\",\"9.添加 hash 负载均衡测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4383\",\"10.添加DetailSerivice测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4450\",\"11.提供宽泛的路径策略\",\"具体配置如下：\",\"shenyu: switchConfig: local: true collapseSlashes: false #true表示开启宽泛路径支持 \",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4522\",\"12.添加 shenyu-common 的 enums 包测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4541\",\"13.添加 shenyu-common 的 dto 包测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4549/\",\"14.添加 Add shenyu-admin 的 model 包测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/issues/4540\",\"15.添加 shenyu match cache 测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4557\",\"16.支持 k8s 探针\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4567\",\"17.添加 shenyu-admin 的 service 包测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4579\",\"18.在 API 文档中添加 json 支持\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4591\",\"19.mock 插件的 SPEL 默认为安全的\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4606\",\"20.添加ShenyuClientApiDocExecutorSubscriber的测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4632\",\"21.为 shenyu-client-sofa 模块添加测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4688\",\"22.为shenyu api doc添加tag relation\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4362\",\"23.添加 windows 下的启动、停止脚本\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4673\",\"24.添加ShenyuSdkClientFactory的测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4645\",\"25.添加 shenyu e2e springcloud plugin 的 websocket 同步支持\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4698\",\"26.支持 divide 插件自动下线\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4702\",\"27.添加 springcloud service instance 缓存\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4705\",\"具体使用请查看：https://shenyu.apache.org/zh/docs/next/plugin-center/proxy/spring-cloud-plugin\",\"shenyu: springCloudCache: enabled: false # 为true是开启springcloud缓存 \",\"28.更改密码支持 i18n\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4758\",\"29.shenyu discovery 支持 websocket 同步\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4768\",\"30.升级springboot版本到2.7.13\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4783\",\"31.为 e2e-springcloud 添加 nacos，zookeeper 同步测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4747\",\"32.添加api doc client注解生成属性\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4845\",\"33.支持zookeeper客户端自动下线\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4806\",\"34.支持Apollo client自动下线\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4855\",\"35.支持 swagger 文档，并将文档存储到数据库\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4849\",\"36.支持nacos client自动下线\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4890\",\"37.添加 alibaba dubbo e2e 测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4859\",\"38.添加 apache dubbo e2e 测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4899\",\"39.添加 shenyu spring sdk 测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4913\",\"40.添加 sofa e2e 测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4919\",\"41.添加 Apollo 数据同步的测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4918\",\"42.添加数据库的连接池配置(hakari)\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4938\",\"43.为 shenyu 添加idea icon\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4951\"]},\"315\":{\"h\":\"重构\",\"t\":[\"1.重构 shenyu admin\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4355\",\"2.优化 least active balance 算法\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4342\",\"3.优化 shenyu sign 插件的第一个版本的兼容性\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4332\",\"具体使用请查看：https://shenyu.apache.org/docs/plugin-center/security/sign-plugin\",\"4.优化 shenyu upstream check 逻辑\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4386\",\"5.优化项目的全局版本\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4394\",\"6.优化ShenyuConsulConfigWatch的代码\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4400\",\"7.优化 shenyu 前缀树匹配逻辑\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4414\",\"8.优化 rule condition 提交时的校验\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4403\",\"9.优化 shenyu-client-websocket 的客户端注册代码\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4462\",\"10.添加 shenyu admin 依赖 Micrometer 的许可证\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4409\",\"11.更新 maven-assembly-plugin 打包插件到 3.5.0 版本\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4673\",\"12.优化全局插件的排序\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4429\",\"13.在 shenyu admin 中使用 BearerToken 替代 StatelessToken\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4516\",\"14.重构 shenyu-logging 模块\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4526\",\"15.对 api doc 支持校验\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4564\",\"16.优化 shenyu 前缀树，并支持*匹配\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4569\",\"17.优化插件的热加载\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4392\",\"18.优化ShenyuWebHandler的 putPlugin 方法\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4598\",\"19.重构 Shenyu webfilter\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4614\",\"20.重构 oauth2 plguin 插件\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4624\",\"21.重构 shenyu 选择器的 continued 字段\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4635\",\"22.重构 shenyu 选择和规则的匹配缓存\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4578\",\"23.删除了 shenyu 客户端中未使用的泛型\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4653\",\"24.重构 shenyu 对 sentinel 插件的支持\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4669\",\"25.将缓存数据通过 actuator 端点暴露\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4637\",\"https://github.com/apache/shenyu/pull/4658\",\"26.重构checkUserPassword方法，启动时不打印已知错误日志\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4697\",\"27.添加打印日志的参数\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4637\",\"28.重构 shenyu 全局异常处理\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4709\",\"29.添加了 shenyu 插件上传的集成测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4679\",\"30.优化语法糖\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4700\",\"31.优化 discovery_upstream 的 discovery_handler_id 字段\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4710\",\"32.重构 shenyu-plugin 模块，将 proxy 插件分类归档\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4765\",\"33.重构AlibabaDubboConfigCache的缓存\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4772\",\"34.移除 hutool 的依赖\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4773\",\"35.重构ShenyuClientShutdownHook\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4780\",\"36.Extractor 添加 BaseAnnotationApiBeansExtractor\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4787\",\"37.支持多客户端注册\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4790\",\"38.重构 Shenyu-e2e 支持 Shenyu 的 check style\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4799\",\"39.优化 shenyu 客户端注册逻辑\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4809\",\"40.添加 shenyu divide 插件的域名测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4803\",\"41.更新 rpc_ext 字段的扩展\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4821\",\"42.优化 consul 的连接操作\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4832\",\"43.重构 shenyu e2e 的 springcloud 的 yaml 添加方式\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4837\",\"44.为 k8s ingress controller 添加集成测试\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4820\",\"45.拆分 apidoc 明细接口的 document 字段，增加 requestHeaders、responseParameters 等字段\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4865\",\"46.加 swagger 示例项目，测试 API 文档的相关功能\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4825\",\"47.优化 shenyu admin 的 json 格式表单字段的显示\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4873\",\"48.重构 shenyu 日志可观测性\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4874\",\"49.添加 bootstrap 启动日志\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4879\",\"50.重构 swagger 的 api 文档\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4892\",\"51.升级 grpc 版本至 1.53.0\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4841\",\"52.重构 api 元数据处理函数\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4948\",\"53.优化代码和 pom 依赖\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4945\"]},\"316\":{\"h\":\"Bug 修复\",\"t\":[\"1.优化 h2 的路径\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4351\",\"2.修复加密响应插件的调用错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4331\",\"3.修复 jdk8 Map computeIfAbsent 性能 bug\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4338\",\"4.修复 zombieRemovalTimes 代码\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4368\",\"5.修复升级后的 sql 错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4374\",\"6.删除 detectorOfflineLinks 标签\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4382\",\"7.忽略扁平化的 pom\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4390\",\"8.修复 LOG 调用方法\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4387\",\"9.使用 nacos 修复 sheyu-example-springcloud 的 NPE\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4396\",\"10.修复 Shenyu-admin 名称的类型争论\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4340\",\"11.修复负载平衡 spi 资源\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4411\",\"12.修复 sql 脚本错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4412\",\"13.修复 jackson 的 24 小时格式和时区\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4413\",\"14.修复 JwtUtils 错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4420\",\"15.修复 dubbo 调用者缓存 bug\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4433\",\"16.修复丢失 HOST 的删除操作\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4425\",\"17.修复 SpringMvcClientEventListener 测试用例\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4252\",\"18.修复 zombie 更新 PENDING_SYNC 的错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4430\",\"19.修复 windlfu 的内存泄漏\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4486\",\"20.修复因规则过多导致规则查询失败的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4499\",\"21.修复示例 http 中缺少执行器依赖项和端口错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4506\",\"22.修复 UpstreamCheckUtils 的 http 和 https 错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4509\",\"23.修复 FileFilter 造成内存泄漏的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4507\",\"24.修复 zookeeper 同步错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4906\",\"25.修复 MemorySafeWindowTinyLFUMap 内存泄漏错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4524\",\"26.修复 ApiDoc 路径缺少分隔符的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4528\",\"27.修复 shenyu trie 的 NPE\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4533\",\"28.修复插件跳过错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4589\",\"29.修复 oracle sql 错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4595\",\"30.修复 shenyu admin 中无法加载 shenyu 图标的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4605\",\"31.修复 hystrix fallback 的 bug\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4593\",\"32.修复 divide 和 springcloud 的预热时间\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4619\",\"33.修复 springcloud 服务选择器\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4639\",\"34.修复 shenyu-spring-boot-starter-plugin-mock 添加 spring.factories\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4644\",\"35.修复 shenyu-client-mvc 和 shenyu-client-springcloud 丢失 ip\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4681\",\"36.修复缓存中规则数据和选择器数据为空的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4716\",\"37.修复 api 文档模块更新 api 详情错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4720\",\"38.修复从 KafkaLogCollectClient 中的配置获取 topic\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4756\",\"39.修复 loggingConsole 插件的线程安全问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4763\",\"40.修复 brpc 集成测试响应大小\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4784\",\"41.修复 plugn-dubbo-common 的选择器更新灰色发布删除缓存的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4762\",\"42.修复 shenyu admin 菜单名称 bug\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4805\",\"43.修复 shenyu admin 无法配置 consul 端口的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4843\",\"44.修复 shenyu 客户端元数据和 uri 无法与 apollo 同步到 admin 的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4851\",\"45.修复 PathVariable 注解 url 无法匹配的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4852\",\"46.修复 PathPattern 模式下无法更新 uri 的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4854\",\"47.修复客户端关闭方法调用两次\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4867\",\"48.修复 shenyu 错误处理 consul 配置\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4872\",\"49.从 Request、modifyResponse 插件中删除未使用的配置\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4882\",\"50.修复 http 注册元数据错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4889\",\"51.修复 websocket 丢失用户自定义关闭状态的问题\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4844\",\"52.修复 consul 寄存器在特殊符号时丢失元路径的属性\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4885\",\"53.修复 etcd 同步错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4911\",\"54.修复 shenyu admin 多次同步事件错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4941\",\"55.修复 Shenyu motan 插件执行错误\",\"具体 pr 请查看：https://github.com/apache/shenyu/pull/4934\"]},\"317\":{\"h\":\"贡献者\",\"t\":[\"特别感谢以下贡献者对 2.6.0版本的支持和参与（排名不分先后）。\",\"midnight2104,koonchen,847850277,balloon72,yu199195,iwangjie,damonxue,tian-pengfei,caojiajun,dragon-zhang,u3breeze,li-keguo,SuperMonkeyC,mahaitao617,tomsun28,moremind,liaolzy,Ceilzcx,misaya295,BoyuLi4,HaiqiQin,starlight2003,stulzq,ywj1352,yunlongn,aFlyBird0,dengliming,plutokaito,xuyicheng1995,lan-dian,sachin10fi,zuobiao-zhou, hudongdong129,crudboy,aoshiguchen,VampireAchao,JooKS-me,Redick01,huanccwang,lijay7674,omernaci,peng-heng,December-Pb,6freeair2016,jieyangxchen,lianjunwei,u3breeze,eurecalulu,wanyaoasiainfo,wanyaoasiainfo,Kakk22,xuziyang,menglujing,xcsnx,yu1183688986,lahmXu,fabian4,ileonli,VampireAchao,GOODBOY008,TeslaCN\"]},\"318\":{\"h\":\"成为贡献者\",\"t\":[\"我们欢迎每一位贡献者的加入 ShenYu，欢迎贡献者以 Apache Way 的精神参与 ShenYu！\",\"贡献者指南请参考：\",\"https://shenyu.apache.org/zh/community/contributor-guide\"]},\"319\":{\"h\":\"轻量级 Mysql Binlog 客户端 Binlog4j 加入 Dromara 社区\"},\"320\":{\"h\":\"项目介绍\",\"t\":[\"Binlog4j 是一款提供宕机续读，高可用集群，数据转换的 Binlog 客户端。\"]},\"321\":{\"h\":\"项目特性\",\"t\":[\"集群模式, 通过集群部署的方式，保证服务高可用。\",\"宕机续读, 避免宕机期间造成数据丢失。\",\"数据转换, 基于泛型封装 BinlogEvent 的序列化数据。\",\"兼容 传统项目 与 Spring Boot / Cloud 项目。\",\"兼容 Spring Boot 2.x 与 Spring Boot 3.x 版本。\"]},\"322\":{\"h\":\"应用场景\",\"t\":[\"包括但不限于（1）数据同步（2）实时计算（3）数据审计（4）数据分析\"]},\"323\":{\"h\":\"下载安装\",\"t\":[\"<dependency> <groupId>com.gitee.Jmysy</groupId> <artifactId>binlog4j-core</artifactId> <version>latest.version</version> </dependency> \"]},\"324\":{\"h\":\"简单使用\",\"t\":[\"通过 BinlogClient 创建客户端，IBinlogEventHandler 处理事件通知，该接口支持泛型，数据将遵循驼峰格式封装。\",\"public class BootStrap { public static void main(String[] args) { BinlogClientConfig clientConfig = new BinlogClientConfig(); clientConfig.setHost(\\\"127.0.0.1\\\"); clientConfig.setPort(3306); clientConfig.setUsername(\\\"root\\\"); clientConfig.setPassword(\\\"taoren@123\\\"); clientConfig.setServerId(1990); IBinlogClient binlogClient = new BinlogClient(clientConfig); binlogClient.registerEventHandler(\\\"database\\\", \\\"table\\\", new IBinlogEventHandler() { @Override public void onInsert(BinlogEvent event) { System.out.println(\\\"插入数据:{}\\\", event.getData()); } @Override public void onUpdate(BinlogEvent event) { System.out.println(\\\"修改数据:{}\\\", event.getData()); } @Override public void onDelete(BinlogEvent event) { System.out.println(\\\"删除数据:{}\\\", event.getData()); } }); binlogClient.connect(); } } \"]},\"325\":{\"h\":\"高级特性\",\"t\":[\"通过 Persistence 配置为 true 启用宕机续读功能, Binlog4j 会将 binlog 的 filename 与 position 记录到 redis, 同时你需要提供 Redis 配置。\",\"public class BootStrap { public static void main(String[] args) { RedisConfig redisConfig = new RedisConfig(); redisConfig.setHost(\\\"127.0.0.1\\\"); redisConfig.setPort(6379); redisConfig.setPassword(\\\"taoren@123\\\"); BinlogClientConfig clientConfig = new BinlogClientConfig(); clientConfig.setHost(\\\"127.0.0.1\\\"); clientConfig.setPort(3306); clientConfig.setUsername(\\\"root\\\"); clientConfig.setPassword(\\\"taoren@123\\\"); clientConfig.setServerId(1990); clientConfig.setRedisConfig(redisConfig); clientConfig.setPersistence(true); clientConfig.setMode(BinlogClientMode.cluster); BinlogClient binlogClient = new BinlogClient(clientConfig); binlogClient.registerEventHandler(\\\"database\\\", \\\"table\\\", new IBinlogEventHandler<User>() { @Override public void onInsert(BinlogEvent<User> event) { System.out.println(\\\"插入数据:{}\\\", event.getData()); } @Override public void onUpdate(BinlogEvent<User> event) { System.out.println(\\\"修改数据:{}\\\", event.getData()); } @Override public void onDelete(BinlogEvent<User> event) { System.out.println(\\\"删除数据:{}\\\", event.getData()); } }); binlogClient.connect(); } } \"]},\"326\":{\"h\":\"在 Spring Boot 集成\",\"t\":[\"<dependency> <groupId>com.gitee.Jmysy</groupId> <artifactId>binlog4j-spring-boot-starter</artifactId> <version>latest.version</version> </dependency> \",\"首先，在 application.yml 或 application.properties 中填写 Binlog4j 配置\",\"spring: binlog4j: redis-config: host: 127.0.0.1 port: 6379 password: taoren@123 client-configs: master: username: root password: taoren@123 host: 127.0.0.1 port: 3306 serverId: 1990 slave: username: root password: taoren@123 host: 127.0.0.1 port: 3306 serverId: 1991 \"]},\"327\":{\"h\":\"单表监听\",\"t\":[\"使用 @BinlogSubscriber 注解, 指定 IBinlogEventHandler 需要注册到哪个客户端, 并且指定监听的 database 与 table。\",\"@BinlogSubscriber(clientName = \\\"master\\\", database = \\\"pear-admin\\\", table =\\\"sys_user\\\") public class UserEventHandler implements IBinlogEventHandler<User> { @Override public void onInsert(BinlogEvent<User> event) { System.out.println(\\\"插入数据：\\\" + event.getData()); } @Override public void onUpdate(BinlogEvent<User> event) { System.out.println(\\\"修改数据:\\\" + event.getData()); } @Override public void onDelete(BinlogEvent<User> event) { System.out.println(\\\"删除数据:\\\" + event.getData()); } } \"]},\"328\":{\"h\":\"复杂监听\",\"t\":[\"@BinlogSubscriber 注解 database 与 table 属性支持 Pattern 匹配, IBinlogEventHandler 在不指定泛型的情况下, event.getData() 为 Map<String, Object> 类型, 用于兼容不同表的数据结构。\",\"@BinlogSubscriber(clientName = \\\"master\\\", database = \\\"pear-admin\\\", table =\\\"sys_user\\\") public class UserEventHandler implements IBinlogEventHandler<User> { @Override public void onInsert(BinlogEvent<User> event) { System.out.println(\\\"插入数据：\\\" + event.getData()); } @Override public void onUpdate(BinlogEvent<User> event) { System.out.println(\\\"修改数据:\\\" + event.getData()); } @Override public void onDelete(BinlogEvent<User> event) { System.out.println(\\\"删除数据:\\\" + event.getData()); } } \"]},\"329\":{\"h\":\"相关链接\",\"t\":[\"Gitee: https://gitee.com/dromara/binlog4j\"]},\"330\":{\"h\":\"云原生大数据平台CloudEon V1.1.0版本发布！\",\"t\":[\"CloudEon 社区的小伙伴们大家好，今天很高兴宣布 CloudEon 于 2023 年 7 月 28 日正式发布 1.1.0 版本。\",\"非常感谢 CloudEon 开源社区成员对 1.1.0 版本发布做出的贡献。\"]},\"331\":{\"h\":\"重要更新\",\"t\":[\"1.1.0 版本主要有如下重大更新：\",\"新增功能：\",\"支持 Kyuubi 服务,实现 Spark SQL 查询\",\"增加 Kyuubi 监控面板\",\"支持 Iceberg 数据湖功能,实现 Iceberg 在 Flink 和 Spark 上的集成\",\"支持 Elasticsearch 组件\",\"支持数据采集 seatunnel 组件\",\"支持 OLAP 组件 Kylin5\",\"支持实时计算 Dinky 组件\",\"优化改进：\",\"优化组件 Docker 镜像,精简大小\",\"改进节点 SSH 连接,支持指定私钥\",\"优化监控面板,修复多个面板问题\",\"优化部分组件的容器资源控制问题，包括 hbase/flink/spark/hive/yarn/hdfs/zookeeper\",\"修复缺陷：\",\"修复停止服务时角色 Pod 错乱的问题\",\"修复 Zookeeper 无法修改客户端端口的问题\",\"修复 HBase Shell 无法在 Pod 中使用的问题\",\"修复偶尔出现 ssh 导致的命令执行卡住问题\",\"修复 hive 容器缺失 mysql 驱动问题\",\"详情可查看：\",\"https://github.com/dromara/CloudEon/releases/tag/v1.1.0\"]},\"332\":{\"h\":\"安装部署\"},\"333\":{\"h\":\"Docker 部署（推荐）\",\"t\":[\"如果你本地已经安装了 docker，执行以下命令可以一键安装：\",\"docker run -p 7700:7700 --name cloudeon --rm registry.cn-hangzhou.aliyuncs.com/udh/cloudeon:v1.1.0 \",\"镜像启动成功后，在浏览器中访问 http://docker_ip:7700 进入登录页。镜像中提供初始账户，用户名 admin 密码 admin\",\"更多配置信息可以查看项目文档。\"]},\"334\":{\"h\":\"社区参与\",\"t\":[\"CloudEon 项目依靠社区发展，我们致力为用户提供简单易用的大数据产品，我们强调社区协作，互相帮助，共同成长。\",\"首先，如果您在下载和使用 CloudEon 1.1.0 中发现任何问题，欢迎使用 Github Issues 功能，将您遇到的问题和社区分享。\",\"https://github.com/dromara/CloudEon/issues\",\"如果您或者您的公司正在使用 CloudEon，并乐意与社区分享，可以在Who is using Cloudeon? 中进行留言。\",\"https://github.com/dromara/CloudEon/issues/20\",\"我们也接受其他任何形式的帮助，详见：\",\"https://docs.cloudeon.top/en/dev/社区贡献/contribute/\"]},\"335\":{\"h\":\"致谢\",\"t\":[\"CloudEon 1.1.0 版本的发布离不开所有社区成员的支持和反馈，在社区驱动的模式下，CloudEon 才得以有今天的发展态势，真诚地感谢每一位社区贡献者及用户的信任、支持和帮助。\",\"特别感谢对 1.1.0 版本直接贡献的社区成员：\",\"@Pandas886\",\"@limaiwang\",\"@KangTomwk\",\"@linshenkx\",\"@tgluon\",\"@Mericol\",\"@linzehao\",\"@wangkang1\",\"@pan3793\",\"@tangxiuhong\",\"另外感谢@wangkang1 贡献组件扩展文档，如果社区小伙伴有想要扩展组件的需求，可以参考文档：\",\"https://docs.cloudeon.top/en/dev/component\\\\_extension/\"]},\"336\":{\"h\":\"项目简介\",\"t\":[\"CloudEon 是一款基于 Kubernetes 的云原生大数据平台，旨在为用户提供一种简单、高效、可扩展的大数据解决方案。如果 CloudEon 项目对您有帮助，请在 Gitee 或 Github 搜索 CloudEon 支持一下，点击 star 加关注。\",\"CloudEon 遵循 Apache-2.0 开源协议，代码完全开源，如果您想为开源社区做出贡献，非常欢迎加入 CloudEon 项目，与其他开发者一起共同推动项目的发展。\",\"Gitee：https://gitee.com/dromara/CloudEon\",\"Github：https://github.com/dromara/CloudEon\",\"官网：https://cloudeon.top/\",\"欢迎加入社区技术交流\",\"公众号：CloudEon 开源\",\"微信社区：\"]},\"337\":{\"h\":\"云原生大数据平台CloudEon V1.2.0版本发布！\"},\"338\":{\"h\":\"新增功能（Features）：\",\"t\":[\"1. 实现用 k8s job 进行初始化服务任务，替换原来用 ssh 执行命令的方式，提高兼容性和更好监听状态和获取日志\",\"2. 增加 namespace 设置功能，不再写死 default namespace\",\"3. 集成新组件 Trino\",\"4. 集成新组件 Amoro\",\"5. 初步集成 filebeat 用于大数据服务的日志采集\",\"6. 实现下载服务实例配置文件接口\"]},\"339\":{\"h\":\"修复缺陷（Bug Fixes）：\",\"t\":[\"修复安装 dinky，SQL 脚本找不到问题\",\"修复 flink standalone 的 rest 地址无法外部访问\",\"修复 hdfs 组件的环境变量，导致 pod 内无法正常使用 hdfs 命令\",\"修复 flink 提交任务到 YARN 集群问题\"]},\"340\":{\"h\":\"优化改进（Enhancements）：\",\"t\":[\"组件 jvm 参数增加 gc 日志文件生成\",\"优化贡献文档\",\"优化任务日志输出，精简日志内容\",\"选择框架会自动显示内置的服务版本\",\"FAQ 文档增加去除节点污点方式\",\"优化 deployment 启动，删除无用日志打印\",\"优化 K8S 节点信息提取 hostname 和 ip，兼容 K8S 和 K3S\",\"[项目简介]\",\"CloudEon 是一款基于 Kubernetes 的云原生大数据平台，旨在为用户提供一种简单、高效、可扩展的大数据解决方案。如果 CloudEon 项目对您有帮助，请在 Gitee 或 Github 搜索 CloudEon 支持一下，点击 star 加关注。\",\"CloudEon 遵循 Apache-2.0 开源协议，代码完全开源，如果您想为开源社区做出贡献，非常欢迎加入 CloudEon 项目，与其他开发者一起共同推动项目的发展。\",\"Gitee：https://gitee.com/dromara/CloudEon\",\"Github：https://github.com/dromara/CloudEon\",\"官网：https://cloudeon.top/\",\"欢迎加入社区技术交流\",\"公众号：CloudEon 开源\",\"微信社区：\"]},\"341\":{\"h\":\"一站式问题定位解决平台 Cubic v1.4.5 发布\"},\"342\":{\"h\":\"此次版本更新主要功能：\",\"t\":[\"重点：新增自定义 ClassLoader,确保 agent 代码和业务代码分别由不同 Classloader 加载，避免互相污染\",\"剥离 agent 核心代码到单独 jar 包，增强隔离性，并为插件化做准备\",\"优化线程抓取功能的逻辑适配\",\"欢迎大家探讨 star\",\"Gitee: https://gitee.com/dromara/cubic\",\"Github: https://github.com/dromara/cubic\",\"官网地址：http://cubic.jiagoujishu.com\"]},\"343\":{\"h\":\"功能展示\"},\"344\":{\"h\":\"1、实例中心（展示当前实例信息）\"},\"345\":{\"h\":\"2、基础信息（点击实例-》展示当前实例的基础信息）\"},\"346\":{\"h\":\"3、依赖监控（点击实例-》展示当前实例的依赖包信息）\"},\"347\":{\"h\":\"4、Arthas 命令操作\"},\"348\":{\"h\":\"5、线程池监控\"},\"349\":{\"h\":\"6、实时线程栈\"},\"350\":{\"h\":\"7、历史线程栈\"},\"351\":{\"h\":\"Dante Cloud 2.7.11.0，全系更新核心组件及基础设置版本\",\"t\":[\"Dante Cloud 一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型(DDD)设计思想的、全面拥抱 Spring Authorization Server 的、基于 OAuth2.1 协议的微服务架构。基于 Spring Authorization Server 0.4.2、Spring Boot 2.7.11、Spring Cloud 2021.0.6、Spring Cloud Alibaba 2021.0.5.0、Nacos 2.2.2 等最新版本开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能\",\"平台定位\",\"构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。\",\"面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。\",\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。\",\"代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。\"]},\"352\":{\"h\":\"[1]、为什么更名为 Dante Cloud\",\"t\":[\"Dante Cloud (但丁)， 原项目名称 Eurynome Cloud，很多朋友都反映名字太长、读起来拗口、不容易记等问题。因此在加入 Dromara 开源社区之际，将名字进行了变更。\",\"Dante，即但丁·阿利基耶里(公元 1265 年-公元 1321 年)，13 世纪末意大利诗人，现代意大利语的奠基者，欧洲文艺复兴时代的开拓人物之一，以长诗《神曲》(原名《喜剧》)而闻名，后来一位作家叫薄伽丘将其命名为神圣的喜剧。\",\"他被认为是中古时期意大利文艺复兴中最伟大的诗人，也是西方最杰出的诗人之一，最伟大的作家之一。恩格斯评价说：“封建的中世纪的终结和现代资本主义纪元的开端，是以一位大人物为标志的，这位人物就是意大利人但丁，他是中世纪的最后一位诗人，同时又是新时代的最初一位诗人”\",\"更名为 Dante Cloud，寓意本项目会像恩格斯对但丁的评价一样，在行业变革的时期，可以成为一款承上启下，助力企业信息化建设变革的产品。\"]},\"353\":{\"h\":\"[2]、版本说明\",\"t\":[\"自 11 月 24 日，Spring Boot 3.0 以及 Spring Cloud 2022.0.0 等全新版本发布，整个 Java 社区也步入的 Java 17 和 Spring Boot 3 的新时代。紧跟 Java 技术和 Spring 社区的发展，让更多质量更好、性能更优的新特性服务于实际的开发工作，Dante Cloud 也同步进行升级及适配，开发了基于 Spring Authorization Server 1.1.0-RC1、Spring Boot 3.0.6、Spring Cloud 2022.0.2、Spring Cloud Alibaba 2022.0.0.0-RC1、Spring Cloud Tencent 1.11.1-2022.0.1、Nacos 2.2.2 全新 Dante Cloud 版本。关注请移步 3.0 分支\"]},\"354\":{\"h\":\"[3]、本次更新内容\",\"t\":[\"【主要更新】\",\"[升级] Spring Boot 版本升级至 2.7.11\",\"[升级] Spring Authorization Server 版本升级至 0.4.2\",\"[升级] Nacos 版本升级至 2.2.2\",\"[升级] Camunda 版本升级至 7.19.0，同步更新数据库脚本\",\"[升级] Skywalking Agent 版本升级至 8.15.0\",\"[升级] Debezium 版本及相关基础设施版本升级至 2.2\",\"【其它更新】\",\"[漏洞] 修复 Snakeyaml (CVE-2022-1471) 存在反序列化漏洞 和 (CVE-2022-41854) 存在缓冲区溢出漏洞\",\"[新增] 新增服务优雅停机支持\",\"[新增] 新增 MongoDB 基础 Entity、Repository、Service、Controller 和 MybatisPlus 基础 Controller，方便业务接口代码编写。\",\"[优化] 优化数据自动初始化脚本放置位置，与新版本代码创建数据表需要启动两个服务机制进行统一。\",\"[优化] Antisamy 版本升级至 1.7.3，同步升级 XSS 攻击防护策略配置文件\",\"[优化] 优化 Docker Compose 脚本配置\",\"[修复] 修复自定义社交登录模式中，微信小程序参数获取未补充错误。\",\"【依赖更新】\",\"[升级] snakeyaml 版本升级至 2.0.\",\"[升级] fastjson2 版本升级至 2.0.29\",\"[升级] wxjava 版本升级至 4.5.0\",\"[升级] hutool 版本升级至 5.8.18\",\"[升级] docker-maven-plugin 版本升级至 0.42.1\",\"[升级] redisson 版本升级至 3.20.1\",\"[升级] springdoc 版本升级至 1.7.0\",\"[升级] qiniu-java-sdk 版本升级至 7.13.0\",\"[升级] aliyun-sdk-oss 版本升级至 3.16.2\",\"[升级] tencentcloud-sdk-java-sms 版本升级至 3.1.744\",\"[升级] alipay-sdk-java 版本升级至 4.35.110.ALL\",\"[升级] xnio 版本升级至 3.8.9.Final\",\"[升级] bcprov-jdk15to18 版本升级至 1.73\",\"【升级说明】\",\"因仓库提交文件大小限制，所以从本次发布以后不再上传 Skywalking Agent 相关 Jar 包，有需要请自行下载。\",\"Release 详情 https://gitee.com/dromara/dante-cloud/releases/tag/v2.7.11.0\"]},\"355\":{\"h\":\"[4]、Dante Cloud 2.7.X 特点\"},\"356\":{\"h\":\"一、前端\",\"t\":[\"未使用任何流行开源模版，使用全新技术栈，完全纯\\\"手写\\\"全新前端工程。\",\"借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。\",\"充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 \\\"any\\\" 式的 Typescript 编程语言使用方式。\",\"充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。\",\"充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。\",\"对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。\",\"对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。\",\"提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。\",\"支持密码模式、授权码模式、手机短信模式、第三方社会化等多种登录模式。\"]},\"357\":{\"h\":\"二、后端\",\"t\":[\"基于 Spring Authorization Server 深度定制和扩展:\",\"基于 Spring Authorization Server 和 Spring Data JPA 实现多租户系统架构， 支持 Database 和 Schema 两种模式。\",\"基于 Spring Data JPA，重新构建 Spring Authorization Server 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 Spring Authorization Server 原有数据存储局限，扩展为更符合实际应用的方式和设计。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Resource Ownership Password (密码)认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 Refresh Token 的使用。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Social Credentials (社会化登录)认证模式，支持手机短信验证码、微信小程序、基于 JustAuth 的第三方应用登录， 支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现 Client Credentials 模式支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现真正的使用 Scope 权限对接口进行验证。增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦\",\"支持 Spring Authorization ServerAuthorization Code + PKCE 认证模式\",\"支持 Spring Authorization Server 的标准的 JWT Token 加密校验方式外，新增基于自定义证书的 JWT Token 加密校验方式，可通过配置动态修改。\",\"支持 Opaque Token (不透明令牌) 格式及校验方式，将低 JWT Token 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 Opaque Token 格式还是 JWT Token 格式。\",\"全面支持 OpenID Connect (OIDC) 协议, 系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式\",\"深度扩展 Authorization Code、Resource Ownership Password、Social Credentials 几种模式，全面融合 IdToken、Opaque Token、JWT Token 与现有权限体系，同时提供 IdToken 和 自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。\",\"自定义 Spring Authorization Server 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。\",\"基于 JetCache 的多级缓存支持，实现自定义 Spring Data JPA 二级缓存，有效解决 Spring Cache 查询缓存更新问题。\",\"全面整合 @PreAuthorize 注解权限与 URL 权限，通过后端动态配置，无须在代码中配置 Spring Security 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题\",\"采用分布式服务独立鉴权方案，Spring Security@PreAuthorize 的权限注解、权限方法以及 URL 权限，通过后端动态配置后，实时动态分发至对应服务。\",\"OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。\",\"基于自定义 Session，混合国密 SM2(非对称) 和 SM4(对称加密) 算法，实现秘钥动态生成加密传输。利用“一人一码机制”，实现密码模式登录数据进行动态加密传输。配合 OAuth2 Client 验证，保护接口调用和前后端数据传输的合理性及安全性。\",\"仓库地址：https://gitee.com/dromara/dante-cloud\"]},\"358\":{\"h\":\"Dante Cloud 3.0.6.4 发布，支持IOT设备的Device Flow认证上线\",\"t\":[\"Dante Cloud 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型(DDD)设计思想的、全面拥抱 Spring Authorization Server 的、基于 OAuth2.1 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 Spring Authorization Server 1.1.0、Spring Boot 3.1.0、Spring Cloud 2022.0.3、Spring Cloud Tencent 1.11.7-2022.0.1、Spring Cloud Alibaba 2022.0.0.0、Nacos 2.2.2 等主流技术栈开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能\",\"平台定位\",\"构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。\",\"面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。\",\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。\",\"代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。\",\"发布背景\",\"自 11 月 24 日，Spring Boot 3.0 以及 Spring Cloud 2022.0.0、Spring Cloud Tencent 等全新版本发布，整个 Java 社区也步入的 Java 17 和 Spring Boot 3 的新时代。紧跟 Java 技术和 Spring 社区的发展，让更多质量更好、性能更优的新特性服务于实际的开发工作，Dante Cloud 也同步进行升级及适配，开发了全新的 3.0 版本。\"]},\"359\":{\"h\":\"[1] 新特性背景\",\"t\":[\"OAuth2 Device Authorization Grant 认证模式，是在 OIDC 协议支持的模式中，专有的一类 Device Flow 设备模式，允许各类终端或硬件完成认证登录流程。\",\"Device Authorization Grant （设备授权授予）或 Device Flow 对于处理，例如：智能电视、IoT 设备或打印机等，输入受限终端或硬件的身份验证和授权非常有用。由于终端的显示模式可能受限，无法内置登录页面。通过 Device Flow 提供的超链接或者生成二维码，设备会让用户在另一台设备上的浏览器中访问一个网页，以进行登录。用户登录后，设备可以获取所需的访问令牌和刷新令牌。\"]},\"360\":{\"h\":\"[2] 本次更新内容\",\"t\":[\"【主要更新】\",\"[升级] Spring Authroization Server 版本升级至 1.1.0\",\"[升级] Spring Security 版本升级至 6.1.0\",\"[新增] 新增支持智能电视、IOT 设备等输入受限设备的 Device Flow 认证模式\",\"【其它更新】\",\"[新增] 新增 Device Flow 认证系统内置页面\",\"[新增] 新增 IOT 产品、设备管理 SDK\",\"[重构] 重构 Spring Authorization Server 授权确认页面，与内置认证页面统一风格。\",\"[重构] 除特殊依赖外，将所有内置页面静态资源引用改为 Webjars 方式。\",\"[重构] 所有内置页面均改用页面嵌入 Vue 方式重新实现\",\"[优化] 优化客户端动态自动注册相关功能代码及配置方式\",\"[优化] 优化数据库初始化脚本，增加 Spring Authorization Server 内置默认 Scope 数据及关联数据\",\"【依赖更新】\",\"[升级] fastjson2 版本升级至 2.0.32\",\"[升级] tencentcloud-sdk-java-sms 版本升级至 3.1.756\",\"[升级] aliyun-sdk-oss 版本升级至 3.16.3\",\"新特性界面预览\"]},\"361\":{\"h\":\"[3] Dante Cloud 3.0.0 后端新特性\"},\"362\":{\"h\":\"1. 核心基础依赖便捷切换\",\"t\":[\"新增 Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶等两种基础设施支持。\",\"新增 Spring Cloud Alibaba、Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。\"]},\"363\":{\"h\":\"2. 支持 GraalVM 原生镜像\",\"t\":[\"整体调整各类模块 pom build 配置，适当增加冗余重复配置，以支持 Spring Native 或 GraalVM 编译需要。规避对所有模块进行 Native 编译，而导致错误问题。\"]},\"364\":{\"h\":\"3. Spring Authorization Server 全特性支持及扩展\",\"t\":[\"基于 Spring Authorization Server 和 Spring Data JPA 实现多租户系统架构， 支持 Database 和 Schema 两种模式。\",\"基于 Spring Data JPA，重新构建 Spring Authorization Server 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 Spring Authorization Server 原有数据存储局限，扩展为更符合实际应用的方式和设计。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Resource Ownership Password (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 Refresh Token 的使用。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Social Credentials (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 JustAuth 的第三方应用登录， 支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现真正的使用 Scope 权限对接口进行验证。增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦\",\"支持 Spring Authorization ServerAuthorization Code PKCE 认证模式\",\"在 Spring Authorization Server 的标准的 JWT Token 加密校验方式外，支持基于自定义证书的 JWT Token 加密校验方式，可通过配置动态修改。\",\"支持 Opaque Token (不透明令牌) 格式及校验方式，将低 JWT Token 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 Opaque Token 格式还是 JWT Token 格式。\",\"全面支持 OpenID Connect (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式\",\"深度扩展 Authorization Code、Resource Ownership Password、Social Credentials 几种模式，全面融合 IdToken、Opaque Token、JWT Token 与现有权限体系，同时提供 IdToken 和 自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。\",\"自定义 Spring Authorization Server 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。\",\"无须在代码中配置 Spring Security 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题\",\"OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。\",\"基于自定义 Session，混合国密 SM2 (非对称) 和 SM4 (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用 “一人一码机制”，实现密码模式登录数据进行动态加密传输。配合 OAuth2 Client 验证，保护接口调用和前后端数据传输的合理性及安全性。\"]},\"365\":{\"h\":\"[4] Dante Cloud 3.0.0 前端新特性\"},\"366\":{\"h\":\"采用 pnpm monorepo 重构前端\",\"t\":[\"前端工程包管理器变更为 pnpm。\",\"采用 monorepo 模式对前端工程进行重构，抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块\",\"共享模块已进行优化配置，利用 Vite 可编译成独立的组件，单独以组件形式进行发布\",\"代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用。\"]},\"367\":{\"h\":\"Dante Cloud 3.1.0.6 发布，拆分核心基础组件，构建产品生态\",\"t\":[\"Dante Cloud 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型(DDD)设计思想的、全面拥抱 Spring Authorization Server 的、基于 OAuth2.1 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 Spring Authorization Server 1.1.0、Spring Boot 3.1.0、Spring Cloud 2022.0.3、Spring Cloud Tencent 1.11.7-2022.0.1、Spring Cloud Alibaba 2022.0.0.0、Nacos 2.2.2 等主流技术栈开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能\",\"平台定位\",\"构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。\",\"面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。\",\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。\",\"代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。\",\"发布背景\",\"为方便用户使用，Dante Cloud 建设初期以“全面”为目标，尽可能的集成、开发和包容更多常用组件，以兼容更多用户的使用需求。Dante Cloud 经过两年的建设、完善与发展、探索，发现这种模式看似全面、面面俱到、可以吸引更多用户的青睐。但对实际的开发、使用的促进效果并不理想。\",\"主要存在以下问题：\",\"集成和兼容内容过多，影响代码编译、发布的时效性。\",\"并不是所有内容都对用户有帮助，反而会带来过多的依赖性和耦合性。\",\"原本相对独立性较高的内容，却融入在一个庞大的架构环境中，既不利于理解，也不利于单独使用。\",\"引入过多杂音，分散用户对 Dante Cloud 核心价值内容的关注度，不利于掌握和深入 Dante Cloud 核心。\",\"过多内容的集成，影响各个部分的专注和专业程度，导致多而不精，多而不深的问题。\",\"因此，尝试采用构建“产品生态”的方式，解决以上问题，同时给用户带来更好的、更便捷产品使用体验。\",\"通过构建产品生态，将独立性较强的内容，从系统核心内容中剥离，让 Dante Cloud 本身更加专精和独立，同时降低互相影响和干扰\",\"被剥离的内容以独立的产品形态存在，目标既可以独立使用集成至任意系统中，又可以快速的与 Dante Cloud 融合，形成以 Dante Cloud 为主，生态产品为辅的格局。\",\"生态产品以独立的产品运作，反向促进提升生态产品的完整性、深入性和便捷性。\"]},\"368\":{\"h\":\"[1] 本次更新内容\",\"t\":[\"主要更新\",\"[升级] Spring Cloud Tencent 1.11.7-2022.0.1\",\"[变更] Minio 对象存储相关代码，从 Dante Engine 中剥离，成为一个独立的项目产品\",\"[删除] 删除 pay 和 nosql 相关模块，清理系统中独立性较高的模组，以保持系统内核的专注性\",\"[新增] 新增 REST 接口动态鉴权是否使用严格模式配置，在严格模式下，所有接口必须配置权限才可使用；在非严格模式下，接口只需要携带 Token 即可使用。\",\"其它更新\",\"[新增] 新增 message-rabbitmq-spring-boot-starter，以方便 RabbitMQ 使用者集成使用\",\"[新增] 新增对象存储 Minio 服务器不可用错误代码\",\"[新增] 前端新增对象存储 Bucket 管理界面\",\"[新增] 前端新增对象存储 Bucket 设置界面\",\"[新增] 前端新增对象存储 Object 管理界面\",\"[新增] 前端新增对象存储 Object 设置界面\",\"[新增] 前端新增基于 vue-simple-uploader 的大文件分片存储支持\",\"[新增] 新增 OSS 对象存储服务\",\"[新增] 新增对象存储 Minio 服务器不可用错误代码\",\"[修复] 修复在未引入 Spring Cloud OpenFeign 环境下，RestTemplate 配置失效导致启动错误的问题\",\"[优化] 优化基础 Controller 代码，调整判断逻辑，以更好地的支持查询数据成功、未查询到数据、查询失败等三种状态\",\"依赖更新\",\"[升级] common-io 版本升级至 2.13.0\",\"[升级] redission 版本升级至 3.22.0\",\"[升级] guava 版本升级至 32.0.1-jre\",\"[升级] skywalking 版本升级至 8.16.0\",\"[升级] wxjava 版升级至 4.5.1.B\",\"[升级] camunda 版升级至 7.20.0-alpha2\",\"[升级] Webjars Bootstrap 版升级至 5.3.0\",\"[升级] tencentcloud-sdk-java-sms 版升级至 3.1.775\",\"[升级] alipay-sdk-java 版本升级至 4.35.154.ALL\"]},\"369\":{\"h\":\"[2] 生态产品 Dante OSS\"},\"370\":{\"h\":\"优点 | Advantages\",\"t\":[\"零额外学习成本: 开发者只要会 Spring 和 REST 基本开发，即可无缝集成和使用 Dante OSS\",\"降低开发者门槛: 屏蔽 Minio 标准 Java SDK 使用复杂度，使用 Spring 环境标准方式对原有 API 进行简化封装。Service API 和 REST API 开箱即用\",\"包含的功能丰富: 改造了 Minio Java SDK 的几乎全部功能，且对大文件分片上传、秒传、直传、断点续传等功能，均采用业内最优解决方案进行实现和融合\",\"规范优雅的代码: 所有函数参数，并未破坏原有 Minio 代码构造器结构，而是在原有方式的基础上抽象简化，编程体验和代码可读性大幅提升\",\"完善的注释文档: 对请求参数、方法、REST API、Validation 提供详实的注释、说明和 OpenAPI 标注，用途用法一目了然，无需再翻阅 Minio 文档和源代码，帮助您节省更多时间\",\"完整的前端示例：前端采用一个完整的项目而非 Demo 的形式，全面的展示了前后端交互涉及、接口调用、参数使用、TS 类型定义等各方面内容，可直接用于实际项目或简单改造后构建自己的产品\"]},\"371\":{\"h\":\"对比 | Compare\"},\"372\":{\"h\":\"1. 不只是简单的 Spring Boot Starter 构建\",\"t\":[\"构建统一的错误，可以返回更人性化、更易理解的错误信息，同时兼顾更详细错误信息的返回，方便开发人员理解和定位问题。\",\"采用更易理解和使用的格式对 Minio Java SDK 参数进行重新定义。规避 Minio 默认 XML 方式参数多、不易理解使用、与前端交互不方便等问题。\",\"隐藏 Minio Java SDK 不易理解和使用的细节，提供详实的注释说明，开发人员在使用时无需再通过翻阅 Minio 在线文档和源代码来了解各个 API 使用细节。\",\"提供统一标准的 REST API，以及 OpenAPI Swagger3 文档描述和准确的 Spring Validation 校验，可直接集成至系统中使用。\",\"Minio Client 对象池、自定义极简 Minio Server 访问反向代理，提升\"]},\"373\":{\"h\":\"2. 标准化业务逻辑和解决方案集合\",\"t\":[\"不只是上传、下载等常用方法的封装，涵盖 Minio Java SDK 支持的所有方法和操作。\",\"选择业内最优的解决方案，实现和集成大文件分片上传、秒传、直传、断点续传等主要业务需求功能。\",\"结合自身应用经验和需求，将 Minio API 进一步组合成符合实际应用的业务逻辑和功能处理。\",\"采用一个基于 Vue3、Typescript5、Vite4、Pinia 2 的完整的前端项目作为集成示例，包括详细的 Typescript 类型定义以及 vue-simple-uploader 等主流组件集成和使用方法。\",\"提供基于 Spring Authorization Server 的单体版、微服务版案例，从 SDK、Spring Boot Starter 到完整项目任你选择。\"]},\"374\":{\"h\":\"3. 具体差异说明\",\"t\":[\"[1] 基础 API 方法以及方法参数\",\"Minio SDK\",\"Dante OSS\",\"仅包含基础操作 API\",\"提供大量重载方法\",\"必须用构造器创建参数对象\",\"重载方法覆盖所有常见参数，按需传参即可\",\"API 全部混在同一个类中\",\"根据差异、用途、场景拆分为不同的 Service，例如：getObject 和 downloadObject\",\"源于 XML 对象参数结构复杂\",\"自定义实体和转换器简化参数结构\",\"基础 API 会抛出大量 Exception，具体问题需要自己摸索对应\",\"对所有错误进行标准化处理，提供更准确和交互友好的描述信息，可方便地与系统错误体系融合\",\"[2] 前后端交互\",\"Minio SDK\",\"Dante OSS\",\"复杂结构参数不利于 JSON 互转\",\"采用最简化参数方便传输并可准确转换成对应 Minio 复杂对象参数\",\"参数层次结构复杂\",\"自定义请求参数实体保持继承结构的同时简化传递参数\",\"参数多用途不明晰必须查阅源代码\",\"使用 OpenAPI 注解详细说明各参数用途可使用 Swagger 查阅\",\"参数校验规则细节多没有文档说明\",\"对照 Minio 源代码，结合自定义实体，增加匹配的 Spring Validation 校验\",\"不提供 REST API\",\"提供标准的 REST API 可直接使用\",\"[3] 业务支持\",\"内容\",\"Minio SDK\",\"Dante OSS\",\"常规业务\",\"独立方法需要自己按需组合\",\"封装常规业务逻辑，可直接调用 REST API 使用\",\"设置管理\",\"对于存储桶、对象的管理只能通过 Minio 服务器管理界面\",\"对照 Minio 管理界面方式，将管理功能封装为 Service、REST API 以及 Vue 管理界面\",\"文件直传\",\"提供直传机制，直接暴露 Minio 服务器地址\",\"增加超简化反向代理，在满足直传需求的前提下，很好的隐藏 Minio 服务器以提升安全性\",\"文件直传\",\"直传接口无法与现有系统安全体系融合（无法鉴权）\",\"提供基于 Spring Authorization Server 的、完整的单体版和微服务版案例\",\"大文件分片\",\"内部机制无法直接使用\",\"封装主流大文件分片方案，提供前后端使用案例\",\"文件秒传\",\"不支持\",\"提供共用化秒传实现，可直接使用，支持多种数据库\",\"[4] 前端开发\",\"Dante OSS\",\"只要 Minio API 支持，对应的管理功能均会在标准的 Vue3 工程中实现\",\"提供与后端一致 Typescript 声明文件，可以直接用于基于 Typescript 的前端开发\",\"完整的、基于 Vue3、Vite4、Typescript5 的前端项目案例，可清晰的了解 Minio 前后端交互和使用，甚至直接使用\"]},\"375\":{\"h\":\"[3] Dante Cloud 3.0.0 后端新特性\"},\"376\":{\"h\":\"1. 核心基础依赖便捷切换\",\"t\":[\"新增 Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶等两种基础设施支持。\",\"新增 Spring Cloud Alibaba、Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。\"]},\"377\":{\"h\":\"2. 支持 GraalVM 原生镜像\",\"t\":[\"整体调整各类模块 pom build 配置，适当增加冗余重复配置，以支持 Spring Native 或 GraalVM 编译需要。规避对所有模块进行 Native 编译，而导致错误问题。\"]},\"378\":{\"h\":\"3. Spring Authorization Server 全特性支持及扩展\",\"t\":[\"基于 Spring Authorization Server 和 Spring Data JPA 实现多租户系统架构， 支持 Database 和 Schema 两种模式。\",\"基于 Spring Data JPA，重新构建 Spring Authorization Server 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 Spring Authorization Server 原有数据存储局限，扩展为更符合实际应用的方式和设计。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Resource Ownership Password (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 Refresh Token 的使用。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Social Credentials (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 JustAuth 的第三方应用登录， 支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现真正的使用 Scope 权限对接口进行验证。增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦\",\"支持 Spring Authorization ServerAuthorization Code PKCE 认证模式\",\"在 Spring Authorization Server 的标准的 JWT Token 加密校验方式外，支持基于自定义证书的 JWT Token 加密校验方式，可通过配置动态修改。\",\"支持 Opaque Token (不透明令牌) 格式及校验方式，将低 JWT Token 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 Opaque Token 格式还是 JWT Token 格式。\",\"全面支持 OpenID Connect (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式\",\"深度扩展 Authorization Code、Resource Ownership Password、Social Credentials 几种模式，全面融合 IdToken、Opaque Token、JWT Token 与现有权限体系，同时提供 IdToken 和 自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。\",\"自定义 Spring Authorization Server 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。\",\"无须在代码中配置 Spring Security 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题\",\"OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。\",\"基于自定义 Session，混合国密 SM2 (非对称) 和 SM4 (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用 “一人一码机制”，实现密码模式登录数据进行动态加密传输。配合 OAuth2 Client 验证，保护接口调用和前后端数据传输的合理性及安全性。\"]},\"379\":{\"h\":\"4. Spring Authorization Server OAuth2 Device Authorization Grant 认证模式\",\"t\":[\"OAuth2 Device Authorization Grant 认证模式，是在 OIDC 协议支持的模式中，专有的一类 Device Flow 设备模式，允许各类终端或硬件完成认证登录流程。\",\"Device Authorization Grant （设备授权授予）或 Device Flow 对于处理，例如：智能电视、IoT 设备或打印机等，输入受限终端或硬件的身份验证和授权非常有用。由于终端的显示模式可能受限，无法内置登录页面。通过 Device Flow 提供的超链接或者生成二维码，设备会让用户在另一台设备上的浏览器中访问一个网页，以进行登录。用户登录后，设备可以获取所需的访问令牌和刷新令牌。\"]},\"380\":{\"h\":\"[4] Dante Cloud 3.0.0 前端新特性\"},\"381\":{\"h\":\"采用 pnpm monorepo 重构前端\",\"t\":[\"前端工程包管理器变更为 pnpm。\",\"采用 monorepo 模式对前端工程进行重构，抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块\",\"共享模块已进行优化配置，利用 Vite 可编译成独立的组件，单独以组件形式进行发布\",\"代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用。\"]},\"382\":{\"h\":\"Dante Cloud 3.1.1.1 发布，采用领域驱动设计(DDD)的微服务架构\",\"t\":[\"Dante Cloud 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型(DDD)设计思想的、全面拥抱 Spring Authorization Server 的、基于 OAuth2.1 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 Spring Authorization Server 1.1.1、Spring Boot 3.1.1、Spring Cloud 2022.0.3、Spring Cloud Tencent 1.11.7-2022.0.1、Spring Cloud Alibaba 2022.0.0.0、Nacos 2.2.4 等主流技术栈开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能\",\"平台定位\",\"构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。\",\"面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。\",\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。\",\"代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。\",\"发布背景\",\"为方便用户使用，Dante Cloud 建设初期以“全面”为目标，尽可能的集成、开发和包容更多常用组件，以兼容更多用户的使用需求。Dante Cloud 经过两年的建设、完善与发展、探索，发现这种模式看似全面、面面俱到、可以吸引更多用户的青睐。但对实际的开发、使用的促进效果并不理想。\",\"主要存在以下问题：\",\"集成和兼容内容过多，影响代码编译、发布的时效性。\",\"并不是所有内容都对用户有帮助，反而会带来过多的依赖性和耦合性。\",\"原本相对独立性较高的内容，却融入在一个庞大的架构环境中，既不利于理解，也不利于单独使用。\",\"引入过多杂音，分散用户对 Dante Cloud 核心价值内容的关注度，不利于掌握和深入 Dante Cloud 核心。\",\"过多内容的集成，影响各个部分的专注和专业程度，导致多而不精，多而不深的问题。\",\"因此，尝试采用构建“产品生态”的方式，解决以上问题，同时给用户带来更好的、更便捷产品使用体验。\",\"通过构建产品生态，将独立性较强的内容，从系统核心内容中剥离，让 Dante Cloud 本身更加专精和独立，同时降低互相影响和干扰\",\"被剥离的内容以独立的产品形态存在，目标既可以独立使用集成至任意系统中，又可以快速的与 Dante Cloud 融合，形成以 Dante Cloud 为主，生态产品为辅的格局。\",\"生态产品以独立的产品运作，反向促进提升生态产品的完整性、深入性和便捷性。\"]},\"383\":{\"h\":\"[1] 本次更新内容\",\"t\":[\"【主要更新】\",\"[升级] Spring Boot Admin 版升级至 3.1.0\",\"[升级] Debezimu 相关组件及容器版本升级至 2.3\",\"【其它更新】\",\"[重构] 调整 @Inner 注解所在模块，提升代码内聚性。\",\"[优化] 优化代码编译配置，增加代码编译过程中，自动生成 spring-autoconfigure-metadata.properties 机制，解决在新版 IDE 中部分跨 Module Bean 注入提示找不到，出现标红问题。\",\"[新增] 前端 OSS 存储桶设置界面，增加版本控制设置功能。\",\"[新增] 前端 OSS 存储桶设置界面，增加保留设置功能\",\"[新增] 前端对象列表界面，增加文件夹显示及查看功能\",\"[修复] Docker Compose 中 Nacos 镜像版本恢复至 v2.2.3。\",\"[修复] 修复前端在 vite-plugin-dts 3.0.X 环境下，编译模块出错问题。\",\"[修复] 修复前端封装 HDialog 关闭操作异常问题。\",\"【依赖更新】\",\"[升级] bcprov-jdk15to18 版本升级至 1.75\",\"[升级] guava 版升级至 32.1.1-jre\",\"[升级] tencentcloud-sdk-java-sms 版本升级至 3.1.789\",\"[升级] alipay-sdk-java 版本升级至 4.38.4.ALL\"]},\"384\":{\"h\":\"[2] 生态产品 Dante OSS\"},\"385\":{\"h\":\"优点 | Advantages\",\"t\":[\"零额外学习成本: 开发者只要会 Spring 和 REST 基本开发，即可无缝集成和使用 Dante OSS\",\"降低开发者门槛: 屏蔽 Minio 标准 Java SDK 使用复杂度，使用 Spring 环境标准方式对原有 API 进行简化封装。Service API 和 REST API 开箱即用\",\"包含的功能丰富: 改造了 Minio Java SDK 的几乎全部功能，且对大文件分片上传、秒传、直传、断点续传等功能，均采用业内最优解决方案进行实现和融合\",\"规范优雅的代码: 所有函数参数，并未破坏原有 Minio 代码构造器结构，而是在原有方式的基础上抽象简化，编程体验和代码可读性大幅提升\",\"完善的注释文档: 对请求参数、方法、REST API、Validation 提供详实的注释、说明和 OpenAPI 标注，用途用法一目了然，无需再翻阅 Minio 文档和源代码，帮助您节省更多时间\",\"完整的前端示例：前端采用一个完整的项目而非 Demo 的形式，全面的展示了前后端交互涉及、接口调用、参数使用、TS 类型定义等各方面内容，可直接用于实际项目或简单改造后构建自己的产品\"]},\"386\":{\"h\":\"对比 | Compare\"},\"387\":{\"h\":\"1. 不只是简单的 Spring Boot Starter 构建\",\"t\":[\"构建统一的错误，可以返回更人性化、更易理解的错误信息，同时兼顾更详细错误信息的返回，方便开发人员理解和定位问题。\",\"采用更易理解和使用的格式对 Minio Java SDK 参数进行重新定义。规避 Minio 默认 XML 方式参数多、不易理解使用、与前端交互不方便等问题。\",\"隐藏 Minio Java SDK 不易理解和使用的细节，提供详实的注释说明，开发人员在使用时无需再通过翻阅 Minio 在线文档和源代码来了解各个 API 使用细节。\",\"提供统一标准的 REST API，以及 OpenAPI Swagger3 文档描述和准确的 Spring Validation 校验，可直接集成至系统中使用。\",\"Minio Client 对象池、自定义极简 Minio Server 访问反向代理，提升\"]},\"388\":{\"h\":\"2. 标准化业务逻辑和解决方案集合\",\"t\":[\"不只是上传、下载等常用方法的封装，涵盖 Minio Java SDK 支持的所有方法和操作。\",\"选择业内最优的解决方案，实现和集成大文件分片上传、秒传、直传、断点续传等主要业务需求功能。\",\"结合自身应用经验和需求，将 Minio API 进一步组合成符合实际应用的业务逻辑和功能处理。\",\"采用一个基于 Vue3、Typescript5、Vite4、Pinia 2 的完整的前端项目作为集成示例，包括详细的 Typescript 类型定义以及 vue-simple-uploader 等主流组件集成和使用方法。\",\"提供基于 Spring Authorization Server 的单体版、微服务版案例，从 SDK、Spring Boot Starter 到完整项目任你选择。\"]},\"389\":{\"h\":\"3. 具体差异说明\",\"t\":[\"[1] 基础 API 方法以及方法参数\",\"Minio SDK\",\"Dante OSS\",\"仅包含基础操作 API\",\"提供大量重载方法\",\"必须用构造器创建参数对象\",\"重载方法覆盖所有常见参数，按需传参即可\",\"API 全部混在同一个类中\",\"根据差异、用途、场景拆分为不同的 Service，例如：getObject 和 downloadObject\",\"源于 XML 对象参数结构复杂\",\"自定义实体和转换器简化参数结构\",\"基础 API 会抛出大量 Exception，具体问题需要自己摸索对应\",\"对所有错误进行标准化处理，提供更准确和交互友好的描述信息，可方便地与系统错误体系融合\",\"[2] 前后端交互\",\"Minio SDK\",\"Dante OSS\",\"复杂结构参数不利于 JSON 互转\",\"采用最简化参数方便传输并可准确转换成对应 Minio 复杂对象参数\",\"参数层次结构复杂\",\"自定义请求参数实体保持继承结构的同时简化传递参数\",\"参数多用途不明晰必须查阅源代码\",\"使用 OpenAPI 注解详细说明各参数用途可使用 Swagger 查阅\",\"参数校验规则细节多没有文档说明\",\"对照 Minio 源代码，结合自定义实体，增加匹配的 Spring Validation 校验\",\"不提供 REST API\",\"提供标准的 REST API 可直接使用\",\"[3] 业务支持\",\"内容\",\"Minio SDK\",\"Dante OSS\",\"常规业务\",\"独立方法需要自己按需组合\",\"封装常规业务逻辑，可直接调用 REST API 使用\",\"设置管理\",\"对于存储桶、对象的管理只能通过 Minio 服务器管理界面\",\"对照 Minio 管理界面方式，将管理功能封装为 Service、REST API 以及 Vue 管理界面\",\"文件直传\",\"提供直传机制，直接暴露 Minio 服务器地址\",\"增加超简化反向代理，在满足直传需求的前提下，很好的隐藏 Minio 服务器以提升安全性\",\"文件直传\",\"直传接口无法与现有系统安全体系融合（无法鉴权）\",\"提供基于 Spring Authorization Server 的、完整的单体版和微服务版案例\",\"大文件分片\",\"内部机制无法直接使用\",\"封装主流大文件分片方案，提供前后端使用案例\",\"文件秒传\",\"不支持\",\"提供共用化秒传实现，可直接使用，支持多种数据库\",\"[4] 前端开发\",\"Dante OSS\",\"只要 Minio API 支持，对应的管理功能均会在标准的 Vue3 工程中实现\",\"提供与后端一致 Typescript 声明文件，可以直接用于基于 Typescript 的前端开发\",\"完整的、基于 Vue3、Vite4、Typescript5 的前端项目案例，可清晰的了解 Minio 前后端交互和使用，甚至直接使用\"]},\"390\":{\"h\":\"[3] Dante Cloud 3.0.0 后端新特性\"},\"391\":{\"h\":\"1. 核心基础依赖便捷切换\",\"t\":[\"新增 Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶等两种基础设施支持。\",\"新增 Spring Cloud Alibaba、Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。\"]},\"392\":{\"h\":\"2. 支持 GraalVM 原生镜像\",\"t\":[\"整体调整各类模块 pom build 配置，适当增加冗余重复配置，以支持 Spring Native 或 GraalVM 编译需要。规避对所有模块进行 Native 编译，而导致错误问题。\"]},\"393\":{\"h\":\"3. Spring Authorization Server 全特性支持及扩展\",\"t\":[\"基于 Spring Authorization Server 和 Spring Data JPA 实现多租户系统架构， 支持 Database 和 Schema 两种模式。\",\"基于 Spring Data JPA，重新构建 Spring Authorization Server 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 Spring Authorization Server 原有数据存储局限，扩展为更符合实际应用的方式和设计。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Resource Ownership Password (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 Refresh Token 的使用。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Social Credentials (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 JustAuth 的第三方应用登录， 支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现真正的使用 Scope 权限对接口进行验证。增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦\",\"支持 Spring Authorization ServerAuthorization Code PKCE 认证模式\",\"在 Spring Authorization Server 的标准的 JWT Token 加密校验方式外，支持基于自定义证书的 JWT Token 加密校验方式，可通过配置动态修改。\",\"支持 Opaque Token (不透明令牌) 格式及校验方式，将低 JWT Token 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 Opaque Token 格式还是 JWT Token 格式。\",\"全面支持 OpenID Connect (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式\",\"深度扩展 Authorization Code、Resource Ownership Password、Social Credentials 几种模式，全面融合 IdToken、Opaque Token、JWT Token 与现有权限体系，同时提供 IdToken 和 自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。\",\"自定义 Spring Authorization Server 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。\",\"无须在代码中配置 Spring Security 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题\",\"OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。\",\"基于自定义 Session，混合国密 SM2 (非对称) 和 SM4 (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用 “一人一码机制”，实现密码模式登录数据进行动态加密传输。配合 OAuth2 Client 验证，保护接口调用和前后端数据传输的合理性及安全性。\"]},\"394\":{\"h\":\"4. Spring Authorization Server OAuth2 Device Authorization Grant 认证模式\",\"t\":[\"OAuth2 Device Authorization Grant 认证模式，是在 OIDC 协议支持的模式中，专有的一类 Device Flow 设备模式，允许各类终端或硬件完成认证登录流程。\",\"Device Authorization Grant （设备授权授予）或 Device Flow 对于处理，例如：智能电视、IoT 设备或打印机等，输入受限终端或硬件的身份验证和授权非常有用。由于终端的显示模式可能受限，无法内置登录页面。通过 Device Flow 提供的超链接或者生成二维码，设备会让用户在另一台设备上的浏览器中访问一个网页，以进行登录。用户登录后，设备可以获取所需的访问令牌和刷新令牌。\"]},\"395\":{\"h\":\"[4] Dante Cloud 3.0.0 前端新特性\",\"t\":[\"未使用任何流行开源模版，使用全新技术栈，完全纯\\\"手写\\\"全新前端工程。\",\"借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。\",\"充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 \\\"any\\\" 式的 Typescript 编程语言使用方式。\",\"充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。\",\"充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。\",\"对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。\",\"对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。\",\"提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。\",\"该版本基于 pnpm，采用 monorepo 模式对前端工程进行重构。构建 monorepo 版本前端，是为扩展更多功能、增加应用级功能做铺垫\",\"抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块。\",\"共享模块已进行优化配置，可编译成独立的组件，单独以组件形式进行发布。\",\"代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用\"]},\"396\":{\"h\":\"Dante Cloud 3.1.3.0 发布，采用领域驱动设计(DDD)的微服务架构\",\"t\":[\"Dante Cloud 是一款企业级微服务架构和服务能力开发平台，是采用领域驱动模型(DDD)设计思想的、全面拥抱 Spring Authorization Server 的、基于 OAuth2.1 协议的、支持智能电视、IoT 等物联网设备认证的微服务架构。基于 Spring Authorization Server 1.1.2、Spring Boot 3.1.3、Spring Cloud 2022.0.4、Spring Cloud Tencent 1.11.9-2022.0.1、Spring Cloud Alibaba 2022.0.0.0、Nacos 2.2.4 等主流技术栈开发的多租户系统，遵循 SpringBoot 编程思想，高度模块化和可配置化。具备服务发现、配置、熔断、限流、降级、监控、多级缓存、分布式事务、工作流等功能\",\"平台定位\",\"构建成熟的、完善的、全面的，基于 OAuth2.1 的、前后端分离的微服务架构解决方案。\",\"面向企业级应用和互联网应用设计开发，既兼顾传统项目的微服务化，又满足互联网应用开发建设、快速迭代的使用需求。\",\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，是帮助快速跨越架构技术选型、研究探索阶段的利器。\",\"代码简洁规范、结构合理清晰，是新技术开发应用的典型的、综合性案例，助力开发人员对新兴技术的学习和掌握。\",\"初衷\",\"作者本人过往工作，主要专注企业信息化项目建设，经手过大大小小、各式各样、规模各异的项目。这些项目经历，足以让我体会 IT 行业的千滋百味。回顾过往，发现其中很多工作，特别是很多会占用技术人员大量时间和精力的工作，大多数情况下并不是像技术攻关、新技术研究、业务架构设计、并发性能调优等有挑战性的工作，而往往都是因细节考虑欠缺、代码质量不高、在用技术老旧、欠缺优化迭代、系统难于维护、项目管理不善等问题产生的需要长期投入的、低效、低意义工作。\",\"这也是为什么做 Dante Cloud 的初衷：一方面是以 Dante Cloud 为载体，潜移默化地将过往项目建设的经验教训融入其中，尽可能地帮助使用者规避或者减少无效工作，提升工作效率和质量，有跟多的时间做更有意义的事情；另一方面不断地融合和使用各类新兴技术，帮助使用者尽可能多的了解、学习和运用新技术，让技术不再成为禁锢变为进步和提升的基石。\"]},\"397\":{\"h\":\"[1] 本次更新内容\",\"t\":[\"【主要更新】\",\"[升级] Spring Boot 版本升级至 3.1.3\",\"[升级] Spring Authorization Server 版本升级至 1.1.2\",\"[升级] Spring Cloud Tencent 版本升级至 1.11.9-2022.0.1\",\"[升级] Spring Boot Admin 版本升级至 3.1.5\",\"【其它更新】\",\"[新增] 新增 idea IDE 中显示 Dante Cloud Logo 配置。\",\"[新增] DateTimeUtils 增加 Date 互转 ZonedDateTime 方法\",\"[新增] 前端工程新增 OSS 普通流式上传、下载进度显示。fix: #I7DO83 (ISSUED by jacky)\",\"[重构] 重构部分核心包代码依赖逻辑，解决部分包依赖不合理问题。\",\"[重构] 参照 Spring Boot 规范，重构部分自定义 Event 所在模块，以及核心 Event 实现定义。解决 Event 代码放置混乱逻辑不易理解问题。\",\"[重构] 参数 Spring Boot 规范，重构 engine-rest 模块下所有代码模块。同时，调整相关代码，进一步解耦。\",\"[重构] 参照 Spring Boot 规范，重构短信模块\",\"[重构] 将原有实体转换代码，重构为 Converter 形式。\",\"[重构] 将所有 Starter 按照 Spring Boot Starter 规范重构相关代码。\",\"[重构] 为了保证数据一致性，数据库初始化脚本移动至 dante-cloud-oss-ability 服务中。在线文档数据库初始化内容也同步更新。\",\"[重构] 重构前端 OSS 流式上传、下载 Typescript 相关定义和接口调用服务代码。流式上传、下载替换为使用后端符合 Dante Java OSS API 规范的统一定义 REST API，并完成前后端联调验证。\",\"[重构] 重构前端 OSS 大文件分片上传 Typescript 相关定义和接口调用服务代码。流式上传、下载替换为使用后端符合 Dante Java OSS API 规范的统一定义 REST API，并完成前后端联调验证。\",\"[重构] 因不具备跨业务通用性，调整前端 OSS 相关组件代码放置位置，将其移动到 OSS 页面代码文件夹，以保持业务相关性。\",\"[重构] 按照 Spring 生态规范，重构 assistant 和 rest 相关模块自动配置代码，让其既符合 Spring 自动配置规范，又可以提升模块代码的内聚性，减少耦合关联和精简依赖包的依赖。\",\"[修复] 修复 Snakeyaml (CVE-2022-1471) 存在反序列化漏洞 和 (CVE-2022-41854) 存在缓冲区溢出漏洞\",\"[修复] 修复前端自定义 ListItem 组件 directives 设置不正确导致前端控制台抛错问题。\",\"[修复] 修复前端创建存储桶界面校验存储桶是否存在错误\",\"[修复] 修复微服务版本环境下，因自定义代理地址配置错误，导致 OSS 大文件分片上传出错问题。\",\"[修复] 修复单体版数据库初始化脚本存在重复数据问题\",\"[修复] 重构 HDialog 自定义封装组件。修复前端上传对话框操作按钮逻辑不合理，导致前端抛错以及上传成功后不会刷新对象列表问题。\",\"[修复] 修复前端工程页面切换动画不生效问题\",\"[优化] 默认数据库名称进行变更，修改为与项目名称一致，方便记忆和使用。\",\"[优化] 优化对象存储相关 Nacos 配置，将原有配置替换为与 Dante OSS 1.3.0 统一的新版配置。\",\"[优化] 补充 Nacos 2.2.3 Mysql 数据库初始化脚本。\",\"[优化] 补充可外部化配置的 logback.xml 日志配置文件。包含 Skywalking 日志上报、ELK 日志中心日志收集、Skywalking TraceId 等支持。同时提供常规及 MDC 两种配置\",\"[优化] 使用 import 方式，优化 springdoc 依赖包的引入方式，减少过多无用的依赖信息。\",\"[优化] 优化项目 Banner.txt，增加在线文档地址展示\",\"[删除] 删除 okio 强制版本控制，改为使用统一配置版本。\",\"[删除] 删除 xnio 强制版本控制，改为使用统一配置版本。\",\"[升级] Minio Docker 镜像版本升级至 RELEASE.2023-08-23T10-07-06Z\",\"【依赖更新】\",\"[升级] snakeyaml 版本升级至 2.1\",\"[升级] bcprov-jdk18on 版本升级至 1.76\",\"[升级] tencentcloud-sdk-java-sms 版本升级至 3.1.835\",\"[升级] alipay-sdk-java 版本升级至 4.38.61.ALL\",\"[升级] redisson 版本升级至 3.23.3\",\"[升级] minio 版本升级至 8.5.5\",\"[升级] aws-java-sdk-s3 版本升级至 1.12.533\",\"[升级] fastjson2 版本升级至 2.0.39\",\"[升级] mybatis-plus-boot-starter 版本升级至 3.5.3.2\",\"【文档更新】\",\"Dante Cloud Cookbook 上新基础知识篇《Spring Boot 3 之自动配置与注入顺序控制》，助力快速掌握突破微服务生态的关键“开关”。欢迎扫码阅读！\"]},\"398\":{\"h\":\"[2] Dante Cloud 3.1.X 后端新特性\"},\"399\":{\"h\":\"1. 核心基础依赖便捷切换\",\"t\":[\"新增 Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶等两种基础设施支持。\",\"新增 Spring Cloud Alibaba、Spring Cloud Tencent 和 Spring Cloud 原生微服务全家桶三种基础设值切换能力，可以以相对便捷的方式切换使用 Alibaba、Tencent、Spring 等基础设施环境。可根据自身实际需求选择，不再局限于只能在某一种基础设施环境中运行。\"]},\"400\":{\"h\":\"2. Spring Authorization Server 全特性支持及扩展\",\"t\":[\"基于 Spring Authorization Server 和 Spring Data JPA 实现多租户系统架构， 支持 Database 和 Schema 两种模式。\",\"基于 Spring Data JPA，重新构建 Spring Authorization Server 基础数据存储代码，替代原有 JDBC 数据访问方式，破除 Spring Authorization Server 原有数据存储局限，扩展为更符合实际应用的方式和设计。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Resource Ownership Password (密码) 认证模式，以兼容现有基于 OAuth 2 规范的、前后端分离的应用，支持 Refresh Token 的使用。\",\"基于 Spring Authorization Server，在 OAuth 2.1 规范基础之上，增加自定义 Social Credentials (社会化登录) 认证模式，支持手机短信验证码、微信小程序、基于 JustAuth 的第三方应用登录， 支持 Refresh Token 的使用。\",\"扩展 Spring Authorization Server 默认的 Client Credentials 模式，实现真正的使用 Scope 权限对接口进行验证。增加客户端 Scope 的权限配置功能，并与已有的用户权限体系解耦\",\"支持 Spring Authorization ServerAuthorization Code PKCE 认证模式\",\"在 Spring Authorization Server 的标准的 JWT Token 加密校验方式外，支持基于自定义证书的 JWT Token 加密校验方式，可通过配置动态修改。\",\"支持 Opaque Token (不透明令牌) 格式及校验方式，将低 JWT Token 被捕获解析的风险。可通过修改配置参数，设置默认 Token 格式是采用 Opaque Token 格式还是 JWT Token 格式。\",\"全面支持 OpenID Connect (OIDC) 协议，系统使用时可根据使用需求，通过前端开关配置，快速切换 OIDC 模式和传统 OAuth2 模式\",\"深度扩展 Authorization Code、Resource Ownership Password、Social Credentials 几种模式，全面融合 IdToken、Opaque Token、JWT Token 与现有权限体系，同时提供 IdToken 和 自定义 Token 扩展两种无须二次请求的用户信息传递方式，减少用户信息的频繁请求。\",\"自定义 Spring Authorization Server 授权码模式登录认证页面和授权确认页面，授权码模式登录采用数据加密传输。支持多种验证码类型，暂不支持行为验证码。\",\"无须在代码中配置 Spring Security 权限注解以及权限方法，即可实现接口鉴权以及权限的动态修改。采用分布式鉴权方案，规避 Gateway 统一鉴权的压力以及重复鉴权问题\",\"OAuth2 UserDetails 核心数据支持直连数据库获取和 Feign 远程调用两种模式。OAuth2 直连数据库模式性能更优，Feign 访问远程调用可扩展性更强。可通过配置动态修改采用策略方式。\",\"基于自定义 Session，混合国密 SM2 (非对称) 和 SM4 (对称加密) 算法，实现基于数字信封技术的秘钥动态生成加密传输。利用 “一人一码机制”，实现密码模式登录数据进行动态加密传输。配合 OAuth2 Client 验证，保护接口调用和前后端数据传输的合理性及安全性。\"]},\"401\":{\"h\":\"3. Spring Authorization Server OAuth2 Device Authorization Grant 认证模式\",\"t\":[\"OAuth2 Device Authorization Grant 认证模式，是在 OIDC 协议支持的模式中，专有的一类 Device Flow 设备模式，允许各类终端或硬件完成认证登录流程。\",\"Device Authorization Grant （设备授权授予）或 Device Flow 对于处理，例如：智能电视、IoT 设备或打印机等，输入受限终端或硬件的身份验证和授权非常有用。由于终端的显示模式可能受限，无法内置登录页面。通过 Device Flow 提供的超链接或者生成二维码，设备会让用户在另一台设备上的浏览器中访问一个网页，以进行登录。用户登录后，设备可以获取所需的访问令牌和刷新令牌。\"]},\"402\":{\"h\":\"[3] Dante Cloud 3.1.X 前端新特性\",\"t\":[\"未使用任何流行开源模版，使用全新技术栈，完全纯\\\"手写\\\"全新前端工程。\",\"借鉴参考流行开源版本的使用和设计，新版前端界面风格和操作习惯尽量与当前流行方式统一。\",\"充份使用 Typescript 语言特性，解决大量类型校验问题，尽可能规避 \\\"any\\\" 式的 Typescript 编程语言使用方式。\",\"充份使用 Composition Api 和 Hooks 等 Vue3 框架新版特性进行代码编写。\",\"充份利用 Component、Hooks 以及 Typescript 面向对象等特性，抽取通用组件和代码，尽可能降低工程重复代码。\",\"对较多 Quasar 基础组件和应用功能组件进行封装，以方便代码的统一修改维护和开发使用。\",\"对生产模式下，对基于 Vite3 的工程打包进行深度性能优化。\",\"提供以 docker-compose 方式，对工程生产代码进行容器化打包和部署。\",\"该版本基于 pnpm，采用 monorepo 模式对前端工程进行重构。构建 monorepo 版本前端，是为扩展更多功能、增加应用级功能做铺垫\",\"抽取 utils、components、apis、bpmn-designer 等相关代码，形成共享模块。\",\"共享模块已进行优化配置，可编译成独立的组件，单独以组件形式进行发布。\",\"代码以共享模块的方式进行单独维护开发，降低现有工程代码复杂度，便于后续功能的扩展和代码的复用\",\"欢迎 Star 一波来支持我们！\",\"Gitee：https://gitee.com/dromara/dante-cloud**Github**：https://github.com/dromara/dante-cloud\"]},\"403\":{\"h\":\"新晋开源项目 DisJob 加入 Dromara 社区，分布式任务调度框架\"},\"404\":{\"h\":\"作者简介\",\"t\":[\"网名 Ponfee，Dromara 开源组织成员，dromara/disjob 项目作者。在国内多个一线大厂待过，有过后端、全栈、大数据等相关工作经历。\"]},\"405\":{\"h\":\"关于 Disjob\",\"t\":[\"Disjob 是天然为支持分布式长任务执行而设计的，它除了具备常规的任务调度功能外，还提供：任务拆分及分布式并行执行、暂停及取消运行中的任务、恢复执行被暂停的任务、保存任务的执行快照(Checkpoint)、任务编排(DAG)、广播任务等能力。以下是 Disjob 的整体流程图：\"]},\"406\":{\"h\":\"应用场景举例\",\"t\":[\"举个简单的例子：统计在**(0，1万亿]**区间内质数的个数。如果单机单线程 CPU 去统计的话不知道要到何年马月，这里我们就可以用Disjob框架提供的分布式并行执行的能力来解决该类问题。\",\"拆分任务\",\"先根据当前的机器资源情况来决定拆分任务的数量，比如按照我们的机器数量及 core CPU 数量(因为质数统计是 CPU 密集型)，决定拆分为 10 个任务。\",\"分发任务\",\"总任务被拆分成 10 个子任务后，框架会使用指定的路由算法把子任务分发给这些机器。\",\"接收任务\",\"机器接收到子任务后，会提交到框架的自定义线程池中执行。\",\"分布式并行执行\",\"在执行时我们可以使用分批次方式(通过代码循环)来统计，这里我们指定task-1在第一次循环统计(0, 1亿]，第二次循环统计(10亿, 11亿]，以此类推最后一次循环统计(9990亿, 9991亿]。同理其它的 task 也是按同样的方式分布式并行统计。\",\"P.s. 黎曼猜想中可知质数分布是大体均匀的，判断一个数是否质数有很多方法，如埃氏筛法、欧拉筛法、Miller Rabin 素性检验，我们可以使用 Guava 库提供的素性检验。\",\"Checkpoint\",\"如果在统计过程中机器宕机后怎么办？难道再从头开始统计吗？No No No！我们可以在每循环 10 次（或每隔执行超过 1 分钟）时使用Checkpoint保存当前task-1的执行快照。宕机异常后的重新启动任务时会读取这份快照数据，从上一次的状态中接着继续统计。\",\"以下是task-1任务保存的快照数据样例\",\"{ \\\"next\\\":4000000001, // 下一次循环时要统计的区间为(40亿, 41亿] \\\"count\\\":19819734, // 已经统计到了 19819734 个质数 \\\"finished\\\":false // 当前任务是否已经统计完成：true-是；false-否； } \",\"暂停与恢复\",\"假如我们的这几台机器资源需要临时做其它的事情，想把当前的统计任务暂停一段时间。No problem！框架是支持暂停执行中的任务，只需要在管理后台的调度实例页面，找到该任务点击暂停按钮即可。在暂停时任务会接收到一个中断信号，收到中断信号时同样可以在代码中使用Checkpoint保存当前的执行快照。\",\"当其它事情处理完后，我们可以在管理后台的调度实例页面，找到被暂停的这个任务，点击恢复按钮，此时任务会从上一次保存的状态中恢复继续执行。\",\"任务编排\",\"现在这个质数统计的总任务已经执行完了，共 10 个子任务，每个子任务都统计出了它的那部分结果。Disjob 能自动帮我汇总结果吗？Yes！框架提供了非常强大且方便的表达式来编排任务，如：A->B,C,(D->E)->D,F->G，现在我们可以创建一个汇总任务，然后再把这两个任务编排在一起。以下是本例中质数统计的 job 表数据，其中job_handler指定了编排的这两个任务处理器(代码在 Disjob 的开源项目中)。\",\"INSERT INTO `sched_job` ( `job_id`, `job_group`, `job_name`, `job_handler`, `job_state`, `job_type`, `job_param`, `trigger_type`, `trigger_value`, `next_trigger_time` ) VALUES ( 1003164910267351009, 'default', 'prime-count-dag', 'cn.ponfee.disjob.test.handler.PrimeCountJobHandler -> cn.ponfee.disjob.test.handler.PrimeAccumulateJobHandler', 1, 2, '{\\\\\\\"m\\\\\\\":1,\\\\\\\"n\\\\\\\":10000000000,\\\\\\\"blockSize\\\\\\\":100000000,\\\\\\\"parallel\\\\\\\":10}', 2, '2023-09-02 18:00:00', unix_timestamp()*1000 ); \",\"本例中的质数统计流程图如下\"]},\"407\":{\"h\":\"结语\",\"t\":[\"Disjob 还有很多的功能需要去完善打磨，正如 Dromara 的口号：一个人或许能走的更快，但一群人会走的更远。期待有更多的人一起参与共建！\",\"项目链接\",\"gitee: https://gitee.com/dromara/disjob\",\"github: https://github.com/dromara/disjob\",\"个人博客：http://www.ponfee.cn\",\"沟通交流\",\"对项目有什么想法或者建议，可以交流\"]},\"408\":{\"h\":\"动态线程池框架DynamicTp v1.1.4大版本发布，新增若干实用特性\"},\"409\":{\"h\":\"DynamicTp 简介\",\"t\":[\"DynamicTp 是一个基于配置中心实现的轻量级动态线程池监控管理工具，主要功能可以总结为动态调参、通知报警、运行监控、三方包线程池管理等几大类。\",\"经过多个版本的迭代，目前最新版本 v1.1.3 具有以下特性 ✅\",\"代码零侵入：我们改变了线程池以往的使用姿势，所有配置均放在配置中心，服务启动时会从配置中心拉取配置生成线程池对象放到 Spring 容器中，使用时直接从 Spring 容器中获取，对业务代码零侵入\",\"通知告警：提供多种报警维度（配置变更通知、活性报警、容量阈值报警、拒绝触发报警、任务执行或等待超时报警），已支持企业微信、钉钉、飞书、邮件报警，同时提供 SPI 接口可自定义扩展实现\",\"运行监控：定时采集线程池指标数据，支持通过 MicroMeter、JsonLog 日志输出、Endpoint 三种方式，可通过 SPI 接口自定义扩展实现\",\"任务增强：提供任务包装功能，实现 TaskWrapper 接口即可，如 MdcTaskWrapper、TtlTaskWrapper、SwTraceTaskWrapper，可以支持线程池上下文信息传递\",\"多配置中心支持：基于主流配置中心实现线程池参数动态调整，实时生效，已支持 Nacos、Apollo、Zookeeper、Consul、Etcd、Polaris、ServiceComb，同时也提供 SPI 接口可自定义扩展实现\",\"中间件线程池管理：集成管理常用第三方组件的线程池，已集成 Tomcat、Jetty、Undertow、Dubbo、RocketMq、Hystrix、Grpc、Motan、Okhttp3、Brpc、Tars、SofaRpc、RabbitMq 等组件的线程池管理（调参、监控报警）\",\"轻量简单：基于 SpringBoot 实现，引入 starter，接入只需简单 4 步就可完成，顺利 3 分钟搞定\",\"多模式：提供了增强线程池 DtpExecutor，IO 密集型场景使用的线程池 EagerDtpExecutor，调度线程池 ScheduledDtpExecutor，有序线程池 OrderedDtpExecutor，可以根据业务场景选择合适的线程池\",\"兼容性：JUC 普通线程池和 Spring 中的 ThreadPoolTaskExecutor 也可以被框架管理，@Bean 定义时加 @DynamicTp 注解即可\",\"可靠性：框架提供的线程池实现 Spring 生命周期方法，可以在 Spring 容器关闭前尽可能多的处理队列中的任务\",\"高可扩展：框架核心功能都提供 SPI 接口供用户自定义个性化实现（配置中心、配置文件解析、通知告警、监控数据采集、任务包装等等）\",\"线上大规模应用：参考美团线程池实践，美团内部已经有该理论成熟的应用经验\"]},\"410\":{\"h\":\"v1.1.3 发布记录\",\"t\":[\"groupId 及包名改为 org.dromara.dynamictp\"]},\"411\":{\"h\":\"Feature\",\"t\":[\"引入时间轮重构任务超时（排队超时、执行超时）功能，@KamToHung\",\"增加 ExecutorAdapter，做各种框架线程池的适配器，@dragon-zhang\",\"WebServer（Tomcat、Undertow、Jetty）支持通知告警，@dragon-zhang\",\"阿里云商业版 RocketMQ 线程池管理支持，@Redick01\",\"引入 JsonUtil，根据依赖选择 Jackson/Gson/FastJson 做框架 json 序列化工具，减少外部依赖，@topsuder\",\"重构 OrderedDtpExecutor 有序线程池实现，@yanhom, @KamToHung\",\"实现优雅关闭线程池功能，@yanhom\",\"增加 dependencies 模块，统一管理依赖，@KamToHung\",\"TaskWrapper 支持 OpenTelemetry，@brendanv\"]},\"412\":{\"h\":\"Bugfix\",\"t\":[\"修复飞书告警失败问题，@KamToHung\",\"修复配置变更后不通知的问题，@yanhom\",\"修复 dtp-alarm 线程 StackOverflowError 异常，@yanhom\",\"修复 DtpPostProcessor 初始化晚于线程池实例初始化问题，@KamToHung\"]},\"413\":{\"h\":\"Optimize\",\"t\":[\"丰富 Undertow 线程池监控指标，@yanhom\",\"优化当引入 Dtp 包，不启用时可以通过手动配置关闭，@ruoan777\",\"优化告警功能，解决实际推送的告警信息看着不准的问题，@ruoan777\",\"线程池内部注册器模块优化，@KamToHung\",\"Hutool 依赖优化，只引入用到的包，@KamToHung\",\"部分代码优化重构，@yanhom，@KamToHung，@dragon-zhang\"]},\"414\":{\"h\":\"项目地址\",\"t\":[\"官网：https://dynamictp.cn[1]\",\"gitee 地址：https://gitee.com/dromara/dynamic-tp[2]\",\"github 地址：https://github.com/dromara/dynamic-tp[3]\"]},\"415\":{\"h\":\"加入社群\",\"t\":[\"看到这儿，方便的话给项目一个 star，你的支持是我们前进的动力！\",\"使用过程中有任何问题，或者对项目有什么想法或者建议，可以加入社群，跟群友一起交流讨论。\"]},\"416\":{\"h\":\"参考资料\",\"t\":[\"[1]https://dynamictp.cn\\n[2]https://gitee.com/dromara/dynamic-tp\\n[3]https://github.com/dromara/dynamic-tp\"]},\"417\":{\"h\":\"动态线程池框架DynamicTp v1.1.4大版本发布，新增若干实用特性\"},\"418\":{\"h\":\"DynamicTp 简介\",\"t\":[\"DynamicTp 是一个基于配置中心实现的轻量级动态线程池监控管理工具，主要功能可以总结为动态调参、通知报警、运行监控、三方包线程池管理等几大类。\"]},\"419\":{\"h\":\"DynamicTp 特性\",\"t\":[\"代码零侵入：我们改变了线程池以往的使用姿势，所有配置均放在配置中心，服务启动时会从配置中心拉取配置生成线程池对象放到 Spring 容器中，使用时直接从 Spring 容器中获取，对业务代码零侵入\",\"通知告警：提供多种报警维度（配置变更通知、活性报警、容量阈值报警、拒绝触发报警、任务执行或等待超时报警），已支持企业微信、钉钉、飞书、邮件报警，同时提供 SPI 接口可自定义扩展实现\",\"运行监控：定时采集线程池指标数据，支持通过 MicroMeter、JsonLog 日志输出、Endpoint 三种方式，可通过 SPI 接口自定义扩展实现\",\"任务增强：提供任务包装功能，实现 TaskWrapper 接口即可，如 MdcTaskWrapper、TtlTaskWrapper、SwTraceTaskWrapper，可以支持线程池上下文信息传递\",\"多配置中心支持：基于主流配置中心实现线程池参数动态调整，实时生效，已支持 Nacos、Apollo、Zookeeper、Consul、Etcd、Polaris、ServiceComb，同时也提供 SPI 接口可自定义扩展实现\",\"中间件线程池管理：集成管理常用第三方组件的线程池，已集成 Tomcat、Jetty、Undertow、Dubbo、RocketMq、Hystrix、Grpc、Motan、Okhttp3、Brpc、Tars、SofaRpc、RabbitMq 等组件的线程池管理（调参、监控报警）\",\"轻量简单：基于 SpringBoot 实现，引入 starter，接入只需简单 4 步就可完成，顺利 3 分钟搞定\",\"多模式：提供了增强线程池 DtpExecutor，IO 密集型场景使用的线程池 EagerDtpExecutor，调度线程池 ScheduledDtpExecutor，有序线程池 OrderedDtpExecutor，可以根据业务场景选择合适的线程池\",\"兼容性：JUC 普通线程池和 Spring 中的 ThreadPoolTaskExecutor 也可以被框架管理，@Bean 定义时加 @DynamicTp 注解即可\",\"可靠性：框架提供的线程池实现 Spring 生命周期方法，可以在 Spring 容器关闭前尽可能多的处理队列中的任务\",\"高可扩展：框架核心功能都提供 SPI 接口供用户自定义个性化实现（配置中心、配置文件解析、通知告警、监控数据采集、任务包装等等）\",\"线上大规模应用：参考美团线程池实践，美团内部已经有该理论成熟的应用经验\"]},\"420\":{\"h\":\"v1.1.4 发版记录\",\"t\":[\"支持 Spring 项目，SpringBoot 相关特性只在 starter 模块引入，@dragon-zhang\",\"添加 jvmti 黑科技模块，方便集成管理各种三方包线程池，@dragon-zhang\",\"升级 VariableLinkedBlockingQueue 到 jdk1.8 的 LinkedBlockingQueue 的实现，@yanhom\",\"添加插件机制，基于此可以对框架做自定义开发扩展，@WindSearcher\",\"细化告警配置，支持不同告警项配置不同接受人，@kyao\",\"通知告警平台支持云之家，@chunhui_lu\",\"支持 SpringBoot 1.x，@yanhom\",\"第三方线程池（tomcat、undertow、dubbo、rocketmq、okhttp3 等等）支持 run_timeout、queue_timeout、reject 告警，@kyao，@yanhom\",\"提供 Aware 扩展，可以扩展自定义线程池执行过程，@kyao\",\"监控数据新增线程池别名，@zhifei\"]},\"421\":{\"h\":\"Bugfix\",\"t\":[\"修复 Tomcat 高低版本兼容性报错问题，@yanhom\",\"修复其他 agent 增强线程池后，强转 DtpRunnable 失败的问题，@yanhom\",\"修复企微告警无@提醒的问题，@yanhom\",\"修复企微告警配置多个接受人不能正确@的问题，@KamToHung\",\"修复钉钉告警不能@所有人问题，@chenan\",\"修复因 Bean 初始化顺序不确定导致的 ApplicationContextHolder npe 问题，@yanhom\",\"修复修复拒绝策略为 CallerRunsPolicy 时，MdcRunnable 会删除主线程 mdc 信息的问题，@kyao\"]},\"422\":{\"h\":\"Optimize\",\"t\":[\"优化 dtp 内部 spi 的使用，统一封装管理，@peachyy\",\"部分代码优化重构，@yanhom，@KamToHung，@dragon-zhang，@kyao\",\"告警信息优化，trace 信息可以自己扩展，集成内部 ELK 等平台，@yanhom\"]},\"423\":{\"h\":\"项目地址\",\"t\":[\"官网：https://dynamictp.cn[1]\",\"gitee 地址：https://gitee.com/dromara/dynamic-tp[2]\",\"github 地址：https://github.com/dromara/dynamic-tp[3]\"]},\"424\":{\"h\":\"加入社群\",\"t\":[\"看到这儿，方便的话给项目一个 star，你的支持是我们前进的动力！\",\"使用过程中有任何问题，或者对项目有什么想法或者建议，可以加入社群，跟群友一起交流讨论。\",\"新增分群 4，可以自行扫码加入，或者加我微信拉入其他群！\",\"https://dynamictp.cn\",\"https://gitee.com/dromara/dynamic-tp\",\"https://github.com/dromara/dynamic-tp\"]},\"425\":{\"h\":\"Forest v1.5.33 发布，增强了自定义注解组合\"},\"426\":{\"h\":\"Forest 介绍\",\"t\":[\"Forest 是一个开源的 Java HTTP 客户端框架，它能够将 HTTP 的所有请求信息（包括 URL、Header 以及 Body 等信息）绑定到您自定义的 Interface 方法上，能够通过调用本地接口方法的方式发送 HTTP 请求\"]},\"427\":{\"h\":\"获得奖项\",\"t\":[\"2021 年度 OSC 中国开源项目评选「最受欢迎项目」\",\"2022 年度 OSC 中国开源项目评选「最火热中国开源项目社区」\"]},\"428\":{\"h\":\"简单的栗子\",\"t\":[\"声明式接口\",\"创建一个 interface，并用@Get注解修饰接口方法。\",\"public interface MyClient { @Get(\\\"http://localhost:8080/hello\\\") String hello(); } \",\"通过@Get注解，将上面的 MyClient 接口中的simpleRequest()方法绑定了一个 HTTP 请求， 其 URL 为http://localhost:8080/hello，并默认使用 GET 方式，且将请求响应的数据以 String 的方式返回给调用者\",\"编程式接口\",\"Forest.get(\\\"http://localhost:8080/hello\\\").execute(); \",\"编程式接口则更为简单直接\"]},\"429\":{\"h\":\"v1.5.33 新增特性\",\"t\":[\"增强自定义注解组合\",\"支持 Socks 代理\"]},\"430\":{\"h\":\"增强自定义注解组合\",\"t\":[\"组合注解是 Forest 提供的自定义注解的一种方式，这种方式只需定义注解自身，已经绑定上需要组合的注解即可，相比通过需要自定义注解声明周期的方式，要方便快捷不少\",\"@Documented @Retention(RetentionPolicy.RUNTIME) @Target({ElementType.METHOD, ElementType.TYPE}) // 组合Header注解 @Headers(\\\"Content-Type: application/json\\\") // 组合Address注解 @Address(host = \\\"127.0.0.1\\\", port = 80) public @interface MySite { // 自定义的 @MySite 注解 } \",\"此时使用自定义的@MySite的注解，就相当于加上了Content-Type: application/json头和host = \\\"127.0.0.1\\\", port = 80的根地址\",\"// @MySite 等价于 // @Header(\\\"Content-Type: application/json\\\") + @Address(host = \\\"127.0.0.1\\\", port = 80) @MySite public interface MyClient { // ... ... } \",\"如果你想更灵活一点，想为@MySite注解添加host和port属性，并覆盖@Address注解的host和port属性，这在以前版本是做不到的，而 v1.5.33 版本可以\",\"@Documented @Retention(RetentionPolicy.RUNTIME) @Target({ElementType.METHOD, ElementType.TYPE}) // 加上 @RequestAttributes 注解才能解析注解中定义的属性 @RequestAttributes // 组合Header注解 @Headers(\\\"Content-Type: application/json\\\") // 组合Address注解 @Address public @interface MySite { // 重写 @Address 注解的 host 属性 @OverrideAttribute String host(); // 重写 @Address 注解的 port 属性 @OverrideAttribute int port(); } \",\"此时就可以通过@MySite注解的host和port属性从外部传入根地址信息了\",\"@MySite(host = \\\"127.0.0.1\\\", port = 80) public interface MyClient { // ... ... } \"]},\"431\":{\"h\":\"Socks 协议代理\",\"t\":[\"在以前版本也可以实现 Socks 代理功能，但需要自定义后端的 OkHttpClient 对象或 Apache 的 HttpClient 对象，然后还要后端 HTTP 框架的 Client 对象绑定自定义的 Socket Connection 部分代码，非常的麻烦。如果再加上 SSL 和用户验证的需求，那更是烦上加烦\",\"而此次 Forest 直接支持了 Socks 协议代理，分别为声明式接口和编程式接口提供了友好的 Api，让事情变成原本就该有的简单\"]},\"432\":{\"h\":\"声明式 Socks 代理\",\"t\":[\"只要加上@SocksProxy注解，并填上host和port就能轻松实现 Socks 代理\",\"@Post(\\\"http://localhost:8080/hello\\\") @SocksProxy(host = \\\"127.0.0.1\\\", port = \\\"1089\\\") String simplePostWithSocksProxy(); \",\"加上用户密码验证也十分简单\",\"@Post(\\\"http://localhost:8080/hello\\\") @SocksProxy(host = \\\"127.0.0.1\\\", port = \\\"1089\\\", username = \\\"root\\\", password = \\\"xxxxxx\\\") String simplePostWithSocksProxy(); \"]},\"433\":{\"h\":\"编程式 Socks 代理\",\"t\":[\"通过静态方法ForestProxy.socks即可快速构建 Socks 协议代理\",\"ForestProxy proxy = ForestProxy.socks(\\\"127.0.0.1\\\", 3128); \",\"加上用户密码验证\",\"ForestProxy proxy = ForestProxy.socks(\\\"127.0.0.1\\\", 3128) .username(\\\"foo\\\") // 验证用户名 .password(\\\"bar\\\"); // 验证密码 \"]},\"434\":{\"h\":\"官网和仓库地址\"},\"435\":{\"h\":\"官网地址:\",\"t\":[\"http://forest.dtflyx.com\"]},\"436\":{\"h\":\"Gitee 仓库地址:\",\"t\":[\"https://gitee.com/dromara/forest\"]},\"437\":{\"h\":\"Github 仓库地址:\",\"t\":[\"https://github.com/dromara/forest\"]},\"438\":{\"h\":\"本次更新内容\",\"t\":[\"feat: #I6MLMD 支持 socks 代理\",\"feat: 组合注解支持属性重写\",\"fix: #I7UPBR @Body 注解的数组参数无法正常解析为 JSON 数组\",\"fix: #I7F3F0 Content-Type 为 application/xml 的情况下，发送 byte 数组数据错误\",\"fix: #I7QLTS @JSONBody Collectioncodes 报错\",\"add: SocksProxy 注解\",\"add: OverrideAttribute 注解\",\"opt: 优化 URL 更新方式\",\"update: forest-solon-plugin 升级 solon 为：2.4.0\"]},\"439\":{\"h\":\"开源实时监控 HertzBeat v1.3.2 发布, 更稳定更易用\"},\"440\":{\"h\":\"50 天 36 位小伙伴的贡献，开源实时监控工具 HertzBeat v1.3.1 发布\",\"t\":[\"官网: hertzbeat.dromara.org | hertzbeat.com | tancloud.cn\"]},\"441\":{\"h\":\"What is HertzBeat?\",\"t\":[\"HertzBeat 赫兹跳动 是一个拥有强大自定义监控能力，无需 Agent 的开源实时监控告警工具。 集 监控+告警+通知 为一体，支持对应用服务，数据库，操作系统，中间件，云原生，网络等指标监控，阈值告警通知一步到位。 支持更自由化的阈值规则(计算表达式)，邮件DiscordSlackTelegram钉钉微信飞书短信Webhook 等方式及时送达。\",\"我们将Http,Jmx,Ssh,Snmp,Jdbc等协议规范可配置化，您只需配置YML监控模版就能使用这些协议去自定义采集任何您想要的指标。\",\"您相信只需定义 YML 就能立刻适配一款 K8s 或 Docker 等新的监控类型吗？\",\"Github: https://github.com/dromara/hertzbeat\",\"Gitee: https://gitee.com/dromara/hertzbeat\"]},\"442\":{\"h\":\"v1.3.1 版本来了\",\"t\":[\"经过 51 天总 36 位小伙伴们的贡献迭代更新，HertzBeat v1.3.1 正式发布啦, 推荐升级食用！\",\"支持时序数据库 GreptimeDB (aviatorscript, sofastack 的开源大佬的新项目，点赞) 存储指标数据，用户可以自由选择喜欢的时序数据库来存储。\",\"新增很多朋友期待的监控导入导出功能，对于导入导出格式 Excel, Json, Yaml，小孩才做选择题，这些我们全都要。\",\"支持告警静默功能，监控服务维护期间，业务升级期间再也不怕无必要的频繁告警了。新增告警静默规则即可，支持一次性时间段和周期性时间静默。\",\"支持 openguass influxdb 存储指标数据，与 HuaweiCloud 的开源活动合作需求，用户可以使用 HuaweiCloud 云上的 openguass influxdb 一键开通接入存储指标数据。\",\"新的监控模板概念，我们把所有监控的指标采集定义都视为一个个监控模版 用户只需要定义一个新的监控模版，就能适配一款新的监控类型，目前官方已支持的监控模版可以访问官网 https://hertzbeat.com/zh-cn/docs/template 查看，欢迎大家分享贡献更多自己的监控模版。\",\"支持 tdengine3.0, EulerOS 指标和 SpringBoot3 指标, HuaweiCloud sms 发送消息等等\",\"还有更多新功能就不一一详述了，等待你的探索哦\",\"感谢 hertzbeat 贡献者们的贡献！👍👍\",\"非常欢迎文档,编码,找 BUG,I18n 等各方面的贡献者加入\",\"只需要一条 docker 命令即可安装体验 hertzbeat\",\"docker run -d -p 1157:1157 --name hertzbeat tancloud/hertzbeat\"]},\"443\":{\"h\":\"Release Doc\",\"t\":[\"https://github.com/dromara/hertzbeat/releases/tag/v1.3.1\"]},\"444\":{\"h\":\"升级注意 ⚠️.\",\"t\":[\"若之前使用的 TDengine 时序数据库，需升级至 TDengine3.0+\",\"需要执行 SQL 升级脚本\",\"ALTER table hzb_alert_define modify field varchar(255) default null; COMMIT; \"]},\"445\":{\"h\":\"⛄ 已支持\",\"t\":[\"我们将监控采集类型(mysql,jvm,k8s)都定义为 yml 监控模版，用户可以导入这些模版来支持对应类型的监控! 欢迎大家一起贡献你使用过程中自定义的通用监控类型监控模版。\",\"网站监控, 端口可用性, Http Api, Ping 连通性, Jvm, SiteMap 全站, Ssl 证书, SpringBoot, FTP 服务器\",\"Mysql, PostgreSQL, MariaDB, Redis, ElasticSearch, SqlServer, Oracle, MongoDB, 达梦, OpenGauss, ClickHouse, IoTDB, Redis 集群\",\"Linux, Ubuntu, CentOS, Windows\",\"Tomcat, Nacos, Zookeeper, RabbitMQ, Flink, Kafka, ShenYu, DynamicTp, Jetty, ActiveMQ\",\"Kubernetes, Docker\",\"Huawei Switch, HPE Switch, TP-LINK Switch, Cisco Switch\",\"和更多自定义监控模版。\",\"通知支持 DiscordSlackTelegram邮件钉钉微信飞书短信Webhook。\",\"欢迎在仓库给颗 Star 小星星来支持我们。\",\"Github: https://github.com/dromara/hertzbeatGitee: https://gitee.com/dromara/hertzbeat\"]},\"446\":{\"h\":\"开源实时监控 HertzBeat v1.3.2 发布, 更稳定更易用\"},\"447\":{\"h\":\"HertzBeat 介绍\",\"t\":[\"HertzBeat 赫兹跳动 是一个拥有强大自定义监控能力，无需 Agent 的开源实时监控告警工具。 致力于易用友好，全 WEB 页面操作，鼠标点一点就能监控告警，零上手学习成本。 集 监控+告警+通知 为一体，支持对应用服务，数据库，操作系统，中间件，云原生，网络等指标监控，阈值告警通知一步到位。 支持更自由化的阈值规则，邮件DiscordSlackTelegram钉钉微信飞书短信Webhook 等方式及时送达。\",\"我们将Http,Jmx,Ssh,Snmp,Jdbc等协议规范可配置化，您只需配置YML就能使用这些协议去自定义采集任何您想要的指标。\",\"官网: hertzbeat.com | hertzbeat.dromara.org | tancloud.cn\",\"Github: https://github.com/dromara/hertzbeat\",\"Gitee: https://gitee.com/dromara/hertzbeat\"]},\"448\":{\"h\":\"v1.3.2 来了\",\"t\":[\"**这次累计 27 位小伙伴们的辛苦贡献才出来了这个令人欣喜的版本。****感谢他们！爱心 💗**\",\"这个版本我们支持对freebsd, debian, opensuse, redhat, apache doris等新的监控类型和指标。\",\"支持 WEB 页面配置邮件服务器，取代之前的文件配置\",\"支持告警收敛，是否遇到了重复告警频繁发送，有了告警收敛马上解决\",\"公共消息队列支持 Kafka，除了我们默认的内置内存消息队列，也支持了外置 Kafka 消息队列，提升系统性能。\",\"新的监控中心页面，聚合所有监控类型，不用像之前那样切来切去了。\",\"支持标签分组展示，把同一业务类别的监控们分组标记，统一管理。\",\"阈值配置不仅仅有表达式，还支持更人性化的操作 UI，之前的表达式对新人不太友好很容易出错，现在可以直接 UI 操作啦，它可以和表达式互相切换。\",\"还有 HTTP ipv6 等更多功能。\",\"修复了大量 BUG，完善文档代码，提高了整体的稳定可用性。更多新功能欢迎探索！\",\"只需要一条 docker 命令即可安装体验 hertzbeat:docker run -d -p 1157:1157 --name hertzbeat tancloud/hertzbeat\",\"若 dockerhub 网络超时，可以使用下面命令:docker run -d -p 1157:1157 --name hertzbeat quay.io/tancloud/hertzbeat\",\"监控告警全页面操作，0 学习成本，无需修改配置文件加监控，上效果:\"]},\"449\":{\"h\":\"⛄ 已支持\",\"t\":[\"我们将监控采集类型(mysql,jvm,k8s)都定义为 yml 监控模版，用户可以导入这些模版来支持对应类型的监控! 欢迎大家一起贡献你使用过程中自定义的通用监控类型监控模版。\",\"Website, Port Telnet, Http Api, Ping Connect, Jvm, SiteMap, Ssl Certificate, SpringBoot2, FTP Server, SpringBoot3\",\"Mysql, PostgreSQL, MariaDB, Redis, ElasticSearch, SqlServer, Oracle, MongoDB, DM, OpenGauss, ClickHouse, IoTDB, Redis Cluster, Redis Sentinel\",\"Linux, Ubuntu, CentOS, Windows, EulerOS, Fedora CoreOS, OpenSUSE, Rocky Linux, Red Hat, FreeBSD, AlmaLinux, Debian Linux\",\"Tomcat, Nacos, Zookeeper, RabbitMQ, Flink, Kafka, ShenYu, DynamicTp, Jetty, ActiveMQ\",\"Kubernetes, Docker\",\"CiscoSwitch, HpeSwitch, HuaweiSwitch, TpLinkSwitch, H3cSwitch\",\"和更多自定义监控模版。\",\"通知支持 Discord Slack Telegram 邮件 钉钉 微信 飞书 短信 Webhook。\",\"欢迎 star 三连来支持我们\",\"Github: https://github.com/dromara/hertzbeatGitee: https://gitee.com/dromara/hertzbeat\",\"加微信进交流群哇：\"]},\"450\":{\"h\":\"重磅，集群版 HertzBeat 发布，易用友好的开源实时监控系统!\"},\"451\":{\"h\":\"什么是 HertzBeat?\",\"t\":[\"HertzBeat 赫兹跳动 是一个拥有强大自定义监控能力，高性能集群，无需 Agent 的开源实时监控告警系统。\"]},\"452\":{\"h\":\"特点\",\"t\":[\"集 监控+告警+通知 为一体，支持对应用服务，数据库，操作系统，中间件，云原生，网络等监控阈值告警通知一步到位。\",\"易用友好，无需 Agent，全 WEB 页面操作，鼠标点一点就能监控告警，零上手学习成本。\",\"将 Http,Jmx,Ssh,Snmp,Jdbc 等协议规范可配置化，只需在浏览器配置监控模版 YML 就能使用这些协议去自定义采集想要的指标。您相信只需配置下就能立刻适配一款 K8s 或 Docker 等新的监控类型吗？\",\"高性能，支持多采集器集群横向扩展，支持多隔离网络监控，云边协同。\",\"自由的告警阈值规则，邮件DiscordSlackTelegram钉钉微信飞书短信Webhook 等方式消息及时送达。\",\"HertzBeat的强大自定义，多类型支持，高性能，易扩展，低耦合，希望能帮助开发者和团队快速搭建自有监控系统。 当然我们也提供了对应的 SAAS 版本监控云服务，中小团队和个人无需再为监控自有资源而去部署一套监控系统，登录即可免费开始。\",\"Github: https://github.com/dromara/hertzbeat\",\"Gitee: https://gitee.com/dromara/hertzbeat\"]},\"453\":{\"h\":\"集群版来啦\",\"t\":[\"我们之前的 hertzbeat 一直是单机版本，组件代码模块化但不支持采集器独立部署，所支持的监控数量上限受到了单节点的天然限制，且无法应对多个隔离网络的资源的统一纳管。 经过一个多月的迭代，我们重写了采集任务调度，采集器独立部署，设计单机版和集群版用同一套代码方便后续的维护升级，单机集群两种模式可相互切换无感知。最终很高兴，集群版如期与大家见面了。\",\"集群版不仅仅给我们带来了更强大的监控性能，更有云边协同等功能让人充满想象。\"]},\"454\":{\"h\":\"高性能集群\",\"t\":[\"支持部署采集器集群，多采集器集群横向扩展，指数级提高可监控数量与采集性能。\",\"监控任务在采集器集群中自调度，单采集器挂掉无感知故障迁移采集任务，新加入采集器节点自动调度分担采集压力。\",\"单机模式与集群模式相互切换部署非常方便，无需额外组件部署。\"]},\"455\":{\"h\":\"云边协同\",\"t\":[\"支持部署边缘采集器集群，与主 HertzBeat 服务云边协同提升采集能力。\",\"在多个网络不相通的隔离网络中，在以往的方案中我们需要在每个网络都部署一套监控系统，这导致数据不互通，管理部署维护都不方便。 HertzBeat 提供云边协同能力，可以在多个隔离网络部署边缘采集器，添加监控时指定采集器，采集器在隔离网络内部进行监控任务采集，采集数据上报，由主 HertzBeat 服务统一调度管理展示。 这多用于多个隔离数据中心或不同厂商云资源和云下资源的统一监控场景。\"]},\"456\":{\"h\":\"为什么要开源集群版?\",\"t\":[\"往往一些做需要商业化的开源产品的策略会是单机版作为玩具给小玩家们的入门使用，然后集群版作为闭源产品给有需求的氪金玩家付费使用。这样的模式是可以说非常不错的，即保证开源也得到了收益，也适用于很多开源项目的发展策略，可能会在商业路径上走得更通顺点。 网络上有些人会对这样的分单机和集群版的开源项目嗤之以鼻，觉得它们是伪开源，开源是噱头，他们觉得开源应该什么都开源免费出来，开源团队什么都应该无私奉献出来。。。。很无语这类人，有投入才有回报，当你免费使用着开源软件并得到价值的时候，是否应该想一想你付出给开源软件了什么而不是一味的索取。 那回到正题，我们又为什么要开源集群版？仅因为热爱开源？如果说我们还在少年可能这话你信，但一个快奔 30 还有家庭责任的人说出这话你信吗，我自己都不信 😂。 首先我们来看看开源能带来什么，或者为什么要做开源。最开始全职开源的想法很简单，做自己喜欢的开源产品(已实现)，程序员的梦想能部署在成千上万的服务器上(看下载量已实现)，然后基于此开源产品挣钱(暂未哭)。\",\"用户流量。开源项目免费提供给用户和开发者，吸引用户使用，宣传等方面都有优势。\",\"用户信任。开源的产品天生容易获取用户的信任和使用耐心，或者说降低用户的信任门槛。\",\"社区协作。开源的产品可以吸引到顶级贡献者一起贡献，接收用户的反馈 issue，pr 贡献等，在社区的驱动下使开源项目越来越好，正向反馈后也会有更多人参与和使用。社区协作我觉得这是开源的意义，而且这样不仅仅只是程序员之间的贡献代码协作，用户都是协作对象(比如我们这个项目有大量的运维朋友贡献代码和文档)，如果是仅仅代码开源而不社区协作，那还不如放个安装包给别人免费使用下载就好。\",\"产品生态。这对一些需要生态的产品是需要的，比如 hertzbeat，需要支持对接各种类型协议的监控类型，大量的监控模版。一个好的开源项目生态才能吸引到其它贡献者贡献和分享，在生态中互通有无，最终大家在生态中都受益。这在闭源程序中是很难做到的。\",\"上面几点，重在社区协作和产品生态，这也是开源集群版的原因，只有卷开源产品卷自己到更强的产品力，比如集群这一技术特性天生会吸引到开发者(而且集群本身就是我们社区协作的产物)，会吸引到更多的用户和贡献者使用反馈大家一起迭代，社区驱动进而正向促进开源项目和满足用户功能体验。 而对于开源商业化，开源商业化的前提是得有个真正好的，受欢迎，被广泛使用的开源产品，然后在此基础上做商业化挣钱。\",\"对了这里再说下开源不等同于免费，如果基于 HertzBeat 二次开发修改了 logo，名称，版权等，请先找我们授权否则会有法律风险，我们有权利追诉破坏开源并因此获利的团队个人的全部违法所得。免费使用不是白嫖，这种破坏开源协议的才是，目前发现大量白嫖怪，小心点哈你们。我每年正月初七都会祝你们用这些钱吃的安心，住的放心，玩的开心哈。(仅个人言论不代表社区)\"]},\"457\":{\"h\":\"尝试部署集群版\",\"t\":[\"docker 环境仅需一条命令即可开始\",\"docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat tancloud/hertzbeat\",\"或者使用 quay.io (若 dockerhub 网络链接超时)\",\"docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat quay.io/tancloud/hertzbeat\",\"浏览器访问 http://localhost:1157 即可开始，默认账号密码 admin/hertzbeat\",\"部署采集器集群\",\"docker run -d -e IDENTITY=custom-collector-name -e MANAGER_IP=127.0.0.1 -e MANAGER_PORT=1158 --name hertzbeat-collector tancloud/hertzbeat-collector \",\"-e IDENTITY=custom-collector-name : 配置此采集器的唯一性标识符名称，多个采集器名称不能相同，建议自定义英文名称。\",\"-e MANAGER_IP=127.0.0.1 : 配置连接主 HertaBeat 服务的对外 IP。\",\"-e MANAGER_PORT=1158 : 配置连接主 HertzBeat 服务的对外端口，默认 1158。\",\"更多配置详细步骤参考官网 通过 Docker 方式安装 HertzBeat\"]},\"458\":{\"h\":\"更多的 v1.4.0 版本更新\",\"t\":[\"更多版本新功能更新欢迎探索，感谢社区小伙伴们的辛苦贡献，爱心 💗!\",\"[doc] add v1.3.2 publish doc by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1075\",\"remove elasticsearch unused param index by @Ceilzcx in https://github.com/dromara/hertzbeat/pull/1080\",\"feature support monitoring apache airflow by @luoxuanzao in https://github.com/dromara/hertzbeat/pull/1081\",\"add luoxuanzao as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1083\",\"[collector] bugfix sshd cannot use private key to connect by @gcdd1993 in https://github.com/dromara/hertzbeat/pull/1084\",\"bugfix update dashboard alerts cards height not consist by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1087\",\"Feature#serverchan by @zqr10159 in https://github.com/dromara/hertzbeat/pull/1092\",\"bugfix dm database monitoring connect error by @lisongning in https://github.com/dromara/hertzbeat/pull/1094\",\"add lisongning as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1096\",\"update alert rule operator display \\\"<=\\\" to \\\">=\\\" by @Ceilzcx in https://github.com/dromara/hertzbeat/pull/1097\",\"[doc] add custom monitoring relate document by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1098\",\"add YutingNie as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1103\",\"Remove unreachable status by @YutingNie in https://github.com/dromara/hertzbeat/pull/1102\",\"139 auto update alert status by @l646505418 in https://github.com/dromara/hertzbeat/pull/1104\",\"feat: aviator fn for str contains, exists & matches by @mikezzb in https://github.com/dromara/hertzbeat/pull/1106\",\"add mikezzb as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1107\",\"bugfix common alarm do not need monitorId tag existed by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1108\",\"bugfix extern alert do not have labels mapping inner monitor by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1111\",\"feature: support apache spark metrics monitoring by @a-little-fool in https://github.com/dromara/hertzbeat/pull/1114\",\"add a-little-fool as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1116\",\"[Feature]Add third report of TenCloud by @zqr10159 in https://github.com/dromara/hertzbeat/pull/1113\",\"[Feature]Add third report of TenCloud (#1113) by @zqr10159 in https://github.com/dromara/hertzbeat/pull/1119\",\"[manager] fix: can query by tags when tagValue is null by @l646505418 in https://github.com/dromara/hertzbeat/pull/1118\",\"bugfix the notification template environment variable display error by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1120\",\"add littlezhongzer as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1127\",\"feature:monitor brearer token api, ignore letter case to comparison by @littlezhongzer in https://github.com/dromara/hertzbeat/pull/1122\",\"docs: enhance README by @mikezzb in https://github.com/dromara/hertzbeat/pull/1128\",\"Update app-oracle.yml by @ChenXiangxxxxx in https://github.com/dromara/hertzbeat/pull/1129\",\"add ChenXiangxxxxx as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1130\",\"fix alarm silence strategy setting failed by @Ceilzcx in https://github.com/dromara/hertzbeat/pull/1131\",\"support run sql script file in jdbc protocol config by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1117\",\"bugfix return old cache json file when upgrade version by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1137\",\"support ssh protocol config choose if reuse connection by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1136\",\"feat(web): alert threshold UI support matches & contains by @mikezzb in https://github.com/dromara/hertzbeat/pull/1138\",\"support hertzbeat metrics collector cluster by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1101\",\"add collector card in dashboard by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1147\",\"bugfix: linux collect warning: bad syntax, perhaps a bogus '-' by @Mr-zhou315 in https://github.com/dromara/hertzbeat/pull/1151\",\"add Mr-zhou315 as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1157\",\"support config timezone locale language region on web ui by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1154\",\"bugfix monitoring template app name already exists by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1152\",\"bugfix can not startup when error monitoring template yml file by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1153\",\"tags also deleted when the monitor is deleted by @Ceilzcx in https://github.com/dromara/hertzbeat/pull/1159\",\"monitoring param host with http head will not be error reported by @littlezhongzer in https://github.com/dromara/hertzbeat/pull/1155\",\"[script] feature update build.sh and Dockerfile: detect app version a… by @XimfengYao in https://github.com/dromara/hertzbeat/pull/1162\",\"add XimfengYao as a contributor for code by @allcontributors in https://github.com/dromara/hertzbeat/pull/1163\",\"[doc] add collector clusters document by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1161\",\"[hertzbeat] release hertzbeat version v1.4.0 by @tomsun28 in https://github.com/dromara/hertzbeat/pull/1168\"]},\"459\":{\"h\":\"⛄ 已支持\",\"t\":[\"我们将监控采集类型(mysql,jvm,k8s)都定义为 yml 监控模版，用户可以导入这些模版来支持对应类型的监控! 欢迎大家一起贡献你使用过程中自定义的通用监控类型监控模版。\",\"Site Monitor, Port Availability, Http Api, Ping Connectivity, Jvm, SiteMap Full Site, Ssl Certificate, SpringBoot, FTP Server\",\"Mysql, PostgreSQL, MariaDB, Redis, ElasticSearch, SqlServer, Oracle, MongoDB, Damon, OpenGauss, ClickHouse, IoTDB, Redis Cluster\",\"Linux, Ubuntu, CentOS, Windows\",\"Tomcat, Nacos, Zookeeper, RabbitMQ, Flink, Kafka, ShenYu, DynamicTp, Jetty, ActiveMQ\",\"Kubernetes, Docker\",\"Huawei Switch, HPE Switch, TP-LINK Switch, Cisco Switch\",\"and more for your custom monitoring.\",\"Notifications support DiscordSlackTelegramMailPinningWeChatFlyBookSMSWebhook.\",\"和更多自定义监控模版。\",\"通知支持 DiscordSlackTelegram邮件钉钉微信飞书短信Webhook。\",\"欢迎 star 一波来支持我们哦。\",\"Github: https://github.com/dromara/hertzbeatGitee: https://gitee.com/dromara/hertzbeat\"]},\"460\":{\"h\":\"更好的用户体验, 开源实时监控 HertzBeat 新版发布\",\"t\":[\"哈喽大家好，时间很快 1 个多月又过去了，HertzBeat 经过近两个月的迭代终于发布了 v1.4.1 版本。为什么是终于，因为有点难哈哈。我们参考 rocketmq 重构了 netty 的 server client 端模块，重构了采集器集群调度。比起上一版本有了更优雅的通讯代码，更完善全面的集群。采集任务一致性 hash 调度，集群心跳保活，断开主动重连，主动上线下线，主动停机等等这些都有。设计了新的控制台登陆界面和欢迎页面，支持了采集器集群的 UI 管理，合并了开源之夏两位同学的帮助提示头特性和阈值表达式特性，很多用户需要的监控指标名称国际化等等，最重要的当然是修复若干 BUG，增强了用户体验(自我感觉良好)。\"]},\"461\":{\"h\":\"总结起来如下：\",\"t\":[\"重构 netty client server, 采集器集群调度 感谢 @Ceilzcx @tomsun28\",\"采集器集群的 UI 界面管理 感谢 @Ceilzcx @tomsun28\",\"功能页面帮助信息模块和阈值表达式增强 开源之夏和 GLCC 课题 感谢 @YutingNie @mikezzb\",\"新的控制台登陆界面和欢迎页面\",\"监控指标名称国际化 用户可以看指标的中英文名称啦，欢迎一起完善监控模版里面的 i18n 国际化资源\",\"支持 kubernetes helm charts 一键部署 见 https://artifacthub.io/packages/search?repo=hertzbeat\",\"更多的特性和 BUG 修复，稳定性提示 感谢 @zqr10159 @Carpe-Wang @luxx-lq @l646505418 @LINGLUOJUN @luelueking @qyaaaa @novohit @gcdd1993\"]},\"462\":{\"h\":\"上效果图:\",\"t\":[\"新的登陆页面 UI\",\"支持采集器集群管理\",\"友好的帮助文档头\",\"监控指标名称国际化\"]},\"463\":{\"h\":\"什么是 HertzBeat?\",\"t\":[\"HertzBeat 赫兹跳动 是一个拥有强大自定义监控能力，高性能集群，无需 Agent 的开源实时监控告警系统。\"]},\"464\":{\"h\":\"特点\",\"t\":[\"集 监控+告警+通知 为一体，支持对应用服务，数据库，操作系统，中间件，云原生，网络等监控阈值告警通知一步到位。\",\"易用友好，无需 Agent，全 WEB 页面操作，鼠标点一点就能监控告警，零上手学习成本。\",\"将 Http,Jmx,Ssh,Snmp,Jdbc 等协议规范可配置化，只需在浏览器配置监控模版 YML 就能使用这些协议去自定义采集想要的指标。您相信只需配置下就能立刻适配一款 K8s 或 Docker 等新的监控类型吗？\",\"高性能，支持多采集器集群横向扩展，支持多隔离网络监控，云边协同。\",\"自由的告警阈值规则，邮件DiscordSlackTelegram钉钉微信飞书短信Webhook 等方式消息及时送达。\",\"Github: https://github.com/dromara/hertzbeat\",\"Gitee: https://gitee.com/dromara/hertzbeat\"]},\"465\":{\"h\":\"尝试部署\",\"t\":[\"docker 环境仅需一条命令即可开始\",\"docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat tancloud/hertzbeat\",\"或者使用 quay.io (若 dockerhub 网络链接超时)\",\"docker run -d -p 1157:1157 -p 1158:1158 --name hertzbeat quay.io/tancloud/hertzbeat\",\"浏览器访问 http://localhost:1157 即可开始，默认账号密码 admin/hertzbeat\",\"部署采集器集群\",\"docker run -d -e IDENTITY=custom-collector-name -e MANAGER_HOST=127.0.0.1 -e MANAGER_PORT=1158 --name hertzbeat-collector tancloud/hertzbeat-collector \",\"-e IDENTITY=custom-collector-name : 配置此采集器的唯一性标识符名称，多个采集器名称不能相同，建议自定义英文名称。\",\"-e MANAGER_HOST=127.0.0.1 : 配置连接主 HertaBeat 服务的对外 IP。\",\"-e MANAGER_PORT=1158 : 配置连接主 HertzBeat 服务的对外端口，默认 1158。\",\"Github: https://github.com/dromara/hertzbeatGitee: https://gitee.com/dromara/hertzbeat\",\"感兴趣的话给个 star 吧😄，QQ 交流群：236915833  微信交流群请加好友：\"]},\"466\":{\"h\":\"LiteFlow v2.10.4发布，规则引擎之路进行到底\"},\"467\":{\"h\":\"LiteFlow 介绍\",\"t\":[\"LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。\",\"LiteFlow 也是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。\",\"同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3000 人。\",\"如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：\",\"项目官网:\",\"https://liteflow.yomahub.com\",\"gitee 托管仓库：\",\"https://gitee.com/dromara/liteFlow\",\"github 托管仓库：\",\"https://github.com/dromara/liteflow\"]},\"468\":{\"h\":\"LiteFlow v2.10.4\",\"t\":[\"本次新版本主要为增强版本。修复了一些使用中碰到的 Bug。部分代码作了一些增强。\",\"本次更新总共为 4 个 issue。\",\"感谢社区里那么多的使用者给我提出很多宝贵的意见。\",\"本次更新列表：\",\"增强 #I6XPN4 组件上添加 @RefreshScope 初始化就失败了 https://gitee.com/dromara/liteFlow/issues/I6XPN4 修复 #I7C6VR ELIF表达式中目前无法加入AND OR NOT表达式 https://gitee.com/dromara/liteFlow/issues/I7C6VR 修复 #I7CCAB 2.10.0中CatchCondition会把ChainEndException也捕获 https://gitee.com/dromara/liteFlow/issues/I7CCAB 修复 #I7COX4 SWITCH跳转到设置tag的chain上，存在问题 https://gitee.com/dromara/liteFlow/issues/I7COX4 \"]},\"469\":{\"h\":\"低头砍树，抬头看路\",\"t\":[\"距离上次发版已经有一个多月了。\",\"很明显，我放慢了发版的速度。以前一个礼拜一个版本的速度让我觉得过于快了，有时候抬起头去看看方向也是非常重要的。\",\"在之前的迭代版本中，LiteFlow 大体上经历了 4 个阶段：\",\"1.从标签式流程全面转向 EL 表达式流程，这个阶段奠定了 LiteFlow 的核心语法结构。\",\"2.语法构造阶段，重写了所有的语法底层解析。使得底层更加坚固。\",\"3.插件化扩展阶段，设计了除了核心之外所有一切均可为插件的架构，并在插件架构上逐渐推出了 6 种脚本插件和 5 种存储插件。\",\"4.语义扩展阶段，增加了非常多的新的语法，使得在语义方面更加完善。\",\"而在以后，LiteFlow 在之前打下的基础上，会往以下几个方向进行深度拓展：\",\"1.推出更加高级的语法装配 API\",\"2.开放自定义语法的扩展 API\",\"3.丰富元数据，开放元数据的分析 API\",\"4.重做监控，推出基于 Prometheus 的 Grafana 大盘，能监控到每一个节点的各项指标数据\",\"5.提供规则和脚本版本概念，加入回滚，覆盖，多版本本并行等特性。\",\"6.基于语法装配 API，提供后台管理动态生成规则。并可对规则进行全方位的界面式管理\",\"所以，LiteFlow 会一直是一个长期维护，并不断进化的国产开源规则引擎。正如我在官网中写的那样：我希望可以把 LiteFlow 这个项目带入中国顶尖开源软件的行列。\",\"LiteFlow 这个项目并不是属于作者一个人的，它同样属于团队成员，属于那么多的贡献者，属于社区。\",\"我希望有更多的人来参与这个项目，参与开源。\",\"LiteFlow 在今年夏天也参加了中国科学院软件研究所发起的开源软件供应链点亮计划-《开源之夏 2023》，比较意外的是，有非常多的同学报名了 LiteFlow 的相关课题的研究。除了中选课题的同学之外，我也邀请了一些优秀的同学来参与其他课题的研究。\",\"希望你们都能顺利通过课题，成为团队的成员，为 LiteFlow 项目添砖加瓦。\"]},\"470\":{\"h\":\"支持和赞助 LiteFlow\",\"t\":[\"开源一个项目并坚持 2 年并不容易，如果各位对 LiteFlow 这个项目有信心并且愿意支持的话，可以在官网首先点击*给LiteFlow发电*按钮。\",\"但不管你是否选择赞助，我仍然会在社区里尽可能的解决你们的问题。\",\"社区里的问题太多，如果没回答上，请多艾特我几遍。\"]},\"471\":{\"h\":\"如何加群\",\"t\":[\"LiteFlow 的社区群已经有大约 3000 人以上了。你有任何问题，都可以在群里问。\",\"关于加群的方式，请参考：https://liteflow.yomahub.com/pages/73c2c3/\"]},\"472\":{\"h\":\"LiteFlow v2.10.5发布，这个强大的规则引擎值得一用\"},\"473\":{\"h\":\"LiteFlow 介绍\",\"t\":[\"LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。\",\"LiteFlow 也是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。\",\"同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3000 人。\",\"如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：\",\"项目官网:\",\"https://liteflow.yomahub.com\",\"gitee 托管仓库：\",\"https://gitee.com/dromara/liteFlow\",\"github 托管仓库：\",\"https://github.com/dromara/liteflow\"]},\"474\":{\"h\":\"LiteFlow v2.10.5\",\"t\":[\"v2.10.5 版本主要就是对日志从底层进行架构改造。增加了支持传入自定义的请求 ID。\",\"以及修复了一些循环表达式中的 Bug。\",\"我们对日志进行了大幅度的改造，支持了自定义的 RequestId 传入，这个特性可以很方便的和你自己系统的 traceId 进行集成。\",\"你可以调用如下方法来传入一个已有的 requestId：\",\"LiteflowResponse response = flowExecutor.execute2RespWithRid(\\\"chain1\\\", arg, \\\"T001234\\\", YourContext.class); \",\"那么，这个链路中所有的框架日志都会带有[T001234]这个传入的 ID 前缀了。\",\"另外新版本的 LiteFlow 还提供了一个日志包装类。只要你在组件中把 slf4j 的日志声明换成如下形式，那么你在组件中自己打出的日志也会带有请求 ID 前缀。\",\"private final LFLog logger = LFLoggerManager.getLogger(FlowExecutor.class); \",\"其中LFLog这个类是继承自 slf4j 的Logger类的，所以它的使用方式和Logger是完全一致的。\",\"你只需要把定义换一下就 ok 了。\",\"如果在一个链路中相同请求的日志都拥有同一个请求 ID，那么对于定位问题来说，会很方便。推荐大家使用此特性。\"]},\"475\":{\"h\":\"循环场景中的一些 bug 的修复\",\"t\":[\"看来大家对循环特性使用的还是比较多的。在使用的过程中，社区内也给出了很多反馈意见。\",\"可能是之前对循环定义的测试用例有些少了，所以对于一些场景没覆盖到。这次修复了社区内提供的 2 个 Bug。\",\"同时也补全了测试用例。\"]},\"476\":{\"h\":\"完整更新列表\",\"t\":[\"增强 #I7F567 增加对业务自定义requestId传入的支持 https://gitee.com/dromara/liteFlow/issues/I7F567 修复 #I7EKS8 在isAccess中进行setIsEnd(true)流程没有结束的问题 https://gitee.com/dromara/liteFlow/issues/I7EKS8 修复 #I7EKP3 同一个线程里分别调用2个Chain，currObj没有隔离的情况 https://gitee.com/dromara/liteFlow/issues/I7EKP3 修复 #I7E8RN 次数循环组件 下标获取问题 https://gitee.com/dromara/liteFlow/issues/I7E8RN \"]},\"477\":{\"h\":\"支持和赞助 LiteFlow\",\"t\":[\"开源一个项目并坚持 2 年并不容易，如果各位对 LiteFlow 这个项目有信心并且愿意支持的话，可以在官网首先点击*给LiteFlow发电*按钮。\",\"但不管你是否选择赞助，我仍然会在社区里尽可能的解决你们的问题。\",\"社区里的问题太多，如果没回答上，请多艾特我几遍。\"]},\"478\":{\"h\":\"如何加群\",\"t\":[\"LiteFlow 的社区群已经有大约 3000 人以上了。你有任何问题，都可以在群里问。\",\"关于加群的方式，请参考：https://liteflow.yomahub.com/pages/73c2c3/\"]},\"479\":{\"h\":\"LiteFlow v2.10.6发布！一款社区驱动型优秀的规则引擎框架\"},\"480\":{\"h\":\"LiteFlow 介绍\",\"t\":[\"LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。\",\"LiteFlow 也是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。\",\"同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3000 人。\",\"如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：\",\"项目官网:\",\"https://liteflow.yomahub.com\",\"gitee 托管仓库：\",\"https://gitee.com/dromara/liteFlow\",\"github 托管仓库：\",\"https://github.com/dromara/liteflow\"]},\"481\":{\"h\":\"前言\",\"t\":[\"v2.10.6 版本是一个进行诸多增强的版本。总计有 11 个 issue 的增强，3 个 issue 的修复。\"]},\"482\":{\"h\":\"全面支持 JDK17\",\"t\":[\"其实 LiteFlow 在 2.10.0 的时候，已经支持了 JDK17。但是项目并未对 JDK17 进行完整的测试。导致很多小伙伴实际在 JDK17 环境中跑起来，出现了一些问题。\",\"这是由于 LiteFlow 的 900 多个测试用例全部都是针对于 JDK8 来跑的。并未在 JDK17 下进行完整的测试。\",\"而 2.10.6 这个版本，我们系统的针对 JDK17 进行了完整的测试。通过了全部的测试用例。所以大家可以放心的使用。\",\"当然，LiteFlow 也是支持 Springboot3 的。\",\"有的同学可能会问，JDK20 支持不支持？其实连作者自己也不知道是否支持 JDK20，因为没有进行系统的测试过。这版本太新了。\"]},\"483\":{\"h\":\"支持 SQL 插件使用自己定义的数据源\",\"t\":[\"LiteFlow 支持将 EL 表达式，脚本存放在所有的关系型数据库中。但是之前的版本，LiteFlow 有自己的一套数据库连接配置，这就导致了往往使用者同一套数据库配置要配置 2 遍，还有一些使用者在实际的环境中，可能数据源是加密的，或者数据源是从外部获取的。这就没法使用 LiteFlow 提供的数据源配置了。\",\"所以，这次我们支持了让 SQL 插件能够使用项目内的数据源来获取数据。更加优雅和方便。\",\"甚至于我们还考虑到了多数据源的场景，让 LiteFlow 能够智能的挑选正确的数据源。\"]},\"484\":{\"h\":\"LiteFlow 的测试用例全面转向 Junit5\",\"t\":[\"这也许和使用者没啥太大关系。\",\"LiteFlow 这个框架功能点非常多，使用人数也非常庞大。所以每一次发版，我都需要补很多测试用例。测试用例是 LiteFlow 整个框架质量的命脉。甚至于测试用例成为了和核心代码一样重要的存在。所以 LiteFlow 目前有将近 1000 个测试用例。\",\"在 2.10.6 版本的源代码中，所有的测试用例从原先的 Junit4 全部转向了 Junit5。更加稳定。更加有保障。\"]},\"485\":{\"h\":\"对脚本和 Java 的联动进行加强\",\"t\":[\"主要加强点在@ScriptBean这个注解，这个是脚本和 Java 联动的关键注解，在社区群里，有同学报出这个注解有时无法正常的工作，导致脚本拿不到 Java 的对象。对这个问题，我进行了深入研究。在 2.10.6 版本中，对这个注解进行了很多的优化，应该能彻底解决之前的问题。\"]},\"486\":{\"h\":\"对声明式组件增加了组件名称的设定\",\"t\":[\"在 2.10.6 版本中，声明式组件支持了声明nodeName 这个属性了。\"]},\"487\":{\"h\":\"错误事件通知的改造\",\"t\":[\"原先错误事件回调通知是这样定义的：\",\"public void onError() throws Exception; \",\"这样定义导致有些同学不知道如何取Exception，为了使 api 更加友好，这次这个回调方法改成了如下形式：\",\"public void onError(Exception e) throws Exception; \"]},\"488\":{\"h\":\"全局拦截器的改造\",\"t\":[\"原先全局拦截器的定义如下：\",\"@Component public class CmpAspect implements ICmpAroundAspect { @Override public void beforeProcess(String nodeId, Slot slot) { YourContextBean context = slot.getContextBean(YourContextBean.class); //before business } @Override public void afterProcess(String nodeId, Slot slot) { YourContextBean context = slot.getContextBean(YourContextBean.class); //after business } } \",\"这种方式无法直观的拿到很多信息，为了 api 更加友好，这次我们改造了这个接口的实现参数：\",\"@Component public class CmpAspect implements ICmpAroundAspect { @Override public void beforeProcess(NodeComponent cmp) { YourContextBean context = cmp.getContextBean(YourContextBean.class); //before business } @Override public void afterProcess(NodeComponent cmp) { YourContextBean context = cmp.getContextBean(YourContextBean.class); //after business } } \"]},\"489\":{\"h\":\"布尔表达式中 OR 的短路判断\",\"t\":[\"在社区中有同学反应，如果有以下 EL 语句：\",\"IF(OR(a,b,c), x); \",\"如果 a 返回 true，那其实 b 和 c 应该不用执行，而事实情况是 LiteFlow 把 a,b,c 都执行了。\",\"所以这次我们也收到了贡献者的 PR，把这个问题给优化了。\"]},\"490\":{\"h\":\"同一个组件复用时 Step 的记录问题\",\"t\":[\"LiteflowResponse的 step 可以用来回溯整个链路的实际执行情况。但是在相同组件复用的情况下，这个 step 的记录在之前版本中有些问题。此次我们也修复了这个问题。\"]},\"491\":{\"h\":\"日志方面的增强\",\"t\":[\"在 2.10.6 版本中，系统默认会以 info 级别打出所有的节点的耗时信息。\",\"如果觉得日志太多的话，可以通过设置liteflow.print-execution-log=false来进行关闭整个 LiteFlow 框架的系统日志。\"]},\"492\":{\"h\":\"完整更新列表\",\"t\":[\"增强 #I7KR2F 测试用例全面更新为junit5 https://gitee.com/dromara/liteFlow/issues/I7KR2F 增强 #I7J59V java17下进行完整的测试用例测试 https://gitee.com/dromara/liteFlow/issues/I7J59V 增强 #I7KZCZ 希望可以使用配置文件中已经配置的数据源 https://gitee.com/dromara/liteFlow/issues/I7KZCZ 增强 #I7KY2N 非操作符的短路控制优化 https://gitee.com/dromara/liteFlow/issues/I7KY2N 增强 #I7HPAN onError方法增加Exception入参 https://gitee.com/dromara/liteFlow/issues/I7HPAN 增强 #I7KOPV 声明组件增加nodeName的定义 https://gitee.com/dromara/liteFlow/issues/I7KOPV 增强 #I7KHE5 关于注解声明式使用场景LiteFlowMethodEnum增加getDisplayName https://gitee.com/dromara/liteFlow/issues/I7KHE5 增强 #I7K3T1 自带AOP拦截需要增强获取tag等信息 https://gitee.com/dromara/liteFlow/issues/I7K3T1 增强 #I7JZ4D 希望框架有与或非表达式的相关日志 https://gitee.com/dromara/liteFlow/issues/I7JZ4D 增强 #I7J1VJ 希望针对节点执行耗时的打印日志支持控制 https://gitee.com/dromara/liteFlow/issues/I7J1VJ 增强 #I7LGZR 忘记填写 chainName 的错误提示 https://gitee.com/dromara/liteFlow/issues/I7LGZR 修复 #I7L5DX 2.10.5版本中ScriptBean注解注入bean失败 https://gitee.com/dromara/liteFlow/issues/I7L5DX 修复 #I7HTR4 同一组件不同tag，取step时候存在问题 https://gitee.com/dromara/liteFlow/issues/I7HTR4 修复 #I7GMTS 本地文件监听异常会导致监听线程停止 https://gitee.com/dromara/liteFlow/issues/I7GMTS \"]},\"493\":{\"h\":\"LiteFlow 发展路线\",\"t\":[\"有可能 2.10.6 版本是 2.10.X 系列的最后一个版本了。\",\"接下去就是 v2.11.0 了，v2.11.0 会带来超多的新增特性。v2.11.X 系列的主旋律将围绕着元数据增强进行展开。也为后续的管理平台系列打下一个基础。\",\"回答个大家最想问的问题，问题省略，答案如下：2.11.0 版本没有 UI，UI 没有那么快。计划今年推出，需要开发的。作者也有工作，需要投入大量业余时间的。但是既然我上次已经调查过了，自然会用心去做这个规划。\"]},\"494\":{\"h\":\"支持和赞助 LiteFlow\",\"t\":[\"开源一个项目并坚持 2 年并不容易，如果各位对 LiteFlow 这个项目有信心并且愿意支持的话，可以在官网首先点 给LiteFlow发电 按钮。\",\"但不管你是否选择赞助，我仍然会在社区里尽可能的解决你们的问题。\",\"社区里的问题太多，如果没回答上，请多艾特我几遍。\"]},\"495\":{\"h\":\"如何加群\",\"t\":[\"LiteFlow 的社区群已经有大约 3000 人以上了。你有任何问题，都可以在群里问。\",\"关于加群的方式，请参考：https://liteflow.yomahub.com/pages/73c2c3/\"]},\"496\":{\"h\":\"新的面貌！LiteFlow发布大版本v2.11.0，五大新特性，国内新一代的规则引擎！\"},\"497\":{\"h\":\"LiteFlow 介绍\",\"t\":[\"LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。\",\"LiteFlow 是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。\",\"同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3500 人。测试用例 1500 个，质量有保障。\",\"如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：\",\"项目官网: https://liteflow.cc gitee 托管仓库： https://gitee.com/dromara/liteFlow github 托管仓库： https://github.com/dromara/liteflow \"]},\"498\":{\"h\":\"v2.11.0 介绍\",\"t\":[\"v2.11.0 是一个大版本，LiteFlow 提供了 5 个大的新特性，以及 3 个加强，2 个 bug 修复。\",\"LiteFlow 同时更换了新的项目 Logo 和启动了新的域名。\",\"LF 在这个版本改头换面，以全新的姿态继续向前冲~\"]},\"499\":{\"h\":\"新的项目 LOGO\",\"t\":[\"感谢设计师Evan Lou的帮助，为 LiteFlow 带来了全新的 Logo。🤙\",\"新 Logo 寓意：\",\"1.整体是一片树叶形状，树叶既代表了轻量，也象征着 LiteFlow 会一直像树叶那样进行光合作用，释放氧气。\",\"2.叶子里的叶脉是一个 L 和 F 的交错变体，象征着 LiteFlow 的缩写。\",\"3.叶脉简单且延展开，象征流程的分叉。\",\"4.整个叶子被叶脉分隔成 4 部分，象征着编排，4 个不同的部分组成了一片完美的叶子。\"]},\"500\":{\"h\":\"启用全新域名\",\"t\":[\"LiteFlow 在 v2.11.0 启用了全新的域名：https://liteflow.cc。简单且好记。\",\"同时老的域名也是可以访问的，会自动重定向到新的域名上。\"]},\"501\":{\"h\":\"新的 Slogan\",\"t\":[\"LiteFlow 会从 2.11.0 这个版本开始，为每一个版本都设计一句 Slogan。\",\"这个版本的 Slogan 为：Keep on the light side。\",\"中文寓意为：逐光而行。\",\"这句 Slogan 一语双关，其中light谐音lite，表示我们会一直坚持 LiteFlow 的开源迭代。\",\"逐光而行，我希望我自己可以践行，人总要需要一道光来照亮生命，我们疲惫且努力的追逐那道光，远离黑暗。\"]},\"502\":{\"h\":\"特性 1：能够用 Java 原生语言来写脚本\",\"t\":[\"丰富的脚本语言支持是 LiteFlow 的一大特色，脚本语言轻巧，能否被即时刷新的特点受到了很多开发者的喜爱。\",\"LiteFlow 之前支持了挺多的脚本语言，分别是：Groovy，Javascript，Python，QLExpress，Lua，Aviator。\",\"但是不同的语言有不同的语法结构，很多不熟悉的这些语言写法的同学可能还要花点时间去学习该如何写。\",\"这次版本 LiteFlow 支持了原生 Java 脚本语言的写法，这意味着你可以无学习成本的直接在脚本里用 Java 来书写逻辑。\",\"关于 Java 脚本语言的详细文档请参照官网中脚本组件->脚本语言种类->Java脚本引擎。\"]},\"503\":{\"h\":\"特性 2：支持了 Redis 中存储规则和脚本\",\"t\":[\"LiteFlow 支持丰富的存储插件，所有的关系型数据库以及各种注册中心。\",\"这次我们新增了 Redis 插件，用 Redis 来存储规则以及脚本。Redis 在各大企业中用的比较多。为了保证使用的多样性。我们甚至开发了 2 种模式：轮询拉取模式和订阅模式，各有特点。\",\"其中轮询拉取模式，我们做了非常多的优化，我们对每一个脚本和规则生成了指纹，只比对指纹，而非拉取整个数据，消耗极小。\",\"订阅模式非常实时，但是需要你用Redission框架来操作 Redis，算有一定的使用限制。具体选用哪种模式，交由开发者来决定。\",\"关于 redis 插件的详细文档请参照官网中规则文件->Redis配置源。\"]},\"504\":{\"h\":\"特性 3：全方位的超时控制\",\"t\":[\"在以前的 LiteFlow 版本中，超时控制只能针对WHEN表达式，且是全局配置。\",\"在新版本中，我们支持了全方位的超时控制体系，一个maxWaitSeconds关键字可对任意的组件、表达式、流程进行超时控制。\",\"对任意表达式的控制：\",\"<chain name=\\\"chain1\\\"> THEN(a,b).maxWaitSeconds(5); </chain> <chain name=\\\"chain1\\\"> FOR(2).DO(a).maxWaitSeconds(3); </chain> \",\"对组件的超时控制\",\"<chain name=\\\"chain1\\\"> WHEN( a.maxWaitSeconds(2), b.maxWaitSeconds(3) ); </chain> \",\"对子流程的超时控制\",\"<chain name=\\\"testChain\\\"> THEN(b) </chain> <chain name=\\\"chain\\\"> testChain.maxWaitSeconds(3); </chain> \",\"关于这块的详细文档请参考官网文档中的高级特性->超时控制。\"]},\"505\":{\"h\":\"特性 4：异步循环模式\",\"t\":[\"经常群里的小伙伴会反映：LiteFLow 的循环体系只支持同步，如果能支持异步就好了。\",\"这个版本我们支持了！对三种循环模式都予以了异步支持。\",\"<chain name=\\\"chain1\\\"> FOR(2).parallel(true).DO(THEN(a,b,c)); </chain> <chain name=\\\"chain2\\\"> WHILE(x).parallel(true).DO(THEN(a,b,c)); </chain> <chain name=\\\"chain3\\\"> ITERATOR(x).parallel(true).DO(THEN(a,b,c)); </chain> \",\"一个parallel关键字搞定。是不是很简单？\",\"关于异步循环的详细文档请参考官网文档中的高级特性->异步循环模式。\"]},\"506\":{\"h\":\"特性 5：组件回滚\",\"t\":[\"这也就是所谓的逆操作。LiteFlow 从这个版本开始有逆向操作了！LiteFlow 会自动帮你记录执行的顺序，当某个组件抛出异常时，会自动按实际执行的顺序进行逆操作。\",\"这一切的前提只需要你在组件中实现rollback方法。\",\"在自动执行完回滚操作后，LiteFlow 的日志还会把回滚的步骤都打出来，让你一目了然。\",\"@LiteflowComponent(\\\"a\\\") public class ACmp extends NodeComponent { @Override public void process() { //do your biz } @Override public void rollback() throws Exception { //do your biz } } \",\"关于组件回滚的详细文档请参考官网文档中的高级特性->组件回滚。\"]},\"507\":{\"h\":\"测试用例增加到 1200 个左右\",\"t\":[\"我相信，一个开源框架的上限是看这个框架所解决的问题和这个框架提供的特性和设计。而下限则是这个开源框架的测试用例的完备性。\",\"我们不仅要开疆拓土，提供新特性和新的探索，也要守疆土，确保整体稳定性和质量。\",\"我们这次将测试用例数量提高到近 1200 个，几乎覆盖到了所有的地方。\",\"大家可以放心用。我们也有完备的社区和组织，社区目前拥有 3500 人左右。\"]},\"508\":{\"h\":\"PPT 更新\",\"t\":[\"官网提供的 PPT 同步更新到 v2.11.0 这个版本。\",\"获取 PPT 的方式请参考：https://liteflow.cc/pages/8d6666/\"]},\"509\":{\"h\":\"完整更新列表\",\"t\":[\"更新列表 特性 #I7V6VB 建议增加Janino插件，支持java脚本的书写 https://gitee.com/dromara/liteFlow/issues/I7V6VB 特性 #I7T53A 增加Redis存储规则的支持 https://gitee.com/dromara/liteFlow/issues/I7T53A 特性 #I7I3LL 允许对EL中的每⼀个组件设置超时时间控制 https://gitee.com/dromara/liteFlow/issues/I7I3LL 特性 #I7HJFX 循环表达式中支持异步模式 https://gitee.com/dromara/liteFlow/issues/I7HJFX 特性 #I590JT 对于回滚流程的支持 https://gitee.com/dromara/liteFlow/issues/I590JT 增强 #I7QC8V SQL插件格式化加入CDATA https://gitee.com/dromara/liteFlow/issues/I7QC8V 增强 #I7Q8BX 部分代码有NPE风险 https://gitee.com/dromara/liteFlow/issues/I7Q8BX 增强 #I7Q4BN 默认主线程池的名称拼写 https://gitee.com/dromara/liteFlow/issues/I7Q4BN 修复 #I7WNDA SQLException: 使用druid+oracle会报出关闭的语句错误 https://gitee.com/dromara/liteFlow/issues/I7WNDA 修复 #I7TYS3 当组件出现Exception的时候，afterProcess获取不到 https://gitee.com/dromara/liteFlow/issues/I7TYS3 \"]},\"510\":{\"h\":\"支持和赞助 LiteFlow\",\"t\":[\"开源一个项目并坚持 2 年并不容易，如果各位对 LiteFlow 这个项目有信心并且愿意支持的话，可以在官网首先点击 给LiteFlow发电 按钮。\",\"但不管你是否选择赞助，我仍然会在社区里尽可能的解决你们的问题。\",\"社区里的问题太多，如果没回答上，请多艾特我几遍。\"]},\"511\":{\"h\":\"如何加群\",\"t\":[\"LiteFlow 的社区群已经有大约 3000 人以上了。你有任何问题，都可以在群里问。\",\"关于加群的方式，请参考：https://liteflow.cc/pages/73c2c3/\",\"你也可以直接以下这个码来加入新群：\"]},\"512\":{\"h\":\"LiteFlow v2.11.1发布！一个高速迭代，社区活跃的新一代规则引擎\"},\"513\":{\"h\":\"LiteFlow 介绍\",\"t\":[\"LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 6 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。\",\"LiteFlow 是 Gitee 的高 star 项目，过去一年来保持了非常快的增长趋势。\",\"同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源将近 3 年，目前已经被各大公司应用在核心系统上。特性以及支持度都非常好。社区人数超过 3500 人。测试用例 1500 个，质量有保障。\",\"如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：\",\"项目官网: https://liteflow.cc gitee 托管仓库： https://gitee.com/dromara/liteFlow github 托管仓库： https://github.com/dromara/liteflow \"]},\"514\":{\"h\":\"前言\",\"t\":[\"上一个版本是 9 月 1 日发布的，经过了一个半月，LiteFlow 新的 v2.11.1 和大家见面了。\",\"这个版本总共带来了 7 个大特性，3 个增强，2 个修复。总计 12 个 issue 的更新。\",\"其实这已经比上一个大版本已经有过之而无不及了。\",\"这一切归功于 LiteFlow 的团队小伙伴们，他们贡献了这个版本中的诸多的特性，感谢他们。尤其这个版本又有 2 位新成员加入团队，目前团队成员一共有 11 位，接下来的迭代将会变的更加迅速。\",\"我们在确保新特性推出的同时，项目质量也同样出色。LiteFlow 截止到新版本，一共有 1515 个测试用例，每一个特性的提交，我们每一个成员都会全部通过测试用例，这也是我们每一次发版的底气，测试用例我们是认真的。并且我们的测试用例代码行覆盖率达到了非常高的 90%覆盖率。\",\"其实不吹不黑，在拥有 1500 个测试用例以上的开源项目中，90%的行覆盖率算得上是一个优秀的程度了。\"]},\"515\":{\"h\":\"SQL 插件支持轮询自动更新模式\",\"t\":[\"LiteFlow 支持把规则和脚本存入任意的关系型数据库，由于关系型数据库不像注册中心会进行推送变更，所以一直以来，规则和脚本在数据库中发生改变，是需要开发者自己手动的去刷新的。并且需要每个应用实例都进行刷新。这对开发者来说，是繁琐了点。\",\"所以我们在 v2.11.1 中推出了数据库自动轮询更新模式。这一切只需要在你原来的配置中加入：\",\"liteflow: rule-source-ext-data-map: ... #是否开启SQL数据轮询自动刷新机制 默认不开启 pollingEnabled: true ... \",\"默认 LiteFlow 会每 1 分钟去进行 SHA 值的对比，由此来判断是否需要更新。\",\"具体使用方式请参考规则文件->SQL 数据库配置源。\"]},\"516\":{\"h\":\"WHEN 增加 must 语法\",\"t\":[\"之前 WHEN 推出过 any 语法，意思是任意一个完成即继续，而忽略其他。但是在社区里有小伙伴碰到真实的场景，需要异步并行中对指定的节点先完成就忽略其他。\",\"为此这次新版本中推出了全新的 must 语法，提供在并行编排中更多的多样性。\",\"<chain name=\\\"chain1\\\"> THEN( a, WHEN(b, c, d).must(b, c), f ); </chain> \",\"也可以指定一个或多个表达式：\",\"<chain name=\\\"chain1\\\"> THEN( a, WHEN(b, THEN(c, d).id(\\\"t1\\\"), e).must(b, \\\"t1\\\"), f ); </chain> \",\"具体使用方式请参考EL规则的写法->并行编排->指定任意节点先执行完则忽略其他\"]},\"517\":{\"h\":\"推出 EL 表达式的动态组装 API\",\"t\":[\"之前 LiteFlow 推出过动态构建 chain 的 API，类似于这样：\",\"LiteFlowChainELBuilder.createChain().setChainName(\\\"chain1\\\").setEL( \\\"THEN(a, b, WHEN(c, d))\\\" ).build(); \",\"但是 EL 表达式还是需要你自己以字符串的方式填入，这并不能算真正意义上动态。\",\"这次我们推出了全新的 EL 表达式的动态组装 API，对于上面的 EL，你可以如下进行动态构建：\",\"ThenELWrapper el = ELBus.then( \\\"a\\\",\\\"b\\\",ELBus.when(\\\"c\\\", \\\"d\\\") );LiteFlowChainELBuilder.createChain().setChainName(\\\"chain1\\\").setEL(el.toEL()).build(); \",\"值得一说的是，用 java 语言构建 EL 表达式，几乎和 EL 的写法完全一致。如果你已经熟悉了 LiteFlow 的规则语法，应该是零成本上手的。\",\"目前 API 支持了所有的 EL 语法。具体使用方式请参考用代码构造规则->构造EL\"]},\"518\":{\"h\":\"链路继承\",\"t\":[\"LiteFlow 每一个 chain 独立，之前的版本不存在继承关系。但在这个新版本中，我们推出了链路继承这个特性。\",\"如同类的继承一样，链路可以继承，那么对于拥有复杂链路的业务系统，可以对链路进行抽象，得到一个非常优雅的表现方式。\",\"我们定义的继承也非常容易看懂：\",\"<chain id=\\\"base\\\"> THEN(a, b, {0}, {1}); </chain> <chain id=\\\"implA\\\" extends=\\\"base\\\"> {0}=IF(c, d, e); {1}=SWITCH(f).to(j,k); </chain> \",\"还可以多级继承：\",\"<chain id=\\\"base\\\"> THEN(a, b, {0}, {1}); </chain> <chain id=\\\"base2\\\" extends=\\\"base\\\"> {0}=THEN(a,b,{3}); {1}=SWITCH(f).to({4},k); </chain> <chain id=\\\"implB\\\" extends=\\\"base2\\\"> {3}=THEN(a,b); {4}=j; </chain> \",\"如果你有此方面的场景，不妨尝试下继承特性。\",\"具体使用方式请参考高级特性->链路继承。\"]},\"519\":{\"h\":\"组件降级\",\"t\":[\"LiteFlow 之前的替补组件全面升级成组件降级特性。\",\"组件降级允许你定义各个类型组件的降级组件。新版本提供了@FallbackCmp注解用于定义。\",\"在 EL 规则中，如果你用 node 关键字包裹组件，便开启了降级特性：\",\"<chain id=\\\"chain1\\\"> THEN(node(\\\"a\\\"), b, c); </chain> \",\"当 a 组件不存在时，便会走到用@FallbackCmp 注解定义的降级组件中去。\",\"具体用法请参考高级特定->组件降级\"]},\"520\":{\"h\":\"支持绝对路径的模糊匹配\",\"t\":[\"LiteFlow 对项目内的规则文件的模糊匹配是早就支持的。但是之前的版本一直不支持绝对路径的模糊匹配。\",\"这个版本，我们予以了支持。\",\"你可以使用*或者**来模糊匹配多层级的任意名字的文件：\",\"liteflow.rule-source=/data/lf/**/*Rule.xml \",\"如果开启了文件监听功能，还能对模糊路径匹配到的每一个文件进行监听。当文件改变的时候，实现自动刷新功能。是不是很酷。\",\"具体用法请参考 规则文件->本地规则文件配置和高级功能->本地文件监听 \"]},\"521\":{\"h\":\"WHEN 线程池隔离\",\"t\":[\"LiteFlow 在 v2.11.1 版本中新推出了一个配置，在执行 WHEN 中的并行组件时，每一个 when 的线程池隔离，在运行复杂的嵌套 WHEN 链路时，这个特性非常有用。可以有效提高运行速度并且避免死锁问题。\",\"你只需要开启这个配置即可，默认是关闭的。\",\"liteflow.when-thread-pool-isolate=true \",\"具体用法请参考 EL规则的写法->并行编排->开启WHEN线程池隔离\"]},\"522\":{\"h\":\"完整的更新列表\",\"t\":[\"特性 #I7Y0Y1 SQL插件支持轮询模式 https://gitee.com/dromara/liteFlow/issues/I7Y0Y1 特性 #I7XAIB WHEN增加must语法 https://gitee.com/dromara/liteFlow/issues/I7XAIB 特性 #I878WV EL表达式动态组装 https://gitee.com/dromara/liteFlow/issues/I878WV 特性 #I7SVZF 支持chain的继承关系特性 https://gitee.com/dromara/liteFlow/issues/I7SVZF 特性 #I7YYLF 组件降级特性 https://gitee.com/dromara/liteFlow/issues/I7YYLF 特性 #I7ZJRH 支持绝对路径的模糊匹配 https://gitee.com/dromara/liteFlow/issues/I7ZJRH 特性 #I883LB when线程池隔离支持 https://gitee.com/dromara/liteFlow/issues/I883LB 增强 #I821F1 检测链路的循环依赖问题 https://gitee.com/dromara/liteFlow/issues/I821F1 增强 #I7G6BB 自定义异步线程池初始化存在并发问题 https://gitee.com/dromara/liteFlow/issues/I7G6BB 增强 #I855YM sql 插件重构 https://gitee.com/dromara/liteFlow/issues/I855YM 修复 #I82M4G 回滚组件无法获得tag的问题 https://gitee.com/dromara/liteFlow/issues/I82M4G 修复 #I7ZMVM 普通组件isContinueOnError和isEnd为true时，process直接抛异常会导致isEnd失效 https://gitee.com/dromara/liteFlow/issues/I7ZMVM \"]},\"523\":{\"h\":\"如何加群\",\"t\":[\"LiteFlow 的社区群已经有大约 3000 人以上了。你有任何问题，都可以在群里问。\",\"关于加群的方式，请参考：https://liteflow.cc/pages/73c2c3/\",\"你也可以直接以下这个码来加入新群：\"]},\"524\":{\"h\":\"MaxKey单点登录认证系统3.5.17发布，开源IAM产品\"},\"525\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"526\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"527\":{\"h\":\"界面\"},\"528\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 3.5.17\",\"2023/04/25\",\"下载( mxk9 )\",\"链接\"]},\"529\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 3.5.17 GA 2023/04/25\",\" *(MAXKEY-230501) 4.0.0开发计划 *(MAXKEY-230502) 增加跳转引导配置inducer参数 *(MAXKEY-230503) 本地开发调试模式baseUrl改为本地地址 @tomsun28 *(MAXKEY-230504) 优化同步API REST和SCIM接口日志打印 *(MAXKEY-230505) GatewayApplication改为MaxKeyGatewayApplication *(MAXKEY-230506) Gateway启动bug，netty 4.1.65.Final *(MAXKEY-230507) lombok支持，目前是可选 @sudarshan-doiphode *(MAXKEY-230508) 新增CAS明文适配器CasPlainAdapter *(MAXKEY-230509) synchronizer 同步的空值处理 *(MAXKEY-230510) 增加官方微信支持，方便开发者咨询 *(MAXKEY-230511) Spring Security OAuth SSO demo地址调整 *(MAXKEY-230512) 用户自定义凭证类型前后端不统一修复 *(MAXKEY-230513) arm架构docker @tzk007 *(MAXKEY-230514) .gitignore优化 @tzk007 *(MAXKEY-230515) 社区版前端文件统一放在maxkey_frontend下maxkey_html、maxkey_mgt_html，配置文件参见conf下 *(MAXKEY-230516) 依赖项引用、更新和升级 spring 5.3.27 springBoot 2.7.11 netty 4.1.65.Final springSecurity 5.7.8 tomcat 9.0.74 micrometercore 1.9.10 \"]},\"530\":{\"h\":\"MaxKey单点登录认证系统3.5.18发布，开源IAM产品\"},\"531\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"532\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"533\":{\"h\":\"界面\"},\"534\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 3.5.18\",\"2023/06/05\",\"下载( mxk9 )\",\"链接\"]},\"535\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 3.5.18 GA 2023/06/06\",\" *(MAXKEY-230601) 组织机构和用户同步的REST和SCIM从maxkey-web-mgt中分离到新建maxkey-web-openapi *(MAXKEY-230602) 腾讯企业邮件接口优化 *(MAXKEY-230603) 修改认证系统 是否需要验证码的配置 *(MAXKEY-230604) 同步组织机构和用户API REST新增/.search分页查询功能 *(MAXKEY-230605) #I76SV6 更正JdbcUsersService的username *(MAXKEY-230606) 增加一次性动态口令验证功能 *(MAXKEY-230607) 修改项目介绍信息 *(MAXKEY-230608) 依赖项引用、更新和升级 spring 5.3.27 springBoot 2.7.12 commonsfileupload 1.5 poi 5.2.3 log4j 2.20.0 tomcat 9.0.75 \"]},\"536\":{\"h\":\"MaxKey单点登录认证系统3.5.19发布，开源IAM产品\"},\"537\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"538\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"539\":{\"h\":\"界面\"},\"540\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 3.5.19\",\"2023/08/15\",\"下载( mxk9 )\",\"链接\"]},\"541\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 3.5.19 GA 2023/08/15\",\" *(MAXKEY-230701) 增加配置:每次构建docker镜像时,可同时构建arm64镜像 * 增加配置:每次构建docker镜像时,可同时构建arm64镜像 *(MAXKEY-230702) 优化CAS注销 CasLogout *(MAXKEY-230703) 修复资源管理无法添加资源 #I7EPYO *(MAXKEY-230704) 新增角色失败，数据入库问题。 #I7KMSJ *(MAXKEY-230705) 修复/sign/authz/cas/v1/tickets这个接口只要用户名正确，密码随便填都能通过 #I7LC07 *(MAXKEY-230706) 日志记录采用异步方式写入 *(MAXKEY-230707) 增加Dockerfile，方便镜像构建 *(MAXKEY-230708) gradle升级到 8.0.2 *(MAXKEY-230709) readme增加安装介绍链接 *(MAXKEY-230710) 代码优化和整合 *(MAXKEY-230711) 依赖项引用、更新和升级 spring 5.3.29 springBoot 2.7.14 springSecurity 5.7.10 tomcat 9.0.78 \"]},\"542\":{\"h\":\"MaxKey单点登录认证系统4.0.0，JDK17重大升级\"},\"543\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"544\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"545\":{\"h\":\"界面\"},\"546\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 4.0.0\",\"2023/09/01\",\"下载( mxk9 )\",\"链接\"]},\"547\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 4.0.0 GA 2023/09/01\",\" *(MAXKEY-230801) JDK 17 支持 *(MAXKEY-230802) SpringBoot 3.0+ 支持 *(MAXKEY-230803) Spring 6.0+ 支持 *(MAXKEY-230804) javax.修改为换为jakarta. *(MAXKEY-230805) Jakarta EE 10 *(MAXKEY-230806) org.maxkey改为org.dromara.maxkey *(MAXKEY-230807) queryPageResults -> fetchPageResults *(MAXKEY-230808) 调整获取accessToken次序 *(MAXKEY-230809) 前端代码适配springboot3微调 *(MAXKEY-230810) 日志打印优化 *(MAXKEY-230811) 新增身份管理一级菜单包含组织、用户、用户组、用户组成员 *(MAXKEY-230812) 角色调整为用户组，后续为应用级权限控制 *(MAXKEY-230813) Mybatis JPA Etra优化，类似JPA实体定义，开发更加简洁 *(MAXKEY-230814) 增加前端打包镜像的dockerfile暴露8527、8526端口 @iwc_2011911 *(MAXKEY-230815) jar 打包baseName -> archiveBaseName *(MAXKEY-230816) 依赖项引用、更新和升级 JDK 17 spring 6.0.11 springBoot 3.1.2 springSecurity 6.1.2 springData 3.0.3 springkafka 3.0.6 springcloud 4.0.4 springcloudalibaba 2022.0.0.0 httpcomponentscore5 5.2.1 tomcat 10.1.11 mybatisjpaextra 3.2.1 jibGradlePlugin 3.3.2 \"]},\"548\":{\"h\":\"Roadmap\"},\"549\":{\"h\":\"增强身份管理\"},\"550\":{\"h\":\"数据同步优化\"},\"551\":{\"h\":\"权限管理优化\"},\"552\":{\"h\":\"MaxKey单点登录认证系统4.0.1,修复重要漏洞\"},\"553\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"554\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"配置化的密码策略、访问策略；支持 Ip2region 或 GeoLite2 地理库精准 IP 定位 ，强大安全审计，对用户全生命周期审计、访问行为记录追溯审计、安全合规审计、安全风险预警。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"555\":{\"h\":\"界面\"},\"556\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 4.0.1\",\"2023/09/19\",\"下载( mxk9 )\",\"链接\"]},\"557\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 4.0.1 GA 2023/09/019\",\" *(MAXKEY-230901) !24 fix:shell启动脚本错误 * fix:启动脚本的JAVA_MAINCLASS有误 @tzk007 *(MAXKEY-230902) 组权限问题修复 *(MAXKEY-230903) !25修复错误的表别名使用 *(MAXKEY-230904) GroupMemberMapper.xml 下memberNotIn sql 错误 @OomiyaShinobu *(MAXKEY-230905) 增加 scripts，用于处理安装依赖与镜像问题 @徐晓伟 *(MAXKEY-230906) 修改启动getProperty(\\\"server.port\\\") *(MAXKEY-230907) 修复用户组bug *(MAXKEY-230908) 应用访问空值问题 *(MAXKEY-230909) 用户组-资源绑定关系 *(MAXKEY-230910) 删除历史sql文件 *(MAXKEY-230911) 依赖项引用、更新和升级 \"]},\"558\":{\"h\":\"Roadmap\"},\"559\":{\"h\":\"增强身份管理\"},\"560\":{\"h\":\"数据同步优化\"},\"561\":{\"h\":\"权限管理优化\"},\"562\":{\"h\":\"MaxKey单点登录认证系统4.0.2,精准IP定位\"},\"563\":{\"h\":\"概述\",\"t\":[\"MaxKey单点登录认证系统，谐音马克思的钥匙寓意是最大钥匙,是业界领先的 IAM-IDaas 身份管理和认证产品,支持 OAuth 2.x/OpenID Connect、SAML 2.0、JWT、CAS、SCIM 等标准协议，提供安全、标准和开放的用户身份管理(IDM)、身份认证(AM)、单点登录(SSO)、RBAC 权限管理和资源管理等；开源、安全、自主可控。\",\"官方网站 http://www.maxkey.top/\",\"官方 QQ：1054466084\",\"邮箱 email: support@maxsso.net\",\"代码托管 Gitee | GitHub\"]},\"564\":{\"h\":\"产品特性\",\"t\":[\"标准协议\",\"序号\",\"协议\",\"支持\",\"1.1\",\"OAuth 2.x/OpenID Connect\",\"高\",\"1.2\",\"SAML 2.0\",\"高\",\"1.3\",\"JWT\",\"高\",\"1.4\",\"CAS\",\"高\",\"1.5\",\"SCIM 2.0\",\"高\",\"1.6\",\"FormBased\",\"中\",\"1.7\",\"TokenBased(Post/Cookie)\",\"中\",\"1.8\",\"ExtendApi\",\"低\",\"1.9\",\"EXT\",\"低\",\"登录支持\",\"序号\",\"登录方式\",\"支持\",\"2.1\",\"动态验证码\",\"字母/数字/算术\",\"2.2\",\"双因素认证\",\"短信/时间令牌/邮件\",\"2.3\",\"短信认证\",\"腾讯云短信/阿里云短信/网易云信\",\"2.4\",\"时间令牌\",\"Google/Microsoft Authenticator/FreeOTP/支持 TOTP 或者 HOTP\",\"2.5\",\"域认证\",\"Kerberos/SPNEGO/AD 域\",\"2.6\",\"LDAP\",\"OpenLDAP/ActiveDirectory/标准 LDAP 服务器\",\"2.7\",\"社交账号\",\"微信/QQ/微博/钉钉/Google/Facebook/其他\",\"2.8\",\"扫码登录\",\"企业微信/钉钉/飞书扫码登录\",\"提供标准的认证接口以便于其他应用集成 SSO，安全的移动接入，安全的 API、第三方认证和互联网认证的整合。\",\"提供用户生命周期管理，支持 SCIM 2 协议；开箱即用的连接器(Connector)实现身份供给同步。\",\"简化微软 Active Directory 域控、标准 LDAP 服务器机构和账号管理，密码自助服务重置密码。\",\"IDaas 多租户功能，支持集团下多企业独立管理或企业下不同部门数据隔离的，降低运维成本。\",\"认证中心具有平台无关性、环境多样性，支持 Web、手机、移动设备等, 如 Apple iOS，Andriod 等，将认证能力从 B/S 到移动应用全面覆盖。\",\"配置化的密码策略、访问策略；支持 Ip2region 或 GeoLite2 地理库精准 IP 定位 ，强大安全审计，对用户全生命周期审计、访问行为记录追溯审计、安全合规审计、安全风险预警。\",\"基于 Java EE 平台，微服务架构，采用 Spring、MySQL、Tomcat、Redis、MQ 等开源技术，扩展性强。\",\"开源、安全、自主可控，许可证 Apache 2.0 License & MaxKey 版权声明。\"]},\"565\":{\"h\":\"界面\"},\"566\":{\"h\":\"下载\",\"t\":[\"当前版本百度网盘下载, 历史版本\",\"版本\",\"日期\",\"网盘(提取码)\",\"Docker\",\"v 4.0.2\",\"2023/10/11\",\"下载( mxk9 )\",\"链接\"]},\"567\":{\"h\":\"版本说明\",\"t\":[\"MaxKey v 4.0.2 GA 2023/10/12\",\" *(MAXKEY-231001) shenyu网关插件 @Saiph *(MAXKEY-231002) ip2region & GeoLite2 ip地址转换，支持国家、省、市、地域 *(MAXKEY-231003) #I844NY消除Session与Authentication来回嵌套 *(MAXKEY-231004) #I83BUJ4.0.1版本 建应用，凭证类型选 user_defined用户自定义。值不一样 *(MAXKEY-231005) 删除 session getFormattedId *(MAXKEY-231006) 用户组显示bug修复 *(MAXKEY-231007) pig整合MAXKEY方案 @RJ *(MAXKEY-231008) 日志打印优化!31fix:log4j2.xml *(MAXKEY-231009) 新增ProductEnvironment的显示 *(MAXKEY-231010) #I8651R新建了应用，但在认证系统里面看不到 *(MAXKEY-231011) 修复动态用户组出现bug #I85U4I *(MAXKEY-231012) 依赖项引用、更新和升级 spring 6.0.12 springBoot 3.1.4 \"]},\"568\":{\"h\":\"Roadmap\"},\"569\":{\"h\":\"增强身份管理\"},\"570\":{\"h\":\"数据同步优化\"},\"571\":{\"h\":\"权限管理优化\"},\"572\":{\"h\":\"内网穿透神器NeutrinoProxy 1.9.0版本发布\"},\"573\":{\"h\":\"内网穿透神器 NeutrinoProxy 1.9.0 版本发布\"},\"574\":{\"h\":\"更新内容\",\"t\":[\"与 1.8.0 版本对比，更新内容如下：\",\"核心功能\",\"域名映射支持 HTTPS\",\"支持 UDP 协议代理\",\"客户端断开连接时，记录日志空指针异常问题修复\",\"基础优化\",\"客户端重连逻辑优化，支持配置文件指定重连间隔，是否开启无限重连\",\"增加对 mariadb 的支持\",\"服务端/客户端，支持配置文件、启动参数指定日志级别\",\"后台端口池管理支持批量删除\",\"后台下拉选择 license、用户支持模糊搜索\",\"端口映射下拉选择端口支持搜索、分野\",\"客户端/服务端配置增加心跳日志开关，有需要时开启，方便排查问题\",\"端口映射 HTTP(S)新增打开网页快捷操作，优先使用绑定域名打开\"]},\"575\":{\"h\":\"升级须知\",\"t\":[\"从 1.9.0 之前的版本升级需要注意：\",\"在项目neutrino-proxy-server/src/main/resources/sql目录下找到 mysql/sqlite 的增量 sql 文件UPDATE-20230922.SQL,执行更新自己的中微子代理数据库\",\"参照官网服务端配置调整现有的服务端配置\",\"参照官网客户端配置吊证现有的客户端配置\",\"从仓库发行版下载最新版本的客户端(neutrino-proxy-client.jar)、服务端(neutrino-proxy-server.jar、 neutrino-proxy-admin.zip)部署文件。若为服务端是 docker 镜像部署，则更新镜像重启即可\"]},\"576\":{\"h\":\"项目简介\",\"t\":[\"中微子代理(neutrino-proxy) 是一款基于 netty 的内网穿透神器。该项目采用最为宽松的 MIT 协议，因此您可以对它进行复制、修改、传播并用于任何个人或商业行为。\",\"Gitee 地址：https://gitee.com/dromara/neutrino-proxy\",\"官网地址：http://neutrino-proxy.dromara.org\",\"服务端管理后台截图：\"]},\"577\":{\"h\":\"主要特点：\",\"t\":[\"1、流量监控：首页图表、报表管理多维度流量监控。全方位掌握实时、历史代理数据。\",\"2、用户/License：支持多用户、多客户端使用。后台禁用实时生效。\",\"3、端口池：对外端口统一管理，支持用户、License 独占端口。\",\"4、端口映射：新增、编辑、删除、禁用实时生效。\",\"5、Docker：服务端支持 Docker 一键部署。\",\"6、SSL 证书：支持 SSL，保护您的信息安全。\",\"7、域名映射：支持绑定子域名，方便本地调试三方回调\",\"8、多协议：支持代理 TCP、HTTP(S)、UDP 多种协议\",\"9、采用最为宽松的 MIT 协议，免去你的后顾之忧\"]},\"578\":{\"h\":\"快速使用\",\"t\":[\"更多使用姿势、细节请通过官网或结尾微信二维码加我备注\\\"中微子代理\\\"入群交流。\"]},\"579\":{\"h\":\"1、 部署服务端\"},\"580\":{\"h\":\"1.1、 Docker 一键部署\",\"t\":[\"当前最新版本为 1.9.0，下面的脚本中，可以使用：registry.cn-hangzhou.aliyuncs.com/asgc/neutrino-proxy:1.9.0 指定版本安装，推荐使用latest直接安装最新版。\"]},\"581\":{\"h\":\"使用默认 sqlite 数据库\",\"t\":[\"docker run -it -p 9000-9200:9000-9200/tcp -p 8888:8888 \\\\ -d --restart=always --name neutrino-proxy \\\\ registry.cn-hangzhou.aliyuncs.com/asgc/neutrino-proxy:latest \"]},\"582\":{\"h\":\"指定自己的 mysql 数据库\",\"t\":[\"在服务器上创建目录：/root/neutrino-proxy/config\",\"在该目录下创建app.yml文本文件，并配置如下内容：\",\"neutrino: data: db: type: mysql # 自己的数据库实例，创建一个空的名为'neutrino-proxy'的数据库即可，首次启动服务端会自动初始化 url: jdbc:mysql://xxxx:3306/neutrino-proxy?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useAffectedRows=true&useSSL=false driver-class: com.mysql.jdbc.Driver # 数据库帐号 username: xxx # 数据库密码 password: xxx \",\"然后执行如下命令：\",\"docker run -it -p 9000-9200:9000-9200/tcp -p 8888:8888 \\\\ -v /root/neutrino-proxy/config:/root/neutrino-proxy/config \\\\ -d --restart=always --name neutrino \\\\ registry.cn-hangzhou.aliyuncs.com/asgc/neutrino-proxy:latest \"]},\"583\":{\"h\":\"1.2、使用 jar 包自行部署\",\"t\":[\"首先确保服务器上已安装 java8 运行环境\",\"打开发行版页面，下载最新的 release 包：neutrino-proxy-server.jar、neutrino-proxy-admin.zip\",\"在服务器上新建部署目录：/work/projects/neutrino-proxy-server\",\"将 neutrino-proxy-server.jar、neutrino-proxy-admin.zip上传至服务器部署目录。\",\"解压neutrino-proxy-admin.zip文件\",\"执行命令java -jar neutrino-proxy-server.jar启动服务端完成部署，默认使用 sqlite 数据库。\",\"若需要指定自己的 mysql 数据库，同样的需要在当前目录下新建app.yml文件，文件内容同上。执行命令java -jar neutrino-proxy-server.jar config=app.yml启动服务端完成部署\",\"可参照 https://gitee.com/dromara/neutrino-proxy/blob/master/bin/server\\\\_start.sh 使用 shell 脚本启动服务端。\"]},\"584\":{\"h\":\"2、管理后台配置\",\"t\":[\"服务端部署成功后，访问http://{服务端IP}:8888打开后台管理页面。\",\"使用默认的管理员帐号登录：admin/123456\",\"打开代理配置>License管理页面，可以看到系统已经自动为管理员初始化了一条 License 记录，复制该LicenseKey备用，后续客户端配置需要。\",\"打开代理配置>端口映射页面，可以看到系统已经自动为初始化了几条端口映射。可根据需要自行添加、修改。这里我们以9101 -> 127.0.0.1:8080映射为例\"]},\"585\":{\"h\":\"3、启动客户端\",\"t\":[\"首先确保本地已安装 java8 运行环境\",\"打开发行版页面，下载最新的 release 包：neutrino-proxy-client.jar\",\"在本地neutrino-proxy-client.jar同级别目录下新建app.yml文件，并配置如下内容：\",\"neutrino: proxy: tunnel: # ssl证书密钥（使用jjar包内自带的证书，则此处无需修改） key-store-password: 123456 # ssl证书管理密钥（使用jjar包内自带的证书，则此处无需修改。自定义证书，则此处配置对应的路径） jks-path: classpath:/test.jks # 代理服务端IP server-ip: localhost # 代理服务端IP, 若是非ssl端口，则ssl-enable需要配置为false server-port: 9002 # 是否启用ssl ssl-enable: true # licenseKey，客户端凭证。此处需要配置刚刚从管理后台复制的LicenseKey license-key: xxxx \",\"执行命令java -jar neutrino-proxy-client.jar启动客户端\",\"查看服务端 License 管理，刷新页面，对应的 License 在线状态为在线，则表明客户端已正常连接。\"]},\"586\":{\"h\":\"4、代理验证\",\"t\":[\"本地启动被代理服务，如：redis、本地 web 项目、本地 mysql 等等\",\"先确保本地能正常访问被代理服务，如果本地都不能访问，不用想代理更不可能！！！\",\"通过服务端 IP+9101（上面 License 配置的端口映射重的服务端端口）访问本地被代理服务\"]},\"587\":{\"h\":\"联系我们\",\"t\":[\"笔者时间、能力有限，且开源项目非一朝一夕之事，存在众多问题亦在所难免。使用、学习过程中有任何问题欢迎大家与我联系。\",\"对项目有什么想法或者建议，可以加我微信拉交流群，或者创建 issues，一起完善项目\",\"微信号：yuyunshize\",\"Email: aoshiguchen@dromara.org\",\"中微子代理官网：http://neutrino-proxy.dromara.org\",\"中微子代理仓库：https://gitee.com/dromara/neutrino-proxy\",\"微信二维码：\"]},\"588\":{\"h\":\"AI量化平台前传——Northstar盈富量化平台v6.0.Final发布\"},\"589\":{\"h\":\"【导读】自从 AlphaGo 问世以来，我一直在思考打造一个可以集成 AI 计算能力的量化交易平台。但交易智能化的前提，是交易的程序化与自动化。只有实现了交易的程序化与自动化，才有可能谈智能化。Northstar 盈富量化平台从 v1.0 至今 v6.0，前前后后摸索了两三年时间，一直在做架构迭代。务求把基础架构打牢，才有可能在智能化应用中得到快速发展。如今 v6.0 正式版经历了一个多月的实盘反复测试，确认了架构的稳定性与可扩展性得到验证。\",\"t\":[\"一个量化交易平台的基础需求无非是四个：\",\"策略研发\",\"策略回测\",\"策略模拟运行\",\"策略实盘运行\"]},\"590\":{\"h\":\"策略研发\",\"t\":[\"策略研发的关键在于，策略编写的难易度。而策略编写则主要取决于指标框架开发的难易程度与策略逻辑编写的难易程度。\",\"先给大伙看看，我生产环境正在跑的策略模组。\",\" 一个策略从构思到完成编码，大概只需要几天的时间。目前我正在跑的策略有两个。一个策略的代码逻辑大概是三百行。由于 v6.0 的指标框架做了重构，使得现在要开发一个新的指标就像搭乐高一样简单。把复杂的交易逻辑拆分成指标计算与指标操作，再把不同周期的指标操作再封装起来，使得一个复杂的多周期交易逻辑能在三百行左右的。\",\"加上平台对指标的可视化处理，能轻松直观地查看指标计算是否正确。\"]},\"591\":{\"h\":\"策略回测\",\"t\":[\"平台提供了灵活通用的历史回放功能来实现策略回测，从而使得多合约回测变得像看视频一样简单、可控。\",\"给大伙看看我那两策略的一些回测绩效曲线。\",\"在开发完一个策略后，我还可以编写一个全自动模组回测功能对全市场的品种进行遍历测试，从而找到最合适的品种，大大地提升了工作效率。\"]},\"592\":{\"h\":\"策略模拟运行\",\"t\":[\"模拟盘在很多的交易平台上都是个要收费的功能，但实际上这个功能说白了就是个本地账本。所以盈富平台免费开放出来给大伙使用，让大家能像打游戏一样玩量化。\"]},\"593\":{\"h\":\"策略实盘运行\",\"t\":[\"通过引入不同的实盘网关，可以轻松地实现实盘网关的任意扩展。而引入的方式也是相当直观的。以下便是我服务器上的目录结构。\",\"看完直观的展示，最后来总结一下整个基础架构：\",\"也许有人想问，AI 部分在哪里？\",\"在策略层，我们可以用强化学习来优化策略并生产信号。只能先说这么多了，卖个关子，v6.1 见！\",\"作者：黄伟亮，Northstar 盈富量化平台作者\"]},\"594\":{\"h\":\"Northstar盈富量化平台v6.1版本发布\"},\"595\":{\"h\":\"【导读】v6.1 版本最大的变化是增加了监控台对移动端的适配，使得用户可以通过手机来监控自动化模组的运行状态。之前提到的策略集成强化学习，会有的，下半年重点就搞这个，敬请期待！\"},\"596\":{\"h\":\"新增\",\"t\":[\"#I7JL8B:[功能建议]: 增加模组图表指标下载功能\",\"#I7JLC9:[功能建议]: 增加年化收益率统计\",\"#I7JLEZ:[功能建议]: 增加模组回撤统计与盈亏分布图\",\"#I7JO5A:[功能建议]: 增加移动端样式适配\"]},\"597\":{\"h\":\"优化\",\"t\":[\"模组列表自动刷新\",\"资金曲线加入手续费扣减\",\"限制模组持仓状态下修改模组配置，避免可能出现的异常问题\",\"避免可能出现的人工干预与模组订单同时出现时导致的下单负手数问题\",\"偶尔可能出现的模组开仓时找不到合约导致的空指针问题\"]},\"598\":{\"h\":\"修复\",\"t\":[\"#I7JHVQ:[Bug]: 模组平仓时，若持仓同时存在今仓与昨仓，会出现平仓异常\",\"#I7JL3S:[Bug]: 模组策略选择框无正确显示的问题\",\"#I7KF0N:[Bug]: 模组修改分配资金并保存，模组的分配金额没有更新\",\"#I7KZWL:[Bug]: 开发环境下，当模组没完全加载时，启停全部模组会出现异常的问题\",\"#I7KP8T:[Bug]: 在 idea 中启动项目有异常抛出\"]},\"599\":{\"h\":\"更多有意思的课题进行中\",\"t\":[\"币安，OKX 网关对接\",\"外盘老虎证券网关对接\",\"关于使用 GAN 生成仿真行情数据的研究\",\"关于使用强化学习来进行策略运算的研究\",\"欢迎感兴趣的小伙伴加入，一起来探索平台更多的可能性。\",\"作者：黄伟亮，Northstar 盈富量化平台作者\",\"——   完  ——\"]},\"600\":{\"h\":\"新闻\"},\"601\":{\"h\":\"RuoYi-Vue-Plus 4.7.0 发布 稳定性版本\"},\"602\":{\"h\":\"更新日志\"},\"603\":{\"h\":\"依赖升级\",\"t\":[\"update springboot 2.7.9 => 2.7.11 修复 DoS 漏洞\",\"update xxljob 2.3.1 => 2.4.0\",\"update minio 升级至最新版 避免低版本信息泄漏问题\",\"update hutool 5.8.15 => 5.8.18\",\"update redisson 3.20.0 => 3.20.1\"]},\"604\":{\"h\":\"功能更新\",\"t\":[\"update 优化 更改 sys_oss_config 表注释 避免误解\",\"update 项目正式入驻 dromara 开源社区 更改项目地址\",\"update 全新 logo 全新背景图(设计师打造)\",\"update 优化代码生成 同步操作使用批量处理\",\"update 重写项目 readme 说明\",\"update 修改 controller 中校验直接返回 R.fail\",\"update 更换默认用户头像\",\"update 优化 限流注解 key 支持简单 spel 表达式\",\"update 优化弹窗后导航栏偏移的问题\",\"update 优化$tab.closePage 后存在非首页页签时不应该跳转首页\",\"update delete build style\",\"update 优化选择图标组件\",\"update 移除 vue-multiselect 样式\",\"update 优化固定头部页签滚动条被隐藏的问题\",\"update 按代码规范补全重写注解\",\"update 优化 极端情况获取 LoginUser 可能为 null 问题\",\"update 优化 更改系统所有服务日志配置文件命名为 logback-plus.xml 避免与其他框架默认配置冲突\",\"update 优化 加解密模块 将 null 判断下推防止任何可能的 null 出现\",\"update 优化 调整配置文件错误注释\",\"update 优化 在线用户 token 获取方式\",\"update 优化 用户更改角色 踢掉角色相关所有在线用户\",\"update 优化 下拉图标选择组件优化：1.已选择图标高亮回显 2.滚动条采用 el-scrollbar\",\"update 优化 Vue 的 DictTag 组件 当 value 没有匹配的值时 展示空 value\",\"update 优化 恢复翻页/切换路由滚动功能\"]},\"605\":{\"h\":\"新增功能\",\"t\":[\"add 新增 ip2region 实现离线 IP 地址定位库\",\"add 增加 邮箱验证码发送接口\",\"add 增加 邮箱登陆接口\",\"add 增加 EncryptUtils 加解密安全工具类 可以处理 base64,aes,sm4,sm2,rsa,md5,sha256 加解密\",\"add 增加 EncryptUtils 类中增加国密 sm3 的不可逆加密算法\",\"add 新增 忽略数据权限写法 防止异常不执行关闭问题\"]},\"606\":{\"h\":\"问题修复\",\"t\":[\"fix 修复 代码生成 点选按钮不生效问题\",\"fix 修复 用户密码更新无效问题\",\"fix 修复 findInSet 在 mysql 下方法搜索非数字字段时 无引号报错问题\",\"fix 修复 oracle postgres 数据库日志表索引创建错误\",\"fix 角色列表关联多表 sort 值都一样 导致排序不稳定、临时表没有原来的主键顺序\",\"fix 修复 DefaultExcelResult 单词拼写错误\",\"fix 修复页面切换时布局错乱的问题\",\"fix 修复 tab 栏“关闭其他”异常的问题\",\"fix 修复 加解密拦截器 对象属性为 null 问题\",\"fix 修复 取消 oss 预览状态修改 图标变化不正常问题\",\"fix 修复 开启 TopNav 后一级菜单路由参数设置无效问题\",\"fix 修复 路由跳转被阻止时 vue-router 内部产生报错信息问题\",\"fix 修复 缓存列表：多次清除操作，提示不变的问题\"]},\"607\":{\"h\":\"平台简介\",\"t\":[\"RuoYi-Vue-Plus 是重写 RuoYi-Vue 针对 分布式集群 场景全方位升级(不兼容原框架)\",\"项目代码、文档 均开源免费可商用 遵循开源协议在项目中保留开源协议文件即可 活到老写到老 为兴趣而开源 为学习而开源 为让大家真正可以学到技术而开源\"]},\"608\":{\"h\":\"本框架与 RuoYi 的功能差异\",\"t\":[\"功能\",\"本框架\",\"RuoYi\",\"前端项目\",\"基于 vue3-element-admin 开源项目重写 Vue3 + TS + ElementPlus\",\"基于 Vue2/Vue3 + JS\",\"后端项目结构\",\"采用插件化 + 扩展包形式 结构解耦 易于扩展\",\"模块相互注入耦合严重难以扩展\",\"后端代码风格\",\"严格遵守 Alibaba 规范与项目统一配置的代码格式化\",\"代码书写与常规结构不同阅读障碍大\",\"Web 容器\",\"采用 Undertow 基于 XNIO 的高性能容器\",\"采用 Tomcat\",\"权限认证\",\"采用 Sa-Token、Jwt 静态使用功能齐全 低耦合 高扩展\",\"Spring Security 配置繁琐扩展性极差\",\"权限注解\",\"采用 Sa-Token 支持注解 登录校验、角色校验、权限校验、二级认证校验、HttpBasic 校验、忽略校验。 角色与权限校验支持多种条件 如 ANDOR 或 权限 OR 角色 等复杂表达式\",\"只支持是否存在匹配\",\"关系数据库支持\",\"原生支持 MySQL、Oracle、PostgreSQL、SQLServer 。可同时使用异构切换\",\"支持 Mysql、Oracle 不支持同时使用、不支持异构切换\",\"缓存数据库\",\"支持 Redis 5-7 支持大部分新功能特性 如 分布式限流、分布式队列\",\"Redis 简单 get set 支持\",\"Redis 客户端\",\"采用 Redisson Redis 官方推荐 基于 Netty 的客户端工具 。支持 Redis 90%以上的命令 底层优化规避很多不正确的用法 例如: keys 被转换为 scan 。支持单机、哨兵、单主集群、多主集群等模式\",\"Lettuce + RedisTemplate 支持模式少 工具使用繁琐 。连接池采用 common-pool Bug 多经常性出问题\",\"缓存注解\",\"采用 Spring-Cache 注解 对其扩展了实现支持了更多功能 。例如 过期时间 最大空闲时间 组最大长度等 只需一个注解即可完成数据自动缓存\",\"需手动编写 Redis 代码逻辑\",\"ORM 框架\",\"采用 Mybatis-Plus 基于对象几乎不用写 SQL 全 java 操作 功能强大插件众多。例如多租户插件 分页插件 乐观锁插件等等\",\"采用 Mybatis 基于 XML 需要手写 SQL\",\"SQL 监控\",\"采用 p6spy 可输出完整 SQL 与执行时间监控\",\"log 输出 需手动拼接 sql 与参数无法快速查看调试问题\",\"数据分页\",\"采用 Mybatis-Plus 分页插件 。框架对其进行了扩展 对象化分页对象 支持多种方式传参 支持前端多排序 复杂排序\",\"采用 PageHelper 仅支持单查询分页 参数只能从 param 传 只能单排序 功能扩展性差 体验不好\",\"数据权限\",\"采用 Mybatis-Plus 插件 自行分析拼接 SQL 无感式过滤。 只需为 Mapper 设置好注解条件 支持多种自定义 不限于部门角色\",\"采用 注解+aop 实现 基于部门角色 生成的 sql 兼容性差 不支持其他业务扩展。生成 sql 后需手动拼接到具体业务 sql 上 对于多个 Mapper 查询不起作用\",\"数据脱敏\",\"采用 注解 + jackson 序列化期间脱敏 支持不同模块不同的脱敏条件 。支持多种策略 如身份证、手机号、地址、邮箱、银行卡等 可自行扩展\",\"无\",\"数据加解密\",\"采用 注解 + mybatis 拦截器 对存取数据期间自动加解密 。支持多种策略 如 BASE64、AES、RSA、SM2、SM4 等\",\"无\",\"数据翻译\",\"采用 注解 + jackson 序列化期间动态修改数据 数据进行翻译。 支持多种模式: 映射翻译直接翻译其他扩展条件翻译 接口化两步即可完成自定义扩展 内置多种翻译实现\",\"无\",\"多数据源框架\",\"采用 dynamic-datasource 支持世面大部分数据库 。通过 yml 配置即可动态管理异构不同种类的数据库 也可通过前端页面添加数据源 。支持 spel 表达式从请求头参数等条件切换数据源\",\"基于 druid 手动编写代码配置数据源 配置繁琐 支持性差\",\"多数据源事务\",\"采用 dynamic-datasource 支持多数据源不同种类的数据库事务回滚\",\"不支持\",\"数据库连接池\",\"采用 HikariCP Spring 官方内置连接池 配置简单 以性能与稳定性闻名天下\",\"采用 druid bug 众多 社区维护差 活跃度低 配置众多繁琐性能一般\",\"数据库主键\",\"采用 雪花 ID 基于时间戳的 有序增长 唯一 ID 再也不用为分库分表 数据合并主键冲突重复而发愁\",\"采用 数据库自增 ID 支持数据量有限 不支持多数据源主键唯一\",\"WebSocket 协议\",\"基于 Spring 封装的 WebSocket 协议 扩展了 Token 鉴权与分布式会话同步 不再只是基于单机的废物\",\"无\",\"序列化\",\"采用 Jackson Spring 官方内置序列化 靠谱!!!\",\"采用 fastjson bugjson 远近闻名\",\"分布式幂等\",\"参考美团 GTIS 防重系统简化实现(细节可看文档)\",\"手动编写注解基于 aop 实现\",\"分布式任务调度\",\"采用 Xxl-Job 天生支持分布式 统一的管理中心\",\"采用 Quartz 基于数据库锁性能差 集群需要做很多配置与改造\",\"文件存储\",\"采用 Minio 分布式文件存储 天生支持多机、多硬盘、多分片、多副本存储。支持权限管理 安全可靠 文件可加密存储\",\"采用 本机文件存储 文件裸漏 易丢失泄漏 不支持集群有单点效应\",\"云存储\",\"采用 AWS S3 协议客户端 支持 七牛、阿里、腾讯 等一切支持 S3 协议的厂家\",\"不支持\",\"短信\",\"支持 阿里、腾讯 只需在 yml 配置好厂家密钥即可使用 接口化支持扩展其他厂家\",\"不支持\",\"邮件\",\"采用 mail-api 通用协议支持大部分邮件厂商\",\"不支持\",\"接口文档\",\"采用 SpringDoc、javadoc 无注解零入侵基于 java 注释。只需把注释写好 无需再写一大堆的文档注解了\",\"采用 Springfox 已停止维护 需要编写大量的注解来支持文档生成\",\"校验框架\",\"采用 Validation 支持注解与工具类校验 注解支持国际化\",\"仅支持注解 且注解不支持国际化\",\"Excel 框架\",\"采用 Alibaba EasyExcel 基于插件化 。框架对其增加了很多功能 例如 自动合并相同内容 自动排列布局 字典翻译等\",\"基于 POI 手写实现 功能有限 复杂 扩展性差\",\"工具类框架\",\"采用 Hutool、Lombok 上百种工具覆盖 90%的使用需求 基于注解自动生成 get set 等简化框架大量代码\",\"手写工具稳定性差易出问题 工具数量有限 代码臃肿需自己手写 get set 等\",\"监控框架\",\"采用 SpringBoot-Admin 基于 SpringBoot 官方 actuator 探针机制。实时监控服务状态 框架还为其扩展了在线日志查看监控\",\"无\",\"链路追踪\",\"采用 Apache SkyWalking 还在为请求不知道去哪了 到哪出了问题而烦恼吗 。 用了它即可实时查看请求经过的每一处每一个节点\",\"无\",\"代码生成器\",\"只需设计好表结构 一键生成所有 crud 代码与页面 。降低 80%的开发量 把精力都投入到业务设计上 。 框架为其适配 MP、SpringDoc 规范化代码 同时支持动态多数据源代码生成\",\"代码生成原生结构 只支持单数据源生成\",\"部署方式\",\"支持 Docker 编排 一键搭建所有环境 让开发人员从此不再为搭建环境而烦恼\",\"原生 jar 部署 其他环境需手动下载安装 自行搭建\",\"项目路径修改\",\"提供详细的修改方案文档 并为其做了一些改动 非常简单即可修改成自己想要的\",\"需要做很多改造 文档说明有限\",\"国际化\",\"基于请求头动态返回不同语种的文本内容 开发难度低 有对应的工具类 支持大部分注解内容国际化\",\"只提供基础功能 其他需自行编写扩展\",\"代码单例测试\",\"提供单例测试 使用方式编写方法与 maven 多环境单测插件\",\"只提供基础功能 其他需自行编写扩展\",\"Demo 案例\",\"提供框架功能的实际使用案例 单独一个模块提供了很多很全\",\"无\"]},\"609\":{\"h\":\"本框架与 RuoYi 的业务差异\",\"t\":[\"业务\",\"功能说明\",\"本框架\",\"RuoYi\",\"用户管理\",\"用户的管理配置 如:新增用户、分配用户所属部门、角色、岗位等\",\"支持\",\"支持\",\"部门管理\",\"配置系统组织机构（公司、部门、小组） 树结构展现支持数据权限\",\"支持\",\"支持\",\"岗位管理\",\"配置系统用户所属担任职务\",\"支持\",\"支持\",\"菜单管理\",\"配置系统菜单、操作权限、按钮权限标识等\",\"支持\",\"支持\",\"角色管理\",\"角色菜单权限分配、设置角色按机构进行数据范围权限划分\",\"支持\",\"支持\",\"字典管理\",\"对系统中经常使用的一些较为固定的数据进行维护\",\"支持\",\"支持\",\"参数管理\",\"对系统动态配置常用参数\",\"支持\",\"支持\",\"通知公告\",\"系统通知公告信息发布维护\",\"支持\",\"支持\",\"操作日志\",\"系统正常操作日志记录和查询 系统异常信息日志记录和查询\",\"支持\",\"支持\",\"登录日志\",\"系统登录日志记录查询包含登录异常\",\"支持\",\"支持\",\"文件管理\",\"系统文件展示、上传、下载、删除等管理\",\"支持\",\"无\",\"文件配置管理\",\"系统文件上传、下载所需要的配置信息动态添加、修改、删除等管理\",\"支持\",\"无\",\"在线用户管理\",\"已登录系统的在线用户信息监控与强制踢出操作\",\"支持\",\"支持\",\"定时任务\",\"运行报表、任务管理(添加、修改、删除)、日志管理、执行器管理等\",\"支持\",\"仅支持任务与日志管理\",\"代码生成\",\"多数据源前后端代码的生成（java、html、xml、sql）支持 CRUD 下载\",\"支持\",\"仅支持单数据源\",\"系统接口\",\"根据业务代码自动生成相关的 api 接口文档\",\"支持\",\"支持\",\"服务监控\",\"监视集群系统 CPU、内存、磁盘、堆栈、在线日志、Spring 相关配置等\",\"支持\",\"仅支持单机 CPU、内存、磁盘监控\",\"缓存监控\",\"对系统的缓存信息查询，命令统计等。\",\"支持\",\"支持\",\"在线构建器\",\"拖动表单元素生成相应的 HTML 代码。\",\"支持\",\"支持\",\"使用案例\",\"系统的一些功能案例\",\"支持\",\"不支持\"]},\"610\":{\"h\":\"参考文档\",\"t\":[\"使用框架前请仔细阅读文档重点注意事项\",\"初始化项目 必看\",\"https://gitee.com/dromara/RuoYi-Vue-Plus/wikis/pages?sort\\\\_id=4164117&doc\\\\_id=1469725\",\"专栏与视频 入门必看\",\"https://gitee.com/dromara/RuoYi-Vue-Plus/wikis/pages?sort\\\\_id=5473272&doc\\\\_id=1469725\",\"部署项目 必看\",\"https://gitee.com/dromara/RuoYi-Vue-Plus/wikis/pages?sort\\\\_id=4219382&doc\\\\_id=1469725\",\"参考文档 Wiki\",\"https://gitee.com/dromara/RuoYi-Vue-Plus/wikis/pages\"]},\"611\":{\"h\":\"RuoYi-Vue-Plus 5.1.0 发布 客户端授权、三方授权、传输加密、sms4j、powerjob密集来袭\"},\"612\":{\"h\":\"开发历程\",\"t\":[\"2023 年 5 月 开始 5.1.0 计划 历经 1 个月的设计与讨论\",\"2023 年 6 月 开始着手开发 历经 2 个多月的开发 特别感谢团队的小伙伴与一些热心的粉丝 参与功能开发与测试\",\"2023 年 8 月 开始公测 历经将近 1 个月的公测与修复工作(期间成功支持多位使用者生产使用)\",\"2023 年 9 月初 正式发布(经过多个小伙伴的生产实践 已基本可尝试生产使用)\",\"关于 4.X 的说明 由于 SpringBoot2.X 与 vue2.X 均在 11 月底停止维护 故而咱们 vue 版本 4.X 也无法再继续更新 介于 4.X 的用户量特别庞大 功能也非常的稳定 计划于 11 月底同 Boot2.X 一同停止更新但还会持续维护修复 bug(修复的形式为直接提交到 4.X 分支停止发版)\"]},\"613\":{\"h\":\"视频介绍\",\"t\":[\"为了更好的让大家了解 5.1.0 作者录制了相关的视频 供大家快速了解上手\",\"5.1.0 新功能与变更介绍: https://www.bilibili.com/video/BV1fj411y71X/\",\"搭建与运行: https://www.bilibili.com/video/BV1Fg4y137JK/\",\"生产环境搭建部署: https://www.bilibili.com/video/BV1mL411e7ha/\"]},\"614\":{\"h\":\"更新日志\"},\"615\":{\"h\":\"重大更新\",\"t\":[\"[重大更新] 优化 相关代码 完成代码生成多数据源统一存储(感谢 WangBQ !pr349)\",\"[不兼容更新] 移除 原短信功能 集成更强大的 sms4j 短信工具包(感谢 友杰 !pr367)\",\"[不兼容更新] 对接 powerjob 实现分布式任务调度 删除原有 xxljob 原因为社区不更新功能太少只支持 mysql(感谢 yhan219 !pr359)\",\"[重大更新] 新增 三方授权绑定登录功能 基于 justauth 支持市面上大部分三方登录(感谢 三个三 !pr370)\",\"[不兼容更新] 新增 客户端授权功能 不需要更改任何代码即可完成多端动态对接(感谢 Michelle.Chung !pr379)\",\"[重大更新] 新增 前后端接口请求加密传输 基于 AES+RSA 动态高强度加密(感谢 wdhcr !pr377)\",\"[重大更新] 新增 三方授权登录 对接 maxkey 单点登录\",\"[不兼容更新] 优化 redis 序列化配置 更改为通用格式(升级需清除 redis 所有数据)\"]},\"616\":{\"h\":\"依赖升级\",\"t\":[\"update springboot 3.0.7 => 3.1.3\",\"update springboot-admin 3.1.3 => 3.1.5\",\"update springdoc 2.1.0 => 2.2.0\",\"update spring-mybatis 3.0.1 => 3.0.2\",\"update mybatis-plus 3.5.3.1 => 3.5.3.2\",\"update easyexcel 3.2.1 => 3.3.2\",\"update mapstruct-plus 1.2.3 => 1.3.5 解决修改实体类 idea 不编译问题\",\"update satoken 1.34.0 => 1.35.0.RC 优化过期配置 支持多端 token 自定义有效期\",\"update dynamic-ds 3.6.1 => 4.1.3 支持 SpringBoot3\",\"update sms4j 2.2.0\",\"update hutool 5.8.18 => 5.8.20\",\"update redisson 3.20.1 => 3.23.4\",\"update lock4j 2.2.4 => 2.2.5\",\"update aws-java-sdk-s3 1.12.400 => 1.12.540\",\"update maven-surefire-plugin 3.0.0 => 3.1.2\"]},\"617\":{\"h\":\"功能更新\",\"t\":[\"update 优化 excel 导出合并 在初始化类时进行数据的处理\",\"update 优化 简化 flatten 插件语法写法\",\"update 优化 支持本地虚拟域名调试(感谢 代星登 !pr363)\",\"update 重构 将框架内的 swagger 命名更改为 springdoc 命名避免误解\",\"update 重构 将系统内置配置放置到 common 包内独立加载 不允许用户随意修改\",\"update 优化 切换 maven 仓库到 华为云(aliyun 依赖不更新拉取不到)\",\"update 优化 升级 satoken 支持多端 token 自定义有效期功能\",\"update 优化 RepeatSubmitAspect 逻辑避免并发请求问题\",\"update 优化 在全局异常拦截器中增加两类异常处理\",\"update 优化 提供 powerjob 完整 sql 脚本 降低用户使用难度\",\"update 优化 StreamUtils 其他方法过滤 null 值(感谢 bleachtred !pr390)\",\"update 优化 powerjob 端口随着主应用端口飘逸 避免集群冲突\",\"update 优化 角色权限支持仅本人权限查看 解决无法查看自己创建的角色问题\",\"update 修改代码生成模版，日期范围统一采用 addDateRange 方法(感谢 LiuHao !pr397)\",\"update 优化 树表生成前端缺少 children 字段\",\"update 优化 CryptoFilter null 判断工具\",\"update 优化 websocket 路径与 cloud 版本保持一致\",\"update 优化 更新登录策略返回值(感谢 zlyx)\",\"update 修改代码生成模板，调整列表打开对话框和接口请求顺序\",\"update 优化 SaInterceptor 拦截器判断 token 客户端 id 是否有效(感谢 zlyx !pr402)\",\"update 优化 excel 导出字典默认转为下拉框\",\"update 优化 兼容 clientid 通过 param 传输\",\"update 优化 excel 导出字典转下拉框 无需标记 index 自动处理(感谢 一夏 coco)\",\"update 优化 简化线程池配置\",\"update 优化 屏蔽 powerjob 无用的心跳日志\",\"update 优化 适配 mysql 8.0.34 升级连接机制\",\"update 优化 加密实现 使用 EncryptUtils 统一处理\",\"update 优化 删除字典无用状态字段(基本用不上 禁用后还会导致回显问题)\",\"update 优化 部门与角色如果绑定了用户则不允许禁用\",\"update 优化 岗位如果绑定了用户则不允许禁用\",\"update 优化 用户管理 只查询未禁用的部门角色岗位数据\",\"update 优化 登录用户增加昵称返回\",\"update 优化 将部门管理 负责人选项改为下拉框选择(感谢 Lionel !pr410)\",\"update 优化 全局异常处理器 业务异常不输出具体堆栈信息 减少无用日志存储\",\"update 优化 登录用户缓存 去除冗余统一存储\",\"update 优化 放宽菜单权限 角色关联菜单无需管理员\"]},\"618\":{\"h\":\"新增功能\",\"t\":[\"add 增加 RedisUtils 批量删除 hash key 方法\",\"add 新增 Oss 上传 File 文件方法(感谢 jenn !pr362)\",\"add 增加 excel 导出下拉框功能\",\"add 新增 RedisUtils.setObjectIfAbsent 如果不存在则设置方法\"]},\"619\":{\"h\":\"修复问题\",\"t\":[\"fix 修复 脱敏注解标记位置错误\",\"fix 修复 OssClient 实例多租户相同 key 缓存覆盖问题\",\"fix 修复 关闭多租户 脱敏判断问题\",\"fix 修复 OssClient 切换服务 实例不正确问题(感谢 jenn !pr360)\",\"fix 修复 传参类型不正确导致 postgreSql 同步套餐报错问题\",\"fix 修复 参数类型修改 未修改校验注解\",\"fix 修复 登录校验错误次数未达到上限时 错误次数缓存未设置有效时间问题(感谢 konbai !pr366)\",\"fix 修复 common-core 包使用 aop 注解 但未添加 aop 实现类导致单独使用报错问题\",\"fix 修复 Mapper 多参数未加 @Param 注解问题\",\"fix 修复 邮箱登录 查询值错误问题\",\"fix 修复 用户篡改管理员角色标识符越权问题\",\"fix 修复 字典缓存注解使用错误问题\",\"fix 修复 查询部门下拉树未过滤数据权限问题\",\"fix 修复 CacheName 缓存 key 存储错误问题\",\"fix 修复 代码生成 前端添加或修改表单修改列生成问题\",\"fix 修复 新增角色使用内置管理员标识符问题\",\"fix 修复 代码生成 前端添加或修改表单修改列生成问题\",\"fix 修复 token 过期登出无法清理在线用户问题\",\"fix 修复 加密模块数据转换异常问题\",\"fix 修复 可能导致异常类无法反序列化问题\",\"fix 修复 代码生成 编辑按钮刷新列表问题\",\"fix 修复 客户端编辑时授权类型变更未保存的问题(感谢 David Wei !pr400)\",\"fix 修复 有界队列与优先队列 错误使用问题\",\"fix 修复 修复树模板父级编码变量错误\",\"fix 修复 部署部分系统出现乱码问题\",\"fix 修复 一级菜单无法显示问题\",\"fix 修复 可能会存在的越权行为(感谢 丶 Stone !pr416)\",\"fix 修复 代码生成页面参数缺少逗号问题\"]},\"620\":{\"h\":\"移除功能\",\"t\":[\"remove 移除原有短信功能(建议使用 sms4j)\",\"remove 移除 xxljob 功能(建议使用 powerjob)\"]},\"621\":{\"h\":\"框架文档\",\"t\":[\"使用框架前请仔细阅读文档重点注意事项\",\"参考文档: https://plus-doc.dromara.org\"]},\"622\":{\"h\":\"加公开群\",\"t\":[\"加微信备注加群\"]},\"623\":{\"h\":\"Sa-Token v1.35.0更新，新增动态 active-timeout 能力\"},\"624\":{\"h\":\"Sa-Token v1.35.0 更新，新增动态 active-timeout 能力\",\"t\":[\"Sa-Token 是一个轻量级 Java 权限认证框架，主要解决：登录认证、权限认证、分布式 Session 会话、单点登录、OAuth2.0 等一系列权限相关问题。\",\"框架针对踢人下线、自动续签、前后台分离、分布式会话…… 等常见业务进行 N 多适配，通过 Sa-Token，你可以以一种极简的方式实现系统的权限认证部分\",\"Sa-Token v1.35.0.RC 版本更新包括以下内容：\",\"sa-token-core：\",\"优化：前端未提供 token 时，getTokenSession() 将抛出未登录异常，而不是返回 null。[不向下兼容]\",\"新增：SaSession 新增字段：type、loginType、loginId、token。\",\"重构：全局过滤器抽离 SaFilter 统一接口。\",\"重构：全局过滤器 includeList、excludeList 改为 public，同时移除对应的 getter 方法。[不向下兼容]\",\"重构：将全局过滤器的 BeforeAuth 认证设为不受 includeList 与 excludeList 的限制，所有请求都会进入。[不向下兼容]\",\"新增：新增循环生成 token 的算法，用于确保 Token 的唯一性。[重要]\",\"重构：API 接口签名所有方法均迁移至 core 核心模块。[重要]\",\"新增：新增彩色日志打印，更方便的分辨不同日志等级。[重要]\",\"重构：重构概念：临时有效期 -> token 最低活跃频率，过期后 token 冻结。\",\"重构：重构概念：User-Session -> Account-Session。\",\"新增：新增 getTokenTimeout(String token) 方法，获取任意 token 剩余有效期。\",\"优化：在登录时增加判断当前 StpLogic 是否支持 extra 扩展参数模式，如果不支持则打印警告信息。\",\"新增：NotLoginException 增加新场景值 -6、-7，提供更精确的未登录异常描述信息。\",\"新增：TokenSign 新增 tag 挂载参数，可在登录时方便的存储一些客户端特有数据。 [重要]\",\"新增：新增 SaStrategy#createStpLogic，用于指定动态创建 StpLogic 时的算法策略。\",\"新增：新增 @SaCheckOr 批量注解鉴权：只要满足其中一个注解即可通过验证。 [重要]\",\"重构：重命名：SaStrategy.me -> SaStrategy.instance。\",\"重构：在登录时强制性检查账号 id 是否为异常值，如果是则登录失败。\",\"重构：重构概念：activity-timeout -> active-timeout。 [重要]\",\"新增：新增动态 active-timeout 能力，可在每次登录时指定 active-timeout 值。 [重要]\",\"优化：将 SaStrategy 所有策略声明抽离为单独的函数式接口。\",\"新增：增加为 StpLogic 单独配置 SaTokenConfig 参数的能力。\",\"sa-token-sso：\",\"修复：在 SSO 模式三中 ticket 校验地址配错时，会出现 NPE 的问题\",\"新增：新增 getData 接口配置，在模式三拉取数据时可以传递任意参数。[重要]\",\"重构：模式三秘钥配置更改：sa-token.sso.secretkey=xxx -> sa-token.sign.secret-key=xxx。[不向下兼容]\",\"重构：模式三校验签名方法更改：SaSsoUtil.checkSign(req) -> SaSignUtil.checkRequest(req)。[不向下兼容]\",\"新增：新增 sa-token.sso.mode 配置项，用于约定此系统使用的 SSO 模式。\",\"优化：优化校验 ticket 的逻辑。\",\"sa-token-jwt：\",\"修复：jwt 令牌的签名类型可以被篡改的问题。[重要]\",\"其它：\",\"优化：所有模块优化注释，更方便开发者阅读源码。\",\"优化：在所有 .java 文件中添加 license 头说明。\",\"优化：修复大部分代码警告。\",\"新增：新增 thymeleaf 标签方言命名空间，增强 ide 代码提示。[重要]\",\"新增：定义 sa-token-bom 包，方便引入 sa-token 时对齐版本。\",\"新增：sa-token-dubbo3 插件新增代码示例。\",\"新增：新增跨域文章和示例：Header 参数版和第三方 Cookie 版。[重要]\",\"修复：修复 sa-token-alone-redis 在低版本 springboot 下无法启动成功(缺少 username 属性)的问题。\",\"新增插件：\",\"新增：新增 sa-token-context-dubbo3 插件。感谢 @qiudaozhang 提交的 pr。[重要]\",\"文档：\",\"新增：部分常见报错排查。\",\"新增：首页图片增加懒加载效果，节省流量。\",\"新增：增加 Cookie 配置示例。\",\"修复：整理 demo 结构目录结构，修复不正确的路径说明。\",\"新增：新增 api-sign 模块文档。 [重要]\",\"简化包名 [重要][不向下兼容]\",\"sa-token-dao-redis -> sa-token-redis\",\"sa-token-dao-redis-jackson -> sa-token-redis-jackson。\",\"sa-token-dao-redis-fastjson -> sa-token-redis-fastjson。\",\"sa-token-dao-redis-fastjson2 -> sa-token-redis-fastjson2。\",\"sa-token-dao-redisson-jackson -> sa-token-redis-jackson。\",\"sa-token-dao-redisx -> sa-token-redisx。\",\"sa-token-context-dubbo -> sa-token-dubbo。\",\"sa-token-context-dubbo3 -> sa-token-dubbo3。\",\"sa-token-context-grpc -> sa-token-grpc。\",\"cn.dev33sa-token-spring-boot-starter1.35.0.RC\"]},\"625\":{\"h\":\"代码仓库： https://gitee.com/dromara/sa-token\",\"t\":[\"框架功能结构图\"]},\"626\":{\"h\":\"TestHub 自动化测试工具加入 Dromara 社区\"},\"627\":{\"h\":\"🌟 TestHub 自动化测试工具加入 Dromara 社区！🌟\",\"t\":[\"亲爱的开发者们，\",\"我们兴奋地宣布，我们的开源项目—TestHub，一款强大的自动化测试工具，已经正式加入了 dromara 开源社区！我们诚挚地邀请您成为我们社区的一员，一同分享、学习和贡献。\",\"TestHub 是为了解决在软件开发旅程中测试流程管理和执行的复杂挑战而诞生的。传统测试工具可能局限于接口级自动化，无法满足多样化的需求，而我们在 TestHub 中引入了独特的流程编排功能，让您能够轻松定义、管理和执行测试流程。无论是自动化测试、流程调度还是其他自动化任务，TestHub 的插件式架构都能够满足您的无限扩展需求\"]},\"628\":{\"h\":\"TestHub 提供的内置能力\",\"t\":[\"✅ check 功能：对数据进行校验，类似于断言。\",\"✅ checkobj 功能：对比对象、列表，确保数据的一致性。\",\"✅ sql 功能：执行 SQL 语句，满足数据库操作需求。\",\"✅ sql_begin 和 sql_commit 功能：支持事务管理，确保数据的完整性。\",\"✅ sleep 功能：让程序休息指定毫秒数，方便处理等待场景。\",\"✅ convert 功能：灵活的数据转换处理，满足多样化的数据格式需求。\",\"✅ const 功能：定义常量，便于在测试流程中重复使用。\",\"✅ http 功能：发送 Http 请求，方便进行接口测试等。\",\"在 TestHub 中，我们将复杂的测试流程管理变得直观易用。通过简单的拖放和连接步骤，您可以构建完整的测试流程，包括执行测试用例、准备数据、配置环境等，一切都在统一的平台上高效完成。\"]},\"629\":{\"h\":\"喜欢我们的开源项目吗？请给我们点颗星！\",\"t\":[\"Gitee：https://gitee.com/dromara/TestHub。\",\"Github：https://github.com/dromara/TestHub。\",\"感谢您一直以来对我们开源项目的支持和关注！作为开发者，您深知开源社区的力量，点亮一颗星星，就是对我们最真挚的鼓励。不管您是一位新手还是资深开发者，您的每颗星星都对我们意义重大。让我们一起为开源社区的繁荣贡献一份力量！\"]},\"630\":{\"h\":\"软件发布阶段\"},\"631\":{\"h\":\"V 1.0.1\",\"t\":[\"📅 2023 年 8 月 31 日\",\"🪲🪲 修复 BUG 🪲🪲\",\"解决搜索用例后新打开用例名称出现乱码的情况\",\"👍👍 新增功能 👍👍\",\"集成 sa-token 实现鉴权和登录\",\"支持 pgsql 作为数据库\",\"http 支持设置超时时间\",\"新增版本升级记录\",\"新增自动生成用例编码\"]},\"632\":{\"h\":\"V 1.0.0\",\"t\":[\"📅 2023 年 7 月 31 日 TestHub 正式开源 1.0.0 版本发布\",\"同日加入 dromara 社区，跪谢 🙇 社区一众大佬。\",\"感谢 🙇 SMS4J 作者 风如歌大佬的鼎力支持\"]},\"633\":{\"h\":\"内测\",\"t\":[\"📅 2023 年 2 月 7 日\",\"TestHub 在此刻发布了根网科技内测初版，迈出了它成长之路的第一步。TestHub 测试平台从 2022 年 10 月开始构建，经过多次改进和完善，采用插件式架构满足了根网科技的私有协议需求，并引入了更多功能。\",\"在这个成长的过程中，我们想对所有为 TestHub 奉献时间和智慧的伙伴们表示衷心感谢。正是有了你们的支持，TestHub 才能不断进化、壮大。\",\"首先，我们要感谢那些在 TestHub 起步时给予巨大支持的伙伴，特别是项目组领导刘培琦。正是因为您的支持，TestHub 得以诞生。\",\"同时，我们衷心感谢部门总监黎伟的大力支持。正是有了您的支持，TestHub 从一个简陋的小工具逐步完善，发展成为一个功能完备的平台。您的努力推动，让 TestHub 在公司内落地为研发团队提供了强大支持，特别是在 CTS 阶段，TestHub 得以真正完善，成为一款出色的产品。\",\"感谢根网 CTS 团队的每一位成员，你们的建议对 TestHub 的完善发挥了不可或缺的作用。\",\"最后，我们感谢所有使用 TestHub 的同事，你们的反馈和使用经验使得平台不断优化。正是通过您们的反馈，TestHub 才能不断成长和完善，为大家提供更好的体验。\",\"在这个充满感激之情的阶段，我们期待着您继续的支持和参与，让 TestHub 在未来继续发展壮大，成为自动化测试领域的佼佼者。\"]},\"634\":{\"h\":\"诚邀开发者加入\",\"t\":[\"您是否热衷于技术创新？是否对自动化测试领域有浓厚兴趣？如果是，我们邀请您加入 TestHub 开发团队！\",\"目前，我们的团队正在积极推动 TestHub 项目的发展，但在前端方面仍存在一定的人手缺口。我们正在寻找热爱前端开发的开发者，与我们一同努力，为 TestHub 带来更多创新和功能。\",\"我们期待您：\",\"具备前端开发经验，熟悉相关技术栈。\",\"对自动化测试领域有兴趣，愿意为项目的成功贡献一份力量。\",\"具备团队合作精神，积极沟通，愿意分享经验和知识。\",\"无论您是资深前端开发者，还是刚入门的新手，我们都欢迎您的加入！让我们共同构建一个充满活力和创造力的开发团队，为 TestHub 的发展添砖加瓦。\",\"加入我们的团队，一起创造美好未来！\"]},\"635\":{\"h\":\"加入 Dromara-TestHub 技术支持群的好处\",\"t\":[\"🤝 协作与交流：与来自各地的开发者们一起合作，分享您的知识和经验，一同解决问题，共同推动项目的发展。\",\"🚀 学习机会：借助社区的力量，您将有机会深入了解自动化测试领域的最新动态和最佳实践，不断提升自己的技能。\",\"🌈 贡献机会：您可以通过编写代码、提交问题、撰写文档等多种方式参与到项目中，为整个社区做出宝贵的贡献。\",\"🏆 成就与认可：您的贡献将会被广泛认可，不仅仅体现在代码中，还有可能在社区内获得声望和认可。\",\"我们欢迎各级开发者的加入，无论您是新手还是资深大牛，都能在这里找到归属。为了更好地了解 TestHub，您可以：\",\"访问我们的官方网站 http://nsrule.com/，深入了解项目的详情。\",\"查阅我们的文档，快速掌握 TestHub 的使用方法。\",\"加入我们的社区论坛或聊天群，与其他成员分享交流。\",\"让我们一同构建一个繁荣、友好的开源社区，在自动化测试领域取得更加出色的成就！期待您的加入！\",\"感谢您的支持与参与！\",\"[失败女神]-TestHub 开发团队\"]},\"636\":{\"h\":\"ElectronEgg v3.1.0 正式发布，跨平台桌面软件开发\",\"t\":[\"值得信赖为什么使用\",\"桌面软件（办公方向、 个人工具），仍然是未来十几年 PC 端需求之一，提高工作效率\",\"electron 技术是流行趋势，QQ、百度翻译、阿里网盘、迅雷、有道云笔记 ......\",\"简单\",\"只需懂 JavaScript\",\"开源\",\"gitee：https://gitee.com/dromara/electron-egg 3200+\",\"github：https://github.com/dromara/electron-egg 800+\"]},\"637\":{\"h\":\"本次更新\",\"t\":[\"3.1.0\",\"【增加】Utils 模块 mac 功能：getMAC /isMAC\",\"【增加】Utils 模块 IP 功能：publicIpv4 /publicIpv6\",\"【增加】Job 模块 childJob 功能：createProcess /getPids/execPromise\",\"【增加】Job 模块 childJobPool 功能：create /run/runPromise /getChildByPid / getChild / getPids / killAll\",\"【增加】exception 模块：main/child/renderer 进程捕获异常后是否退出\",\"【增加】ps 模块：getEncryptDir /isEncrypted/exitChildJob /isChildJob/isChildPoolJob\",\"【增加】Utils 模块：co /deprecate/extend /get-port/time\",\"【增加】tools 模块：加密文件过滤及匹配\",\"【增加】bin 模块：clean 清理加密文件\"]},\"638\":{\"h\":\"使用场景\"},\"639\":{\"h\":\"1. 常规桌面软件\",\"t\":[\"windows 平台 - demo\",\"macOS 平台 - demo\",\"linux 平台 - 国产 UOS、Deepin - demo\",\"linux 平台 (ubuntu) - demo\"]},\"640\":{\"h\":\"2. vue、react、web 转换成桌面软件\",\"t\":[\"vue-ant-design（本地）\",\"禅道项目管理（web 项目地址）\"]},\"641\":{\"h\":\"3. 用户案例\"},\"642\":{\"h\":\"更多案例\",\"t\":[\"访问官网：electron-egg: 一个入门简单、跨平台、企业级桌面软件开发框架\",\"https://www.kaka996.com/\"]},\"643\":{\"h\":\"ElectronEgg v3.7.0 正式发布，跨平台桌面软件开发\",\"t\":[\"为什么使用\",\"桌面软件（办公方向、 个人工具），仍然是未来十几年 PC 端需求之一，提高工作效率\",\"electron 技术是流行趋势，QQ、百度翻译、阿里网盘、迅雷、有道云笔记 ......\",\"简单\",\"只需懂 JavaScript\",\"开源\",\"gitee：https://gitee.com/dromara/electron-egg 3700+\",\"github：https://github.com/dromara/electron-egg 1000+\"]},\"644\":{\"h\":\"本次更新\",\"t\":[\"3.7.0\",\"【增加】新增 config/bin.js 配置文件，统一处理 ee-bin 功能配置项。\",\"【增加】新增 ee-bin dev 命令，同时启动 frontend electron 服务。\",\"【增加】新增 ee-bin start 命令，使用 node spawn 启动 electron。\",\"【增加】新增 ee-bin build 命令，构建出包含 renderer 进程数据的 process。\",\"【增加】新增 ee-core boot、failure 页面，优化开发体验。\",\"【增加】新增 ee-core jsondb 支持修改数据存储目录。\",\"【增加】新增 ee-bin rd 参数，支持 dist、target 参数。\",\"【增加】新增 demo 分支，（frontend）loading 动画、登录窗口效果、加载本机图片效果。\",\"【增加】新增 demo 分支，（electron）jsondb 目录切换功能、java 插件状态检查功能。\",\"【优化】优化 ee-bin 命令的 log 提示，增加颜色效果。\",\"【优化】优化 ee-core config.openDevTools 支持传参。\",\"【优化】优化 http 服务 listen 参数。\",\"【优化】优化 开发体验。\",\"【修复】修复 getPort 端口获取 bug。\",\"【删除】删除 app.on ('activate')、 app.on ('second-instance')。\",\"【升级】升级 ee-core -> v2.5.0、升级 ee-bin -> 1.2.0\"]},\"645\":{\"h\":\"使用场景\"},\"646\":{\"h\":\"1. 常规桌面软件\",\"t\":[\"windows 平台 - demo\",\"macOS 平台 - demo\",\"linux 平台 - 国产 UOS、Deepin - demo\",\"linux 平台 (ubuntu) - demo\"]},\"647\":{\"h\":\"2. vue、react、web 转换成桌面软件\",\"t\":[\"vue-ant-design（本地）\",\"禅道项目管理（web 项目地址）\"]},\"648\":{\"h\":\"3. 用户案例\"},\"649\":{\"h\":\"更多案例\",\"t\":[\"访问官网：electron-egg: 一个入门简单、跨平台、企业级桌面软件开发框架\",\"https://www.kaka996.com/\"]},\"650\":{\"h\":\"Fast Request 2023.1.3重磅发布，支持团队协作\"},\"651\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request 是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生\",\"倾听用户的声音，不断提升自我，本次 Restful Fast Request 更新主要内容如下：\",\"新功能、优化项、修复项\",\"重量级更新：团队协作支\",\"OpenAI API 接口优化字段支持\",\"API 与存储文件跳转\",\"项目配置刷新\",\"rfr.currentModuleName 支持\",\"工具栏优化\",\"LocalDateTime、LocalDate、LocalTime 解析优化\",\"GET、POST、DELETE、PUT、PATCH 图标优化\",\"修复 IDEA 2023.1 响应未格式化\",\"修复 Mapping 为数组的时候 URL 随机生成\",\"修复 Kotlin 字段注释未生成\"]},\"652\":{\"h\":\"1. 团队协作支\",\"t\":[\"我们费了非常大的精力，对插件进行了重大的重构，将原先的单机版改成了支持团队协作版，通过文件版本管理系统，实现部分配置及所有 API 的共享。但是可能也带来了一些 bug，希望开发者能体谅！\",\"同时我们也希望开发者们能在团队中推广并分享 Restful Fast Request 插件，在此非常感谢！\",\"更多详情请看 -> 团队协作支持\"]},\"653\":{\"h\":\"2. OpenAI API 接口优化字段支持\",\"t\":[\"利用 OpenAI 接口，替换随机字段值。注意由于 API 是非结构向数据，所以返回的内容可能会有误差\"]},\"654\":{\"h\":\"3. API 与存储文件跳转\",\"t\":[\"实现 API 以及底层保存的 json 数据进行关联跳转\"]},\"655\":{\"h\":\"4. API 与存储文件跳转项目配置刷新\",\"t\":[\"配置文件更新后，UI 实现项目级别配置更新\"]},\"656\":{\"h\":\"5. rfr.currentModuleName 支持\",\"t\":[\"脚本 中用于获取当前 API 所属模块支持\"]},\"657\":{\"h\":\"6. Api 文档同步支持自定义分支\",\"t\":[\"支持特定分支，因为有些情况下 master 被保护不允许 push\"]},\"658\":{\"h\":\"7. 工具栏优化\",\"t\":[\"1.垂直工具栏支持 2.按钮位置调整和折叠\"]},\"659\":{\"h\":\"8. GET、POST、DELETE、PUT、PATCH 图标\",\"t\":[\"对图标进行了圆角处理，并且调整了背景色\"]},\"660\":{\"h\":\"修复重要 bug\",\"t\":[\"**1. IDEA 2023.1 响应未格式化****2. Mapping 为数组的时候 URL 随机生成 3. Kotlin 字段注释未生成 4. 若干已知 bug 修复**\"]},\"661\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->这里https://dromara.gitee.io/fast-request/guide/history.html\"]},\"662\":{\"h\":\"支持自动域名，Fast Request 2023.1.4 发布\"},\"663\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request 是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生\",\"倾听用户的声音，不断提升自我，本次 Restful Fast Request 更新主要内容如下：\",\"新功能、优化项、修复项\",\"自动域名\",\"SearchEveryWhere 支持搜索 jar 包中的 url\",\"Script 项目级别头设置失败\"]},\"664\":{\"h\":\"1. 自动域名\",\"t\":[\"配置文件解析逻辑\",\"读取 application.yml 或者 bootstrap.yml。如果找到配置 server.port 或者 server.servlet.context-path，则取该配置。\",\"如果以上配置文件无法找到 server.port 或者 server.servlet.context-path，则读取 spring.profiles.active，作为变量 env。接着寻找 application-env.yml 或者 bootstrap-env.yml，寻找配置 server.port 或者 server.servlet.context-path\",\"properties 和 yaml 文件逻辑类似\",\"以上配置无法找到则 port=8080，context-path=/\",\"项目名称取自模块名\",\"spring.profiles.active 不支持 Maven 变量读取解析，例如 spring.profiles.active=@active.env@ 针对历史已保存的 api，插件不做自动域名处理；针对新的 API，如果开关开启，将自动创建域名\",\"所以自动域名的另外一个好使是 API 域名的自动切换，如果没有则自动生成，如果有需改改进，开发者只需要修改域名值即可！插件将自动适配！\",\"-> 自动域名设置更多详情\"]},\"665\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->  https://dromara.gitee.io/fast-request/guide/history.html\"]},\"666\":{\"h\":\"全新扁平化图标，Fast Request 2023.1.7 发布\"},\"667\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request 是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生\",\"倾听用户的声音，不断提升自我，本次Restful Fast Request更新主要内容如下：\",\"新功能、优化项、修复项\",\"全新扁平化图标\",\"SearchEveryWhere 加入过滤条件\",\"精简版 http 图标\",\"字段拷贝\",\"脚本片段插入优化\",\"table 与 textarea 优化\",\"自动域名解析优化\",\"cUrl 导入\",\"全屏操作\",\"参数解析\",\"Gradle 项目的模块名去除.main\",\"SearchEveryWhere 关键字带空格搜索\",\"众多操作细节优化\",\"批量导出 api 文档\",\"历史请求回显问题\"]},\"668\":{\"h\":\"1.全新扁平化图标\"},\"669\":{\"h\":\"2.SearchEveryWhere 加入过滤条件\",\"t\":[\"支持module、methodType、library搜索\"]},\"670\":{\"h\":\"3.精简版 http 图标\"},\"671\":{\"h\":\"4.字段拷贝\",\"t\":[\"支持字段行拷贝，key 用-dup结尾标注。集合场景不变更 key，开发者需要自行处理修改下标\"]},\"672\":{\"h\":\"功能更新视频介绍\",\"t\":[\"本版本优化了众多操作细节，使得体验性更加友善，更有更新视频介绍-->https://www.bilibili.com/video/BV1gM4y177QU\"]},\"673\":{\"h\":\"更多详情\",\"t\":[\"请点击 -------------> https://dromara.gitee.io/fast-request/guide/history.html\"]},\"674\":{\"h\":\"支持变量，IDEA 插件 Fast Request 2023.1.8发布\"},\"675\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。 Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。 它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生\",\"倾听用户的声音，不断提升自我，本次Restful Fast Request更新主要内容如下：\",\"新功能、优化项、修复项\",\"Environment\",\"方法描述截断\",\"Instant 类型解析\",\"Windows 系统 APIs 中目录删除\"]},\"676\":{\"h\":\"1. Environment\"},\"677\":{\"h\":\"1.1 定义\",\"t\":[\"Environment 中可以设置存储一些变量，并且在其他地方使用{{key}}来替换固定值或者魔法值。\",\"可以在以下场景中使用{{key}}\",\"Url\",\"Headers\",\"Path Params\",\"URL Params\",\"Body\",\"JSON\",\"Form URL-Encoded\",\"Multipart\",\"Environment 的 Tab 值取自项目域名配置中的环境，key 需要满足正则表达式^[a-zA-Z_$][a-zA-Z0-9_$]*$\",\"聚焦表格后，可以输入 key 值来快速定位行\"]},\"678\":{\"h\":\"1.2 使用\",\"t\":[\"在 Value 中直接输入{{key}}来替换固定值或者魔法值，当替换后，如果 Environment 中包含此 key 则会绿色高亮。鼠标悬浮 500ms 后可以显示当前的 Environment 值\",\"也可以选中单行，并点图标 E 击从列表从选择。\"]},\"679\":{\"h\":\"1.3 脚本支持\",\"t\":[\"参考 脚本 -> demo -> 设置一个 Environment 变量\"]},\"680\":{\"h\":\"2.方法描述截断\",\"t\":[\"针对方法名过于长，导致显示或者数据保存的时候方法描述过程，可以进行截断设置。例如SearchEveryWhere\"]},\"681\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->这里\",\"看完还不赶紧上号？\"]},\"682\":{\"h\":\"IDEA 插件 Fast Request 2023.1.9 发布\"},\"683\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。 Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。 它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生\",\"倾听用户的声音，不断提升自我，本次Restful Fast Request更新主要内容如下：\",\"新功能、优化项、修复项\",\"快捷添加 Environment 变量\",\"Environment 使用界面增删改支持\",\"Show apis 快捷触发\",\"Response 新增 Size 属性\",\"Api 名称保存优化\",\"输入参数 trim 优化\",\"发送请求移除默认请求头 Accept-Language\",\"curl 拷贝 form-data 格式错误\"]},\"684\":{\"h\":\"1. 快捷添加 Environment 变量\",\"t\":[\"选中一行需要添加到环境变量的点击添加按钮，可以快捷将该变量保存到当前 Env 中\"]},\"685\":{\"h\":\"2. Environment 使用界面增删改支持\"},\"686\":{\"h\":\"3. Show apis 快捷触发\",\"t\":[\"在 Controller 中任意位置右键唤起 Generate，选择Show apis 即可展示当前控制器中的所有 API \"]},\"687\":{\"h\":\"4. Response 新增 Size 属性\"},\"688\":{\"h\":\"5. Api 名称保存优化\",\"t\":[\"详看 Bilibili 视频讲解 -> IDEA 插件 Fast Request 之 API 命名机制 open in new window\"]},\"689\":{\"h\":\"6. 输入参数 trim 优化\",\"t\":[\"常用输入文本位置进行了 trim 处理，优化了细节\",\"若干细节点优化不再一一描述\"]},\"690\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->这里\",\"看完还不赶紧上号？\"]},\"691\":{\"h\":\"Fast Request 2023.2.1-Release\"},\"692\":{\"h\":\"简介\",\"t\":[\"Restful Fast Request是一个类似于 Postman 的 IDEA 插件。它是一个强大的 restful api 工具包插件，可以根据已有的方法帮助您快速、自动生成 url 和 params。 Restful Fast Request = API 调试工具 + API 管理工具 + API 搜索工具。 它有一个漂亮的界面来完成请求、检查服务器响应、存储你的 api 请求和导出 api 请求。插件帮助你在 IDEA 界面内更快更高效得调试你的 API。\",\"Restful Fast Request 为简化 API 调试而生，3 秒调完 Spring 接口不是梦，所以少年，赶紧上号吧\",\"倾听用户的声音，不断提升自我，本次Restful Fast Request更新主要内容如下：\",\"新功能、优化项、修复项\",\"最新域名\",\"UI 简化\",\"api 文档支持保存和打开\",\"bilibili 视频教程直达\",\"自动域名优化\",\"Map 解析优化\",\"show apis 放入到右键菜单\",\"统计页面加入了版本号\",\"url 和 curl 拷贝有 environment 变量的时候 url 没替换变量\",\"curl 以 form-urlencoded 和-d 形式导入解析错乱\"]},\"693\":{\"h\":\"最新域名\",\"t\":[\"申请了域名，叫api buddy，翻译过来是API 伴侣，也挺好记。原老版本功能文档将不再服务！\",\"api-buddy.cn -> 中文站，映射到 gitee pages\",\"api-buddy.com -> 英文站，映射到 github pages\"]},\"694\":{\"h\":\"1.UI 简化\",\"t\":[\"将老版本横向的 3 个组件(method 下拉框,url 输入框,响应下拉框)简化为 1 个,并且移除响应下拉框.增加简捷度\",\"urlInputWithMethod\"]},\"695\":{\"h\":\"2.api 文档支持保存和打开\",\"t\":[\"openDoc\"]},\"696\":{\"h\":\"3.apis 放入到右键菜单\",\"t\":[\"前一个版本在 Controller 中任意位置右键唤起Generate，选择Show apis即可展示当前控制器中的所有 API ，现在直接放入右键减少层级\",\"showApis\"]},\"697\":{\"h\":\"4.统计页面加入了版本号\",\"t\":[\"pluginVersion\",\"还有非常多的细节优化不再一一描述，赶紧升级吧！\"]},\"698\":{\"h\":\"更多详情\",\"t\":[\"请点击 ------------->这里\",\"看完还不赶紧上号？\"]},\"699\":{\"h\":\"Hmily发布2.0.2-RELEASE版本\"},\"700\":{\"h\":\"Hmily 发布 2.0.2-RELEASE 版本\",\"t\":[\"解决 SpringCloud 使用 hystrix 配置线程池策略的问题。\",\"新增对 springcloud 内嵌事务调用的问题。\",\"新增 Hmily 负载均衡策略。\",\"其他 bug 的修护，与代码的优化。\",\"去除不必须的第三方 jar 包。\",\"零侵入方式的引入。\"]},\"701\":{\"h\":\"Hmily 对现在流行 RPC 框架以及 Spring 的支持情况。\",\"t\":[\"dubbo 2.7.0 以下所有版本。\",\"Springcloud Dalston 以上版本，包括支持现在的 Finchley 与 Greenwich\",\"Motan 所有版本。\",\"3.0 以上所有 Spring 版本。\"]},\"702\":{\"h\":\"Hmily 在 2.0.2 版本对使用者 RPC 集群时候负载均衡策略。\",\"t\":[\"hmily 提供了自己实现的负载均衡策略，只是针对加了@Hmily 的接口\",\"dubbo 集群配置,配置负载方式为：loadbalance=\\\"hmily\\\"\",\" <dubbo:reference timeout=\\\"50000\\\" interface=\\\"org.dromara.hmily.demo.dubbo.account.api.service.AccountService\\\" id=\\\"accountService\\\" retries=\\\"0\\\" check=\\\"false\\\" actives=\\\"20\\\" loadbalance=\\\"hmily\\\"/> \",\"Springcloud 在调用方的 yml 配置文件中新增：\",\"hmily ： ribbon: rule enabled : true \"]},\"703\":{\"h\":\"Hmily 的具体使用文档：\",\"t\":[\"官网文档 ：https://dromara.org/website/zh-cn/docs/hmily/index.html\",\"github 地址: https://github.com/yu199195/hmily\",\"gitee 地址： https://gitee.com/dromara/hmily\",\"欢迎大家 star fork ，提供优秀的代码与建议。\"]},\"704\":{\"h\":\"时隔一年，dromara团队发布全新架构Hmily分布式事务的2.1.1版本\",\"t\":[\"感谢朋友们一路以来的支持，让大家久等了。在这一个版本中，我们团队重构了整个项目，合理的划分功能模块，新增配置中心，调整底层存储结构，解决疑难 bug，以及其他新功能的支持，也吸收了更多开源社区的优秀人才的加入。\"]},\"705\":{\"h\":\"架构全景图\",\"t\":[\"架构全景图\"]},\"706\":{\"h\":\"功能\",\"t\":[\"高可靠性 ：支持分布式场景下，事务异常回滚，超时异常恢复，防止事务悬挂。\",\"易用性 ：提供零侵入性式的 Spring-Boot, Spring-Namespace 快速与业务系统集成。\",\"高性能 ：去中心化设计，与业务系统完全融合，天然支持集群部署。\",\"可观测性 ：Metrics 多项指标性能监控，以及 admin 管理后台 UI 展示。\",\"多种 RPC ：支持 Dubbo, SpringCloud,Montan ,sofa-rpc 等知名 RPC 框架。\",\"日志存储 ：支持 mysql, oracle, mongodb, redis, zookeeper 等方式。\",\"复杂场景 ：支持 RPC 嵌套调用事务。\"]},\"707\":{\"h\":\"重构部分\",\"t\":[\"在模块划分上：\",\"抽离出开箱即用的 SPI 自定义模块。\",\"定义事务日志多种存储方式的 SPI 模块。\",\"定义事务日志多种序列化方式的 SPI 模块。\",\"新增配置中心，支持各种主流的配置中心（nacos，apollo,zookeeper 等），并支持配置的动态刷新。\",\"新增 metrics 模块，用来监控运行时候的各种信息。\",\"抽离出核心的事务执行模块。\",\"抽离出多种 RPC 支持模块。\",\"抽离出 spring 与 spring boot 支持模块。\",\"在依赖包版本上：\",\"guava 升级到 29.0\",\"curator 升级到 5.1.0\",\"在代码质量上：\",\"严格的 check-style 代码检查，秉承优雅，简单易懂原则（talk is cheap ,show you code）。\",\"在开放性上：\",\"社区奉行简单，快乐，和谐基本原则\",\"在目标上：\",\"打造一款高可用，高性能，简单易用金融级的分布式事务解决方案。\"]},\"708\":{\"h\":\"解决疑难 bug：\",\"t\":[\"dubbo框架不支持注解方式的使用（spring-boot-starter-dubbo)。\",\"motan框架不支持注解方式的使用。\",\"spring-cloud用户如果使用 feign 与 hystrix 整合 hmily 时候的线程切换问题。\",\"极端情况下事务日志序列化异常。\",\"try 阶段超时异常，导致事务悬挂 bug。\",\"confirm 与 cancel 阶段异常时候，事务未能正确恢复 bug。\",\"在事务日志存储上，支持同步与异步 2 种模式，供用户选择。\"]},\"709\":{\"h\":\"用户使用与升级指南\",\"t\":[\"对于 hmily 用户来说，只需三个步骤，即可解决 RPC 服务调用之间的柔性事务\",\"引用 hmily 对各种 rpc 支持的 jar 包。\",\"添加 hmily 配置。\",\"在 rpc 接口方法上添加 @Hmily 注解。\",\"依赖的变更\",\"用户依赖的方式没有更改，只需要将版本升级到 2.1.0。下面举 dubbo 微服务列子\",\"dubbo rpc 微服务\",\"dubbo 接口服务依赖\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-annotation</artifactId> <version>2.1.0</version> </dependency> \",\"dubbo 服务提供者依赖（<2.7）\",\" <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-dubbo</artifactId> <version>2.1.0</version> </dependency> or <dependency> <groupId>org.dromara</groupId> <artifactId>hmily-spring-boot-starter-dubbo</artifactId> <version>2.1.0</version> </dependency> \",\"hmily 配置的变更\",\"在新版 2.1.0 中，新增了 hmily-config 模块，支持本地与注册中心模式。用户首先需要在项目resouce文件下新建一个名称为hmily.yml的文件。默认路径为项目的 resource目录下，也可以使用 -Dhmily.conf 指定，也可以把配置放在 user.dir 目录下。优先级别 -Dhmily.conf > user.dir >resource。文件格式如下（一部分，以下是配置成本地模式):\",\" server: configMode: local appName: account-dubbo # 如果server.configMode eq local 的时候才会读取到这里的配置信息. config: appName: account-dubbo serializer: kryo contextTransmittalMode: threadLocal scheduledThreadMax: 16 scheduledRecoveryDelay: 60 scheduledCleanDelay: 60 scheduledPhyDeletedDelay: 600 scheduledInitDelay: 30 recoverDelayTime: 60 cleanDelayTime: 180 limit: 200 retryMax: 10 bufferSize: 8192 consumerThreads: 16 asyncRepository: true autoSql: true phyDeleted: true storeDays: 3 repository: mysql repository: database: driverClassName: com.mysql.jdbc.Driver url : jdbc:mysql://127.0.0.1:3306/hmily?useUnicode=true&characterEncoding=utf8 username: root password: maxActive: 20 minIdle: 10 connectionTimeout: 30000 idleTimeout: 600000 maxLifetime: 1800000 \",\"如果你想将配置文件放在Nacos配置中心：\",\"第一步：\",\"hmily: server: configMode: nacos appName: xxxxx # 如果server.configMode eq local 的时候才会读取到这里的配置信息. remote: nacos: server: 192.168.3.22:8848 dataId: hmily.properties group: DEFAULT_GROUP timeoutMs: 6000 fileExtension: yml passive: true \",\"第二步：将 hmily 的配置，放在 nacos 配置中心上\",\"如果你想将配置文件放在Apollo配置中心：\",\"第一步:\",\"hmily: server: configMode: apollo appName: xxxx # 如果server.configMode eq local 的时候才会读取到这里的配置信息. remote: apollo: appId: hmily-xxxxx configService: http://192.168.3.22:8080 namespace: byin_hmily secret: fileExtension: yml passive: true env: dev meta: http://192.168.3.22:8080 \",\"第二步：将 hmily 的配置，放在 apollo 配置中心上\",\"还有其他的配置方式以及配置内容的详解，请参考：https://dromara.org/zh-cn/docs/hmily/config.html\",\"注解方式的使用的变更\",\"在之前的版本中，rpc 接口与实现都只需要添加 @Hmily 注解, 现在需要进行变更，在 rpc 接口方法上是添加 @Hmily,用来标识这是一个 hmily 分布式事务的接口方法， 在接口的方法实现上则需要添加 @HmilyTCC，然后指定 confirm 与 cancel方法名称.\",\"举例（dubbo 中 say 方法需要参与分布式事务):\",\"public interface HelloService { @Hmily void say(String hello); } public class HelloServiceImpl implements HelloService { @HmilyTCC(confirmMethod = \\\"sayConfrim\\\", cancelMethod = \\\"sayCancel\\\") public void say(String hello) { System.out.println(\\\"hello world\\\"); } public void sayConfrim(String hello) { System.out.println(\\\" confirm hello world\\\"); } public void sayCancel(String hello) { System.out.println(\\\" cancel hello world\\\"); } } \",\"举例(springcloud 中 say 方法需要参与分布式事务):\",\"spring-cloud 服务调用方 FeignClient 中\",\"@FeignClient(value = \\\"helle-service\\\") public interface HelloService { @Hmily @RequestMapping(\\\"/helle-service/sayHello\\\") void say(String hello); } \",\"spring-cloud 服务提供方\",\"@RestController public class HelloController { private final HelloService helloService ; @Autowired public AccountController(HelloService helloService) { this.helloService= helloService; } @RequestMapping(\\\"/sayHello\\\") public void payment(String hello) { return helloService.say(hello); } } public interface HelloService { void say(String hello); } public class HelloServiceImpl implements HelloService { @HmilyTCC(confirmMethod = \\\"sayConfrim\\\", cancelMethod = \\\"sayCancel\\\") public void say(String hello) { System.out.println(\\\"hello world\\\"); } public void sayConfrim(String hello) { System.out.println(\\\" confirm hello world\\\"); } public void sayCancel(String hello) { System.out.println(\\\" cancel hello world\\\"); } } \",\"事务日志存储结构的更改\",\"在使用上，用户使用或者升级不用关心，框架会默认初始化好。\"]},\"710\":{\"h\":\"下一个版本\",\"t\":[\"因为调整了架构，在其他模式的支持上将会变得更加容易，在下一个版本，将会发布 TAC 模式（try-auto-cancel）使用此模式，将大大简化框架的使用程度，开发者不需要关心 confirm 以及 cancel 方法的开发，对老系统的改造提供了更好的兼容性，不用担心额外的开发任务，一切就交给 hmily 吧。\",\"将对 brpc 用户进行支持。\",\"将对 tars-rpc 用户进行支持。\"]},\"711\":{\"h\":\"社区共建\",\"t\":[\"我们秉承和谐快乐，代码至上 的原则，如果你有想法，愿意和我们一起成长，一起贡献，快来加入我们吧！\",\"github：https://github.com/dromara/hmily\",\"gitee：https://gitee.com/dromara/hmily\",\"qq 群: 162614487\"]},\"712\":{\"h\":\"Hmily分布式事务重启月度报告\",\"t\":[\"Hmily 是一款高性能，高可靠，易使用的柔性分布式事务解决方案，目前提供了对 dubbo，spring-cloud，motan，grpc 等 rpc 框架的支持，在易用性上提供零侵入性式的 Spring-Boot, Spring-Namespace 快速集成，目标是打造金融级的一体系分布式事务解决方案。\"]},\"713\":{\"h\":\"调整 Hmily 架构，更合理的模块划分\",\"t\":[\"全景图：\",\"全景图\",\"架构调整：\",\"抽离核心执行模块，支持多种事务模式以及混合使用（TCC 模式，TAC 模式）\",\"核心模块去除对 spring 的依赖\",\"定义多种 SPI 接口的实现\",\"新增 hmily-rpc : 聚合多种 rpc 框架的支持\",\"新增 hmily-spi : hmily 框架自定义 spi 机制实现\",\"新增 hmily-bom : 解决版本依赖管理冲突的问题\",\"新增 hmily-metrics : 监控 JVM，线程，事务运行状态，耗时等信息\",\"新增 hmily-tcc : tcc 模式的核心实现\",\"新增 hmily-tac : tac 模式的核心实现\",\"SPI 模块划分：\",\"新增 hmily-repository: 事务日志存储模块，支持（mysql，oracle，postgresql，sqlserver，zookeeper，redis，mongodb，file）\",\"新增 hmily-serializer: 事务日志序列化模块, 支持 （hessian，jdk，kryo，protobuf）\",\"新增 hmily-config：配置模块，支持（本地模式，zookeeper，nacos，apollo，etcd）\",\"新增 hmily-tac-sqlparser ：tac 模式下，sql 解析模块\"]},\"714\":{\"h\":\"梳理 Hmily 社区 issue，解决 bug。\",\"t\":[\"hmily-bug\",\"如上图：在社区中，主要是梳理和解决之前社区反馈的问题，以及社区合作进行新的开发。\",\"解决 bug（列举几个）：\",\"dubbo框架不支持注解方式的使用（spring-boot-starter-dubbo）\",\"motan框架不支持注解方式的使用\",\"spring-cloud用户如果使用 feign 与 hystrix 整合 hmily 时候的异常问题\",\"事务日志序列化异常\",\"超时异常事务悬挂 bug\",\"事务定时恢复 bug\",\"社区完成功能（列举几个）：\",\"build：新增 travis-ci 功能\",\"事务日志支持：oracle, postgresql,sqlsever,mongo,zookeeper,file,redis\",\"配置模块：新增 apollo,etcd,nacos 配置中心支持\",\"demo：新增 motan-rpc 方式使用 hmily 分布式事务 demo\"]},\"715\":{\"h\":\"社区共建\",\"t\":[\"社区奉行简单，快乐，优雅，和谐基本原则。\",\"代码准则：代码遵循 hmily-checkstyle 标准，也有很多灵活自由的空间。（talk is cheap ,show you code）\",\"开放准则：希望在这里每个人都有好的思想和观点，大家一起讨论，反复 review 代码，思考解决 bug，快乐成长，绝不搞一言堂。\"]},\"716\":{\"h\":\"最近\",\"t\":[\"会发布最新架构的 hmily-2.1.0 版本（只会支持 TCC 模式）\",\"配置模块\",\"配置动态刷新功能，支持所有的配置中心\",\"TAC 模式:\",\"SQL-parser: 正在接入apache-shardingsphere,apache-calcite\",\"SQL-revert：正在开发\"]},\"717\":{\"h\":\"大约在冬季\",\"t\":[\"很高兴来了这里季节，在这个时间点，会发布hmily-2.2.0版本，这个版本将完全支持TAC,TCC模式。TAC(transaction auto rollback) ：有了这个模式，用户再也不用担心像 TCC 那样去写反向的 cancel 方法了。大大减少了使用成本以及学习成本。TCC: 稳定性，可靠性得到大大加强，彻底解决事务悬挂问题。\"]},\"718\":{\"h\":\"以后的以后\",\"t\":[\"更多 RPC 框架的支持：brpc 等等。\",\"支持 XA 模式。\",\"......这里空起来，很多多的规划，希望你来参与建设。\",\"github：https://github.com/dromara/hmily\",\"gitee：https://github.com/shuaiqiyu/hmily\",\"qq 群: 162614487\"]},\"719\":{\"h\":\"Hutool-5.8.0.M1 发布，尝试里程碑发布\",\"t\":[\"Hutool 是一个小而全的 Java 工具类库，提供优雅、高效和便捷的工具方法。\"]},\"720\":{\"h\":\"Hutool 是什么\",\"t\":[\"架构全景图\",\"本来这个版本应该是 5.7.23 的，可惜用户提了一些 issue，这些问题的解决必须修改原有代码结构：\",\"如 MongoDB 客户端封装，由于其驱动本身做了不兼容修改，包装的工具类不得不进行修改。\",\"涉及到 Bean 拷贝的代码部分（BeanCopier），由于一个参数失效，以为只是简单的一个 bug，后来发现是整个设计有问题……崩溃程度可想而知，肝了两个晚上重构了这部分代码。\",\"修改代码的同时才发现还有很多部分的设计有问题，顺便做了小重构。\",\"为了解决每次大版本升级的可能带来的对老用户的影响，此次版本采用里程碑方式发布，版本为 M1（感觉给用户送了颗 CPU），也是解决 Hutool 每次“激进”升级的问题（毕竟年龄大了，要稳重）\",\"希望购买代替捐赠，如果你希望支持下 Hutool，可以去 Hutool 主页点->击进入周边商店购买 Hutool 周边来支持 Hutool 哦，这比捐赠实惠的多（毕竟捐赠者我不知道如何道谢，很有道德负担……）\",\"鸣谢一下此次版本一起讨论和一起解决大量 issue 的 Hutool 几位成员： @阿超 @Cherryrum @Husky\"]},\"721\":{\"h\":\"5.8.0.M1\"},\"722\":{\"h\":\"❌ 不兼容特性\",\"t\":[\"• 【db 】 【不向下兼容 】增加 MongoDB4.x 支持返回 MongoClient 变更（pr#568@Gitee） • 【json 】 【可能兼容问题】修改 JSONObject 结构，继承自 MapWrapper • 【core 】 【可能兼容问题】BeanCopier 重构，新建 XXXCopier，删除 XXXValueProvider • 【core 】 【可能兼容问题】URLEncoder 废弃，URLEncoderUtil 使用 RFC3986 • 【core 】 【可能兼容问题】Base32 分离编码和解码，以便减少数据加载，支持 Hex 模式 • 【core 】 【可能兼容问题】Base58 分离编码和解码 • 【core 】 【可能兼容问题】Base62 分离编码和解码，增加 inverted 模式支持 • 【core 】 【兼容问题 】PunyCode 参数由 String 改为 Charsequence • 【cron 】 【可能兼容问题】SimpleValueParser 改名为 AbsValueParser，改为 abstract • 【poi 】 【可能兼容问题】ExcelUtil.getBigWriter 返回值改为 BigExcelWriter • 【core 】 【可能兼容问题】Opt.ofEmptyAble 参数由 List 改为 Collection 子类（pr#580@Gitee） • 【json 】 【可能兼容问题】JSON 转 Bean 时，使用 JSON 本身的相关设置，而非默认（issue#2212@Github） • 【json 】 【可能兼容问题】JSONConfig 中 isOrder 废弃，默认全部有序\"]},\"723\":{\"h\":\"🐣 新特性\",\"t\":[\"• 【http 】 HttpRequest.form 采用 TableMap 方式（issue#I4W427@Gitee） • 【core 】 AnnotationUtil 增加 getAnnotationAlias 方法（pr#554@Gitee） • 【core 】 FileUtil.extName 增加对 tar.gz 特殊处理（issue#I4W5FS@Gitee） • 【crypto 】 增加 XXTEA 实现（issue#I4WH2X@Gitee） • 【core 】 增加 Table 实现（issue#2179@Github） • 【core 】 增加 UniqueKeySet（issue#I4WUWR@Gitee） • 【core 】 阿拉伯数字转换成中文对发票票面金额转换的扩展（pr#570@Gitee） • 【core 】 ArrayUtil 增加 replace 方法（pr#570@Gitee） • 【core 】 CsvReadConfig 增加自定义标题行行号（issue#2180@Github） • 【core 】 FileAppender 优化初始 List 大小（pr#2197@Github） • 【core 】 Base32 增加 pad 支持（pr#2195@Github） • 【core 】 Dict 增加 setFields 方法（pr#578@Gitee） • 【db 】 新加 db.meta 的索引相关接口（pr#563@Gitee） • 【db 】 Oracle 中 Column#typeName 后的长度去掉（pr#563@Gitee） • 【poi 】 优化 ExcelReader，采用只读模式（pr#2204@Gitee） • 【poi 】 优化 ExcelBase，将 alias 放入 • 【poi 】 优化 ExcelBase，将 alias 放入 • 【core 】 改进 StrUtil#startWith、endWith 性能 • 【cron 】 增加 CronPatternParser、MatcherTable • 【http 】 GlobalHeaders 增加系统属性 allowUnsafeServerCertChange、allowUnsafeRenegotiation • 【http 】 UserAgentUtil 解析，增加 MiUI/XiaoMi 浏览器判断逻辑（pr#581@Gitee） • 【core 】 FileAppender 添加锁构造（pr#2211@Github） • 【poi 】 ExcelReader 增加构造（pr#2213@Github） • 【core 】 MapUtil 提供 change 函数，EnumUtil 提供 getBy 函数，通过 lambda 进行枚举字段映射（pr#583@Gitee） • 【core 】 CompareUtil 增加 comparingIndexed（pr#585@Gitee） • 【db 】 DruidDataSource 构建时支持自定义参数（issue#I4ZKCW@Gitee） • 【poi 】 ExcelWriter 增加 addImg 重载（issue#2218@Github） • 【bloomFilter】 增加 FuncFilter • 【http 】 增加 GlobalInterceptor（issue#2217）\"]},\"724\":{\"h\":\"🐞Bug 修复\",\"t\":[\"• 【core 】 修复 ObjectUtil.hasNull 传入 null 返回 true 的问题（pr#555@Gitee） • 【core 】 修复 NumberConverter 对数字转换的问题（issue#I4WPF4@Gitee） • 【core 】 修复 ReflectUtil.getMethods 获取接口方法问题（issue#I4WUWR@Gitee） • 【core 】 修复 NamingCase 中大写转换问题（pr#572@Gitee） • 【http 】 修复 GET 重定向时，携带参数问题（issue#2189@Github） • 【core 】 修复 FileUtil、FileCopier 相对路径获取父路径错误问题（pr#2188@Github） • 【core 】 修复 CopyOptions 中 fieldNameEditor 无效问题（issue#2202@Github） • 【json 】 修复 JSON 对 Map.Entry 的解析问题 • 【core 】 修复 MapConverter 中 map 与 map 转换兼容问题 • 【poi 】 解决 sax 读取时，POI-5.2.x 兼容性问题 • 【core 】 修复判断两段时间区间交集问题（pr#2210@Github） • 【http 】 修复标签误删问题（issue#I4Z7BV@Gitee） • 【core 】 修复 Win 下文件名带*问题（pr#584@Gitee） • 【core 】 FileUtil.getMimeType 增加 rar、7z 支持（issue#I4ZBN0@Gitee） • 【json 】 JSON 修复 transient 设置无效问题（issue#2212@Github） • 【core 】 修复 IterUtil.getElementType 获取结果为 null 的问题（issue#2222@Github） • 【core 】 修复农历转公历在闰月时错误（issue#I4ZSGJ@Gitee）\"]},\"725\":{\"h\":\"社区共建\",\"t\":[\"我们秉承和谐快乐，代码至上 的原则，如果你有想法，愿意和我们一起成长，一起贡献，快来加入我们吧！\",\"github：https://github.com/dromara/hutool\",\"gitee：https://gitee.com/dromara/hutool\"]},\"726\":{\"h\":\"sms4j V2.0.1版本正式发布\"},\"727\":{\"h\":\"sms4j V2.0.1 版本正式发布\",\"t\":[\"该版本中包含了一些重要的更新和改进，以提高框架的性能、可靠性和用户体验。在这里，我们将详细介绍这些更新内容。\",\"数据库刷新和读取的方法进行了优化\",\"为了提高系统的性能，我们对数据库刷新和读取的方法进行了优化。我们优化了查询和更新操作的算法和实现方式，从而提高了系统的响应速度和处理效率。现在，您可以更快速地读取和更新数据库中的数据，使您的业务处理更加高效。\",\"添加了一个用于刷新数据库配置的方法\",\"我们添加了一个新的方法，用于刷新数据库配置。这个新方法可以让您更灵活地管理数据库配置，以满足您的不同业务需求。现在，您可以通过这个新方法来刷新和更新数据库配置，从而使您的业务运行更加稳定和高效。\",\"重构容联云国内短信实现，使用 Open Api 替代 SDK\",\"我们对容联云国内短信实现进行了重构，使用了 Open API 替代了 SDK。这样做的好处是，您可以更快速地发送短信，从而提高系统的响应速度和处理效率。此外，Open API 还提供了更加稳定和可靠的短信发送服务，使您的业务处理更加可靠。\",\"重构阿里云国内短信实现，使用 Open Api 替代 SDK\",\"我们对阿里云国内短信实现进行了重构，使用了 Open API 替代了 SDK。这样做的好处是，您可以更加稳定地发送短信，从而提高了系统的稳定性和用户体验。同时，Open API 还提供了更加灵活和丰富的功能，满足不同业务的需求。\",\"重构腾讯云国内短信实现，使用 Open Api 替代 SDK\",\"我们对腾讯云国内短信实现进行了重构，使用了 Open API 替代了 SDK。这样做的好处是，您可以更快速地发送短信，提高了系统的响应速度和处理效率。同时，Open API 还提供了更多的功能和服务，使您的业务处理更加高效和便捷。\",\"抽取公共配置信息，支持 Builder 模式\",\"我们抽取了公共配置信息，并支持 Builder 模式，以便您更灵活地管理系统配置。现在，您可以更加方便地管理和配置系统，以满足您不同业务的需求。同时，Builder 模式还提供了更加直观和灵活的配置方式，使您可以更快速地配置和管理系统。\",\"优化部分细节处理\",\"在本次更新中，我们还对系统的部分细节进行了优化处理。我们修复了一些小 bug，以提高系统的稳定性和可靠性。同时，我们还改进了一些界面和操作方式，使系统更加易用和便捷。\",\"数据库名称不再强制要求分类配置\",\"在之前的版本中，数据库的名称必须按照一定的规则进行分类配置。现在，我们放宽了这个要求，使您可以更加灵活地管理和配置数据库。这样做的好处是，您可以更加方便地进行数据库的管理和维护，从而提高系统的可靠性和稳定性。\",\"添加了自定义的配置形式，配置更加灵活\",\"在本次更新中，我们还添加了一种新的配置方式，使您可以更加灵活地管理和配置系统。您可以根据自己的需求和业务场景，自定义配置内容和形式，以便更好地满足您的业务需求。\",\"以下我们看一个简单的新的配置方式的示例：\",\"//unisms短信差异化配置 public void setConfig(){ //以下空字符串仅为演示使用，实际项目可以通过各种途径获取相应的数据 UniConfig uni = UniConfig.builder() .accessKeyId(\\\"\\\") .templateId(\\\"\\\") .templateName(\\\"\\\") .signature(\\\"\\\") .build(); SupplierFactory.setUniConfig(uni); } \",\"更多的功能和详细的文档，请查看官方文档！\",\"如果我们的项目对您产生了帮助，请为我们点上一颗 star\",\"官方网站 https://wind.kim\",\"gitee 仓库 https://gitee.com/dromara/sms4j\"]},\"728\":{\"h\":\"sms4j 2.0.2版本发布\"},\"729\":{\"h\":\"sms4j 2.0.2 版本发布\",\"t\":[\"最新版本的 sms4j 仓库在 Gitee 上的 star 突破了 500，我们非常感谢社区用户对该项目的支持和认可。\",\"之前有人给我们提出引入的 SDK 和依赖过多，导致项目有些重量化了，我们现在正在逐步的进行优化\",\"以下是 sms4j 项目的一些重要更新：\"]},\"730\":{\"h\":\"项目结构优化：\",\"t\":[\"我们对项目结构进行了优化，让它更加轻量级，易于使用和维护。\"]},\"731\":{\"h\":\"去除腾讯 SDK 依赖：\",\"t\":[\"我们已经去除了腾讯 SDK 的依赖，这使得项目更加轻量级，并提高了整体性能。\"]},\"732\":{\"h\":\"去除 uni-sms 的 SDK 依赖：\",\"t\":[\"我们还去除了 uni-sms 的 SDK 依赖，这将使得 sms4j 更加灵活和可扩展。\"]},\"733\":{\"h\":\"修复自定义配置抛出异常问题：\",\"t\":[\"我们已经修复了自定义配置抛出异常的问题，确保 sms4j 的可靠性。\"]},\"734\":{\"h\":\"优化腾讯云短信实现：\",\"t\":[\"我们对腾讯云短信实现进行了优化，提高了其稳定性和性能。\"]},\"735\":{\"h\":\"修复 SQL 配置问题：\",\"t\":[\"我们修复了 SQL 配置下概率性无法获取数据库链接问题，同时不再强制要求数据库名分开配置。\"]},\"736\":{\"h\":\"已知问题：\",\"t\":[\"我们注意到阿里云短信因时序与阿里云服务器时序无法完全一致，在调用时会偶发性出现签名校验失败的问题，我们正在解决这个问题。\",\"以上是我们最新版本 sms4j 的更新日志，希望这些改进能够提高 sms4j 的稳定性和性能，并为您的开发工作带来便利。\",\"如果您觉得我们的项目为您带来了帮助，请为我们点上一颗 star，您的支持是我们前进的最大动力！\",\"如果您有时间并且对开源感兴趣，也欢迎您加入到我们之中！\"]},\"737\":{\"h\":\"sms4j 2.0 全新来袭\"},\"738\":{\"h\":\"sms4j 2.0 全新来袭\",\"t\":[\"即 sms-aggregation 成功加入 dromara 之后，很多人向我们反应了项目名称太长不好记，也太绕口， 在经过了有奖名称征集之后，我们定名为 sms4j 并伴随着大版本更新一同发布。这次更新不仅仅改变了项目名称，启用了新的 logo，还调整了项目结构，加入了更多新特性，下面我们一起来简单的看一下吧！\"]},\"739\":{\"h\":\"首先是 maven 的变化\",\"t\":[\"老版本中，groupId 为作者的个人网站，同时也是项目的官网，在新的版本中统一改为了 Dromara 的地址\",\"<dependency> <groupId>org.dromara.sms4j</groupId> <artifactId>sms4j-spring-boot-starter</artifactId> <version> 最新版本请查看gitee或官网 </version> </dependency> \"]},\"740\":{\"h\":\"其次是功能的调整\",\"t\":[\"在 1.X 版本中，（前名称 sms-aggregatio）只支持单家运营商的使用，不能同时使用多家厂商，对于厂商的切换也只能依靠配置文件的改变，可以说是功能及其单一，但是在新版本中，添加了多厂商支持和并用，同时配置方式也发生了变化\",\"sms: alibaba: #阿里云的accessKey accessKeyId: 您的accessKey #阿里云的accessKeySecret accessKeySecret: 您的accessKeySecret #短信签名 signature: 测试签名 #模板ID 用于发送固定模板短信使用 templateId: SMS_215125134 #模板变量 上述模板的变量 templateName: code #请求地址 默认为dysmsapi.aliyuncs.com 如无特殊改变可以不用设置 requestUrl: dysmsapi.aliyuncs.com huawei: #华为短信appKey appKey: 5N6fvXXXX920HaWhVXXXXXX7fYa #华为短信appSecret app-secret: Wujt7EYzZTBXXXXXXEhSP6XXXX #短信签名 signature: 华为短信测试 #通道号 sender: 8823040504797 #模板ID 如果使用自定义模板发送方法可不设定 template-id: acXXXXXXXXc274b2a8263479b954c1ab5 #华为回调地址，如不需要可不设置或为空 statusCallBack: #华为分配的app请求地址 url: https://XXXXX.cn-north-4.XXXXXXXX.com:443 \",\"@RestController @RequestMapping(\\\"/test/\\\") public class DemoController { // 测试发送固定模板短信 @RequestMapping(\\\"/\\\") public void doLogin(String username, String password) { //阿里云向此手机号发送短信 SmsFactory.createSmsBlend(SupplierType.ALIBABA).sendMessage(\\\"18888888888\\\",\\\"123456\\\"); //华为短信向此手机号发送短信 SmsFactory.createSmsBlend(SupplierType.HUAWEI).sendMessage(\\\"16666666666\\\",\\\"000000\\\"); } } \",\"在以上仅仅只是示例，在实际的实用中可以同时支持更多的厂商。\"]},\"741\":{\"h\":\"其他的方面\",\"t\":[\"sms4j 还添加了数据库配置的支持，开发者可以通过在数据库添加配置来替代配置文件，做到动态切换厂商\",\"sms: # 告诉框架要读取的厂商配置来源，此处为枚举形式 config-type: sql_config sql: # JDBC驱动 driver-class-name: com.mysql.cj.jdbc.Driver # 要链接的数据库名称 database-name: dev # 连接字符串 url: jdbc:mysql://localhost:3306 # 数据库账号 username: root # 数据库密码 password: 123456 # 配置所在表名 table-name: config_info # 厂商名称存储字段 supplier-field-name: user_name # 配置所在字段 config-name: pay_psw # 配置启用标识字段 start-name: state # 配置启用值 此处意思为 当字段state值为1时，则启用这个配置 is-start: 1 \",\"更多的新特性和功能不在这里一 一介绍了，具体的可以查看官方文档或者 gitee 仓库\",\"官方文档https://wind.kim/\",\"gitee 仓库https://gitee.com/dromara/sms4j\",\"您的支持是我们前进的动力，如果我们的项目对您产生了帮助或者您觉得还不错，请为我们点上一颗 star\"]},\"742\":{\"h\":\"SMS4J 2.1.0版本正式发布！\",\"t\":[\"📣 爷爷！你关注的短信框架终于更新啦！\"]},\"743\":{\"h\":\"🎊SMS4J 2.1.0 版本正式发布！🎊\",\"t\":[\"本次更新带来了诸多的新特性，也修复了先前版本中的诸多问题，接下来让我们一起来看一下本次更新的内容吧！\"]},\"744\":{\"h\":\"🎉 新特性 🎉\"},\"745\":{\"h\":\"新增天翼云短信支持\",\"t\":[\"V 2.1.0 版本再添新支持厂商，天翼云短信，在新版本中，小伙伴们可以使用天翼云短信啦\"]},\"746\":{\"h\":\"添加 solon 框架支持\",\"t\":[\"solon 是一个非常优秀的国产框架，作者也是一个很强大的男人（单挑 spring 的男人），目前 solon 框架已经得到了多家军工企业的青睐，没准未来会与 spring 平分天下哦！在这里也感谢 solon 的作者对于我们的支持。\"]},\"747\":{\"h\":\"SupplierFactory 添加一个通用的 set 方法\",\"t\":[\"对于想要传值来构建不同实现类型的小伙伴来说，每个厂商一个 set 方法用起来不太方便，这里我们整合了一个完整的 set 方法，可以实现所有厂商的 set\"]},\"748\":{\"h\":\"添加负载均衡工具\",\"t\":[\"在本次的版本中添加了一个实验性的新特性，短信负载均衡，当你有多个厂商同时存在，并且不关注本次短信使用哪个厂商发送时，可以使用该工具，工具采用平滑加权负载均衡算法实现，可以根据设置的权重，自动选择托管中的短信服务\"]},\"749\":{\"h\":\"添加了一个静态方法用于获取 LinkedHashMap 实例\",\"t\":[\"很多人并不常用 LinkedHashMap，为了方便使用和记忆，我们添加了用于获取它的实例，位于org.dromara.sms4j.comm.utils.SmsUtil类中的getNewMap()\"]},\"750\":{\"h\":\"🔧 修复 🔧\",\"t\":[\"修复云片短信未能如期创建实现对象的问题 在先前的版本中我们发现，云片短信并未能如期的创建一个完整的实现，我们在这个版本中对其进行了修复\",\"修复亿美短信返回值异常 在 2.0.2 版本中，亿美短信的返回值在某些情况下存在异常（比如请求的 url 错误时），在这个版本中我们对此进行了修复\",\"修复阿里云短信返回值异常 在先前的版本中，阿里云短信的返回值未能如期的通过 SmsResponse 对象返回，而是打印在了 log 中\",\"先前版本中短信拦截未生效\",\"短信限制功能的拦截一直过度依赖于 Spring 的 AOP 实现，一旦开启就是全局的拦截，无法做到精准的厂商级别拦截，在 2.1.0 版本中我们对于短信限制功能进行了重构，使其能够精准的分厂商进行短信拦截\"]},\"751\":{\"h\":\"📀 优化 📀\",\"t\":[\"优化了厂商短信的实现\",\"优化 javax 加密包使用\",\"部分短信发送的返回值添加了非空判断\",\"优化阿里云实现的部分代码\",\"优化 SmsFactory 内部实现，获取更好的性能和拓展性\"]},\"752\":{\"h\":\"这年头，坐上火箭的不光神州，还有sms4j的版本\"},\"753\":{\"h\":\"sms4j 2.2.0 版本正式发布\",\"t\":[\"在拖延了 NNNNNN 多久之后，sms4j 的 2.2.0 版本终于发布了！不过嘛，作为一个有良心的作者，怎么能让大家白等呢！\",\"这次又是给大家带来了诸多的干货！\"]},\"754\":{\"h\":\"新特性\",\"t\":[\"JAVA SE 适配正式支持\",\"网易云短信接入\",\"redis 支持接口化处理\",\"插件能力发布\"]},\"755\":{\"h\":\"BUG 修复\",\"t\":[\"阿里云短信发送会不定期报错\",\"数据库配置下不填写数据库名称会报错的问题\",\"去除多余的注解，该注解曾导致项目的 spring 线程池失效\",\"修复腾讯云 json 解析问题\",\"修复 sql 配置方式 json 解析问题\"]},\"756\":{\"h\":\"优化\",\"t\":[\"返回信息优化\"]},\"757\":{\"h\":\"JAVA SE 适配\",\"t\":[\"在发部了这么多版本之后，承诺过的 java se 适配终于添加了，现在 java se 项目可以直接进行使用了\"]},\"758\":{\"h\":\"maven 依赖\",\"t\":[\"<dependency> <groupId>org.dromara.sms4j</groupId> <artifactId>sms4j-javase-plugin</artifactId> <version> version </version> </dependency> \"]},\"759\":{\"h\":\"配置文件\",\"t\":[\"sms: alibaba: access-key-id: 您的accessKey access-key-secret: 您的accessKeySecret template-id: 您的templateId template-name: 您的templateName signature: 您的短信签名 # 其他配置…… \"]},\"760\":{\"h\":\"读取配置\",\"t\":[\"SEInitializer.initializer().fromYaml(); \"]},\"761\":{\"h\":\"发送短信\",\"t\":[\"SmsFactory.createSmsBlend(SupplierType.ALIBABA).sendMessage(\\\"手机号码\\\", \\\"短信\\\"); \",\"原生 SE 使用支持多种的配置，其他的使用方法请参考 官方文档\"]},\"762\":{\"h\":\"网易云短信接入\",\"t\":[\"在仓库的 issues 中，我们收到了很多的厂商接入建议，我们也在逐步的从中选取厂商进行接入（会优先接入新用户量相对较大的），本次网易云短信来自贡献者 **阿丢丢 ** ,在这里感谢大家对于我们的支持，也欢迎大家参与到我们之中\"]},\"763\":{\"h\":\"redis 支持接口化处理\",\"t\":[\"sms4j 自带的短信拦截功能中，依赖于缓存，虽说内部实现了一个缓存，但是没有持久化的能力，略显不足，故而用户可以自己选择使用 redis 作为缓存，在先前的版本中默认的适用了 springboot 集成的 redis 进行连接，但是部分用户反馈他们并没有使用这个。所以，我们拓展了 redis 的能力，你可以自己实现一个接口，然后替代内部的 redis 实现，从而使用自己的方式进行缓存。\",\"使用方式：\",\"实现位于org.dromara.sms4j.api.universal的接口RedisUtil,并实现两个方法\",\"设置带有缓存时间的 key，三个参数分别为 redis key redis value 过期时间 time\",\"过期时间的单位为秒\",\"boolean setOrTime(String key, Object value, Long time)\",\"获取 key\",\"Object getByKey(String key)\",\"当用户实现了该接口，并启用了 redis 作为 sms4j 拦截缓存后，框架内部的缓存实现将被替代，从而使用用户自己的 redis\"]},\"764\":{\"h\":\"插件能力发布\",\"t\":[\"曾经有一吨人（体重加起来不少于 1 吨）问过我，sms4j 是否会支持其他的通知，比如企业微信，钉钉，飞书，邮件等等。其实刚开始并没有这方面的规划…………\",\"但是既然这么多人都问了，肯定是需求不少了 本着 为天地立心，为生民立命，为往圣继绝学，为万世开太平 的伟大理想！（就是为了 star 和赞助） 现在开始逐步接入，sms4j 项目本体主旨不变，其他只作为额外的能力，通过额外 maven 依赖进行引入使用。 当然，贡献组成员的时间精力都很有限的，如果你有时间或者有兴趣的话可以联系我或者直接提交 pr ，参与 到我们之中，原则上我们欢迎任何贡献者参与到我们！ 至于我为啥不单独立仓库，别问，问就是懒！ 重新立仓库我需要重新搞个子域名，重新建立个仓库，重新攒 star，重新起名，重新设计 logo……………… 拉个摊子太烦了，所以干脆都放这了，就当是 sms4j 的插件吧\"]},\"765\":{\"h\":\"现有插件\",\"t\":[\"sms4j-mail 邮件发送插件\",\"敬请期待…………\",\"通知类是一个大类别，不是一朝一夕可完善完成的事情，我们需要做的还有很多。路漫漫其修远兮\",\"我们真心的邀请大家参与到我们之中，跟我们一起成长，一起为往圣继绝学！\"]},\"766\":{\"h\":\"结语\",\"t\":[\"最后还请大家给个 star 支持一下，无论是 gitee 或者是 github，我们都将十分感谢\",\"gitee https://gitee.com/dromara/sms4j\",\"github https://github.com/dromara/sms4j\",\"官方文档   https://wind.kim\"]},\"767\":{\"h\":\"sms4j 3.0.0版本震撼发布 短信重试，多方共用，负载均衡正式来袭\"},\"768\":{\"h\":\"🎉sms4j 3.0.0 版本震撼发布 短信重试，多方共用，负载均衡正式来袭 🎉\",\"t\":[\"在历经了数月的等待之后（主要作者在摸鱼，写得慢。。。。）sms4j 的 3.0 版本终于正式发布，本次版本为大版本更新，与 2.x 不兼容，但是本次更新是一个长期支持版本，并且带来了诸多的新特性，接下来我们一起来看看吧\"]},\"769\":{\"h\":\"🚀 新特性\",\"t\":[\"支持短信失败重试，可以自定义重试次数\",\"支持单厂商多配置使用\",\"支持接口类配置\",\"支持自定义缓存来源\",\"支持默认负载均衡形式，权重可自定义配置\",\"支持邮件发送\",\"支持邮箱监听\",\"支持邮件发送失败自动重试\",\"支持短信拦截\"]},\"770\":{\"h\":\"🏇 使用方式变更\",\"t\":[\"在 sms4j3.0 版本中，使用方式与先前的 2.X 有所不同，使用上不再依托 2.X 中的枚举，而是改为更加自由的自定义 key 标识\",\" SmsBlend smsBlend = SmsFactory.getSmsBlend(\\\"在配置中定义的configId\\\"); SmsResponse smsResponse = smsBlend.sendMessage(\\\"18888888888\\\",\\\"123\\\"); \"]},\"771\":{\"h\":\"🔧 配置方式变更\",\"t\":[\"在 3.0 版本中，去除了先前中的 JDBC 配置等形式，改为更加自由的接口类配置，同时保留了 yml 配置，项目更加轻量，使用更加自由方便\"]},\"772\":{\"h\":\"yml 配置\",\"t\":[\"sms: # 标注从yml读取配置 config-type: yaml blends: # 自定义的标识，也就是configId这里可以是任意值（最好不要是中文） tx1: #厂商标识，标定此配置是哪个厂商，详细请看厂商标识介绍部分 supplier: tencent #您的accessKey access-key-id: 您的accessKey #您的accessKeySecret access-key-secret: 您的accessKeySecret #您的短信签名 signature: 您的短信签名 #模板ID 非必须配置，如果使用sendMessage的快速发送需此配置 template-id: xxxxxxxx #您的sdkAppId sdk-app-id: 您的sdkAppId # 自定义的标识，也就是configId这里可以是任意值（最好不要是中文） \"]},\"773\":{\"h\":\"接口类配置\",\"t\":[\"@Component public class ReadConfig implements SmsReadConfig { @Override public BaseConfig getSupplierConfig(String configId) { UniConfig uniConfig = new UniConfig(); //此处仅为示例，实际环境中，数据可以来自任意位置， return uniConfig; } @Override public List<BaseConfig> getSupplierConfigList() { //此处仅为示例，实际环境中，数据可以来自任意位置， return null; } } @Component public class Demo { @Autowired ReadConfig config; @PostConstruct public void init(){ // 创建SmsBlend 短信实例 SmsFactory.createSmsBlend(config,\\\"在配置中定义的configId\\\"); } } \"]},\"774\":{\"h\":\"📧 邮件插件\",\"t\":[\"邮件插件在这次的更新中也得到了很大的优化，现在的邮件插件使用起来更加简单方便，同时可以覆盖多种场景，并且支持自定义 html 模板发送邮件\",\"支持包括：\",\"html 模板邮件\",\"携带多个附件的邮件\",\"自动打包成 zip 的邮件\",\"标准的文字邮件\",\"抄送人\",\"密送人\",\"失败自动重试\",\"//以下仅做演示，实际使用需要填入数据 MailSmtpConfig config = MailSmtpConfig.builder.build; //这里的key可以是任何可对比类型，用于后续从工厂取出邮件实现类用 MailFactory.put(\\\"qq\\\",config) MailClient mail = MailFactory.createMailClient(\\\"qq\\\"); mail.send(message); \",\"邮件插件去除了先前版本中过多的重载方法，统一改为 send 方法进行发送，通过MailMessage构建不同的邮件\"]},\"775\":{\"h\":\"📩 邮箱监听\",\"t\":[\"邮箱监听可以监听到某个 IMAP 协议邮箱中收到的邮件，并对其进行一定的处理。\",\"MonitorFactory.put(\\\"自定义的标识\\\",MailImapConfig配置,Monitor回调对象) MonitorFactory.start(\\\"put中自定义的标识\\\") \",\"邮箱监听开启后可以监听指定配置下的邮箱，并将收到的邮件进行自定义的处理\"]},\"776\":{\"h\":\"🔨 问题修复\",\"t\":[\"本次版本中，还修复了 2.X 中存在的一些问题\",\"华为云短信在群发时签名错误\",\"腾讯云短信在某些情况下导致的发送失败\",\"unisms 的返回值存在异常\",\"阿里云短信在某些极端情况下会出现签名错误\",\"springUtil 与其他框架冲突\",\"多租户某些状态下配置存在问题\",\"邮件发送时 ssl 配置状态错误\"]},\"777\":{\"h\":\"Soul网关发布1.0.4-RELEASE版本\"},\"778\":{\"h\":\"Soul 网关发布 1.0.4-RELEASE 版本\",\"t\":[\"修复在 1.0.3 版本的后台管理中，出现的 bug。\",\"配置信息序列化方式支持自定义扩展。默认的序列化方式由 kroy 改为了 java 序列化方式。\",\"dubbo 框架支持的更改。\"]},\"779\":{\"h\":\"对 dubbo 用户使用的更改。\",\"t\":[\"在以前的版本中（1.0.2 or 1.0.3），dubbo 的参数是通过 header 头上传递，在 1.0.4 版本中是通过 body 传递\",\"更新了相关的文档信息。\"]},\"780\":{\"h\":\"关于使用 1.0.4 版本的建议。\",\"t\":[\"1.0.4 版本支持用户自定义插件开发，支持正则表达式的匹配。\",\"dubbo 参数传递的更改，我觉得这样会更加友好。\"]},\"781\":{\"h\":\"如果您之前使用的 1.0.2 版本，想要更新到 1.0.4 版本。\",\"t\":[\"在插件表新增 role 字段。\",\"重新启动 1.0.4 版本的管理后台。\",\"执行同步所有插件（因为序列化方式的更改）\",\"启动 1.0.4 版本的 soul-web 服务。\"]},\"782\":{\"h\":\"遇到问题？\",\"t\":[\"添加 qq 群（429951241）\",\"官网文档：https://dromara.org/website/zh-cn/docs/soul/soul.html\",\"github 地址: https://github.com/Dromara/soul\",\"gitee 地址： https://gitee.com/dromara/soul\"]},\"783\":{\"h\":\"Soul网关发布的2.1.X版本，到底有多方便？\",\"t\":[\"Soul 网关自从去年 10 月我开源以来，经历了一年的事情，接受到了来自社区很多朋友的建议，并进行持续不断的优化，已经提供了非常丰富的功能，很多功能都是高度自定义，可视化，高度可扩展的，现在做一个归纳总结。\",\"插件\",\"提供了系统自带的各种插件，比如签名，监控，限流，熔断，http 代理，dubbo 代理，websocket 等等。\",\"支持用户快速的进行插件的自定义开发。\",\"插件的所有数据，开关状态支持动态变更。\",\"数据同步\",\"提供了 http长轮询，zookeeper，websocket 三种不同的数据同步策略，让用户自由选择。\",\"推荐用户使用 websocket 方式，最轻量，在集群环境下，效率更高。\",\"对于用户\",\"首先我们提供了便于用户接入的 client 包，用户可以把快速的把自己的项目接入到 soul 网关。\",\"默认情况下，用户完全不用关心 soul 网关的选择器，规则等配置。\",\"用户之前的接口完全是零侵入，不需要任何更改，只是需要把访问域名改成网关的域名即可。\",\"比如 dubbo 用户，几乎就是 http 的方式完成了 http 协议到 dubbo 协议的互相转换。\",\"soul 使用的是 http 协议，那么注定它就是跨语言的，net 程序员，php 程序员等等，要和 java 进行数据交互，那么就大大的可行了。\",\"举个列子 ，比如你有一个 dubbo 接口 参数定义是一个 java bean,\",\"public void insert(final DubboTest dubboTest) { } public class DubboTest implements Serializable { private String id; private String name; } \",\"如果你使用 soul 网关要发起对它的调用，你的 http 传参数 就是在 body 里面 传一个 json 字符串 ，和普通的 http 调用无差别。\",\"{\\\"id\\\":\\\"123\\\",\\\"name\\\":\\\"xiaoyu\\\"} \",\"对于开发者(程序员)\",\"随着使用者越来越多，每个公司使用情况又不一样,soul 网关在 2.1.X 版本，处处留出来更多的高度自定义扩展性，让开发者，更加方便或者有信心融入进来。\",\"比如，自定义插件，过滤器，dubbo 参数解析器，iphost 解析器，返回结果等等。。这里我着重说一下自定义返回结果。 我们知道，soul 网关默认的返回结果是：\",\"{\\\"code\\\":200, \\\"message \\\": \\\"成功!\\\",\\\"data\\\" :\\\"helloWorld!\\\"} \",\"但是，在运用 soul 网关对你的业务系统进行调用的时候，你的业务系统可能定义的结果并不是上述结构，可能你的 字段叫 msg,这样就会造成结构不一样，给前端处理带来了困扰。我们注意到了这个事情 ：https://github.com/Dromara/soul/issues/109 , 现在已经优化，用户可以定制化的来定义返回结果,具体的要看 soul 文档。\",\"说了这么多，吹了这么多牛逼，那么我们来看看 soul 网关到底可以在什么场景下能发挥大作用。\",\"后台管理 web\",\"首先随便微服务的流行，我们的后台都划分成很多的微服务，我相信你们每个公司都有一个后台管理系统吧，如果我没猜错的话，他们大体上是如下架构。\",\"soul-rpc\",\"很简单对吧，就是有个运营管理平台的 web 项目，去调用每个微服务，来进行后台的查看等等。随着你们业务需要的加大，可能这里需要调用的微服务越来越多，你的 controller越来越多，现在比如你修改了 商品模块的 接口，你要发版会造成所有其他的模块也操作不了（就是你发版影响了其他模块的使用，别杠这里只是比方，不要整蓝绿发版啥的，明白意思吧）。 如果有运营人员在操作其他模块，会不会吐槽你？\",\"假如你是公司架构师，我说的是假如，那么你要怎么解决这个问题呢？当然，我们把这样一个大的 web 系统，拆分成很多小 web 系统，单独的进行发布，但是这样会引入一个问题，怎么统一登陆，鉴权？（很多后台管理系统还有权限的划分） ，这个时候，soul 网关 就能发挥重要的作用了，下面我只是列举了一下简单的调用图。\",\"soul-admin\",\"这样多方便，集成了网关，每个微服务注册到网关，网关根据路由规则来进行调用。自动发现服务，连运维配置 nginx 的工作都省了，把运维的工资给你，美滋滋。\"]},\"784\":{\"h\":\"公司入口网关（开放平台）\",\"t\":[\"如果一个公司要做开放平台或者入口网关，鉴权，限流，监控，熔断肯定少不了。\",\"如果贵公司是 dubbo 体系，开发人员写了 dubbo 服务后，还要傻乎乎的新增一个 web 项目，来提供接口给别人调用吗？\",\"如果一个接口被攻击，你怎么处理呢？如果被大流量攻击，你怎么处理呢？\",\"不巧，soul 在设计之初就是来干这种事情的，我们来看一下整体的架构图。\",\"soul-framework\"]},\"785\":{\"h\":\"零零总总还有很多其他功能\",\"t\":[\"比如支持 websocket 代理。\",\"比如支持文件上传下载。\",\"比如你可以自定义的开发你的插件啊。\"]},\"786\":{\"h\":\"最后最后\",\"t\":[\"github 地址 ：https://github.com/Dromara/soul\",\"gitee 地址 ：https://gitee.com/dromara/soul\",\"文档：https://dromara.org/zh-cn/docs/soul/soul.html\",\"欢迎大家关注，如果贵公司有使用到，或者需要学习交流，或者提供代码参与开发的朋友也可以加群来进行讨论 ，qq 群（429951241）\",\"最后 3.0 已经在进行开源了，3.0 是经历过 2 年双 11 大并发场景验证过的，现在一步一步将它开源出来，希望给大家带来帮助.\"]},\"787\":{\"h\":\"【Soul网关发布2.2.0】让高性能网关变得如此简单！\",\"t\":[\"我们还是先来看看新增功能，然后再讲故事。\",\"完全的插件化架构设计，插件热插拔。\",\"完整支持 dubbo 所有版本，alibaba-dubbo ，apache-dubbo。\",\"支持 dubbo 泛化调用，多参数，复杂参数接口。\",\"增强 monitor 插件，移除 influxdb 支持，新增内存，CPU，QPS，TPS，响应迟延等 metrics，支持接入 Prometheus。\",\"springCloud 插件支持 eureka 与 nacos 二种注册中心。\",\"waf 插件增强,支持黑白名单，以及混合模式。\",\"抽离 Hystrix 熔断功能，独立成插件支持。\",\"修护 Zookeeper 数据同步方式 bug，新增 nacos 同步数据方式。\",\"多种 soul-client 支持，提供传统 spring，以及 springboot 等方式接入。\",\"优化 soul-admin 后台控制界面。\",\"负载均衡算法 bug 修护。\",\"修护大文件上传时候的 bug。\",\"…….太多了不一一列举了。\"]},\"788\":{\"h\":\"体验新架构，10 分钟搞定一个高可用高性能网关。\",\"t\":[\"启动 soul-admin\",\"下载 soul-admin.jar 包，并启动.\",\"> wget https://yu199195.github.io/jar/soul-admin.jar > java -jar soul-admin.jar --spring.datasource.url=\\\"jdbc:mysql://你的url:3306/soul?useUnicode=true&characterEncoding=utf-8&useSSL=false\\\" --spring.datasource.username='you username' --spring.datasource.password='you password' \",\"访问 http://localhost:9095/index.html 默认的用户名：admin 密码:123456。\",\"搭建属于你的网关\",\"首先你新建一个空的 springboot 项目，可以参考 soul-bootstrap. 也可以在 spring 官网:[https://spring.io/quickstart]\",\"引入如下 jar 包：\",\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-webflux</artifactId> <version>2.2.2-RELEASE</version> </dependency> <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> <version>2.2.2-RELEASE</version> </dependency> <!--soul gateway start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-gateway</artifactId> <version>2.2.0</version> </dependency> <!--soul data sync start use websocket--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-sync-data-websocket</artifactId> <version>2.2.0</version> </dependency> \",\"在你的 application.yaml 文件中加上如下配置：\",\"spring: main: allow-bean-definition-overriding: true management: health: defaults: enabled: false soul : sync: websocket : urls: ws://localhost:9095/websocket //设置成你的soul-admin地址 \",\"这样网关的环境就已经搭建完成。\"]},\"789\":{\"h\":\"体验新架构下的插件热插拔\",\"t\":[\"问：我想使用熔断功能，应该如何做呢？\",\"答：你可以在 pom.xml 文件 引入以下依赖,更多的还请看：https://dromara.org/zh-cn/docs/soul/soul.html\",\" <!-- soul hystrix plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-hystrix</artifactId> <version>2.2.0</version> </dependency> <!-- soul hystrix plugin end--> \",\"问:我怎么接入 dubbo 服务呢？\",\"答： 1）如果你使用的是 alibaba-dubbo，那么你应该引入如下：\",\" <!--soul alibaba dubbo plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-alibaba-dubbo</artifactId> <version>2.2.0</version> </dependency> <!-- soul alibaba dubbo plugin end--> \",\"2） 如果你使用 apache-dubbo，那么你应该引入如下：\",\" <!--soul apache dubbo plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-apache-dubbo</artifactId> <version>2.2.0</version> </dependency> <!-- soul apache dubbo plugin end--> \",\"更多的使用请你参考：https://dromara.org/zh-cn/docs/soul/user-dubbo.html\",\"问：如果我想使用限流功能呢？\",\"答：你可以引入以下依赖，具体的参考：https://dromara.org/zh-cn/docs/soul/plugin-rateLimiter.html\",\" <!-- soul ratelimiter plugin start--> <dependency> <groupId>org.dromara</groupId> <artifactId>soul-spring-boot-starter-plugin-ratelimiter</artifactId> <version>2.2.0</version> </dependency> <!-- soul ratelimiter plugin end--> \",\"总而言之，你想要使用什么插件，你就新增该插件的依赖。就这？是热插拔么。。\",\"问：那有些插件我不想用了怎么办？\",\"答：在 soul-admin 后台禁用该插件即可，想用就开启。\"]},\"790\":{\"h\":\"Soul 网关的特性\",\"t\":[\"我觉得最大的特色是在流量筛选和管控方面。无论多复杂的请求，可以根据各种条件，规则，匹配方式，来进行流量过滤，筛选，处理。这个过程完全是可视化，自定义，即时生效的，程序无需任何更改。\",\"每个配置都在 soul-admin 控制台配置，会同步到每个 Soul 网关节点的 JVM 内存，这也是 Soul 集群高性能的关键之一，在 soul 网关内部，使用了 http 长轮询，websocket，zookeeper 等方式，独立实现了分布式配置中心的功能。\",\"Soul 网关使用 Reactor 编程方式来实现，独立了线程调度，低消耗，经过网关的流量，我们在开启 10 个插件都处理的情况下，延迟是 1~2ms。\",\"插件机制，默认提供了限流，熔断，黑白名单，认证等等插件。\",\"支持 A/B test，蓝绿发布（因为掌控了所有流量这个很容易做）。\"]},\"791\":{\"h\":\"Soul 网关有哪些使用场景，又有哪些值得你关注或者学习的？\",\"t\":[\"首先我觉得还是实用主义，需要用到,才会去了解。那么在什么场景下，你需要用到呢？\",\"后台管理 web\",\"首先随便微服务的流行，我们的后台都划分成很多的微服务，我相信你们每个公司都有一个后台管理系统吧，如果我没猜错的话，他们大体上是如下架构。\",\"它会有什么问题呢？大家思考一下。\",\"每个微服务项目的开发人员都在这上面进行开发，会越来越笨重。\",\"如何不停机发布的问题？你要发布商品模块的接口，会造成所有其他的模块使用不了。\",\"假如某一个模块接口的请求量很大（需要部署多个），另一个模块不需要，你又怎么拆分呢？\",\"有人又会说，那我把他们拆处理，拆成一个一个 web 不就行了么？但是这样又会带来一个新的问题，负载均衡在哪里做？统一的认证在哪里做？\",\"Soul 网关就很好了解决了以上所有问题，只需要把你的微服务注册到 Soul 网关。你想怎么玩都可以，不重样的.. 比如 order 模块有 2 个应用，你要发布新的版本，你可以在网关里面，把流量先打到其中一个，另一个进行更新，更新完了以后，再把流量放过去。改变了以前运维掌控一切的观念，java 程序员，也可以玩的更好，运维都省了，向老板申请加薪指日可待。\",\"需要统一鉴权？你只需要在网关新增一个适合自己业务的鉴权插件就 OK。公司入口网关（开放平台）\",\"如果一个公司要做开放平台或者入口网关，鉴权，限流，监控，熔断肯定少不了。\",\"如果贵公司是 dubbo 体系，开发人员写了 dubbo 服务后，还要傻乎乎的新增一个 web 项目，来提供接口给别人调用吗？\",\"如果一个接口被攻击，你怎么处理呢？如果被大流量攻击，你怎么处理呢？\",\"不巧，soul 在设计之初就是来干这种事情的，我们来看一下整体的架构图。\",\"soul-framework\",\"Soul 网关是使用响应式编程实现的，响应式编程绝对是未来 java 邻域的重要方向，看风向标 Spring 体系就好了。我在 14 年的时候，天天写 for 循环操作集合，溜的一笔。领导对我说，要使用 lambda 表达式，这是未来的重点，今天来看，如果你是 java 程序员，你不会 lambda 函数式编程，你好意思么。\"]},\"792\":{\"h\":\"从发布 2.2.0，谈谈近几年的开源体会。\",\"t\":[\"我是 17 年左右的时候，开始写开源项目的，最开始我和王亮一起讨论设计了 LCN 分布式事务，后面自己又陆续写了 Hmily，Raincat，Myth 等分布式事务中间件，再后来写了 Soul 网关，这一路走来，遇到很多很有意思的事，也遭受很多小白用户的摧残。总的感觉，一个好的开源项目，高扩展，可插拔的设计实在太重要了。\",\"案例一：Soul 网关刚开始数据同步只支持 Zookeeper 方式，有些用户反馈，我们没有 zk，那怎么办？\",\"案例二 ：Soul 网关是支持 Dubbo 的，但是有些用户是 alibaba-dubbo，有些用户 apache-dubbo，你又怎么说？\",\"案例三 ：soul 刚开始提供的客户端都是基于 Springboot 的，有些用户是传统的 Spring，你又怎么说？\",\"所以插件化设计，SPI 可插拔设计势在必行。\",\"SPI VS 可插拔\",\"诚然 SPI 扩展方式，是可插拔的基石，但是他们又不完全等同。举个列子：假如我们先存储一条数据，你定好了 SPI 接口，也有 Mysql，mongodb，elasticseach，zookeeper 等等多种方式实现，现在你要考虑的是把它组合在一起项目里面，还是放在不同的项目，按需打包和加载呢？这些都是要考虑的，所以不能一股脑的 SPI 方式。\",\"checkStyle\",\"严格的代码规范，是对源码学习中，框架使用者的尊重，更是一种开源的态度。\",\"严格的代码规范，让人看起来舒服，也更容易让人理解整个代码。\",\"也希望各位小伙伴提交 PR 的时候，至少本地要 Install 成功，之前有些 PR，为了不打击他们的积极性，合并之后流着泪修改。\",\"参与开源\",\"目前我主要专注于 Apache ShardingSphere，这是中国人在 apache 组织的第一个关于数据库分库分表的顶级项目，欢迎大家参与进来。https://github.com/apache/shardingsphere。\",\"国人在开源方面，技术方面大到芯片，小到 MATLAB ，都落后挺多的，也希望大家拥有开源的心态，多参与开源，学习技术，宣传思想，为往圣继绝学！\"]},\"793\":{\"h\":\"欢迎开源项目 WEMQ 加入 Dromara 社区，物联网设备调试系统\"},\"794\":{\"h\":\"项目背景\",\"t\":[\"随着物联网技术的迅猛发展，越来越多的物联网设备被应用于各个行业和领域。物联网设备的调试和管理是确保设备正常运行和提供稳定服务的关键环节。然而，传统的物联网设备调试方案往往存在一些问题，如复杂的配置流程、安全性不足、功能不完善等。\",\"为了解决这些问题，WeMQ应运而生。WeMQ 是一款面向物联网设备运营商的开源物联网设备调试系统，旨在提供完整的物联网设备调试方案，并集成了设备管理、MQTT 服务器管理、客户管理等功能。该系统采用自研的 Nmqs 通信层组件，实现了连接信息的加密，保证了数据的安全性。\",\"WeMQ 的项目背景源于对物联网设备调试过程中存在问题的深入研究和理解。通过提供开源的解决方案，WeMQ 希望为物联网设备运营商提供一个高性能、安全可靠、功能强大的调试和管理平台，帮助他们简化设备调试流程、提高调试效率，并保证设备的稳定运行。\",\"项目的主要特性：\",\"提供一套完整的物联网设备调试方案，包括设备管理、MQTT 服务器管理、客户管理等功能，帮助设备运营商简化调试流程。\",\"自研 Nmqs 通信层组件，实现连接信息的加密，确保数据传输的安全性。\",\"提供高性能、稳定可靠的服务，满足大规模物联网设备的调试和管理需求。\",\"开源项目，吸引更多的开发者参与贡献，推动物联网设备调试领域的发展。\",\"通过 WeMQ，物联网设备运营商可以更轻松地进行设备调试和管理，提高工作效率，降低运营成本，并为最终用户提供更好的物联网设备体验。\"]},\"795\":{\"h\":\"技术选型\"},\"796\":{\"h\":\"1. 系统环境\",\"t\":[\"Java 8\",\"Servlet 3.0\",\"Apache Maven 3\"]},\"797\":{\"h\":\"2. 主框架\",\"t\":[\"Spring Boot 2.7.x\",\"Spring Framework 5.3.x\",\"Spring MVC 5.3.x\"]},\"798\":{\"h\":\"3. 持久层\",\"t\":[\"Mybatis 3.5.x\",\"Alibaba Druid 1.2.x\",\"Hibernate Validation 6.0.x\",\"Java MySQL Connector 8.0.x\"]},\"799\":{\"h\":\"4. 视图层\",\"t\":[\"Thymeleaf 3.x\",\"Bootstrap 5.x\",\"Layui 2.x\"]},\"800\":{\"h\":\"5. 工具类\",\"t\":[\"Apache Commons\",\"Hutool 5.x\"]},\"801\":{\"h\":\"6. 通信层\",\"t\":[\"Nmqs 实现连接信息加密、消息转发，支持 WS/TCP 协议连接\",\"Eclipse Paho\"]},\"802\":{\"h\":\"项目结构\",\"t\":[\"cn.mmanager ├── mm-common // 工具类 │ └── annotation // 自定义注解 │ └── constant // 通用常量 │ └── core // 核心控制 │ └── enums // 通用枚举 │ └── exception // 通用异常 ├── mm-framework // 框架核心 │ └── aspectj // 注解实现 │ └── interceptor // 拦截器 │ └── manager // 异步处理 │ └── web // 前端控制 ├── mm-web // Web服务 ├── mm-dao // 数据访问层 ├── mm-service // 业务层 ├── mm-model // 模型``` \"]},\"803\":{\"h\":\"通信层\",\"t\":[\" _ _ __ __ ____ _____ | \\\\ | | \\\\/ |/ __ \\\\ / ____| | \\\\| | \\\\ / | | | | (___ | . ` | |\\\\/| | | | |\\\\___ \\\\ | |\\\\ | | | | |__| |____) | |_| \\\\_|_| |_|\\\\___\\\\_\\\\_____/ \",\"通信层组件在物联网设备调试系统中扮演着重要的角色，它负责设备与服务器之间的通信和数据传输。在 WeMQ 中，采用了自研的 Nmqs 通信层组件，它实现了连接信息的加密，确保数据传输的安全性。\",\"Nmqs 通信层组件具有以下特点和功能：\",\"连接信息加密：Nmqs 采用先进的加密算法，对设备与服务器之间的连接信息进行加密处理。这样可以确保通信过程中的数据安全，防止信息被窃取或篡改。\",\"安全认证：Nmqs 提供了安全认证机制，确保只有经过授权的设备和服务器才能建立连接。通过身份验证和密钥交换等方式，确保通信双方的身份合法性和通信的安全性。\",\"数据压缩和优化：Nmqs 支持数据压缩和优化技术，可以在传输过程中对数据进行压缩，减少数据传输的带宽占用和传输延迟，提高通信效率。\",\"可靠性保证：Nmqs 具备可靠性保证机制，能够处理通信过程中的数据丢失、重传和错误处理。它采用可靠的传输协议，确保数据的完整性和可靠性。\",\"适应性和灵活性：Nmqs 通信层组件具有良好的适应性和灵活性，可以适应不同的网络环境和设备类型。它支持多种通信协议和网络传输方式，能够适应不同的物联网设备调试场景。\",\"通过自研的 Nmqs 通信层组件，WeMQ 能够提供安全可靠的设备与服务器之间的通信服务。它保护设备数据的安全性，确保通信过程的可靠性和稳定性，为物联网设备调试和管理提供了强大的基础支持。\"]},\"804\":{\"h\":\"开源地址\",\"t\":[\"Gitee：https://gitee.com/dromara/WeMQ\",\"Github：https://github.com/dromara/WeMQ\"]},\"805\":{\"h\":\"Issues & Pull Requests\",\"t\":[\"欢迎提交 Issues 和 Pull Requests，开源大门永远向所有人敞开。\"]},\"806\":{\"h\":\"作者介绍\",\"t\":[\"名称：NicholasLD\",\"全栈开发工程师，物联网爱好者\",\"Dromara 开源组织成员，dromara/WeMQ 作者\",\"联系方式：\",\"Email: 878639947@qq.com\",\"QQ: 878639947\",\"WeChat: NicholasLD505\"]},\"807\":{\"h\":\"欢迎 X File Storage 加入 Dromara 开源社区，一站式文件存储\",\"t\":[\"原名 X Spring File Storage 现已捐赠至 dromara 开源组织\"]},\"808\":{\"h\":\"📚 简介\",\"t\":[\"一行代码将文件存储到本地、FTP、SFTP、WebDAV、阿里云 OSS、华为云 OBS、七牛云 Kodo、腾讯云 COS、百度云 BOS、又拍云 USS、MinIO、 Amazon S3、GoogleCloud Storage、金山云 KS3、美团云 MSS、京东云 OSS、天翼云 OOS、移动 云 EOS、沃云 OSS、 网易数帆 NOS、Ucloud US3、青云 QingStor、平安云 OBS、首云 OSS、IBM COS、其它兼容 S3 协议的存储平台。查看 所有支持的存储平台\",\"💡 通过 WebDAV 连接到 Alist 后，可以使用百度网盘、天翼云盘、阿里云盘、迅雷网盘等常见存储服务，查看 Alist 支持的存储平台\",\"GitHub：https://github.com/dromara/x-file-storage Gitee：https://gitee.com/dromara/x-file-storage\",\"文档 1：https://x-file-storage.dromara.org 文档 2：https://x-file-storage.xuyanwu.cn 文档 3：https://spring-file-storage.xuyanwu.cn\"]},\"809\":{\"h\":\"📜 更新内容\",\"t\":[\"更改项目名、更改包名、优化项目结构\",\"新增直接读取 HttpServletRequest 的流进行上传，文件不落盘，速度更快\",\"新增支持 Metadata 元数据\",\"优化 ACL 异常处理\",\"优化文件删除逻辑\",\"修复 Amazon S3 上传文件偶现 ResetException 问题\",\"捐赠至 dromara 开源社区\"]},\"810\":{\"h\":\"项目依赖的变化\",\"t\":[\"2.0.0 之前的版本\",\"<dependency> <groupId>cn.xuyanwu</groupId> <artifactId>spring-file-storage</artifactId> <version>1.0.3</version> </dependency> \",\"2.0.0 及以后的版本\",\"<dependency> <groupId>org.dromara.x-file-storage</groupId> <artifactId>x-file-storage-spring</artifactId> <version>2.0.0</version> </dependency> \"]},\"811\":{\"h\":\"配置参数的变化\",\"t\":[\"2.0.0 之前的版本\",\"spring: file-storage: #文件存储配置 default-platform: huawei-obs-1 #默认使用的存储平台 thumbnail-suffix: \\\".min.jpg\\\" #缩略图后缀，例如【.min.jpg】【.png】 #对应平台的配置写在这里，注意缩进要对齐 \",\"2.0.0 及以后的版本\",\"dromara: x-file-storage: #文件存储配置 default-platform: huawei-obs-1 #默认使用的存储平台 thumbnail-suffix: \\\".min.jpg\\\" #缩略图后缀，例如【.min.jpg】【.png】 #对应平台的配置写在这里，注意缩进要对齐 \"]},\"812\":{\"h\":\"包名的变化\",\"t\":[\"2.0.0 之前的版本\",\"cn.xuyanwu.spring.file.storage cn.xuyanwu.spring.file.storage.spring \",\"2.0.0 及以后的版本\",\"org.dromara.x.file.storage.core org.dromara.x.file.storage.spring \"]},\"813\":{\"h\":\"📦 使用\",\"t\":[\"点击 快速入门 查看全部存储平台的使用方法！\"]},\"814\":{\"h\":\"🔧 配置\",\"t\":[\"这里以阿里云 OSS 为例，pom.xml 引入本项目，这里默认是 SpringBoot 环境，其它环境参考 脱离 SpringBoot 单独使用\",\"<!-- 引入本项目 --> <dependency> <groupId>org.dromara.x-file-storage</groupId> <artifactId>x-file-storage-spring</artifactId> <version>2.0.0</version> </dependency> <!-- 引入 阿里云 OSS SDK，如果使用其它存储平台，就引入对应的 SDK --> <dependency> <groupId>com.aliyun.oss</groupId> <artifactId>aliyun-sdk-oss</artifactId> <version>3.16.1</version> </dependency> \",\"application.yml 配置文件中添加以下基础配置\",\"dromara: x-file-storage: #文件存储配置 default-platform: aliyun-oss-1 #默认使用的存储平台 aliyun-oss: - platform: aliyun-oss-1 # 存储平台标识 enable-storage: true # 启用存储 access-key: ?? secret-key: ?? end-point: ?? bucket-name: ?? domain: ?? # 访问域名，注意“/”结尾，例如：https://abc.oss-cn-shanghai.aliyuncs.com/ base-path: test/ # 基础路径 \"]},\"815\":{\"h\":\"🔨 编码\",\"t\":[\"在启动类上加上@EnableFileStorage注解\",\"@EnableFileStorage @SpringBootApplication public class SpringFileStorageTestApplication { public static void main(String[] args) { SpringApplication.run(SpringFileStorageTestApplication.class,args); } } \"]},\"816\":{\"h\":\"✨ 开始上传\",\"t\":[\"支持 File、MultipartFile、byte[]、InputStream、URL、URI、String、HttpServletRequest，大文件会自动分片上传。如果想支持更多方式，请阅读 文件适配器 章节\",\"@RestController public class FileDetailController { @Autowired private FileStorageService fileStorageService;//注入实列 /** * 上传文件 */ @PostMapping(\\\"/upload\\\") public FileInfo upload(MultipartFile file) { //只需要这一行代码即可上传成功 return fileStorageService.of(file).upload(); } /** * 上传文件，成功返回文件 url */ @PostMapping(\\\"/upload2\\\") public String upload2(MultipartFile file) { FileInfo fileInfo = fileStorageService.of(file) .setPath(\\\"upload/\\\") //保存到相对路径下，为了方便管理，不需要可以不写 .setObjectId(\\\"0\\\") //关联对象id，为了方便管理，不需要可以不写 .setObjectType(\\\"0\\\") //关联对象类型，为了方便管理，不需要可以不写 .putAttr(\\\"role\\\",\\\"admin\\\") //保存一些属性，可以在切面、保存上传记录、自定义存储平台等地方获取使用，不需要可以不写 .upload(); //将文件上传到对应地方 return fileInfo == null ? \\\"上传失败！\\\" : fileInfo.getUrl(); } /** * 上传图片，成功返回文件信息 * 图片处理使用的是 https://github.com/coobird/thumbnailator */ @PostMapping(\\\"/upload-image\\\") public FileInfo uploadImage(MultipartFile file) { return fileStorageService.of(file) .image(img -> img.size(1000,1000)) //将图片大小调整到 1000*1000 .thumbnail(th -> th.size(200,200)) //再生成一张 200*200 的缩略图 .upload(); } /** * 上传文件到指定存储平台，成功返回文件信息 */ @PostMapping(\\\"/upload-platform\\\") public FileInfo uploadPlatform(MultipartFile file) { return fileStorageService.of(file) .setPlatform(\\\"aliyun-oss-1\\\") //使用指定的存储平台 .upload(); } /** * 直接读取 HttpServletRequest 中的文件进行上传，成功返回文件信息 * 使用这种方式有些注意事项，请查看文档 基础功能-上传 章节 */ @PostMapping(\\\"/upload-request\\\") public FileInfo uploadPlatform(HttpServletRequest request) { return fileStorageService.of(request).upload(); } } \"]},\"817\":{\"h\":\"🎨 其它操作\",\"t\":[\"//手动构造文件信息，可用于其它操作 FileInfo fileInfo = new FileInfo() .setPlatform(\\\"huawei-obs-1\\\") .setBasePath(\\\"test/\\\") .setPath(\\\"aa/\\\") .setFilename(\\\"image.png\\\") .setThFilename(\\\"image.png.min.jpg\\\"); //文件是否存在 boolean exists = fileStorageService.exists(fileInfo); //下载 byte[] bytes = fileStorageService.download(fileInfo).bytes(); //删除 fileStorageService.delete(fileInfo); //其它更多操作 \",\"如果将文件记录保存到数据库中，还可以更方便的根据 URL 进行操作了，详情请阅读 保存上传记录 章节\",\"//直接从数据库中获取 FileInfo 对象，更加方便执行其它操作 FileInfo fileInfo = fileStorageService.getFileInfoByUrl(\\\"https://abc.def.com/test/aa/image.png\\\"); //文件是否存在 boolean exists = fileStorageService.exists(\\\"https://abc.def.com/test/aa/image.png\\\"); //下载 byte[] bytes = fileStorageService.download(\\\"https://abc.def.com/test/aa/image.png\\\").bytes(); //删除 fileStorageService.delete(\\\"https://abc.def.com/test/aa/image.png\\\"); //其它更多操作 \",\"点击 快速入门 查看全部存储平台的使用方法！\"]},\"818\":{\"h\":\"新晋开源项目 yft-design 加入 Dromara 社区，基于Canvas的开源版\\\"创客贴\\\"\"},\"819\":{\"h\":\"yft-design 基于 Canvas 的开源版\\\"创客贴\\\"\"},\"820\":{\"h\":\"项目介绍\",\"t\":[\"dromara 开源组织成员，dromara/yft-design 作者。\",\"使用 Vue3 + TypeScript + Fabric.js + Pinia + ElementPlus 等。\",\"支持文字、图片、形状、线条、二维码 、条形码等几种常用的元素类型。\",\"每一种元素都拥有高度可编辑能力，缩略图显示，模板，支持导出 json，svg，img 等。\",\"在线设计、编辑名片，LOGO，图片，海报等。\"]},\"821\":{\"h\":\"项目运行\",\"t\":[\"npm install npm run dev npm run build \"]},\"822\":{\"h\":\"目录结构\",\"t\":[\"├── assets // 静态资源 │ ├── fonts // 在线字体文件 │ └── styles // 样式 ├── components // 与业务逻辑无关的通用组件 ├── configs // 配置文件 ├── extension // 扩展元素 ├── hooks // 供多个组件（模块）使用的 hooks 方法 ├── mocks // mocks 数据 ├── plugins // 自定义的 Vue 插件 ├── types // 类型定义文件 ├── store // Pinia store，参考：https://pinia.vuejs.org/ ├── utils // 通用的工具方法 └── views // 业务组件目录 ├── Canvas // 编辑模块 ├── Editor // 页面模块 └── Event // 事件模块 \"]},\"823\":{\"h\":\"页面编辑\",\"t\":[\"支持缩略图（右键操作）复制，粘贴，新增，删除，选择，拖动页面顺序\"]},\"824\":{\"h\":\"画布编辑\",\"t\":[\"支持自定义选择画布尺寸（名片，单页，海报），印刷出血及安全线，印刷拼版，尺寸单位（mm）与（px）自由切换，快捷键滚轮缩放画布\",\"支持渐变背景多种样式填充，支持线性渐变及经向渐变，可自定义修改角度，位置\",\"支持网格背景多种样式填充，支持修改参数生成及随机生成和自定义生成模式\",\"支持条纹背景多种样式填充，支持修改条纹颜色及随机条纹样式\"]},\"825\":{\"h\":\"文字编辑\",\"t\":[\"支持文字添加横向和纵向，编辑，左对齐，右对齐，居中，字体大小，font-family，字体颜色，背景颜色，粗体，倾斜，下划线，删除线，行距，字距，描边，底纹，图片填充\"]},\"826\":{\"h\":\"图片编辑\",\"t\":[\"支持上传，图片裁切，水平和垂直翻转，支持多种颜色的蒙版和自定义样式的滤镜\"]},\"827\":{\"h\":\"元素编辑\",\"t\":[\"支持上传 svg 元素及模板中多种格式的 svg 元素。元素可以自定义大小，颜色及背景填充\",\"线段支持双击端点拖拽，修改尺寸，虚线\",\"二维码支持矢量格式印刷，透明底图，自定义二维码内容，边距大小及容错率\",\"条行码支持矢量格式印刷，支持国际上多种码制，自定义修改码值，码宽及码高\"]},\"828\":{\"h\":\"图层编辑\",\"t\":[\"图层可显示元素类型，可拖拽图层元素修改元素层级，可删除，锁定，隐藏图层，文字可在图层中编辑\"]},\"829\":{\"h\":\"未来规划\",\"t\":[\"增加 psd，pdf，cdr 等不同格式导入在线编辑\",\"图片可以通过元素裁切出不同形状，元素可自定义拖拽设计\",\"更好的编辑体验，增加 3D 模型在线显示\"]},\"830\":{\"h\":\"zyplayer-doc 1.1.6-Release\"},\"831\":{\"h\":\"简介\",\"t\":[\"zyplayer-doc是一款适合企业和个人私有化部署使用的 WIKI 知识库管理系统，提供在线化的知识库管理功能，专为私有化部署而设计，最大程度上保证企业或个人的数据安全。\",\"可用于企业内部协作的知识库、规章制度，企业对外的产品帮助文档，个人笔记、WIKI 知识库等场景使用。\",\"提供有富文本和 Markdown 格式的编辑器，具有附件、评论和历史版本的功能，同时可将编写的文档一键开启分享，提供有界面友好的开放文档查看功能。\",\"体验地址：https://zyplayer.com\",\"在线文档：https://doc.zyplayer.com\"]},\"832\":{\"h\":\"V1.1.6 更新内容\",\"t\":[\"参与本次更新的社区成员有：@sh1yu@diant ，感谢大家的贡献与辛勤付出！同时期待更多小伙伴的参与~\"]},\"833\":{\"h\":\"新增功能\",\"t\":[\"文档管理页面优化，更简洁和现代化\",\"新增模板管理功能\",\"新增文档移动和复制功能\",\"修改页面新建和附件保存逻辑\",\"增加达梦数据库支持\",\"db 模块 tab 页面增加右键菜单\",\"sql 执行器增加上下布局拖拽\"]},\"834\":{\"h\":\"功能优化\",\"t\":[\"Word 文档导出优化\",\"添加 rewriteBatchedStatements=true 提高批量操作数据库效率\",\"db 模块全局滚动条美化\",\"sql 执行器页面易用性优化\",\"db 模块增加节流、防抖函数，有效提升页面性能\",\"修改模块化加载，可以通过配置文件控制加载哪些模块，同时前端有对应显示\",\"其他各种细节优化\"]},\"835\":{\"h\":\"问题修复\",\"t\":[\"#I85QPE 处理附件列表问题，优化文件上传逻辑\",\"修改数据互导查询总条数时某些数据库将别名大写了的问题\",\"修复 oracle 数据库字段大小混写导致表数据结果页面报错问题\"]},\"836\":{\"h\":\"更新详情\",\"t\":[\"WIKI 文档查看管理页面\",\"1.png\",\"WIKI 文档编辑页面\",\"2.png\",\"WIKI 开放文档查看页面\",\"3.png\"]},\"837\":{\"h\":\"项目\"}},\"dirtCount\":0,\"index\":[[\"评论和历史版本的功能\",{\"1\":{\"831\":1}}],[\"评委会收到申请后第一时间与项目作者沟通并确认退出意向\",{\"1\":{\"305\":1}}],[\"评委会申请退出\",{\"1\":{\"305\":1}}],[\"知识库等场景使用\",{\"1\":{\"831\":1}}],[\"知识库管理系统\",{\"1\":{\"831\":1}}],[\"锁定\",{\"1\":{\"828\":1}}],[\"码宽及码高\",{\"1\":{\"827\":1}}],[\"边距大小及容错率\",{\"1\":{\"827\":1}}],[\"透明底图\",{\"1\":{\"827\":1}}],[\"虚线\",{\"1\":{\"827\":1}}],[\"颜色及背景填充\",{\"1\":{\"827\":1}}],[\"水平和垂直翻转\",{\"1\":{\"826\":1}}],[\"底纹\",{\"1\":{\"825\":1}}],[\"底层优化规避很多不正确的用法\",{\"1\":{\"608\":1}}],[\"描边\",{\"1\":{\"825\":1}}],[\"倾斜\",{\"1\":{\"825\":1}}],[\"倾听用户的声音\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"粗体\",{\"1\":{\"825\":1}}],[\"背景颜色\",{\"1\":{\"825\":1}}],[\"居中\",{\"1\":{\"825\":1}}],[\"右对齐\",{\"1\":{\"825\":1}}],[\"右键操作\",{\"1\":{\"823\":1}}],[\"左对齐\",{\"1\":{\"825\":1}}],[\"尺寸单位\",{\"1\":{\"824\":1}}],[\"印刷拼版\",{\"1\":{\"824\":1}}],[\"印刷出血及安全线\",{\"1\":{\"824\":1}}],[\"画布编辑\",{\"0\":{\"824\":1}}],[\"拖动页面顺序\",{\"1\":{\"823\":1}}],[\"拖动表单元素生成相应的\",{\"1\":{\"609\":1}}],[\"粘贴\",{\"1\":{\"823\":1}}],[\"海报\",{\"1\":{\"824\":1}}],[\"海报等\",{\"1\":{\"820\":1}}],[\"海子\",{\"1\":{\"308\":1}}],[\"缩略图显示\",{\"1\":{\"820\":1}}],[\"缩略图后缀\",{\"1\":{\"811\":2}}],[\"✨\",{\"0\":{\"816\":1}}],[\"速度更快\",{\"1\":{\"809\":1}}],[\"速率高于\",{\"1\":{\"245\":1}}],[\"速率\",{\"1\":{\"241\":1,\"252\":1}}],[\"青云\",{\"1\":{\"808\":1}}],[\"青衫烟雨客\",{\"1\":{\"308\":1}}],[\"沃云\",{\"1\":{\"808\":1}}],[\"京东云\",{\"1\":{\"808\":1}}],[\"视图层\",{\"0\":{\"799\":1}}],[\"视频教程直达\",{\"1\":{\"692\":1}}],[\"视频讲解\",{\"1\":{\"688\":1}}],[\"视频介绍\",{\"0\":{\"613\":1}}],[\"吸引更多的开发者参与贡献\",{\"1\":{\"794\":1}}],[\"吸引用户使用\",{\"1\":{\"456\":1}}],[\"客户管理等功能\",{\"1\":{\"794\":2}}],[\"客户端封装\",{\"1\":{\"720\":1}}],[\"客户端编辑时授权类型变更未保存的问题\",{\"1\":{\"619\":1}}],[\"客户端授权功能\",{\"1\":{\"615\":1}}],[\"客户端授权\",{\"0\":{\"611\":1}}],[\"客户端凭证\",{\"1\":{\"585\":1}}],[\"客户端重连逻辑优化\",{\"1\":{\"574\":1}}],[\"客户端断开连接时\",{\"1\":{\"574\":1}}],[\"客户端框架\",{\"1\":{\"426\":1}}],[\"客户端元数据和\",{\"1\":{\"316\":1}}],[\"客户端注册逻辑\",{\"1\":{\"315\":1}}],[\"客户端中未使用的泛型\",{\"1\":{\"315\":1}}],[\"客户端依赖\",{\"1\":{\"282\":1}}],[\"客户端更新\",{\"1\":{\"79\":1}}],[\"客户端\",{\"0\":{\"319\":1},\"1\":{\"79\":2,\"83\":3,\"90\":2,\"205\":1,\"320\":1,\"574\":2,\"608\":1,\"617\":1}}],[\"诚然\",{\"1\":{\"792\":1}}],[\"诚邀开发者加入\",{\"0\":{\"634\":1}}],[\"刚开始提供的客户端都是基于\",{\"1\":{\"792\":1}}],[\"刚刚也分析了\",{\"1\":{\"144\":1}}],[\"刚刚提到的\",{\"1\":{\"131\":1}}],[\"遇到很多很有意思的事\",{\"1\":{\"792\":1}}],[\"遇到问题\",{\"0\":{\"782\":1}}],[\"谈谈近几年的开源体会\",{\"0\":{\"792\":1}}],[\"领导对我说\",{\"1\":{\"791\":1}}],[\"溜的一笔\",{\"1\":{\"791\":1}}],[\"邻域的重要方向\",{\"1\":{\"791\":1}}],[\"拆成一个一个\",{\"1\":{\"791\":1}}],[\"拆分成很多小\",{\"1\":{\"783\":1}}],[\"拆分任务\",{\"1\":{\"406\":1}}],[\"拆分核心基础组件\",{\"0\":{\"367\":1}}],[\"拆分\",{\"1\":{\"315\":1}}],[\"拆分为约\",{\"1\":{\"81\":1}}],[\"蓝绿发布\",{\"1\":{\"790\":1}}],[\"黑白名单\",{\"1\":{\"790\":1}}],[\"黑科技模块\",{\"1\":{\"420\":1}}],[\"黑科技与精彩演讲\",{\"1\":{\"16\":1}}],[\"延迟是\",{\"1\":{\"790\":1}}],[\"延迟时间根据\",{\"1\":{\"144\":1}}],[\"搭建属于你的网关\",{\"1\":{\"788\":1}}],[\"搭建与运行\",{\"1\":{\"613\":1}}],[\"别杠这里只是比方\",{\"1\":{\"783\":1}}],[\"别问\",{\"1\":{\"764\":1}}],[\"商品模块的\",{\"1\":{\"783\":1}}],[\"吹了这么多牛逼\",{\"1\":{\"783\":1}}],[\"说了这么多\",{\"1\":{\"783\":1}}],[\"说明和\",{\"1\":{\"370\":1,\"385\":1}}],[\"说明\",{\"1\":{\"313\":1,\"604\":1}}],[\"说明每次调用都使用新的\",{\"1\":{\"167\":1}}],[\"说明完成\",{\"1\":{\"144\":1}}],[\"说明重连了\",{\"1\":{\"92\":1}}],[\"抄送人\",{\"1\":{\"774\":1}}],[\"厂商标识\",{\"1\":{\"772\":1}}],[\"厂商名称存储字段\",{\"1\":{\"741\":1}}],[\"拉个摊子太烦了\",{\"1\":{\"764\":1}}],[\"拉取后台对应类型的数据\",{\"1\":{\"149\":1}}],[\"拉取后台数据\",{\"1\":{\"148\":1}}],[\"吨\",{\"1\":{\"764\":1}}],[\"曾经有一吨人\",{\"1\":{\"764\":1}}],[\"略显不足\",{\"1\":{\"763\":1}}],[\"虽说内部实现了一个缓存\",{\"1\":{\"763\":1}}],[\"虽然钱不多\",{\"1\":{\"308\":1}}],[\"虽然并不懂响应式编程\",{\"1\":{\"236\":1}}],[\"虽然子类少的使用没什么影响\",{\"1\":{\"175\":1}}],[\"虽然这样可以使用\",{\"1\":{\"173\":1}}],[\"虽然类型不同\",{\"1\":{\"154\":1}}],[\"承诺过的\",{\"1\":{\"757\":1}}],[\"坐上火箭的不光神州\",{\"0\":{\"752\":1}}],[\"亿美短信的返回值在某些情况下存在异常\",{\"1\":{\"750\":1}}],[\"爷爷\",{\"1\":{\"742\":1}}],[\"告诉框架要读取的厂商配置来源\",{\"1\":{\"741\":1}}],[\"告警信息优化\",{\"1\":{\"422\":1}}],[\"告警\",{\"1\":{\"420\":1}}],[\"突破了\",{\"1\":{\"729\":1}}],[\"突然想到在\",{\"1\":{\"92\":1}}],[\"携带多个附件的邮件\",{\"1\":{\"774\":1}}],[\"携带参数问题\",{\"1\":{\"724\":1}}],[\"携手构建开源\",{\"1\":{\"57\":1}}],[\"函数式编程\",{\"1\":{\"791\":1}}],[\"函数\",{\"1\":{\"723\":2}}],[\"浏览器判断逻辑\",{\"1\":{\"723\":1}}],[\"浏览器访问\",{\"1\":{\"457\":1,\"465\":1}}],[\"废弃\",{\"1\":{\"722\":2}}],[\"废话少说\",{\"1\":{\"116\":1}}],[\"❌\",{\"0\":{\"722\":1}}],[\"鸣谢一下此次版本一起讨论和一起解决大量\",{\"1\":{\"720\":1}}],[\"毕竟捐赠者我不知道如何道谢\",{\"1\":{\"720\":1}}],[\"毕竟年龄大了\",{\"1\":{\"720\":1}}],[\"哦\",{\"1\":{\"720\":1}}],[\"周边来支持\",{\"1\":{\"720\":1}}],[\"周边商品\",{\"1\":{\"15\":1}}],[\"激进\",{\"1\":{\"720\":1}}],[\"肝了两个晚上重构了这部分代码\",{\"1\":{\"720\":1}}],[\"崩溃程度可想而知\",{\"1\":{\"720\":1}}],[\"彻底解决事务悬挂问题\",{\"1\":{\"717\":1}}],[\"绝不搞一言堂\",{\"1\":{\"715\":1}}],[\"耗时等信息\",{\"1\":{\"713\":1}}],[\"群\",{\"1\":{\"711\":1,\"718\":1,\"782\":1,\"786\":1}}],[\"群进行交流\",{\"1\":{\"77\":1}}],[\"吧\",{\"1\":{\"710\":1}}],[\"吧😄\",{\"1\":{\"465\":1}}],[\"秉承优雅\",{\"1\":{\"707\":1}}],[\"严格的代码规范\",{\"1\":{\"792\":2}}],[\"严格的\",{\"1\":{\"707\":1}}],[\"严格遵守\",{\"1\":{\"608\":1}}],[\"嵌套调用事务\",{\"1\":{\"706\":1}}],[\"架构调整\",{\"1\":{\"713\":1}}],[\"架构\",{\"0\":{\"713\":1}}],[\"架构全景图\",{\"0\":{\"705\":1},\"1\":{\"705\":1,\"720\":1}}],[\"架构释义\",{\"0\":{\"215\":1}}],[\"合并之后流着泪修改\",{\"1\":{\"792\":1}}],[\"合并了开源之夏两位同学的帮助提示头特性和阈值表达式特性\",{\"1\":{\"460\":1}}],[\"合理的划分功能模块\",{\"1\":{\"704\":1}}],[\"英文站\",{\"1\":{\"693\":1}}],[\"映射到\",{\"1\":{\"693\":2}}],[\"映射翻译直接翻译其他扩展条件翻译\",{\"1\":{\"608\":1}}],[\"伴侣\",{\"1\":{\"693\":1}}],[\"伴随着全球开源项目数量的迅速增长\",{\"1\":{\"11\":1}}],[\"翻译过来是api\",{\"1\":{\"693\":1}}],[\"叫api\",{\"1\":{\"693\":1}}],[\"赶紧升级吧\",{\"1\":{\"697\":1}}],[\"赶紧上号吧\",{\"1\":{\"692\":1}}],[\"赶紧收藏分享起来吧\",{\"1\":{\"11\":1}}],[\"拷贝的代码部分\",{\"1\":{\"720\":1}}],[\"拷贝有\",{\"1\":{\"692\":1}}],[\"拷贝\",{\"1\":{\"683\":1}}],[\"击从列表从选择\",{\"1\":{\"678\":1}}],[\"鼠标悬浮\",{\"1\":{\"678\":1}}],[\"鼠标点一点就能监控告警\",{\"1\":{\"447\":1,\"452\":1,\"464\":1}}],[\"聚合多种\",{\"1\":{\"713\":1}}],[\"聚合所有监控类型\",{\"1\":{\"448\":1}}],[\"聚焦表格后\",{\"1\":{\"677\":1}}],[\"$\",{\"1\":{\"677\":3}}],[\"$invokeasync\",{\"1\":{\"286\":1,\"289\":1}}],[\"$invoke\",{\"1\":{\"286\":2,\"293\":2,\"294\":2}}],[\"寻找配置\",{\"1\":{\"664\":1}}],[\"垂直工具栏支持\",{\"1\":{\"658\":1}}],[\"动画\",{\"1\":{\"644\":1}}],[\"动态高强度加密\",{\"1\":{\"615\":1}}],[\"动态验证码\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"动态线程池框架dynamictp\",{\"0\":{\"408\":1,\"417\":1}}],[\"动态灵活的流量管控\",{\"1\":{\"311\":1}}],[\"跨平台\",{\"1\":{\"642\":1,\"649\":1}}],[\"跨平台桌面软件开发\",{\"0\":{\"636\":1,\"643\":1}}],[\"禅道项目管理\",{\"1\":{\"640\":1,\"647\":1}}],[\"清理加密文件\",{\"1\":{\"637\":1}}],[\"清理系统中独立性较高的模组\",{\"1\":{\"368\":1}}],[\"迅雷网盘等常见存储服务\",{\"1\":{\"808\":1}}],[\"迅雷\",{\"1\":{\"636\":1,\"643\":1}}],[\"百度云\",{\"1\":{\"808\":1}}],[\"百度翻译\",{\"1\":{\"636\":1,\"643\":1}}],[\"百格活动\",{\"1\":{\"14\":1}}],[\"仍然是未来十几年\",{\"1\":{\"636\":1,\"643\":1}}],[\"办公方向\",{\"1\":{\"636\":1,\"643\":1}}],[\"桌面软件\",{\"1\":{\"636\":1,\"643\":1}}],[\"撰写文档等多种方式参与到项目中\",{\"1\":{\"635\":1}}],[\"🎨\",{\"0\":{\"817\":1}}],[\"🏇\",{\"0\":{\"770\":1}}],[\"🎉sms4j\",{\"0\":{\"768\":1}}],[\"🎉\",{\"0\":{\"744\":2,\"768\":1}}],[\"🎊\",{\"0\":{\"743\":1}}],[\"🎊sms4j\",{\"0\":{\"743\":1}}],[\"🏆\",{\"1\":{\"635\":1}}],[\"🌈\",{\"1\":{\"635\":1}}],[\"🌟\",{\"0\":{\"627\":2}}],[\"协作与交流\",{\"1\":{\"635\":1}}],[\"协议连接\",{\"1\":{\"801\":1}}],[\"协议到\",{\"1\":{\"783\":1}}],[\"协议邮箱中收到的邮件\",{\"1\":{\"775\":1}}],[\"协议客户端\",{\"1\":{\"608\":1}}],[\"协议代理\",{\"0\":{\"431\":1},\"1\":{\"431\":1,\"433\":1,\"574\":1}}],[\"协议支持的模式中\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"协议\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2,\"576\":1,\"577\":1,\"608\":2,\"783\":1}}],[\"协议的存储平台\",{\"1\":{\"808\":1}}],[\"协议的互相转换\",{\"1\":{\"783\":1}}],[\"协议的厂家\",{\"1\":{\"608\":1}}],[\"协议的\",{\"1\":{\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"协议的微服务架构\",{\"1\":{\"351\":1}}],[\"协议的分析\",{\"1\":{\"33\":1}}],[\"协议转换\",{\"1\":{\"311\":1}}],[\"协议请求的核心处理插件\",{\"1\":{\"113\":1}}],[\"协议进行数据同步\",{\"1\":{\"112\":1}}],[\"积极沟通\",{\"1\":{\"634\":1}}],[\"团队协作支持\",{\"1\":{\"652\":1}}],[\"团队协作支\",{\"0\":{\"652\":1},\"1\":{\"651\":1}}],[\"团队的每一位成员\",{\"1\":{\"633\":1}}],[\"团结\",{\"1\":{\"23\":1}}],[\"起步时给予巨大支持的伙伴\",{\"1\":{\"633\":1}}],[\"壮大\",{\"1\":{\"633\":1}}],[\"奉献时间和智慧的伙伴们表示衷心感谢\",{\"1\":{\"633\":1}}],[\"奉上\",{\"1\":{\"308\":1}}],[\"迈出了它成长之路的第一步\",{\"1\":{\"633\":1}}],[\"风如歌大佬的鼎力支持\",{\"1\":{\"632\":1}}],[\"跪谢\",{\"1\":{\"632\":1}}],[\"🤝\",{\"1\":{\"635\":1}}],[\"🪲🪲\",{\"1\":{\"631\":2}}],[\"🤙\",{\"1\":{\"499\":1}}],[\"准备数据\",{\"1\":{\"628\":1}}],[\"准备规则处理对象\",{\"1\":{\"224\":1}}],[\"满足大规模物联网设备的调试和管理需求\",{\"1\":{\"794\":1}}],[\"满足不同业务的需求\",{\"1\":{\"727\":1}}],[\"满足多样化的数据格式需求\",{\"1\":{\"628\":1}}],[\"满足数据库操作需求\",{\"1\":{\"628\":1}}],[\"灵活的数据转换处理\",{\"1\":{\"628\":1}}],[\"灵活性\",{\"1\":{\"215\":1}}],[\"亲爱的开发者们\",{\"1\":{\"627\":1}}],[\"节省流量\",{\"1\":{\"624\":1}}],[\"节点信息提取\",{\"1\":{\"340\":1}}],[\"节点的方法\",{\"1\":{\"92\":1}}],[\"节点数据\",{\"1\":{\"92\":1}}],[\"批量导出\",{\"1\":{\"667\":1}}],[\"批量注解鉴权\",{\"1\":{\"624\":1}}],[\"批量删除\",{\"1\":{\"618\":1}}],[\"挂载参数\",{\"1\":{\"624\":1}}],[\"剩余有效期\",{\"1\":{\"624\":1}}],[\"冻结\",{\"1\":{\"624\":1}}],[\"脱离\",{\"1\":{\"814\":1}}],[\"脱敏判断问题\",{\"1\":{\"619\":1}}],[\"脱敏注解标记位置错误\",{\"1\":{\"619\":1}}],[\"脱帽致敬\",{\"1\":{\"308\":1}}],[\"友好的开源社区\",{\"1\":{\"635\":1}}],[\"友好的帮助文档头\",{\"1\":{\"462\":1}}],[\"友杰\",{\"1\":{\"615\":1}}],[\"介于\",{\"1\":{\"612\":1}}],[\"介绍\",{\"0\":{\"185\":1,\"186\":1,\"426\":1,\"447\":1,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"498\":1,\"513\":1}}],[\"介绍以及\",{\"1\":{\"30\":1}}],[\"故而用户可以自己选择使用\",{\"1\":{\"763\":1}}],[\"故而咱们\",{\"1\":{\"612\":1}}],[\"故在这里不在多余讨论\",{\"1\":{\"232\":1}}],[\"历经将近\",{\"1\":{\"612\":1}}],[\"历经\",{\"1\":{\"612\":2}}],[\"历史请求回显问题\",{\"1\":{\"667\":1}}],[\"历史代理数据\",{\"1\":{\"577\":1}}],[\"历史版本\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"历史线程栈\",{\"0\":{\"350\":1}}],[\"必看\",{\"1\":{\"610\":2}}],[\"必须用构造器创建参数对象\",{\"1\":{\"374\":1,\"389\":1}}],[\"必须达到此数量才会计算失败率\",{\"1\":{\"270\":1}}],[\"必须依赖所有的网关配置数据\",{\"1\":{\"208\":1}}],[\"必须需要手动创建命名空间\",{\"1\":{\"208\":1}}],[\"必须具备的能力就是流量分发\",{\"1\":{\"113\":1}}],[\"堆栈\",{\"1\":{\"609\":1}}],[\"磁盘监控\",{\"1\":{\"609\":1}}],[\"磁盘\",{\"1\":{\"609\":1}}],[\"菜单管理\",{\"1\":{\"609\":1}}],[\"菜单名称\",{\"1\":{\"316\":1}}],[\"岗位如果绑定了用户则不允许禁用\",{\"1\":{\"617\":1}}],[\"岗位管理\",{\"1\":{\"609\":1}}],[\"岗位等\",{\"1\":{\"609\":1}}],[\"树表生成前端缺少\",{\"1\":{\"617\":1}}],[\"树结构展现支持数据权限\",{\"1\":{\"609\":1}}],[\"树叶既代表了轻量\",{\"1\":{\"499\":1}}],[\"案例三\",{\"1\":{\"792\":1}}],[\"案例二\",{\"1\":{\"792\":1}}],[\"案例一\",{\"1\":{\"792\":1}}],[\"案例\",{\"1\":{\"608\":1}}],[\"七牛云\",{\"1\":{\"808\":1}}],[\"七牛\",{\"1\":{\"608\":1}}],[\"靠谱\",{\"1\":{\"608\":1}}],[\"唯一\",{\"1\":{\"608\":1}}],[\"唯一默认开启的插件\",{\"1\":{\"113\":1}}],[\"雪花\",{\"1\":{\"608\":1}}],[\"众多操作细节优化\",{\"1\":{\"667\":1}}],[\"众多\",{\"1\":{\"608\":1}}],[\"银行卡等\",{\"1\":{\"608\":1}}],[\"银色版本\",{\"1\":{\"79\":1}}],[\"乐观锁插件等等\",{\"1\":{\"608\":1}}],[\"哨兵\",{\"1\":{\"608\":1}}],[\"哨兵模式集群\",{\"1\":{\"64\":1}}],[\"预览状态修改\",{\"1\":{\"606\":1}}],[\"预热指的是在\",{\"1\":{\"266\":1}}],[\"预热+匀速排队\",{\"1\":{\"266\":1}}],[\"预热\",{\"1\":{\"266\":1}}],[\"预热启动的方式是让阈值缓慢增加\",{\"1\":{\"263\":1}}],[\"预热启动\",{\"1\":{\"263\":1}}],[\"栏\",{\"1\":{\"606\":1}}],[\"临时有效期\",{\"1\":{\"624\":1}}],[\"临时表没有原来的主键顺序\",{\"1\":{\"606\":1}}],[\"临时服务散列表\",{\"1\":{\"225\":1}}],[\"忽略校验\",{\"1\":{\"608\":1}}],[\"忽略数据权限写法\",{\"1\":{\"605\":1}}],[\"忽略扁平化的\",{\"1\":{\"316\":1}}],[\"滚动条采用\",{\"1\":{\"604\":1}}],[\"踢掉角色相关所有在线用户\",{\"1\":{\"604\":1}}],[\"样式\",{\"1\":{\"604\":1,\"822\":1}}],[\"外盘老虎证券网关对接\",{\"1\":{\"599\":1}}],[\"外层调用会包装到\",{\"1\":{\"180\":1}}],[\"外层调用仅需迭代所有\",{\"1\":{\"173\":1}}],[\"币安\",{\"1\":{\"599\":1}}],[\"偶尔可能出现的模组开仓时找不到合约导致的空指针问题\",{\"1\":{\"597\":1}}],[\"资金曲线加入手续费扣减\",{\"1\":{\"597\":1}}],[\"资源绑定关系\",{\"1\":{\"557\":1}}],[\"资源\",{\"1\":{\"316\":1}}],[\"资源文件的路径位置\",{\"1\":{\"176\":1}}],[\"资源文件\",{\"1\":{\"172\":1,\"180\":1,\"183\":1}}],[\"资源文件中我们配置的信息\",{\"1\":{\"179\":1}}],[\"资源文件中\",{\"1\":{\"170\":1}}],[\"资源文件中的各个实现类没有区分度\",{\"1\":{\"168\":1}}],[\"敬请期待\",{\"0\":{\"595\":1},\"1\":{\"765\":1}}],[\"敬请关注\",{\"1\":{\"15\":1}}],[\"盈富量化平台作者\",{\"1\":{\"593\":1,\"599\":1}}],[\"盈富量化平台从\",{\"0\":{\"589\":1}}],[\"卖个关子\",{\"1\":{\"593\":1}}],[\"策略编写的难易度\",{\"1\":{\"590\":1}}],[\"策略实盘运行\",{\"0\":{\"593\":1},\"1\":{\"589\":1}}],[\"策略模拟运行\",{\"0\":{\"592\":1},\"1\":{\"589\":1}}],[\"策略回测\",{\"0\":{\"591\":1},\"1\":{\"589\":1}}],[\"策略研发的关键在于\",{\"1\":{\"590\":1}}],[\"策略研发\",{\"0\":{\"590\":1},\"1\":{\"589\":1}}],[\"务求把基础架构打牢\",{\"0\":{\"589\":1}}],[\"问\",{\"1\":{\"789\":4}}],[\"问就是懒\",{\"1\":{\"764\":1}}],[\"问过我\",{\"1\":{\"764\":1}}],[\"问世以来\",{\"0\":{\"589\":1}}],[\"问题修复\",{\"0\":{\"606\":1,\"776\":1,\"835\":1}}],[\"问题省略\",{\"1\":{\"493\":1}}],[\"问题\",{\"0\":{\"110\":1},\"1\":{\"421\":1,\"604\":1,\"606\":1,\"724\":1,\"809\":1}}],[\"笔者时间\",{\"1\":{\"587\":1}}],[\"刷新页面\",{\"1\":{\"585\":1}}],[\"刷新令牌的时间间隔为1s\",{\"1\":{\"271\":1}}],[\"刷新令牌的时间间隔为\",{\"1\":{\"271\":1}}],[\"刷新令牌的时间间隔\",{\"1\":{\"270\":1}}],[\"细节可看文档\",{\"1\":{\"608\":1}}],[\"细节请通过官网或结尾微信二维码加我备注\",{\"1\":{\"578\":1}}],[\"细化告警配置\",{\"1\":{\"420\":1}}],[\"免去你的后顾之忧\",{\"1\":{\"577\":1}}],[\"免费使用不是白嫖\",{\"1\":{\"456\":1}}],[\"独占端口\",{\"1\":{\"577\":1}}],[\"独立了线程调度\",{\"1\":{\"790\":1}}],[\"独立实现了分布式配置中心的功能\",{\"1\":{\"790\":1}}],[\"独立成插件支持\",{\"1\":{\"787\":1}}],[\"独立\",{\"1\":{\"518\":1}}],[\"独立方法需要自己按需组合\",{\"1\":{\"374\":1,\"389\":1}}],[\"独立出一个启动项目\",{\"1\":{\"161\":1}}],[\"凭证类型选\",{\"1\":{\"567\":1}}],[\"市\",{\"1\":{\"567\":1}}],[\"徐晓伟\",{\"1\":{\"557\":1}}],[\"徐培\",{\"1\":{\"308\":1}}],[\"界面内更快更高效得调试你的\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"界面\",{\"0\":{\"527\":1,\"533\":1,\"539\":1,\"545\":1,\"555\":1,\"565\":1}}],[\"界面管理\",{\"1\":{\"461\":1}}],[\"许可证\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"许伟超\",{\"1\":{\"308\":1}}],[\"扫码登录\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"扫描\",{\"1\":{\"220\":1}}],[\"扫描框架的包\",{\"1\":{\"74\":1}}],[\"域名的自动切换\",{\"1\":{\"664\":1}}],[\"域名映射\",{\"1\":{\"577\":1}}],[\"域名映射支持\",{\"1\":{\"574\":1}}],[\"域控\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"域\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"域认证\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"双因素认证\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"双重锁\",{\"1\":{\"183\":1}}],[\"序列化方式\",{\"1\":{\"778\":1}}],[\"序列化配置\",{\"1\":{\"615\":1}}],[\"序列化\",{\"1\":{\"608\":1}}],[\"序列化期间动态修改数据\",{\"1\":{\"608\":1}}],[\"序列化期间脱敏\",{\"1\":{\"608\":1}}],[\"序列化工具\",{\"1\":{\"411\":1}}],[\"序号\",{\"1\":{\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2}}],[\"邮箱监听开启后可以监听指定配置下的邮箱\",{\"1\":{\"775\":1}}],[\"邮箱监听可以监听到某个\",{\"1\":{\"775\":1}}],[\"邮箱监听\",{\"0\":{\"775\":1}}],[\"邮箱登录\",{\"1\":{\"619\":1}}],[\"邮箱登陆接口\",{\"1\":{\"605\":1}}],[\"邮箱验证码发送接口\",{\"1\":{\"605\":1}}],[\"邮箱\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"608\":1}}],[\"邮件发送时\",{\"1\":{\"776\":1}}],[\"邮件发送插件\",{\"1\":{\"765\":1}}],[\"邮件插件去除了先前版本中过多的重载方法\",{\"1\":{\"774\":1}}],[\"邮件插件在这次的更新中也得到了很大的优化\",{\"1\":{\"774\":1}}],[\"邮件插件\",{\"0\":{\"774\":1}}],[\"邮件等等\",{\"1\":{\"764\":1}}],[\"邮件discordslacktelegram钉钉微信飞书短信webhook\",{\"1\":{\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"邮件报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"邮件\",{\"1\":{\"53\":1,\"449\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":1}}],[\"身份认证\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"身份管理和认证产品\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"身份管理和身份认证产品\",{\"1\":{\"4\":1}}],[\"谐音马克思的钥匙寓意是最大钥匙\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"概述\",{\"0\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"检测链路的循环依赖问题\",{\"1\":{\"522\":1}}],[\"检查服务器响应\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"检查服务活性\",{\"1\":{\"227\":2}}],[\"检查这个调用是否是泛化调用\",{\"1\":{\"293\":1}}],[\"检查\",{\"1\":{\"228\":1}}],[\"检查url是否为ip+端口格式\",{\"1\":{\"228\":1}}],[\"检查各服务活性并登记存活的服务\",{\"1\":{\"227\":1}}],[\"检查上下文中的请求路径\",{\"1\":{\"129\":1}}],[\"检查soul\",{\"1\":{\"101\":1}}],[\"便于在测试流程中重复使用\",{\"1\":{\"628\":1}}],[\"便于后续功能的扩展和代码的复用\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"便会走到用\",{\"1\":{\"519\":1}}],[\"便开启了降级特性\",{\"1\":{\"519\":1}}],[\"链接\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"链接进行申请\",{\"1\":{\"5\":1}}],[\"链路追踪\",{\"1\":{\"608\":1}}],[\"链路时\",{\"1\":{\"521\":1}}],[\"链路可以继承\",{\"1\":{\"518\":1}}],[\"链路继承\",{\"0\":{\"518\":1}}],[\"截止到新版本\",{\"1\":{\"514\":1}}],[\"尤其这个版本又有\",{\"1\":{\"514\":1}}],[\"尤其是逻辑方面的\",{\"1\":{\"77\":1}}],[\"算术\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"算有一定的使用限制\",{\"1\":{\"503\":1}}],[\"算法\",{\"1\":{\"241\":1,\"315\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"算法处理如下\",{\"1\":{\"229\":1}}],[\"算法的负载均衡\",{\"1\":{\"133\":1}}],[\"订阅模式非常实时\",{\"1\":{\"503\":1}}],[\"订阅器的\",{\"1\":{\"162\":1}}],[\"订阅器\",{\"1\":{\"161\":1}}],[\"远近闻名\",{\"1\":{\"608\":1}}],[\"远离黑暗\",{\"1\":{\"501\":1}}],[\"远程调用两种模式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"逐光而行\",{\"1\":{\"501\":2}}],[\"象征流程的分叉\",{\"1\":{\"499\":1}}],[\"象征着编排\",{\"1\":{\"499\":1}}],[\"象征着\",{\"1\":{\"499\":1}}],[\"叶脉简单且延展开\",{\"1\":{\"499\":1}}],[\"叶子里的叶脉是一个\",{\"1\":{\"499\":1}}],[\"释放氧气\",{\"1\":{\"499\":1}}],[\"寓意\",{\"1\":{\"499\":1}}],[\"寓意本项目会像恩格斯对但丁的评价一样\",{\"1\":{\"352\":1}}],[\"带来更多创新和功能\",{\"1\":{\"634\":1}}],[\"带来了全新的\",{\"1\":{\"499\":1}}],[\"带着exchange\",{\"1\":{\"288\":1}}],[\"带着问题读源码\",{\"0\":{\"246\":1}}],[\"带着对开源的探索和求知之心\",{\"1\":{\"36\":1}}],[\"质量有保障\",{\"1\":{\"497\":1,\"513\":1}}],[\"系列的主旋律将围绕着元数据增强进行展开\",{\"1\":{\"493\":1}}],[\"系列的最后一个版本了\",{\"1\":{\"493\":1}}],[\"系统环境\",{\"0\":{\"796\":1}}],[\"系统\",{\"1\":{\"675\":1,\"783\":2}}],[\"系统的一些功能案例\",{\"1\":{\"609\":1}}],[\"系统接口\",{\"1\":{\"609\":1}}],[\"系统文件上传\",{\"1\":{\"609\":1}}],[\"系统文件展示\",{\"1\":{\"609\":1}}],[\"系统登录日志记录查询包含登录异常\",{\"1\":{\"609\":1}}],[\"系统异常信息日志记录和查询\",{\"1\":{\"609\":1}}],[\"系统正常操作日志记录和查询\",{\"1\":{\"609\":1}}],[\"系统通知公告信息发布维护\",{\"1\":{\"609\":1}}],[\"系统默认会以\",{\"1\":{\"491\":1}}],[\"系统难于维护\",{\"1\":{\"396\":1}}],[\"系统使用时可根据使用需求\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"系统自适应保护等多个维度来帮助您保障微服务的稳定性\",{\"1\":{\"264\":1}}],[\"系统又在很极端的情况下\",{\"1\":{\"69\":1}}],[\"系统运行脚本获取回显\",{\"1\":{\"54\":1}}],[\"忘记填写\",{\"1\":{\"492\":1}}],[\"忘忧\",{\"1\":{\"308\":1}}],[\"级别打出所有的节点的耗时信息\",{\"1\":{\"491\":1}}],[\"级别过滤\",{\"1\":{\"55\":1}}],[\"布尔表达式中\",{\"0\":{\"489\":1}}],[\"联系方式\",{\"1\":{\"806\":1}}],[\"联系我们\",{\"0\":{\"10\":1,\"587\":1},\"1\":{\"5\":1}}],[\"联动的关键注解\",{\"1\":{\"485\":1}}],[\"甚至于测试用例成为了和核心代码一样重要的存在\",{\"1\":{\"484\":1}}],[\"甚至于我们还考虑到了多数据源的场景\",{\"1\":{\"483\":1}}],[\"甚至直接使用\",{\"1\":{\"374\":1,\"389\":1}}],[\"遍\",{\"1\":{\"483\":1}}],[\"遍历每个参数\",{\"1\":{\"293\":1}}],[\"遍历所有的监听类对监听事件进行处理\",{\"1\":{\"209\":1}}],[\"遍历所有的监听者进行数据同步处理\",{\"1\":{\"200\":1}}],[\"遍历\",{\"1\":{\"144\":1}}],[\"覆盖率\",{\"1\":{\"514\":1}}],[\"覆盖\",{\"1\":{\"469\":1}}],[\"覆写了\",{\"1\":{\"156\":1}}],[\"距离上次发版已经有一个多月了\",{\"1\":{\"469\":1}}],[\"抬头看路\",{\"0\":{\"469\":1}}],[\"托管仓库\",{\"1\":{\"467\":2,\"473\":2,\"480\":2,\"497\":2,\"513\":2}}],[\"稳定可靠的服务\",{\"1\":{\"794\":1}}],[\"稳定性\",{\"1\":{\"717\":1}}],[\"稳定性版本\",{\"0\":{\"601\":1}}],[\"稳定性提示\",{\"1\":{\"461\":1}}],[\"稳定版\",{\"1\":{\"79\":1}}],[\"稳定版又称为生产版本\",{\"1\":{\"79\":1}}],[\"见\",{\"1\":{\"461\":1,\"593\":1}}],[\"见下图\",{\"1\":{\"92\":1}}],[\"国人在开源方面\",{\"1\":{\"792\":1}}],[\"国产\",{\"1\":{\"639\":1,\"646\":1}}],[\"国产开源\",{\"1\":{\"308\":1}}],[\"国产开源牛逼\",{\"1\":{\"308\":1}}],[\"国产开源蒸蒸日上\",{\"1\":{\"308\":1}}],[\"国际化\",{\"1\":{\"608\":1}}],[\"国际化资源\",{\"1\":{\"461\":1}}],[\"国内新一代的规则引擎\",{\"0\":{\"496\":1}}],[\"课题\",{\"1\":{\"461\":1}}],[\"比较意外的是\",{\"1\":{\"469\":1}}],[\"比起上一版本有了更优雅的通讯代码\",{\"1\":{\"460\":1}}],[\"比如你可以自定义的开发你的插件啊\",{\"1\":{\"785\":1}}],[\"比如你有一个\",{\"1\":{\"783\":1}}],[\"比如支持文件上传下载\",{\"1\":{\"785\":1}}],[\"比如支持\",{\"1\":{\"785\":1}}],[\"比如签名\",{\"1\":{\"783\":1}}],[\"比如企业微信\",{\"1\":{\"764\":1}}],[\"比如请求的\",{\"1\":{\"750\":1}}],[\"比如集群这一技术特性天生会吸引到开发者\",{\"1\":{\"456\":1}}],[\"比如我们这个项目有大量的运维朋友贡献代码和文档\",{\"1\":{\"456\":1}}],[\"比如按照我们的机器数量及\",{\"1\":{\"406\":1}}],[\"比如\",{\"1\":{\"62\":1,\"130\":1,\"131\":1,\"162\":1,\"163\":1,\"179\":2,\"456\":1,\"783\":2,\"791\":1}}],[\"比如在实际使用\",{\"1\":{\"47\":1}}],[\"哈喽大家好\",{\"1\":{\"460\":1}}],[\"哈哈\",{\"1\":{\"308\":2}}],[\"哈哈~\",{\"1\":{\"122\":1}}],[\"玩的开心哈\",{\"1\":{\"456\":1}}],[\"受欢迎\",{\"1\":{\"456\":1}}],[\"程序无需任何更改\",{\"1\":{\"790\":1}}],[\"程序员等等\",{\"1\":{\"783\":1}}],[\"程序员\",{\"1\":{\"783\":2,\"791\":2}}],[\"程序员的梦想能部署在成千上万的服务器上\",{\"1\":{\"456\":1}}],[\"程序的性能\",{\"1\":{\"84\":1}}],[\"觉得它们是伪开源\",{\"1\":{\"456\":1}}],[\"往往一些做需要商业化的开源产品的策略会是单机版作为玩具给小玩家们的入门使用\",{\"1\":{\"456\":1}}],[\"采集任务一致性\",{\"1\":{\"460\":1}}],[\"采集数据上报\",{\"1\":{\"455\":1}}],[\"采集器集群的\",{\"1\":{\"461\":1}}],[\"采集器集群调度\",{\"1\":{\"461\":1}}],[\"采集器在隔离网络内部进行监控任务采集\",{\"1\":{\"455\":1}}],[\"采集器独立部署\",{\"1\":{\"453\":1}}],[\"采用先进的加密算法\",{\"1\":{\"803\":1}}],[\"采用了自研的\",{\"1\":{\"803\":1}}],[\"采用只读模式\",{\"1\":{\"723\":1}}],[\"采用插件式架构满足了根网科技的私有协议需求\",{\"1\":{\"633\":1}}],[\"采用插件化\",{\"1\":{\"608\":1}}],[\"采用最为宽松的\",{\"1\":{\"577\":1}}],[\"采用最简化参数方便传输并可准确转换成对应\",{\"1\":{\"374\":1,\"389\":1}}],[\"采用领域驱动设计\",{\"0\":{\"382\":1,\"396\":1}}],[\"采用一个基于\",{\"1\":{\"373\":1,\"388\":1}}],[\"采用更易理解和使用的格式对\",{\"1\":{\"372\":1,\"387\":1}}],[\"采用分布式服务独立鉴权方案\",{\"1\":{\"357\":1}}],[\"采用分布式鉴权方案\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"采用线程池异步去执行\",{\"1\":{\"67\":1}}],[\"采用\",{\"0\":{\"66\":1,\"366\":1,\"381\":1},\"1\":{\"174\":1,\"366\":1,\"381\":1,\"395\":1,\"402\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":37,\"723\":1}}],[\"采用售票制\",{\"1\":{\"13\":1}}],[\"爱心\",{\"1\":{\"448\":1,\"458\":1}}],[\"零零总总还有很多其他功能\",{\"0\":{\"785\":1}}],[\"零侵入方式的引入\",{\"1\":{\"700\":1}}],[\"零上手学习成本\",{\"1\":{\"447\":1,\"452\":1,\"464\":1}}],[\"零额外学习成本\",{\"1\":{\"370\":1,\"385\":1}}],[\"证书\",{\"1\":{\"445\":1,\"577\":1}}],[\"⛄\",{\"0\":{\"445\":1,\"449\":1,\"459\":1}}],[\"⚠️\",{\"0\":{\"444\":1}}],[\"📦\",{\"0\":{\"813\":1}}],[\"📜\",{\"0\":{\"809\":1}}],[\"💡\",{\"1\":{\"808\":1}}],[\"📚\",{\"0\":{\"808\":1}}],[\"🔨\",{\"0\":{\"776\":1,\"815\":1}}],[\"📩\",{\"0\":{\"775\":1}}],[\"📧\",{\"0\":{\"774\":1}}],[\"📀\",{\"0\":{\"751\":2}}],[\"🔧\",{\"0\":{\"750\":2,\"771\":1,\"814\":1}}],[\"📣\",{\"1\":{\"742\":1}}],[\"🐞bug\",{\"0\":{\"724\":1}}],[\"🐣\",{\"0\":{\"723\":1}}],[\"🚀\",{\"0\":{\"769\":1},\"1\":{\"635\":1}}],[\"🙇\",{\"1\":{\"632\":2}}],[\"📅\",{\"1\":{\"631\":1,\"632\":1,\"633\":1}}],[\"😂\",{\"1\":{\"456\":1}}],[\"💗\",{\"1\":{\"448\":1,\"458\":1}}],[\"👍👍\",{\"1\":{\"442\":1,\"631\":2}}],[\"🐶\",{\"1\":{\"308\":1}}],[\"赫兹跳动\",{\"1\":{\"441\":1,\"447\":1,\"451\":1,\"463\":1}}],[\"报表管理多维度流量监控\",{\"1\":{\"577\":1}}],[\"报错\",{\"1\":{\"438\":1}}],[\"报名成功的邮件中\",{\"1\":{\"13\":1}}],[\"绑定到您自定义的\",{\"1\":{\"426\":1}}],[\"绑定您在报名系统中输入的手机号码\",{\"1\":{\"14\":1}}],[\"丰富的脚本语言支持是\",{\"1\":{\"502\":1}}],[\"丰富元数据\",{\"1\":{\"469\":1}}],[\"丰富\",{\"1\":{\"413\":1}}],[\"美团云\",{\"1\":{\"808\":1}}],[\"美团内部已经有该理论成熟的应用经验\",{\"1\":{\"409\":1,\"419\":1}}],[\"美滋滋\",{\"1\":{\"783\":1}}],[\"美观\",{\"1\":{\"40\":1}}],[\"普通组件iscontinueonerror和isend为true时\",{\"1\":{\"522\":1}}],[\"普通线程池和\",{\"1\":{\"409\":1,\"419\":1}}],[\"普通流式上传\",{\"1\":{\"397\":1}}],[\"顺便做了小重构\",{\"1\":{\"720\":1}}],[\"顺利\",{\"1\":{\"409\":1,\"419\":1}}],[\"顺序\",{\"1\":{\"266\":1}}],[\"步就可完成\",{\"1\":{\"409\":1,\"419\":1}}],[\"步行约\",{\"1\":{\"12\":1}}],[\"✅\",{\"1\":{\"409\":1,\"628\":8}}],[\"简化为\",{\"1\":{\"694\":1}}],[\"简化包名\",{\"1\":{\"624\":1}}],[\"简化线程池配置\",{\"1\":{\"617\":1}}],[\"简化\",{\"0\":{\"694\":1},\"1\":{\"617\":1,\"692\":1}}],[\"简化微软\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"简介\",{\"0\":{\"409\":1,\"418\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1,\"808\":1,\"831\":1}}],[\"简单易用金融级的分布式事务解决方案\",{\"1\":{\"707\":1}}],[\"简单易懂原则\",{\"1\":{\"707\":1}}],[\"简单\",{\"1\":{\"608\":1,\"636\":1,\"643\":1}}],[\"简单且好记\",{\"1\":{\"500\":1}}],[\"简单的栗子\",{\"0\":{\"428\":1}}],[\"简单的说就是当我们探测的一个服务出现了异常\",{\"1\":{\"264\":1}}],[\"简单的说就是\",{\"1\":{\"195\":1}}],[\"简单使用\",{\"0\":{\"324\":1}}],[\"简单看下\",{\"1\":{\"136\":1}}],[\"简单介绍下\",{\"1\":{\"125\":1}}],[\"简单对直连和使用网关两种方式的请求进行压测\",{\"1\":{\"109\":1}}],[\"沟通交流\",{\"1\":{\"407\":1}}],[\"假如我们先存储一条数据\",{\"1\":{\"792\":1}}],[\"假如我们的这几台机器资源需要临时做其它的事情\",{\"1\":{\"406\":1}}],[\"假如某一个模块接口的请求量很大\",{\"1\":{\"791\":1}}],[\"假如你是公司架构师\",{\"1\":{\"783\":1}}],[\"假设后面步骤不进行\",{\"1\":{\"135\":1}}],[\"宕机异常后的重新启动任务时会读取这份快照数据\",{\"1\":{\"406\":1}}],[\"宕机续读\",{\"1\":{\"321\":1}}],[\"难道再从头开始统计吗\",{\"1\":{\"406\":1}}],[\"难道不应该是\",{\"1\":{\"252\":1}}],[\"库提供的素性检验\",{\"1\":{\"406\":1}}],[\"素性检验\",{\"1\":{\"406\":1}}],[\"黎曼猜想中可知质数分布是大体均匀的\",{\"1\":{\"406\":1}}],[\"决定拆分为\",{\"1\":{\"406\":1}}],[\"密送人\",{\"1\":{\"774\":1}}],[\"密集型场景使用的线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"密集型\",{\"1\":{\"406\":1}}],[\"密码随便填都能通过\",{\"1\":{\"541\":1}}],[\"密码自助服务重置密码\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"密码\",{\"1\":{\"100\":1,\"333\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"788\":1}}],[\"统计页面加入了版本号\",{\"0\":{\"697\":1},\"1\":{\"692\":1}}],[\"统计在\",{\"1\":{\"406\":1}}],[\"统一改为\",{\"1\":{\"774\":1}}],[\"统一接口\",{\"1\":{\"624\":1}}],[\"统一处理\",{\"1\":{\"617\":1,\"644\":1}}],[\"统一的认证在哪里做\",{\"1\":{\"791\":1}}],[\"统一的管理中心\",{\"1\":{\"608\":1}}],[\"统一的新版配置\",{\"1\":{\"397\":1}}],[\"统一管理\",{\"1\":{\"448\":1}}],[\"统一管理依赖\",{\"1\":{\"411\":1}}],[\"统一封装管理\",{\"1\":{\"422\":1}}],[\"统一鉴权的压力以及重复鉴权问题\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"广播任务等能力\",{\"1\":{\"405\":1}}],[\"补充可外部化配置的\",{\"1\":{\"397\":1}}],[\"补充\",{\"1\":{\"397\":1}}],[\"补充上下文中请求头\",{\"1\":{\"136\":1}}],[\"潜移默化地将过往项目建设的经验教训融入其中\",{\"1\":{\"396\":1}}],[\"欠缺优化迭代\",{\"1\":{\"396\":1}}],[\"足以让我体会\",{\"1\":{\"396\":1}}],[\"出现的\",{\"1\":{\"778\":1}}],[\"出现\",{\"1\":{\"604\":1}}],[\"出现了一些问题\",{\"1\":{\"482\":1}}],[\"出现标红问题\",{\"1\":{\"383\":1}}],[\"出台正式的规则\",{\"1\":{\"306\":1}}],[\"声明组件增加nodename的定义\",{\"1\":{\"492\":1}}],[\"声明式组件支持了声明nodename\",{\"1\":{\"486\":1}}],[\"声明式\",{\"0\":{\"432\":1}}],[\"声明式接口\",{\"1\":{\"428\":1}}],[\"声明文件\",{\"1\":{\"374\":1,\"389\":1}}],[\"声明为\",{\"1\":{\"259\":1}}],[\"互转\",{\"1\":{\"374\":1,\"389\":1,\"397\":1}}],[\"互相帮助\",{\"1\":{\"334\":1}}],[\"涵盖\",{\"1\":{\"373\":1,\"388\":1}}],[\"校验地址配错时\",{\"1\":{\"624\":1}}],[\"校验框架\",{\"1\":{\"608\":1}}],[\"校验\",{\"1\":{\"372\":1,\"374\":1,\"387\":1,\"389\":1,\"608\":1}}],[\"校验配置信息\",{\"1\":{\"273\":1}}],[\"隐藏图层\",{\"1\":{\"828\":1}}],[\"隐藏\",{\"1\":{\"372\":1,\"387\":1}}],[\"隐藏类和动态类文件\",{\"1\":{\"79\":1}}],[\"均在\",{\"1\":{\"612\":1}}],[\"均开源免费可商用\",{\"1\":{\"607\":1}}],[\"均采用业内最优解决方案进行实现和融合\",{\"1\":{\"370\":1,\"385\":1}}],[\"均用\",{\"1\":{\"283\":1}}],[\"屏蔽\",{\"1\":{\"370\":1,\"385\":1,\"617\":1}}],[\"环境\",{\"1\":{\"814\":1}}],[\"环境多样性\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"环境中跑起来\",{\"1\":{\"482\":1}}],[\"环境仅需一条命令即可开始\",{\"1\":{\"457\":1,\"465\":1}}],[\"环境标准方式对原有\",{\"1\":{\"370\":1,\"385\":1}}],[\"环境下\",{\"1\":{\"368\":1,\"383\":1}}],[\"环境配置\",{\"0\":{\"93\":1}}],[\"融合\",{\"1\":{\"367\":1,\"382\":1}}],[\"影响各个部分的专注和专业程度\",{\"1\":{\"367\":1,\"382\":1}}],[\"影响代码编译\",{\"1\":{\"367\":1,\"382\":1}}],[\"却融入在一个庞大的架构环境中\",{\"1\":{\"367\":1,\"382\":1}}],[\"面面俱到\",{\"1\":{\"367\":1,\"382\":1}}],[\"面向对象等特性\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"面向企业级应用和互联网应用设计开发\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"面向接口代理的高性能\",{\"1\":{\"277\":1}}],[\"面向\",{\"1\":{\"4\":1}}],[\"降低运营成本\",{\"1\":{\"794\":1}}],[\"降低运维成本\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"降低用户使用难度\",{\"1\":{\"617\":1}}],[\"降低\",{\"1\":{\"608\":1}}],[\"降低开发者门槛\",{\"1\":{\"370\":1,\"385\":1}}],[\"降低现有工程代码复杂度\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"降级\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"降级处理的uri\",{\"1\":{\"270\":1}}],[\"形状\",{\"1\":{\"820\":1}}],[\"形成以\",{\"1\":{\"367\":1,\"382\":1}}],[\"形成共享模块\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"形式导入解析错乱\",{\"1\":{\"692\":1}}],[\"形式\",{\"1\":{\"397\":1}}],[\"形式为\",{\"1\":{\"183\":1}}],[\"形式的\",{\"1\":{\"177\":1}}],[\"形式保存在\",{\"1\":{\"125\":1}}],[\"适应性和灵活性\",{\"1\":{\"803\":1}}],[\"适配终于添加了\",{\"1\":{\"757\":1}}],[\"适配正式支持\",{\"1\":{\"754\":1}}],[\"适配\",{\"0\":{\"757\":1},\"1\":{\"617\":1}}],[\"适当增加冗余重复配置\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"适用于测试和基准测试等场景\",{\"1\":{\"83\":1}}],[\"授权确认页面\",{\"1\":{\"360\":1}}],[\"授权码模式登录采用数据加密传输\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"授权码模式登录认证页面和授权确认页面\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"授权码模式\",{\"1\":{\"356\":1}}],[\"产品特性\",{\"0\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"产品生态\",{\"1\":{\"367\":1,\"382\":1,\"456\":1}}],[\"产品\",{\"1\":{\"360\":1}}],[\"输入框\",{\"1\":{\"694\":1}}],[\"输入参数\",{\"0\":{\"689\":1},\"1\":{\"683\":1}}],[\"输入受限终端或硬件的身份验证和授权非常有用\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"输出\",{\"1\":{\"608\":1}}],[\"输出日志\",{\"1\":{\"271\":1}}],[\"允许对el中的每⼀个组件设置超时时间控制\",{\"1\":{\"509\":1}}],[\"允许各类终端或硬件完成认证登录流程\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"允许在接口中定义\",{\"1\":{\"81\":1}}],[\"专为私有化部署而设计\",{\"1\":{\"831\":1}}],[\"专栏与视频\",{\"1\":{\"610\":1}}],[\"专有的一类\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"专门用于图片合成的工具\",{\"1\":{\"4\":1}}],[\"验证密码\",{\"1\":{\"433\":1}}],[\"验证用户名\",{\"1\":{\"433\":1}}],[\"验证\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"验证sentinel插件的配置信息\",{\"1\":{\"266\":1}}],[\"配合\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"配置参数的变化\",{\"0\":{\"811\":1}}],[\"配置状态错误\",{\"1\":{\"776\":1}}],[\"配置等形式\",{\"1\":{\"771\":1}}],[\"配置方式变更\",{\"0\":{\"771\":1}}],[\"配置方式\",{\"1\":{\"755\":1}}],[\"配置启用值\",{\"1\":{\"741\":1}}],[\"配置启用标识字段\",{\"1\":{\"741\":1}}],[\"配置启动\",{\"1\":{\"74\":1}}],[\"配置所在字段\",{\"1\":{\"741\":1}}],[\"配置所在表名\",{\"1\":{\"741\":1}}],[\"配置下概率性无法获取数据库链接问题\",{\"1\":{\"735\":1}}],[\"配置下来感觉使用\",{\"1\":{\"208\":1}}],[\"配置问题\",{\"0\":{\"735\":1}}],[\"配置更加灵活\",{\"1\":{\"727\":1}}],[\"配置动态刷新功能\",{\"1\":{\"716\":1}}],[\"配置模块\",{\"1\":{\"713\":1,\"714\":1,\"716\":1}}],[\"配置负载方式为\",{\"1\":{\"702\":1}}],[\"配置线程池策略的问题\",{\"1\":{\"700\":1}}],[\"配置示例\",{\"1\":{\"624\":1}}],[\"配置项\",{\"1\":{\"624\":1}}],[\"配置系统菜单\",{\"1\":{\"609\":1}}],[\"配置系统用户所属担任职务\",{\"1\":{\"609\":1}}],[\"配置系统组织机构\",{\"1\":{\"609\":1}}],[\"配置好厂家密钥即可使用\",{\"1\":{\"608\":1}}],[\"配置众多繁琐性能一般\",{\"1\":{\"608\":1}}],[\"配置简单\",{\"1\":{\"608\":1}}],[\"配置简单灵活\",{\"1\":{\"65\":1}}],[\"配置繁琐\",{\"1\":{\"608\":1}}],[\"配置繁琐扩展性极差\",{\"1\":{\"608\":1}}],[\"配置即可动态管理异构不同种类的数据库\",{\"1\":{\"608\":1}}],[\"配置的变更\",{\"1\":{\"709\":1}}],[\"配置的端口映射重的服务端端口\",{\"1\":{\"586\":1}}],[\"配置的热部署\",{\"1\":{\"247\":1}}],[\"配置化的密码策略\",{\"1\":{\"554\":1,\"564\":1}}],[\"配置连接主\",{\"1\":{\"457\":2,\"465\":2}}],[\"配置此采集器的唯一性标识符名称\",{\"1\":{\"457\":1,\"465\":1}}],[\"配置中心支持\",{\"1\":{\"714\":1}}],[\"配置中心上\",{\"1\":{\"709\":2}}],[\"配置中心\",{\"1\":{\"409\":1,\"419\":1}}],[\"配置变更通知\",{\"1\":{\"409\":1,\"419\":1}}],[\"配置失效导致启动错误的问题\",{\"1\":{\"368\":1}}],[\"配置为\",{\"1\":{\"325\":1}}],[\"配置为第三方\",{\"1\":{\"253\":1}}],[\"配置选项的开关\",{\"1\":{\"281\":1}}],[\"配置选择器和规则器\",{\"0\":{\"190\":1}}],[\"配置阈值\",{\"1\":{\"266\":1}}],[\"配置自定义路径时\",{\"1\":{\"257\":1}}],[\"配置以\",{\"1\":{\"253\":1}}],[\"配置后立即生效的\",{\"0\":{\"247\":1}}],[\"配置过程遇到了很多坑\",{\"1\":{\"208\":1}}],[\"配置向容器中注入\",{\"1\":{\"205\":1}}],[\"配置信息序列化方式支持自定义扩展\",{\"1\":{\"778\":1}}],[\"配置信息\",{\"1\":{\"200\":1}}],[\"配置文件中添加以下基础配置\",{\"1\":{\"814\":1}}],[\"配置文件中新增\",{\"1\":{\"702\":1}}],[\"配置文件更新后\",{\"1\":{\"655\":1}}],[\"配置文件\",{\"0\":{\"759\":1},\"1\":{\"644\":1,\"822\":1}}],[\"配置文件参见conf下\",{\"1\":{\"529\":1}}],[\"配置文件解析逻辑\",{\"1\":{\"664\":1}}],[\"配置文件解析\",{\"1\":{\"409\":1,\"419\":1}}],[\"配置文件转化的bean\",{\"1\":{\"200\":1}}],[\"配置文件可以使用默认的\",{\"1\":{\"116\":1}}],[\"配置文件可以看到\",{\"1\":{\"112\":1}}],[\"配置环境等\",{\"1\":{\"628\":1}}],[\"配置环境\",{\"0\":{\"198\":1}}],[\"配置要建立连接的后台路径\",{\"1\":{\"161\":1}}],[\"配置关键\",{\"1\":{\"141\":1}}],[\"配置\",{\"0\":{\"140\":1,\"280\":1,\"281\":1,\"282\":1,\"772\":1,\"814\":1},\"1\":{\"276\":3,\"313\":1,\"316\":1,\"325\":1,\"326\":1,\"351\":1,\"358\":1,\"363\":1,\"367\":1,\"377\":1,\"382\":1,\"392\":1,\"396\":1,\"397\":2,\"709\":1,\"771\":1}}],[\"配置类\",{\"1\":{\"130\":1}}],[\"配置如下\",{\"1\":{\"64\":3,\"313\":1}}],[\"利用\",{\"1\":{\"357\":1,\"364\":1,\"366\":1,\"378\":1,\"381\":1,\"393\":1,\"400\":1,\"653\":1}}],[\"利用的是\",{\"1\":{\"145\":1}}],[\"混合国密\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"几位成员\",{\"1\":{\"720\":1}}],[\"几乎就是\",{\"1\":{\"783\":1}}],[\"几乎和\",{\"1\":{\"517\":1}}],[\"几乎覆盖到了所有的地方\",{\"1\":{\"507\":1}}],[\"几种模式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"几行配置轻轻松松搞定高并发分布式事务\",{\"1\":{\"64\":1}}],[\"社交账号\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"社会化登录\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"社区完成功能\",{\"1\":{\"714\":1}}],[\"社区共建\",{\"0\":{\"711\":1,\"715\":1,\"725\":1}}],[\"社区奉行简单\",{\"1\":{\"707\":1,\"715\":1}}],[\"社区一众大佬\",{\"1\":{\"632\":1}}],[\"社区一直在积极探索和应用前沿技术\",{\"1\":{\"91\":1}}],[\"社区维护差\",{\"1\":{\"608\":1}}],[\"社区版前端文件统一放在maxkey\",{\"1\":{\"529\":1}}],[\"社区目前拥有\",{\"1\":{\"507\":1}}],[\"社区内也给出了很多反馈意见\",{\"1\":{\"475\":1}}],[\"社区内各个子项目团队\",{\"1\":{\"306\":1}}],[\"社区里的问题太多\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"社区人数超过\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"社区驱动进而正向促进开源项目和满足用户功能体验\",{\"1\":{\"456\":1}}],[\"社区协作我觉得这是开源的意义\",{\"1\":{\"456\":1}}],[\"社区协作\",{\"1\":{\"456\":1}}],[\"社区也步入的\",{\"1\":{\"353\":1,\"358\":1}}],[\"社区贡献\",{\"1\":{\"334\":1}}],[\"社区参与\",{\"0\":{\"334\":1}}],[\"社区加油\",{\"1\":{\"308\":1}}],[\"社区越办越好\",{\"1\":{\"308\":2}}],[\"社区越来越好\",{\"1\":{\"308\":1}}],[\"社区将成立正式的委员会\",{\"1\":{\"306\":1}}],[\"社区公众号\",{\"1\":{\"306\":1}}],[\"社区群\",{\"1\":{\"304\":1}}],[\"社区会在接下来几天陆续介绍项目课题系列\",{\"1\":{\"50\":1}}],[\"社区各项目课题将从\",{\"1\":{\"50\":1}}],[\"社区活跃的新一代规则引擎\",{\"0\":{\"512\":1}}],[\"社区活跃\",{\"1\":{\"46\":1}}],[\"社区\",{\"0\":{\"304\":1,\"319\":1,\"403\":1,\"626\":1,\"627\":1,\"714\":1,\"793\":1,\"818\":1},\"1\":{\"46\":1,\"632\":1}}],[\"社区按照项目分类\",{\"1\":{\"42\":1}}],[\"社区等分类\",{\"1\":{\"40\":1}}],[\"社区导师倾心指导\",{\"1\":{\"38\":1}}],[\"社区下课题项目介绍\",{\"1\":{\"38\":1}}],[\"社区课题项目系列一\",{\"0\":{\"38\":1}}],[\"社区介绍\",{\"0\":{\"37\":1}}],[\"社区成员享受福利多多\",{\"1\":{\"36\":1}}],[\"社区成员准则\",{\"1\":{\"7\":1}}],[\"社区发展\",{\"1\":{\"33\":1}}],[\"社区组织始终抱有积极开放宽容的态度\",{\"1\":{\"305\":1}}],[\"社区组织评委会的认可\",{\"1\":{\"8\":1,\"299\":1}}],[\"社区组员\",{\"1\":{\"27\":1}}],[\"社区做的越来越大\",{\"1\":{\"23\":1}}],[\"社区以源码阅读形式自发行的组织本次活动\",{\"1\":{\"22\":1}}],[\"社区与华为云开源解决方案合作进展\",{\"1\":{\"18\":1}}],[\"社区的发展\",{\"1\":{\"353\":1,\"358\":1}}],[\"社区的一些问题\",{\"1\":{\"60\":1}}],[\"社区的开源项目和社区贡献者数量不断增加\",{\"1\":{\"91\":1}}],[\"社区的开源项目\",{\"1\":{\"37\":1}}],[\"社区的建设\",{\"1\":{\"22\":1}}],[\"社区的小伙伴们大家好\",{\"1\":{\"330\":1}}],[\"社区的小伙伴\",{\"1\":{\"18\":1}}],[\"社区的小伙伴也应邀参加\",{\"1\":{\"16\":1}}],[\"社区的项目均保留原有项目的所有权利及商业化行为\",{\"1\":{\"7\":1}}],[\"社区的项目包括\",{\"1\":{\"4\":1}}],[\"社区和\",{\"1\":{\"16\":1}}],[\"社区运营支出\",{\"1\":{\"9\":1,\"308\":1}}],[\"社区承诺将收到的所有赞助支持资金完全公开化\",{\"1\":{\"9\":1,\"308\":1}}],[\"社区赞助商或支持者\",{\"1\":{\"9\":1,\"308\":1}}],[\"社区能够持续运营和提供更加优质的服务离不开大家的支持\",{\"1\":{\"9\":1,\"308\":1}}],[\"社区名声\",{\"1\":{\"7\":1}}],[\"社区除协助推广\",{\"1\":{\"7\":1}}],[\"社区欢迎所有热爱开源的小伙伴加入\",{\"1\":{\"5\":1}}],[\"社区项目\",{\"0\":{\"4\":1},\"1\":{\"7\":1}}],[\"社区口号\",{\"0\":{\"2\":1}}],[\"认证等等插件\",{\"1\":{\"790\":1}}],[\"认证设为不受\",{\"1\":{\"624\":1}}],[\"认证中心具有平台无关性\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"认证系统内置页面\",{\"1\":{\"360\":1}}],[\"认证模式\",{\"0\":{\"379\":1,\"394\":1,\"401\":1},\"1\":{\"357\":3,\"359\":1,\"360\":1,\"364\":3,\"378\":3,\"379\":1,\"393\":3,\"394\":1,\"400\":3,\"401\":1}}],[\"认领项目赢取丰厚奖金\",{\"0\":{\"34\":1}}],[\"破除\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"深入了解项目的详情\",{\"1\":{\"635\":1}}],[\"深入性和便捷性\",{\"1\":{\"367\":1,\"382\":1}}],[\"深度扩展\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"深度定制和扩展\",{\"1\":{\"357\":1}}],[\"深深的友情\",{\"1\":{\"308\":1}}],[\"抽离\",{\"1\":{\"787\":1}}],[\"抽离核心执行模块\",{\"1\":{\"713\":1}}],[\"抽离出\",{\"1\":{\"707\":1}}],[\"抽离出多种\",{\"1\":{\"707\":1}}],[\"抽离出核心的事务执行模块\",{\"1\":{\"707\":1}}],[\"抽离出开箱即用的\",{\"1\":{\"707\":1}}],[\"抽取公共配置信息\",{\"1\":{\"727\":1}}],[\"抽取\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"抽取通用组件和代码\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"抽象方法\",{\"1\":{\"234\":1}}],[\"抽象方法供实现类写自己的逻辑\",{\"1\":{\"128\":1}}],[\"抽象类\",{\"1\":{\"128\":1}}],[\"充份利用\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"充份使用\",{\"1\":{\"356\":2,\"395\":2,\"402\":2}}],[\"式的\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"尽可能地帮助使用者规避或者减少无效工作\",{\"1\":{\"396\":1}}],[\"尽可能的集成\",{\"1\":{\"367\":1,\"382\":1}}],[\"尽可能降低工程重复代码\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"尽可能规避\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"尽我绵薄之力\",{\"1\":{\"308\":1}}],[\"手机号码\",{\"1\":{\"761\":1}}],[\"手机号\",{\"1\":{\"608\":1}}],[\"手机\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"手机短信模式\",{\"1\":{\"356\":1}}],[\"手写工具稳定性差易出问题\",{\"1\":{\"608\":1}}],[\"手写实现\",{\"1\":{\"608\":1}}],[\"手写\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"手动构造文件信息\",{\"1\":{\"817\":1}}],[\"手动编写注解基于\",{\"1\":{\"608\":1}}],[\"手动编写代码配置数据源\",{\"1\":{\"608\":1}}],[\"手动设置超时时间为\",{\"1\":{\"272\":1}}],[\"手动同步数据后\",{\"1\":{\"208\":1}}],[\"手动同步\",{\"1\":{\"208\":1}}],[\"手动调用\",{\"1\":{\"173\":1}}],[\"特殊处理\",{\"1\":{\"723\":1}}],[\"特性以及支持度都非常好\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"特性\",{\"0\":{\"419\":1,\"502\":1,\"503\":1,\"504\":1,\"505\":1,\"506\":1},\"1\":{\"509\":5,\"522\":7}}],[\"特点\",{\"0\":{\"355\":1,\"452\":1,\"464\":1}}],[\"特别是在\",{\"1\":{\"633\":1}}],[\"特别是项目组领导刘培琦\",{\"1\":{\"633\":1}}],[\"特别是很多会占用技术人员大量时间和精力的工作\",{\"1\":{\"396\":1}}],[\"特别感谢团队的小伙伴与一些热心的粉丝\",{\"1\":{\"612\":1}}],[\"特别感谢对\",{\"1\":{\"335\":1}}],[\"特别感谢以下贡献者对\",{\"1\":{\"317\":1}}],[\"特别棒\",{\"1\":{\"308\":1}}],[\"特别注意\",{\"1\":{\"305\":1}}],[\"攻击防护策略配置文件\",{\"1\":{\"354\":1}}],[\"漏洞\",{\"1\":{\"354\":1,\"603\":1}}],[\"漏斗算法\",{\"1\":{\"241\":1}}],[\"紧跟\",{\"1\":{\"353\":1,\"358\":1}}],[\"封建的中世纪的终结和现代资本主义纪元的开端\",{\"1\":{\"352\":1}}],[\"封装的\",{\"1\":{\"608\":1}}],[\"封装主流大文件分片方案\",{\"1\":{\"374\":1,\"389\":1}}],[\"封装常规业务逻辑\",{\"1\":{\"374\":1,\"389\":1}}],[\"封装lua脚本执行所需的参数\",{\"1\":{\"249\":1}}],[\"封装成一个对应\",{\"1\":{\"247\":1}}],[\"封装了一个requestbodyspec对象\",{\"1\":{\"236\":1}}],[\"封装了一层\",{\"1\":{\"154\":1}}],[\"封装响应信息\",{\"1\":{\"137\":1}}],[\"恩格斯评价说\",{\"1\":{\"352\":1}}],[\"喜欢我们的开源项目吗\",{\"0\":{\"629\":1}}],[\"喜剧\",{\"1\":{\"352\":1}}],[\"喜世\",{\"1\":{\"308\":1}}],[\"神曲\",{\"1\":{\"352\":1}}],[\"欧拉筛法\",{\"1\":{\"406\":1}}],[\"欧洲文艺复兴时代的开拓人物之一\",{\"1\":{\"352\":1}}],[\"欧葵\",{\"1\":{\"308\":1}}],[\"世纪末意大利诗人\",{\"1\":{\"352\":1}}],[\"综合性案例\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"研究探索阶段的利器\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"既不利于理解\",{\"1\":{\"367\":1,\"382\":1}}],[\"既兼顾传统项目的微服务化\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"既然有\",{\"1\":{\"131\":1}}],[\"既然是响应式\",{\"1\":{\"92\":1}}],[\"剥离\",{\"1\":{\"342\":1}}],[\"替换随机字段值\",{\"1\":{\"653\":1}}],[\"替换原来用\",{\"1\":{\"338\":1}}],[\"替代了\",{\"1\":{\"727\":3}}],[\"替代了之前\",{\"1\":{\"259\":1}}],[\"替代原有\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"替代\",{\"1\":{\"315\":1,\"727\":3}}],[\"公司入口网关\",{\"0\":{\"784\":1},\"1\":{\"791\":1}}],[\"公司\",{\"1\":{\"609\":1}}],[\"公共消息队列支持\",{\"1\":{\"448\":1}}],[\"公元\",{\"1\":{\"352\":2}}],[\"公众号\",{\"1\":{\"336\":1,\"340\":1}}],[\"公交\",{\"1\":{\"12\":1}}],[\"遵循开源协议在项目中保留开源协议文件即可\",{\"1\":{\"607\":1}}],[\"遵循\",{\"1\":{\"336\":1,\"340\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"旨在提供完整的物联网设备调试方案\",{\"1\":{\"794\":1}}],[\"旨在为用户提供一种简单\",{\"1\":{\"336\":1,\"340\":1}}],[\"旨在鼓励在校学生积极参与开源软件的开发维护\",{\"1\":{\"35\":1}}],[\"贡献组成员的时间精力都很有限的\",{\"1\":{\"764\":1}}],[\"贡献组件扩展文档\",{\"1\":{\"335\":1}}],[\"贡献机会\",{\"1\":{\"635\":1}}],[\"贡献等\",{\"1\":{\"456\":1}}],[\"贡献者们的贡献\",{\"1\":{\"442\":1}}],[\"贡献者指南请参考\",{\"1\":{\"318\":1}}],[\"贡献者\",{\"0\":{\"317\":1}}],[\"贡献者文档等\",{\"1\":{\"40\":1}}],[\"致谢\",{\"0\":{\"335\":1}}],[\"致力于易用友好\",{\"1\":{\"447\":1}}],[\"致力于为全球用户提供微服务云原生解决方案\",{\"1\":{\"37\":1}}],[\"致力于应用级监控\",{\"1\":{\"4\":1}}],[\"功能优化\",{\"0\":{\"834\":1}}],[\"功能强大的调试和管理平台\",{\"1\":{\"794\":1}}],[\"功能强大插件众多\",{\"1\":{\"608\":1}}],[\"功能不完善等\",{\"1\":{\"794\":1}}],[\"功能配置项\",{\"1\":{\"644\":1}}],[\"功能也非常的稳定\",{\"1\":{\"612\":1}}],[\"功能说明\",{\"1\":{\"609\":1}}],[\"功能有限\",{\"1\":{\"608\":1}}],[\"功能扩展性差\",{\"1\":{\"608\":1}}],[\"功能更新视频介绍\",{\"0\":{\"672\":1}}],[\"功能更新\",{\"0\":{\"604\":1,\"617\":1}}],[\"功能建议\",{\"1\":{\"596\":4}}],[\"功能页面帮助信息模块和阈值表达式增强\",{\"1\":{\"461\":1}}],[\"功能展示\",{\"0\":{\"343\":1}}],[\"功能\",{\"0\":{\"706\":1},\"1\":{\"334\":1,\"411\":1,\"608\":1,\"620\":1,\"628\":8,\"637\":4,\"714\":1}}],[\"功能隔离和自定义处理逻辑的特性\",{\"1\":{\"215\":1}}],[\"部门与角色如果绑定了用户则不允许禁用\",{\"1\":{\"617\":1}}],[\"部门\",{\"1\":{\"609\":1}}],[\"部门管理\",{\"1\":{\"609\":1}}],[\"部分短信发送的返回值添加了非空判断\",{\"1\":{\"751\":1}}],[\"部分常见报错排查\",{\"1\":{\"624\":1}}],[\"部分在哪里\",{\"1\":{\"593\":1}}],[\"部分\",{\"1\":{\"499\":1}}],[\"部分代码有npe风险\",{\"1\":{\"509\":1}}],[\"部分代码作了一些增强\",{\"1\":{\"468\":1}}],[\"部分代码\",{\"1\":{\"431\":1}}],[\"部分代码优化重构\",{\"1\":{\"413\":1,\"422\":1}}],[\"部分插件根据鉴权\",{\"1\":{\"231\":1}}],[\"部署部分系统出现乱码问题\",{\"1\":{\"619\":1}}],[\"部署项目\",{\"1\":{\"610\":1}}],[\"部署方式\",{\"1\":{\"608\":1}}],[\"部署服务端\",{\"0\":{\"579\":1}}],[\"部署文件\",{\"1\":{\"575\":1}}],[\"部署采集器集群\",{\"1\":{\"457\":1,\"465\":1}}],[\"部署\",{\"0\":{\"333\":1},\"1\":{\"608\":1}}],[\"安装部署\",{\"0\":{\"332\":1}}],[\"安全认证\",{\"1\":{\"803\":1}}],[\"安全性不足\",{\"1\":{\"794\":1}}],[\"安全可靠\",{\"1\":{\"608\":1,\"794\":1}}],[\"安全风险预警\",{\"1\":{\"554\":1,\"564\":1}}],[\"安全合规审计\",{\"1\":{\"554\":1,\"564\":1}}],[\"安全的\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"安全的移动接入\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"安全\",{\"1\":{\"15\":1,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"错乱的问题\",{\"1\":{\"331\":1}}],[\"错误时\",{\"1\":{\"750\":1}}],[\"错误使用问题\",{\"1\":{\"619\":1}}],[\"错误次数缓存未设置有效时间问题\",{\"1\":{\"619\":1}}],[\"错误事件通知的改造\",{\"0\":{\"487\":1}}],[\"错误处理\",{\"1\":{\"316\":1}}],[\"错误\",{\"1\":{\"316\":4,\"557\":1}}],[\"错误率百分比\",{\"1\":{\"270\":1}}],[\"精准ip定位\",{\"0\":{\"562\":1}}],[\"精简版\",{\"0\":{\"670\":1},\"1\":{\"667\":1}}],[\"精简日志内容\",{\"1\":{\"340\":1}}],[\"精简大小\",{\"1\":{\"331\":1}}],[\"精神股东\",{\"1\":{\"308\":1}}],[\"镜像部署\",{\"1\":{\"575\":1}}],[\"镜像版本升级至\",{\"1\":{\"397\":1}}],[\"镜像版本恢复至\",{\"1\":{\"383\":1}}],[\"镜像中提供初始账户\",{\"1\":{\"333\":1}}],[\"镜像启动成功后\",{\"1\":{\"333\":1}}],[\"镜像\",{\"1\":{\"331\":1}}],[\"查阅我们的文档\",{\"1\":{\"635\":1}}],[\"查阅\",{\"1\":{\"374\":1,\"389\":1}}],[\"查询部门下拉树未过滤数据权限问题\",{\"1\":{\"619\":1}}],[\"查询值错误问题\",{\"1\":{\"619\":1}}],[\"查询不起作用\",{\"1\":{\"608\":1}}],[\"查询失败等三种状态\",{\"1\":{\"368\":1}}],[\"查询缓存更新问题\",{\"1\":{\"357\":1}}],[\"查询\",{\"1\":{\"331\":1}}],[\"查看全部存储平台的使用方法\",{\"1\":{\"813\":1,\"817\":1}}],[\"查看服务端\",{\"1\":{\"585\":1}}],[\"查看一次\",{\"1\":{\"231\":1}}],[\"查看插件子类\",{\"1\":{\"219\":1}}],[\"查看\",{\"1\":{\"199\":1,\"313\":1,\"442\":1,\"808\":2}}],[\"查看大会各票种介绍\",{\"1\":{\"13\":1}}],[\"复制\",{\"1\":{\"823\":1}}],[\"复制该licensekey备用\",{\"1\":{\"584\":1}}],[\"复杂参数接口\",{\"1\":{\"787\":1}}],[\"复杂场景\",{\"1\":{\"706\":1}}],[\"复杂\",{\"1\":{\"608\":1}}],[\"复杂排序\",{\"1\":{\"608\":1}}],[\"复杂对象参数\",{\"1\":{\"374\":1,\"389\":1}}],[\"复杂结构参数不利于\",{\"1\":{\"374\":1,\"389\":1}}],[\"复杂监听\",{\"0\":{\"328\":1}}],[\"复用\",{\"1\":{\"167\":1}}],[\"插入数据\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"插件机制\",{\"1\":{\"790\":1}}],[\"插件增强\",{\"1\":{\"787\":1}}],[\"插件支持\",{\"1\":{\"787\":1}}],[\"插件支持轮询自动更新模式\",{\"0\":{\"515\":1}}],[\"插件热插拔\",{\"1\":{\"787\":1}}],[\"插件能力发布\",{\"0\":{\"764\":1},\"1\":{\"754\":1}}],[\"插件能够使用项目内的数据源来获取数据\",{\"1\":{\"483\":1}}],[\"插件将自动适配\",{\"1\":{\"664\":1}}],[\"插件不做自动域名处理\",{\"1\":{\"664\":1}}],[\"插件帮助你在\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"插件新增代码示例\",{\"1\":{\"624\":1}}],[\"插件语法写法\",{\"1\":{\"617\":1}}],[\"插件重构\",{\"1\":{\"522\":1}}],[\"插件重排\",{\"1\":{\"220\":1}}],[\"插件化扩展阶段\",{\"1\":{\"469\":1}}],[\"插件化设计思想是\",{\"1\":{\"113\":1}}],[\"插件执行错误\",{\"1\":{\"316\":1}}],[\"插件执行逻辑代码\",{\"1\":{\"266\":1}}],[\"插件中删除未使用的配置\",{\"1\":{\"316\":1}}],[\"插件中放入\",{\"1\":{\"236\":1}}],[\"插件分类归档\",{\"1\":{\"315\":1}}],[\"插件上传的集成测试\",{\"1\":{\"315\":1}}],[\"插件自动下线\",{\"1\":{\"314\":1}}],[\"插件自身只是负责根据选择器\",{\"1\":{\"224\":1}}],[\"插件到整个调用流程的分析\",{\"1\":{\"295\":1}}],[\"插件数量\",{\"1\":{\"287\":1}}],[\"插件数据\",{\"1\":{\"234\":1}}],[\"插件数据订阅\",{\"1\":{\"205\":1}}],[\"插件需要配合\",{\"1\":{\"277\":1}}],[\"插件主要是将\",{\"1\":{\"277\":1}}],[\"插件目录结构\",{\"1\":{\"273\":1}}],[\"插件源码大量使用了响应式编程方式\",{\"1\":{\"273\":1}}],[\"插件源码解读\",{\"0\":{\"273\":1},\"1\":{\"268\":1}}],[\"插件名sentinel\",{\"1\":{\"266\":1}}],[\"插件名称\",{\"1\":{\"231\":1}}],[\"插件列表\",{\"1\":{\"264\":1}}],[\"插件列表中自动配置了这个实例对应的选择器\",{\"1\":{\"116\":1}}],[\"插件做流控和熔断\",{\"1\":{\"261\":1}}],[\"插件配置\",{\"0\":{\"254\":1,\"279\":1},\"1\":{\"276\":1}}],[\"插件来重定向请求\",{\"1\":{\"253\":1}}],[\"插件之前做了很多前置插件的操作\",{\"1\":{\"239\":1}}],[\"插件处理\",{\"1\":{\"273\":1}}],[\"插件处理对应结果\",{\"1\":{\"237\":1}}],[\"插件处理流程\",{\"0\":{\"224\":1},\"1\":{\"230\":1}}],[\"插件发起真实的\",{\"1\":{\"237\":1}}],[\"插件发挥作用了\",{\"1\":{\"136\":1}}],[\"插件选择对应调用的真实地址\",{\"1\":{\"237\":1}}],[\"插件封装\",{\"1\":{\"237\":1}}],[\"插件继承于\",{\"1\":{\"234\":1}}],[\"插件在整个链式调用过程中到底起了一个什么样的作用\",{\"1\":{\"233\":1}}],[\"插件后\",{\"1\":{\"232\":1,\"233\":1}}],[\"插件有关\",{\"1\":{\"232\":2}}],[\"插件会被执行\",{\"1\":{\"231\":1}}],[\"插件所涉及的类进行了相关梳理\",{\"1\":{\"231\":1}}],[\"插件从缓存里拿到的服务器信息\",{\"1\":{\"228\":1}}],[\"插件定位\",{\"1\":{\"223\":1}}],[\"插件概述\",{\"0\":{\"223\":1}}],[\"插件只是完成目标上游服务的待分发\",{\"1\":{\"219\":1}}],[\"插件链继承结构\",{\"1\":{\"220\":1}}],[\"插件链实现\",{\"0\":{\"220\":1}}],[\"插件链\",{\"1\":{\"219\":1}}],[\"插件实现\",{\"0\":{\"219\":1}}],[\"插件与核心系统如何通信\",{\"1\":{\"216\":1}}],[\"插件与插件\",{\"1\":{\"216\":1}}],[\"插件通信方面\",{\"1\":{\"217\":1}}],[\"插件通信\",{\"1\":{\"216\":1}}],[\"插件如何连接到核心系统\",{\"1\":{\"216\":1}}],[\"插件连接方面\",{\"1\":{\"217\":1}}],[\"插件连接\",{\"1\":{\"216\":1}}],[\"插件管理处\",{\"1\":{\"243\":1}}],[\"插件管理方面\",{\"1\":{\"217\":1}}],[\"插件管理\",{\"1\":{\"216\":1,\"254\":1}}],[\"插件信息更新后会发布一个\",{\"1\":{\"209\":1}}],[\"插件规则\",{\"1\":{\"206\":1}}],[\"插件更新后会发布一个\",{\"1\":{\"204\":1}}],[\"插件状态检查功能\",{\"1\":{\"644\":1}}],[\"插件状态\",{\"1\":{\"204\":1}}],[\"插件存入的\",{\"1\":{\"195\":1}}],[\"插件是一个\",{\"1\":{\"223\":1}}],[\"插件是\",{\"1\":{\"213\":1}}],[\"插件是否可用\",{\"1\":{\"195\":1}}],[\"插件是网关处理\",{\"1\":{\"113\":1}}],[\"插件调用解析\",{\"0\":{\"287\":1},\"1\":{\"276\":1}}],[\"插件调用\",{\"1\":{\"195\":1}}],[\"插件用来对请求进行签名认证的插件\",{\"1\":{\"185\":1}}],[\"插件的所有数据\",{\"1\":{\"783\":1}}],[\"插件的详细文档请参照官网中规则文件\",{\"1\":{\"503\":1}}],[\"插件的线程安全问题\",{\"1\":{\"316\":1}}],[\"插件的域名测试\",{\"1\":{\"315\":1}}],[\"插件的支持\",{\"1\":{\"315\":1}}],[\"插件的第一个版本的兼容性\",{\"1\":{\"315\":1}}],[\"插件的\",{\"1\":{\"314\":1}}],[\"插件的调用\",{\"1\":{\"287\":1}}],[\"插件的调用后\",{\"1\":{\"136\":1}}],[\"插件的处理逻辑\",{\"1\":{\"266\":1}}],[\"插件的处理流程\",{\"1\":{\"239\":1}}],[\"插件的源码主要有\",{\"1\":{\"266\":1}}],[\"插件的常规配置这里也不再赘述\",{\"1\":{\"264\":1}}],[\"插件的具体作用\",{\"1\":{\"239\":1}}],[\"插件的执行顺序\",{\"1\":{\"231\":1}}],[\"插件的枚举类\",{\"1\":{\"231\":1}}],[\"插件的自定义处理流程\",{\"1\":{\"224\":1}}],[\"插件的实现分析\",{\"0\":{\"194\":1}}],[\"插件的返回\",{\"1\":{\"193\":1}}],[\"插件的负载均衡实现类的资源文件\",{\"1\":{\"179\":1}}],[\"插件的负载均衡策略时\",{\"1\":{\"164\":1}}],[\"插件等\",{\"1\":{\"163\":1}}],[\"插件元数据变动调用\",{\"1\":{\"162\":1}}],[\"插件启动\",{\"1\":{\"152\":1}}],[\"插件项目结构\",{\"0\":{\"131\":1}}],[\"插件最基础的配置\",{\"1\":{\"118\":1}}],[\"插件\",{\"0\":{\"674\":1,\"682\":1},\"1\":{\"116\":1,\"125\":1,\"162\":1,\"231\":1,\"241\":1,\"264\":1,\"313\":1,\"315\":1,\"503\":1,\"608\":1,\"624\":1,\"651\":1,\"652\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"688\":1,\"692\":1,\"783\":1,\"787\":1,\"822\":1}}],[\"插件使用自己定义的数据源\",{\"0\":{\"483\":1}}],[\"插件使用\",{\"0\":{\"116\":1,\"187\":1}}],[\"插件就是对\",{\"1\":{\"113\":1,\"256\":1}}],[\"插件可能具备哪些功能呢\",{\"1\":{\"113\":1}}],[\"插件介绍\",{\"0\":{\"113\":1,\"277\":1},\"1\":{\"276\":1}}],[\"插件了\",{\"1\":{\"112\":1}}],[\"兼容问题\",{\"1\":{\"722\":1}}],[\"兼容性问题\",{\"1\":{\"724\":1}}],[\"兼容性差\",{\"1\":{\"608\":1}}],[\"兼容性\",{\"1\":{\"409\":1,\"419\":1}}],[\"兼容\",{\"1\":{\"321\":2,\"340\":1,\"617\":1}}],[\"兼具轻量\",{\"1\":{\"46\":1}}],[\"寄存器在特殊符号时丢失元路径的属性\",{\"1\":{\"316\":1}}],[\"丢失用户自定义关闭状态的问题\",{\"1\":{\"316\":1}}],[\"丢失\",{\"1\":{\"316\":1}}],[\"图层可显示元素类型\",{\"1\":{\"828\":1}}],[\"图层编辑\",{\"0\":{\"828\":1}}],[\"图标\",{\"0\":{\"659\":1,\"670\":1},\"1\":{\"667\":1}}],[\"图标优化\",{\"1\":{\"651\":1}}],[\"图标变化不正常问题\",{\"1\":{\"606\":1}}],[\"图标的问题\",{\"1\":{\"316\":1}}],[\"图片可以通过元素裁切出不同形状\",{\"1\":{\"829\":1}}],[\"图片裁切\",{\"1\":{\"826\":1}}],[\"图片编辑\",{\"0\":{\"826\":1}}],[\"图片填充\",{\"1\":{\"825\":1}}],[\"图片处理使用的是\",{\"1\":{\"816\":1}}],[\"图片\",{\"1\":{\"112\":2,\"113\":1,\"114\":1,\"115\":2,\"116\":3,\"117\":3,\"118\":4,\"300\":1,\"820\":2}}],[\"造成内存泄漏的问题\",{\"1\":{\"316\":1}}],[\"示例项目\",{\"1\":{\"315\":1}}],[\"明白意思吧\",{\"1\":{\"783\":1}}],[\"明细接口的\",{\"1\":{\"315\":1}}],[\"明天开始\",{\"1\":{\"36\":1}}],[\"逻辑避免并发请求问题\",{\"1\":{\"617\":1}}],[\"逻辑\",{\"1\":{\"315\":1}}],[\"升级的问题\",{\"1\":{\"720\":1}}],[\"升级到\",{\"1\":{\"707\":2}}],[\"升级连接机制\",{\"1\":{\"617\":1}}],[\"升级需清除\",{\"1\":{\"615\":1}}],[\"升级至最新版\",{\"1\":{\"603\":1}}],[\"升级须知\",{\"0\":{\"575\":1}}],[\"升级脚本\",{\"1\":{\"444\":1}}],[\"升级注意\",{\"0\":{\"444\":1}}],[\"升级说明\",{\"1\":{\"354\":1}}],[\"升级\",{\"1\":{\"315\":1,\"354\":19,\"360\":5,\"368\":10,\"383\":6,\"397\":14,\"420\":1,\"438\":1,\"617\":1,\"644\":3}}],[\"升级springboot版本到2\",{\"1\":{\"314\":1}}],[\"升级过程\",{\"1\":{\"78\":1}}],[\"停止脚本\",{\"1\":{\"314\":1}}],[\"生产环境搭建部署\",{\"1\":{\"613\":1}}],[\"生成\",{\"1\":{\"608\":1}}],[\"生成的\",{\"1\":{\"608\":1}}],[\"生成仿真行情数据的研究\",{\"1\":{\"599\":1}}],[\"生成插件字符串\",{\"1\":{\"314\":1}}],[\"生命周期方法\",{\"1\":{\"409\":1,\"419\":1}}],[\"生态规范\",{\"1\":{\"397\":1}}],[\"生态产品\",{\"0\":{\"369\":1,\"384\":1}}],[\"生态产品以独立的产品运作\",{\"1\":{\"367\":1,\"382\":1}}],[\"生态产品为辅的格局\",{\"1\":{\"367\":1,\"382\":1}}],[\"生效时机\",{\"1\":{\"223\":1}}],[\"累计贡献者达\",{\"1\":{\"312\":1}}],[\"累计总权重\",{\"1\":{\"134\":1}}],[\"热插拔\",{\"1\":{\"311\":1}}],[\"飞鸿雪泥\",{\"1\":{\"308\":1}}],[\"飞书扫码登录\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"飞书\",{\"1\":{\"53\":1,\"409\":1,\"419\":1,\"449\":1,\"764\":1}}],[\"姜吉宁\",{\"1\":{\"308\":1}}],[\"孙龙\",{\"1\":{\"308\":1}}],[\"鲜克有终\",{\"1\":{\"308\":1}}],[\"靡不有初\",{\"1\":{\"308\":1}}],[\"喵喵喵\",{\"1\":{\"308\":1}}],[\"喵小喵\",{\"1\":{\"308\":1}}],[\"氺\",{\"1\":{\"308\":1}}],[\"黄伟亮\",{\"1\":{\"593\":1,\"599\":1}}],[\"黄放\",{\"1\":{\"308\":1}}],[\"黄灿达\",{\"1\":{\"308\":1}}],[\"侯瑞哲\",{\"1\":{\"308\":1}}],[\"屈仁能\",{\"1\":{\"308\":1}}],[\"～阿槑～\",{\"1\":{\"308\":1}}],[\"秦旭\",{\"1\":{\"308\":1}}],[\"项峥\",{\"1\":{\"308\":1}}],[\"项目运行\",{\"0\":{\"821\":1}}],[\"项目依赖的变化\",{\"0\":{\"810\":1}}],[\"项目依靠社区发展\",{\"1\":{\"334\":1}}],[\"项目结构\",{\"0\":{\"802\":1}}],[\"项目结构优化\",{\"0\":{\"730\":1}}],[\"项目背景\",{\"0\":{\"794\":1}}],[\"项目更加轻量\",{\"1\":{\"771\":1}}],[\"项目本体主旨不变\",{\"1\":{\"764\":1}}],[\"项目可以直接进行使用了\",{\"1\":{\"757\":1}}],[\"项目可直接操作\",{\"1\":{\"305\":1}}],[\"项目级别头设置失败\",{\"1\":{\"663\":1}}],[\"项目配置刷新\",{\"1\":{\"651\":1}}],[\"项目路径修改\",{\"1\":{\"608\":1}}],[\"项目代码\",{\"1\":{\"607\":1}}],[\"项目正式入驻\",{\"1\":{\"604\":1}}],[\"项目质量也同样出色\",{\"1\":{\"514\":1}}],[\"项目添砖加瓦\",{\"1\":{\"469\":1}}],[\"项目官网\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"项目地址\",{\"0\":{\"414\":1,\"423\":1},\"1\":{\"640\":1,\"647\":1}}],[\"项目地址自动注册上去了\",{\"1\":{\"116\":1}}],[\"项目链接\",{\"1\":{\"407\":1}}],[\"项目作者\",{\"1\":{\"404\":1}}],[\"项目作者需书面或邮件编写项目退出事由并电邮至\",{\"1\":{\"305\":1}}],[\"项目管理不善等问题产生的需要长期投入的\",{\"1\":{\"396\":1}}],[\"项目对您有帮助\",{\"1\":{\"336\":1,\"340\":1}}],[\"项目特性\",{\"0\":{\"321\":1}}],[\"项目退出后\",{\"1\":{\"305\":1}}],[\"项目独立提交与运营\",{\"1\":{\"301\":1}}],[\"项目转移后会有以下影响\",{\"1\":{\"300\":1}}],[\"项目进行接口注册时\",{\"1\":{\"234\":1}}],[\"项目为\",{\"1\":{\"176\":1}}],[\"项目举例\",{\"1\":{\"131\":1}}],[\"项目中的\",{\"1\":{\"130\":1}}],[\"项目的主要特性\",{\"1\":{\"794\":1}}],[\"项目的一些重要更新\",{\"1\":{\"729\":1}}],[\"项目的模块名去除\",{\"1\":{\"667\":1}}],[\"项目的发展\",{\"1\":{\"634\":1}}],[\"项目的\",{\"1\":{\"254\":1}}],[\"项目的配置信息中\",{\"1\":{\"160\":1,\"161\":1}}],[\"项目的开发者生态也是及其重要的\",{\"1\":{\"56\":1}}],[\"项目的重新分类\",{\"1\":{\"42\":1}}],[\"项目产出要求\",{\"0\":{\"47\":1}}],[\"项目简介\",{\"0\":{\"46\":1,\"336\":1,\"576\":1},\"1\":{\"340\":1}}],[\"项目成果仓库\",{\"0\":{\"44\":1,\"49\":1}}],[\"项目技术要求\",{\"0\":{\"43\":1,\"48\":1}}],[\"项目源码中如果存在绝对路径的引用\",{\"1\":{\"300\":1}}],[\"项目源码\",{\"1\":{\"42\":1}}],[\"项目需求\",{\"0\":{\"40\":1,\"41\":1}}],[\"项目需联系\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目\",{\"0\":{\"837\":1},\"1\":{\"37\":1,\"92\":1,\"301\":2,\"305\":1,\"321\":1,\"336\":1,\"340\":1,\"420\":1,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1,\"586\":1,\"783\":1,\"784\":1,\"788\":1,\"791\":1}}],[\"项目至少在近\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目必须在\",{\"1\":{\"299\":1}}],[\"项目必须得到\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目必须有良好的代码注释和不断完善的使用文档\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目必须是完整的应用解决方案\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目必须是原创且不能是\",{\"1\":{\"8\":1,\"299\":1}}],[\"项目捐赠\",{\"0\":{\"8\":1,\"298\":1}}],[\"项目监控软件\",{\"1\":{\"4\":1}}],[\"项目介绍\",{\"0\":{\"320\":1,\"820\":1},\"1\":{\"4\":1}}],[\"项目名称取自模块名\",{\"1\":{\"664\":1}}],[\"项目名称\",{\"1\":{\"4\":1}}],[\"林\",{\"1\":{\"308\":1}}],[\"犯\",{\"1\":{\"308\":1}}],[\"喝阔落\",{\"1\":{\"308\":1}}],[\"涛\",{\"1\":{\"308\":1}}],[\"拒绝触发报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"拒绝\",{\"1\":{\"308\":1}}],[\"萧\",{\"1\":{\"308\":1}}],[\"气氛搞起来\",{\"1\":{\"308\":1}}],[\"星尘\",{\"1\":{\"308\":1}}],[\"星期日\",{\"1\":{\"21\":1,\"29\":1,\"32\":1}}],[\"莫白\",{\"1\":{\"308\":1}}],[\"莫生\",{\"1\":{\"308\":1}}],[\"嘉宝\",{\"1\":{\"308\":1}}],[\"晏鹏\",{\"1\":{\"308\":1}}],[\"守候\",{\"1\":{\"308\":1}}],[\"睡觉大王小汤\",{\"1\":{\"308\":1}}],[\"荼九\",{\"1\":{\"308\":1}}],[\"瑞\",{\"1\":{\"308\":1}}],[\"恬恬好甜\",{\"1\":{\"308\":1}}],[\"陈曦\",{\"1\":{\"308\":1}}],[\"陈龙\",{\"1\":{\"308\":1}}],[\"陈宏\",{\"1\":{\"308\":1}}],[\"陈乐辉\",{\"1\":{\"308\":1}}],[\"虎宝\",{\"1\":{\"308\":2}}],[\"虎年吉祥\",{\"1\":{\"308\":1}}],[\"任富飞\",{\"1\":{\"308\":1}}],[\"任务管理\",{\"1\":{\"609\":1}}],[\"任务包装等等\",{\"1\":{\"409\":1,\"419\":1}}],[\"任务增强\",{\"1\":{\"409\":1,\"419\":1}}],[\"任务执行或等待超时报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"任务编排\",{\"1\":{\"405\":1,\"406\":1}}],[\"任务拆分及分布式并行执行\",{\"1\":{\"405\":1}}],[\"任务安排等方面口径一致\",{\"1\":{\"306\":1}}],[\"任务负责逐条遍历登记全量服务散列表\",{\"1\":{\"227\":1}}],[\"夜羽\",{\"1\":{\"308\":1}}],[\"愿意和我们一起成长\",{\"1\":{\"711\":1,\"725\":1}}],[\"愿意分享经验和知识\",{\"1\":{\"634\":1}}],[\"愿意为项目的成功贡献一份力量\",{\"1\":{\"634\":1}}],[\"愿中国的开源事业越来越好\",{\"1\":{\"308\":1}}],[\"愿社区越来越好\",{\"1\":{\"308\":1}}],[\"郡鸿\",{\"1\":{\"308\":1}}],[\"钟如雷\",{\"1\":{\"308\":1}}],[\"斯普特尼克\",{\"1\":{\"308\":1}}],[\"豆豆\",{\"1\":{\"308\":1}}],[\"唐甜\",{\"1\":{\"308\":1}}],[\"乔帝鸽\",{\"1\":{\"308\":1}}],[\"哲一\",{\"1\":{\"308\":1}}],[\"张\",{\"1\":{\"308\":1}}],[\"张民鹏\",{\"1\":{\"308\":1}}],[\"张江科学会堂\",{\"1\":{\"15\":1}}],[\"王一飞\",{\"1\":{\"308\":1}}],[\"王磊\",{\"1\":{\"308\":1}}],[\"闫兵\",{\"1\":{\"308\":1}}],[\"谢谢猫大人对于开源的贡献\",{\"1\":{\"308\":1}}],[\"苦了芥末\",{\"1\":{\"308\":1}}],[\"瓦让\",{\"1\":{\"308\":1}}],[\"梁超\",{\"1\":{\"308\":1}}],[\"梁胜芳\",{\"1\":{\"308\":1}}],[\"永存\",{\"1\":{\"308\":1}}],[\"永伦分别给大家介绍了我们的\",{\"1\":{\"18\":1}}],[\"榕\",{\"1\":{\"308\":1}}],[\"李\",{\"1\":{\"308\":1}}],[\"心想事成\",{\"1\":{\"308\":1}}],[\"心中的明月\",{\"1\":{\"308\":1}}],[\"赵瑞\",{\"1\":{\"308\":1}}],[\"赵镇\",{\"1\":{\"308\":1}}],[\"泊\",{\"1\":{\"308\":1}}],[\"滴流乱转的小胖子\",{\"1\":{\"308\":1}}],[\"韩小波\",{\"1\":{\"308\":1}}],[\"阳有白\",{\"1\":{\"308\":1}}],[\"半盏清茶\",{\"1\":{\"308\":1}}],[\"半开状态下的环形缓冲区大小\",{\"1\":{\"270\":1}}],[\"丶\",{\"1\":{\"308\":1,\"619\":1}}],[\"肖邦\",{\"1\":{\"308\":1}}],[\"静态资源\",{\"1\":{\"822\":1}}],[\"静态使用功能齐全\",{\"1\":{\"608\":1}}],[\"静静\",{\"1\":{\"308\":1}}],[\"静晓晨曦\",{\"1\":{\"308\":1}}],[\"白\",{\"1\":{\"308\":1}}],[\"白白的\",{\"1\":{\"145\":1}}],[\"杨大侠\",{\"1\":{\"308\":1}}],[\"哼干嘛\",{\"1\":{\"308\":1}}],[\"走向辉煌\",{\"1\":{\"308\":1}}],[\"撸下胸毛\",{\"1\":{\"308\":1}}],[\"刘耿华\",{\"1\":{\"308\":1}}],[\"刘进\",{\"1\":{\"308\":1}}],[\"刘鹏辉\",{\"1\":{\"30\":1}}],[\"好方\",{\"1\":{\"308\":1}}],[\"好想要\",{\"1\":{\"308\":1}}],[\"好漂亮\",{\"1\":{\"308\":1}}],[\"彭伟伦\",{\"1\":{\"308\":1}}],[\"吴哭哭\",{\"1\":{\"308\":1}}],[\"吴俊杰\",{\"1\":{\"308\":1}}],[\"吴南方\",{\"1\":{\"308\":1}}],[\"石启蒙\",{\"1\":{\"308\":1}}],[\"疯子\",{\"1\":{\"308\":1}}],[\"芜湖起飞\",{\"1\":{\"308\":1}}],[\"曼孚\",{\"1\":{\"308\":1}}],[\"纳兰\",{\"1\":{\"308\":1}}],[\"越来越多的物联网设备被应用于各个行业和领域\",{\"1\":{\"794\":1}}],[\"越来越好\",{\"1\":{\"308\":2}}],[\"越开源越进步\",{\"1\":{\"308\":1}}],[\"越小越先执行\",{\"1\":{\"231\":1}}],[\"锄禾\",{\"1\":{\"308\":1}}],[\"こうう\",{\"1\":{\"308\":1}}],[\"鑫爷\",{\"1\":{\"308\":1}}],[\"顶礼膜拜\",{\"1\":{\"308\":1}}],[\"辉辉同学\",{\"1\":{\"308\":1}}],[\"真诚地感谢每一位社区贡献者及用户的信任\",{\"1\":{\"335\":1}}],[\"真心不错\",{\"1\":{\"308\":1}}],[\"真正迭代调用返回的对象时\",{\"1\":{\"167\":1}}],[\"蚊子腿也是肉\",{\"1\":{\"308\":1}}],[\"段大志\",{\"1\":{\"308\":1}}],[\"冲冲\",{\"1\":{\"308\":1}}],[\"宋不醒\",{\"1\":{\"308\":1}}],[\"聊表心意\",{\"1\":{\"308\":4}}],[\"奥利弗\",{\"1\":{\"308\":1}}],[\"辣条钱\",{\"1\":{\"308\":2}}],[\"光明星辰\",{\"1\":{\"308\":1}}],[\"夏和顺顺\",{\"1\":{\"308\":1}}],[\"夏文涛\",{\"1\":{\"33\":1}}],[\"少年\",{\"1\":{\"308\":1}}],[\"吃瓜群众丙\",{\"1\":{\"308\":1}}],[\"吃个雪糕\",{\"1\":{\"308\":1}}],[\"达梦\",{\"1\":{\"445\":1}}],[\"达\",{\"1\":{\"308\":1}}],[\"达到这个阈值\",{\"1\":{\"270\":1}}],[\"达到此阈值则会启动限流策略\",{\"1\":{\"266\":1}}],[\"感觉给用户送了颗\",{\"1\":{\"720\":1}}],[\"感兴趣的话给个\",{\"1\":{\"465\":1}}],[\"感恩\",{\"1\":{\"308\":2}}],[\"感谢朋友们一路以来的支持\",{\"1\":{\"704\":1}}],[\"感谢您的支持与参与\",{\"1\":{\"635\":1}}],[\"感谢您一直以来对我们开源项目的支持和关注\",{\"1\":{\"629\":1}}],[\"感谢根网\",{\"1\":{\"633\":1}}],[\"感谢设计师evan\",{\"1\":{\"499\":1}}],[\"感谢社区里那么多的使用者给我提出很多宝贵的意见\",{\"1\":{\"468\":1}}],[\"感谢社区小伙伴们的辛苦贡献\",{\"1\":{\"458\":1}}],[\"感谢他们\",{\"1\":{\"448\":1,\"514\":1}}],[\"感谢引路\",{\"1\":{\"308\":1}}],[\"感谢猫大人带我们认识开源\",{\"1\":{\"308\":1}}],[\"感谢猫大人花费巨大的心血\",{\"1\":{\"308\":1}}],[\"感谢猫大人\",{\"1\":{\"308\":3}}],[\"感谢铁锚助教辛勤解答问题\",{\"1\":{\"308\":1}}],[\"感谢开发\",{\"1\":{\"308\":1}}],[\"感谢开源\",{\"1\":{\"308\":4}}],[\"感谢\",{\"1\":{\"308\":2,\"442\":1,\"461\":4,\"615\":6,\"617\":7,\"618\":1,\"619\":4,\"624\":1,\"632\":1}}],[\"感谢诸位无私的奉献\",{\"1\":{\"308\":1}}],[\"感谢大家的贡献与辛勤付出\",{\"1\":{\"832\":1}}],[\"感谢大家\",{\"1\":{\"60\":1}}],[\"太多了不一一列举了\",{\"1\":{\"787\":1}}],[\"太\",{\"1\":{\"308\":1}}],[\"太好用了\",{\"1\":{\"308\":1}}],[\"省\",{\"1\":{\"567\":1}}],[\"省了很多重复造轮子的时间\",{\"1\":{\"308\":1}}],[\"省了我好多事\",{\"1\":{\"308\":1}}],[\"省略非核心代码\",{\"1\":{\"293\":1}}],[\"省略\",{\"1\":{\"231\":1}}],[\"金山云\",{\"1\":{\"808\":1}}],[\"金卫信曾小燕\",{\"1\":{\"308\":1}}],[\"金泽\",{\"1\":{\"33\":1}}],[\"胡泰室\",{\"1\":{\"308\":1}}],[\"苗对我很重要\",{\"1\":{\"308\":1}}],[\"强大安全审计\",{\"1\":{\"554\":1,\"564\":1}}],[\"强转\",{\"1\":{\"421\":1}}],[\"强制版本控制\",{\"1\":{\"397\":2}}],[\"强\",{\"1\":{\"308\":1}}],[\"强烈推荐\",{\"1\":{\"308\":1}}],[\"强一致性分布式事务解决方案\",{\"1\":{\"4\":1}}],[\"修护大文件上传时候的\",{\"1\":{\"787\":1}}],[\"修护\",{\"1\":{\"787\":2}}],[\"修复在\",{\"1\":{\"778\":1}}],[\"修复在未引入\",{\"1\":{\"368\":1}}],[\"修复腾讯云\",{\"1\":{\"755\":1}}],[\"修复阿里云短信返回值异常\",{\"1\":{\"750\":1}}],[\"修复亿美短信返回值异常\",{\"1\":{\"750\":1}}],[\"修复云片短信未能如期创建实现对象的问题\",{\"1\":{\"750\":1}}],[\"修复自定义配置抛出异常问题\",{\"0\":{\"733\":1}}],[\"修复自定义社交登录模式中\",{\"1\":{\"354\":1}}],[\"修复农历转公历在闰月时错误\",{\"1\":{\"724\":1}}],[\"修复标签误删问题\",{\"1\":{\"724\":1}}],[\"修复判断两段时间区间交集问题\",{\"1\":{\"724\":1}}],[\"修复重要\",{\"0\":{\"660\":1}}],[\"修复重要漏洞\",{\"0\":{\"552\":1}}],[\"修复项\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"修复不正确的路径说明\",{\"1\":{\"624\":1}}],[\"修复大部分代码警告\",{\"1\":{\"624\":1}}],[\"修复树模板父级编码变量错误\",{\"1\":{\"619\":1}}],[\"修复问题\",{\"0\":{\"619\":1}}],[\"修复的形式为直接提交到\",{\"1\":{\"612\":1}}],[\"修复页面切换时布局错乱的问题\",{\"1\":{\"606\":1}}],[\"修复动态用户组出现bug\",{\"1\":{\"567\":1}}],[\"修复用户组bug\",{\"1\":{\"557\":1}}],[\"修复资源管理无法添加资源\",{\"1\":{\"541\":1}}],[\"修复了一些使用中碰到的\",{\"1\":{\"468\":1}}],[\"修复了大量\",{\"1\":{\"448\":1}}],[\"修复修复拒绝策略为\",{\"1\":{\"421\":1}}],[\"修复因\",{\"1\":{\"421\":1}}],[\"修复因规则过多导致规则查询失败的问题\",{\"1\":{\"316\":1}}],[\"修复钉钉告警不能\",{\"1\":{\"421\":1}}],[\"修复企微告警配置多个接受人不能正确\",{\"1\":{\"421\":1}}],[\"修复企微告警无\",{\"1\":{\"421\":1}}],[\"修复其他\",{\"1\":{\"421\":1}}],[\"修复配置变更后不通知的问题\",{\"1\":{\"412\":1}}],[\"修复飞书告警失败问题\",{\"1\":{\"412\":1}}],[\"修复单体版数据库初始化脚本存在重复数据问题\",{\"1\":{\"397\":1}}],[\"修复微服务版本环境下\",{\"1\":{\"397\":1}}],[\"修复前端工程页面切换动画不生效问题\",{\"1\":{\"397\":1}}],[\"修复前端上传对话框操作按钮逻辑不合理\",{\"1\":{\"397\":1}}],[\"修复前端创建存储桶界面校验存储桶是否存在错误\",{\"1\":{\"397\":1}}],[\"修复前端自定义\",{\"1\":{\"397\":1}}],[\"修复前端封装\",{\"1\":{\"383\":1}}],[\"修复前端在\",{\"1\":{\"383\":1}}],[\"修复安装\",{\"1\":{\"339\":1}}],[\"修复偶尔出现\",{\"1\":{\"331\":1}}],[\"修复停止服务时角色\",{\"1\":{\"331\":1}}],[\"修复缺陷\",{\"0\":{\"339\":1},\"1\":{\"331\":1}}],[\"修复多个面板问题\",{\"1\":{\"331\":1}}],[\"修复客户端关闭方法调用两次\",{\"1\":{\"316\":1}}],[\"修复从\",{\"1\":{\"316\":1}}],[\"修复缓存中规则数据和选择器数据为空的问题\",{\"1\":{\"316\":1}}],[\"修复插件跳过错误\",{\"1\":{\"316\":1}}],[\"修复示例\",{\"1\":{\"316\":1}}],[\"修复丢失\",{\"1\":{\"316\":1}}],[\"修复负载平衡\",{\"1\":{\"316\":1}}],[\"修复升级后的\",{\"1\":{\"316\":1}}],[\"修复加密响应插件的调用错误\",{\"1\":{\"316\":1}}],[\"修复\",{\"0\":{\"316\":1,\"598\":1,\"724\":1,\"735\":1,\"750\":1,\"755\":1},\"1\":{\"316\":41,\"331\":3,\"339\":3,\"354\":2,\"368\":1,\"383\":3,\"397\":8,\"412\":2,\"421\":1,\"461\":1,\"468\":3,\"476\":3,\"492\":3,\"498\":1,\"509\":2,\"522\":2,\"541\":1,\"603\":1,\"606\":11,\"619\":28,\"624\":5,\"631\":1,\"644\":2,\"651\":3,\"660\":1,\"724\":12,\"755\":1,\"809\":1,\"835\":1}}],[\"修理工\",{\"1\":{\"308\":1}}],[\"修改模块化加载\",{\"1\":{\"834\":1}}],[\"修改页面新建和附件保存逻辑\",{\"1\":{\"833\":1}}],[\"修改尺寸\",{\"1\":{\"827\":1}}],[\"修改代码的同时才发现还有很多部分的设计有问题\",{\"1\":{\"720\":1}}],[\"修改代码生成模板\",{\"1\":{\"617\":1}}],[\"修改代码生成模版\",{\"1\":{\"617\":1}}],[\"修改\",{\"1\":{\"576\":1,\"584\":1,\"604\":1,\"609\":2,\"722\":1}}],[\"修改启动getproperty\",{\"1\":{\"557\":1}}],[\"修改为换为jakarta\",{\"1\":{\"547\":1}}],[\"修改为与项目名称一致\",{\"1\":{\"397\":1}}],[\"修改项目介绍信息\",{\"1\":{\"535\":1}}],[\"修改认证系统\",{\"1\":{\"535\":1}}],[\"修改数据互导查询总条数时某些数据库将别名大写了的问题\",{\"1\":{\"835\":1}}],[\"修改数据\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"修改数据源配置为自己的数据库配置\",{\"1\":{\"100\":1}}],[\"修改则直接结束\",{\"1\":{\"148\":1}}],[\"修改缓存信息\",{\"1\":{\"148\":1}}],[\"修改缓存\",{\"1\":{\"141\":1}}],[\"修改的消息\",{\"1\":{\"125\":1}}],[\"修改后的配置如下\",{\"1\":{\"110\":1}}],[\"修改端口为8189\",{\"1\":{\"106\":1}}],[\"红豆生南国\",{\"1\":{\"308\":1}}],[\"红帽\",{\"1\":{\"15\":1}}],[\"朋云\",{\"1\":{\"308\":1}}],[\"祝\",{\"1\":{\"308\":2}}],[\"祝组织越来越好\",{\"1\":{\"308\":1}}],[\"祝福社区越来越好\",{\"1\":{\"308\":4}}],[\"祝开源社区越来越好\",{\"1\":{\"308\":1}}],[\"祝开源的路上越走越远\",{\"1\":{\"308\":1}}],[\"祝越来越好\",{\"1\":{\"308\":2}}],[\"祝社区越来越繁荣\",{\"1\":{\"308\":1}}],[\"祝社区越来越好~\",{\"1\":{\"308\":1}}],[\"祝社区越来越好\",{\"1\":{\"308\":3}}],[\"祝社区越办越好\",{\"1\":{\"308\":1}}],[\"祝社区越走越远\",{\"1\":{\"308\":1}}],[\"祝社区能做的越来越好\",{\"1\":{\"308\":1}}],[\"祝社区的兄弟姐妹们新年快乐\",{\"1\":{\"308\":1}}],[\"晚风\",{\"1\":{\"308\":1}}],[\"曙光\",{\"1\":{\"308\":1}}],[\"买雪糕吃\",{\"1\":{\"308\":1}}],[\"邵昌明\",{\"1\":{\"308\":1}}],[\"岁月无声\",{\"1\":{\"308\":1}}],[\"枫原万耶\",{\"1\":{\"308\":1}}],[\"坚持信念\",{\"1\":{\"308\":1}}],[\"紫气东来\",{\"1\":{\"308\":1}}],[\"钱不多\",{\"1\":{\"308\":1}}],[\"朔\",{\"1\":{\"308\":1}}],[\"泛微网络刘启成\",{\"1\":{\"308\":1}}],[\"泛化接口调用方式主要用于客户端没有\",{\"1\":{\"283\":1}}],[\"泛化调用主要就分为两块分别是消费端如何使用\",{\"1\":{\"292\":1}}],[\"泛化调用的参数类型和参数值\",{\"1\":{\"289\":1}}],[\"泛化调用的关键\",{\"1\":{\"277\":1}}],[\"泛化调用准备\",{\"0\":{\"288\":1},\"1\":{\"276\":1}}],[\"泛化调用实现流程\",{\"0\":{\"286\":1},\"1\":{\"276\":1}}],[\"泛化调用介绍\",{\"0\":{\"283\":1,\"292\":1},\"1\":{\"276\":2}}],[\"泛化调用\",{\"1\":{\"237\":1,\"787\":1}}],[\"西岭千秋雪\",{\"1\":{\"308\":1}}],[\"令牌的签名类型可以被篡改的问题\",{\"1\":{\"624\":1}}],[\"令牌桶算法一共有两种大体实现\",{\"1\":{\"251\":1}}],[\"令牌桶基于\",{\"1\":{\"243\":1}}],[\"令狐冲\",{\"1\":{\"308\":1}}],[\"纯粹赞助\",{\"1\":{\"308\":1}}],[\"木予\",{\"1\":{\"308\":1}}],[\"木偶\",{\"1\":{\"30\":1}}],[\"勿回应\",{\"1\":{\"308\":1}}],[\"五大新特性\",{\"0\":{\"496\":1}}],[\"五一快乐\",{\"1\":{\"308\":1}}],[\"五分钟后\",{\"1\":{\"92\":1}}],[\"连运维配置\",{\"1\":{\"783\":1}}],[\"连通性\",{\"1\":{\"445\":1}}],[\"连洁\",{\"1\":{\"308\":1}}],[\"连接到\",{\"1\":{\"808\":1}}],[\"连接信息加密\",{\"1\":{\"803\":1}}],[\"连接字符串\",{\"1\":{\"741\":1}}],[\"连接池采用\",{\"1\":{\"608\":1}}],[\"连接池\",{\"1\":{\"247\":1}}],[\"连接实例\",{\"1\":{\"247\":1}}],[\"连接立马变更的\",{\"0\":{\"247\":1}}],[\"连接及接收信息\",{\"1\":{\"160\":1,\"161\":1}}],[\"连接\",{\"1\":{\"158\":1,\"331\":1}}],[\"连接不断\",{\"1\":{\"92\":1}}],[\"附语\",{\"1\":{\"308\":1}}],[\"附有您的专属电子门票二维码\",{\"1\":{\"13\":1}}],[\"拥有完整的自治和管理权限\",{\"1\":{\"306\":1}}],[\"拥抱变化\",{\"1\":{\"78\":1}}],[\"道德原则\",{\"1\":{\"306\":1}}],[\"做到动态切换厂商\",{\"1\":{\"741\":1}}],[\"做到整个组织在宣传活动\",{\"1\":{\"306\":1}}],[\"做自己喜欢的开源产品\",{\"1\":{\"456\":1}}],[\"做框架\",{\"1\":{\"411\":1}}],[\"做各种框架线程池的适配器\",{\"1\":{\"411\":1}}],[\"做成一件小事\",{\"1\":{\"308\":1}}],[\"做大做强\",{\"1\":{\"308\":8}}],[\"做什么用的呢\",{\"1\":{\"144\":1}}],[\"希望为物联网设备运营商提供一个高性能\",{\"1\":{\"794\":1}}],[\"希望给大家带来帮助\",{\"1\":{\"786\":1}}],[\"希望这些改进能够提高\",{\"1\":{\"736\":1}}],[\"希望购买代替捐赠\",{\"1\":{\"720\":1}}],[\"希望你来参与建设\",{\"1\":{\"718\":1}}],[\"希望你们都能顺利通过课题\",{\"1\":{\"469\":1}}],[\"希望在这里每个人都有好的思想和观点\",{\"1\":{\"715\":1}}],[\"希望开发者能体谅\",{\"1\":{\"652\":1}}],[\"希望针对节点执行耗时的打印日志支持控制\",{\"1\":{\"492\":1}}],[\"希望框架有与或非表达式的相关日志\",{\"1\":{\"492\":1}}],[\"希望可以使用配置文件中已经配置的数据源\",{\"1\":{\"492\":1}}],[\"希望能帮助开发者和团队快速搭建自有监控系统\",{\"1\":{\"452\":1}}],[\"希望猫大人的开源组织越来越壮大\",{\"1\":{\"308\":1}}],[\"希望\",{\"1\":{\"308\":1}}],[\"希望我们开源社区长长久久\",{\"1\":{\"308\":1}}],[\"希望越来越好\",{\"1\":{\"308\":2}}],[\"希望项目作者在考虑退出\",{\"1\":{\"305\":1}}],[\"希望对你有所帮助\",{\"1\":{\"295\":1}}],[\"邀请进入\",{\"1\":{\"304\":1}}],[\"邀请更多的开发者\",{\"1\":{\"57\":1}}],[\"仓库https\",{\"1\":{\"741\":1}}],[\"仓库在\",{\"1\":{\"729\":1}}],[\"仓库到\",{\"1\":{\"617\":1}}],[\"仓库地址\",{\"0\":{\"436\":1,\"437\":1},\"1\":{\"357\":1}}],[\"仓库\",{\"1\":{\"303\":1,\"727\":1,\"741\":1}}],[\"仓库文档\",{\"0\":{\"302\":1}}],[\"仓库权限\",{\"0\":{\"301\":1}}],[\"仓库名\",{\"1\":{\"300\":2}}],[\"仓库了\",{\"1\":{\"57\":1}}],[\"捐赠至\",{\"1\":{\"809\":1}}],[\"捐赠\",{\"0\":{\"297\":1}}],[\"捐赠项目退出事宜\",{\"0\":{\"305\":1}}],[\"捐赠项目\",{\"1\":{\"10\":1}}],[\"捐赠项目准则\",{\"1\":{\"7\":1}}],[\"拦截缓存后\",{\"1\":{\"763\":1}}],[\"拦截器判断\",{\"1\":{\"617\":1}}],[\"拦截器\",{\"1\":{\"608\":1,\"802\":1}}],[\"拦截泛化请求\",{\"0\":{\"294\":1}}],[\"拦截泛化调用\",{\"1\":{\"292\":1}}],[\"拦截请求后把泛化参数序列化然后请求给具体服务\",{\"1\":{\"292\":1}}],[\"至少本地要\",{\"1\":{\"792\":1}}],[\"至于我为啥不单独立仓库\",{\"1\":{\"764\":1}}],[\"至于为什么成为请求入口自行查询\",{\"1\":{\"287\":1}}],[\"至今\",{\"0\":{\"589\":1}}],[\"至知春路站下车\",{\"1\":{\"12\":1}}],[\"需手动拼接\",{\"1\":{\"608\":1}}],[\"需手动编写\",{\"1\":{\"608\":1}}],[\"需升级至\",{\"1\":{\"444\":1}}],[\"需带上参数列表\",{\"1\":{\"286\":1}}],[\"需要统一鉴权\",{\"1\":{\"791\":1}}],[\"需要部署多个\",{\"1\":{\"791\":1}}],[\"需要用到\",{\"1\":{\"791\":1}}],[\"需要满足正则表达式^\",{\"1\":{\"677\":1}}],[\"需要做很多改造\",{\"1\":{\"608\":1}}],[\"需要编写大量的注解来支持文档生成\",{\"1\":{\"608\":1}}],[\"需要手写\",{\"1\":{\"608\":1}}],[\"需要手动操作\",{\"1\":{\"208\":1}}],[\"需要手动同步\",{\"1\":{\"208\":2}}],[\"需要手动添加\",{\"1\":{\"208\":1}}],[\"需要异步并行中对指定的节点先完成就忽略其他\",{\"1\":{\"516\":1}}],[\"需要投入大量业余时间的\",{\"1\":{\"493\":1}}],[\"需要开发的\",{\"1\":{\"493\":1}}],[\"需要支持对接各种类型协议的监控类型\",{\"1\":{\"456\":1}}],[\"需要执行\",{\"1\":{\"444\":1}}],[\"需要注册到哪个客户端\",{\"1\":{\"327\":1}}],[\"需要注意\",{\"1\":{\"221\":1}}],[\"需要注意的是如果限流类型是并发线程数\",{\"1\":{\"266\":1}}],[\"需要注意的是\",{\"1\":{\"79\":1,\"265\":1,\"266\":2}}],[\"需要由组织委员会投票通过后执行\",{\"1\":{\"306\":1}}],[\"需要更改包名前缀为org\",{\"1\":{\"303\":1}}],[\"需要填写\",{\"1\":{\"265\":1}}],[\"需要操作的\",{\"1\":{\"250\":1}}],[\"需要记录状态\",{\"1\":{\"229\":1}}],[\"需要计算\",{\"1\":{\"229\":1}}],[\"需要获取服务列表\",{\"1\":{\"225\":1}}],[\"需要传入\",{\"1\":{\"219\":1}}],[\"需要重启\",{\"1\":{\"198\":1}}],[\"需要重启服务\",{\"1\":{\"198\":1}}],[\"需要取消\",{\"1\":{\"118\":1}}],[\"需要在现有的自动挡模式下兼容此一对多索引关系\",{\"1\":{\"47\":1}}],[\"需要搬运已经存在的新闻\",{\"1\":{\"41\":1}}],[\"逗号隔开\",{\"1\":{\"278\":1}}],[\"`\",{\"1\":{\"803\":1}}],[\"`next\",{\"1\":{\"406\":1}}],[\"`trigger\",{\"1\":{\"406\":2}}],[\"`job\",{\"1\":{\"406\":7}}],[\"`sched\",{\"1\":{\"406\":1}}],[\"`service\",{\"1\":{\"278\":1}}],[\"`enabled`\",{\"1\":{\"278\":1}}],[\"`date\",{\"1\":{\"278\":2}}],[\"`parameter\",{\"1\":{\"278\":1}}],[\"`path\",{\"1\":{\"278\":1}}],[\"`path`\",{\"1\":{\"278\":1}}],[\"`method\",{\"1\":{\"278\":1}}],[\"`meta\",{\"1\":{\"278\":1}}],[\"`rpc\",{\"1\":{\"278\":2}}],[\"`app\",{\"1\":{\"278\":1}}],[\"`id`\",{\"1\":{\"278\":2}}],[\"└──\",{\"1\":{\"802\":9,\"822\":3}}],[\"└─handler\",{\"1\":{\"273\":1}}],[\"└─resilience4j\",{\"1\":{\"273\":1}}],[\"├──\",{\"1\":{\"802\":6,\"822\":13}}],[\"├─factory\",{\"1\":{\"273\":1}}],[\"├─executor\",{\"1\":{\"273\":1}}],[\"├─conf\",{\"1\":{\"273\":1}}],[\"├─build\",{\"1\":{\"273\":1}}],[\"│\",{\"1\":{\"273\":12,\"802\":9,\"822\":2}}],[\"否\",{\"1\":{\"270\":1,\"406\":1}}],[\"否则走限流组件\",{\"1\":{\"273\":1}}],[\"否则就\",{\"1\":{\"259\":1}}],[\"否则\",{\"1\":{\"227\":1,\"228\":1,\"229\":1,\"263\":1}}],[\"否则准备好发布\",{\"1\":{\"79\":1}}],[\"滑动窗口类型\",{\"1\":{\"270\":1}}],[\"滑动窗口大小\",{\"1\":{\"270\":1}}],[\"滑动窗口算法\",{\"1\":{\"241\":1}}],[\"控制台配置\",{\"1\":{\"790\":1}}],[\"控制台日志每秒输出两条\",{\"1\":{\"271\":1}}],[\"控制台找到插件列表的\",{\"1\":{\"270\":1}}],[\"控制台插件管理开启\",{\"1\":{\"270\":1}}],[\"控制台输出如下内容表示\",{\"1\":{\"101\":1}}],[\"限制模组持仓状态下修改模组配置\",{\"1\":{\"597\":1}}],[\"限时\",{\"1\":{\"269\":1}}],[\"限流注解\",{\"1\":{\"604\":1}}],[\"限流操作\",{\"1\":{\"273\":1}}],[\"限流执行\",{\"1\":{\"273\":1}}],[\"限流执行器\",{\"1\":{\"273\":1}}],[\"限流器组件\",{\"1\":{\"273\":1}}],[\"限流和熔断对象构建\",{\"1\":{\"273\":1}}],[\"限流和熔断执行器\",{\"1\":{\"273\":1}}],[\"限流和熔断分析\",{\"1\":{\"30\":1}}],[\"限流测试\",{\"1\":{\"271\":9,\"272\":1}}],[\"限流阈值类型\",{\"1\":{\"266\":1}}],[\"限流阈值\",{\"1\":{\"266\":1}}],[\"限流算法分析\",{\"0\":{\"252\":1}}],[\"限流规则的具体实现是交给特定的\",{\"1\":{\"251\":1}}],[\"限流插件是底层是如何实现的呢\",{\"0\":{\"248\":1}}],[\"限流插件\",{\"1\":{\"239\":1}}],[\"限流\",{\"0\":{\"271\":1},\"1\":{\"213\":1,\"231\":1,\"268\":1,\"269\":1,\"273\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"783\":1,\"784\":1,\"791\":1}}],[\"断开主动重连\",{\"1\":{\"460\":1}}],[\"断点续传等主要业务需求功能\",{\"1\":{\"373\":1,\"388\":1}}],[\"断点续传等功能\",{\"1\":{\"370\":1,\"385\":1}}],[\"断路器的操作\",{\"1\":{\"273\":1}}],[\"断路器\",{\"1\":{\"269\":1}}],[\"断电啦什么的\",{\"0\":{\"64\":1}}],[\"目录结构\",{\"0\":{\"822\":1}}],[\"目录下\",{\"1\":{\"709\":1}}],[\"目录切换功能\",{\"1\":{\"644\":1}}],[\"目标是打造金融级的一体系分布式事务解决方案\",{\"1\":{\"712\":1}}],[\"目标既可以独立使用集成至任意系统中\",{\"1\":{\"367\":1,\"382\":1}}],[\"目标\",{\"0\":{\"268\":1,\"276\":1}}],[\"目前提供了对\",{\"1\":{\"712\":1}}],[\"目前我主要专注于\",{\"1\":{\"792\":1}}],[\"目前我正在跑的策略有两个\",{\"1\":{\"590\":1}}],[\"目前我们只挑重点来讲\",{\"1\":{\"231\":1}}],[\"目前我们分析的数据变动来源是\",{\"1\":{\"145\":1}}],[\"目前是可选\",{\"1\":{\"529\":1}}],[\"目前团队成员一共有\",{\"1\":{\"514\":1}}],[\"目前有将近\",{\"1\":{\"484\":1}}],[\"目前有超过\",{\"1\":{\"56\":1}}],[\"目前已经被各大公司应用在核心系统上\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"目前已加入\",{\"1\":{\"4\":1}}],[\"目前发现大量白嫖怪\",{\"1\":{\"456\":1}}],[\"目前官方已支持的监控模版可以访问官网\",{\"1\":{\"442\":1}}],[\"目前官方支持的所有监控类型\",{\"1\":{\"54\":1}}],[\"目前最新版本\",{\"1\":{\"409\":1}}],[\"目前赞助商有\",{\"1\":{\"308\":1}}],[\"目前捐赠项目采用转移到\",{\"1\":{\"300\":1}}],[\"目前的子类实现有\",{\"1\":{\"164\":1}}],[\"目前在\",{\"1\":{\"56\":1}}],[\"目前该注解仅支持一对一映射\",{\"1\":{\"47\":1}}],[\"目前\",{\"1\":{\"39\":1,\"55\":1,\"517\":1,\"634\":1,\"746\":1}}],[\"触发了流控或熔断而报错调用sentinelfallbackhandler返回错误信息\",{\"1\":{\"266\":1}}],[\"触发熔断\",{\"1\":{\"264\":3,\"266\":1}}],[\"块\",{\"1\":{\"266\":1}}],[\"匀速队列这种模式会严格控制每个请求的时间间隔\",{\"1\":{\"266\":1}}],[\"匀速排队\",{\"1\":{\"263\":1,\"266\":1}}],[\"慢调用的比例默认是\",{\"1\":{\"265\":1}}],[\"慢调用比例\",{\"1\":{\"264\":1,\"265\":1}}],[\"属于社区\",{\"1\":{\"469\":1}}],[\"属于那么多的贡献者\",{\"1\":{\"469\":1}}],[\"属于\",{\"1\":{\"264\":1}}],[\"属性支持\",{\"1\":{\"328\":1}}],[\"属性值\",{\"1\":{\"288\":1}}],[\"属性\",{\"0\":{\"687\":1},\"1\":{\"231\":1,\"232\":1,\"314\":1,\"430\":2,\"624\":1,\"683\":1}}],[\"属性存放具体实现类\",{\"1\":{\"183\":1}}],[\"属性的被调用处时\",{\"1\":{\"167\":1}}],[\"抖动的情况\",{\"1\":{\"264\":1}}],[\"排队超时\",{\"1\":{\"411\":1}}],[\"排队等待处理\",{\"1\":{\"263\":1}}],[\"排名不分先后\",{\"1\":{\"317\":1}}],[\"排除业务\",{\"1\":{\"262\":1}}],[\"避免集群冲突\",{\"1\":{\"617\":1}}],[\"避免与其他框架默认配置冲突\",{\"1\":{\"604\":1}}],[\"避免误解\",{\"1\":{\"604\":1}}],[\"避免低版本信息泄漏问题\",{\"1\":{\"603\":1}}],[\"避免可能出现的人工干预与模组订单同时出现时导致的下单负手数问题\",{\"1\":{\"597\":1}}],[\"避免可能出现的异常问题\",{\"1\":{\"597\":1}}],[\"避免互相污染\",{\"1\":{\"342\":1}}],[\"避免宕机期间造成数据丢失\",{\"1\":{\"321\":1}}],[\"避免冷系统被压垮\",{\"1\":{\"263\":1}}],[\"避免了\",{\"1\":{\"176\":1}}],[\"极端情况下事务日志序列化异常\",{\"1\":{\"708\":1}}],[\"极端情况下甚至导致线程池耗尽\",{\"1\":{\"263\":1}}],[\"极端情况获取\",{\"1\":{\"604\":1}}],[\"极简的轻量级\",{\"1\":{\"4\":1}}],[\"阈值配置不仅仅有表达式\",{\"1\":{\"448\":1}}],[\"阈值是\",{\"1\":{\"266\":1}}],[\"阈值是多少\",{\"1\":{\"263\":1}}],[\"阈值则是\",{\"1\":{\"266\":1}}],[\"阈值告警通知一步到位\",{\"1\":{\"53\":1,\"441\":1,\"447\":1}}],[\"组最大长度等\",{\"1\":{\"608\":1}}],[\"组权限问题修复\",{\"1\":{\"557\":1}}],[\"组合注解支持属性重写\",{\"1\":{\"438\":1}}],[\"组合注解是\",{\"1\":{\"430\":1}}],[\"组合address注解\",{\"1\":{\"430\":2}}],[\"组合header注解\",{\"1\":{\"430\":2}}],[\"组委会有最终解释权\",{\"0\":{\"307\":1}}],[\"组\",{\"1\":{\"264\":1}}],[\"组件不存在时\",{\"1\":{\"519\":1}}],[\"组件降级特性\",{\"1\":{\"522\":1}}],[\"组件降级允许你定义各个类型组件的降级组件\",{\"1\":{\"519\":1}}],[\"组件降级\",{\"0\":{\"519\":1}}],[\"组件回滚\",{\"0\":{\"506\":1}}],[\"组件上添加\",{\"1\":{\"468\":1}}],[\"组件代码模块化但不支持采集器独立部署\",{\"1\":{\"453\":1}}],[\"组件\",{\"1\":{\"331\":4,\"340\":1,\"397\":1,\"604\":1}}],[\"组件独立运行于\",{\"1\":{\"266\":1}}],[\"组件的环境变量\",{\"1\":{\"339\":1}}],[\"组件的\",{\"1\":{\"261\":1}}],[\"组件实现熔断及流控功能\",{\"1\":{\"261\":1}}],[\"组织的第一个关于数据库分库分表的顶级项目\",{\"1\":{\"792\":1}}],[\"组织机构和用户同步的rest和scim从maxkey\",{\"1\":{\"535\":1}}],[\"组织相关决策事务\",{\"1\":{\"306\":1}}],[\"组织委员会由每个项目的主要负责人组成\",{\"1\":{\"306\":1}}],[\"组织哪里做的不好的地方\",{\"1\":{\"305\":1}}],[\"组织之前可以先和我们沟通\",{\"1\":{\"305\":1}}],[\"组织会在各大平台和社区群进行公告推送告知\",{\"1\":{\"305\":1}}],[\"组织后无法认同组织的发展理念或想转移到其他组织\",{\"1\":{\"305\":1}}],[\"组织\",{\"0\":{\"304\":1},\"1\":{\"301\":1}}],[\"组织负责人会给新加项目负责人设置超级管理员权限\",{\"1\":{\"301\":1}}],[\"组织仓库方式进行处理\",{\"1\":{\"300\":1}}],[\"组织dubbo\",{\"1\":{\"289\":1}}],[\"组织有\",{\"1\":{\"39\":1}}],[\"组织不得从事违法或损人利己的事情\",{\"1\":{\"6\":1}}],[\"组织责任\",{\"0\":{\"6\":1}}],[\"搞清楚默认\",{\"1\":{\"259\":1}}],[\"搞起来\",{\"1\":{\"124\":1}}],[\"顾名思义\",{\"1\":{\"256\":1}}],[\"场景全方位升级\",{\"1\":{\"607\":1}}],[\"场景拆分为不同的\",{\"1\":{\"374\":1,\"389\":1}}],[\"场景描述\",{\"0\":{\"262\":1}}],[\"场景\",{\"0\":{\"256\":1}}],[\"工程中实现\",{\"1\":{\"374\":1,\"389\":1}}],[\"工程的\",{\"1\":{\"255\":1}}],[\"工作流等功能\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"工作原理\",{\"1\":{\"260\":1}}],[\"工具采用平滑加权负载均衡算法实现\",{\"1\":{\"748\":1}}],[\"工具类\",{\"0\":{\"800\":1},\"1\":{\"802\":1}}],[\"工具类库\",{\"1\":{\"719\":1}}],[\"工具类框架\",{\"1\":{\"608\":1}}],[\"工具栏优化\",{\"0\":{\"658\":1},\"1\":{\"651\":1}}],[\"工具包插件\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"工具数量有限\",{\"1\":{\"608\":1}}],[\"工具使用繁琐\",{\"1\":{\"608\":1}}],[\"工具个人认为是封神佳作\",{\"1\":{\"308\":1}}],[\"工具\",{\"1\":{\"271\":1}}],[\"工厂\",{\"1\":{\"165\":1}}],[\"吗\",{\"1\":{\"252\":1}}],[\"核心控制\",{\"1\":{\"802\":1}}],[\"核心模块去除对\",{\"1\":{\"713\":1}}],[\"核心模块\",{\"1\":{\"624\":1}}],[\"核心功能\",{\"1\":{\"574\":1}}],[\"核心\",{\"1\":{\"367\":1,\"382\":1}}],[\"核心价值内容的关注度\",{\"1\":{\"367\":1,\"382\":1}}],[\"核心基础依赖便捷切换\",{\"0\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"核心数据支持直连数据库获取和\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"核心类\",{\"1\":{\"273\":1}}],[\"核心思路是业务网关保证打到后面的请求是业务可以承受的量\",{\"1\":{\"263\":1}}],[\"核心处理\",{\"1\":{\"259\":1}}],[\"核心代码到单独\",{\"1\":{\"342\":1}}],[\"核心代码\",{\"1\":{\"252\":1}}],[\"核心系统按照规范加载即可\",{\"1\":{\"216\":1}}],[\"核心系统设计的关键技术\",{\"1\":{\"216\":1}}],[\"乘\",{\"1\":{\"252\":1}}],[\"值来快速定位行\",{\"1\":{\"677\":1}}],[\"值取自项目域名配置中的环境\",{\"1\":{\"677\":1}}],[\"值\",{\"1\":{\"617\":1,\"624\":1,\"678\":1}}],[\"值都一样\",{\"1\":{\"606\":1}}],[\"值不一样\",{\"1\":{\"567\":1}}],[\"值得信赖为什么使用\",{\"1\":{\"636\":1}}],[\"值得一说的是\",{\"1\":{\"517\":1}}],[\"值得学习\",{\"1\":{\"308\":1}}],[\"值的对比\",{\"1\":{\"515\":1}}],[\"值为1\",{\"1\":{\"252\":1}}],[\"值应该为毫秒数的字符串形式\",{\"1\":{\"191\":1}}],[\"脚本支持\",{\"0\":{\"679\":1}}],[\"脚本片段插入优化\",{\"1\":{\"667\":1}}],[\"脚本启动服务端\",{\"1\":{\"583\":1}}],[\"脚本语言的详细文档请参照官网中脚本组件\",{\"1\":{\"502\":1}}],[\"脚本语言的写法\",{\"1\":{\"502\":1}}],[\"脚本语言轻巧\",{\"1\":{\"502\":1}}],[\"脚本存放在所有的关系型数据库中\",{\"1\":{\"483\":1}}],[\"脚本配置\",{\"1\":{\"354\":1}}],[\"脚本找不到问题\",{\"1\":{\"339\":1}}],[\"脚本错误\",{\"1\":{\"316\":1}}],[\"脚本的\",{\"1\":{\"251\":1}}],[\"脚本\",{\"1\":{\"251\":1,\"617\":1,\"656\":1,\"679\":1}}],[\"启停全部模组会出现异常的问题\",{\"1\":{\"598\":1}}],[\"启用存储\",{\"1\":{\"814\":1}}],[\"启用了新的\",{\"1\":{\"738\":1}}],[\"启用了全新的域名\",{\"1\":{\"500\":1}}],[\"启用全新域名\",{\"0\":{\"500\":1}}],[\"启用宕机续读功能\",{\"1\":{\"325\":1}}],[\"启用状态\",{\"1\":{\"278\":1}}],[\"启用对应插件\",{\"0\":{\"243\":1}}],[\"启动客户端\",{\"0\":{\"585\":1}}],[\"启动参数指定日志级别\",{\"1\":{\"574\":1}}],[\"启动脚本的java\",{\"1\":{\"557\":1}}],[\"启动日志\",{\"1\":{\"315\":1}}],[\"启动三个服务\",{\"1\":{\"270\":1}}],[\"启动定时探活任务\",{\"1\":{\"226\":1}}],[\"启动的过程中\",{\"1\":{\"220\":1}}],[\"启动的时候会去\",{\"1\":{\"208\":1}}],[\"启动的时候遇到了如下的错误\",{\"1\":{\"208\":1}}],[\"启动向容器自动注入\",{\"1\":{\"210\":1}}],[\"启动不起来报空指针异常\",{\"1\":{\"208\":1}}],[\"启动过程为入口\",{\"1\":{\"203\":1}}],[\"启动就会同步网关数据\",{\"1\":{\"201\":1,\"203\":1}}],[\"启动服务\",{\"0\":{\"199\":1},\"1\":{\"208\":1}}],[\"启动后不会自动向\",{\"1\":{\"208\":1}}],[\"启动后不会主动向\",{\"1\":{\"208\":1}}],[\"启动后就会从\",{\"1\":{\"205\":1}}],[\"启动后会自动注入\",{\"1\":{\"205\":1}}],[\"启动后在控制台中看到了\",{\"1\":{\"200\":1}}],[\"启动后\",{\"1\":{\"158\":1,\"200\":1}}],[\"启动线程执行\",{\"1\":{\"149\":1}}],[\"启动类项目\",{\"1\":{\"131\":1}}],[\"启动类属性配置\",{\"1\":{\"74\":1}}],[\"启动第二个进程\",{\"1\":{\"118\":1}}],[\"启动项目\",{\"0\":{\"112\":1}}],[\"启动两个服务模拟负载均衡\",{\"0\":{\"106\":1}}],[\"启动soul\",{\"1\":{\"103\":1}}],[\"启动一个服务\",{\"0\":{\"103\":1}}],[\"启动成功后\",{\"1\":{\"100\":1}}],[\"启动\",{\"0\":{\"99\":1,\"100\":1,\"101\":1,\"151\":1,\"197\":1,\"203\":1},\"1\":{\"199\":1,\"208\":3,\"340\":1,\"644\":1,\"781\":1,\"788\":1}}],[\"启动时不打印已知错误日志\",{\"1\":{\"315\":1}}],[\"启动时\",{\"1\":{\"92\":1,\"156\":1}}],[\"初衷\",{\"1\":{\"396\":1}}],[\"初步集成\",{\"1\":{\"338\":1}}],[\"初步使用\",{\"0\":{\"242\":1}}],[\"初版\",{\"0\":{\"305\":1}}],[\"初始化项目\",{\"1\":{\"610\":1}}],[\"初始化就失败了\",{\"1\":{\"468\":1}}],[\"初始化顺序不确定导致的\",{\"1\":{\"421\":1}}],[\"初始化晚于线程池实例初始化问题\",{\"1\":{\"412\":1}}],[\"初始化时\",{\"1\":{\"226\":1}}],[\"初始化时构建各类实现\",{\"1\":{\"161\":1}}],[\"初始化说起\",{\"1\":{\"226\":1}}],[\"初始化会执行\",{\"1\":{\"210\":1}}],[\"初始化会调用\",{\"1\":{\"148\":1}}],[\"初始化完成后会执行\",{\"1\":{\"209\":1}}],[\"初始化到数据到\",{\"1\":{\"200\":1}}],[\"初始化过程中\",{\"1\":{\"200\":1}}],[\"初始化\",{\"1\":{\"171\":1,\"177\":1,\"205\":1,\"220\":1}}],[\"初始化实现类\",{\"1\":{\"170\":1}}],[\"初始化后放入缓存中\",{\"1\":{\"168\":1}}],[\"初始化对象\",{\"1\":{\"167\":1}}],[\"初始化前方法里面启动了定时线程\",{\"1\":{\"92\":1}}],[\"初始间隔\",{\"1\":{\"92\":1}}],[\"详看\",{\"1\":{\"688\":1}}],[\"详见\",{\"1\":{\"334\":1}}],[\"详情请阅读\",{\"1\":{\"817\":1}}],[\"详情\",{\"1\":{\"354\":1}}],[\"详情可查看\",{\"1\":{\"331\":1}}],[\"详情错误\",{\"1\":{\"316\":1}}],[\"详情看对应博客介绍\",{\"1\":{\"241\":1}}],[\"详细请看厂商标识介绍部分\",{\"1\":{\"772\":1}}],[\"详细源码分析\",{\"0\":{\"183\":1}}],[\"详细解读\",{\"0\":{\"80\":1}}],[\"固定窗口\",{\"1\":{\"241\":1}}],[\"固需要使用者自己拉取代码\",{\"1\":{\"73\":1}}],[\"计划于\",{\"1\":{\"612\":1}}],[\"计划\",{\"1\":{\"612\":1}}],[\"计划今年推出\",{\"1\":{\"493\":1}}],[\"计数器\",{\"1\":{\"241\":1}}],[\"计算能力的量化交易平台\",{\"0\":{\"589\":1}}],[\"计算当前请求的预期通过时间\",{\"1\":{\"263\":1}}],[\"计算出当前剩余的令牌数量\",{\"1\":{\"252\":1}}],[\"计算出上次调用和本次调用之间的时间差\",{\"1\":{\"252\":1}}],[\"计算过期时间\",{\"1\":{\"252\":1}}],[\"计算填充时间\",{\"1\":{\"252\":1}}],[\"计算所有权重是否一样\",{\"1\":{\"134\":1}}],[\"计算表达式\",{\"1\":{\"53\":1,\"441\":1}}],[\"阅读官方文档\",{\"0\":{\"241\":1}}],[\"学习技术\",{\"1\":{\"792\":1}}],[\"学习机会\",{\"1\":{\"635\":1}}],[\"学习和贡献\",{\"1\":{\"627\":1}}],[\"学习和运用新技术\",{\"1\":{\"396\":1}}],[\"学习过程中有任何问题欢迎大家与我联系\",{\"1\":{\"587\":1}}],[\"学习成本\",{\"1\":{\"448\":1}}],[\"学习加交流\",{\"1\":{\"308\":1}}],[\"学习\",{\"1\":{\"308\":1}}],[\"学习使用\",{\"0\":{\"240\":1}}],[\"学生需要会前端开发\",{\"1\":{\"40\":1}}],[\"学生报名\",{\"1\":{\"36\":1}}],[\"学生开启报名\",{\"0\":{\"36\":1}}],[\"梳理\",{\"0\":{\"714\":1},\"1\":{\"237\":1}}],[\"梳理一下abstractsoulplugin\",{\"1\":{\"234\":1}}],[\"失败自动重试\",{\"1\":{\"774\":1}}],[\"失败女神\",{\"1\":{\"635\":1}}],[\"失败的问题\",{\"1\":{\"421\":1}}],[\"失败打印日志\",{\"1\":{\"236\":1}}],[\"失效\",{\"1\":{\"71\":1}}],[\"演示\",{\"1\":{\"235\":1}}],[\"拼装真实调用地址\",{\"1\":{\"235\":1}}],[\"考虑到是介绍一次请求流程的大体逻辑\",{\"1\":{\"234\":1}}],[\"考虑后台缓存与数据库的交互是怎样的\",{\"1\":{\"143\":1,\"145\":1}}],[\"代星登\",{\"1\":{\"617\":1}}],[\"代理验证\",{\"0\":{\"586\":1}}],[\"代理服务端ip\",{\"1\":{\"585\":2}}],[\"代理功能\",{\"1\":{\"431\":1}}],[\"代理\",{\"0\":{\"432\":1,\"433\":1},\"1\":{\"429\":1,\"432\":1,\"438\":1,\"783\":2,\"785\":1}}],[\"代表获取成功\",{\"1\":{\"252\":1}}],[\"代表执行成功\",{\"1\":{\"249\":1}}],[\"代表执行的结果\",{\"1\":{\"249\":1}}],[\"代表申请的令牌数\",{\"1\":{\"249\":1}}],[\"代表插件成功使用\",{\"1\":{\"245\":1}}],[\"代表全局代理\",{\"1\":{\"234\":1}}],[\"代码遵循\",{\"1\":{\"715\":1}}],[\"代码准则\",{\"1\":{\"715\":1}}],[\"代码至上\",{\"1\":{\"711\":1,\"725\":1}}],[\"代码检查\",{\"1\":{\"707\":1}}],[\"代码仓库\",{\"0\":{\"625\":1}}],[\"代码仓库贡献过\",{\"1\":{\"56\":1}}],[\"代码提示\",{\"1\":{\"624\":1}}],[\"代码单例测试\",{\"1\":{\"608\":1}}],[\"代码与页面\",{\"1\":{\"608\":1}}],[\"代码臃肿需自己手写\",{\"1\":{\"608\":1}}],[\"代码逻辑\",{\"1\":{\"608\":1}}],[\"代码书写与常规结构不同阅读障碍大\",{\"1\":{\"608\":1}}],[\"代码生成页面参数缺少逗号问题\",{\"1\":{\"619\":1}}],[\"代码生成原生结构\",{\"1\":{\"608\":1}}],[\"代码生成器\",{\"1\":{\"608\":1}}],[\"代码生成\",{\"1\":{\"606\":1,\"609\":1,\"619\":3}}],[\"代码优化和整合\",{\"1\":{\"541\":1}}],[\"代码托管\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"代码在\",{\"1\":{\"406\":1}}],[\"代码放置混乱逻辑不易理解问题\",{\"1\":{\"397\":1}}],[\"代码质量不高\",{\"1\":{\"396\":1}}],[\"代码构造器结构\",{\"1\":{\"370\":1,\"385\":1}}],[\"代码以共享模块的方式进行单独维护开发\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"代码简洁规范\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"代码和业务代码分别由不同\",{\"1\":{\"342\":1}}],[\"代码完全开源\",{\"1\":{\"336\":1,\"340\":1}}],[\"代码\",{\"1\":{\"316\":1,\"368\":1,\"609\":1,\"715\":1}}],[\"代码规范\",{\"1\":{\"308\":1}}],[\"代码注释已经打全了\",{\"1\":{\"252\":1}}],[\"代码整体逻辑还是非常明朗的\",{\"1\":{\"252\":1}}],[\"代码片段\",{\"1\":{\"81\":1}}],[\"代码零侵入\",{\"1\":{\"65\":1,\"409\":1,\"419\":1}}],[\"代码刚好执行到这一行\",{\"0\":{\"64\":1}}],[\"切换服务\",{\"1\":{\"619\":1}}],[\"切换\",{\"1\":{\"617\":1}}],[\"切换路由滚动功能\",{\"1\":{\"604\":1}}],[\"切割后的方法名\",{\"1\":{\"232\":1}}],[\"切面配置\",{\"1\":{\"74\":1}}],[\"切面有异常的时候\",{\"1\":{\"67\":1}}],[\"切面中\",{\"1\":{\"64\":1}}],[\"切面绑定在一起的\",{\"1\":{\"63\":1}}],[\"切面加了一把锁\",{\"1\":{\"61\":1}}],[\"切面的方式与你的\",{\"1\":{\"61\":1}}],[\"含义\",{\"1\":{\"232\":1}}],[\"含讲师及工作人员\",{\"1\":{\"13\":1}}],[\"未修改校验注解\",{\"1\":{\"619\":1}}],[\"未查询到数据\",{\"1\":{\"368\":1}}],[\"未使用任何流行开源模版\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"未跳过的插件为\",{\"1\":{\"231\":12}}],[\"未来规划\",{\"0\":{\"829\":1}}],[\"未来的发展仍然有许多潜力和机会\",{\"1\":{\"91\":1}}],[\"未来更多与华为云开源生态的结合\",{\"1\":{\"16\":1}}],[\"暂未哭\",{\"1\":{\"456\":1}}],[\"暂停与恢复\",{\"1\":{\"406\":1}}],[\"暂停及取消运行中的任务\",{\"1\":{\"405\":1}}],[\"暂停所有线程执行特定的操作\",{\"1\":{\"82\":1}}],[\"暂不支持行为验证码\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"暂时忽略\",{\"1\":{\"231\":1}}],[\"暂时未发现实际引用地址\",{\"1\":{\"231\":1}}],[\"角色关联菜单无需管理员\",{\"1\":{\"617\":1}}],[\"角色权限支持仅本人权限查看\",{\"1\":{\"617\":1}}],[\"角色菜单权限分配\",{\"1\":{\"609\":1}}],[\"角色管理\",{\"1\":{\"609\":1}}],[\"角色与权限校验支持多种条件\",{\"1\":{\"608\":1}}],[\"角色校验\",{\"1\":{\"608\":1}}],[\"角色列表关联多表\",{\"1\":{\"606\":1}}],[\"角色调整为用户组\",{\"1\":{\"547\":1}}],[\"角色\",{\"1\":{\"231\":1,\"608\":1,\"609\":1}}],[\"枚举类的主要作用是什么呢\",{\"1\":{\"231\":1}}],[\"扩展元素\",{\"1\":{\"822\":1}}],[\"扩展方式\",{\"1\":{\"792\":1}}],[\"扩展参数模式\",{\"1\":{\"624\":1}}],[\"扩展性差\",{\"1\":{\"608\":1}}],[\"扩展性强\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"扩展了\",{\"1\":{\"608\":1}}],[\"扩展包形式\",{\"1\":{\"608\":1}}],[\"扩展两种无须二次请求的用户信息传递方式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"扩展\",{\"1\":{\"357\":2,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"420\":1}}],[\"扩展为更符合实际应用的方式和设计\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"扩展加载器加载目标负载均衡算法\",{\"1\":{\"230\":1}}],[\"扩展大家视野\",{\"1\":{\"23\":1}}],[\"确认了架构的稳定性与可扩展性得到验证\",{\"0\":{\"589\":1}}],[\"确保通信过程的可靠性和稳定性\",{\"1\":{\"803\":1}}],[\"确保通信双方的身份合法性和通信的安全性\",{\"1\":{\"803\":1}}],[\"确保只有经过授权的设备和服务器才能建立连接\",{\"1\":{\"803\":1}}],[\"确保数据传输的安全性\",{\"1\":{\"794\":1,\"803\":1}}],[\"确保数据的完整性和可靠性\",{\"1\":{\"803\":1}}],[\"确保数据的完整性\",{\"1\":{\"628\":1}}],[\"确保数据的一致性\",{\"1\":{\"628\":1}}],[\"确保整体稳定性和质量\",{\"1\":{\"507\":1}}],[\"确保\",{\"1\":{\"342\":1,\"733\":1}}],[\"确定随机值落在哪个段上\",{\"1\":{\"229\":1}}],[\"确实收到了插件数据的更新\",{\"1\":{\"206\":1}}],[\"按需打包和加载呢\",{\"1\":{\"792\":1}}],[\"按需传参即可\",{\"1\":{\"374\":1,\"389\":1}}],[\"按代码规范补全重写注解\",{\"1\":{\"604\":1}}],[\"按钮位置调整和折叠\",{\"1\":{\"658\":1}}],[\"按钮权限标识等\",{\"1\":{\"609\":1}}],[\"按钮\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"按总权重取随机数\",{\"1\":{\"229\":1}}],[\"按总权重随机细节\",{\"1\":{\"229\":1}}],[\"按服务数随机\",{\"1\":{\"229\":2}}],[\"按照\",{\"1\":{\"166\":1,\"397\":2}}],[\"按照项目分类\",{\"1\":{\"42\":1}}],[\"整合\",{\"1\":{\"708\":1,\"714\":1}}],[\"整合为插件融入了自己的体系中\",{\"1\":{\"264\":1}}],[\"整理\",{\"1\":{\"624\":1}}],[\"整理出如下表格\",{\"1\":{\"231\":1}}],[\"整理整个\",{\"1\":{\"231\":1}}],[\"整体是一片树叶形状\",{\"1\":{\"499\":1}}],[\"整体调整各类模块\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"整体梳理结果如下图\",{\"1\":{\"231\":1}}],[\"整体看下来\",{\"1\":{\"228\":1}}],[\"整个叶子被叶脉分隔成\",{\"1\":{\"499\":1}}],[\"整个框架质量的命脉\",{\"1\":{\"484\":1}}],[\"整个\",{\"1\":{\"353\":1,\"358\":1}}],[\"整个大项目下存在两个同名的类\",{\"1\":{\"163\":1}}],[\"整个开发界也逐步进入到\",{\"1\":{\"78\":1}}],[\"尝试里程碑发布\",{\"0\":{\"719\":1}}],[\"尝试部署\",{\"0\":{\"465\":1}}],[\"尝试部署集群版\",{\"0\":{\"457\":1}}],[\"尝试采用构建\",{\"1\":{\"367\":1,\"382\":1}}],[\"尝试使用域名格式测试主机是否可达\",{\"1\":{\"228\":1}}],[\"尝试去\",{\"1\":{\"208\":1}}],[\"非必须配置\",{\"1\":{\"772\":1}}],[\"非操作符的短路控制优化\",{\"1\":{\"492\":1}}],[\"非对称\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"非常简单即可修改成自己想要的\",{\"1\":{\"608\":1}}],[\"非常欢迎文档\",{\"1\":{\"442\":1}}],[\"非常欢迎加入\",{\"1\":{\"336\":1,\"340\":1}}],[\"非常的麻烦\",{\"1\":{\"431\":1}}],[\"非常感谢\",{\"1\":{\"330\":1}}],[\"非\",{\"1\":{\"228\":1,\"305\":1}}],[\"格式的编辑器\",{\"1\":{\"831\":1}}],[\"格式的监控模版定义\",{\"1\":{\"54\":1}}],[\"格式错误\",{\"1\":{\"683\":1}}],[\"格式还是\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"格式是采用\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"格式及校验方式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"格式表单字段的显示\",{\"1\":{\"315\":1}}],[\"格式如下\",{\"1\":{\"250\":1}}],[\"格式\",{\"1\":{\"228\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"活跃度低\",{\"1\":{\"608\":1}}],[\"活到老写到老\",{\"1\":{\"607\":1}}],[\"活性报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"活性检查\",{\"0\":{\"228\":1}}],[\"活动检查\",{\"1\":{\"227\":1}}],[\"活动支持\",{\"1\":{\"57\":1}}],[\"活动详情\",{\"0\":{\"30\":1,\"33\":1}}],[\"活动负责人以及主要参与者\",{\"0\":{\"25\":1}}],[\"活动分多期\",{\"1\":{\"24\":1}}],[\"活动开展\",{\"0\":{\"24\":1}}],[\"活动目的\",{\"0\":{\"23\":1}}],[\"活动背景\",{\"0\":{\"22\":1}}],[\"活动介绍\",{\"0\":{\"21\":1}}],[\"活动\",{\"0\":{\"19\":1},\"1\":{\"40\":1}}],[\"待调用\",{\"1\":{\"221\":1}}],[\"待补\",{\"1\":{\"119\":1,\"132\":3}}],[\"借鉴参考流行开源版本的使用和设计\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"借鉴了\",{\"1\":{\"269\":1}}],[\"借由插件链\",{\"1\":{\"220\":1}}],[\"借助社区的力量\",{\"1\":{\"635\":1}}],[\"借助贯穿整个插件链的\",{\"1\":{\"217\":1}}],[\"借助\",{\"1\":{\"217\":2,\"220\":2}}],[\"取消\",{\"1\":{\"606\":1}}],[\"取step时候存在问题\",{\"1\":{\"492\":1}}],[\"取代之前的文件配置\",{\"1\":{\"448\":1}}],[\"取最小操作\",{\"1\":{\"252\":1}}],[\"取下限\",{\"1\":{\"252\":1}}],[\"取值一致\",{\"1\":{\"232\":1}}],[\"取得序号\",{\"1\":{\"219\":1}}],[\"取出响应信息中的\",{\"1\":{\"148\":1}}],[\"取出节点在缓存中的信息\",{\"1\":{\"135\":1}}],[\"交流群\",{\"1\":{\"465\":1}}],[\"交流开源技术\",{\"1\":{\"15\":1}}],[\"交由开发者来决定\",{\"1\":{\"503\":1}}],[\"交由各个子类实现\",{\"1\":{\"234\":1}}],[\"交由插件链下游进行处理\",{\"1\":{\"230\":1}}],[\"交由子类具体实现\",{\"1\":{\"219\":1}}],[\"交换区\",{\"1\":{\"219\":1}}],[\"完成代码生成多数据源统一存储\",{\"1\":{\"615\":1}}],[\"完成向下游插件的定向传参\",{\"1\":{\"217\":1}}],[\"完\",{\"1\":{\"599\":1}}],[\"完整支持\",{\"1\":{\"787\":1}}],[\"完整\",{\"1\":{\"617\":1}}],[\"完整更新列表\",{\"0\":{\"476\":1,\"492\":1,\"509\":1}}],[\"完整的更新列表\",{\"0\":{\"522\":1}}],[\"完整的\",{\"1\":{\"374\":1,\"389\":1}}],[\"完整的单体版和微服务版案例\",{\"1\":{\"374\":1,\"389\":1}}],[\"完整的前端示例\",{\"1\":{\"370\":1,\"385\":1}}],[\"完善文档代码\",{\"1\":{\"448\":1}}],[\"完善与发展\",{\"1\":{\"367\":1,\"382\":1}}],[\"完善的注释文档\",{\"1\":{\"370\":1,\"385\":1}}],[\"完善的\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"完全的插件化架构设计\",{\"1\":{\"787\":1}}],[\"完全纯\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"完全可以只启动\",{\"1\":{\"150\":1}}],[\"防抖函数\",{\"1\":{\"834\":1}}],[\"防重系统简化实现\",{\"1\":{\"608\":1}}],[\"防火墙等等\",{\"1\":{\"213\":1}}],[\"防止信息被窃取或篡改\",{\"1\":{\"803\":1}}],[\"防止事务悬挂\",{\"1\":{\"706\":1}}],[\"防止异常不执行关闭问题\",{\"1\":{\"605\":1}}],[\"防止二次调用的cas操作\",{\"1\":{\"148\":1}}],[\"防止把请求发送到已经宕机的节点上\",{\"1\":{\"125\":1}}],[\"熔断功能\",{\"1\":{\"787\":1}}],[\"熔断肯定少不了\",{\"1\":{\"784\":1,\"791\":1}}],[\"熔断默认是关闭的\",{\"1\":{\"274\":1}}],[\"熔断器才会开启\",{\"1\":{\"270\":1}}],[\"熔断器开启持续时间\",{\"1\":{\"270\":1}}],[\"熔断超时时间\",{\"1\":{\"270\":1}}],[\"熔断时间窗口\",{\"1\":{\"266\":1}}],[\"熔断时长内\",{\"1\":{\"264\":1}}],[\"熔断判断的依据\",{\"1\":{\"266\":1}}],[\"熔断判定方式和熔断阈值需要结合来看\",{\"1\":{\"265\":1}}],[\"熔断同样需要考虑这种情况\",{\"1\":{\"266\":1}}],[\"熔断期间如果请求该服务则\",{\"1\":{\"265\":1}}],[\"熔断开关表示是否开启熔断\",{\"1\":{\"265\":1}}],[\"熔断窗口大小指的是触发熔断后经过多少秒后进入半开状态\",{\"1\":{\"265\":1}}],[\"熔断窗口大小\",{\"1\":{\"265\":1}}],[\"熔断阈值\",{\"1\":{\"265\":1,\"266\":1}}],[\"熔断降级\",{\"1\":{\"264\":1}}],[\"熔断等规则对请求进行处理\",{\"1\":{\"231\":1}}],[\"熔断\",{\"0\":{\"264\":1,\"265\":1,\"272\":1},\"1\":{\"213\":1,\"268\":1,\"273\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"783\":1,\"790\":1}}],[\"鉴权与分布式会话同步\",{\"1\":{\"608\":1}}],[\"鉴权的相关属性目前不知道具体作用\",{\"1\":{\"232\":2}}],[\"鉴权\",{\"1\":{\"213\":1,\"783\":1,\"784\":1,\"791\":1}}],[\"缺少\",{\"1\":{\"624\":1}}],[\"缺一不可\",{\"1\":{\"208\":1}}],[\"缺陷\",{\"0\":{\"175\":1}}],[\"终于启动成功\",{\"1\":{\"208\":1}}],[\"~zzzachary\",{\"1\":{\"308\":1}}],[\"~\",{\"1\":{\"208\":13}}],[\"观察是否会进入此断点\",{\"1\":{\"206\":1}}],[\"过滤器\",{\"1\":{\"783\":1}}],[\"过期后\",{\"1\":{\"624\":1}}],[\"过期登出无法清理在线用户问题\",{\"1\":{\"619\":1}}],[\"过期时间的单位为秒\",{\"1\":{\"763\":1}}],[\"过期时间\",{\"1\":{\"252\":1,\"608\":1,\"763\":1}}],[\"过去一年来保持了非常快的增长趋势\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"过多内容的集成\",{\"1\":{\"367\":1,\"382\":1}}],[\"过程\",{\"1\":{\"205\":1}}],[\"过时\",{\"1\":{\"83\":1}}],[\"跟我们一起成长\",{\"1\":{\"765\":1}}],[\"跟群友一起交流讨论\",{\"1\":{\"415\":1,\"424\":1}}],[\"跟着猫大人冲\",{\"1\":{\"308\":1}}],[\"跟着猫大人做开源\",{\"1\":{\"308\":1}}],[\"跟着猫大人搞开源\",{\"1\":{\"308\":2}}],[\"跟踪\",{\"1\":{\"204\":1}}],[\"跟踪数据同步过程\",{\"0\":{\"204\":1},\"1\":{\"203\":1}}],[\"跟前面的\",{\"1\":{\"125\":1}}],[\"变量的时候\",{\"1\":{\"692\":1}}],[\"变量\",{\"0\":{\"684\":1},\"1\":{\"679\":1,\"683\":1}}],[\"变量读取解析\",{\"1\":{\"664\":1}}],[\"变更\",{\"1\":{\"368\":1,\"722\":1}}],[\"变更网关数据\",{\"0\":{\"204\":1},\"1\":{\"203\":1}}],[\"变的更好\",{\"1\":{\"60\":1}}],[\"操作日志\",{\"1\":{\"609\":1}}],[\"操作权限\",{\"1\":{\"609\":1}}],[\"操作啦\",{\"1\":{\"448\":1}}],[\"操作\",{\"0\":{\"203\":1},\"1\":{\"608\":1}}],[\"操作系统\",{\"1\":{\"53\":1,\"55\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"四\",{\"0\":{\"201\":1,\"207\":1,\"218\":1}}],[\"思维导图\",{\"1\":{\"200\":1}}],[\"思考解决\",{\"1\":{\"715\":1}}],[\"思考\",{\"0\":{\"168\":1},\"1\":{\"173\":1}}],[\"应该如何做呢\",{\"1\":{\"789\":1}}],[\"应该是零成本上手的\",{\"1\":{\"517\":1}}],[\"应该是监听元数据变化\",{\"1\":{\"200\":1}}],[\"应该不用执行\",{\"1\":{\"489\":1}}],[\"应该能彻底解决之前的问题\",{\"1\":{\"485\":1}}],[\"应该为一个可达的服务路径\",{\"1\":{\"257\":1}}],[\"应用访问空值问题\",{\"1\":{\"557\":1}}],[\"应用场景举例\",{\"0\":{\"406\":1}}],[\"应用场景\",{\"0\":{\"322\":1}}],[\"应用名称\",{\"1\":{\"278\":1}}],[\"应用逻辑被分割为独立的插件模块和核心系统\",{\"1\":{\"215\":1}}],[\"应用程序开发的各个方面\",{\"1\":{\"90\":1}}],[\"应用程序的灵活性\",{\"1\":{\"89\":1}}],[\"应用程序的可维护性和性能\",{\"1\":{\"87\":1}}],[\"应用程序的可维护性和易用性\",{\"1\":{\"86\":1}}],[\"应用程序的性能和安全性\",{\"1\":{\"83\":1}}],[\"应用程序的性能和可维护性\",{\"1\":{\"82\":1,\"84\":1,\"85\":1,\"88\":2,\"89\":1}}],[\"应用程序的开发和运行提供了更好的支持\",{\"1\":{\"81\":1}}],[\"应用程序启动时优化\",{\"1\":{\"81\":1}}],[\"应用级别的\",{\"1\":{\"79\":1,\"82\":1}}],[\"建应用\",{\"1\":{\"567\":1}}],[\"建设初期以\",{\"1\":{\"367\":1,\"382\":1}}],[\"建立连接\",{\"1\":{\"200\":1}}],[\"建议使用\",{\"1\":{\"620\":2}}],[\"建议增加janino插件\",{\"1\":{\"509\":1}}],[\"建议自定义英文名称\",{\"1\":{\"457\":1,\"465\":1}}],[\"建议和uri条件搭配\",{\"1\":{\"114\":1}}],[\"建议不要使用\",{\"1\":{\"114\":1}}],[\"访问域名\",{\"1\":{\"814\":1}}],[\"访问\",{\"1\":{\"788\":1}}],[\"访问官网\",{\"1\":{\"642\":1,\"649\":1}}],[\"访问我们的官方网站\",{\"1\":{\"635\":1}}],[\"访问本地被代理服务\",{\"1\":{\"586\":1}}],[\"访问http\",{\"1\":{\"584\":1}}],[\"访问行为记录追溯审计\",{\"1\":{\"554\":1,\"564\":1}}],[\"访问策略\",{\"1\":{\"554\":1,\"564\":1}}],[\"访问反向代理\",{\"1\":{\"372\":1,\"387\":1}}],[\"访问远程调用可扩展性更强\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"访问请求\",{\"1\":{\"195\":1}}],[\"访问地址\",{\"1\":{\"100\":1}}],[\"异步处理\",{\"1\":{\"802\":1}}],[\"异步循环模式\",{\"0\":{\"505\":1}}],[\"异步执行\",{\"0\":{\"67\":1},\"1\":{\"64\":1}}],[\"异常的问题\",{\"1\":{\"606\":1}}],[\"异常抛出\",{\"1\":{\"272\":1}}],[\"异常处理\",{\"1\":{\"266\":1,\"809\":1}}],[\"异常处理的handler\",{\"1\":{\"266\":1}}],[\"异常数策略\",{\"1\":{\"265\":1}}],[\"异常数\",{\"1\":{\"264\":1}}],[\"异常比例\",{\"1\":{\"264\":1,\"265\":1}}],[\"异常\",{\"1\":{\"195\":1,\"412\":1}}],[\"判断工具\",{\"1\":{\"617\":1}}],[\"判断下推防止任何可能的\",{\"1\":{\"604\":1}}],[\"判断一个数是否质数有很多方法\",{\"1\":{\"406\":1}}],[\"判断此次请求是不是泛化调用\",{\"1\":{\"294\":1}}],[\"判断此插件是否未打开\",{\"1\":{\"287\":1}}],[\"判断泛化调用方式\",{\"1\":{\"293\":1}}],[\"判断metadata是否有误\",{\"1\":{\"288\":1}}],[\"判断当前index\",{\"1\":{\"287\":1}}],[\"判断当前令牌数量\",{\"1\":{\"252\":1}}],[\"判断当前的限流配置实例是否和传递的限流实例一致\",{\"1\":{\"247\":1}}],[\"判断中的代码就是基于\",{\"1\":{\"247\":1}}],[\"判断插件是否启用\",{\"1\":{\"234\":1}}],[\"判断服务列表内服务的权重是否一致\",{\"1\":{\"229\":1}}],[\"判断监听类是\",{\"1\":{\"209\":1}}],[\"判断传入的和再次签名的是否一样\",{\"1\":{\"195\":1}}],[\"判断请求时间是否超时\",{\"1\":{\"195\":1}}],[\"判断请求头信息是否正确\",{\"1\":{\"195\":1}}],[\"判断\",{\"1\":{\"195\":1,\"219\":1,\"288\":1}}],[\"判断是否为泛化调用\",{\"1\":{\"293\":1}}],[\"判断是否存在\",{\"1\":{\"247\":1}}],[\"判断是否需要重新加载redis连接值\",{\"1\":{\"247\":1}}],[\"判断是否需要调过\",{\"1\":{\"220\":1}}],[\"判断是否跳过本次处理\",{\"1\":{\"219\":1}}],[\"判断是否该返回自身\",{\"1\":{\"172\":1}}],[\"判断是否要更新缓存\",{\"1\":{\"148\":1}}],[\"判断是否修改\",{\"1\":{\"148\":1}}],[\"判断是否是同一个节点\",{\"1\":{\"125\":1}}],[\"禁用后还会导致回显问题\",{\"1\":{\"617\":1}}],[\"禁用实时生效\",{\"1\":{\"577\":1}}],[\"禁用\",{\"1\":{\"193\":1}}],[\"签名错误的返回\",{\"1\":{\"193\":1}}],[\"签到入场\",{\"0\":{\"13\":1}}],[\"填写错误的返回\",{\"1\":{\"193\":1}}],[\"超大声\",{\"1\":{\"308\":1}}],[\"超时异常事务悬挂\",{\"1\":{\"714\":1}}],[\"超时异常恢复\",{\"1\":{\"706\":1}}],[\"超时控制只能针对when表达式\",{\"1\":{\"504\":1}}],[\"超时时间为\",{\"1\":{\"271\":1}}],[\"超时时间\",{\"1\":{\"235\":1,\"236\":1,\"237\":1}}],[\"超时时间以及重试次数并交由插件链下游进行处理\",{\"1\":{\"224\":1}}],[\"超时时间以及重试次数\",{\"1\":{\"224\":1}}],[\"超时的返回\",{\"1\":{\"193\":1}}],[\"超过这个请求数才开启熔断统计\",{\"1\":{\"270\":1}}],[\"超过阈值的请求\",{\"1\":{\"266\":1}}],[\"超过\",{\"1\":{\"39\":1}}],[\"添加负载均衡工具\",{\"0\":{\"748\":1}}],[\"添加一个通用的\",{\"0\":{\"747\":1}}],[\"添加锁构造\",{\"1\":{\"723\":1}}],[\"添加监控时指定采集器\",{\"1\":{\"455\":1}}],[\"添加插件机制\",{\"1\":{\"420\":1}}],[\"添加集成测试\",{\"1\":{\"315\":1}}],[\"添加方式\",{\"1\":{\"315\":1}}],[\"添加打印日志的参数\",{\"1\":{\"315\":1}}],[\"添加idea\",{\"1\":{\"314\":1}}],[\"添加数据库的连接池配置\",{\"1\":{\"314\":1}}],[\"添加api\",{\"1\":{\"314\":1}}],[\"添加shenyusdkclientfactory的测试用例\",{\"1\":{\"314\":1}}],[\"添加shenyuclientapidocexecutorsubscriber的测试用例\",{\"1\":{\"314\":1}}],[\"添加detailserivice测试用例\",{\"1\":{\"314\":1}}],[\"添加最短响应负载均衡算法\",{\"1\":{\"314\":1}}],[\"添加华为云\",{\"1\":{\"313\":1}}],[\"添加\",{\"0\":{\"746\":1},\"1\":{\"313\":6,\"314\":17,\"315\":4,\"316\":1,\"420\":1,\"609\":1,\"709\":1,\"782\":1,\"834\":1}}],[\"添加限流选择器\",{\"0\":{\"244\":1}}],[\"添加了一个静态方法用于获取\",{\"0\":{\"749\":1}}],[\"添加了一个用于刷新数据库配置的方法\",{\"1\":{\"727\":1}}],[\"添加了多厂商支持和并用\",{\"1\":{\"740\":1}}],[\"添加了自定义的配置形式\",{\"1\":{\"727\":1}}],[\"添加了\",{\"1\":{\"210\":1,\"315\":1}}],[\"添加规则器\",{\"1\":{\"190\":1}}],[\"添加选择器\",{\"1\":{\"190\":1}}],[\"放在\",{\"1\":{\"709\":2}}],[\"放宽菜单权限\",{\"1\":{\"617\":1}}],[\"放入到右键菜单\",{\"0\":{\"696\":1},\"1\":{\"692\":1}}],[\"放入\",{\"1\":{\"232\":1,\"723\":2}}],[\"放入入参\",{\"1\":{\"183\":1}}],[\"放到类属性\",{\"1\":{\"156\":1}}],[\"读起来拗口\",{\"1\":{\"352\":1}}],[\"读取配置\",{\"0\":{\"760\":1}}],[\"读取时\",{\"1\":{\"724\":1}}],[\"读取\",{\"1\":{\"183\":1,\"205\":1,\"664\":1}}],[\"读出\",{\"1\":{\"180\":1}}],[\"构造方法\",{\"1\":{\"220\":1}}],[\"构造\",{\"1\":{\"183\":3}}],[\"构建时支持自定义参数\",{\"1\":{\"723\":1}}],[\"构建出包含\",{\"1\":{\"644\":1}}],[\"构建统一的错误\",{\"1\":{\"372\":1,\"387\":1}}],[\"构建产品生态\",{\"0\":{\"367\":1}}],[\"构建成熟的\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"构建resilience4jconf对象\",{\"1\":{\"273\":1}}],[\"构建实现了\",{\"1\":{\"161\":1}}],[\"构建各类监听器\",{\"1\":{\"160\":1}}],[\"构建\",{\"0\":{\"372\":1,\"387\":1},\"1\":{\"149\":1,\"395\":1,\"402\":1}}],[\"构建一个请求对象空壳\",{\"1\":{\"136\":1}}],[\"构建了上万人的开源社区\",{\"1\":{\"37\":1}}],[\"命名机制\",{\"1\":{\"688\":1}}],[\"命名避免误解\",{\"1\":{\"617\":1}}],[\"命名更改为\",{\"1\":{\"617\":1}}],[\"命中则直接返回要找的类\",{\"1\":{\"183\":1}}],[\"命令的\",{\"1\":{\"644\":1}}],[\"命令统计等\",{\"1\":{\"609\":1}}],[\"命令即可安装体验\",{\"1\":{\"442\":1,\"448\":1}}],[\"命令操作\",{\"0\":{\"347\":1}}],[\"命令行工具\",{\"1\":{\"81\":1}}],[\"命令\",{\"1\":{\"81\":1,\"98\":1,\"339\":1,\"644\":3}}],[\"命令和\",{\"1\":{\"81\":1}}],[\"想用就开启\",{\"1\":{\"789\":1}}],[\"想要更新到\",{\"0\":{\"781\":1}}],[\"想要获取的某个实现类\",{\"1\":{\"183\":1}}],[\"想为\",{\"1\":{\"430\":1}}],[\"想把当前的统计任务暂停一段时间\",{\"1\":{\"406\":1}}],[\"想想有点小激动哈哈\",{\"1\":{\"56\":1}}],[\"标定此配置是哪个厂商\",{\"1\":{\"772\":1}}],[\"标注从yml读取配置\",{\"1\":{\"772\":1}}],[\"标注\",{\"1\":{\"370\":1,\"385\":1}}],[\"标准的文字邮件\",{\"1\":{\"774\":1}}],[\"标准协议\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"标准和开放的用户身份管理\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"标准化业务逻辑和解决方案集合\",{\"0\":{\"373\":1,\"388\":1}}],[\"标准\",{\"1\":{\"370\":1,\"385\":1,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2,\"715\":1}}],[\"标识\",{\"1\":{\"180\":1,\"183\":5,\"770\":1}}],[\"标签方言命名空间\",{\"1\":{\"624\":1}}],[\"标签\",{\"1\":{\"55\":1,\"316\":1}}],[\"迭代时做过的事情\",{\"1\":{\"177\":1}}],[\"迭代时实际会\",{\"1\":{\"170\":1}}],[\"迭代器版实现\",{\"1\":{\"177\":1}}],[\"版\",{\"1\":{\"624\":1}}],[\"版权声明\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"版权等\",{\"1\":{\"456\":1}}],[\"版升级至\",{\"1\":{\"368\":4,\"383\":2}}],[\"版的\",{\"1\":{\"176\":1}}],[\"版本支持用户自定义插件开发\",{\"1\":{\"780\":1}}],[\"版本终于正式发布\",{\"1\":{\"768\":1}}],[\"版本终于发布了\",{\"1\":{\"753\":1}}],[\"版本震撼发布\",{\"0\":{\"768\":1}}],[\"版本再添新支持厂商\",{\"1\":{\"745\":1}}],[\"版本正式发布\",{\"0\":{\"727\":1,\"743\":1,\"753\":1}}],[\"版本为\",{\"1\":{\"720\":1}}],[\"版本对使用者\",{\"0\":{\"702\":1}}],[\"版本对比\",{\"1\":{\"574\":1}}],[\"版本保持一致\",{\"1\":{\"617\":1}}],[\"版本最大的变化是增加了监控台对移动端的适配\",{\"0\":{\"595\":1}}],[\"版本没有\",{\"1\":{\"493\":1}}],[\"版本是\",{\"1\":{\"493\":1}}],[\"版本是一个进行诸多增强的版本\",{\"1\":{\"481\":1}}],[\"版本中是通过\",{\"1\":{\"779\":1}}],[\"版本中我们对于短信限制功能进行了重构\",{\"1\":{\"750\":1}}],[\"版本中新推出了一个配置\",{\"1\":{\"521\":1}}],[\"版本中\",{\"1\":{\"485\":1,\"486\":1,\"491\":1,\"504\":1,\"740\":1,\"750\":1,\"770\":1,\"771\":1}}],[\"版本主要就是对日志从底层进行架构改造\",{\"1\":{\"474\":1}}],[\"版本主要有如下重大更新\",{\"1\":{\"331\":1}}],[\"版本更新包括以下内容\",{\"1\":{\"624\":1}}],[\"版本更新\",{\"0\":{\"458\":1}}],[\"版本监控云服务\",{\"1\":{\"452\":1}}],[\"版本来了\",{\"0\":{\"442\":1}}],[\"版本可以\",{\"1\":{\"430\":1}}],[\"版本前端\",{\"1\":{\"395\":1,\"402\":1}}],[\"版本及相关基础设施版本升级至\",{\"1\":{\"354\":1}}],[\"版本升级至\",{\"1\":{\"354\":19,\"360\":5,\"368\":5,\"383\":3,\"397\":13}}],[\"版本说明\",{\"0\":{\"353\":1,\"529\":1,\"535\":1,\"541\":1,\"547\":1,\"557\":1,\"567\":1}}],[\"版本直接贡献的社区成员\",{\"1\":{\"335\":1}}],[\"版本的\",{\"1\":{\"781\":1}}],[\"版本的管理后台\",{\"1\":{\"781\":1}}],[\"版本的建议\",{\"0\":{\"780\":1}}],[\"版本的后台管理中\",{\"1\":{\"778\":1}}],[\"版本的源代码中\",{\"1\":{\"484\":1}}],[\"版本的发布离不开所有社区成员的支持和反馈\",{\"1\":{\"335\":1}}],[\"版本的支持时间可能会受到\",{\"1\":{\"79\":1}}],[\"版本至\",{\"1\":{\"315\":1}}],[\"版本记录\",{\"1\":{\"312\":1}}],[\"版本预览\",{\"0\":{\"312\":1}}],[\"版本发布做出的贡献\",{\"1\":{\"330\":1}}],[\"版本发布\",{\"0\":{\"303\":1,\"573\":1,\"729\":1},\"1\":{\"632\":1}}],[\"版本发布比较多\",{\"1\":{\"40\":1}}],[\"版本类型\",{\"1\":{\"79\":1}}],[\"版本指的是长期支持版本\",{\"1\":{\"79\":1}}],[\"版本\",{\"0\":{\"700\":1,\"778\":1,\"781\":2},\"1\":{\"8\":1,\"79\":2,\"91\":2,\"299\":1,\"312\":1,\"315\":1,\"321\":1,\"330\":1,\"353\":1,\"358\":1,\"460\":1,\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1,\"612\":1,\"701\":1,\"716\":1,\"783\":1}}],[\"驱动问题\",{\"1\":{\"331\":1}}],[\"驱动中\",{\"1\":{\"175\":1}}],[\"驱动实选方案是路径头匹配\",{\"1\":{\"172\":1}}],[\"驱动包\",{\"0\":{\"170\":1}}],[\"头上传递\",{\"1\":{\"779\":1}}],[\"头说明\",{\"1\":{\"624\":1}}],[\"头\",{\"1\":{\"172\":1}}],[\"归纳几点\",{\"1\":{\"172\":1}}],[\"呢\",{\"1\":{\"171\":1,\"225\":1}}],[\"筛选规则\",{\"1\":{\"234\":1}}],[\"筛选选择器\",{\"1\":{\"234\":1}}],[\"筛选方式是交由\",{\"1\":{\"172\":1}}],[\"筛选工作其实在实现类自身的\",{\"1\":{\"171\":1}}],[\"筛选\",{\"0\":{\"171\":1},\"1\":{\"171\":1,\"790\":1}}],[\"管理工具\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"管理和执行测试流程\",{\"1\":{\"627\":1}}],[\"管理后台\",{\"1\":{\"706\":1}}],[\"管理后台配置\",{\"0\":{\"584\":1}}],[\"管理后台的具体配置如下\",{\"1\":{\"132\":1}}],[\"管理\",{\"1\":{\"460\":1,\"585\":1}}],[\"管理部署维护都不方便\",{\"1\":{\"455\":1}}],[\"管理界面方式\",{\"1\":{\"374\":1,\"389\":1}}],[\"管理界面\",{\"1\":{\"368\":2,\"374\":1,\"389\":1}}],[\"管理平台在\",{\"1\":{\"264\":1}}],[\"管理器中\",{\"1\":{\"170\":1}}],[\"流量监控\",{\"1\":{\"577\":1}}],[\"流量控制的相关配置有\",{\"1\":{\"266\":1}}],[\"流量控制的策略是什么\",{\"1\":{\"263\":1}}],[\"流量控制\",{\"0\":{\"263\":1,\"266\":1}}],[\"流程调度还是其他自动化任务\",{\"1\":{\"627\":1}}],[\"流程进行超时控制\",{\"1\":{\"504\":1}}],[\"流程没有结束的问题\",{\"1\":{\"476\":1}}],[\"流式上传\",{\"1\":{\"397\":3}}],[\"流控报错\",{\"1\":{\"266\":1}}],[\"流控行为\",{\"1\":{\"266\":1}}],[\"流控方式\",{\"1\":{\"266\":1}}],[\"流控策略里我们可以选择\",{\"1\":{\"266\":1}}],[\"流控开关\",{\"1\":{\"266\":1}}],[\"流控效果\",{\"1\":{\"266\":2}}],[\"流读取到资源文件\",{\"1\":{\"168\":1}}],[\"流行工具\",{\"1\":{\"37\":1}}],[\"反复\",{\"1\":{\"715\":1}}],[\"反复遍历还是阻塞等待\",{\"1\":{\"143\":1,\"145\":1}}],[\"反向促进提升生态产品的完整性\",{\"1\":{\"367\":1,\"382\":1}}],[\"反而会带来过多的依赖性和耦合性\",{\"1\":{\"367\":1,\"382\":1}}],[\"反序列化\",{\"1\":{\"294\":1}}],[\"反序列化泛化参数\",{\"1\":{\"294\":1}}],[\"反应式编程语法\",{\"1\":{\"220\":1}}],[\"反射\",{\"1\":{\"173\":1}}],[\"反射加载对应路径并生成\",{\"1\":{\"168\":1}}],[\"反射得到\",{\"1\":{\"167\":1}}],[\"写得慢\",{\"1\":{\"768\":1}}],[\"写完这些分析我们再来看如果实现个简单的\",{\"1\":{\"173\":1}}],[\"写到这我有个非常疑惑的地方\",{\"1\":{\"168\":1}}],[\"写入到实例属性\",{\"1\":{\"167\":1}}],[\"写了这么多\",{\"1\":{\"124\":1}}],[\"肯定需要迭代器完成实现类的搜索和初始化\",{\"1\":{\"167\":1}}],[\"肯定是需求不少了\",{\"1\":{\"764\":1}}],[\"肯定是更符合开闭原则\",{\"1\":{\"165\":1}}],[\"肯定是没看源码\",{\"1\":{\"64\":1}}],[\"找\",{\"1\":{\"442\":1}}],[\"找寻到实际返回类\",{\"1\":{\"167\":1}}],[\"找到被暂停的这个任务\",{\"1\":{\"406\":1}}],[\"找到该任务点击暂停按钮即可\",{\"1\":{\"406\":1}}],[\"找到监听事件的代码\",{\"1\":{\"155\":1}}],[\"找到调用类\",{\"1\":{\"144\":1}}],[\"找到大于此hash值的位置\",{\"1\":{\"133\":1}}],[\"找到\",{\"1\":{\"122\":1,\"144\":1,\"167\":1}}],[\"找到对应的\",{\"1\":{\"92\":1}}],[\"入门必看\",{\"1\":{\"610\":1}}],[\"入群交流\",{\"1\":{\"578\":1}}],[\"入眼最醒目的就是之前我们按照规范放置资源文件的目录\",{\"1\":{\"167\":1}}],[\"入库\",{\"1\":{\"124\":1}}],[\"马在跑\",{\"1\":{\"166\":1}}],[\"狗在跑\",{\"1\":{\"166\":1}}],[\"书中也有个非常形象的脑图\",{\"1\":{\"165\":1}}],[\"要使用\",{\"1\":{\"791\":1}}],[\"要和\",{\"1\":{\"783\":1}}],[\"要链接的数据库名称\",{\"1\":{\"741\":1}}],[\"要稳重\",{\"1\":{\"720\":1}}],[\"要方便快捷不少\",{\"1\":{\"430\":1}}],[\"要实现网关自身接口转发\",{\"1\":{\"258\":1}}],[\"要想在运行时动态地给一个接口添加实现\",{\"1\":{\"165\":1}}],[\"要自增到很久之后\",{\"1\":{\"135\":1}}],[\"内嵌事务调用的问题\",{\"1\":{\"700\":1}}],[\"内测\",{\"0\":{\"633\":1}}],[\"内网穿透神器\",{\"0\":{\"573\":1}}],[\"内网穿透神器neutrinoproxy\",{\"0\":{\"572\":1}}],[\"内容\",{\"1\":{\"374\":1,\"389\":1}}],[\"内无法正常使用\",{\"1\":{\"339\":1}}],[\"内存\",{\"1\":{\"609\":2,\"790\":1}}],[\"内存泄漏错误\",{\"1\":{\"316\":1}}],[\"内存中\",{\"1\":{\"278\":1}}],[\"内存里面\",{\"1\":{\"112\":1}}],[\"内部实现\",{\"1\":{\"751\":1}}],[\"内部产生报错信息问题\",{\"1\":{\"606\":1}}],[\"内部\",{\"1\":{\"422\":1}}],[\"内部机制无法直接使用\",{\"1\":{\"374\":1,\"389\":1}}],[\"内部接口转发\",{\"1\":{\"258\":1}}],[\"内部使用\",{\"1\":{\"229\":1}}],[\"内部维护了两份散列表\",{\"1\":{\"225\":1}}],[\"内部通过\",{\"1\":{\"225\":1}}],[\"内部持有\",{\"1\":{\"224\":1}}],[\"内置多种翻译实现\",{\"1\":{\"608\":1}}],[\"内置默认\",{\"1\":{\"360\":1}}],[\"内置丰富的插件支持\",{\"1\":{\"213\":1}}],[\"内置的一种服务提供发现功能\",{\"1\":{\"165\":1}}],[\"章节\",{\"1\":{\"816\":2,\"817\":1}}],[\"章\",{\"1\":{\"165\":1}}],[\"来提供接口给别人调用吗\",{\"1\":{\"784\":1,\"791\":1}}],[\"来进行流量过滤\",{\"1\":{\"790\":1}}],[\"来进行后台的查看等等\",{\"1\":{\"783\":1}}],[\"来进行具体设置如下图\",{\"1\":{\"264\":1}}],[\"来替换固定值或者魔法值\",{\"1\":{\"677\":1,\"678\":1}}],[\"来模糊匹配多层级的任意名字的文件\",{\"1\":{\"520\":1}}],[\"来存储规则以及脚本\",{\"1\":{\"503\":1}}],[\"来书写逻辑\",{\"1\":{\"502\":1}}],[\"来跑的\",{\"1\":{\"482\":1}}],[\"来了\",{\"0\":{\"448\":1}}],[\"来统计\",{\"1\":{\"406\":1}}],[\"来考虑就是每秒达到多少时开始流控\",{\"1\":{\"263\":1}}],[\"来监控流量\",{\"1\":{\"263\":1}}],[\"来源于数据同步\",{\"1\":{\"228\":1}}],[\"来表明顺序\",{\"1\":{\"200\":1}}],[\"来选择具体的实现类\",{\"1\":{\"164\":1}}],[\"来筛选流量\",{\"1\":{\"114\":2}}],[\"返回信息优化\",{\"1\":{\"756\":1}}],[\"返回\",{\"1\":{\"489\":1,\"724\":1}}],[\"返回结果等等\",{\"1\":{\"783\":1}}],[\"返回结果是\",{\"1\":{\"286\":1}}],[\"返回结果\",{\"0\":{\"291\":1},\"1\":{\"276\":1}}],[\"返回的错误信息\",{\"1\":{\"249\":1}}],[\"返回的都是同一个对象\",{\"1\":{\"166\":1}}],[\"返回前台\",{\"1\":{\"237\":1}}],[\"返回一个最终选择的服务信息\",{\"1\":{\"230\":1}}],[\"返回一个节点\",{\"1\":{\"164\":1}}],[\"返回值改为\",{\"1\":{\"722\":1}}],[\"返回值\",{\"1\":{\"86\":1,\"251\":1,\"286\":1}}],[\"列举几个\",{\"1\":{\"714\":2}}],[\"列表注入到网关的插件链\",{\"1\":{\"217\":1}}],[\"列表\",{\"1\":{\"161\":1,\"628\":1}}],[\"列出个大概\",{\"1\":{\"131\":1}}],[\"收到中断信号时同样可以在代码中使用checkpoint保存当前的执行快照\",{\"1\":{\"406\":1}}],[\"收集所有注册为\",{\"1\":{\"161\":1,\"162\":1}}],[\"收获\",{\"1\":{\"46\":1}}],[\"收获良多\",{\"1\":{\"18\":1}}],[\"信息可以自己扩展\",{\"1\":{\"422\":1}}],[\"信息的问题\",{\"1\":{\"421\":1}}],[\"信息和加载器\",{\"1\":{\"167\":1}}],[\"信息\",{\"1\":{\"160\":1,\"230\":1}}],[\"信息给持有会话\",{\"1\":{\"142\":1}}],[\"维护所有连接后台的\",{\"1\":{\"160\":1}}],[\"维护着包括\",{\"1\":{\"11\":1}}],[\"另一方面不断地融合和使用各类新兴技术\",{\"1\":{\"396\":1}}],[\"另一种情况是在整个服务体系中有一些核心服务\",{\"1\":{\"262\":1}}],[\"另一种是把\",{\"1\":{\"253\":1}}],[\"另一个进行更新\",{\"1\":{\"791\":1}}],[\"另一个模块不需要\",{\"1\":{\"791\":1}}],[\"另一个在\",{\"1\":{\"163\":1}}],[\"另一个是长期支持版本\",{\"1\":{\"91\":1}}],[\"另外新版本的\",{\"1\":{\"474\":1}}],[\"另外感谢\",{\"1\":{\"335\":1}}],[\"另外参考\",{\"1\":{\"175\":1}}],[\"另外一个\",{\"1\":{\"154\":1}}],[\"哪个接口\",{\"1\":{\"152\":1}}],[\"篇\",{\"0\":{\"159\":1}}],[\"篇还有印象的话\",{\"1\":{\"154\":1}}],[\"篇文章\",{\"1\":{\"150\":1}}],[\"篇中\",{\"1\":{\"150\":1}}],[\"范金鹏\",{\"1\":{\"150\":1}}],[\"啥变化也没有\",{\"1\":{\"149\":1}}],[\"什么是\",{\"0\":{\"269\":1,\"451\":1,\"463\":1},\"1\":{\"268\":1}}],[\"什么时候加载插件\",{\"1\":{\"216\":1}}],[\"什么意思呢\",{\"1\":{\"149\":1}}],[\"什么你在打断电调试\",{\"1\":{\"64\":1}}],[\"死循环来轮询\",{\"1\":{\"149\":1}}],[\"该系统采用自研的\",{\"1\":{\"794\":1}}],[\"该注解曾导致项目的\",{\"1\":{\"755\":1}}],[\"该项目采用最为宽松的\",{\"1\":{\"576\":1}}],[\"该版本中包含了一些重要的更新和改进\",{\"1\":{\"727\":1}}],[\"该版本基于\",{\"1\":{\"395\":1,\"402\":1}}],[\"该版本共计提交了280+个\",{\"1\":{\"312\":1}}],[\"该接口支持泛型\",{\"1\":{\"324\":1}}],[\"该错提示服务已阻塞\",{\"1\":{\"266\":1}}],[\"该错提示客户端再次尝试\",{\"1\":{\"266\":1}}],[\"该名称对应1个流控或熔断策略\",{\"1\":{\"266\":1}}],[\"该模式是\",{\"1\":{\"265\":1}}],[\"该简版省掉了很多非核心流程\",{\"1\":{\"264\":1}}],[\"该方法是获取\",{\"1\":{\"250\":1}}],[\"该方法如下\",{\"1\":{\"249\":1}}],[\"该方法会调用后台拉取数据\",{\"1\":{\"148\":1}}],[\"该实现的\",{\"1\":{\"237\":1}}],[\"该类是数据同步过程中最终会影响的类\",{\"1\":{\"234\":1}}],[\"该类加载时会在静态块中\",{\"1\":{\"173\":1}}],[\"该抽象类结构如下\",{\"1\":{\"219\":1}}],[\"该插件接口结构如下\",{\"1\":{\"219\":1}}],[\"该自定义注解需要在框架已有的索引托管\",{\"1\":{\"47\":1}}],[\"消耗极小\",{\"1\":{\"503\":1}}],[\"消耗肯定不是个好设计\",{\"1\":{\"145\":1}}],[\"消息转发\",{\"1\":{\"801\":1}}],[\"消息队列\",{\"1\":{\"448\":1}}],[\"消息模式\",{\"1\":{\"216\":1}}],[\"消费线程数量\",{\"1\":{\"64\":1}}],[\"疑惑\",{\"1\":{\"145\":1}}],[\"塞入响应信息并释放掉\",{\"1\":{\"145\":1}}],[\"立即调用线程池\",{\"1\":{\"145\":1}}],[\"暴露\",{\"1\":{\"144\":1,\"313\":1}}],[\"被保护不允许\",{\"1\":{\"657\":1}}],[\"被转换为\",{\"1\":{\"608\":1}}],[\"被广泛使用的开源产品\",{\"1\":{\"456\":1}}],[\"被剥离的内容以独立的产品形态存在\",{\"1\":{\"367\":1,\"382\":1}}],[\"被捕获解析的风险\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"被代理的服务使用提供的\",{\"1\":{\"282\":1}}],[\"被调用时\",{\"1\":{\"173\":1}}],[\"被调用处\",{\"1\":{\"144\":1}}],[\"被上层调用\",{\"1\":{\"128\":1}}],[\"阻塞队列\",{\"1\":{\"144\":1}}],[\"很简单对吧\",{\"1\":{\"783\":1}}],[\"很有道德负担\",{\"1\":{\"720\":1}}],[\"很有可能就是网关被\",{\"1\":{\"144\":1}}],[\"很高兴来了这里季节\",{\"1\":{\"717\":1}}],[\"很无语这类人\",{\"1\":{\"456\":1}}],[\"很好的隐藏\",{\"1\":{\"374\":1,\"389\":1}}],[\"很强\",{\"1\":{\"308\":1}}],[\"很明显\",{\"1\":{\"219\":1,\"469\":1}}],[\"很多后台管理系统还有权限的划分\",{\"1\":{\"783\":1}}],[\"很多功能都是高度自定义\",{\"1\":{\"783\":1}}],[\"很多人并不常用\",{\"1\":{\"749\":1}}],[\"很多人向我们反应了项目名称太长不好记\",{\"1\":{\"738\":1}}],[\"很多多的规划\",{\"1\":{\"718\":1}}],[\"很多不熟悉的这些语言写法的同学可能还要花点时间去学习该如何写\",{\"1\":{\"502\":1}}],[\"很多用户需要的监控指标名称国际化等等\",{\"1\":{\"460\":1}}],[\"很多朋友都反映名字太长\",{\"1\":{\"352\":1}}],[\"很多东西只是简单的描述\",{\"1\":{\"77\":1}}],[\"很多应用都提供\",{\"1\":{\"54\":1}}],[\"像是标记已完成了响应\",{\"1\":{\"144\":1}}],[\"意思是任意一个完成即继续\",{\"1\":{\"516\":1}}],[\"意味着吞吐量下降和更多的线程数占用\",{\"1\":{\"263\":1}}],[\"意味着使用了它的\",{\"1\":{\"144\":1}}],[\"意义和目标\",{\"0\":{\"23\":1}}],[\"围绕我们的思考\",{\"1\":{\"144\":1}}],[\"围绕着华为云如何帮助开源开发者实现商业化价值各抒己见\",{\"1\":{\"17\":1}}],[\"得以真正完善\",{\"1\":{\"633\":1}}],[\"得以诞生\",{\"1\":{\"633\":1}}],[\"得到一个非常优雅的表现方式\",{\"1\":{\"518\":1}}],[\"得到一个子类\",{\"1\":{\"164\":1}}],[\"得到对应标识\",{\"1\":{\"181\":1}}],[\"得到子类的执行结果\",{\"1\":{\"166\":1}}],[\"得到变化的类型\",{\"1\":{\"149\":1}}],[\"得到监听请求的响应结果\",{\"1\":{\"149\":1}}],[\"得到唯一节点\",{\"1\":{\"131\":1}}],[\"得出是否有数据修改\",{\"1\":{\"143\":1,\"145\":1}}],[\"没准未来会与\",{\"1\":{\"746\":1}}],[\"没替换变量\",{\"1\":{\"692\":1}}],[\"没有匹配的值时\",{\"1\":{\"604\":1}}],[\"没有那么快\",{\"1\":{\"493\":1}}],[\"没有显示名称的赞助者\",{\"1\":{\"308\":1}}],[\"没有超时继续调用\",{\"1\":{\"195\":1}}],[\"没有正确利用到它的缓存机制\",{\"1\":{\"175\":1}}],[\"没有甄别作用\",{\"1\":{\"171\":1}}],[\"没有就阻塞一定时间\",{\"1\":{\"143\":1}}],[\"没错就是上面说的\",{\"1\":{\"92\":1}}],[\"没错\",{\"1\":{\"92\":1}}],[\"住的放心\",{\"1\":{\"456\":1}}],[\"住的请求会被释放\",{\"1\":{\"145\":1}}],[\"住的请求会加入到阻塞队列中作为内存缓存\",{\"1\":{\"145\":1}}],[\"住的请求释放\",{\"1\":{\"144\":1}}],[\"住的请求\",{\"1\":{\"144\":1,\"145\":1}}],[\"住请求最大\",{\"1\":{\"145\":1}}],[\"住之后\",{\"1\":{\"143\":1,\"145\":1}}],[\"住时检查数据是否有变化\",{\"1\":{\"143\":1}}],[\"住\",{\"1\":{\"143\":1}}],[\"正在开发\",{\"1\":{\"716\":1}}],[\"正在接入apache\",{\"1\":{\"716\":1}}],[\"正式开源\",{\"1\":{\"632\":1}}],[\"正式发布\",{\"0\":{\"636\":1,\"643\":1},\"1\":{\"612\":1}}],[\"正式发布啦\",{\"1\":{\"442\":1}}],[\"正式版经历了一个多月的实盘反复测试\",{\"0\":{\"589\":1}}],[\"正向反馈后也会有更多人参与和使用\",{\"1\":{\"456\":1}}],[\"正向代理插件\",{\"1\":{\"223\":1}}],[\"正如我在官网中写的那样\",{\"1\":{\"469\":1}}],[\"正如\",{\"1\":{\"407\":1}}],[\"正是通过您们的反馈\",{\"1\":{\"633\":1}}],[\"正是有了您的支持\",{\"1\":{\"633\":1}}],[\"正是有了你们的支持\",{\"1\":{\"633\":1}}],[\"正是因为您的支持\",{\"1\":{\"633\":1}}],[\"正是在下李某人\",{\"1\":{\"308\":1}}],[\"正是如此丰富的插件支撑起了\",{\"1\":{\"219\":1}}],[\"正常思路是通过\",{\"1\":{\"263\":1}}],[\"正常使用时\",{\"1\":{\"171\":1}}],[\"正常的长轮询实现应该由网关主动请求\",{\"1\":{\"143\":1}}],[\"正则匹配\",{\"1\":{\"114\":1}}],[\"举例\",{\"1\":{\"142\":1,\"709\":2}}],[\"举个列子\",{\"1\":{\"783\":1,\"792\":1}}],[\"举个简单的例子\",{\"1\":{\"406\":1}}],[\"举个例子\",{\"1\":{\"165\":1}}],[\"举个\",{\"1\":{\"141\":1}}],[\"之\",{\"1\":{\"688\":1}}],[\"之自动配置与注入顺序控制\",{\"1\":{\"397\":1}}],[\"之所以能做到这种增强型搜索\",{\"1\":{\"178\":1}}],[\"之后将会开启新篇章一步步揭开\",{\"1\":{\"237\":1}}],[\"之后\",{\"1\":{\"142\":1,\"738\":1}}],[\"之前有些\",{\"1\":{\"792\":1}}],[\"之前有人给我们提出引入的\",{\"1\":{\"729\":1}}],[\"之前有说过\",{\"1\":{\"92\":1}}],[\"之前提到的策略集成强化学习\",{\"0\":{\"595\":1}}],[\"之前支持了挺多的脚本语言\",{\"1\":{\"502\":1}}],[\"之前的版本\",{\"1\":{\"810\":1,\"811\":1,\"812\":1}}],[\"之前的版本升级需要注意\",{\"1\":{\"575\":1}}],[\"之前的版本不存在继承关系\",{\"1\":{\"518\":1}}],[\"之前的替补组件全面升级成组件降级特性\",{\"1\":{\"519\":1}}],[\"之前的表达式对新人不太友好很容易出错\",{\"1\":{\"448\":1}}],[\"之前的启动里分析了这块的代码\",{\"1\":{\"149\":1}}],[\"之前依旧梳理过abstractsoulplugin\",{\"1\":{\"249\":1}}],[\"之前我觉得它和工厂方法很类似但比它有优势\",{\"1\":{\"168\":1}}],[\"之前介绍了\",{\"1\":{\"92\":1}}],[\"之前\",{\"1\":{\"61\":1,\"516\":1,\"517\":1}}],[\"钩子\",{\"1\":{\"141\":1}}],[\"事务定时恢复\",{\"1\":{\"714\":1}}],[\"事务日志支持\",{\"1\":{\"714\":1}}],[\"事务日志序列化异常\",{\"1\":{\"714\":1}}],[\"事务日志序列化模块\",{\"1\":{\"713\":1}}],[\"事务日志存储模块\",{\"1\":{\"713\":1}}],[\"事务日志存储结构的更改\",{\"1\":{\"709\":1}}],[\"事务运行状态\",{\"1\":{\"713\":1}}],[\"事务未能正确恢复\",{\"1\":{\"708\":1}}],[\"事务异常回滚\",{\"1\":{\"706\":1}}],[\"事务自动恢复\",{\"1\":{\"65\":1}}],[\"事件模块\",{\"1\":{\"822\":1}}],[\"事件进行处理\",{\"1\":{\"209\":1}}],[\"事件\",{\"1\":{\"201\":1,\"203\":1,\"204\":1,\"209\":2}}],[\"事件发布后\",{\"1\":{\"200\":1}}],[\"事件类型是\",{\"1\":{\"200\":1}}],[\"事件转发器\",{\"1\":{\"200\":1}}],[\"事件变动时\",{\"1\":{\"141\":1}}],[\"持久层\",{\"0\":{\"798\":1}}],[\"持久化到\",{\"1\":{\"127\":2}}],[\"持有插件列表\",{\"1\":{\"221\":1}}],[\"持有\",{\"1\":{\"141\":1}}],[\"辛勤的处理数据同步的事件分类及分发\",{\"1\":{\"141\":1}}],[\"了\",{\"1\":{\"141\":1,\"308\":1,\"474\":1,\"493\":1}}],[\"了解\",{\"1\":{\"48\":1}}],[\"老版本中\",{\"1\":{\"739\":1}}],[\"老朋友\",{\"1\":{\"141\":1}}],[\"老规矩\",{\"1\":{\"92\":1}}],[\"供多个组件\",{\"1\":{\"822\":1}}],[\"供用户选择\",{\"1\":{\"708\":1}}],[\"供大家快速了解上手\",{\"1\":{\"613\":1}}],[\"供下游调用链使用\",{\"1\":{\"235\":1}}],[\"供下游的调用链使用\",{\"1\":{\"233\":1}}],[\"供网关自由选用\",{\"1\":{\"161\":1}}],[\"供\",{\"1\":{\"141\":1}}],[\"供所有\",{\"1\":{\"129\":1}}],[\"他们大体上是如下架构\",{\"1\":{\"783\":1,\"791\":1}}],[\"他们贡献了这个版本中的诸多的特性\",{\"1\":{\"514\":1}}],[\"他们觉得开源应该什么都开源免费出来\",{\"1\":{\"456\":1}}],[\"他们都实现自接口\",{\"1\":{\"141\":1}}],[\"他是中世纪的最后一位诗人\",{\"1\":{\"352\":1}}],[\"他被认为是中古时期意大利文艺复兴中最伟大的诗人\",{\"1\":{\"352\":1}}],[\"他的奖励分数\",{\"1\":{\"135\":1}}],[\"继承结构\",{\"1\":{\"219\":1}}],[\"继承自\",{\"1\":{\"141\":1,\"171\":1,\"219\":1,\"722\":1}}],[\"继续看服务列表活性检查处理\",{\"1\":{\"227\":1}}],[\"继续执行插件链处理\",{\"1\":{\"224\":2}}],[\"继续执行后续插件处理\",{\"1\":{\"219\":1}}],[\"继续照葫芦画瓢找到关键配置类上的参数设置\",{\"1\":{\"140\":1}}],[\"继续完成剩下的插件链调用\",{\"1\":{\"136\":1}}],[\"继续调用下个插件\",{\"1\":{\"131\":1}}],[\"继续跟进去\",{\"1\":{\"124\":1}}],[\"体重加起来不少于\",{\"1\":{\"764\":1}}],[\"体验地址\",{\"1\":{\"831\":1}}],[\"体验新架构下的插件热插拔\",{\"0\":{\"789\":1}}],[\"体验新架构\",{\"0\":{\"788\":1}}],[\"体验不好\",{\"1\":{\"608\":1}}],[\"体验\",{\"0\":{\"270\":1},\"1\":{\"268\":1}}],[\"体系就好了\",{\"1\":{\"791\":1}}],[\"体系\",{\"0\":{\"141\":1},\"1\":{\"784\":1,\"791\":1}}],[\"体会到开源的快乐\",{\"1\":{\"1\":1,\"37\":1}}],[\"回滚组件无法获得tag的问题\",{\"1\":{\"522\":1}}],[\"回答个大家最想问的问题\",{\"1\":{\"493\":1}}],[\"回调的执行地方\",{\"1\":{\"273\":1}}],[\"回调的执行\",{\"1\":{\"273\":1}}],[\"回调接收返回值\",{\"1\":{\"136\":1}}],[\"回顾过往\",{\"1\":{\"396\":1}}],[\"回顾\",{\"0\":{\"239\":1}}],[\"回到插入数据的另一个分支\",{\"1\":{\"125\":1}}],[\"回到了\",{\"1\":{\"92\":1}}],[\"仅支持单机\",{\"1\":{\"609\":1}}],[\"仅支持单数据源\",{\"1\":{\"609\":1}}],[\"仅支持单查询分页\",{\"1\":{\"608\":1}}],[\"仅支持任务与日志管理\",{\"1\":{\"609\":1}}],[\"仅支持注解\",{\"1\":{\"608\":1}}],[\"仅个人言论不代表社区\",{\"1\":{\"456\":1}}],[\"仅因为热爱开源\",{\"1\":{\"456\":1}}],[\"仅包含基础操作\",{\"1\":{\"374\":1,\"389\":1}}],[\"仅有一个默认实现类\",{\"1\":{\"220\":1}}],[\"仅有为数不多的插件会进入这个条件判断\",{\"1\":{\"129\":1}}],[\"仅仅需要这些简单的代码即可\",{\"1\":{\"173\":1}}],[\"仅仅是将接口\",{\"1\":{\"167\":1}}],[\"仅是通过\",{\"1\":{\"171\":1}}],[\"仅保留核心代码\",{\"1\":{\"136\":1}}],[\"然而\",{\"1\":{\"308\":1,\"794\":1}}],[\"然而是服务都有出现处理不稳定或者服务损坏的情况\",{\"1\":{\"262\":1}}],[\"然而那一刻它被惩罚的力度会非常大\",{\"1\":{\"135\":1}}],[\"然后替代内部的\",{\"1\":{\"763\":1}}],[\"然后指定\",{\"1\":{\"709\":1}}],[\"然后基于此开源产品挣钱\",{\"1\":{\"456\":1}}],[\"然后集群版作为闭源产品给有需求的氪金玩家付费使用\",{\"1\":{\"456\":1}}],[\"然后还要后端\",{\"1\":{\"431\":1}}],[\"然后再讲故事\",{\"1\":{\"787\":1}}],[\"然后再把这两个任务编排在一起\",{\"1\":{\"406\":1}}],[\"然后再测试通过网关转发到这个接口\",{\"1\":{\"117\":1}}],[\"然后分别介绍服务消费端与服务提供端如何拦截泛化调用流程对参数进行序列化细节\",{\"1\":{\"295\":1}}],[\"然后依次判断参数的泛化方式是\",{\"1\":{\"293\":1}}],[\"然后执行如下命令\",{\"1\":{\"582\":1}}],[\"然后执行\",{\"1\":{\"293\":1}}],[\"然后进行后续的处理流程\",{\"1\":{\"278\":1}}],[\"然后进行负载均衡选择即将分发的目标服务器实例\",{\"1\":{\"224\":1}}],[\"然后进入半开状态\",{\"1\":{\"264\":1}}],[\"然后思考如果发现了抖动的服务我们应该怎么办\",{\"1\":{\"264\":1}}],[\"然后介绍如何在\",{\"1\":{\"261\":1}}],[\"然后通过算法名加载对应的负载均衡算法\",{\"1\":{\"229\":1}}],[\"然后初始化\",{\"1\":{\"220\":1}}],[\"然后传入\",{\"1\":{\"219\":1}}],[\"然后插件按照规范实现\",{\"1\":{\"216\":1}}],[\"然后在此基础上做商业化挣钱\",{\"1\":{\"456\":1}}],[\"然后在插件处理时\",{\"1\":{\"217\":1}}],[\"然后在\",{\"1\":{\"208\":1}}],[\"然后在你的\",{\"1\":{\"77\":1}}],[\"然后同步到\",{\"1\":{\"200\":1}}],[\"然后解析成\",{\"1\":{\"180\":1}}],[\"然后就是\",{\"1\":{\"125\":1}}],[\"然后就可以在接口方法上加上\",{\"1\":{\"77\":1}}],[\"然后找到对应的\",{\"1\":{\"92\":1}}],[\"然后找到对应的方法\",{\"1\":{\"92\":1}}],[\"然后看着代码编译都不通过了\",{\"1\":{\"92\":1}}],[\"然后才会进\",{\"1\":{\"92\":1}}],[\"然后启动\",{\"1\":{\"92\":1}}],[\"然后会跳转到\",{\"1\":{\"92\":1}}],[\"然后每\",{\"1\":{\"92\":1}}],[\"然后打印之前所找到的日志\",{\"1\":{\"92\":1}}],[\"然后用了\",{\"1\":{\"92\":1}}],[\"然后去查询数据库中对应的插件记录\",{\"1\":{\"92\":1}}],[\"然后\",{\"0\":{\"64\":1},\"1\":{\"64\":1,\"282\":1}}],[\"然后也是一个开源项目\",{\"1\":{\"53\":1}}],[\"惩罚\",{\"1\":{\"135\":1}}],[\"减少数据传输的带宽占用和传输延迟\",{\"1\":{\"803\":1}}],[\"减少无用日志存储\",{\"1\":{\"617\":1}}],[\"减少外部依赖\",{\"1\":{\"411\":1}}],[\"减少过多无用的依赖信息\",{\"1\":{\"397\":1}}],[\"减少耦合关联和精简依赖包的依赖\",{\"1\":{\"397\":1}}],[\"减少用户信息的频繁请求\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"减少所有节点的累计分值\",{\"1\":{\"135\":1}}],[\"减少总节点权重分\",{\"1\":{\"135\":1}}],[\"措施\",{\"1\":{\"135\":1}}],[\"处处留出来更多的高度自定义扩展性\",{\"1\":{\"783\":1}}],[\"处添加规则及选择器配置\",{\"1\":{\"244\":1}}],[\"处罚\",{\"1\":{\"135\":1}}],[\"处理附件列表问题\",{\"1\":{\"835\":1}}],[\"处理新的sentinel配置\",{\"1\":{\"266\":1}}],[\"处理以\",{\"1\":{\"259\":1}}],[\"处理规则为空情况\",{\"1\":{\"234\":1}}],[\"处理选择器为空情况\",{\"1\":{\"234\":1}}],[\"处理请求的大体流程\",{\"1\":{\"231\":1}}],[\"处理方法\",{\"1\":{\"219\":2}}],[\"处理事件通知\",{\"1\":{\"324\":1}}],[\"处理事件\",{\"1\":{\"209\":1}}],[\"处理\",{\"0\":{\"123\":1,\"126\":1},\"1\":{\"46\":1,\"127\":2,\"228\":1,\"259\":2,\"264\":1,\"689\":1,\"790\":1}}],[\"选中一行需要添加到环境变量的点击添加按钮\",{\"1\":{\"684\":1}}],[\"选出节点缓存中分值最高的\",{\"1\":{\"135\":1}}],[\"选择show\",{\"1\":{\"686\":1,\"696\":1}}],[\"选择业内最优的解决方案\",{\"1\":{\"373\":1,\"388\":1}}],[\"选择框架会自动显示内置的服务版本\",{\"1\":{\"340\":1}}],[\"选择和规则的匹配缓存\",{\"1\":{\"315\":1}}],[\"选择\",{\"1\":{\"244\":1,\"823\":1}}],[\"选择适合自己的调用方式进行拼装参数\",{\"1\":{\"231\":1}}],[\"选择具体分发的服务实例ip\",{\"1\":{\"224\":1}}],[\"选择待分发的目标上游\",{\"1\":{\"219\":1}}],[\"选择缓存分值高的节点\",{\"1\":{\"135\":1}}],[\"选择器的\",{\"1\":{\"315\":1}}],[\"选择器的类型\",{\"1\":{\"234\":1}}],[\"选择器和规则的处理matchstrategy\",{\"1\":{\"237\":1}}],[\"选择器和规则的选择\",{\"1\":{\"234\":1}}],[\"选择器数据\",{\"1\":{\"234\":1}}],[\"选择器日志打印\",{\"1\":{\"234\":1}}],[\"选择器元数据变动调用\",{\"1\":{\"162\":1}}],[\"选择器下出现两个配置地址\",{\"1\":{\"118\":1}}],[\"选择器规则\",{\"0\":{\"115\":1},\"1\":{\"254\":1}}],[\"选择器相当于是对流量的第一次筛选\",{\"1\":{\"113\":1}}],[\"选择器\",{\"0\":{\"114\":1},\"1\":{\"113\":1,\"225\":2,\"237\":1,\"264\":1}}],[\"选择使用\",{\"1\":{\"100\":1}}],[\"选择自己感兴趣的课题申请\",{\"1\":{\"38\":1}}],[\"依次从plugins\",{\"1\":{\"287\":1}}],[\"依次处理插件链上的插件\",{\"1\":{\"220\":1}}],[\"依次执行插件处理逻辑\",{\"1\":{\"220\":1}}],[\"依次类推\",{\"1\":{\"135\":1}}],[\"依赖进行引入使用\",{\"1\":{\"764\":1}}],[\"依赖于缓存\",{\"1\":{\"763\":1}}],[\"依赖的变更\",{\"1\":{\"709\":1}}],[\"依赖不更新拉取不到\",{\"1\":{\"617\":1}}],[\"依赖升级\",{\"0\":{\"603\":1,\"616\":1}}],[\"依赖项引用\",{\"1\":{\"529\":1,\"535\":1,\"541\":1,\"547\":1,\"557\":1,\"567\":1}}],[\"依赖优化\",{\"1\":{\"413\":1}}],[\"依赖包的引入方式\",{\"1\":{\"397\":1}}],[\"依赖更新\",{\"1\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"依赖监控\",{\"0\":{\"346\":1}}],[\"依赖注入\",{\"1\":{\"216\":1}}],[\"依赖\",{\"0\":{\"255\":1,\"731\":1,\"732\":1,\"758\":1},\"1\":{\"130\":1,\"205\":1,\"210\":1,\"254\":1,\"315\":2,\"732\":1}}],[\"则启用这个配置\",{\"1\":{\"741\":1}}],[\"则会绿色高亮\",{\"1\":{\"678\":1}}],[\"则读取\",{\"1\":{\"664\":1}}],[\"则取该配置\",{\"1\":{\"664\":1}}],[\"则表明客户端已正常连接\",{\"1\":{\"585\":1}}],[\"则ssl\",{\"1\":{\"585\":1}}],[\"则此处配置对应的路径\",{\"1\":{\"585\":1}}],[\"则此处无需修改\",{\"1\":{\"585\":2}}],[\"则更新镜像重启即可\",{\"1\":{\"575\":1}}],[\"则更新存活服务散列表\",{\"1\":{\"227\":1}}],[\"则批准处理\",{\"1\":{\"305\":1}}],[\"则可向\",{\"1\":{\"305\":1}}],[\"则需联系\",{\"1\":{\"305\":1}}],[\"则需改为相对路径\",{\"1\":{\"300\":1}}],[\"则需要在具体的\",{\"1\":{\"103\":1}}],[\"则使用bean方式对入参进行反序列化\",{\"1\":{\"294\":1}}],[\"则使用nativejava方式对入参进行反序列化\",{\"1\":{\"294\":1}}],[\"则使用true方式对入参进行反序列化\",{\"1\":{\"294\":1}}],[\"则赋值默认值\",{\"1\":{\"273\":1}}],[\"则直接报错返回\",{\"1\":{\"266\":1}}],[\"则直接拒接这个请求\",{\"1\":{\"263\":1}}],[\"则判断服务异常\",{\"1\":{\"264\":1}}],[\"则不再访问它以免更多的请求对它造成更大的压力\",{\"1\":{\"264\":1}}],[\"则该请求会等待直到预设时间到来通过\",{\"1\":{\"263\":1}}],[\"则让当前请求通过\",{\"1\":{\"263\":1}}],[\"则按总权重随机\",{\"1\":{\"229\":2}}],[\"则测试主机是否可连接\",{\"1\":{\"228\":1}}],[\"则创建定时探活任务\",{\"1\":{\"226\":1}}],[\"则是\",{\"1\":{\"179\":1}}],[\"则调用数据拉取方法\",{\"1\":{\"149\":1}}],[\"则\",{\"1\":{\"145\":1}}],[\"则很有可能就是真的给请求上下文加了响应信息\",{\"1\":{\"144\":1}}],[\"则缓存第一次为\",{\"1\":{\"135\":1}}],[\"循环操作集合\",{\"1\":{\"791\":1}}],[\"循环表达式中支持异步模式\",{\"1\":{\"509\":1}}],[\"循环场景中的一些\",{\"0\":{\"475\":1}}],[\"循环遍历所有的\",{\"1\":{\"158\":1}}],[\"循环多次调用拉取数据方法\",{\"1\":{\"148\":1}}],[\"循环后\",{\"1\":{\"135\":1}}],[\"循环里调用\",{\"1\":{\"124\":1,\"126\":1}}],[\"经历了一年的事情\",{\"1\":{\"783\":1}}],[\"经常群里的小伙伴会反映\",{\"1\":{\"505\":1}}],[\"经手过大大小小\",{\"1\":{\"396\":1}}],[\"经过网关的流量\",{\"1\":{\"790\":1}}],[\"经过多次改进和完善\",{\"1\":{\"633\":1}}],[\"经过多个小伙伴的生产实践\",{\"1\":{\"612\":1}}],[\"经过多个版本的迭代\",{\"1\":{\"409\":1}}],[\"经过了一个半月\",{\"1\":{\"514\":1}}],[\"经过近两个月的迭代终于发布了\",{\"1\":{\"460\":1}}],[\"经过一个多月的迭代\",{\"1\":{\"453\":1}}],[\"经过两年的建设\",{\"1\":{\"367\":1,\"382\":1}}],[\"经过上述流程图的引导\",{\"1\":{\"234\":1}}],[\"经过查阅资料得知\",{\"1\":{\"169\":1}}],[\"经过\",{\"1\":{\"135\":1,\"136\":2,\"287\":1,\"442\":1}}],[\"经验借鉴与未来探索\",{\"1\":{\"15\":1}}],[\"缓存覆盖问题\",{\"1\":{\"619\":1}}],[\"缓存监控\",{\"1\":{\"609\":1}}],[\"缓存注解\",{\"1\":{\"608\":1}}],[\"缓存数据库\",{\"1\":{\"608\":1}}],[\"缓存列表\",{\"1\":{\"606\":1}}],[\"缓存内的数据外\",{\"1\":{\"247\":1}}],[\"缓存调用流程图如下\",{\"1\":{\"182\":1}}],[\"缓存小结\",{\"0\":{\"182\":1}}],[\"缓存到自身中\",{\"1\":{\"181\":1}}],[\"缓存存放的是\",{\"1\":{\"181\":1}}],[\"缓存的信息如何填充的呢\",{\"1\":{\"180\":1}}],[\"缓存的使用\",{\"0\":{\"70\":1}}],[\"缓存模式\",{\"1\":{\"177\":1}}],[\"缓存为\",{\"1\":{\"177\":1}}],[\"缓存\",{\"1\":{\"170\":1,\"180\":1,\"183\":4,\"269\":1,\"314\":1,\"619\":1}}],[\"缓存所有\",{\"1\":{\"161\":1,\"183\":1}}],[\"缓存中\",{\"1\":{\"183\":1}}],[\"缓存中保留它们各自\",{\"1\":{\"135\":1}}],[\"缓存中的分数\",{\"1\":{\"135\":1}}],[\"缓存中的分数增加当前节点权重分\",{\"1\":{\"135\":1}}],[\"权责与组织形式\",{\"0\":{\"306\":1}}],[\"权限校验\",{\"1\":{\"608\":1}}],[\"权限注解\",{\"1\":{\"608\":1}}],[\"权限注解以及权限方法\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"权限认证\",{\"1\":{\"608\":1,\"624\":1}}],[\"权限认证框架\",{\"1\":{\"4\":1,\"624\":1}}],[\"权限管理优化\",{\"0\":{\"551\":1,\"561\":1,\"571\":1}}],[\"权限管理和资源管理等\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"权限方法以及\",{\"1\":{\"357\":1}}],[\"权限\",{\"1\":{\"357\":2,\"608\":1}}],[\"权限对接口进行验证\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"权限订阅\",{\"1\":{\"205\":1}}],[\"权重可自定义配置\",{\"1\":{\"769\":1}}],[\"权重分小的节点\",{\"1\":{\"135\":1}}],[\"权重分数\",{\"1\":{\"132\":1,\"133\":1}}],[\"权重是否都一样\",{\"1\":{\"134\":1}}],[\"轮询拉取模式和订阅模式\",{\"1\":{\"503\":1}}],[\"轮询\",{\"1\":{\"132\":1}}],[\"随机生成\",{\"1\":{\"651\":1,\"660\":1}}],[\"随机算法\",{\"1\":{\"229\":1}}],[\"随机\",{\"1\":{\"132\":1}}],[\"随着物联网技术的迅猛发展\",{\"1\":{\"794\":1}}],[\"随着你们业务需要的加大\",{\"1\":{\"783\":1}}],[\"随着使用者越来越多\",{\"1\":{\"783\":1}}],[\"随着技术的不断创新和社区的不断发展\",{\"1\":{\"91\":1}}],[\"随着云计算和大数据的发展\",{\"1\":{\"91\":1}}],[\"随着\",{\"1\":{\"78\":1}}],[\"拿回来比对后发现被骗了\",{\"1\":{\"149\":1}}],[\"拿到的是空数据\",{\"1\":{\"208\":1}}],[\"拿到实现类的\",{\"1\":{\"183\":1}}],[\"拿到接口的\",{\"1\":{\"183\":1}}],[\"拿到某个类型的数据\",{\"1\":{\"148\":1}}],[\"拿到这个配置地址后\",{\"1\":{\"92\":1}}],[\"拿取所有\",{\"1\":{\"144\":1}}],[\"拿\",{\"1\":{\"131\":1}}],[\"给前端处理带来了困扰\",{\"1\":{\"783\":1}}],[\"给大伙看看我那两策略的一些回测绩效曲线\",{\"1\":{\"591\":1}}],[\"给liteflow发电\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"给冷系统一个预热的时间\",{\"1\":{\"263\":1}}],[\"给网关\",{\"1\":{\"145\":1}}],[\"给\",{\"1\":{\"131\":1}}],[\"若干细节点优化不再一一描述\",{\"1\":{\"689\":1}}],[\"若干已知\",{\"1\":{\"660\":1}}],[\"若持仓同时存在今仓与昨仓\",{\"1\":{\"598\":1}}],[\"若是非ssl端口\",{\"1\":{\"585\":1}}],[\"若需要指定自己的\",{\"1\":{\"583\":1}}],[\"若\",{\"1\":{\"448\":1,\"457\":1,\"465\":1}}],[\"若之前使用的\",{\"1\":{\"444\":1}}],[\"若作者执意退出\",{\"1\":{\"305\":1}}],[\"若接下来的少量请求没有报错且响应时间合理则服务恢复\",{\"1\":{\"264\":1}}],[\"若预期的通过时间超出最大排队时长\",{\"1\":{\"263\":1}}],[\"若权重不一致\",{\"1\":{\"229\":2}}],[\"若为服务端是\",{\"1\":{\"575\":1}}],[\"若为\",{\"1\":{\"228\":1}}],[\"若存活数大于\",{\"1\":{\"227\":1}}],[\"若探活开关打开\",{\"1\":{\"226\":1}}],[\"若更新则调用各类型的\",{\"1\":{\"148\":1}}],[\"若一个都没有也不会报错\",{\"1\":{\"130\":1}}],[\"若要实现上述功能需要用户创建多个冗余字段才可以\",{\"1\":{\"47\":1}}],[\"结尾\",{\"1\":{\"814\":1}}],[\"结语\",{\"0\":{\"407\":1,\"766\":1}}],[\"结合自定义实体\",{\"1\":{\"374\":1,\"389\":1}}],[\"结合自身应用经验和需求\",{\"1\":{\"373\":1,\"388\":1}}],[\"结合上下文判断当前插件是否需要跳过\",{\"1\":{\"130\":1}}],[\"结果返回给服务消费端\",{\"1\":{\"294\":1}}],[\"结果\",{\"1\":{\"294\":1}}],[\"结果处理插件\",{\"0\":{\"237\":1}}],[\"结果是什么都没有\",{\"1\":{\"208\":1}}],[\"结果如下图\",{\"1\":{\"104\":1,\"105\":1,\"107\":1,\"108\":1}}],[\"结构目录结构\",{\"1\":{\"624\":1}}],[\"结构解耦\",{\"1\":{\"608\":1}}],[\"结构合理清晰\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"结构的参数转换成对应\",{\"1\":{\"286\":1}}],[\"结构如下\",{\"1\":{\"220\":2}}],[\"结构\",{\"1\":{\"183\":1,\"722\":1}}],[\"结构为\",{\"1\":{\"183\":3}}],[\"结构并组装成\",{\"1\":{\"180\":1}}],[\"转换兼容问题\",{\"1\":{\"724\":1}}],[\"转换成桌面软件\",{\"0\":{\"640\":1,\"647\":1}}],[\"转换成\",{\"1\":{\"277\":1,\"286\":2}}],[\"转\",{\"1\":{\"722\":1}}],[\"转回成功后联系\",{\"1\":{\"305\":1}}],[\"转发类型的插件目前我了解的有\",{\"1\":{\"129\":1}}],[\"转发类型\",{\"1\":{\"129\":1}}],[\"转移成功后恢复\",{\"1\":{\"8\":1,\"299\":1}}],[\"匹配\",{\"1\":{\"315\":1,\"328\":1}}],[\"匹配缓存\",{\"1\":{\"313\":1}}],[\"匹配通过则执行插件的自定义处理\",{\"1\":{\"224\":1}}],[\"匹配规则\",{\"1\":{\"224\":1,\"234\":2}}],[\"匹配选择器\",{\"1\":{\"224\":1,\"234\":2}}],[\"匹配路径\",{\"1\":{\"129\":1}}],[\"匹配方式\",{\"1\":{\"114\":1,\"264\":1,\"790\":1}}],[\"获取更好的性能和拓展性\",{\"1\":{\"751\":1}}],[\"获取结果为\",{\"1\":{\"724\":1}}],[\"获取接口方法问题\",{\"1\":{\"724\":1}}],[\"获取任意\",{\"1\":{\"624\":1}}],[\"获取方式\",{\"1\":{\"604\":1}}],[\"获取参数名称\",{\"1\":{\"294\":2}}],[\"获取泛化引用使用的泛化类型\",{\"1\":{\"294\":1}}],[\"获取泛化参数\",{\"1\":{\"293\":2}}],[\"获取泛化调用的实例\",{\"1\":{\"289\":1}}],[\"获取\",{\"1\":{\"288\":3,\"508\":1,\"763\":1}}],[\"获取配置信息对象\",{\"1\":{\"273\":1}}],[\"获取所有现有熔断配置\",{\"1\":{\"266\":1}}],[\"获取所有现有流控配置\",{\"1\":{\"266\":1}}],[\"获取所有注册为\",{\"1\":{\"161\":1}}],[\"获取当前存有的令牌数\",{\"1\":{\"252\":1}}],[\"获取当前的类加载器\",{\"1\":{\"167\":1}}],[\"获取redis\",{\"1\":{\"249\":1}}],[\"获取重试次数\",{\"1\":{\"236\":1}}],[\"获取超时时间\",{\"1\":{\"236\":1}}],[\"获取真实地址\",{\"1\":{\"236\":1}}],[\"获取该选择器下的注入的地址\",{\"1\":{\"235\":1}}],[\"获取插件下的所有选择器\",{\"1\":{\"234\":1}}],[\"获取插件数据\",{\"1\":{\"219\":1,\"224\":1}}],[\"获取对应插件\",{\"1\":{\"234\":1}}],[\"获取可用服务列表\",{\"1\":{\"230\":1}}],[\"获取可用的插件\",{\"1\":{\"220\":1}}],[\"获取存活服务列表\",{\"1\":{\"225\":1}}],[\"获取选择器对应的注册地址\",{\"1\":{\"235\":1}}],[\"获取选择器对应的可用服务列表\",{\"1\":{\"224\":1}}],[\"获取选择器数据和规则\",{\"1\":{\"219\":1}}],[\"获取选择器数据\",{\"1\":{\"219\":1,\"224\":1}}],[\"获取上一次调用时间\",{\"1\":{\"252\":1}}],[\"获取上游列表\",{\"1\":{\"219\":1}}],[\"获取上下文中存放的响应信息\",{\"1\":{\"137\":1}}],[\"获取网关上下文和规则处理器\",{\"1\":{\"219\":1}}],[\"获取网关数据\",{\"1\":{\"208\":1}}],[\"获取规则处理数据\",{\"1\":{\"235\":1}}],[\"获取规则数据\",{\"1\":{\"224\":1}}],[\"获取规则\",{\"1\":{\"219\":1}}],[\"获取数据\",{\"1\":{\"205\":1}}],[\"获取认证数据\",{\"1\":{\"195\":1}}],[\"获取到连接\",{\"1\":{\"171\":1}}],[\"获取一个类名\",{\"1\":{\"167\":1}}],[\"获取其对应的\",{\"1\":{\"126\":1}}],[\"获得奖项\",{\"0\":{\"427\":1}}],[\"获得插件名\",{\"1\":{\"219\":1}}],[\"获得插件上的所有选择器\",{\"1\":{\"129\":1}}],[\"获得实现类对象\",{\"1\":{\"179\":1}}],[\"获得节点的真实url\",{\"1\":{\"131\":1}}],[\"获得唯一一个规则\",{\"1\":{\"129\":1}}],[\"获得选择器中的各个资源规则\",{\"1\":{\"129\":1}}],[\"实时监控服务状态\",{\"1\":{\"608\":1}}],[\"实时生效\",{\"1\":{\"409\":1,\"419\":1}}],[\"实时动态分发至对应服务\",{\"1\":{\"357\":1}}],[\"实时线程栈\",{\"0\":{\"349\":1}}],[\"实时计算\",{\"1\":{\"322\":1}}],[\"实时反馈和历史记录等\",{\"1\":{\"81\":1}}],[\"实例\",{\"0\":{\"749\":1}}],[\"实例不正确问题\",{\"1\":{\"619\":1}}],[\"实例多租户相同\",{\"1\":{\"619\":1}}],[\"实例中心\",{\"0\":{\"344\":1}}],[\"实例放入了\",{\"1\":{\"247\":1}}],[\"实例化\",{\"1\":{\"200\":1}}],[\"实际使用需要填入数据\",{\"1\":{\"774\":1}}],[\"实际环境中\",{\"1\":{\"773\":2}}],[\"实际项目可以通过各种途径获取相应的数据\",{\"1\":{\"727\":1}}],[\"实际传到后面服务中的量是需要乘上\",{\"1\":{\"266\":1}}],[\"实际的处理要复杂的多\",{\"1\":{\"234\":1}}],[\"实际是使用懒加载的方式\",{\"1\":{\"167\":1}}],[\"实际抽象了一套规则匹配逻辑\",{\"1\":{\"129\":1}}],[\"实现连接信息加密\",{\"1\":{\"801\":1}}],[\"实现连接信息的加密\",{\"1\":{\"794\":1}}],[\"实现位于org\",{\"1\":{\"763\":1}}],[\"实现项目级别配置更新\",{\"1\":{\"655\":1}}],[\"实现项目的全貌\",{\"1\":{\"176\":1}}],[\"实现部分配置及所有\",{\"1\":{\"652\":1}}],[\"实现鉴权和登录\",{\"1\":{\"631\":1}}],[\"实现分布式任务调度\",{\"1\":{\"615\":1}}],[\"实现离线\",{\"1\":{\"605\":1}}],[\"实现身份供给同步\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"实现自动刷新功能\",{\"1\":{\"520\":1}}],[\"实现自定义\",{\"1\":{\"357\":1}}],[\"实现优雅关闭线程池功能\",{\"1\":{\"411\":1}}],[\"实现定义\",{\"1\":{\"397\":1}}],[\"实现和集成大文件分片上传\",{\"1\":{\"373\":1,\"388\":1}}],[\"实现基于数字信封技术的秘钥动态生成加密传输\",{\"1\":{\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"实现密码模式登录数据进行动态加密传输\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"实现秘钥动态生成加密传输\",{\"1\":{\"357\":1}}],[\"实现真正的使用\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"实现多租户系统架构\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"实现下载服务实例配置文件接口\",{\"1\":{\"338\":1}}],[\"实现用\",{\"1\":{\"338\":1}}],[\"实现接口\",{\"1\":{\"293\":1}}],[\"实现接口的\",{\"1\":{\"128\":1}}],[\"实现于\",{\"1\":{\"234\":1}}],[\"实现容器内插件\",{\"1\":{\"220\":1}}],[\"实现插件与网关的连接\",{\"1\":{\"217\":1}}],[\"实现类导致单独使用报错问题\",{\"1\":{\"619\":1}}],[\"实现类的调用\",{\"1\":{\"172\":1}}],[\"实现类的初始化也明显会是反射了\",{\"1\":{\"167\":1}}],[\"实现类通过传入的数据库\",{\"1\":{\"172\":1}}],[\"实现类自身进行的\",{\"1\":{\"172\":1}}],[\"实现类\",{\"1\":{\"170\":1}}],[\"实现类注册到\",{\"1\":{\"170\":1}}],[\"实现类全部初始化\",{\"1\":{\"170\":1}}],[\"实现\",{\"0\":{\"174\":1},\"1\":{\"162\":2,\"169\":1,\"229\":1,\"259\":1,\"331\":2,\"357\":1,\"409\":2,\"419\":2,\"608\":2,\"654\":1,\"723\":2,\"750\":1,\"763\":1}}],[\"实现了连接信息的加密\",{\"1\":{\"794\":1}}],[\"实现了插件的热插拔\",{\"1\":{\"213\":1}}],[\"实现了\",{\"1\":{\"156\":1,\"200\":1,\"259\":1}}],[\"实现了链式调用\",{\"1\":{\"130\":1}}],[\"重传和错误处理\",{\"1\":{\"803\":1}}],[\"重载\",{\"1\":{\"723\":1}}],[\"重载方法覆盖所有常见参数\",{\"1\":{\"374\":1,\"389\":1}}],[\"重量级更新\",{\"1\":{\"651\":1}}],[\"重命名\",{\"1\":{\"624\":1}}],[\"重要\",{\"1\":{\"624\":14}}],[\"重要更新\",{\"0\":{\"331\":1}}],[\"重大更新\",{\"0\":{\"615\":1},\"1\":{\"615\":4}}],[\"重做监控\",{\"1\":{\"469\":1}}],[\"重在社区协作和产品生态\",{\"1\":{\"456\":1}}],[\"重磅\",{\"0\":{\"450\":1}}],[\"重写项目\",{\"1\":{\"604\":1}}],[\"重写了所有的语法底层解析\",{\"1\":{\"469\":1}}],[\"重写\",{\"1\":{\"430\":2}}],[\"重新启动\",{\"1\":{\"781\":1}}],[\"重新起名\",{\"1\":{\"764\":1}}],[\"重新攒\",{\"1\":{\"764\":1}}],[\"重新建立个仓库\",{\"1\":{\"764\":1}}],[\"重新立仓库我需要重新搞个子域名\",{\"1\":{\"764\":1}}],[\"重新构建\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"重新设计\",{\"1\":{\"39\":1,\"764\":1}}],[\"重构腾讯云国内短信实现\",{\"1\":{\"727\":1}}],[\"重构阿里云国内短信实现\",{\"1\":{\"727\":1}}],[\"重构容联云国内短信实现\",{\"1\":{\"727\":1}}],[\"重构概念\",{\"1\":{\"624\":3}}],[\"重构了采集器集群调度\",{\"1\":{\"460\":1}}],[\"重构了\",{\"1\":{\"460\":1}}],[\"重构了若干功能\",{\"1\":{\"312\":1}}],[\"重构为\",{\"1\":{\"397\":1}}],[\"重构短信模块\",{\"1\":{\"397\":1}}],[\"重构部分\",{\"0\":{\"707\":1}}],[\"重构部分自定义\",{\"1\":{\"397\":1}}],[\"重构部分核心包代码依赖逻辑\",{\"1\":{\"397\":1}}],[\"重构前端\",{\"0\":{\"366\":1,\"381\":1},\"1\":{\"397\":2}}],[\"重构shenyuclientshutdownhook\",{\"1\":{\"315\":1}}],[\"重构alibabadubboconfigcache的缓存\",{\"1\":{\"315\":1}}],[\"重构checkuserpassword方法\",{\"1\":{\"315\":1}}],[\"重构\",{\"0\":{\"315\":1},\"1\":{\"315\":14,\"360\":4,\"383\":1,\"397\":14,\"411\":1,\"461\":1,\"617\":2,\"624\":11,\"722\":1}}],[\"重定向时\",{\"1\":{\"724\":1}}],[\"重定向源码之前\",{\"1\":{\"259\":1}}],[\"重定向配置\",{\"1\":{\"257\":1}}],[\"重定向\",{\"0\":{\"257\":1}}],[\"重试次数\",{\"1\":{\"236\":1,\"237\":1}}],[\"重试次数传递到serverwebexchange中\",{\"1\":{\"235\":1}}],[\"重试次数和超时时间\",{\"1\":{\"235\":1}}],[\"重试次数以及超时时间\",{\"1\":{\"224\":1}}],[\"重排顺序参见\",{\"1\":{\"220\":1}}],[\"重点\",{\"1\":{\"342\":1}}],[\"重点关注\",{\"1\":{\"219\":2}}],[\"重点方法execute\",{\"1\":{\"128\":1}}],[\"定位\",{\"1\":{\"554\":1,\"564\":1}}],[\"定位到\",{\"1\":{\"220\":1}}],[\"定时采集线程池指标数据\",{\"1\":{\"409\":1,\"419\":1}}],[\"定时启动\",{\"1\":{\"144\":1}}],[\"定时任务\",{\"1\":{\"609\":1}}],[\"定时任务会执行\",{\"1\":{\"64\":1}}],[\"定时任务延迟时间\",{\"1\":{\"64\":1}}],[\"定时任务日志恢复的问题\",{\"0\":{\"63\":1}}],[\"定义多种\",{\"1\":{\"713\":1}}],[\"定义事务日志多种序列化方式的\",{\"1\":{\"707\":1}}],[\"定义事务日志多种存储方式的\",{\"1\":{\"707\":1}}],[\"定义常量\",{\"1\":{\"628\":1}}],[\"定义\",{\"0\":{\"677\":1},\"1\":{\"624\":1}}],[\"定义时加\",{\"1\":{\"409\":1,\"419\":1}}],[\"定义一套通用的执行流程\",{\"1\":{\"128\":1}}],[\"定义插件职责的接口\",{\"1\":{\"128\":1}}],[\"向老板申请加薪指日可待\",{\"1\":{\"791\":1}}],[\"向开源精神\",{\"1\":{\"308\":1}}],[\"向猫大人老师致敬\",{\"1\":{\"308\":1}}],[\"向大佬致敬\",{\"1\":{\"308\":1}}],[\"向容器注入数据同步服务\",{\"1\":{\"205\":1}}],[\"向容器中注入\",{\"1\":{\"200\":1}}],[\"向\",{\"1\":{\"126\":1,\"127\":2,\"173\":1,\"200\":2}}],[\"向量计算\",{\"1\":{\"88\":1}}],[\"种模式\",{\"1\":{\"503\":1,\"708\":1}}],[\"种存储插件\",{\"1\":{\"469\":1}}],[\"种脚本插件和\",{\"1\":{\"469\":1}}],[\"种脚本语言\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"种服务异常判定方式\",{\"1\":{\"265\":1}}],[\"种同步数据策略\",{\"1\":{\"156\":1}}],[\"种类型\",{\"1\":{\"126\":1,\"154\":1}}],[\"种种迹象表明\",{\"1\":{\"11\":1}}],[\"行距\",{\"1\":{\"825\":1}}],[\"行业的千滋百味\",{\"1\":{\"396\":1}}],[\"行\",{\"1\":{\"126\":1}}],[\"行为准则\",{\"0\":{\"7\":1}}],[\"区间内质数的个数\",{\"1\":{\"406\":1}}],[\"区分\",{\"1\":{\"125\":1}}],[\"区块链等\",{\"1\":{\"91\":1}}],[\"区块链等热门技术主题\",{\"1\":{\"15\":1}}],[\"时候的异常问题\",{\"1\":{\"714\":1}}],[\"时候的线程切换问题\",{\"1\":{\"708\":1}}],[\"时隔一年\",{\"0\":{\"704\":1}}],[\"时隔半年\",{\"1\":{\"312\":1}}],[\"时对齐版本\",{\"1\":{\"624\":1}}],[\"时的算法策略\",{\"1\":{\"624\":1}}],[\"时序数据库\",{\"1\":{\"444\":1}}],[\"时使用checkpoint保存当前task\",{\"1\":{\"406\":1}}],[\"时并没有用分布式流控\",{\"1\":{\"266\":1}}],[\"时部分参数是默认配置\",{\"1\":{\"266\":1}}],[\"时\",{\"1\":{\"232\":4,\"421\":1,\"624\":1,\"722\":1}}],[\"时传入标识\",{\"1\":{\"179\":1}}],[\"时再回来补充\",{\"1\":{\"157\":1}}],[\"时略过的一块代码吗\",{\"1\":{\"144\":1}}],[\"时会进来\",{\"1\":{\"125\":1}}],[\"时间令牌\",{\"1\":{\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2}}],[\"时间很快\",{\"1\":{\"460\":1}}],[\"时间会咬人\",{\"1\":{\"308\":1}}],[\"时间戳\",{\"1\":{\"232\":1,\"252\":1}}],[\"时间复杂度\",{\"1\":{\"177\":1}}],[\"时间\",{\"1\":{\"29\":1,\"32\":1,\"144\":1,\"263\":1}}],[\"时间地点\",{\"0\":{\"12\":1}}],[\"涉及到\",{\"1\":{\"124\":1,\"720\":1}}],[\"条行码支持矢量格式印刷\",{\"1\":{\"827\":1}}],[\"条形码等几种常用的元素类型\",{\"1\":{\"820\":1}}],[\"条入库方法\",{\"1\":{\"124\":1}}],[\"条件匹配\",{\"1\":{\"114\":1}}],[\"条件\",{\"1\":{\"114\":1,\"264\":1}}],[\"层暴露\",{\"1\":{\"145\":1}}],[\"层梦境\",{\"1\":{\"125\":1}}],[\"层插入数据\",{\"1\":{\"124\":1,\"126\":1}}],[\"层实现类\",{\"1\":{\"122\":1}}],[\"^\",{\"1\":{\"124\":2,\"286\":1}}],[\"小到\",{\"1\":{\"792\":1}}],[\"小伙伴们可以使用天翼云短信啦\",{\"1\":{\"745\":1}}],[\"小伙伴们可以想想怎么优化掉这么多\",{\"1\":{\"124\":1}}],[\"小组\",{\"1\":{\"609\":1}}],[\"小心点哈你们\",{\"1\":{\"456\":1}}],[\"小星星来支持我们\",{\"1\":{\"445\":1}}],[\"小孩才做选择题\",{\"1\":{\"442\":1}}],[\"小时格式和时区\",{\"1\":{\"316\":1}}],[\"小程故事多\",{\"1\":{\"308\":1}}],[\"小雨淅淅\",{\"1\":{\"308\":1}}],[\"小旭\",{\"1\":{\"308\":1}}],[\"小小的太阳\",{\"1\":{\"308\":1}}],[\"小小心意赞助一下\",{\"1\":{\"308\":1}}],[\"小小赞赏\",{\"1\":{\"308\":1}}],[\"小结\",{\"1\":{\"208\":1,\"209\":1,\"210\":1}}],[\"小记\",{\"0\":{\"91\":1}}],[\"仔细看看到底往哪些数据库表中插数据了\",{\"1\":{\"124\":1}}],[\"第三方认证和互联网认证的整合\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"第三方线程池\",{\"1\":{\"420\":1}}],[\"第三方社会化等多种登录模式\",{\"1\":{\"356\":1}}],[\"第三位是当前时间戳10位\",{\"1\":{\"249\":1}}],[\"第四位固定参数值1\",{\"1\":{\"249\":1}}],[\"第十三等级\",{\"1\":{\"231\":1}}],[\"第十二等级\",{\"1\":{\"231\":1}}],[\"第九等级到第十一等级\",{\"1\":{\"231\":1}}],[\"第二步\",{\"1\":{\"709\":2}}],[\"第二次循环统计\",{\"1\":{\"406\":1}}],[\"第二次为\",{\"1\":{\"135\":1}}],[\"第二个\",{\"1\":{\"250\":1}}],[\"第二位是容量\",{\"1\":{\"249\":1}}],[\"第二等级到第八等级\",{\"1\":{\"231\":1}}],[\"第二层缓存之\",{\"0\":{\"180\":1,\"181\":1}}],[\"第一步\",{\"1\":{\"709\":2}}],[\"第一种场景是实际流量确实出现了不可处理的峰值\",{\"1\":{\"262\":1}}],[\"第一个\",{\"1\":{\"250\":1}}],[\"第一位是速率\",{\"1\":{\"249\":1}}],[\"第一等级\",{\"1\":{\"231\":1}}],[\"第一层缓存\",{\"0\":{\"179\":1}}],[\"第一次接入\",{\"0\":{\"124\":1}}],[\"第\",{\"1\":{\"126\":1,\"165\":1}}],[\"第29期\",{\"0\":{\"51\":1}}],[\"业务组件目录\",{\"1\":{\"822\":1}}],[\"业务层\",{\"1\":{\"802\":1}}],[\"业务异常不输出具体堆栈信息\",{\"1\":{\"617\":1}}],[\"业务\",{\"1\":{\"609\":1}}],[\"业务升级期间再也不怕无必要的频繁告警了\",{\"1\":{\"442\":1}}],[\"业务架构设计\",{\"1\":{\"396\":1}}],[\"业务支持\",{\"1\":{\"374\":1,\"389\":1}}],[\"业务网关作为流量的入口\",{\"1\":{\"262\":1}}],[\"业务系统重启了会到这里\",{\"1\":{\"123\":1}}],[\"业界领先的企业级开源\",{\"1\":{\"4\":1}}],[\"存储平台标识\",{\"1\":{\"814\":1}}],[\"存储你的\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"存储错误问题\",{\"1\":{\"619\":1}}],[\"存储指标数据\",{\"1\":{\"442\":2}}],[\"存储桶设置界面\",{\"1\":{\"383\":2}}],[\"存储日志\",{\"1\":{\"64\":3}}],[\"存在众多问题亦在所难免\",{\"1\":{\"587\":1}}],[\"存在问题\",{\"1\":{\"468\":1}}],[\"存在缓冲区溢出漏洞\",{\"1\":{\"354\":1,\"397\":1}}],[\"存在反序列化漏洞\",{\"1\":{\"354\":1,\"397\":1}}],[\"存放标识与类对象映射\",{\"1\":{\"183\":1}}],[\"存放类对象与其初始化对象\",{\"1\":{\"183\":1}}],[\"存放的是\",{\"1\":{\"180\":1}}],[\"存放在\",{\"1\":{\"158\":1}}],[\"存疑\",{\"1\":{\"122\":1}}],[\"相对路径获取父路径错误问题\",{\"1\":{\"724\":1}}],[\"相比通过需要自定义注解声明周期的方式\",{\"1\":{\"430\":1}}],[\"相比之下\",{\"1\":{\"269\":1}}],[\"相当于把使用\",{\"1\":{\"200\":1}}],[\"相当于是我们所有\",{\"1\":{\"116\":1}}],[\"相关代码\",{\"1\":{\"615\":1}}],[\"相关特性只在\",{\"1\":{\"420\":1}}],[\"相关组件代码放置位置\",{\"1\":{\"397\":1}}],[\"相关组件及容器版本升级至\",{\"1\":{\"383\":1}}],[\"相关定义和接口调用服务代码\",{\"1\":{\"397\":2}}],[\"相关模块自动配置代码\",{\"1\":{\"397\":1}}],[\"相关模块\",{\"1\":{\"368\":1}}],[\"相关链接\",{\"0\":{\"329\":1}}],[\"相关\",{\"1\":{\"259\":3,\"354\":1}}],[\"相关配置等\",{\"1\":{\"609\":1}}],[\"相关配置\",{\"1\":{\"243\":1}}],[\"相关插件\",{\"1\":{\"231\":1}}],[\"相关类的实例化\",{\"1\":{\"200\":1}}],[\"相关类\",{\"1\":{\"170\":1}}],[\"相关的类还是会被访问到\",{\"1\":{\"92\":1}}],[\"相关的类中了\",{\"1\":{\"92\":1}}],[\"相关的方法\",{\"1\":{\"92\":1}}],[\"相关的监听器\",{\"1\":{\"92\":1}}],[\"三种不同的数据同步策略\",{\"1\":{\"783\":1}}],[\"三种方式\",{\"1\":{\"409\":1,\"419\":1}}],[\"三个参数分别为\",{\"1\":{\"763\":1}}],[\"三个三\",{\"1\":{\"615\":1}}],[\"三方授权登录\",{\"1\":{\"615\":1}}],[\"三方授权绑定登录功能\",{\"1\":{\"615\":1}}],[\"三方授权\",{\"0\":{\"611\":1}}],[\"三方包线程池管理等几大类\",{\"1\":{\"409\":1,\"418\":1}}],[\"三连来支持我们\",{\"1\":{\"449\":1}}],[\"三\",{\"0\":{\"116\":1,\"200\":1,\"206\":1,\"217\":1}}],[\"三十多家开源技术社区将以创意摆摊的方式\",{\"1\":{\"15\":1}}],[\"字距\",{\"1\":{\"825\":1}}],[\"字体颜色\",{\"1\":{\"825\":1}}],[\"字体大小\",{\"1\":{\"825\":1}}],[\"字符串\",{\"1\":{\"783\":1}}],[\"字符串模糊匹配\",{\"1\":{\"114\":1}}],[\"字典缓存注解使用错误问题\",{\"1\":{\"619\":1}}],[\"字典管理\",{\"1\":{\"609\":1}}],[\"字典翻译等\",{\"1\":{\"608\":1}}],[\"字母\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"字段叫\",{\"1\":{\"783\":1}}],[\"字段拷贝\",{\"0\":{\"671\":1},\"1\":{\"667\":1}}],[\"字段注释未生成\",{\"1\":{\"651\":1,\"660\":1}}],[\"字段的扩展\",{\"1\":{\"315\":1}}],[\"字段时候\",{\"1\":{\"278\":1}}],[\"字段如果代理的接口是\",{\"1\":{\"278\":1}}],[\"字段来匹配到一条数据\",{\"1\":{\"278\":1}}],[\"字段主要是在请求网关的时候\",{\"1\":{\"278\":1}}],[\"字段获取负载均衡策略\",{\"1\":{\"235\":1}}],[\"字段中\",{\"1\":{\"125\":2}}],[\"字段存储这个接口真实节点信息\",{\"1\":{\"125\":1}}],[\"字段\",{\"1\":{\"63\":1,\"315\":3,\"617\":1,\"781\":1}}],[\"才有可能在智能化应用中得到快速发展\",{\"0\":{\"589\":1}}],[\"才有可能谈智能化\",{\"0\":{\"589\":1}}],[\"才得以有今天的发展态势\",{\"1\":{\"335\":1}}],[\"才能不断成长和完善\",{\"1\":{\"633\":1}}],[\"才能不断进化\",{\"1\":{\"633\":1}}],[\"才能实现\",{\"1\":{\"277\":1}}],[\"才能匹配\",{\"1\":{\"114\":1}}],[\"才初始化插件链进入插件处理\",{\"1\":{\"221\":1}}],[\"才会去了解\",{\"1\":{\"791\":1}}],[\"才会去进行恢复\",{\"1\":{\"63\":1}}],[\"才会进行转发和重定向\",{\"1\":{\"254\":1}}],[\"才会等来自身被选中的一刻\",{\"1\":{\"135\":1}}],[\"才会有这个问题\",{\"1\":{\"63\":1}}],[\"名片\",{\"1\":{\"824\":1}}],[\"名称保存优化\",{\"0\":{\"688\":1},\"1\":{\"683\":1}}],[\"名称的类型争论\",{\"1\":{\"316\":1}}],[\"名称\",{\"1\":{\"114\":1,\"264\":1,\"456\":1,\"806\":1}}],[\"名字前缀为\",{\"1\":{\"92\":1}}],[\"规章制度\",{\"1\":{\"831\":1}}],[\"规模各异的项目\",{\"1\":{\"396\":1}}],[\"规避对所有模块进行\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"规避\",{\"1\":{\"357\":1,\"364\":1,\"372\":1,\"378\":1,\"387\":1,\"393\":1,\"400\":1}}],[\"规则等配置\",{\"1\":{\"783\":1}}],[\"规则文件\",{\"1\":{\"520\":1}}],[\"规则中\",{\"1\":{\"519\":1}}],[\"规则和脚本在数据库中发生改变\",{\"1\":{\"515\":1}}],[\"规则和负载均衡策略选出待分发的服务器实例\",{\"1\":{\"224\":1}}],[\"规则引擎之路进行到底\",{\"0\":{\"466\":1}}],[\"规则从管理节点同步过来时的处理逻辑\",{\"1\":{\"266\":1}}],[\"规则的匹配逻辑\",{\"1\":{\"244\":1}}],[\"规则的配置和选择器类似\",{\"1\":{\"115\":1}}],[\"规则匹配的神秘面纱\",{\"1\":{\"237\":1}}],[\"规则数据的获取全部来自于basedatacache\",{\"1\":{\"234\":1}}],[\"规则日志打印\",{\"1\":{\"234\":1}}],[\"规则元数据变动调用\",{\"1\":{\"162\":1}}],[\"规则时\",{\"1\":{\"134\":1}}],[\"规则\",{\"0\":{\"244\":1},\"1\":{\"116\":1,\"234\":1,\"790\":1}}],[\"规则就是最终的筛选\",{\"1\":{\"113\":1}}],[\"规范化代码\",{\"1\":{\"608\":1}}],[\"规范与项目统一配置的代码格式化\",{\"1\":{\"608\":1}}],[\"规范重构相关代码\",{\"1\":{\"397\":1}}],[\"规范\",{\"1\":{\"397\":3}}],[\"规范优雅的代码\",{\"1\":{\"370\":1,\"385\":1}}],[\"规范的统一定义\",{\"1\":{\"397\":2}}],[\"规范的\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"规范基础之上\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"规范等等\",{\"1\":{\"54\":1}}],[\"规范可以让我们去直连所有的主流数据库\",{\"1\":{\"54\":1}}],[\"理解为第二层缓存\",{\"1\":{\"183\":1}}],[\"理解为第一层缓存\",{\"1\":{\"183\":1}}],[\"理解为标识\",{\"1\":{\"183\":1}}],[\"理解读与用户一起\",{\"0\":{\"51\":1}}],[\"理论上来说\",{\"1\":{\"113\":1}}],[\"负载均衡在哪里做\",{\"1\":{\"791\":1}}],[\"负载均衡正式来袭\",{\"0\":{\"767\":1,\"768\":1}}],[\"负载均衡策略\",{\"1\":{\"700\":1}}],[\"负载均衡策略类\",{\"1\":{\"131\":1}}],[\"负载均衡测试用例\",{\"1\":{\"314\":1}}],[\"负载均衡算法\",{\"1\":{\"314\":1,\"787\":1}}],[\"负载均衡算法名\",{\"1\":{\"224\":1}}],[\"负载均衡\",{\"0\":{\"132\":1,\"229\":1},\"1\":{\"224\":1,\"230\":1}}],[\"负载均衡等\",{\"1\":{\"113\":1}}],[\"负责处理当有\",{\"1\":{\"266\":1}}],[\"负责遍历服务列表\",{\"1\":{\"227\":1}}],[\"负责存放活动的上游服务信息\",{\"1\":{\"225\":1}}],[\"负责存放全量的上游服务信息\",{\"1\":{\"225\":1}}],[\"负责自动装配网关所需的核心\",{\"1\":{\"220\":1}}],[\"负责监听\",{\"1\":{\"210\":1}}],[\"负责监听事件\",{\"1\":{\"204\":1}}],[\"负责读取和同步\",{\"1\":{\"210\":1}}],[\"负责调用具体的监听实现类对\",{\"1\":{\"209\":1}}],[\"负责同步数据至\",{\"1\":{\"204\":1}}],[\"负责向\",{\"1\":{\"200\":1}}],[\"负责\",{\"1\":{\"160\":1,\"286\":2}}],[\"负责人选项改为下拉框选择\",{\"1\":{\"617\":1}}],[\"负责人\",{\"0\":{\"26\":1}}],[\"负责统筹和执行社区组织的活动\",{\"1\":{\"6\":1}}],[\"负责社区下所有孵化项目推广\",{\"1\":{\"6\":1}}],[\"负责社区新旧捐赠项目评审工作\",{\"1\":{\"6\":1}}],[\"负责新旧社区成员管理工作\",{\"1\":{\"6\":1}}],[\"路漫漫其修远兮\",{\"1\":{\"765\":1}}],[\"路\",{\"1\":{\"308\":1}}],[\"路径与\",{\"1\":{\"617\":1}}],[\"路径缺少分隔符的问题\",{\"1\":{\"316\":1}}],[\"路径描述\",{\"1\":{\"278\":1}}],[\"路径\",{\"1\":{\"278\":1}}],[\"路径指代调用到\",{\"1\":{\"232\":1}}],[\"路径供网关调用并监听数据变化\",{\"1\":{\"144\":1}}],[\"路由跳转被阻止时\",{\"1\":{\"606\":1}}],[\"路由选择\",{\"1\":{\"237\":1}}],[\"路由选择插件\",{\"0\":{\"233\":1}}],[\"路由\",{\"1\":{\"113\":1}}],[\"路线\",{\"1\":{\"12\":1}}],[\"两种配置\",{\"1\":{\"397\":1}}],[\"两种模式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"两部分\",{\"1\":{\"186\":1}}],[\"两次调用出现的对象却不一样\",{\"1\":{\"166\":1}}],[\"两者是通过\",{\"1\":{\"112\":1}}],[\"两个系统即可\",{\"1\":{\"150\":1}}],[\"两个节点在缓存中的分值会以自身为基数增加\",{\"1\":{\"135\":1}}],[\"两个分值分别为\",{\"1\":{\"135\":1}}],[\"两个模块\",{\"1\":{\"112\":1}}],[\"两个端口对应的服务配置到选择器中\",{\"1\":{\"108\":1}}],[\"✗\",{\"1\":{\"109\":2}}],[\"➜\",{\"1\":{\"109\":2}}],[\"压测\",{\"0\":{\"109\":1}}],[\"再生成一张\",{\"1\":{\"816\":1}}],[\"再后来写了\",{\"1\":{\"792\":1}}],[\"再也不用为分库分表\",{\"1\":{\"608\":1}}],[\"再接再励\",{\"1\":{\"308\":1}}],[\"再创辉煌\",{\"1\":{\"308\":3}}],[\"再把流量放过去\",{\"1\":{\"791\":1}}],[\"再把不同周期的指标操作再封装起来\",{\"1\":{\"590\":1}}],[\"再把\",{\"1\":{\"259\":1}}],[\"再之后就是我们熟悉的\",{\"1\":{\"259\":1}}],[\"再结合源码实现\",{\"1\":{\"221\":1}}],[\"再通过负载均衡策略分配上游服务实例\",{\"1\":{\"219\":1}}],[\"再通过打断点的方式来调试一下\",{\"1\":{\"92\":1}}],[\"再来看下\",{\"1\":{\"219\":1}}],[\"再来看看\",{\"1\":{\"177\":1,\"224\":1}}],[\"再来看看这个方法\",{\"0\":{\"126\":1}}],[\"再去启动\",{\"1\":{\"208\":1}}],[\"再启动下次监听\",{\"1\":{\"149\":1}}],[\"再看里面有\",{\"1\":{\"154\":1}}],[\"再看\",{\"1\":{\"142\":1}}],[\"再次启动soul\",{\"1\":{\"106\":1}}],[\"勾选\",{\"1\":{\"106\":1}}],[\"里指定的配置类自动加载到容器\",{\"1\":{\"220\":1}}],[\"里的一个\",{\"1\":{\"144\":1}}],[\"里\",{\"1\":{\"102\":1,\"125\":1,\"156\":1}}],[\"里面\",{\"1\":{\"783\":1}}],[\"里面实例化了一个\",{\"1\":{\"92\":1}}],[\"里面进行如下配置\",{\"1\":{\"77\":1}}],[\"里面没有的时候\",{\"1\":{\"71\":1}}],[\"登录窗口效果\",{\"1\":{\"644\":1}}],[\"登录认证\",{\"1\":{\"624\":1}}],[\"登录用户缓存\",{\"1\":{\"617\":1}}],[\"登录用户增加昵称返回\",{\"1\":{\"617\":1}}],[\"登录日志\",{\"1\":{\"609\":1}}],[\"登录校验错误次数未达到上限时\",{\"1\":{\"619\":1}}],[\"登录校验\",{\"1\":{\"608\":1}}],[\"登录方式\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"登录支持\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"登录即可免费开始\",{\"1\":{\"452\":1}}],[\"登录\",{\"1\":{\"100\":1,\"281\":1}}],[\"↓\",{\"1\":{\"100\":1}}],[\"跳转\",{\"1\":{\"259\":1}}],[\"跳转到登录页\",{\"1\":{\"100\":1}}],[\"跳过的插件为\",{\"1\":{\"231\":1}}],[\"跳动\",{\"0\":{\"51\":1},\"1\":{\"52\":1}}],[\"网易数帆\",{\"1\":{\"808\":1}}],[\"网易云短信接入\",{\"0\":{\"762\":1},\"1\":{\"754\":1}}],[\"网易云信\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"网盘\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"网站监控\",{\"1\":{\"445\":1}}],[\"网名\",{\"1\":{\"404\":1}}],[\"网络链接超时\",{\"1\":{\"457\":1,\"465\":1}}],[\"网络上有些人会对这样的分单机和集群版的开源项目嗤之以鼻\",{\"1\":{\"456\":1}}],[\"网络超时\",{\"1\":{\"448\":1}}],[\"网络等指标监控\",{\"1\":{\"441\":1,\"447\":1}}],[\"网络等监控阈值告警通知一步到位\",{\"1\":{\"452\":1,\"464\":1}}],[\"网络等监控\",{\"1\":{\"53\":1}}],[\"网络\",{\"1\":{\"149\":1}}],[\"网关是支持\",{\"1\":{\"792\":1}}],[\"网关是使用响应式编程实现的\",{\"1\":{\"791\":1}}],[\"网关刚开始数据同步只支持\",{\"1\":{\"792\":1}}],[\"网关就很好了解决了以上所有问题\",{\"1\":{\"791\":1}}],[\"网关有哪些使用场景\",{\"0\":{\"791\":1}}],[\"网关使用\",{\"1\":{\"790\":1}}],[\"网关内部\",{\"1\":{\"790\":1}}],[\"网关节点的\",{\"1\":{\"790\":1}}],[\"网关节点对于同一个资源的流控是独立但相同的\",{\"1\":{\"266\":1}}],[\"网关根据路由规则来进行调用\",{\"1\":{\"783\":1}}],[\"网关根据消息修改数据\",{\"1\":{\"125\":1}}],[\"网关到底可以在什么场景下能发挥大作用\",{\"1\":{\"783\":1}}],[\"网关对你的业务系统进行调用的时候\",{\"1\":{\"783\":1}}],[\"网关对接\",{\"1\":{\"599\":1}}],[\"网关默认的返回结果是\",{\"1\":{\"783\":1}}],[\"网关在\",{\"1\":{\"783\":1}}],[\"网关在对目标服务进行代理调用的时候\",{\"1\":{\"253\":1}}],[\"网关要发起对它的调用\",{\"1\":{\"783\":1}}],[\"网关程序我们知道其实是按照上面的顺序一个一个的进行判断调用\",{\"1\":{\"287\":1}}],[\"网关通过\",{\"1\":{\"284\":1}}],[\"网关目前使用方式\",{\"0\":{\"284\":1}}],[\"网关中\",{\"1\":{\"277\":1}}],[\"网关中定义了一条插件链\",{\"1\":{\"218\":1}}],[\"网关提供限流和熔断\",{\"1\":{\"274\":1}}],[\"网关添加依赖\",{\"1\":{\"270\":1}}],[\"网关可以分布式部署\",{\"1\":{\"266\":1}}],[\"网关封装了优秀的流控组件\",{\"1\":{\"266\":1}}],[\"网关部署了\",{\"1\":{\"266\":1}}],[\"网关会保证该服务的\",{\"1\":{\"266\":1}}],[\"网关会直接报错返回\",{\"1\":{\"266\":1}}],[\"网关会直接返回请求错误\",{\"1\":{\"265\":1}}],[\"网关会进行\",{\"1\":{\"257\":1}}],[\"网关基于\",{\"1\":{\"259\":1}}],[\"网关自从去年\",{\"1\":{\"783\":1}}],[\"网关自身接口转发\",{\"0\":{\"258\":1}}],[\"网关自己监听到变更再做的同步\",{\"1\":{\"142\":1}}],[\"网关同步数据整体流程时\",{\"1\":{\"247\":1}}],[\"网关同步的注册信息\",{\"1\":{\"199\":1}}],[\"网关插件列表处\",{\"1\":{\"244\":1}}],[\"网关系统管理\",{\"1\":{\"243\":1}}],[\"网关发布\",{\"0\":{\"778\":1}}],[\"网关发起的\",{\"1\":{\"237\":1}}],[\"网关发送数据改动信息\",{\"1\":{\"127\":2}}],[\"网关发送\",{\"1\":{\"126\":1}}],[\"网关里默认支持三种负载均衡策略\",{\"1\":{\"229\":1}}],[\"网关强大的扩展能力\",{\"1\":{\"219\":1}}],[\"网关数据\",{\"1\":{\"210\":2}}],[\"网关数据同步原理\",{\"1\":{\"201\":1}}],[\"网关数据变动调用链\",{\"0\":{\"162\":1}}],[\"网关服务的数量的\",{\"1\":{\"266\":1}}],[\"网关服务启动\",{\"1\":{\"199\":1}}],[\"网关服务配置\",{\"1\":{\"198\":1}}],[\"网关如何建立\",{\"0\":{\"161\":1}}],[\"网关为什么这么做\",{\"1\":{\"149\":1}}],[\"网关端监听的流程实现都在\",{\"1\":{\"149\":1}}],[\"网关端长轮询的流程总体也分两个模块\",{\"1\":{\"147\":1}}],[\"网关轮询监听变化\",{\"0\":{\"149\":1}}],[\"网关启动时\",{\"1\":{\"148\":1,\"149\":1}}],[\"网关启动时拉取数据\",{\"0\":{\"148\":1}}],[\"网关启动后\",{\"1\":{\"148\":1}}],[\"网关请求后台时后台并不是立即返回响应\",{\"1\":{\"145\":1}}],[\"网关信息模式切换\",{\"1\":{\"140\":1}}],[\"网关源码分析\",{\"1\":{\"140\":1}}],[\"网关注册逻辑就分析完了\",{\"1\":{\"127\":1}}],[\"网关做了什么处理也需要后续分析\",{\"1\":{\"127\":1}}],[\"网关后台服务启动\",{\"1\":{\"199\":1}}],[\"网关后\",{\"1\":{\"127\":1,\"150\":1}}],[\"网关建立的\",{\"1\":{\"125\":1}}],[\"网关\",{\"0\":{\"124\":1,\"125\":1,\"200\":1},\"1\":{\"127\":1,\"150\":1,\"259\":1,\"273\":1,\"311\":1,\"783\":2,\"791\":1,\"792\":1}}],[\"网关管理的接口注册\",{\"1\":{\"121\":1}}],[\"网关时\",{\"1\":{\"121\":1}}],[\"网关的特性\",{\"0\":{\"790\":1}}],[\"网关的选择器\",{\"1\":{\"783\":1}}],[\"网关的内存数据\",{\"1\":{\"313\":1}}],[\"网关的全路径\",{\"1\":{\"232\":1}}],[\"网关的负载均衡如何执行\",{\"1\":{\"132\":1}}],[\"网关的系统重启\",{\"1\":{\"125\":1}}],[\"网关的灵魂所在\",{\"1\":{\"113\":1}}],[\"网关的后台管理系统\",{\"1\":{\"100\":1}}],[\"网关最核心的设计思想\",{\"1\":{\"113\":1}}],[\"源于\",{\"1\":{\"374\":1,\"389\":1}}],[\"源仓库影响\",{\"0\":{\"300\":1}}],[\"源代码\",{\"0\":{\"97\":1,\"98\":1},\"1\":{\"374\":1,\"389\":1}}],[\"源代码至本地\",{\"0\":{\"96\":1}}],[\"源代码至自己的仓库\",{\"0\":{\"95\":1}}],[\"源代码准备\",{\"0\":{\"94\":1}}],[\"源码如下\",{\"1\":{\"266\":1}}],[\"源码解析\",{\"0\":{\"259\":1}}],[\"源码先分析到这\",{\"1\":{\"92\":1}}],[\"源码分析\",{\"1\":{\"92\":3}}],[\"源码阅读\",{\"0\":{\"29\":1,\"32\":1,\"246\":1},\"1\":{\"150\":1}}],[\"源码01期阅读分享会02\",{\"0\":{\"28\":1}}],[\"7z\",{\"1\":{\"724\":1}}],[\"78\",{\"1\":{\"541\":1}}],[\"789\",{\"1\":{\"383\":1}}],[\"775\",{\"1\":{\"368\":1}}],[\"7700\",{\"1\":{\"333\":3}}],[\"798\",{\"1\":{\"208\":2}}],[\"7\",{\"0\":{\"350\":1,\"351\":1,\"355\":1,\"601\":1,\"643\":1,\"658\":1,\"666\":1},\"1\":{\"199\":1,\"200\":1,\"271\":5,\"280\":1,\"313\":1,\"314\":2,\"315\":1,\"316\":1,\"330\":1,\"351\":1,\"354\":6,\"358\":1,\"367\":1,\"368\":2,\"382\":1,\"514\":1,\"526\":2,\"529\":2,\"532\":2,\"535\":1,\"538\":2,\"541\":2,\"544\":2,\"554\":2,\"564\":2,\"577\":1,\"603\":2,\"608\":1,\"616\":1,\"624\":1,\"632\":1,\"633\":1,\"644\":1,\"701\":1,\"709\":1,\"720\":1,\"797\":1}}],[\"76\",{\"1\":{\"397\":1}}],[\"764\",{\"1\":{\"208\":1}}],[\"761\",{\"1\":{\"199\":4}}],[\"762\",{\"1\":{\"101\":1}}],[\"70\",{\"1\":{\"271\":1}}],[\"70mb\",{\"1\":{\"109\":1}}],[\"70bad5ebb1cf6e3fc55278eef2df42f3\",{\"1\":{\"92\":2}}],[\"70b269257d47f0f6404ae7b7e976d8f1\",{\"1\":{\"92\":2}}],[\"744\",{\"1\":{\"354\":1}}],[\"74\",{\"1\":{\"109\":2,\"529\":1}}],[\"75\",{\"1\":{\"383\":1,\"535\":1}}],[\"758\",{\"1\":{\"208\":1}}],[\"75f487d20c6c\",{\"1\":{\"208\":4}}],[\"752\",{\"1\":{\"199\":1}}],[\"756\",{\"1\":{\"108\":2,\"360\":1}}],[\"755\",{\"1\":{\"108\":1}}],[\"73c2c3\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"73\",{\"1\":{\"64\":1,\"77\":1,\"354\":1}}],[\"执行器页面易用性优化\",{\"1\":{\"834\":1}}],[\"执行器增加上下布局拖拽\",{\"1\":{\"833\":1}}],[\"执行器管理等\",{\"1\":{\"609\":1}}],[\"执行同步所有插件\",{\"1\":{\"781\":1}}],[\"执行命令java\",{\"1\":{\"583\":2,\"585\":1}}],[\"执行命令的方式\",{\"1\":{\"338\":1}}],[\"执行更新自己的中微子代理数据库\",{\"1\":{\"575\":1}}],[\"执行超时\",{\"1\":{\"411\":1}}],[\"执行lua脚本\",{\"1\":{\"249\":1}}],[\"执行子类具体实现\",{\"1\":{\"234\":1}}],[\"执行子类的方法\",{\"1\":{\"129\":1}}],[\"执行具体均衡策略\",{\"1\":{\"230\":1}}],[\"执行具体处理\",{\"1\":{\"219\":1}}],[\"执行负载均衡计算最终分发到的服务\",{\"1\":{\"229\":1}}],[\"执行自定义处理\",{\"1\":{\"224\":1}}],[\"执行时加订阅实现\",{\"1\":{\"220\":1}}],[\"执行插件处理逻辑\",{\"1\":{\"220\":1}}],[\"执行插件链上的下个插件\",{\"1\":{\"129\":1}}],[\"执行监听事件\",{\"1\":{\"209\":1}}],[\"执行后续的插件链调用\",{\"1\":{\"136\":1}}],[\"执行顺序小的优先执行\",{\"1\":{\"114\":1}}],[\"执行顺序\",{\"1\":{\"114\":1,\"264\":1}}],[\"执行\",{\"1\":{\"104\":1,\"105\":1,\"107\":1,\"251\":1,\"271\":1,\"628\":1}}],[\"执行以下命令可以一键安装\",{\"1\":{\"333\":1}}],[\"执行以下\",{\"1\":{\"98\":1}}],[\"执行相关的刷新方法\",{\"1\":{\"92\":1}}],[\"执行完成后\",{\"1\":{\"64\":1}}],[\"去调用每个微服务\",{\"1\":{\"783\":1}}],[\"去中心化设计\",{\"1\":{\"706\":1}}],[\"去除了先前中的\",{\"1\":{\"771\":1}}],[\"去除多余的注解\",{\"1\":{\"755\":1}}],[\"去除\",{\"0\":{\"732\":1}}],[\"去除腾讯\",{\"0\":{\"731\":1}}],[\"去除不必须的第三方\",{\"1\":{\"700\":1}}],[\"去除冗余统一存储\",{\"1\":{\"617\":1}}],[\"去统计的话不知道要到何年马月\",{\"1\":{\"406\":1}}],[\"去\",{\"1\":{\"208\":1}}],[\"去看一下是否有网关的数据\",{\"1\":{\"208\":1}}],[\"去真正实现时\",{\"1\":{\"168\":1}}],[\"去包装一些子类\",{\"1\":{\"165\":1}}],[\"去处理信息\",{\"1\":{\"162\":1}}],[\"去跑一个\",{\"1\":{\"144\":1}}],[\"去修改\",{\"1\":{\"142\":1}}],[\"去猜测一下处理\",{\"1\":{\"113\":1}}],[\"去执行\",{\"1\":{\"92\":1}}],[\"去监控服务器指标\",{\"1\":{\"54\":1}}],[\"每一种元素都拥有高度可编辑能力\",{\"1\":{\"820\":1}}],[\"每一个特性的提交\",{\"1\":{\"514\":1}}],[\"每一个\",{\"1\":{\"278\":1,\"518\":1,\"521\":1}}],[\"每个微服务项目的开发人员都在这上面进行开发\",{\"1\":{\"791\":1}}],[\"每个微服务注册到网关\",{\"1\":{\"783\":1}}],[\"每个配置都在\",{\"1\":{\"790\":1}}],[\"每个公司使用情况又不一样\",{\"1\":{\"783\":1}}],[\"每个厂商一个\",{\"1\":{\"747\":1}}],[\"每个子任务都统计出了它的那部分结果\",{\"1\":{\"406\":1}}],[\"每个项目的管理团队必须无条件服从组织\",{\"1\":{\"306\":1}}],[\"每个项目内部管理自治\",{\"1\":{\"306\":1}}],[\"每个\",{\"1\":{\"266\":1}}],[\"每个请求最多等待\",{\"1\":{\"266\":1}}],[\"每个节点\",{\"1\":{\"133\":1}}],[\"每种\",{\"1\":{\"232\":1}}],[\"每次\",{\"1\":{\"720\":1}}],[\"每次构建docker镜像时\",{\"1\":{\"541\":2}}],[\"每次刷新令牌的数量为2\",{\"1\":{\"271\":1}}],[\"每次刷新令牌的数量为\",{\"1\":{\"271\":1}}],[\"每次刷新令牌的数量\",{\"1\":{\"270\":1}}],[\"每次处理时\",{\"1\":{\"219\":1}}],[\"每次迭代都去反射初始化所有实现类\",{\"1\":{\"176\":1}}],[\"每次得到的对象都不一样可能会引发程序问题\",{\"1\":{\"175\":1}}],[\"每次调用都有一定消耗\",{\"1\":{\"166\":1}}],[\"每次调用execute\",{\"1\":{\"130\":1}}],[\"每次拉取某一种数据类型的信息\",{\"1\":{\"148\":1}}],[\"每次手动点下后台同步这里立马就来调用了\",{\"1\":{\"145\":1}}],[\"每次被选上的惩罚力度很小\",{\"1\":{\"135\":1}}],[\"每\",{\"1\":{\"92\":1}}],[\"每人根据每天阅读的内容\",{\"1\":{\"24\":1}}],[\"间隔\",{\"1\":{\"92\":1}}],[\"间至大会签到处签到入场\",{\"1\":{\"12\":1}}],[\"看风向标\",{\"1\":{\"791\":1}}],[\"看完还不赶紧上号\",{\"1\":{\"681\":1,\"690\":1,\"698\":1}}],[\"看完直观的展示\",{\"1\":{\"593\":1}}],[\"看来大家对循环特性使用的还是比较多的\",{\"1\":{\"475\":1}}],[\"看好你哦\",{\"1\":{\"308\":1}}],[\"看一下excute方法的具体作用\",{\"1\":{\"234\":1}}],[\"看到下面的断点\",{\"1\":{\"208\":1}}],[\"看到代码中\",{\"1\":{\"157\":1}}],[\"看到\",{\"1\":{\"156\":1}}],[\"看到这儿\",{\"1\":{\"415\":1,\"424\":1}}],[\"看到这可以猜测\",{\"1\":{\"167\":1}}],[\"看到这几种类型\",{\"1\":{\"154\":1}}],[\"看到这也基本明了\",{\"1\":{\"144\":1}}],[\"看到这会很好奇\",{\"1\":{\"130\":1}}],[\"看到这么多\",{\"1\":{\"124\":1}}],[\"看到这里我想你依然明白\",{\"1\":{\"173\":1}}],[\"看到这里我想你已经了解\",{\"1\":{\"172\":1}}],[\"看到这里我们明白了\",{\"1\":{\"167\":1}}],[\"看到这里有\",{\"1\":{\"124\":1}}],[\"看到这里\",{\"1\":{\"122\":1}}],[\"看下载量已实现\",{\"1\":{\"456\":1}}],[\"看下负载均衡的实现\",{\"1\":{\"229\":1}}],[\"看下获取的实现\",{\"1\":{\"225\":1}}],[\"看下\",{\"1\":{\"167\":1,\"220\":1}}],[\"看下前台会调用\",{\"1\":{\"152\":1}}],[\"看下数据库数据\",{\"1\":{\"126\":1}}],[\"看有什么结论\",{\"1\":{\"145\":1}}],[\"看看我新写的方式\",{\"1\":{\"173\":1}}],[\"看看最重要的\",{\"1\":{\"171\":1}}],[\"看看到底怎么实现\",{\"1\":{\"166\":1}}],[\"看看具体的实现效果\",{\"1\":{\"166\":1}}],[\"看看这个方法的代码\",{\"1\":{\"164\":1}}],[\"看看这个流程是怎么实现的\",{\"1\":{\"150\":1}}],[\"看看这里关于\",{\"1\":{\"141\":1}}],[\"看看\",{\"1\":{\"144\":1,\"220\":2}}],[\"看具体是落在那个节点的权重片段上\",{\"1\":{\"134\":1}}],[\"看日志发现确实经过了网关转发到了\",{\"1\":{\"117\":1}}],[\"看日志会打出来这么一段\",{\"1\":{\"92\":1}}],[\"看名字可以知道\",{\"1\":{\"92\":1}}],[\"改变了以前运维掌控一切的观念\",{\"1\":{\"791\":1}}],[\"改名为\",{\"1\":{\"722\":1}}],[\"改为了\",{\"1\":{\"778\":1}}],[\"改为更加自由的接口类配置\",{\"1\":{\"771\":1}}],[\"改为\",{\"1\":{\"624\":1,\"722\":3}}],[\"改为使用统一配置版本\",{\"1\":{\"397\":2}}],[\"改造了\",{\"1\":{\"370\":1,\"385\":1}}],[\"改进\",{\"1\":{\"723\":1}}],[\"改进节点\",{\"1\":{\"331\":1}}],[\"改进的\",{\"1\":{\"79\":2,\"81\":3,\"90\":1}}],[\"改\",{\"1\":{\"92\":1}}],[\"改完重启发现不会再跳到\",{\"1\":{\"92\":1}}],[\"改成不启用\",{\"1\":{\"92\":1}}],[\"文字可在图层中编辑\",{\"1\":{\"828\":1}}],[\"文字编辑\",{\"0\":{\"825\":1}}],[\"文档编辑页面\",{\"1\":{\"836\":1}}],[\"文档查看管理页面\",{\"1\":{\"836\":1}}],[\"文档导出优化\",{\"1\":{\"834\":1}}],[\"文档管理页面优化\",{\"1\":{\"833\":1}}],[\"文档支持保存和打开\",{\"0\":{\"695\":1},\"1\":{\"692\":1}}],[\"文档同步支持自定义分支\",{\"0\":{\"657\":1}}],[\"文档说明有限\",{\"1\":{\"608\":1}}],[\"文档更新\",{\"1\":{\"397\":1}}],[\"文档描述和准确的\",{\"1\":{\"372\":1,\"387\":1}}],[\"文档和源代码\",{\"1\":{\"370\":1,\"385\":1}}],[\"文档增加去除节点污点方式\",{\"1\":{\"340\":1}}],[\"文档模块更新\",{\"1\":{\"316\":1}}],[\"文档的相关功能\",{\"1\":{\"315\":1}}],[\"文档\",{\"1\":{\"314\":1,\"315\":1,\"607\":1,\"624\":1,\"667\":1,\"783\":1,\"786\":1,\"808\":3}}],[\"文档中添加\",{\"1\":{\"314\":1}}],[\"文章内部有报错\",{\"1\":{\"119\":1,\"132\":3}}],[\"文件是否存在\",{\"1\":{\"817\":2}}],[\"文件适配器\",{\"1\":{\"816\":1}}],[\"文件不落盘\",{\"1\":{\"809\":1}}],[\"文件\",{\"1\":{\"789\":1}}],[\"文件格式如下\",{\"1\":{\"709\":1}}],[\"文件逻辑类似\",{\"1\":{\"664\":1}}],[\"文件方法\",{\"1\":{\"618\":1}}],[\"文件配置管理\",{\"1\":{\"609\":1}}],[\"文件管理\",{\"1\":{\"609\":1}}],[\"文件裸漏\",{\"1\":{\"608\":1}}],[\"文件可加密存储\",{\"1\":{\"608\":1}}],[\"文件存储配置\",{\"1\":{\"811\":2,\"814\":1}}],[\"文件存储\",{\"1\":{\"608\":1}}],[\"文件内容同上\",{\"1\":{\"583\":1}}],[\"文件update\",{\"1\":{\"575\":1}}],[\"文件秒传\",{\"1\":{\"374\":1,\"389\":1}}],[\"文件直传\",{\"1\":{\"374\":2,\"389\":2}}],[\"文件等\",{\"1\":{\"300\":1}}],[\"文件充当插件列表\",{\"1\":{\"217\":1}}],[\"文件中加上如下配置\",{\"1\":{\"788\":1}}],[\"文件中添加插件依赖\",{\"1\":{\"255\":1}}],[\"文件中添加\",{\"0\":{\"188\":1},\"1\":{\"254\":1,\"624\":1}}],[\"文件中\",{\"1\":{\"183\":1}}],[\"文件中的配置\",{\"1\":{\"92\":1}}],[\"文件中已经把\",{\"1\":{\"92\":1}}],[\"文件里面有对\",{\"1\":{\"92\":1}}],[\"文本块\",{\"1\":{\"79\":1}}],[\"奇怪的一点是跳到了\",{\"1\":{\"92\":1}}],[\"服务呢\",{\"1\":{\"789\":1}}],[\"服务后\",{\"1\":{\"784\":1,\"791\":1}}],[\"服务调用方\",{\"1\":{\"709\":1}}],[\"服务调用之间的柔性事务\",{\"1\":{\"709\":1}}],[\"服务提供方\",{\"1\":{\"709\":1}}],[\"服务提供者依赖\",{\"1\":{\"709\":1}}],[\"服务提供端如何拦截泛化请求\",{\"1\":{\"294\":1}}],[\"服务提供端如何使用\",{\"1\":{\"292\":1}}],[\"服务提供端通过\",{\"0\":{\"294\":1}}],[\"服务监控\",{\"1\":{\"609\":1}}],[\"服务端ip\",{\"1\":{\"584\":1}}],[\"服务端部署成功后\",{\"1\":{\"584\":1}}],[\"服务端支持\",{\"1\":{\"577\":1}}],[\"服务端管理后台截图\",{\"1\":{\"576\":1}}],[\"服务端配置增加心跳日志开关\",{\"1\":{\"574\":1}}],[\"服务端\",{\"1\":{\"574\":1,\"575\":1}}],[\"服务的对外端口\",{\"1\":{\"457\":1,\"465\":1}}],[\"服务的对外\",{\"1\":{\"457\":1,\"465\":1}}],[\"服务统一调度管理展示\",{\"1\":{\"455\":1}}],[\"服务云边协同提升采集能力\",{\"1\":{\"455\":1}}],[\"服务启动时会从配置中心拉取配置生成线程池对象放到\",{\"1\":{\"409\":1,\"419\":1}}],[\"服务启动后会自动注入\",{\"1\":{\"210\":1}}],[\"服务启动后可以看到发起的\",{\"1\":{\"199\":2}}],[\"服务中\",{\"1\":{\"397\":1}}],[\"服务器管理\",{\"1\":{\"794\":2}}],[\"服务器管理界面\",{\"1\":{\"374\":1,\"389\":1}}],[\"服务器机构和账号管理\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"服务器\",{\"1\":{\"445\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"服务器以提升安全性\",{\"1\":{\"374\":1,\"389\":1}}],[\"服务器地址\",{\"1\":{\"374\":1,\"389\":1}}],[\"服务器不可用错误代码\",{\"1\":{\"368\":2}}],[\"服务选择器\",{\"1\":{\"316\":1}}],[\"服务发现\",{\"1\":{\"313\":1}}],[\"服务代理\",{\"1\":{\"311\":1}}],[\"服务消费端\",{\"0\":{\"293\":1}}],[\"服务名称\",{\"1\":{\"278\":1}}],[\"服务自动注册与发现\",{\"1\":{\"277\":1}}],[\"服务框架\",{\"1\":{\"277\":1}}],[\"服务降级粗略的可以理解为请求此业务的简版\",{\"1\":{\"264\":1}}],[\"服务内部会使用\",{\"1\":{\"258\":1}}],[\"服务跳转\",{\"1\":{\"257\":1}}],[\"服务列表最初来自\",{\"1\":{\"230\":1}}],[\"服务活性检查实现\",{\"1\":{\"228\":1}}],[\"服务有数据\",{\"1\":{\"208\":1}}],[\"服务配置\",{\"1\":{\"198\":1}}],[\"服务接口\",{\"1\":{\"158\":1}}],[\"服务\",{\"0\":{\"104\":1,\"107\":1,\"282\":1},\"1\":{\"208\":2,\"276\":1,\"331\":1,\"644\":2,\"781\":1}}],[\"服务打开\",{\"1\":{\"92\":1}}],[\"服务之类的\",{\"1\":{\"64\":1}}],[\"前名称\",{\"1\":{\"740\":1}}],[\"前一个版本在\",{\"1\":{\"696\":1}}],[\"前前后后摸索了两三年时间\",{\"0\":{\"589\":1}}],[\"前言\",{\"0\":{\"481\":1,\"514\":1}}],[\"前端控制\",{\"1\":{\"802\":1}}],[\"前端未提供\",{\"1\":{\"624\":1}}],[\"前端添加或修改表单修改列生成问题\",{\"1\":{\"619\":2}}],[\"前端项目\",{\"1\":{\"608\":1}}],[\"前端代码适配springboot3微调\",{\"1\":{\"547\":1}}],[\"前端工程新增\",{\"1\":{\"397\":1}}],[\"前端工程包管理器变更为\",{\"1\":{\"366\":1,\"381\":1}}],[\"前端对象列表界面\",{\"1\":{\"383\":1}}],[\"前端开发\",{\"1\":{\"374\":1,\"389\":1}}],[\"前端采用一个完整的项目而非\",{\"1\":{\"370\":1,\"385\":1}}],[\"前端新增基于\",{\"1\":{\"368\":1}}],[\"前端新增对象存储\",{\"1\":{\"368\":4}}],[\"前端新特性\",{\"0\":{\"365\":1,\"380\":1,\"395\":1,\"402\":1}}],[\"前端\",{\"0\":{\"356\":1},\"1\":{\"383\":2}}],[\"前后台分离\",{\"1\":{\"624\":1}}],[\"前后端接口请求加密传输\",{\"1\":{\"615\":1}}],[\"前后端交互和使用\",{\"1\":{\"374\":1,\"389\":1}}],[\"前后端交互\",{\"1\":{\"374\":1,\"389\":1}}],[\"前后端分离的应用\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"前后端分离的微服务架构解决方案\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"前后值相等\",{\"1\":{\"114\":1}}],[\"前缀了\",{\"1\":{\"474\":1}}],[\"前缀树\",{\"1\":{\"315\":1}}],[\"前缀树匹配逻辑\",{\"1\":{\"315\":1}}],[\"前缀\",{\"1\":{\"304\":1,\"474\":1}}],[\"前\",{\"1\":{\"264\":1}}],[\"前置插件处理熔断限流鉴权等操作\",{\"1\":{\"237\":1}}],[\"前面章节我们提到\",{\"1\":{\"225\":1}}],[\"前半部分都是在操作数据库\",{\"1\":{\"153\":1}}],[\"前提是把本地或者远程的\",{\"1\":{\"92\":1}}],[\"前沿技术的应用\",{\"1\":{\"91\":1}}],[\"把流量先打到其中一个\",{\"1\":{\"791\":1}}],[\"把运维的工资给你\",{\"1\":{\"783\":1}}],[\"把精力都投入到业务设计上\",{\"1\":{\"608\":1}}],[\"把复杂的交易逻辑拆分成指标计算与指标操作\",{\"1\":{\"590\":1}}],[\"把这个问题给优化了\",{\"1\":{\"489\":1}}],[\"把同一业务类别的监控们分组标记\",{\"1\":{\"448\":1}}],[\"把相关信息持久化\",{\"1\":{\"153\":1}}],[\"把真实服务器节点信息缓存在一个\",{\"1\":{\"125\":1}}],[\"把新节点加入到\",{\"1\":{\"125\":1}}],[\"把前面的代码再贴过来\",{\"1\":{\"125\":1}}],[\"把需要网关代理的接口信息全部注册到\",{\"1\":{\"150\":1}}],[\"把需要\",{\"1\":{\"121\":1}}],[\"把soul\",{\"1\":{\"102\":1}}],[\"把\",{\"1\":{\"92\":1,\"156\":1,\"489\":1}}],[\"把此属性设置为\",{\"1\":{\"64\":1}}],[\"话不多说\",{\"1\":{\"92\":1}}],[\"怎么统一登陆\",{\"1\":{\"783\":1}}],[\"怎么能让大家白等呢\",{\"1\":{\"753\":1}}],[\"怎么修改的\",{\"1\":{\"125\":1}}],[\"怎么同步数据到\",{\"1\":{\"92\":1}}],[\"怎么样才能提高\",{\"1\":{\"61\":1}}],[\"监视集群系统\",{\"1\":{\"609\":1}}],[\"监听到变更事件后\",{\"1\":{\"209\":1}}],[\"监听\",{\"1\":{\"160\":1,\"161\":1,\"205\":1,\"206\":1,\"210\":1}}],[\"监听事件将数据同步至\",{\"1\":{\"201\":1,\"203\":1}}],[\"监听事件处理逻辑\",{\"0\":{\"157\":1}}],[\"监听事件\",{\"0\":{\"155\":1}}],[\"监听请求做了\",{\"1\":{\"149\":1}}],[\"监听器初始化\",{\"1\":{\"160\":1}}],[\"监听器注入\",{\"0\":{\"156\":1}}],[\"监听器\",{\"1\":{\"92\":1}}],[\"监控框架\",{\"1\":{\"608\":1}}],[\"监控指标名称国际化\",{\"1\":{\"461\":1,\"462\":1}}],[\"监控任务在采集器集群中自调度\",{\"1\":{\"454\":1}}],[\"监控告警全页面操作\",{\"1\":{\"448\":1}}],[\"监控服务维护期间\",{\"1\":{\"442\":1}}],[\"监控数据新增线程池别名\",{\"1\":{\"420\":1}}],[\"监控数据采集\",{\"1\":{\"409\":1,\"419\":1}}],[\"监控报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"监控面板\",{\"1\":{\"331\":1}}],[\"监控插件\",{\"1\":{\"231\":1}}],[\"监控模版\",{\"1\":{\"55\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"监控模版定义的配置也是在页面可操作的\",{\"1\":{\"54\":1}}],[\"监控+告警+通知\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"监控\",{\"1\":{\"33\":1,\"37\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"608\":1,\"713\":1,\"783\":1,\"784\":1,\"791\":1}}],[\"秒调完\",{\"1\":{\"692\":1}}],[\"秒传\",{\"1\":{\"370\":1,\"373\":1,\"385\":1,\"388\":1}}],[\"秒后达到指定阈值\",{\"1\":{\"266\":1}}],[\"秒后进入如半开状态\",{\"1\":{\"265\":1}}],[\"秒的阈值是低于设置阈值的\",{\"1\":{\"266\":1}}],[\"秒的时间\",{\"1\":{\"145\":1}}],[\"秒钟内阈值逐步增长到指定阈值\",{\"1\":{\"266\":1}}],[\"秒钟内有\",{\"1\":{\"265\":1}}],[\"秒钟内如果请求的次数少于\",{\"1\":{\"265\":1}}],[\"秒钟为统计范围\",{\"1\":{\"265\":1}}],[\"秒钟和\",{\"1\":{\"265\":1}}],[\"秒钟如果有数据变化\",{\"1\":{\"145\":1}}],[\"秒主动探活更新\",{\"1\":{\"230\":1}}],[\"秒执行一次\",{\"1\":{\"226\":1}}],[\"秒过后依然没有数据变化\",{\"1\":{\"145\":1}}],[\"秒去执行一次检查\",{\"1\":{\"92\":1}}],[\"秒\",{\"1\":{\"92\":1,\"226\":1,\"265\":1}}],[\"端需求之一\",{\"1\":{\"636\":1,\"643\":1}}],[\"端模块\",{\"1\":{\"460\":1}}],[\"端点暴露\",{\"1\":{\"315\":1}}],[\"端点\",{\"1\":{\"313\":1}}],[\"端参数的转换\",{\"1\":{\"286\":2}}],[\"端将数据同步到\",{\"1\":{\"282\":1}}],[\"端口获取\",{\"1\":{\"644\":1}}],[\"端口随着主应用端口飘逸\",{\"1\":{\"617\":1}}],[\"端口池\",{\"1\":{\"577\":1}}],[\"端口映射\",{\"1\":{\"574\":1,\"577\":1}}],[\"端口映射下拉选择端口支持搜索\",{\"1\":{\"574\":1}}],[\"端口可用性\",{\"1\":{\"445\":1}}],[\"端口格式\",{\"1\":{\"228\":2}}],[\"端口时\",{\"1\":{\"110\":1}}],[\"端口的问题\",{\"1\":{\"316\":1}}],[\"端口的\",{\"1\":{\"108\":1}}],[\"端\",{\"1\":{\"92\":1,\"282\":2,\"286\":2}}],[\"根据业务代码自动生成相关的\",{\"1\":{\"609\":1}}],[\"根据依赖选择\",{\"1\":{\"411\":1}}],[\"根据差异\",{\"1\":{\"374\":1,\"389\":1}}],[\"根据泛化方式\",{\"1\":{\"294\":2}}],[\"根据body\",{\"1\":{\"289\":1}}],[\"根据ferference\",{\"1\":{\"289\":1}}],[\"根据metadata路径获取ferference\",{\"1\":{\"289\":1}}],[\"根据配置设置sentinel熔断规则\",{\"1\":{\"266\":1}}],[\"根据配置设置sentinel流控规则\",{\"1\":{\"266\":1}}],[\"根据配置的\",{\"1\":{\"208\":1}}],[\"根据具体请求再由\",{\"1\":{\"259\":1}}],[\"根据自定义的路径\",{\"1\":{\"257\":1}}],[\"根据状态码返回给前端不同的数据格式\",{\"1\":{\"237\":1}}],[\"根据规则的\",{\"1\":{\"235\":1}}],[\"根据对应的事件类型通过\",{\"1\":{\"200\":1}}],[\"根据加载类对象取出缓存中数据\",{\"1\":{\"176\":1}}],[\"根据子类的不同实现\",{\"1\":{\"164\":1}}],[\"根据数据的事件类型\",{\"1\":{\"162\":1}}],[\"根据数据变动事件类型\",{\"1\":{\"161\":1}}],[\"根据事件的类型\",{\"1\":{\"162\":1}}],[\"根据传入信息得到数据变更的事件类型\",{\"1\":{\"161\":1}}],[\"根据传入的数据类型枚举\",{\"1\":{\"148\":1}}],[\"根据发布事件的类型走不同的逻辑\",{\"1\":{\"157\":1}}],[\"根据这个算法的步骤\",{\"1\":{\"135\":1}}],[\"根据已知部分猜测\",{\"1\":{\"125\":1}}],[\"根据\",{\"1\":{\"123\":1,\"125\":1,\"126\":1,\"206\":1,\"227\":1}}],[\"根据创建的\",{\"1\":{\"92\":1}}],[\"根据后端请求\",{\"1\":{\"92\":1}}],[\"创客贴\",{\"0\":{\"818\":1,\"819\":1}}],[\"创建smsblend\",{\"1\":{\"773\":1}}],[\"创建一个空的名为\",{\"1\":{\"582\":1}}],[\"创建一个\",{\"1\":{\"428\":1}}],[\"创建客户端\",{\"1\":{\"324\":1}}],[\"创建时间\",{\"1\":{\"278\":1}}],[\"创建懒加载迭代器\",{\"1\":{\"167\":1}}],[\"创建\",{\"1\":{\"162\":1}}],[\"创建了一个定时的线程池\",{\"1\":{\"92\":1}}],[\"创始人巩超与开发者和伙伴朋友们交流当前主流指标监控方案\",{\"1\":{\"52\":1}}],[\"又拍云\",{\"1\":{\"808\":1}}],[\"又有哪些值得你关注或者学习的\",{\"0\":{\"791\":1}}],[\"又可以提升模块代码的内聚性\",{\"1\":{\"397\":1}}],[\"又可以快速的与\",{\"1\":{\"367\":1,\"382\":1}}],[\"又满足互联网应用开发建设\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"又称插件化架构\",{\"1\":{\"213\":1}}],[\"又做了什么事情\",{\"1\":{\"141\":1}}],[\"又要开始漫长的积蓄力量\",{\"1\":{\"135\":1}}],[\"又是怎么来的呢\",{\"1\":{\"130\":1}}],[\"又是怎么连接的\",{\"1\":{\"92\":1}}],[\"又使用拼音分词器和英文分词器的场景\",{\"1\":{\"47\":1}}],[\"后的长度去掉\",{\"1\":{\"723\":1}}],[\"后可以显示当前的\",{\"1\":{\"678\":1}}],[\"后需手动拼接到具体业务\",{\"1\":{\"608\":1}}],[\"后一级菜单路由参数设置无效问题\",{\"1\":{\"606\":1}}],[\"后存在非首页页签时不应该跳转首页\",{\"1\":{\"604\":1}}],[\"后端代码风格\",{\"1\":{\"608\":1}}],[\"后端项目结构\",{\"1\":{\"608\":1}}],[\"后端新特性\",{\"0\":{\"361\":1,\"375\":1,\"390\":1,\"398\":1}}],[\"后端\",{\"0\":{\"357\":1}}],[\"后来发现是整个设计有问题\",{\"1\":{\"720\":1}}],[\"后来一位作家叫薄伽丘将其命名为神圣的喜剧\",{\"1\":{\"352\":1}}],[\"后来在群友的帮助下定位到是\",{\"1\":{\"110\":1}}],[\"后转回个人名下\",{\"1\":{\"305\":1}}],[\"后缀邮箱\",{\"1\":{\"301\":1}}],[\"后期会单独开一篇具体讲解\",{\"1\":{\"234\":1}}],[\"后期跟踪\",{\"1\":{\"231\":1}}],[\"后关键事情都没干\",{\"1\":{\"167\":1}}],[\"后\",{\"1\":{\"157\":1,\"264\":1,\"808\":1}}],[\"后续客户端配置需要\",{\"1\":{\"584\":1}}],[\"后续为应用级权限控制\",{\"1\":{\"547\":1}}],[\"后续插件执行\",{\"1\":{\"273\":1}}],[\"后续碰到相关的\",{\"1\":{\"157\":1}}],[\"后续单写一篇文章分析\",{\"1\":{\"124\":1}}],[\"后半部分是发布了一个事件\",{\"1\":{\"153\":1}}],[\"后面自己又陆续写了\",{\"1\":{\"792\":1}}],[\"后面对\",{\"1\":{\"195\":1}}],[\"后面的是调用具体子类的\",{\"1\":{\"164\":1}}],[\"后面的流程与启动时的一致\",{\"1\":{\"149\":1}}],[\"后面也是补充些属性\",{\"1\":{\"136\":1}}],[\"后面分析\",{\"1\":{\"125\":1}}],[\"后面补上\",{\"1\":{\"124\":1}}],[\"后面就启动线程去判断\",{\"1\":{\"92\":1}}],[\"后台禁用该插件即可\",{\"1\":{\"789\":1}}],[\"后台禁用实时生效\",{\"1\":{\"577\":1}}],[\"后台控制界面\",{\"1\":{\"787\":1}}],[\"后台管理\",{\"1\":{\"783\":1,\"791\":1}}],[\"后台下拉选择\",{\"1\":{\"574\":1}}],[\"后台端口池管理支持批量删除\",{\"1\":{\"574\":1}}],[\"后台在插件管理页面打开\",{\"1\":{\"281\":1}}],[\"后台设置选择器规则\",{\"1\":{\"254\":1}}],[\"后台对应的\",{\"0\":{\"247\":1}}],[\"后台操作更改\",{\"1\":{\"206\":1}}],[\"后台操作的数据是怎么同步到\",{\"1\":{\"92\":1}}],[\"后台如何建立\",{\"0\":{\"160\":1}}],[\"后台接口\",{\"0\":{\"153\":1}}],[\"后台接住这个请求并\",{\"1\":{\"143\":1}}],[\"后台的数据\",{\"1\":{\"149\":1}}],[\"后台通过\",{\"1\":{\"145\":1}}],[\"后台通过这个\",{\"1\":{\"144\":1}}],[\"后台怎么获知是否数据更新\",{\"1\":{\"143\":1,\"145\":1}}],[\"后台数据初始化\",{\"1\":{\"141\":1}}],[\"后台模式切换完成\",{\"1\":{\"140\":1}}],[\"后台信息模式切换\",{\"1\":{\"140\":1}}],[\"后台与网关数据同步\",{\"0\":{\"139\":1,\"147\":1,\"159\":1},\"1\":{\"149\":1}}],[\"后台配置规则\",{\"1\":{\"92\":1}}],[\"后才能转移到组织\",{\"1\":{\"8\":1,\"299\":1}}],[\"删除线\",{\"1\":{\"825\":1}}],[\"删除字典无用状态字段\",{\"1\":{\"617\":1}}],[\"删除原有\",{\"1\":{\"615\":1}}],[\"删除历史sql文件\",{\"1\":{\"557\":1}}],[\"删除无用日志打印\",{\"1\":{\"340\":1}}],[\"删除数据\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"删除了\",{\"1\":{\"315\":1}}],[\"删除指定规则\",{\"1\":{\"266\":1}}],[\"删除与新配置同resourcename的配置\",{\"1\":{\"266\":2}}],[\"删除等管理\",{\"1\":{\"609\":2}}],[\"删除等\",{\"1\":{\"162\":1}}],[\"删除\",{\"1\":{\"92\":1,\"205\":1,\"206\":1,\"316\":1,\"368\":2,\"397\":4,\"567\":1,\"577\":1,\"609\":1,\"644\":2,\"722\":1,\"817\":2,\"823\":1}}],[\"增加达梦数据库支持\",{\"1\":{\"833\":1}}],[\"增加构造\",{\"1\":{\"723\":1}}],[\"增加系统属性\",{\"1\":{\"723\":1}}],[\"增加简捷度\",{\"1\":{\"694\":1}}],[\"增加颜色效果\",{\"1\":{\"644\":1}}],[\"增加为\",{\"1\":{\"624\":1}}],[\"增加新场景值\",{\"1\":{\"624\":1}}],[\"增加移动端样式适配\",{\"1\":{\"596\":1}}],[\"增加模组回撤统计与盈亏分布图\",{\"1\":{\"596\":1}}],[\"增加模组图表指标下载功能\",{\"1\":{\"596\":1}}],[\"增加年化收益率统计\",{\"1\":{\"596\":1}}],[\"增加对\",{\"1\":{\"574\":1,\"723\":1}}],[\"增加对业务自定义requestid传入的支持\",{\"1\":{\"476\":1}}],[\"增加前端打包镜像的dockerfile暴露8527\",{\"1\":{\"547\":1}}],[\"增加dockerfile\",{\"1\":{\"541\":1}}],[\"增加配置\",{\"1\":{\"541\":2}}],[\"增加一次性动态口令验证功能\",{\"1\":{\"535\":1}}],[\"增加官方微信支持\",{\"1\":{\"529\":1}}],[\"增加跳转引导配置inducer参数\",{\"1\":{\"529\":1}}],[\"增加redis存储规则的支持\",{\"1\":{\"509\":1}}],[\"增加了支持传入自定义的请求\",{\"1\":{\"474\":1}}],[\"增加了非常多的新的语法\",{\"1\":{\"469\":1}}],[\"增加在线文档地址展示\",{\"1\":{\"397\":1}}],[\"增加应用级功能做铺垫\",{\"1\":{\"395\":1,\"402\":1}}],[\"增加文件夹显示及查看功能\",{\"1\":{\"383\":1}}],[\"增加保留设置功能\",{\"1\":{\"383\":1}}],[\"增加版本控制设置功能\",{\"1\":{\"383\":1}}],[\"增加代码编译过程中\",{\"1\":{\"383\":1}}],[\"增加超简化反向代理\",{\"1\":{\"374\":1,\"389\":1}}],[\"增加匹配的\",{\"1\":{\"374\":1,\"389\":1}}],[\"增加客户端\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"增加自定义标题行行号\",{\"1\":{\"723\":1}}],[\"增加自定义\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"增加映射类型\",{\"1\":{\"314\":1}}],[\"增加规则\",{\"1\":{\"264\":1}}],[\"增加获取鉴权服务\",{\"0\":{\"191\":1}}],[\"增加\",{\"0\":{\"516\":1},\"1\":{\"92\":1,\"314\":1,\"315\":1,\"331\":1,\"338\":1,\"360\":1,\"397\":1,\"411\":2,\"557\":1,\"605\":4,\"618\":2,\"624\":1,\"637\":9,\"644\":9,\"722\":2,\"723\":13,\"724\":1,\"829\":2}}],[\"增强身份管理\",{\"0\":{\"549\":1,\"559\":1,\"569\":1}}],[\"增强了用户体验\",{\"1\":{\"460\":1}}],[\"增强了自定义注解组合\",{\"0\":{\"425\":1}}],[\"增强自定义注解组合\",{\"0\":{\"430\":1},\"1\":{\"429\":1}}],[\"增强线程池后\",{\"1\":{\"421\":1}}],[\"增强隔离性\",{\"1\":{\"342\":1}}],[\"增强型搜索\",{\"0\":{\"177\":1}}],[\"增强型\",{\"1\":{\"175\":1}}],[\"增强等等\",{\"1\":{\"90\":1}}],[\"增强是最值得关注的特性之一\",{\"1\":{\"88\":1}}],[\"增强和\",{\"1\":{\"88\":1,\"89\":1}}],[\"增强\",{\"0\":{\"314\":1},\"1\":{\"86\":1,\"87\":1,\"88\":2,\"89\":2,\"90\":5,\"468\":1,\"476\":1,\"492\":11,\"509\":3,\"522\":3,\"624\":1,\"787\":1}}],[\"状态是启用\",{\"1\":{\"92\":1}}],[\"传一个\",{\"1\":{\"783\":1}}],[\"传参数\",{\"1\":{\"783\":1}}],[\"传参类型不正确导致\",{\"1\":{\"619\":1}}],[\"传统的物联网设备调试方案往往存在一些问题\",{\"1\":{\"794\":1}}],[\"传统测试工具可能局限于接口级自动化\",{\"1\":{\"627\":1}}],[\"传统项目\",{\"1\":{\"321\":1}}],[\"传输\",{\"1\":{\"617\":1}}],[\"传输加密\",{\"0\":{\"611\":1}}],[\"传\",{\"1\":{\"608\":1}}],[\"传播并用于任何个人或商业行为\",{\"1\":{\"576\":1}}],[\"传递\",{\"1\":{\"779\":1}}],[\"传递的是所需的参数\",{\"1\":{\"251\":1}}],[\"传递的是\",{\"1\":{\"251\":1}}],[\"传递了一些参数\",{\"1\":{\"61\":1}}],[\"传到到各类订阅器\",{\"1\":{\"149\":1}}],[\"传给数据刷新工厂\",{\"1\":{\"148\":1}}],[\"传入\",{\"1\":{\"183\":1,\"474\":1,\"724\":1}}],[\"传入关键的接口\",{\"1\":{\"167\":1}}],[\"传入多个节点组成的集群\",{\"1\":{\"164\":1}}],[\"传入了\",{\"1\":{\"144\":1}}],[\"传入到分页相关的参数\",{\"1\":{\"92\":1}}],[\"页面增加右键菜单\",{\"1\":{\"833\":1}}],[\"页面编辑\",{\"0\":{\"823\":1}}],[\"页面模块\",{\"1\":{\"822\":1}}],[\"页面\",{\"1\":{\"644\":1}}],[\"页面配置邮件服务器\",{\"1\":{\"448\":1}}],[\"页面代码文件夹\",{\"1\":{\"397\":1}}],[\"页面操作\",{\"1\":{\"447\":1,\"452\":1,\"464\":1}}],[\"页面操作查找接口\",{\"0\":{\"152\":1}}],[\"页面操作之后把数据保存数据库\",{\"1\":{\"92\":1}}],[\"页面操作源码分析\",{\"1\":{\"92\":1}}],[\"页面显示加载的插件列表会对应后端的请求\",{\"1\":{\"92\":1}}],[\"移动\",{\"1\":{\"808\":1}}],[\"移动设备等\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"移动端和\",{\"1\":{\"91\":1}}],[\"移除原有短信功能\",{\"1\":{\"620\":1}}],[\"移除功能\",{\"0\":{\"620\":1}}],[\"移除存活服务散列表相应内容\",{\"1\":{\"227\":1}}],[\"移除管理的连接\",{\"1\":{\"144\":1}}],[\"移除\",{\"1\":{\"79\":2,\"83\":1,\"315\":1,\"604\":1,\"615\":1,\"620\":1,\"787\":1}}],[\"垃圾回收\",{\"1\":{\"90\":1}}],[\"垃圾回收器接口\",{\"1\":{\"90\":1}}],[\"垃圾回收器进行了增强\",{\"1\":{\"87\":1}}],[\"垃圾回收器进行了改进\",{\"1\":{\"82\":1,\"85\":1}}],[\"垃圾回收器是最值得关注的特性之一\",{\"1\":{\"83\":1,\"84\":1}}],[\"垃圾回收器改进\",{\"1\":{\"79\":1}}],[\"垃圾回收器增强\",{\"1\":{\"79\":2}}],[\"垃圾回收器\",{\"1\":{\"79\":1,\"83\":4,\"84\":2,\"90\":1}}],[\"垃圾回收器并行全阶段\",{\"1\":{\"79\":1,\"82\":1}}],[\"私有接口方法\",{\"1\":{\"90\":1}}],[\"此次版本采用里程碑方式发布\",{\"1\":{\"720\":1}}],[\"此次版本更新主要功能\",{\"0\":{\"342\":1}}],[\"此次我们也修复了这个问题\",{\"1\":{\"490\":1}}],[\"此次是\",{\"1\":{\"158\":1}}],[\"此策略核心思路是以固定间隔时间让请求通过\",{\"1\":{\"263\":1}}],[\"此场景和第一种场景有略微不同\",{\"1\":{\"262\":1}}],[\"此处仅为示例\",{\"1\":{\"773\":2}}],[\"此处意思为\",{\"1\":{\"741\":1}}],[\"此处为枚举形式\",{\"1\":{\"741\":1}}],[\"此处需要配置刚刚从管理后台复制的licensekey\",{\"1\":{\"585\":1}}],[\"此处对应页面的如下\",{\"1\":{\"234\":1}}],[\"此处共涉及到两个配置参数\",{\"1\":{\"226\":1}}],[\"此处默认\",{\"1\":{\"226\":1}}],[\"此处存疑\",{\"1\":{\"158\":1}}],[\"此类实现了\",{\"1\":{\"200\":1}}],[\"此类\",{\"1\":{\"200\":1}}],[\"此时就可以通过\",{\"1\":{\"430\":1}}],[\"此时就可以通过此功能来解决\",{\"1\":{\"47\":1}}],[\"此时使用自定义的\",{\"1\":{\"430\":1}}],[\"此时任务会从上一次保存的状态中恢复继续执行\",{\"1\":{\"406\":1}}],[\"此时\",{\"1\":{\"221\":1}}],[\"此时是\",{\"1\":{\"154\":1}}],[\"此时我们继续测试\",{\"1\":{\"118\":1}}],[\"此外\",{\"1\":{\"84\":1,\"727\":1}}],[\"响应迟延等\",{\"1\":{\"787\":1}}],[\"响应下拉框\",{\"1\":{\"694\":1}}],[\"响应未格式化\",{\"1\":{\"651\":1,\"660\":1}}],[\"响应式编程绝对是未来\",{\"1\":{\"791\":1}}],[\"响应式编程\",{\"1\":{\"287\":1}}],[\"响应式编程介绍\",{\"1\":{\"30\":1}}],[\"响应延迟增加\",{\"1\":{\"263\":1}}],[\"响应了\",{\"1\":{\"144\":1}}],[\"响应\",{\"1\":{\"83\":1}}],[\"即时生效的\",{\"1\":{\"790\":1}}],[\"即保证开源也得到了收益\",{\"1\":{\"456\":1}}],[\"即但丁\",{\"1\":{\"352\":1}}],[\"即如果我们的\",{\"1\":{\"266\":1}}],[\"即头\",{\"1\":{\"266\":1}}],[\"即每秒钟请求的数量超过某限额时进行流控\",{\"1\":{\"263\":1}}],[\"即每次找寻具体实现类都要迭代一遍才行\",{\"1\":{\"175\":1}}],[\"即globalplugin\",{\"1\":{\"231\":1}}],[\"即根据选择器和规则找到对应服务\",{\"1\":{\"219\":1}}],[\"即某种意义上的插件通信机制\",{\"1\":{\"217\":1}}],[\"即访问密钥\",{\"1\":{\"186\":1}}],[\"即将入参放入静态变量作为全局缓存\",{\"1\":{\"170\":1}}],[\"即会触发上面这些代码\",{\"1\":{\"170\":1}}],[\"即可解决\",{\"1\":{\"709\":1}}],[\"即可展示当前控制器中的所有\",{\"1\":{\"686\":1}}],[\"即可开始\",{\"1\":{\"457\":1,\"465\":1}}],[\"即可无缝集成和使用\",{\"1\":{\"370\":1,\"385\":1}}],[\"即可使用\",{\"1\":{\"368\":1}}],[\"即可实现接口鉴权以及权限的动态修改\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"即可避免多次反射\",{\"1\":{\"168\":1}}],[\"即可通过设置好的方式拿到所有定义的子类对象\",{\"1\":{\"165\":1}}],[\"即可查看大会门票\",{\"1\":{\"14\":1}}],[\"即变化的数据信息\",{\"1\":{\"148\":1}}],[\"即使多次后分数太低没被选上\",{\"1\":{\"135\":1}}],[\"即\",{\"1\":{\"135\":1,\"150\":1,\"269\":2,\"738\":1}}],[\"即在容器启动时\",{\"1\":{\"130\":1}}],[\"即应用级别的\",{\"1\":{\"82\":1}}],[\"效率更高\",{\"1\":{\"783\":1}}],[\"效率\",{\"1\":{\"82\":1,\"85\":1,\"87\":1}}],[\"例如searcheverywhere\",{\"1\":{\"680\":1}}],[\"例如多租户插件\",{\"1\":{\"608\":1}}],[\"例如当下游应用由于某种原因导致服务不稳定\",{\"1\":{\"263\":1}}],[\"例如人工智能\",{\"1\":{\"91\":1}}],[\"例如对垃圾回收器\",{\"1\":{\"88\":1,\"89\":1}}],[\"例如对垃圾回收器和\",{\"1\":{\"86\":1}}],[\"例如对预览功能的改进\",{\"1\":{\"85\":1,\"87\":1}}],[\"例如对\",{\"1\":{\"82\":1,\"83\":1,\"84\":1}}],[\"例如\",{\"1\":{\"82\":1,\"209\":1,\"359\":1,\"374\":1,\"379\":1,\"389\":1,\"394\":1,\"401\":1,\"608\":3,\"664\":1,\"811\":2,\"814\":1}}],[\"对设备与服务器之间的连接信息进行加密处理\",{\"1\":{\"803\":1}}],[\"对数字转换的问题\",{\"1\":{\"724\":1}}],[\"对数据进行校验\",{\"1\":{\"628\":1}}],[\"对老系统的改造提供了更好的兼容性\",{\"1\":{\"710\":1}}],[\"对各种\",{\"1\":{\"709\":1}}],[\"对现在流行\",{\"0\":{\"701\":1}}],[\"对图标进行了圆角处理\",{\"1\":{\"659\":1}}],[\"对插件进行了重大的重构\",{\"1\":{\"652\":1}}],[\"对自动化测试领域有兴趣\",{\"1\":{\"634\":1}}],[\"对接\",{\"1\":{\"615\":2}}],[\"对系统的缓存信息查询\",{\"1\":{\"609\":1}}],[\"对系统动态配置常用参数\",{\"1\":{\"609\":1}}],[\"对系统中经常使用的一些较为固定的数据进行维护\",{\"1\":{\"609\":1}}],[\"对存取数据期间自动加解密\",{\"1\":{\"608\":1}}],[\"对其扩展了实现支持了更多功能\",{\"1\":{\"608\":1}}],[\"对其有大概认知\",{\"0\":{\"241\":1}}],[\"对外端口统一管理\",{\"1\":{\"577\":1}}],[\"对用户全生命周期审计\",{\"1\":{\"554\":1,\"564\":1}}],[\"对项目内的规则文件的模糊匹配是早就支持的\",{\"1\":{\"520\":1}}],[\"对项目有什么想法或者建议\",{\"1\":{\"407\":1,\"587\":1}}],[\"对三种循环模式都予以了异步支持\",{\"1\":{\"505\":1}}],[\"对子流程的超时控制\",{\"1\":{\"504\":1}}],[\"对组件的超时控制\",{\"1\":{\"504\":1}}],[\"对任意表达式的控制\",{\"1\":{\"504\":1}}],[\"对声明式组件增加了组件名称的设定\",{\"0\":{\"486\":1}}],[\"对这个注解进行了很多的优化\",{\"1\":{\"485\":1}}],[\"对这个问题\",{\"1\":{\"485\":1}}],[\"对脚本和\",{\"0\":{\"485\":1}}],[\"对了这里再说下开源不等同于免费\",{\"1\":{\"456\":1}}],[\"对业务代码零侵入\",{\"1\":{\"409\":1,\"419\":1}}],[\"对照\",{\"1\":{\"374\":2,\"389\":2}}],[\"对所有错误进行标准化处理\",{\"1\":{\"374\":1,\"389\":1}}],[\"对请求参数\",{\"1\":{\"370\":1,\"385\":1}}],[\"对称加密\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"对工程生产代码进行容器化打包和部署\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"对基于\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"对生产模式下\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"对较多\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"对我非常有帮助\",{\"1\":{\"308\":1}}],[\"对比对象\",{\"1\":{\"628\":1}}],[\"对比\",{\"0\":{\"371\":1,\"386\":1},\"1\":{\"278\":1}}],[\"对调用的结果进行处理\",{\"1\":{\"231\":1}}],[\"对此特地对\",{\"1\":{\"231\":1}}],[\"对小白不是很友好\",{\"1\":{\"208\":1}}],[\"对获取的参数再次签名\",{\"1\":{\"195\":1}}],[\"对于开发者\",{\"1\":{\"783\":1}}],[\"对于用户\",{\"1\":{\"783\":1}}],[\"对于想要传值来构建不同实现类型的小伙伴来说\",{\"1\":{\"747\":1}}],[\"对于厂商的切换也只能依靠配置文件的改变\",{\"1\":{\"740\":1}}],[\"对于\",{\"1\":{\"709\":1}}],[\"对于多个\",{\"1\":{\"608\":1}}],[\"对于上面的\",{\"1\":{\"517\":1}}],[\"对于回滚流程的支持\",{\"1\":{\"509\":1}}],[\"对于导入导出格式\",{\"1\":{\"442\":1}}],[\"对于存储桶\",{\"1\":{\"374\":1,\"389\":1}}],[\"对于处理\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"对于后续社区发展方式\",{\"1\":{\"306\":1}}],[\"对于触发了流控或熔断的处理逻辑\",{\"1\":{\"266\":1}}],[\"对于单位统计时长\",{\"1\":{\"265\":1}}],[\"对于一定时间内\",{\"1\":{\"264\":1}}],[\"对于一个插件数据变动方法\",{\"1\":{\"141\":1}}],[\"对于服务是否不稳定这一点我们一般可以通过一下\",{\"1\":{\"264\":1}}],[\"对于超出阈值的请求也是触发拒绝\",{\"1\":{\"263\":1}}],[\"对于第三个问题\",{\"1\":{\"263\":1}}],[\"对于第二个问题阈值来说比较好理解\",{\"1\":{\"263\":1}}],[\"对于第一个问题\",{\"1\":{\"263\":1}}],[\"对于网关来说\",{\"1\":{\"263\":1}}],[\"对于管理的\",{\"1\":{\"172\":1}}],[\"对于目前的\",{\"1\":{\"157\":1}}],[\"对于经常写\",{\"1\":{\"122\":1}}],[\"对应平台的配置写在这里\",{\"1\":{\"811\":2}}],[\"对应的\",{\"1\":{\"585\":1}}],[\"对应的管理功能均会在标准的\",{\"1\":{\"374\":1,\"389\":1}}],[\"对应的属性上\",{\"1\":{\"289\":1}}],[\"对应的实际代码实现如下\",{\"1\":{\"149\":1}}],[\"对应页面数据如下\",{\"1\":{\"235\":2}}],[\"对应实现方法为\",{\"1\":{\"181\":1}}],[\"对应\",{\"1\":{\"126\":1,\"247\":1,\"266\":1}}],[\"对应一个\",{\"1\":{\"125\":1}}],[\"对\",{\"0\":{\"779\":1},\"1\":{\"87\":1,\"269\":1,\"313\":1,\"314\":1,\"315\":2,\"724\":1}}],[\"对嵌套访问控制的改进\",{\"1\":{\"85\":1}}],[\"对预览功能的改进\",{\"1\":{\"84\":1,\"86\":1,\"88\":1,\"89\":1}}],[\"对字符串\",{\"1\":{\"83\":1}}],[\"对时间\",{\"1\":{\"82\":1}}],[\"对象返回\",{\"1\":{\"750\":1}}],[\"对象化分页对象\",{\"1\":{\"608\":1}}],[\"对象属性为\",{\"1\":{\"606\":1}}],[\"对象绑定自定义的\",{\"1\":{\"431\":1}}],[\"对象或\",{\"1\":{\"431\":1}}],[\"对象参数结构复杂\",{\"1\":{\"374\":1,\"389\":1}}],[\"对象池\",{\"1\":{\"372\":1,\"387\":1}}],[\"对象存储服务\",{\"1\":{\"368\":1}}],[\"对象存储相关代码\",{\"1\":{\"368\":1}}],[\"对象如下所示\",{\"1\":{\"232\":1}}],[\"对象中又包含哪些属性呢\",{\"1\":{\"232\":1}}],[\"对象是整个插件链上的共享对象\",{\"1\":{\"232\":1}}],[\"对象封装插件\",{\"0\":{\"232\":1}}],[\"对象的管理只能通过\",{\"1\":{\"374\":1,\"389\":1}}],[\"对象的\",{\"1\":{\"183\":1}}],[\"对象也会返回同样的\",{\"1\":{\"176\":1}}],[\"对象缓存起来\",{\"1\":{\"176\":1}}],[\"对象并放入缓存\",{\"1\":{\"176\":1}}],[\"对象\",{\"1\":{\"81\":1,\"124\":1,\"126\":1,\"167\":3,\"168\":2,\"176\":1,\"179\":1,\"183\":1,\"220\":1,\"232\":2,\"233\":1,\"237\":1,\"431\":1,\"817\":1}}],[\"对开源团队也是有意义\",{\"1\":{\"57\":1}}],[\"语言构建\",{\"1\":{\"517\":1}}],[\"语言特性\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"语义扩展阶段\",{\"1\":{\"469\":1}}],[\"语句\",{\"1\":{\"489\":1,\"628\":1}}],[\"语句中使用嵌套模式和\",{\"1\":{\"89\":1}}],[\"语句进行模式匹配\",{\"1\":{\"88\":1}}],[\"语句块中手动关闭资源\",{\"1\":{\"81\":1}}],[\"语句块中使用\",{\"1\":{\"81\":1}}],[\"语法构造阶段\",{\"1\":{\"469\":1}}],[\"语法\",{\"0\":{\"516\":1},\"1\":{\"48\":1,\"516\":2,\"517\":1}}],[\"用来标识这是一个\",{\"1\":{\"709\":1}}],[\"用来监控运行时候的各种信息\",{\"1\":{\"707\":1}}],[\"用了它即可实时查看请求经过的每一处每一个节点\",{\"1\":{\"608\":1}}],[\"用途\",{\"1\":{\"374\":1,\"389\":1}}],[\"用途用法一目了然\",{\"1\":{\"370\":1,\"385\":1}}],[\"用用\",{\"1\":{\"308\":1}}],[\"用的方便\",{\"1\":{\"308\":1}}],[\"用作插件排序\",{\"1\":{\"219\":1}}],[\"用缓存的话\",{\"1\":{\"143\":1,\"145\":1}}],[\"用\",{\"1\":{\"92\":3,\"165\":1,\"503\":1,\"517\":1,\"671\":1}}],[\"用于后续从工厂取出邮件实现类用\",{\"1\":{\"774\":1}}],[\"用于发送固定模板短信使用\",{\"1\":{\"740\":1}}],[\"用于刷新数据库配置\",{\"1\":{\"727\":1}}],[\"用于约定此系统使用的\",{\"1\":{\"624\":1}}],[\"用于指定动态创建\",{\"1\":{\"624\":1}}],[\"用于确保\",{\"1\":{\"624\":1}}],[\"用于处理安装依赖与镜像问题\",{\"1\":{\"557\":1}}],[\"用于大数据服务的日志采集\",{\"1\":{\"338\":1}}],[\"用于兼容不同表的数据结构\",{\"1\":{\"328\":1}}],[\"用于甄别\",{\"1\":{\"183\":1}}],[\"用于定义各个插件的各个类型元数据更新\",{\"1\":{\"163\":1}}],[\"用于通知插件元数据变更\",{\"1\":{\"163\":1}}],[\"用于创建\",{\"1\":{\"81\":1}}],[\"用于构建和组装模块化应用程序\",{\"1\":{\"81\":1}}],[\"用户之前的接口完全是零侵入\",{\"1\":{\"783\":1}}],[\"用户完全不用关心\",{\"1\":{\"783\":1}}],[\"用户再也不用担心像\",{\"1\":{\"717\":1}}],[\"用户进行支持\",{\"1\":{\"710\":2}}],[\"用户使用的更改\",{\"0\":{\"779\":1}}],[\"用户使用或者升级不用关心\",{\"1\":{\"709\":1}}],[\"用户使用与升级指南\",{\"0\":{\"709\":1}}],[\"用户首先需要在项目resouce文件下新建一个名称为hmily\",{\"1\":{\"709\":1}}],[\"用户依赖的方式没有更改\",{\"1\":{\"709\":1}}],[\"用户来说\",{\"1\":{\"709\":1}}],[\"用户案例\",{\"0\":{\"641\":1,\"648\":1}}],[\"用户篡改管理员角色标识符越权问题\",{\"1\":{\"619\":1}}],[\"用户的管理配置\",{\"1\":{\"609\":1}}],[\"用户管理\",{\"1\":{\"609\":1,\"617\":1}}],[\"用户密码更新无效问题\",{\"1\":{\"606\":1}}],[\"用户更改角色\",{\"1\":{\"604\":1}}],[\"用户支持模糊搜索\",{\"1\":{\"574\":1}}],[\"用户组显示bug修复\",{\"1\":{\"567\":1}}],[\"用户组成员\",{\"1\":{\"547\":1}}],[\"用户组\",{\"1\":{\"547\":1,\"557\":1}}],[\"用户自定义凭证类型前后端不统一修复\",{\"1\":{\"529\":1}}],[\"用户都是协作对象\",{\"1\":{\"456\":1}}],[\"用户信任\",{\"1\":{\"456\":1}}],[\"用户流量\",{\"1\":{\"456\":1}}],[\"用户只需要定义一个新的监控模版\",{\"1\":{\"442\":1}}],[\"用户只需在浏览器配置\",{\"1\":{\"53\":1}}],[\"用户登录后\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"用户名\",{\"1\":{\"333\":1}}],[\"用户业务系统接入\",{\"1\":{\"150\":1}}],[\"用户接入\",{\"1\":{\"121\":1,\"127\":1,\"150\":1}}],[\"用户\",{\"0\":{\"74\":1,\"75\":1,\"76\":1},\"1\":{\"77\":3,\"547\":1,\"577\":1,\"783\":1}}],[\"用户在云商店部署只收取本来的云服务器费用\",{\"1\":{\"57\":1}}],[\"用户可以定制化的来定义返回结果\",{\"1\":{\"783\":1}}],[\"用户可以把快速的把自己的项目接入到\",{\"1\":{\"783\":1}}],[\"用户可以看指标的中英文名称啦\",{\"1\":{\"461\":1}}],[\"用户可以使用\",{\"1\":{\"442\":1}}],[\"用户可以自由选择喜欢的时序数据库来存储\",{\"1\":{\"442\":1}}],[\"用户可以根据自己的喜好选择\",{\"1\":{\"261\":1}}],[\"用户可以根据自行的情况进行配置\",{\"1\":{\"66\":1}}],[\"用户可以导入这些模版来支持对应类型的监控\",{\"1\":{\"55\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"用户可以在页面新增自定义的监控模版\",{\"1\":{\"54\":1}}],[\"用户通过配置\",{\"1\":{\"54\":1}}],[\"它保护设备数据的安全性\",{\"1\":{\"803\":1}}],[\"它支持多种通信协议和网络传输方式\",{\"1\":{\"803\":1}}],[\"它采用可靠的传输协议\",{\"1\":{\"803\":1}}],[\"它实现了连接信息的加密\",{\"1\":{\"803\":1}}],[\"它负责设备与服务器之间的通信和数据传输\",{\"1\":{\"803\":1}}],[\"它会有什么问题呢\",{\"1\":{\"791\":1}}],[\"它有一个漂亮的界面来完成请求\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"它有四个配置项\",{\"1\":{\"265\":1}}],[\"它同样属于团队成员\",{\"1\":{\"469\":1}}],[\"它同样是做了两件\",{\"1\":{\"177\":1}}],[\"它能够将\",{\"1\":{\"426\":1}}],[\"它除了具备常规的任务调度功能外\",{\"1\":{\"405\":1}}],[\"它们各有不同用途\",{\"1\":{\"178\":1}}],[\"它们的主要作用刚刚也提到了\",{\"1\":{\"131\":1}}],[\"它还做了一件我最期待的改造\",{\"1\":{\"177\":1}}],[\"它也定义了\",{\"1\":{\"176\":1}}],[\"它也重写了\",{\"1\":{\"142\":1}}],[\"它仅负责遍历并取出可用的\",{\"1\":{\"172\":1}}],[\"它与启动里最不同的点是\",{\"1\":{\"149\":1}}],[\"它可以和表达式互相切换\",{\"1\":{\"448\":1}}],[\"它可以非常方便地进行代码测试和调试\",{\"1\":{\"81\":1}}],[\"它可不仅仅只会在数据变动时告知我们信息\",{\"1\":{\"145\":1}}],[\"它是一个强大的\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"它是一个轻量级的容错库\",{\"1\":{\"269\":1}}],[\"它是一种低暂停时间的垃圾回收器\",{\"1\":{\"84\":1}}],[\"它是一种无操作的垃圾回收器\",{\"1\":{\"83\":1}}],[\"它是一种可伸缩且低延迟的垃圾回收器\",{\"1\":{\"83\":1}}],[\"它是我们搜索接口的具体实现类时最先接触到的\",{\"1\":{\"179\":1}}],[\"它是\",{\"1\":{\"144\":1,\"162\":1}}],[\"它自己重写了\",{\"1\":{\"142\":1}}],[\"它提供了众多不同数据类型变动的方法\",{\"1\":{\"141\":1}}],[\"它直接实现了\",{\"1\":{\"136\":1}}],[\"它的\",{\"1\":{\"179\":1}}],[\"它的懒加载具体实现在如下代码\",{\"1\":{\"167\":1}}],[\"它的作用很容易分析\",{\"1\":{\"164\":1}}],[\"它的实现类在各个可插拔插件包\",{\"1\":{\"162\":1}}],[\"它的唯一子类\",{\"1\":{\"130\":1}}],[\"它的背后一定存在多条业务线的分布式微服务集群\",{\"1\":{\"113\":1}}],[\"它的主要特性如下\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"它用\",{\"1\":{\"92\":1}}],[\"它将根据请求参数匹配规则\",{\"1\":{\"223\":1}}],[\"它将\",{\"1\":{\"81\":1}}],[\"它引入了多项新特性\",{\"1\":{\"81\":1}}],[\"引用\",{\"1\":{\"709\":1}}],[\"引言\",{\"0\":{\"213\":1}}],[\"引入本项目\",{\"1\":{\"814\":2}}],[\"引入以下依赖\",{\"1\":{\"789\":1}}],[\"引入如下\",{\"1\":{\"788\":1}}],[\"引入时间轮重构任务超时\",{\"1\":{\"411\":1}}],[\"引入\",{\"1\":{\"409\":1,\"411\":1,\"419\":1,\"814\":1}}],[\"引入过多杂音\",{\"1\":{\"367\":1,\"382\":1}}],[\"引入sentinel官方的transformer\",{\"1\":{\"266\":1}}],[\"引入了\",{\"1\":{\"90\":7}}],[\"引入了局部变量类型推断\",{\"1\":{\"90\":1}}],[\"引入了模块化系统\",{\"1\":{\"90\":1}}],[\"引入了一些新的\",{\"1\":{\"81\":1}}],[\"引入的一个模块化系统\",{\"1\":{\"81\":1}}],[\"引擎\",{\"1\":{\"15\":1,\"79\":1}}],[\"于2022年7月毕业成为apache顶级项目\",{\"1\":{\"311\":1}}],[\"于\",{\"1\":{\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"330\":1}}],[\"平安云\",{\"1\":{\"808\":1}}],[\"平分天下哦\",{\"1\":{\"746\":1}}],[\"平台简介\",{\"0\":{\"607\":1}}],[\"平台提供了灵活通用的历史回放功能来实现策略回测\",{\"1\":{\"591\":1}}],[\"平台\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"639\":4,\"646\":4}}],[\"平台架构使用微服务领域及周边相关的各类新兴技术或主流技术进行建设\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"平台定位\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"平台托管且\",{\"1\":{\"299\":1}}],[\"平台的一个重大版本\",{\"1\":{\"81\":1}}],[\"平均可节省\",{\"1\":{\"46\":1}}],[\"类开始进入插件链调用\",{\"1\":{\"287\":1}}],[\"类实现了\",{\"1\":{\"234\":1}}],[\"类相关引用\",{\"1\":{\"231\":1}}],[\"类我们已经有了一定的理解\",{\"1\":{\"231\":1}}],[\"类结构如下\",{\"1\":{\"220\":1}}],[\"类插件完成\",{\"1\":{\"219\":1}}],[\"类关系图\",{\"1\":{\"210\":1}}],[\"类继承关系\",{\"1\":{\"209\":1}}],[\"类路径\",{\"1\":{\"183\":1}}],[\"类对象与对象实例\",{\"1\":{\"181\":1}}],[\"类对象\",{\"1\":{\"180\":1,\"183\":4}}],[\"类中增加国密\",{\"1\":{\"605\":1}}],[\"类中会向容器注入\",{\"1\":{\"210\":1}}],[\"类中\",{\"1\":{\"149\":1}}],[\"类中去了\",{\"1\":{\"92\":1}}],[\"类似jpa实体定义\",{\"1\":{\"547\":1}}],[\"类似于断言\",{\"1\":{\"628\":1}}],[\"类似于这样\",{\"1\":{\"517\":1}}],[\"类似于心跳的作用\",{\"1\":{\"92\":1}}],[\"类似下面示例\",{\"1\":{\"130\":1}}],[\"类型解析\",{\"1\":{\"675\":1}}],[\"类型定义文件\",{\"1\":{\"822\":1}}],[\"类型定义以及\",{\"1\":{\"373\":1,\"388\":1}}],[\"类型定义等各方面内容\",{\"1\":{\"370\":1,\"385\":1}}],[\"类型的服务接口\",{\"1\":{\"278\":1}}],[\"类型的任务\",{\"1\":{\"144\":1}}],[\"类型的\",{\"1\":{\"130\":1,\"156\":1}}],[\"类型的完整性\",{\"1\":{\"79\":1}}],[\"类型\",{\"1\":{\"114\":1,\"328\":1}}],[\"类打断点调试\",{\"1\":{\"92\":1}}],[\"类里面相对应的方法\",{\"1\":{\"92\":1}}],[\"类里来了\",{\"1\":{\"92\":1}}],[\"类的问题到这还没解决\",{\"1\":{\"92\":1}}],[\"类的方法\",{\"1\":{\"92\":1}}],[\"类的\",{\"1\":{\"92\":1,\"129\":1,\"200\":1,\"287\":1}}],[\"类\",{\"1\":{\"92\":1,\"162\":1,\"206\":1,\"231\":1,\"234\":1}}],[\"类元数据\",{\"1\":{\"82\":1}}],[\"类和接口\",{\"1\":{\"79\":1}}],[\"类数据共享\",{\"1\":{\"79\":1,\"82\":2}}],[\"位置\",{\"1\":{\"824\":1}}],[\"位于org\",{\"1\":{\"749\":1}}],[\"位\",{\"1\":{\"514\":1}}],[\"位新成员加入团队\",{\"1\":{\"514\":1}}],[\"位小伙伴们的辛苦贡献才出来了这个令人欣喜的版本\",{\"1\":{\"448\":1}}],[\"位小伙伴们的贡献迭代更新\",{\"1\":{\"442\":1}}],[\"位小伙伴的贡献\",{\"0\":{\"440\":1}}],[\"位小伙伴给\",{\"1\":{\"56\":1}}],[\"位操作符增强\",{\"1\":{\"79\":1}}],[\"记录\",{\"1\":{\"584\":1}}],[\"记录日志空指针异常问题修复\",{\"1\":{\"574\":1}}],[\"记录到\",{\"1\":{\"325\":1}}],[\"记录的是上一次调用完成后剩余的令牌数量\",{\"1\":{\"250\":1}}],[\"记录的是上一次调用的时间戳\",{\"1\":{\"250\":1}}],[\"记录存活的服务\",{\"1\":{\"227\":1}}],[\"记录类型\",{\"1\":{\"79\":1}}],[\"记住\",{\"1\":{\"61\":1}}],[\"表注释\",{\"1\":{\"604\":1}}],[\"表哥加油\",{\"1\":{\"308\":1}}],[\"表结构如下\",{\"1\":{\"278\":1}}],[\"表示我们会一直坚持\",{\"1\":{\"501\":1}}],[\"表示支持\",{\"1\":{\"308\":1}}],[\"表示超时熔断生效\",{\"1\":{\"272\":1}}],[\"表示\",{\"1\":{\"265\":1,\"283\":1}}],[\"表示不检测\",{\"1\":{\"226\":1}}],[\"表示前面一个值去匹配后面的正则表达式\",{\"1\":{\"114\":1}}],[\"表明来源\",{\"1\":{\"144\":1}}],[\"表数据\",{\"1\":{\"127\":2,\"406\":1}}],[\"表中插入数据\",{\"1\":{\"126\":1}}],[\"表中插入了数据\",{\"1\":{\"124\":1}}],[\"表里捞数据\",{\"1\":{\"126\":1}}],[\"表达式从请求头参数等条件切换数据源\",{\"1\":{\"608\":1}}],[\"表达式还是需要你自己以字符串的方式填入\",{\"1\":{\"517\":1}}],[\"表达式的动态组装\",{\"0\":{\"517\":1},\"1\":{\"517\":1}}],[\"表达式流程\",{\"1\":{\"469\":1}}],[\"表达式进行了增强\",{\"1\":{\"85\":1,\"86\":1}}],[\"表达式和\",{\"1\":{\"84\":1}}],[\"表达式也支持返回值\",{\"1\":{\"84\":1}}],[\"表达式风格来简化代码\",{\"1\":{\"84\":1}}],[\"表达式增强是最值得关注的特性之一\",{\"1\":{\"85\":1}}],[\"表达式增强\",{\"1\":{\"79\":2,\"85\":1,\"86\":1,\"90\":2}}],[\"表达式\",{\"1\":{\"79\":1,\"84\":2,\"85\":1,\"90\":1,\"269\":1,\"483\":1,\"504\":1,\"517\":1,\"604\":1,\"791\":1}}],[\"表现为\",{\"1\":{\"64\":1}}],[\"局部变量类型推断\",{\"1\":{\"79\":1,\"82\":1}}],[\"短期支持版\",{\"1\":{\"79\":6}}],[\"短信实例\",{\"1\":{\"773\":1}}],[\"短信重试\",{\"0\":{\"767\":1,\"768\":1}}],[\"短信限制功能的拦截一直过度依赖于\",{\"1\":{\"750\":1}}],[\"短信负载均衡\",{\"1\":{\"748\":1}}],[\"短信签名\",{\"1\":{\"740\":2}}],[\"短信工具包\",{\"1\":{\"615\":1}}],[\"短信认证\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"短信\",{\"1\":{\"53\":1,\"449\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":1,\"761\":1}}],[\"模型在线显示\",{\"1\":{\"829\":1}}],[\"模型```\",{\"1\":{\"802\":1}}],[\"模组的分配金额没有更新\",{\"1\":{\"598\":1}}],[\"模组修改分配资金并保存\",{\"1\":{\"598\":1}}],[\"模组策略选择框无正确显示的问题\",{\"1\":{\"598\":1}}],[\"模组平仓时\",{\"1\":{\"598\":1}}],[\"模组列表自动刷新\",{\"1\":{\"597\":1}}],[\"模拟盘在很多的交易平台上都是个要收费的功能\",{\"1\":{\"592\":1}}],[\"模式还提供了更加直观和灵活的配置方式\",{\"1\":{\"727\":1}}],[\"模式下\",{\"1\":{\"713\":1}}],[\"模式下无法更新\",{\"1\":{\"316\":1}}],[\"模式的核心实现\",{\"1\":{\"713\":2}}],[\"模式三校验签名方法更改\",{\"1\":{\"624\":1}}],[\"模式三秘钥配置更改\",{\"1\":{\"624\":1}}],[\"模式三中\",{\"1\":{\"624\":1}}],[\"模式对前端工程进行重构\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"模式和传统\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"模式支持\",{\"1\":{\"357\":1,\"722\":1}}],[\"模式\",{\"1\":{\"142\":2,\"357\":3,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"624\":1,\"710\":1,\"713\":2,\"716\":2,\"718\":1,\"722\":1,\"727\":2}}],[\"模糊匹配\",{\"1\":{\"114\":1}}],[\"模块增加节流\",{\"1\":{\"834\":1}}],[\"模块全局滚动条美化\",{\"1\":{\"834\":1}}],[\"模块有\",{\"1\":{\"791\":1}}],[\"模块划分\",{\"1\":{\"713\":1}}],[\"模块文档\",{\"1\":{\"624\":1}}],[\"模块相互注入耦合严重难以扩展\",{\"1\":{\"608\":1}}],[\"模块相当于核心系统\",{\"1\":{\"217\":1}}],[\"模块引入\",{\"1\":{\"420\":1}}],[\"模块下所有代码模块\",{\"1\":{\"397\":1}}],[\"模块下的\",{\"1\":{\"122\":1}}],[\"模块添加测试用例\",{\"1\":{\"314\":1}}],[\"模块的\",{\"1\":{\"217\":1}}],[\"模块来演示\",{\"1\":{\"116\":1}}],[\"模块\",{\"0\":{\"100\":1,\"101\":1},\"1\":{\"79\":1,\"83\":2,\"116\":1,\"315\":2,\"411\":1,\"637\":9,\"707\":3,\"709\":1,\"822\":1,\"833\":1}}],[\"模块化系统还提供了一些新的工具和命令\",{\"1\":{\"81\":1}}],[\"模块化系统\",{\"1\":{\"79\":1,\"81\":1}}],[\"模板邮件\",{\"1\":{\"774\":1}}],[\"模板发送邮件\",{\"1\":{\"774\":1}}],[\"模板变量\",{\"1\":{\"740\":1}}],[\"模板id\",{\"1\":{\"740\":2,\"772\":1}}],[\"模板\",{\"1\":{\"57\":1,\"820\":1}}],[\"软件发布阶段\",{\"0\":{\"630\":1}}],[\"软件发布生命周期的\",{\"1\":{\"79\":1}}],[\"软件通常被称为\",{\"1\":{\"79\":1}}],[\"软件基金会的官方全球系列大会\",{\"1\":{\"11\":1}}],[\"软件基金会\",{\"1\":{\"11\":1}}],[\"指数级提高可监控数量与采集性能\",{\"1\":{\"454\":1}}],[\"指标\",{\"1\":{\"442\":1}}],[\"指标和\",{\"1\":{\"442\":1}}],[\"指标信息通过\",{\"1\":{\"54\":1}}],[\"指定自己的\",{\"0\":{\"582\":1}}],[\"指定版本安装\",{\"1\":{\"580\":1}}],[\"指定\",{\"1\":{\"327\":1,\"709\":1}}],[\"指定和修改规则\",{\"1\":{\"306\":1}}],[\"指出\",{\"1\":{\"305\":1}}],[\"指代代理所有的接口\",{\"1\":{\"234\":1}}],[\"指继承它的子类来自与各个可插播插件\",{\"1\":{\"163\":1}}],[\"指元数据的类型为插件类\",{\"1\":{\"163\":1}}],[\"指在软件项目进行正式测试之前执行的所有活动\",{\"1\":{\"79\":1}}],[\"纵观发展\",{\"0\":{\"79\":1}}],[\"痛苦并快乐着\",{\"1\":{\"78\":1}}],[\"注释\",{\"1\":{\"608\":1}}],[\"注释类上可以看到相关注释\",{\"1\":{\"174\":1}}],[\"注入实列\",{\"1\":{\"816\":1}}],[\"注入提示找不到\",{\"1\":{\"383\":1}}],[\"注入\",{\"1\":{\"259\":1}}],[\"注入nacos配置服务\",{\"1\":{\"210\":1}}],[\"注入nacos客户端配置服务\",{\"1\":{\"210\":1}}],[\"注入nacos数据同步服务\",{\"1\":{\"210\":1}}],[\"注入各类型订阅器到\",{\"1\":{\"148\":1}}],[\"注入请求类型和url\",{\"1\":{\"136\":1}}],[\"注册元数据错误\",{\"1\":{\"316\":1}}],[\"注册成默认处理\",{\"1\":{\"259\":1}}],[\"注册\",{\"1\":{\"173\":1,\"200\":1}}],[\"注册到变量中\",{\"1\":{\"170\":1}}],[\"注册自己的插件成为\",{\"1\":{\"130\":1}}],[\"注册规则\",{\"1\":{\"126\":1}}],[\"注册这个规则\",{\"1\":{\"126\":1}}],[\"注册入口\",{\"0\":{\"121\":1}}],[\"注册的客户端端口还是\",{\"1\":{\"110\":1}}],[\"注解实现\",{\"1\":{\"802\":1}}],[\"注解方式的使用的变更\",{\"1\":{\"709\":1}}],[\"注解问题\",{\"1\":{\"619\":1}}],[\"注解支持国际化\",{\"1\":{\"608\":1}}],[\"注解+aop\",{\"1\":{\"608\":1}}],[\"注解定义的降级组件中去\",{\"1\":{\"519\":1}}],[\"注解的数组参数无法正常解析为\",{\"1\":{\"438\":1}}],[\"注解的\",{\"1\":{\"430\":2}}],[\"注解的类生效\",{\"1\":{\"200\":1}}],[\"注解才能解析注解中定义的属性\",{\"1\":{\"430\":1}}],[\"注解即可\",{\"1\":{\"409\":1,\"419\":1}}],[\"注解所在模块\",{\"1\":{\"383\":1}}],[\"注解详细说明各参数用途可使用\",{\"1\":{\"374\":1,\"389\":1}}],[\"注解权限与\",{\"1\":{\"357\":1}}],[\"注解\",{\"1\":{\"77\":1,\"103\":1,\"158\":1,\"183\":2,\"200\":1,\"282\":1,\"316\":1,\"327\":1,\"328\":1,\"430\":1,\"438\":2,\"608\":4,\"619\":1,\"709\":2}}],[\"注意缩进要对齐\",{\"1\":{\"811\":2}}],[\"注意由于\",{\"1\":{\"653\":1}}],[\"注意此处需要填写\",{\"1\":{\"243\":1}}],[\"注意此处的插件列表经过了一次重排\",{\"1\":{\"220\":1}}],[\"注意\",{\"1\":{\"116\":1,\"118\":1,\"224\":1,\"814\":1}}],[\"注意在是发起方的时候\",{\"1\":{\"64\":1}}],[\"注意是\",{\"1\":{\"64\":1}}],[\"注意状态是\",{\"1\":{\"64\":1}}],[\"那怎么办\",{\"1\":{\"792\":1}}],[\"那我把他们拆处理\",{\"1\":{\"791\":1}}],[\"那有些插件我不想用了怎么办\",{\"1\":{\"789\":1}}],[\"那样去写反向的\",{\"1\":{\"717\":1}}],[\"那其实\",{\"1\":{\"489\":1}}],[\"那还不如放个安装包给别人免费使用下载就好\",{\"1\":{\"456\":1}}],[\"那回到正题\",{\"1\":{\"456\":1}}],[\"那更是烦上加烦\",{\"1\":{\"431\":1}}],[\"那会\",{\"1\":{\"308\":1}}],[\"那最终我们的信息获取肯定也少不了分析这个\",{\"1\":{\"144\":1}}],[\"那些用于更新的数据放哪里\",{\"1\":{\"143\":1,\"145\":1}}],[\"那这个对应的实现到底做了哪些事呢\",{\"1\":{\"247\":1}}],[\"那这个参数在哪封装的呢\",{\"1\":{\"235\":1}}],[\"那这个插件的执行顺序是在哪定义的呢\",{\"1\":{\"231\":1}}],[\"那这个就更容易了\",{\"0\":{\"77\":1}}],[\"那这里涉及到三个点\",{\"1\":{\"143\":1}}],[\"那\",{\"1\":{\"141\":1,\"142\":1,\"231\":1,\"232\":1}}],[\"那就把监听器里的代码打上断点\",{\"1\":{\"92\":1}}],[\"那就得有\",{\"1\":{\"92\":1}}],[\"那就是基于事件的\",{\"1\":{\"92\":1}}],[\"那么你应该引入如下\",{\"1\":{\"789\":2}}],[\"那么你要怎么解决这个问题呢\",{\"1\":{\"783\":1}}],[\"那么你在组件中自己打出的日志也会带有请求\",{\"1\":{\"474\":1}}],[\"那么就大大的可行了\",{\"1\":{\"783\":1}}],[\"那么就需要在实体类上使用一个\",{\"1\":{\"200\":1}}],[\"那么注定它就是跨语言的\",{\"1\":{\"783\":1}}],[\"那么对于拥有复杂链路的业务系统\",{\"1\":{\"518\":1}}],[\"那么对于定位问题来说\",{\"1\":{\"474\":1}}],[\"那么对应下一开始的思考\",{\"1\":{\"145\":1}}],[\"那么信息就会存储到\",{\"1\":{\"278\":1}}],[\"那么该服务才不会再收到任何请求\",{\"1\":{\"266\":1}}],[\"那么实际后向服务需要处理的\",{\"1\":{\"266\":1}}],[\"那么在什么场景下\",{\"1\":{\"791\":1}}],[\"那么在做流控时\",{\"1\":{\"266\":1}}],[\"那么在ioc容器中是获取不到properties\",{\"1\":{\"200\":1}}],[\"那么流控效果只能是\",{\"1\":{\"266\":1}}],[\"那么即使达到阈值也不会触发熔断\",{\"1\":{\"265\":1}}],[\"那么abstractsoulplugin又做了哪些扩展呢\",{\"1\":{\"234\":1}}],[\"那么我们来看看\",{\"1\":{\"783\":1}}],[\"那么我们还有个在\",{\"1\":{\"173\":1}}],[\"那么我们的\",{\"1\":{\"142\":1}}],[\"那么初始化实现类后又有什么作用呢\",{\"1\":{\"170\":1}}],[\"那么它的使用场景在哪呢\",{\"1\":{\"168\":1}}],[\"那么之前我们在测试时的方式为什么会产生不同对象实例呢\",{\"1\":{\"167\":1}}],[\"那么网关不延迟就会与后台产生大量无用的\",{\"1\":{\"149\":1}}],[\"那么这里肯定有新旧数据比对之类的东西了\",{\"1\":{\"145\":1}}],[\"那么问题来了\",{\"1\":{\"92\":1,\"156\":1}}],[\"那么引入\",{\"1\":{\"77\":3}}],[\"那么\",{\"0\":{\"68\":1},\"1\":{\"130\":1,\"170\":1,\"175\":1,\"266\":1,\"474\":1}}],[\"那么很极端情况下\",{\"0\":{\"64\":1}}],[\"具备可靠性保证机制\",{\"1\":{\"803\":1}}],[\"具备团队合作精神\",{\"1\":{\"634\":1}}],[\"具备前端开发经验\",{\"1\":{\"634\":1}}],[\"具备服务发现\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"具体用法请参考\",{\"1\":{\"520\":1,\"521\":1}}],[\"具体用法请参考高级特定\",{\"1\":{\"519\":1}}],[\"具体使用方式请参考高级特性\",{\"1\":{\"518\":1}}],[\"具体使用方式请参考用代码构造规则\",{\"1\":{\"517\":1}}],[\"具体使用方式请参考el规则的写法\",{\"1\":{\"516\":1}}],[\"具体使用方式请参考规则文件\",{\"1\":{\"515\":1}}],[\"具体使用请查看\",{\"1\":{\"313\":4,\"314\":3,\"315\":1}}],[\"具体选用哪种模式\",{\"1\":{\"503\":1}}],[\"具体问题需要自己摸索对应\",{\"1\":{\"374\":1,\"389\":1}}],[\"具体差异说明\",{\"0\":{\"374\":1,\"389\":1}}],[\"具体配置如下\",{\"1\":{\"314\":1}}],[\"具体配置如下图\",{\"1\":{\"258\":1}}],[\"具体\",{\"1\":{\"313\":12,\"314\":43,\"315\":53,\"316\":55}}],[\"具体核心代码如下\",{\"1\":{\"259\":1}}],[\"具体的参考\",{\"1\":{\"789\":1}}],[\"具体的要看\",{\"1\":{\"783\":1}}],[\"具体的可以查看官方文档或者\",{\"1\":{\"741\":1}}],[\"具体的限流策略在\",{\"1\":{\"266\":1}}],[\"具体的方法为ratelimiterplugindatahandler\",{\"1\":{\"247\":1}}],[\"具体的负载均衡策略在规则中指定\",{\"1\":{\"223\":1}}],[\"具体的插件类所在项目\",{\"1\":{\"131\":1}}],[\"具体方法在\",{\"1\":{\"180\":1}}],[\"具体请求路径\",{\"1\":{\"148\":1}}],[\"具体每个步骤的工作细节可以由子类自己实现\",{\"1\":{\"141\":1}}],[\"具体实现\",{\"1\":{\"131\":1}}],[\"具体分析下\",{\"1\":{\"129\":1}}],[\"具体可以参考这个类\",{\"1\":{\"74\":1}}],[\"具有附件\",{\"1\":{\"831\":1}}],[\"具有以下特性\",{\"1\":{\"409\":1}}],[\"具有编译依赖性\",{\"1\":{\"269\":1}}],[\"具有广泛的应用和发展前景\",{\"1\":{\"91\":1}}],[\"具有更自由化的阈值规则\",{\"1\":{\"53\":1}}],[\"到底有多方便\",{\"0\":{\"783\":1}}],[\"到我们之中\",{\"1\":{\"764\":1}}],[\"到哪出了问题而烦恼吗\",{\"1\":{\"608\":1}}],[\"到移动应用全面覆盖\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"到完整项目任你选择\",{\"1\":{\"373\":1,\"388\":1}}],[\"到配置文件中找到如下配置\",{\"1\":{\"156\":1}}],[\"到这个节骨眼\",{\"1\":{\"142\":1}}],[\"到这里我产生一个疑问\",{\"1\":{\"166\":1}}],[\"到这里就真相大白了\",{\"1\":{\"156\":1}}],[\"到这里\",{\"1\":{\"127\":2,\"145\":1,\"158\":1}}],[\"到这里终于把\",{\"1\":{\"125\":1}}],[\"到数据库里肯定查不到\",{\"1\":{\"124\":1}}],[\"到数据库里查询\",{\"1\":{\"123\":1,\"125\":1}}],[\"到用到的时候再去具体分析里面的源码\",{\"1\":{\"92\":1}}],[\"到此为止我们明白了\",{\"1\":{\"259\":1}}],[\"到此为止\",{\"1\":{\"237\":1}}],[\"到此\",{\"1\":{\"92\":1}}],[\"到\",{\"1\":{\"78\":1,\"90\":1,\"126\":1,\"200\":1,\"208\":1,\"217\":1,\"420\":1}}],[\"到自己的私服\",{\"1\":{\"73\":1}}],[\"到达酒店后会有指引牌和引导人员哦～\",{\"1\":{\"12\":1}}],[\"编排\",{\"1\":{\"608\":1}}],[\"编辑模块\",{\"1\":{\"822\":1}}],[\"编辑名片\",{\"1\":{\"820\":1}}],[\"编辑按钮刷新列表问题\",{\"1\":{\"619\":1}}],[\"编辑\",{\"1\":{\"577\":1,\"825\":1}}],[\"编码\",{\"0\":{\"815\":1},\"1\":{\"442\":1}}],[\"编译模块出错问题\",{\"1\":{\"383\":1}}],[\"编译需要\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"编译\",{\"0\":{\"98\":1},\"1\":{\"73\":1,\"363\":1,\"377\":1,\"392\":1}}],[\"编程方式来实现\",{\"1\":{\"790\":1}}],[\"编程式\",{\"0\":{\"433\":1}}],[\"编程式接口则更为简单直接\",{\"1\":{\"428\":1}}],[\"编程式接口\",{\"1\":{\"428\":1}}],[\"编程体验和代码可读性大幅提升\",{\"1\":{\"370\":1,\"385\":1}}],[\"编程语言使用方式\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"编程语言及\",{\"1\":{\"48\":1}}],[\"编程思想\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"编程\",{\"1\":{\"15\":1}}],[\"恭喜你\",{\"1\":{\"69\":1}}],[\"万一日志保存异常了\",{\"1\":{\"69\":1}}],[\"首云\",{\"1\":{\"808\":1}}],[\"首页图片增加懒加载效果\",{\"1\":{\"624\":1}}],[\"首页图表\",{\"1\":{\"577\":1}}],[\"首次启动服务端会自动初始化\",{\"1\":{\"582\":1}}],[\"首次迭代调用即会有反射调用\",{\"1\":{\"168\":1}}],[\"首次活动\",{\"0\":{\"29\":1,\"32\":1}}],[\"首先我觉得还是实用主义\",{\"1\":{\"791\":1}}],[\"首先我们提供了便于用户接入的\",{\"1\":{\"783\":1}}],[\"首先我们来看看开源能带来什么\",{\"1\":{\"456\":1}}],[\"首先你新建一个空的\",{\"1\":{\"788\":1}}],[\"首先随便微服务的流行\",{\"1\":{\"783\":1,\"791\":1}}],[\"首先确保本地已安装\",{\"1\":{\"585\":1}}],[\"首先确保服务器上已安装\",{\"1\":{\"583\":1}}],[\"首先对泛化调用所需要的参数进行检查\",{\"1\":{\"288\":1}}],[\"首先进入\",{\"1\":{\"287\":1}}],[\"首先进入了\",{\"1\":{\"92\":1}}],[\"首先需要对响应式编程了解\",{\"1\":{\"273\":1}}],[\"首先在\",{\"1\":{\"270\":1}}],[\"首先登陆\",{\"1\":{\"264\":1}}],[\"首先是\",{\"0\":{\"739\":1},\"1\":{\"266\":1}}],[\"首先是限流类型\",{\"1\":{\"266\":1}}],[\"首先是第一层缓存\",{\"1\":{\"179\":1}}],[\"首先是刚刚提到的\",{\"1\":{\"131\":1}}],[\"首先来看熔断相关的配置\",{\"1\":{\"265\":1}}],[\"首先来看\",{\"1\":{\"131\":1}}],[\"首先拿着规则名字\",{\"1\":{\"126\":1}}],[\"首先因为之前的包命名问题\",{\"1\":{\"73\":1}}],[\"首先\",{\"1\":{\"71\":1,\"113\":1,\"206\":1,\"208\":2,\"326\":1,\"334\":1,\"633\":1}}],[\"首先要理解\",{\"1\":{\"70\":1}}],[\"首先日志配置的参数\",{\"1\":{\"69\":1}}],[\"首先这又是一个牛角尖问题\",{\"1\":{\"69\":1}}],[\"首先这种情况是非常罕见的\",{\"1\":{\"68\":1}}],[\"+plugin\",{\"1\":{\"231\":2}}],[\"+8\",{\"1\":{\"191\":2}}],[\"+=\",{\"1\":{\"134\":1,\"135\":1}}],[\"+\",{\"1\":{\"66\":1,\"109\":2,\"121\":1,\"124\":1,\"133\":3,\"136\":4,\"141\":1,\"148\":3,\"149\":1,\"155\":1,\"156\":1,\"157\":1,\"167\":7,\"183\":1,\"200\":1,\"209\":1,\"228\":3,\"249\":3,\"266\":3,\"282\":1,\"286\":40,\"294\":3,\"327\":3,\"328\":3,\"357\":1,\"430\":1,\"608\":8,\"651\":2,\"663\":2,\"667\":2,\"675\":2,\"683\":2,\"692\":2,\"820\":4}}],[\"=>\",{\"1\":{\"603\":4,\"616\":14}}],[\"=j\",{\"1\":{\"518\":1}}],[\"=then\",{\"1\":{\"518\":2}}],[\"=switch\",{\"1\":{\"518\":2}}],[\"=if\",{\"1\":{\"518\":1}}],[\"==\",{\"1\":{\"129\":1,\"135\":2,\"137\":3,\"142\":1,\"158\":1,\"167\":6,\"171\":1,\"181\":1,\"183\":8,\"219\":1,\"224\":1,\"234\":1,\"237\":3,\"249\":1,\"252\":2,\"259\":1,\"266\":4,\"273\":3,\"293\":2,\"294\":3,\"816\":1}}],[\"=1\",{\"1\":{\"109\":2}}],[\"=\",{\"1\":{\"66\":11,\"67\":7,\"70\":2,\"71\":4,\"74\":9,\"82\":1,\"92\":5,\"114\":1,\"121\":3,\"122\":2,\"123\":11,\"124\":6,\"125\":11,\"126\":10,\"129\":8,\"130\":5,\"131\":6,\"133\":5,\"134\":9,\"135\":20,\"136\":5,\"137\":4,\"141\":6,\"142\":4,\"144\":10,\"148\":22,\"149\":13,\"153\":6,\"155\":3,\"156\":12,\"157\":5,\"158\":4,\"160\":3,\"161\":8,\"162\":2,\"164\":2,\"165\":1,\"166\":3,\"167\":20,\"170\":4,\"171\":7,\"173\":8,\"176\":4,\"178\":3,\"179\":3,\"180\":2,\"181\":3,\"183\":29,\"191\":4,\"195\":5,\"199\":4,\"200\":13,\"205\":7,\"206\":2,\"209\":6,\"210\":5,\"219\":13,\"220\":5,\"223\":1,\"224\":14,\"226\":1,\"227\":3,\"228\":4,\"229\":5,\"231\":3,\"232\":6,\"234\":8,\"235\":10,\"236\":8,\"237\":4,\"247\":5,\"249\":9,\"252\":19,\"259\":14,\"266\":14,\"272\":2,\"273\":17,\"278\":4,\"282\":2,\"284\":1,\"286\":1,\"287\":2,\"288\":8,\"289\":8,\"290\":3,\"293\":5,\"294\":18,\"324\":2,\"325\":3,\"327\":3,\"328\":3,\"430\":8,\"432\":6,\"433\":2,\"474\":2,\"488\":4,\"517\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1,\"709\":5,\"727\":1,\"770\":2,\"773\":1,\"774\":2,\"816\":1,\"817\":6}}],[\"使其能够精准的分厂商进行短信拦截\",{\"1\":{\"750\":1}}],[\"使其可以在并行全阶段进行垃圾回收\",{\"1\":{\"82\":1}}],[\"使其可统一配置化\",{\"1\":{\"54\":1}}],[\"使系统更加易用和便捷\",{\"1\":{\"727\":1}}],[\"使您可以更加灵活地管理和配置系统\",{\"1\":{\"727\":1}}],[\"使您可以更加灵活地管理和配置数据库\",{\"1\":{\"727\":1}}],[\"使您可以更快速地配置和管理系统\",{\"1\":{\"727\":1}}],[\"使您的业务处理更加可靠\",{\"1\":{\"727\":1}}],[\"使您的业务处理更加高效和便捷\",{\"1\":{\"727\":1}}],[\"使您的业务处理更加高效\",{\"1\":{\"727\":1}}],[\"使得体验性更加友善\",{\"1\":{\"672\":1}}],[\"使得用户可以通过手机来监控自动化模组的运行状态\",{\"0\":{\"595\":1}}],[\"使得一个复杂的多周期交易逻辑能在三百行左右的\",{\"1\":{\"590\":1}}],[\"使得现在要开发一个新的指标就像搭乐高一样简单\",{\"1\":{\"590\":1}}],[\"使得在语义方面更加完善\",{\"1\":{\"469\":1}}],[\"使得底层更加坚固\",{\"1\":{\"469\":1}}],[\"使得它成为了许多移动应用和物联网设备的首选开发语言\",{\"1\":{\"91\":1}}],[\"使hash更加均匀\",{\"1\":{\"133\":1}}],[\"使代码更加简洁\",{\"1\":{\"82\":1}}],[\"使用这种方式有些注意事项\",{\"1\":{\"816\":1}}],[\"使用指定的存储平台\",{\"1\":{\"816\":1}}],[\"使用更加自由方便\",{\"1\":{\"771\":1}}],[\"使用上不再依托\",{\"1\":{\"770\":1}}],[\"使用支持多种的配置\",{\"1\":{\"761\":1}}],[\"使用此模式\",{\"1\":{\"710\":1}}],[\"使用界面增删改支持\",{\"0\":{\"685\":1},\"1\":{\"683\":1}}],[\"使用场景\",{\"0\":{\"638\":1,\"645\":1}}],[\"使用框架前请仔细阅读文档重点注意事项\",{\"1\":{\"610\":1,\"621\":1}}],[\"使用案例\",{\"1\":{\"609\":1}}],[\"使用jjar包内自带的证书\",{\"1\":{\"585\":2}}],[\"使用默认的管理员帐号登录\",{\"1\":{\"584\":1}}],[\"使用默认\",{\"0\":{\"581\":1}}],[\"使用druid+oracle会报出关闭的语句错误\",{\"1\":{\"509\":1}}],[\"使用人数也非常庞大\",{\"1\":{\"484\":1}}],[\"使用过程中有任何问题\",{\"1\":{\"415\":1,\"424\":1}}],[\"使用细节\",{\"1\":{\"372\":1,\"387\":1}}],[\"使用复杂度\",{\"1\":{\"370\":1,\"385\":1}}],[\"使用者集成使用\",{\"1\":{\"368\":1}}],[\"使用的\",{\"1\":{\"822\":1}}],[\"使用的促进效果并不理想\",{\"1\":{\"367\":1,\"382\":1}}],[\"使用的是\",{\"1\":{\"265\":1,\"783\":1}}],[\"使用全新技术栈\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"使用反射获取调用的方法\",{\"1\":{\"294\":2}}],[\"使用泛化调用\",{\"0\":{\"285\":1},\"1\":{\"276\":1}}],[\"使用户通过简单的配置就可以使用\",{\"1\":{\"264\":1}}],[\"使用时直接从\",{\"1\":{\"409\":1,\"419\":1}}],[\"使用时不理解其机制导致没有用到它的缓存\",{\"1\":{\"176\":1}}],[\"使用时\",{\"1\":{\"175\":1}}],[\"使用方式与先前的\",{\"1\":{\"770\":1}}],[\"使用方式变更\",{\"0\":{\"770\":1}}],[\"使用方式编写方法与\",{\"1\":{\"608\":1}}],[\"使用方式\",{\"0\":{\"169\":1},\"1\":{\"763\":1}}],[\"使用了插件化设计思想\",{\"1\":{\"213\":1}}],[\"使用了\",{\"1\":{\"158\":1,\"727\":3,\"790\":1}}],[\"使用网关后性能有些下降\",{\"1\":{\"109\":1}}],[\"使用用户名admin\",{\"1\":{\"100\":1}}],[\"使用\",{\"0\":{\"97\":1,\"197\":1,\"203\":1,\"583\":1,\"678\":1,\"813\":1},\"1\":{\"64\":1,\"125\":1,\"157\":1,\"160\":1,\"161\":1,\"166\":1,\"200\":1,\"216\":2,\"271\":1,\"314\":1,\"316\":1,\"327\":1,\"370\":1,\"374\":2,\"385\":1,\"389\":2,\"397\":1,\"583\":1,\"587\":1,\"617\":1,\"644\":1,\"700\":1,\"722\":2,\"727\":3,\"820\":1}}],[\"zyplayer\",{\"0\":{\"830\":1},\"1\":{\"831\":3}}],[\"z0\",{\"1\":{\"677\":1}}],[\"za\",{\"1\":{\"677\":2}}],[\"zack\",{\"1\":{\"308\":1}}],[\"zlyx\",{\"1\":{\"617\":2}}],[\"zip文件\",{\"1\":{\"583\":1}}],[\"zip上传至服务器部署目录\",{\"1\":{\"583\":1}}],[\"zip\",{\"1\":{\"575\":1,\"583\":1,\"774\":1}}],[\"zqr10159\",{\"1\":{\"458\":3,\"461\":1}}],[\"zuobiao\",{\"1\":{\"317\":1}}],[\"zendwang\",{\"1\":{\"308\":1}}],[\"zdp\",{\"1\":{\"308\":1}}],[\"zoneddatetime\",{\"1\":{\"397\":1}}],[\"zoneoffset\",{\"1\":{\"191\":2}}],[\"zombie\",{\"1\":{\"316\":1}}],[\"zombieremovaltimes\",{\"1\":{\"316\":1}}],[\"zoo\",{\"1\":{\"199\":1}}],[\"zookeeperconfig\",{\"1\":{\"205\":6}}],[\"zookeeperconfiguration\",{\"1\":{\"156\":1,\"200\":4}}],[\"zookeepersyncdataservice\",{\"1\":{\"205\":4,\"206\":2}}],[\"zookeepersyncdataconfiguration\",{\"1\":{\"199\":1,\"205\":2}}],[\"zookeeperprop\",{\"1\":{\"200\":5}}],[\"zookeeperproperties\",{\"1\":{\"200\":2}}],[\"zookeeper<\",{\"1\":{\"198\":1,\"205\":1}}],[\"zookeeperlistener\",{\"1\":{\"156\":1,\"200\":1}}],[\"zookeeperdatachangedlistener\",{\"1\":{\"92\":2,\"142\":1,\"156\":3,\"200\":5,\"204\":1}}],[\"zookeeperdatainit\",{\"1\":{\"92\":1,\"156\":4,\"200\":8}}],[\"zookeeper\",{\"0\":{\"197\":1,\"200\":1,\"203\":1,\"205\":1},\"1\":{\"64\":2,\"74\":1,\"77\":1,\"92\":4,\"140\":1,\"142\":3,\"156\":4,\"160\":1,\"198\":3,\"199\":30,\"200\":16,\"201\":2,\"203\":4,\"204\":2,\"205\":8,\"206\":5,\"313\":1,\"314\":1,\"316\":1,\"331\":2,\"409\":1,\"419\":1,\"445\":1,\"449\":1,\"459\":1,\"706\":1,\"707\":1,\"713\":2,\"714\":1,\"783\":1,\"787\":1,\"790\":1,\"792\":2}}],[\"zhifei\",{\"1\":{\"420\":1}}],[\"zhou315\",{\"1\":{\"458\":2}}],[\"zhou\",{\"1\":{\"317\":1}}],[\"zhang\",{\"1\":{\"317\":1,\"411\":2,\"413\":1,\"420\":2,\"422\":1}}],[\"zhw\",{\"1\":{\"308\":2}}],[\"zh\",{\"1\":{\"93\":1,\"150\":1,\"313\":5,\"314\":2,\"318\":1,\"442\":1,\"703\":1,\"709\":1,\"782\":1,\"786\":1,\"789\":3}}],[\"zkeventthread\",{\"1\":{\"199\":2}}],[\"zkserver\",{\"1\":{\"199\":1}}],[\"zkclientgetchildren\",{\"1\":{\"205\":1}}],[\"zkclient\",{\"1\":{\"156\":6,\"199\":10,\"200\":31,\"205\":23,\"206\":4}}],[\"zkpathconstants\",{\"1\":{\"142\":3,\"200\":3,\"205\":2}}],[\"zk\",{\"1\":{\"92\":1,\"200\":3,\"205\":2,\"792\":1}}],[\"zknode\",{\"1\":{\"92\":1}}],[\"z\",{\"1\":{\"83\":1,\"199\":1,\"308\":1,\"677\":1}}],[\"zgc\",{\"1\":{\"79\":3,\"83\":3,\"85\":2,\"87\":2,\"90\":2}}],[\"ztzzz\",{\"1\":{\"30\":1}}],[\"机器接收到子任务后\",{\"1\":{\"406\":1}}],[\"机器学习\",{\"1\":{\"91\":1}}],[\"机制实现\",{\"1\":{\"713\":1}}],[\"机制自动扫描并注册插件\",{\"1\":{\"217\":1}}],[\"机制\",{\"1\":{\"164\":1,\"206\":1,\"220\":1,\"229\":1,\"383\":1}}],[\"机了\",{\"1\":{\"69\":1}}],[\"机\",{\"1\":{\"64\":1}}],[\"默认提供了限流\",{\"1\":{\"790\":1}}],[\"默认情况下\",{\"1\":{\"783\":1}}],[\"默认全部有序\",{\"1\":{\"722\":1}}],[\"默认路径为项目的\",{\"1\":{\"709\":1}}],[\"默认使用的存储平台\",{\"1\":{\"811\":2,\"814\":1}}],[\"默认使用\",{\"1\":{\"583\":1}}],[\"默认是关闭的\",{\"1\":{\"521\":1}}],[\"默认不开启\",{\"1\":{\"515\":1}}],[\"默认主线程池的名称拼写\",{\"1\":{\"509\":1}}],[\"默认账号密码\",{\"1\":{\"457\":1,\"465\":1}}],[\"默认数据库名称进行变更\",{\"1\":{\"397\":1}}],[\"默认secret资源名字\",{\"1\":{\"313\":1}}],[\"默认secret资源的namespace\",{\"1\":{\"313\":1}}],[\"默认方法$invokeasync进行异步调用\",{\"1\":{\"289\":1}}],[\"默认值50\",{\"1\":{\"270\":1}}],[\"默认值\",{\"1\":{\"270\":11}}],[\"默认请求都通过了\",{\"1\":{\"259\":1}}],[\"默认为dysmsapi\",{\"1\":{\"740\":1}}],[\"默认为安全的\",{\"1\":{\"314\":1}}],[\"默认为\",{\"1\":{\"226\":1,\"229\":1}}],[\"默认的用户名\",{\"1\":{\"788\":1}}],[\"默认的序列化方式由\",{\"1\":{\"778\":1}}],[\"默认的\",{\"1\":{\"158\":1,\"357\":2,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"默认策略\",{\"1\":{\"156\":1}}],[\"默认5\",{\"1\":{\"133\":1}}],[\"默认内置\",{\"1\":{\"126\":1}}],[\"默认\",{\"1\":{\"64\":2,\"226\":1,\"308\":1,\"372\":1,\"387\":1,\"457\":1,\"465\":1,\"515\":1}}],[\"单页\",{\"1\":{\"824\":1}}],[\"单挑\",{\"1\":{\"746\":1}}],[\"单独使用\",{\"1\":{\"814\":1}}],[\"单独的进行发布\",{\"1\":{\"783\":1}}],[\"单独配置\",{\"1\":{\"624\":1}}],[\"单独一个模块提供了很多很全\",{\"1\":{\"608\":1}}],[\"单独以组件形式进行发布\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"单主集群\",{\"1\":{\"608\":1}}],[\"单词拼写错误\",{\"1\":{\"606\":1}}],[\"单点登录\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"615\":1,\"624\":1}}],[\"单机模式与集群模式相互切换部署非常方便\",{\"1\":{\"454\":1}}],[\"单机集群两种模式可相互切换无感知\",{\"1\":{\"453\":1}}],[\"单采集器挂掉无感知故障迁移采集任务\",{\"1\":{\"454\":1}}],[\"单表监听\",{\"0\":{\"327\":1}}],[\"单位ms\",{\"1\":{\"270\":4}}],[\"单位时长指定的是异常判断以是\",{\"1\":{\"265\":1}}],[\"单位是秒\",{\"1\":{\"64\":1}}],[\"单节点\",{\"1\":{\"64\":1}}],[\"单测小结\",{\"1\":{\"30\":1}}],[\"<2\",{\"1\":{\"709\":1}}],[\"<chain\",{\"1\":{\"504\":5,\"505\":3,\"516\":2,\"518\":5,\"519\":1}}],[\"<context\",{\"1\":{\"74\":1}}],[\"<dubbo\",{\"1\":{\"285\":1,\"702\":1}}],[\"<dependency>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":5,\"282\":1,\"323\":1,\"326\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":2,\"814\":2}}],[\"<string\",{\"1\":{\"247\":1}}],[\"<s>\",{\"1\":{\"167\":2}}],[\"<generated>\",{\"1\":{\"208\":3}}],[\"<groupid>cn\",{\"1\":{\"810\":1}}],[\"<groupid>com\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"208\":1,\"323\":1,\"326\":1,\"814\":1}}],[\"<groupid>io\",{\"1\":{\"269\":1}}],[\"<groupid>org\",{\"1\":{\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":1,\"255\":1,\"270\":1,\"280\":5,\"282\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":1,\"814\":1}}],[\"<init>\",{\"1\":{\"208\":1}}],[\"<=\",{\"1\":{\"149\":1,\"458\":1}}],[\"<二>\",{\"1\":{\"149\":1}}],[\"<t>\",{\"1\":{\"141\":1,\"176\":1,\"273\":2}}],[\"<artifactid>aliyun\",{\"1\":{\"814\":1}}],[\"<artifactid>x\",{\"1\":{\"810\":1,\"814\":1}}],[\"<artifactid>spring\",{\"1\":{\"788\":2,\"810\":1}}],[\"<artifactid>sms4j\",{\"1\":{\"739\":1,\"758\":1}}],[\"<artifactid>soul\",{\"1\":{\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":1,\"255\":1,\"270\":1,\"280\":1,\"282\":1,\"788\":2,\"789\":4}}],[\"<artifactid>binlog4j\",{\"1\":{\"323\":1,\"326\":1}}],[\"<artifactid>curator\",{\"1\":{\"280\":3}}],[\"<artifactid>dubbo<\",{\"1\":{\"280\":1}}],[\"<artifactid>resilience4j\",{\"1\":{\"269\":1}}],[\"<artifactid>nacos\",{\"1\":{\"208\":1}}],[\"<artifactid>hmily\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"709\":3}}],[\"<aop\",{\"1\":{\"74\":1}}],[\"<version>3\",{\"1\":{\"814\":1}}],[\"<version>1\",{\"1\":{\"810\":1}}],[\"<version>latest\",{\"1\":{\"323\":1,\"326\":1}}],[\"<version>2\",{\"1\":{\"280\":1,\"709\":3,\"788\":4,\"789\":4,\"810\":1,\"814\":1}}],[\"<version>$\",{\"1\":{\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":4,\"282\":1}}],[\"<version>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"739\":1,\"758\":1}}],[\"<<高可用可伸缩微服务架构>>\",{\"1\":{\"165\":1}}],[\"<<\",{\"1\":{\"67\":1,\"74\":2}}],[\"<\",{\"1\":{\"64\":13,\"66\":2,\"74\":10,\"75\":2,\"76\":2,\"77\":6,\"103\":2,\"130\":3,\"133\":1,\"134\":2,\"148\":1,\"149\":1,\"166\":1,\"167\":1,\"188\":4,\"198\":3,\"205\":2,\"208\":4,\"220\":1,\"229\":1,\"231\":1,\"255\":2,\"269\":2,\"270\":2,\"280\":9,\"282\":2,\"286\":2,\"287\":2,\"294\":2,\"323\":1,\"326\":1,\"504\":5,\"505\":3,\"516\":2,\"518\":5,\"519\":1,\"709\":3,\"739\":2,\"758\":2,\"788\":6,\"789\":12,\"810\":2,\"814\":4}}],[\"<property\",{\"1\":{\"64\":43,\"74\":11}}],[\"<bean\",{\"1\":{\"64\":7,\"74\":2}}],[\">击进入周边商店购买\",{\"1\":{\"720\":1}}],[\">resource\",{\"1\":{\"709\":1}}],[\">redis配置源\",{\"1\":{\"503\":1}}],[\">这里\",{\"1\":{\"681\":1,\"690\":1,\"698\":1}}],[\">这里https\",{\"1\":{\"661\":1}}],[\">https\",{\"1\":{\"672\":1}}],[\">开启when线程池隔离\",{\"1\":{\"521\":1}}],[\">本地文件监听\",{\"1\":{\"520\":1}}],[\">本地规则文件配置和高级功能\",{\"1\":{\"520\":1}}],[\">组件降级\",{\"1\":{\"519\":1}}],[\">组件回滚\",{\"1\":{\"506\":1}}],[\">链路继承\",{\"1\":{\"518\":1}}],[\">构造el\",{\"1\":{\"517\":1}}],[\">指定任意节点先执行完则忽略其他\",{\"1\":{\"516\":1}}],[\">并行编排\",{\"1\":{\"516\":1,\"521\":1}}],[\">sql\",{\"1\":{\"515\":1}}],[\">异步循环模式\",{\"1\":{\"505\":1}}],[\">超时控制\",{\"1\":{\"504\":1}}],[\">java脚本引擎\",{\"1\":{\"502\":1}}],[\">脚本语言种类\",{\"1\":{\"502\":1}}],[\">g\",{\"1\":{\"406\":1}}],[\">d\",{\"1\":{\"406\":1}}],[\">e\",{\"1\":{\"406\":1}}],[\">b\",{\"1\":{\"406\":1}}],[\">选取规则\",{\"1\":{\"234\":1}}],[\">选取选择器\",{\"1\":{\"234\":1}}],[\">>>\",{\"1\":{\"178\":1,\"180\":1}}],[\">>\",{\"1\":{\"176\":1,\"180\":1,\"183\":7}}],[\">=\",{\"1\":{\"148\":1,\"252\":1,\"458\":1}}],[\">\",{\"1\":{\"64\":50,\"66\":1,\"67\":2,\"70\":2,\"71\":1,\"74\":18,\"92\":2,\"124\":1,\"126\":2,\"130\":4,\"134\":2,\"135\":3,\"136\":4,\"137\":1,\"144\":2,\"148\":2,\"149\":1,\"162\":3,\"167\":1,\"171\":1,\"176\":1,\"177\":1,\"178\":1,\"180\":1,\"181\":2,\"183\":4,\"188\":2,\"191\":1,\"195\":1,\"198\":1,\"204\":1,\"205\":4,\"206\":4,\"209\":4,\"210\":3,\"220\":4,\"227\":3,\"229\":1,\"231\":1,\"236\":4,\"237\":1,\"249\":5,\"254\":2,\"259\":4,\"264\":1,\"266\":6,\"273\":3,\"285\":1,\"286\":3,\"287\":1,\"289\":3,\"290\":1,\"293\":1,\"294\":2,\"406\":1,\"504\":5,\"505\":3,\"516\":2,\"518\":5,\"519\":1,\"547\":2,\"584\":1,\"624\":15,\"644\":2,\"652\":1,\"664\":1,\"665\":1,\"673\":1,\"679\":2,\"688\":1,\"693\":2,\"702\":1,\"709\":1,\"788\":4,\"789\":8,\"814\":2,\"816\":2}}],[\"直传接口无法与现有系统安全体系融合\",{\"1\":{\"374\":1,\"389\":1}}],[\"直传\",{\"1\":{\"370\":1,\"373\":1,\"385\":1,\"388\":1}}],[\"直接从数据库中获取\",{\"1\":{\"817\":1}}],[\"直接读取\",{\"1\":{\"816\":1}}],[\"直接支持了\",{\"1\":{\"431\":1}}],[\"直接暴露\",{\"1\":{\"374\":1,\"389\":1}}],[\"直接把请求传给filterchain的下一个filter\",{\"1\":{\"294\":1}}],[\"直接返回报错\",{\"1\":{\"266\":1}}],[\"直接拒绝比较好理解\",{\"1\":{\"266\":1}}],[\"直接拒绝\",{\"1\":{\"263\":1,\"266\":2}}],[\"直接使用\",{\"1\":{\"253\":1}}],[\"直接看到最后一句的\",{\"1\":{\"144\":1}}],[\"直接找到\",{\"1\":{\"142\":1}}],[\"直接贴配置\",{\"1\":{\"140\":1}}],[\"直接上\",{\"1\":{\"64\":1}}],[\"直连数据库模式性能更优\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"直连\",{\"1\":{\"54\":1}}],[\"最开始我和王亮一起讨论设计了\",{\"1\":{\"792\":1}}],[\"最开始全职开源的想法很简单\",{\"1\":{\"456\":1}}],[\"最轻量\",{\"1\":{\"783\":1}}],[\"最好不要是中文\",{\"1\":{\"772\":2}}],[\"最好的解决办法就是不去解决它\",{\"1\":{\"69\":1}}],[\"最好的解决办法是不解决它\",{\"1\":{\"64\":1}}],[\"最新版本请查看gitee或官网\",{\"1\":{\"739\":1}}],[\"最新版本的\",{\"1\":{\"729\":1}}],[\"最新域名\",{\"0\":{\"693\":1},\"1\":{\"692\":1}}],[\"最近\",{\"0\":{\"716\":1}}],[\"最低活跃频率\",{\"1\":{\"624\":1}}],[\"最大程度上保证企业或个人的数据安全\",{\"1\":{\"831\":1}}],[\"最大空闲时间\",{\"1\":{\"608\":1}}],[\"最大重复次数\",{\"1\":{\"64\":1}}],[\"最火热中国开源项目社区\",{\"1\":{\"427\":1}}],[\"最受欢迎项目\",{\"1\":{\"427\":1}}],[\"最伟大的作家之一\",{\"1\":{\"352\":1}}],[\"最棒\",{\"1\":{\"308\":1}}],[\"最小请求数指的是\",{\"1\":{\"265\":1}}],[\"最简单最快\",{\"1\":{\"229\":1}}],[\"最最重要的作用了\",{\"1\":{\"173\":1}}],[\"最外层会继续尝试下个\",{\"1\":{\"171\":1}}],[\"最关键的点在这行\",{\"1\":{\"171\":1}}],[\"最终大家在生态中都受益\",{\"1\":{\"456\":1}}],[\"最终很高兴\",{\"1\":{\"453\":1}}],[\"最终一致性\",{\"1\":{\"264\":1}}],[\"最终结果的处理\",{\"1\":{\"236\":1}}],[\"最终整理的流程图如下所示\",{\"1\":{\"234\":1}}],[\"最终封装成了一个soulcontext\",{\"1\":{\"233\":1}}],[\"最终封装完成的\",{\"1\":{\"232\":1}}],[\"最终输出的未跳过的插件如下\",{\"1\":{\"231\":1}}],[\"最终可以追溯到soulconfiguration类下\",{\"1\":{\"231\":1}}],[\"最终交由下游插件进行响应式代理调用\",{\"1\":{\"223\":1}}],[\"最终形成我们看到的插件链\",{\"1\":{\"220\":1}}],[\"最终实现了\",{\"1\":{\"219\":1}}],[\"最终返回的类型是父接口\",{\"1\":{\"165\":1}}],[\"最终会表现出各种形式\",{\"1\":{\"164\":1}}],[\"最终确认一个唯一规则\",{\"1\":{\"129\":1}}],[\"最重要的当然是修复若干\",{\"1\":{\"460\":1}}],[\"最重要的一点是使用\",{\"1\":{\"164\":1}}],[\"最重要的由于我们的项目比较多\",{\"1\":{\"40\":1}}],[\"最后最后\",{\"0\":{\"786\":1}}],[\"最后还请大家给个\",{\"1\":{\"766\":1}}],[\"最后来总结一下整个基础架构\",{\"1\":{\"593\":1}}],[\"最后从源码的层面简略分析\",{\"1\":{\"261\":1}}],[\"最后交由子类的doexcute方法\",{\"1\":{\"234\":1}}],[\"最后设置最终的\",{\"1\":{\"224\":1}}],[\"最后是看到了群里其他同学遇到了同样的问题\",{\"1\":{\"208\":1}}],[\"最后再看看\",{\"1\":{\"144\":1}}],[\"最后再次感谢大家\",{\"1\":{\"77\":1}}],[\"最后插件链走到\",{\"1\":{\"137\":1}}],[\"最后简单说下各个插件项目的功能\",{\"1\":{\"131\":1}}],[\"最后调用\",{\"1\":{\"124\":1}}],[\"最后\",{\"1\":{\"69\":1,\"220\":1,\"305\":1,\"633\":1,\"786\":1}}],[\"退出\",{\"0\":{\"64\":1}}],[\"除特殊依赖外\",{\"1\":{\"360\":1}}],[\"除非出现重大错误\",{\"1\":{\"79\":1}}],[\"除非你的集群同时一下挂掉\",{\"1\":{\"63\":1}}],[\"除了中选课题的同学之外\",{\"1\":{\"469\":1}}],[\"除了我们默认的内置内存消息队列\",{\"1\":{\"448\":1}}],[\"除了包装注入响应信息\",{\"1\":{\"144\":1}}],[\"除了以上几个新特性\",{\"1\":{\"81\":1}}],[\"除了对用户的方便快捷之外\",{\"1\":{\"57\":1}}],[\"除了项目本身的\",{\"1\":{\"56\":1}}],[\"阶段异常时候\",{\"1\":{\"708\":1}}],[\"阶段超时异常\",{\"1\":{\"708\":1}}],[\"阶段之后的软件开发阶段\",{\"1\":{\"79\":1}}],[\"阶段是紧随\",{\"1\":{\"79\":1}}],[\"阶段是软件测试的第一阶段\",{\"1\":{\"79\":1}}],[\"阶段会保存好日志\",{\"1\":{\"68\":1}}],[\"阶段\",{\"1\":{\"62\":1,\"633\":1}}],[\"进程数据的\",{\"1\":{\"644\":1}}],[\"进程捕获异常后是否退出\",{\"1\":{\"637\":1}}],[\"进程之间共享\",{\"1\":{\"82\":1}}],[\"进一步解耦\",{\"1\":{\"397\":1}}],[\"进一步组合成符合实际应用的业务逻辑和功能处理\",{\"1\":{\"373\":1,\"388\":1}}],[\"进到实现类里\",{\"1\":{\"153\":1}}],[\"进入登录页\",{\"1\":{\"333\":1}}],[\"进入\",{\"1\":{\"124\":1}}],[\"进行操作了\",{\"1\":{\"817\":1}}],[\"进行数据交互\",{\"1\":{\"783\":1}}],[\"进行连接\",{\"1\":{\"763\":1}}],[\"进行枚举字段映射\",{\"1\":{\"723\":1}}],[\"进行了完整的测试\",{\"1\":{\"482\":1}}],[\"进行了增强\",{\"1\":{\"86\":1,\"87\":1,\"88\":2,\"89\":2}}],[\"进行完整的测试\",{\"1\":{\"482\":1}}],[\"进行集成\",{\"1\":{\"474\":1}}],[\"进行简化封装\",{\"1\":{\"370\":1,\"385\":1}}],[\"进行初始化服务任务\",{\"1\":{\"338\":1}}],[\"进行更新转移文档\",{\"1\":{\"302\":1}}],[\"进行转发跳转\",{\"1\":{\"253\":1}}],[\"进行访问\",{\"1\":{\"245\":1}}],[\"进行监控\",{\"1\":{\"231\":1}}],[\"进行全局的初始化\",{\"1\":{\"231\":1}}],[\"进行\",{\"1\":{\"135\":1,\"288\":1}}],[\"进行优化\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"进行愉快的使用了\",{\"1\":{\"77\":1}}],[\"进行保存\",{\"1\":{\"70\":1}}],[\"进行事务日志的异步读写\",{\"0\":{\"66\":1}}],[\"进行自身的回滚\",{\"1\":{\"62\":1}}],[\"进阶难度项目\",{\"1\":{\"36\":1}}],[\"所属模块支持\",{\"1\":{\"656\":1}}],[\"所支持的监控数量上限受到了单节点的天然限制\",{\"1\":{\"453\":1}}],[\"所在模块\",{\"1\":{\"397\":1}}],[\"所在的配置类通过配置\",{\"1\":{\"220\":1}}],[\"所执行的插件的大体流程与我们猜想的处理流程一致\",{\"1\":{\"231\":1}}],[\"所谓的数据同步是指将\",{\"1\":{\"112\":1}}],[\"所以不能一股脑的\",{\"1\":{\"792\":1}}],[\"所以插件化设计\",{\"1\":{\"792\":1}}],[\"所以干脆都放这了\",{\"1\":{\"764\":1}}],[\"所以少年\",{\"1\":{\"692\":1}}],[\"所以自动域名的另外一个好使是\",{\"1\":{\"664\":1}}],[\"所以返回的内容可能会有误差\",{\"1\":{\"653\":1}}],[\"所以盈富平台免费开放出来给大伙使用\",{\"1\":{\"592\":1}}],[\"所以一直以来\",{\"1\":{\"515\":1}}],[\"所以每一次发版\",{\"1\":{\"484\":1}}],[\"所以大家可以放心的使用\",{\"1\":{\"482\":1}}],[\"所以对于一些场景没覆盖到\",{\"1\":{\"475\":1}}],[\"所以它的使用方式和logger是完全一致的\",{\"1\":{\"474\":1}}],[\"所以从本次发布以后不再上传\",{\"1\":{\"354\":1}}],[\"所以进行的\",{\"1\":{\"252\":1}}],[\"所以有了第二种令牌桶算法\",{\"1\":{\"251\":1}}],[\"所以依旧实现了abstractsoulplugin\",{\"1\":{\"249\":1}}],[\"所以还得去启动一下\",{\"1\":{\"208\":1}}],[\"所以我们在\",{\"1\":{\"515\":1}}],[\"所以我们重点放到\",{\"1\":{\"287\":1}}],[\"所以我们先分析下它的代码\",{\"1\":{\"166\":1}}],[\"所以我们可以猜测\",{\"1\":{\"113\":1}}],[\"所以会直接结束\",{\"1\":{\"148\":1}}],[\"所以这次我们也收到了贡献者的\",{\"1\":{\"489\":1}}],[\"所以这块缓存与数据库的交互也是个值得分析的点\",{\"1\":{\"145\":1}}],[\"所以这里不重复解释\",{\"1\":{\"249\":1}}],[\"所以这里不展开阐述\",{\"1\":{\"234\":1}}],[\"所以这里的对应处理为\",{\"1\":{\"234\":1}}],[\"所以这里我们会分析到三个插件\",{\"1\":{\"131\":1}}],[\"所以这里一样的不能直接注释\",{\"1\":{\"92\":1}}],[\"所以这里除了\",{\"1\":{\"92\":1}}],[\"所以在网关项目\",{\"1\":{\"130\":1}}],[\"所以如果你看到控制台有时会打印多个连接成功的日志\",{\"1\":{\"92\":1}}],[\"所以用守护线程是最好的\",{\"1\":{\"92\":1}}],[\"所以\",{\"1\":{\"62\":1,\"469\":1,\"483\":1,\"484\":1,\"763\":1}}],[\"所有支持的存储平台\",{\"1\":{\"808\":1}}],[\"所有版本\",{\"1\":{\"701\":1,\"787\":1}}],[\"所有模块优化注释\",{\"1\":{\"624\":1}}],[\"所有策略声明抽离为单独的函数式接口\",{\"1\":{\"624\":1}}],[\"所有请求都会进入\",{\"1\":{\"624\":1}}],[\"所有数据\",{\"1\":{\"615\":1}}],[\"所有数据类型的\",{\"1\":{\"148\":1}}],[\"所有人问题\",{\"1\":{\"421\":1}}],[\"所有配置均放在配置中心\",{\"1\":{\"409\":1,\"419\":1}}],[\"所有函数参数\",{\"1\":{\"370\":1,\"385\":1}}],[\"所有接口必须配置权限才可使用\",{\"1\":{\"368\":1}}],[\"所有内置页面均改用页面嵌入\",{\"1\":{\"360\":1}}],[\"所有的关系型数据库以及各种注册中心\",{\"1\":{\"503\":1}}],[\"所有的测试用例从原先的\",{\"1\":{\"484\":1}}],[\"所有的逻辑和规则均可热变更\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"所有的\",{\"1\":{\"223\":1}}],[\"所有的插件都在这条链上依次处理\",{\"1\":{\"218\":1}}],[\"所有插件是怎么形成\",{\"1\":{\"220\":1}}],[\"所有节点权重分累加并随机得到数字\",{\"1\":{\"134\":1}}],[\"所有需要按照项目维度去设计项目\",{\"1\":{\"40\":1}}],[\"所有成功购票的用户皆会收到大会官方的报名成功邮件\",{\"1\":{\"13\":1}}],[\"所有参会者\",{\"1\":{\"13\":1}}],[\"所有捐赠给\",{\"1\":{\"7\":1}}],[\"设备管理\",{\"1\":{\"360\":1}}],[\"设备等输入受限设备的\",{\"1\":{\"360\":1}}],[\"设备可以获取所需的访问令牌和刷新令牌\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"设备会让用户在另一台设备上的浏览器中访问一个网页\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"设备或打印机等\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"设备授权授予\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"设备模式\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"设为429\",{\"1\":{\"266\":2}}],[\"设为500\",{\"1\":{\"266\":1}}],[\"设置成你的soul\",{\"1\":{\"788\":1}}],[\"设置带有缓存时间的\",{\"1\":{\"763\":1}}],[\"设置无效问题\",{\"1\":{\"724\":1}}],[\"设置一个\",{\"1\":{\"679\":1}}],[\"设置角色按机构进行数据范围权限划分\",{\"1\":{\"609\":1}}],[\"设置好注解条件\",{\"1\":{\"608\":1}}],[\"设置不正确导致前端控制台抛错问题\",{\"1\":{\"397\":1}}],[\"设置管理\",{\"1\":{\"374\":1,\"389\":1}}],[\"设置界面\",{\"1\":{\"368\":2}}],[\"设置默认\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"设置功能\",{\"1\":{\"338\":1}}],[\"设置相关读写权限\",{\"1\":{\"301\":1}}],[\"设置attachment\",{\"1\":{\"293\":1}}],[\"设置过期key\",{\"1\":{\"252\":1}}],[\"设置重试的场景及重试次数\",{\"1\":{\"236\":1}}],[\"设置失败响应\",{\"1\":{\"236\":1}}],[\"设置请求重试实际\",{\"1\":{\"236\":1}}],[\"设置超时时间\",{\"1\":{\"235\":1,\"236\":2,\"273\":1}}],[\"设置最终服务的的\",{\"1\":{\"230\":1}}],[\"设置为开启\",{\"1\":{\"254\":1}}],[\"设置为\",{\"1\":{\"226\":1}}],[\"设置\",{\"1\":{\"219\":2,\"224\":1,\"236\":1,\"266\":3}}],[\"设置的超时时间是\",{\"1\":{\"62\":1}}],[\"设计师打造\",{\"1\":{\"604\":1}}],[\"设计了除了核心之外所有一切均可为插件的架构\",{\"1\":{\"469\":1}}],[\"设计了新的控制台登陆界面和欢迎页面\",{\"1\":{\"460\":1}}],[\"设计系统和重构系统的神器\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"设计单机版和集群版用同一套代码方便后续的维护升级\",{\"1\":{\"453\":1}}],[\"设计思想的\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"设计关键点\",{\"0\":{\"216\":1}}],[\"设计\",{\"1\":{\"42\":1}}],[\"性能更优的新特性服务于实际的开发工作\",{\"1\":{\"353\":1,\"358\":1}}],[\"性能完蛋不说\",{\"1\":{\"175\":1}}],[\"性能情况\",{\"1\":{\"168\":1}}],[\"性能优化\",{\"1\":{\"90\":1}}],[\"性能等新特性\",{\"1\":{\"90\":1}}],[\"性能的情况下\",{\"1\":{\"82\":1}}],[\"性能\",{\"1\":{\"61\":1,\"316\":1,\"723\":1}}],[\"性能一样\",{\"1\":{\"61\":1}}],[\"导入\",{\"1\":{\"667\":1}}],[\"导出下拉框功能\",{\"1\":{\"618\":1}}],[\"导出字典转下拉框\",{\"1\":{\"617\":1}}],[\"导出字典默认转为下拉框\",{\"1\":{\"617\":1}}],[\"导出合并\",{\"1\":{\"617\":1}}],[\"导读\",{\"0\":{\"589\":1,\"595\":1}}],[\"导致项目有些重量化了\",{\"1\":{\"729\":1}}],[\"导致事务悬挂\",{\"1\":{\"708\":1}}],[\"导致显示或者数据保存的时候方法描述过程\",{\"1\":{\"680\":1}}],[\"导致排序不稳定\",{\"1\":{\"606\":1}}],[\"导致脚本拿不到\",{\"1\":{\"485\":1}}],[\"导致很多小伙伴实际在\",{\"1\":{\"482\":1}}],[\"导致前端抛错以及上传成功后不会刷新对象列表问题\",{\"1\":{\"397\":1}}],[\"导致多而不精\",{\"1\":{\"367\":1,\"382\":1}}],[\"导致\",{\"1\":{\"339\":1,\"397\":1}}],[\"导致的命令执行卡住问题\",{\"1\":{\"331\":1}}],[\"导致请求处理时间长或者老是频繁抛出异常\",{\"1\":{\"262\":1}}],[\"导致它一朝回到解放前\",{\"1\":{\"135\":1}}],[\"导致了性能下降\",{\"1\":{\"61\":1}}],[\"导师联系邮箱\",{\"1\":{\"42\":1}}],[\"只会支持\",{\"1\":{\"716\":1}}],[\"只会有一个监听器\",{\"1\":{\"157\":1}}],[\"只查询未禁用的部门角色岗位数据\",{\"1\":{\"617\":1}}],[\"只提供基础功能\",{\"1\":{\"608\":2}}],[\"只支持单家运营商的使用\",{\"1\":{\"740\":1}}],[\"只支持单数据源生成\",{\"1\":{\"608\":1}}],[\"只支持是否存在匹配\",{\"1\":{\"608\":1}}],[\"只能单排序\",{\"1\":{\"608\":1}}],[\"只能先说这么多了\",{\"1\":{\"593\":1}}],[\"只比对指纹\",{\"1\":{\"503\":1}}],[\"只引入用到的包\",{\"1\":{\"413\":1}}],[\"只有实现了交易的程序化与自动化\",{\"0\":{\"589\":1}}],[\"只有卷开源产品卷自己到更强的产品力\",{\"1\":{\"456\":1}}],[\"只有匹配的请求\",{\"1\":{\"254\":1}}],[\"只有\",{\"1\":{\"231\":2,\"266\":1}}],[\"只是需要把访问域名改成网关的域名即可\",{\"1\":{\"783\":1}}],[\"只是针对加了\",{\"1\":{\"702\":1}}],[\"只是\",{\"1\":{\"176\":1}}],[\"只是分布式事务的搬运工\",{\"1\":{\"61\":1}}],[\"只要满足其中一个注解即可通过验证\",{\"1\":{\"624\":1}}],[\"只要你在组件中把\",{\"1\":{\"474\":1}}],[\"只要加上\",{\"1\":{\"432\":1}}],[\"只要\",{\"1\":{\"374\":1,\"389\":1}}],[\"只要开启了\",{\"1\":{\"273\":1}}],[\"只要保证是用同一个\",{\"1\":{\"168\":1}}],[\"只要服务节点不增减\",{\"1\":{\"133\":1}}],[\"只不过是立即执行\",{\"1\":{\"92\":1}}],[\"只需三个步骤\",{\"1\":{\"709\":1}}],[\"只需懂\",{\"1\":{\"636\":1,\"643\":1}}],[\"只需设计好表结构\",{\"1\":{\"608\":1}}],[\"只需把注释写好\",{\"1\":{\"608\":1}}],[\"只需在\",{\"1\":{\"608\":1}}],[\"只需在浏览器配置监控模版\",{\"1\":{\"452\":1,\"464\":1}}],[\"只需为\",{\"1\":{\"608\":1}}],[\"只需一个注解即可完成数据自动缓存\",{\"1\":{\"608\":1}}],[\"只需提供调用的方法名称\",{\"1\":{\"286\":1}}],[\"只需要这一行代码即可上传成功\",{\"1\":{\"816\":1}}],[\"只需要把你的微服务注册到\",{\"1\":{\"791\":1}}],[\"只需要将版本升级到\",{\"1\":{\"709\":1}}],[\"只需要一条\",{\"1\":{\"442\":1,\"448\":1}}],[\"只需要在管理后台的调度实例页面\",{\"1\":{\"406\":1}}],[\"只需要定义好资源文件\",{\"1\":{\"165\":1}}],[\"只需要添加一个实现即可\",{\"1\":{\"165\":1}}],[\"只需要根据你的\",{\"0\":{\"77\":1}}],[\"只需几分钟就可一键部署\",{\"1\":{\"57\":1}}],[\"只需使用这些协议并把它们做好\",{\"1\":{\"54\":1}}],[\"只需配置下就能立刻适配一款\",{\"1\":{\"53\":1}}],[\"现已捐赠至\",{\"1\":{\"807\":1}}],[\"现有插件\",{\"0\":{\"765\":1}}],[\"现有的\",{\"1\":{\"54\":1}}],[\"现代意大利语的奠基者\",{\"1\":{\"352\":1}}],[\"现在你要考虑的是把它组合在一起项目里面\",{\"1\":{\"792\":1}}],[\"现在一步一步将它开源出来\",{\"1\":{\"786\":1}}],[\"现在比如你修改了\",{\"1\":{\"783\":1}}],[\"现在已经优化\",{\"1\":{\"783\":1}}],[\"现在已经全部修复\",{\"1\":{\"61\":1}}],[\"现在做一个归纳总结\",{\"1\":{\"783\":1}}],[\"现在的邮件插件使用起来更加简单方便\",{\"1\":{\"774\":1}}],[\"现在开始逐步接入\",{\"1\":{\"764\":1}}],[\"现在需要进行变更\",{\"1\":{\"709\":1}}],[\"现在直接放入右键减少层级\",{\"1\":{\"696\":1}}],[\"现在可以直接\",{\"1\":{\"448\":1}}],[\"现在我们可以创建一个汇总任务\",{\"1\":{\"406\":1}}],[\"现在这个质数统计的总任务已经执行完了\",{\"1\":{\"406\":1}}],[\"现在是\",{\"1\":{\"154\":1}}],[\"现在\",{\"1\":{\"61\":1,\"727\":4,\"757\":1}}],[\"保证了数据的安全性\",{\"1\":{\"794\":1}}],[\"保证服务高可用\",{\"1\":{\"321\":1}}],[\"保证服务不会宕掉\",{\"1\":{\"263\":1}}],[\"保护您的信息安全\",{\"1\":{\"577\":1}}],[\"保护接口调用和前后端数据传输的合理性及安全性\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"保护后端服务不会再接到请求\",{\"1\":{\"265\":1}}],[\"保存上传记录\",{\"1\":{\"816\":1,\"817\":1}}],[\"保存一些属性\",{\"1\":{\"816\":1}}],[\"保存到相对路径下\",{\"1\":{\"816\":1}}],[\"保存任务的执行快照\",{\"1\":{\"405\":1}}],[\"保存的是一对\",{\"1\":{\"195\":1}}],[\"保存的发起者一方法的事务信息\",{\"1\":{\"70\":1}}],[\"保存了日志\",{\"1\":{\"61\":1}}],[\"保持甜美的工具类库\",{\"1\":{\"4\":1}}],[\"保持社区中立\",{\"1\":{\"2\":1,\"37\":1}}],[\"答案如下\",{\"1\":{\"493\":1}}],[\"答案自然数据同步脱不了干系\",{\"1\":{\"247\":1}}],[\"答案在buildrealurl\",{\"1\":{\"235\":1}}],[\"答\",{\"1\":{\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"789\":4}}],[\"接受到了来自社区很多朋友的建议\",{\"1\":{\"783\":1}}],[\"接下去就是\",{\"1\":{\"493\":1}}],[\"接下来我们一起来看看吧\",{\"1\":{\"768\":1}}],[\"接下来让我们一起来看一下本次更新的内容吧\",{\"1\":{\"743\":1}}],[\"接下来让我们看看\",{\"1\":{\"236\":1}}],[\"接下来让我们看一下divideplugin\",{\"1\":{\"233\":1,\"234\":1}}],[\"接下来的迭代将会变的更加迅速\",{\"1\":{\"514\":1}}],[\"接下来的逻辑会调用到我们这块实现的\",{\"1\":{\"144\":1}}],[\"接下来看看探活任务实现\",{\"1\":{\"227\":1}}],[\"接下来会通知所有扩展插件的相关事件变动\",{\"1\":{\"148\":1}}],[\"接下来就是网关\",{\"1\":{\"140\":1}}],[\"接下来只要请求它就搞定\",{\"1\":{\"131\":1}}],[\"接下来是最重要的事务日志的存储\",{\"1\":{\"64\":1}}],[\"接下来回答一下\",{\"1\":{\"60\":1}}],[\"接入只需简单\",{\"1\":{\"409\":1,\"419\":1}}],[\"接收用户的反馈\",{\"1\":{\"456\":1}}],[\"接收任务\",{\"1\":{\"406\":1}}],[\"接收到\",{\"1\":{\"172\":1}}],[\"接收到的接口信息同步给\",{\"1\":{\"150\":1}}],[\"接着寻找\",{\"1\":{\"664\":1}}],[\"接着看看\",{\"1\":{\"170\":1}}],[\"接着看\",{\"1\":{\"142\":1}}],[\"接着就是\",{\"1\":{\"136\":1}}],[\"接着分析下\",{\"1\":{\"131\":1}}],[\"接口类配置\",{\"0\":{\"773\":1}}],[\"接口与实现都只需要添加\",{\"1\":{\"709\":1}}],[\"接口服务依赖\",{\"1\":{\"709\":1}}],[\"接口不是梦\",{\"1\":{\"692\":1}}],[\"接口优化字段支持\",{\"0\":{\"653\":1},\"1\":{\"651\":1}}],[\"接口配置\",{\"1\":{\"624\":1}}],[\"接口签名所有方法均迁移至\",{\"1\":{\"624\":1}}],[\"接口文档\",{\"1\":{\"608\":1,\"609\":1}}],[\"接口化支持扩展其他厂家\",{\"1\":{\"608\":1}}],[\"接口化两步即可完成自定义扩展\",{\"1\":{\"608\":1}}],[\"接口中的simplerequest\",{\"1\":{\"428\":1}}],[\"接口中定义的方法一一对应\",{\"1\":{\"157\":1}}],[\"接口供用户自定义个性化实现\",{\"1\":{\"409\":1,\"419\":1}}],[\"接口供我们获取\",{\"1\":{\"54\":1}}],[\"接口即可\",{\"1\":{\"409\":1,\"419\":1}}],[\"接口自定义扩展实现\",{\"1\":{\"409\":1,\"419\":1}}],[\"接口可自定义扩展实现\",{\"1\":{\"409\":2,\"419\":2}}],[\"接口只需要携带\",{\"1\":{\"368\":1}}],[\"接口动态鉴权是否使用严格模式配置\",{\"1\":{\"368\":1}}],[\"接口及模型类元的情况\",{\"1\":{\"283\":1}}],[\"接口调用\",{\"1\":{\"272\":1,\"370\":1,\"385\":1}}],[\"接口的实现\",{\"1\":{\"713\":1}}],[\"接口的请求量是平时是数倍\",{\"1\":{\"262\":1}}],[\"接口的私有方法\",{\"1\":{\"79\":1,\"81\":1}}],[\"接口对应访问\",{\"0\":{\"245\":1}}],[\"接口定义\",{\"1\":{\"156\":1}}],[\"接口并实现了\",{\"1\":{\"136\":1}}],[\"接口同样定义了\",{\"1\":{\"130\":1}}],[\"接口\",{\"1\":{\"124\":1,\"131\":1,\"148\":1,\"156\":1,\"170\":1,\"200\":1,\"219\":1,\"234\":2,\"259\":1,\"286\":1,\"653\":1,\"783\":2,\"792\":1}}],[\"接口逻辑分析\",{\"1\":{\"150\":1}}],[\"接口逻辑分析完了\",{\"1\":{\"127\":1}}],[\"接口逻辑\",{\"0\":{\"122\":1}}],[\"接口地址\",{\"1\":{\"117\":1}}],[\"接口上配置\",{\"1\":{\"103\":1}}],[\"接口项目引入\",{\"1\":{\"74\":1}}],[\"接口方法上是添加\",{\"1\":{\"709\":1}}],[\"接口方法上添加\",{\"1\":{\"709\":1}}],[\"接口方法会应对一条元数据\",{\"1\":{\"278\":1}}],[\"接口方\",{\"1\":{\"62\":1}}],[\"yft\",{\"0\":{\"818\":1,\"819\":1},\"1\":{\"820\":1}}],[\"yhan219\",{\"1\":{\"615\":1}}],[\"yomahub\",{\"1\":{\"467\":1,\"471\":1,\"473\":1,\"478\":1,\"480\":1,\"495\":1}}],[\"yourcontextbean\",{\"1\":{\"488\":8}}],[\"yourcontext\",{\"1\":{\"474\":1}}],[\"yourself\",{\"1\":{\"144\":1}}],[\"your\",{\"1\":{\"77\":3,\"208\":1,\"459\":1,\"506\":2}}],[\"you\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"101\":1,\"144\":1,\"161\":1,\"199\":1,\"205\":1,\"208\":1,\"210\":1,\"245\":1,\"707\":1,\"715\":1,\"788\":2}}],[\"yes\",{\"1\":{\"406\":1}}],[\"yezj\",{\"1\":{\"308\":1}}],[\"ywj1352\",{\"1\":{\"317\":1}}],[\"yanhom\",{\"1\":{\"411\":2,\"412\":2,\"413\":2,\"420\":3,\"421\":4,\"422\":2}}],[\"yanb07>sb\",{\"1\":{\"271\":1}}],[\"yarn\",{\"1\":{\"331\":1,\"339\":1}}],[\"yarne\",{\"1\":{\"308\":1}}],[\"yaml\",{\"1\":{\"315\":1,\"442\":1,\"664\":1,\"772\":1,\"788\":1}}],[\"yuyunshize\",{\"1\":{\"587\":1}}],[\"yutingnie\",{\"1\":{\"458\":2,\"461\":1}}],[\"yu1183688986\",{\"1\":{\"317\":1}}],[\"yu199195\",{\"0\":{\"73\":1},\"1\":{\"60\":1,\"77\":1,\"317\":1,\"703\":1,\"788\":1}}],[\"yunlongn\",{\"1\":{\"317\":1}}],[\"yul\",{\"1\":{\"308\":1}}],[\"yyy\",{\"1\":{\"308\":1}}],[\"yield\",{\"1\":{\"86\":1}}],[\"yml的文件\",{\"1\":{\"709\":1}}],[\"yml启动服务端完成部署\",{\"1\":{\"583\":1}}],[\"yml文件\",{\"1\":{\"583\":1,\"585\":1}}],[\"yml文本文件\",{\"1\":{\"582\":1}}],[\"yml中配置\",{\"1\":{\"103\":1}}],[\"yml\",{\"0\":{\"772\":1},\"1\":{\"53\":1,\"54\":1,\"55\":1,\"57\":1,\"64\":1,\"77\":1,\"92\":2,\"198\":2,\"208\":2,\"326\":1,\"441\":1,\"445\":1,\"449\":1,\"452\":1,\"458\":2,\"459\":1,\"464\":1,\"608\":2,\"664\":4,\"702\":1,\"709\":2,\"771\":1,\"814\":1}}],[\"更简洁和现代化\",{\"1\":{\"833\":1}}],[\"更好的编辑体验\",{\"1\":{\"829\":1}}],[\"更好的用户体验\",{\"0\":{\"460\":1}}],[\"更是一种开源的态度\",{\"1\":{\"792\":1}}],[\"更合理的模块划分\",{\"0\":{\"713\":1}}],[\"更有更新视频介绍\",{\"1\":{\"672\":1}}],[\"更有云边协同等功能让人充满想象\",{\"1\":{\"453\":1}}],[\"更方便开发者阅读源码\",{\"1\":{\"624\":1}}],[\"更方便的分辨不同日志等级\",{\"1\":{\"624\":1}}],[\"更换默认用户头像\",{\"1\":{\"604\":1}}],[\"更改包名\",{\"1\":{\"809\":1}}],[\"更改项目名\",{\"1\":{\"809\":1}}],[\"更改项目地址\",{\"1\":{\"604\":1}}],[\"更改为通用格式\",{\"1\":{\"615\":1}}],[\"更改系统所有服务日志配置文件命名为\",{\"1\":{\"604\":1}}],[\"更改\",{\"1\":{\"604\":1}}],[\"更改密码支持\",{\"1\":{\"314\":1}}],[\"更正jdbcusersservice的username\",{\"1\":{\"535\":1}}],[\"更加方便执行其它操作\",{\"1\":{\"817\":1}}],[\"更加方便或者有信心融入进来\",{\"1\":{\"783\":1}}],[\"更加灵活和可扩展\",{\"1\":{\"732\":1}}],[\"更加友好\",{\"1\":{\"487\":1,\"488\":1}}],[\"更加有保障\",{\"1\":{\"484\":1}}],[\"更加稳定\",{\"1\":{\"484\":1}}],[\"更加优雅和方便\",{\"1\":{\"483\":1}}],[\"更完善全面的集群\",{\"1\":{\"460\":1}}],[\"更完美\",{\"1\":{\"60\":1}}],[\"更多\",{\"1\":{\"718\":1}}],[\"更多详情\",{\"0\":{\"661\":1,\"665\":1,\"673\":1,\"681\":1,\"690\":1,\"698\":1}}],[\"更多详情请看\",{\"1\":{\"652\":1}}],[\"更多案例\",{\"0\":{\"642\":1,\"649\":1}}],[\"更多有意思的课题进行中\",{\"0\":{\"599\":1}}],[\"更多使用姿势\",{\"1\":{\"578\":1}}],[\"更多版本新功能更新欢迎探索\",{\"1\":{\"458\":1}}],[\"更多的使用请你参考\",{\"1\":{\"789\":1}}],[\"更多的还请看\",{\"1\":{\"789\":1}}],[\"更多的新特性和功能不在这里一\",{\"1\":{\"741\":1}}],[\"更多的功能和详细的文档\",{\"1\":{\"727\":1}}],[\"更多的特性和\",{\"1\":{\"461\":1}}],[\"更多的\",{\"0\":{\"458\":1}}],[\"更多配置详细步骤参考官网\",{\"1\":{\"457\":1}}],[\"更多配置信息可以查看项目文档\",{\"1\":{\"333\":1}}],[\"更多新功能欢迎探索\",{\"1\":{\"448\":1}}],[\"更稳定更易用\",{\"0\":{\"439\":1,\"446\":1}}],[\"更易理解的错误信息\",{\"1\":{\"372\":1,\"387\":1}}],[\"更便捷产品使用体验\",{\"1\":{\"367\":1,\"382\":1}}],[\"更名为\",{\"1\":{\"352\":1}}],[\"更优的\",{\"1\":{\"177\":1}}],[\"更新详情\",{\"0\":{\"836\":1}}],[\"更新完了以后\",{\"1\":{\"791\":1}}],[\"更新了相关的文档信息\",{\"1\":{\"779\":1}}],[\"更新主要内容如下\",{\"1\":{\"651\":1,\"663\":1}}],[\"更新登录策略返回值\",{\"1\":{\"617\":1}}],[\"更新日志\",{\"0\":{\"602\":1,\"614\":1}}],[\"更新内容如下\",{\"1\":{\"574\":1}}],[\"更新内容\",{\"0\":{\"574\":1,\"809\":1,\"832\":1}}],[\"更新和升级\",{\"1\":{\"529\":1,\"535\":1,\"541\":1,\"547\":1,\"557\":1,\"567\":1}}],[\"更新列表\",{\"1\":{\"509\":1}}],[\"更新方式\",{\"1\":{\"438\":1}}],[\"更新时间\",{\"1\":{\"278\":1}}],[\"更新全部熔断配置\",{\"1\":{\"266\":1}}],[\"更新全部流控配置\",{\"1\":{\"266\":1}}],[\"更新服务状态\",{\"1\":{\"227\":2}}],[\"更新网关数据\",{\"1\":{\"209\":1}}],[\"更新插件规则\",{\"1\":{\"206\":1}}],[\"更新缓存前会检测是否变动\",{\"1\":{\"148\":1}}],[\"更新数据库\",{\"1\":{\"125\":1}}],[\"更新\",{\"0\":{\"508\":1,\"624\":1},\"1\":{\"92\":1,\"162\":1,\"315\":2,\"316\":1}}],[\"更新为\",{\"1\":{\"64\":1}}],[\"更新成功的\",{\"1\":{\"63\":1}}],[\"更新以及数据的自动迁移\",{\"1\":{\"47\":1}}],[\"更新博客\",{\"1\":{\"42\":1}}],[\"更新项目\",{\"1\":{\"42\":1}}],[\"横排第二个\",{\"1\":{\"60\":1}}],[\"帮助设备运营商简化调试流程\",{\"1\":{\"794\":1}}],[\"帮助他们简化设备调试流程\",{\"1\":{\"794\":1}}],[\"帮助使用者尽可能多的了解\",{\"1\":{\"396\":1}}],[\"帮助您节省更多时间\",{\"1\":{\"370\":1,\"385\":1}}],[\"帮助很大\",{\"1\":{\"308\":1}}],[\"帮助开发人员快速定位问题\",{\"1\":{\"4\":1}}],[\"帮忙投下票\",{\"1\":{\"60\":1}}],[\"搜索工具\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"搜索标识对应的类对象\",{\"1\":{\"183\":1}}],[\"搜索到这个类实例化的地方\",{\"1\":{\"156\":1}}],[\"搜索\",{\"1\":{\"60\":1,\"336\":1,\"340\":1}}],[\"搜索引擎类目排名第一并长期占据该类目热搜榜首\",{\"1\":{\"46\":1}}],[\"搜索引擎\",{\"1\":{\"46\":1,\"48\":1}}],[\"轻量简单\",{\"1\":{\"409\":1,\"419\":1}}],[\"轻量级\",{\"0\":{\"319\":1}}],[\"轻量级的开源\",{\"1\":{\"277\":1}}],[\"轻量级的分布式日志标记追踪神器\",{\"1\":{\"4\":1}}],[\"轻松搞定高并发分布式事务\",{\"0\":{\"59\":1}}],[\"当用户实现了该接口\",{\"1\":{\"763\":1}}],[\"当用户通过这样方式部署到云服务器时\",{\"1\":{\"57\":1}}],[\"当字段state值为1时\",{\"1\":{\"741\":1}}],[\"当替换后\",{\"1\":{\"678\":1}}],[\"当模组没完全加载时\",{\"1\":{\"598\":1}}],[\"当文件改变的时候\",{\"1\":{\"520\":1}}],[\"当组件出现exception的时候\",{\"1\":{\"509\":1}}],[\"当某个组件抛出异常时\",{\"1\":{\"506\":1}}],[\"当其它事情处理完后\",{\"1\":{\"406\":1}}],[\"当业务请求发起时候\",{\"1\":{\"287\":1}}],[\"当我们通过以上\",{\"1\":{\"264\":1}}],[\"当单位时长内出现异常的请求的数量的达到阈值则判定服务异常\",{\"1\":{\"264\":1}}],[\"当单位统计时长内异常请求的比例大于阈值则我们判定服务异常\",{\"1\":{\"264\":1}}],[\"当单位统计时长内请求数目大于设置的最小请求数目\",{\"1\":{\"264\":1}}],[\"当满足匹配规则时\",{\"1\":{\"258\":1}}],[\"当匹配到请求后\",{\"1\":{\"257\":1}}],[\"当匹配上的时候\",{\"1\":{\"114\":1}}],[\"当请求到来的时候\",{\"1\":{\"263\":1}}],[\"当请求进来时\",{\"1\":{\"251\":1}}],[\"当请求头的\",{\"1\":{\"223\":1}}],[\"当前最新版本为\",{\"1\":{\"580\":1}}],[\"当前版本百度网盘下载\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"当前任务是否已经统计完成\",{\"1\":{\"406\":1}}],[\"当前规则上次调用时间\",{\"1\":{\"252\":1}}],[\"当前规则令牌剩余数量存储key\",{\"1\":{\"252\":1}}],[\"当前有哪些插件可用\",{\"1\":{\"216\":1}}],[\"当前节点和子节点的内容修改\",{\"1\":{\"205\":1,\"206\":1}}],[\"当时很简单的略过了它的实现\",{\"1\":{\"164\":1}}],[\"当使用\",{\"1\":{\"134\":1}}],[\"当多个选择器的时候\",{\"1\":{\"114\":1}}],[\"当考虑到\",{\"1\":{\"71\":1}}],[\"当\",{\"1\":{\"67\":1,\"71\":1,\"92\":1,\"156\":1,\"158\":1,\"519\":1,\"604\":1}}],[\"当高并发的时候\",{\"1\":{\"64\":1}}],[\"当你有多个厂商同时存在\",{\"1\":{\"748\":1}}],[\"当你免费使用着开源软件并得到价值的时候\",{\"1\":{\"456\":1}}],[\"当你的服务\",{\"1\":{\"64\":1}}],[\"当你集群同时挂掉\",{\"1\":{\"63\":1}}],[\"当然我们也提供了对应的\",{\"1\":{\"452\":1}}],[\"当然因为篇幅问题\",{\"1\":{\"77\":1}}],[\"当然配置属性很多\",{\"1\":{\"74\":1}}],[\"当然\",{\"1\":{\"64\":1,\"133\":1,\"482\":1,\"764\":1,\"783\":1}}],[\"当然还有\",{\"1\":{\"54\":1}}],[\"ucloud\",{\"1\":{\"808\":1}}],[\"uos\",{\"1\":{\"639\":1,\"646\":1}}],[\"udp\",{\"1\":{\"574\":1,\"577\":1}}],[\"udh\",{\"1\":{\"333\":1}}],[\"ui\",{\"0\":{\"694\":1},\"1\":{\"448\":2,\"458\":2,\"460\":1,\"461\":1,\"462\":1,\"493\":2,\"655\":1,\"692\":1,\"706\":1}}],[\"ubuntu\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"639\":1,\"646\":1}}],[\"u3breeze\",{\"1\":{\"317\":2}}],[\"utf8mb4\",{\"1\":{\"278\":20}}],[\"utils\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1,\"637\":3,\"749\":1,\"822\":1}}],[\"util\",{\"1\":{\"66\":5,\"67\":4,\"71\":2,\"167\":1,\"171\":1}}],[\"u\",{\"1\":{\"271\":1,\"296\":1}}],[\"unreachable\",{\"1\":{\"458\":1}}],[\"unused\",{\"1\":{\"458\":1}}],[\"undertow\",{\"1\":{\"409\":1,\"411\":1,\"413\":1,\"419\":1,\"420\":1,\"608\":1}}],[\"unsafebytearrayinputstream\",{\"1\":{\"294\":2}}],[\"uncle\",{\"1\":{\"308\":1}}],[\"uncacheruledata\",{\"1\":{\"206\":1}}],[\"unchecked\",{\"1\":{\"155\":1,\"157\":1,\"200\":1,\"209\":1}}],[\"unknown\",{\"1\":{\"199\":1}}],[\"unmodifiablelist\",{\"1\":{\"155\":1,\"200\":1,\"209\":1,\"259\":1}}],[\"unexpected\",{\"1\":{\"141\":1,\"155\":1,\"157\":1,\"200\":1,\"209\":1}}],[\"unisms\",{\"1\":{\"776\":1}}],[\"unisms短信差异化配置\",{\"1\":{\"727\":1}}],[\"universal的接口redisutil\",{\"1\":{\"763\":1}}],[\"uni\",{\"0\":{\"732\":1},\"1\":{\"727\":2,\"732\":1}}],[\"uniconfig\",{\"1\":{\"727\":2,\"773\":4}}],[\"unicode\",{\"1\":{\"82\":1,\"84\":1,\"278\":10}}],[\"uniquekeyset\",{\"1\":{\"723\":1}}],[\"unit\",{\"1\":{\"74\":2}}],[\"unix\",{\"1\":{\"54\":1,\"406\":1}}],[\"uploadplatform\",{\"1\":{\"816\":2}}],[\"uploadimage\",{\"1\":{\"816\":1}}],[\"upload2\",{\"1\":{\"816\":2}}],[\"upload\",{\"1\":{\"816\":11}}],[\"uploader\",{\"1\":{\"368\":1,\"373\":1,\"388\":1}}],[\"up\",{\"1\":{\"266\":3}}],[\"upgrade\",{\"1\":{\"232\":4,\"458\":1}}],[\"upstreamlist\",{\"1\":{\"131\":2,\"133\":2,\"134\":6,\"135\":5,\"164\":3,\"219\":2,\"224\":2,\"227\":3,\"229\":10,\"235\":3}}],[\"upstreamcachemanager\",{\"1\":{\"131\":2,\"219\":1,\"224\":1,\"225\":2,\"226\":3,\"227\":2,\"235\":1}}],[\"upstreamcheckutils\",{\"1\":{\"227\":1,\"228\":3,\"316\":1}}],[\"upstreamcheckservice\",{\"1\":{\"123\":1,\"124\":1,\"125\":2}}],[\"upstreamcheck\",{\"1\":{\"123\":1,\"125\":1}}],[\"upstreamhost\",{\"1\":{\"125\":1}}],[\"upstreamurl\",{\"1\":{\"125\":2}}],[\"upstream\",{\"1\":{\"123\":3,\"125\":4,\"135\":4,\"225\":7,\"226\":5,\"227\":4,\"235\":2,\"315\":2}}],[\"updaterulemap\",{\"1\":{\"209\":4,\"210\":1}}],[\"updaterulecache\",{\"1\":{\"92\":1}}],[\"updatemetadatamap\",{\"1\":{\"208\":1}}],[\"updatemetadatacache\",{\"1\":{\"92\":1}}],[\"updatecacheifneed\",{\"1\":{\"148\":1}}],[\"updatecachewithjson\",{\"1\":{\"148\":3}}],[\"updatecache\",{\"1\":{\"141\":2}}],[\"updatelock\",{\"1\":{\"135\":3}}],[\"updated`\",{\"1\":{\"278\":1}}],[\"updated\",{\"1\":{\"92\":5,\"126\":1,\"141\":1,\"148\":6}}],[\"update\",{\"1\":{\"92\":5,\"123\":3,\"125\":3,\"141\":1,\"142\":1,\"153\":4,\"154\":4,\"158\":1,\"161\":1,\"162\":1,\"209\":1,\"278\":1,\"438\":1,\"458\":5,\"603\":5,\"604\":24,\"616\":15,\"617\":36}}],[\"updatepluginmap\",{\"1\":{\"210\":2}}],[\"updateplugin\",{\"1\":{\"153\":1}}],[\"updateplugincache\",{\"1\":{\"92\":1,\"141\":2}}],[\"updateparticipant\",{\"1\":{\"70\":1}}],[\"updateappauthcache\",{\"1\":{\"92\":1}}],[\"updateselectorcache\",{\"1\":{\"92\":1}}],[\"updateselective\",{\"1\":{\"92\":1,\"123\":1,\"125\":2,\"153\":1}}],[\"updatestatus\",{\"1\":{\"67\":1}}],[\"uriutils\",{\"1\":{\"259\":1,\"266\":1,\"273\":1}}],[\"uri\",{\"1\":{\"114\":1,\"123\":3,\"124\":3,\"125\":3,\"126\":1,\"136\":2,\"236\":1,\"256\":1,\"259\":2,\"273\":4,\"316\":2,\"816\":1}}],[\"url=\",{\"1\":{\"788\":1}}],[\"urlencoderutil\",{\"1\":{\"722\":1}}],[\"urlencoder\",{\"1\":{\"722\":1}}],[\"urlencoded\",{\"1\":{\"149\":1,\"692\":1}}],[\"urlinputwithmethod\",{\"1\":{\"694\":1}}],[\"urlpath\",{\"1\":{\"105\":1,\"108\":6,\"136\":2,\"236\":5}}],[\"urls\",{\"1\":{\"92\":1,\"140\":1,\"161\":1,\"183\":4,\"788\":1}}],[\"url\",{\"1\":{\"64\":3,\"74\":1,\"77\":1,\"121\":1,\"131\":1,\"136\":1,\"140\":1,\"148\":4,\"156\":2,\"171\":23,\"172\":1,\"173\":2,\"180\":2,\"183\":6,\"198\":2,\"200\":1,\"208\":2,\"210\":1,\"219\":2,\"224\":3,\"227\":1,\"228\":8,\"230\":1,\"235\":6,\"236\":3,\"253\":1,\"313\":1,\"316\":1,\"357\":2,\"426\":1,\"428\":1,\"438\":1,\"582\":1,\"651\":2,\"660\":1,\"663\":2,\"667\":1,\"675\":1,\"677\":3,\"683\":1,\"692\":3,\"694\":1,\"709\":1,\"740\":1,\"741\":1,\"750\":1,\"816\":2,\"817\":1}}],[\"us3\",{\"1\":{\"808\":1}}],[\"uss\",{\"1\":{\"808\":1}}],[\"usr\",{\"1\":{\"199\":1}}],[\"usessl=false\",{\"1\":{\"582\":1,\"788\":1}}],[\"useaffectedrows=true\",{\"1\":{\"582\":1}}],[\"used\",{\"1\":{\"156\":2}}],[\"useragentutil\",{\"1\":{\"723\":1}}],[\"userdetails\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"userdto\",{\"1\":{\"272\":7}}],[\"usereventhandler\",{\"1\":{\"327\":1,\"328\":1}}],[\"users\",{\"1\":{\"199\":1,\"271\":1}}],[\"user\",{\"1\":{\"150\":1,\"171\":2,\"173\":2,\"199\":1,\"249\":1,\"313\":3,\"314\":1,\"327\":1,\"328\":1,\"567\":1,\"624\":1,\"709\":2,\"741\":1,\"789\":1}}],[\"userid\",{\"1\":{\"109\":2,\"272\":3}}],[\"userid=10\",{\"1\":{\"231\":1,\"245\":1}}],[\"userid=1\",{\"1\":{\"104\":1,\"105\":2,\"107\":1,\"108\":7,\"109\":2,\"271\":1,\"272\":1}}],[\"username=\",{\"1\":{\"788\":1}}],[\"username\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"326\":2,\"432\":1,\"433\":1,\"582\":1,\"624\":1,\"709\":1,\"740\":1,\"741\":1,\"788\":1}}],[\"use\",{\"1\":{\"71\":1,\"101\":1,\"126\":1,\"161\":1,\"198\":1,\"199\":1,\"205\":1,\"208\":1,\"210\":1,\"313\":2,\"458\":1,\"788\":1}}],[\"useunicode=true\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"582\":1,\"709\":1,\"788\":1}}],[\"using\",{\"1\":{\"57\":3,\"199\":2,\"278\":1,\"334\":1}}],[\"发展成为一个功能完备的平台\",{\"1\":{\"633\":1}}],[\"发展路线\",{\"0\":{\"493\":1}}],[\"发版记录\",{\"0\":{\"420\":1}}],[\"发版活动\",{\"1\":{\"41\":1}}],[\"发起远程调用\",{\"1\":{\"293\":2}}],[\"发起\",{\"1\":{\"231\":1}}],[\"发起调用\",{\"1\":{\"231\":1}}],[\"发送短信\",{\"0\":{\"761\":1}}],[\"发送请求移除默认请求头\",{\"1\":{\"683\":1}}],[\"发送消息等等\",{\"1\":{\"442\":1}}],[\"发送数据对象\",{\"1\":{\"162\":1}}],[\"发送变动数据\",{\"1\":{\"158\":1}}],[\"发送\",{\"1\":{\"142\":1,\"438\":1,\"628\":1}}],[\"发送给\",{\"1\":{\"127\":1}}],[\"发现其中很多工作\",{\"1\":{\"396\":1}}],[\"发现这种模式看似全面\",{\"1\":{\"367\":1,\"382\":1}}],[\"发现了些缺点\",{\"1\":{\"175\":1}}],[\"发现并不能达到这个效果\",{\"1\":{\"168\":1}}],[\"发现没有变化则睡眠\",{\"1\":{\"149\":1}}],[\"发现负载均衡策略确实生效了\",{\"1\":{\"118\":1}}],[\"发现\",{\"1\":{\"118\":1,\"167\":1,\"239\":1}}],[\"发布记录\",{\"0\":{\"410\":1}}],[\"发布的时效性\",{\"1\":{\"367\":1,\"382\":1}}],[\"发布背景\",{\"1\":{\"358\":1,\"367\":1,\"382\":1}}],[\"发布\",{\"0\":{\"341\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"425\":1,\"439\":1,\"440\":1,\"446\":1,\"450\":1,\"601\":1,\"611\":1,\"662\":1,\"666\":1,\"682\":1,\"700\":1,\"719\":1}}],[\"发布欢迎加入文章\",{\"1\":{\"304\":1}}],[\"发布一个\",{\"1\":{\"209\":1}}],[\"发布事件\",{\"0\":{\"154\":1},\"1\":{\"200\":1}}],[\"发布事件后通过监听器完成后续操作\",{\"1\":{\"124\":1,\"125\":1}}],[\"发布时间\",{\"1\":{\"79\":1}}],[\"发布到\",{\"1\":{\"57\":1}}],[\"发行候选版\",{\"1\":{\"79\":1}}],[\"x版本\",{\"0\":{\"783\":1}}],[\"xa\",{\"1\":{\"718\":1}}],[\"ximfengyao\",{\"1\":{\"458\":2}}],[\"xiaomi\",{\"1\":{\"723\":1}}],[\"xiaochun\",{\"1\":{\"308\":1}}],[\"xiaoyu\",{\"1\":{\"5\":1,\"10\":1,\"64\":1,\"66\":1,\"67\":1,\"71\":1,\"74\":1,\"77\":1,\"154\":1,\"156\":1,\"200\":2,\"308\":2,\"783\":1}}],[\"xnio\",{\"1\":{\"354\":1,\"397\":1,\"608\":1}}],[\"xss\",{\"1\":{\"354\":1}}],[\"xcsnx\",{\"1\":{\"317\":1}}],[\"xuyanwu<\",{\"1\":{\"810\":1}}],[\"xuyanwu\",{\"1\":{\"808\":2,\"812\":2}}],[\"xuyicheng1995\",{\"1\":{\"317\":1}}],[\"xuziyang\",{\"1\":{\"317\":1}}],[\"x\",{\"0\":{\"355\":1,\"398\":1,\"402\":1,\"807\":1},\"1\":{\"167\":5,\"236\":2,\"321\":2,\"383\":1,\"420\":1,\"489\":1,\"493\":2,\"505\":2,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1,\"612\":7,\"722\":1,\"724\":1,\"740\":1,\"768\":1,\"770\":2,\"776\":1,\"783\":1,\"797\":3,\"798\":4,\"799\":3,\"800\":1,\"807\":1,\"808\":4,\"810\":1,\"811\":1,\"812\":2,\"814\":2}}],[\"xxtea\",{\"1\":{\"723\":1}}],[\"xxl\",{\"1\":{\"608\":1}}],[\"xxljob\",{\"1\":{\"603\":1,\"615\":1,\"620\":1}}],[\"xxpluginconfiguration\",{\"1\":{\"130\":1}}],[\"xx\",{\"1\":{\"130\":2}}],[\"xxxvalueprovider\",{\"1\":{\"722\":1}}],[\"xxxcopier\",{\"1\":{\"722\":1}}],[\"xxxxx\",{\"1\":{\"709\":2,\"740\":1}}],[\"xxxxxxxx\",{\"1\":{\"740\":1,\"772\":1}}],[\"xxxxxx\",{\"1\":{\"432\":1}}],[\"xxxx\",{\"1\":{\"582\":1,\"585\":1,\"709\":1}}],[\"xxxl\",{\"1\":{\"308\":1}}],[\"xxxdatahandler\",{\"1\":{\"162\":1}}],[\"xxx\",{\"1\":{\"57\":1,\"304\":1,\"582\":2}}],[\"xml\",{\"0\":{\"188\":1},\"1\":{\"64\":1,\"130\":1,\"198\":1,\"208\":2,\"254\":1,\"255\":1,\"372\":1,\"374\":1,\"387\":1,\"389\":1,\"397\":1,\"438\":1,\"520\":1,\"557\":1,\"567\":1,\"604\":1,\"608\":1,\"609\":1,\"789\":1,\"814\":1}}],[\"称为\",{\"1\":{\"57\":1,\"83\":1,\"85\":1,\"86\":2,\"87\":2,\"88\":2,\"89\":2}}],[\"同日加入\",{\"1\":{\"632\":1}}],[\"同样的需要在当前目录下新建app\",{\"1\":{\"583\":1}}],[\"同一组件不同tag\",{\"1\":{\"492\":1}}],[\"同一个组件复用时\",{\"0\":{\"490\":1}}],[\"同一个线程里分别调用2个chain\",{\"1\":{\"476\":1}}],[\"同一个\",{\"1\":{\"133\":1}}],[\"同一个ip得到的节点就可以保持不变\",{\"1\":{\"133\":1}}],[\"同理其它的\",{\"1\":{\"406\":1}}],[\"同\",{\"1\":{\"220\":1}}],[\"同步套餐报错问题\",{\"1\":{\"619\":1}}],[\"同步操作使用批量处理\",{\"1\":{\"604\":1}}],[\"同步组织机构和用户api\",{\"1\":{\"535\":1}}],[\"同步的空值处理\",{\"1\":{\"529\":1}}],[\"同步的文章\",{\"1\":{\"140\":1}}],[\"同步更新到\",{\"1\":{\"508\":1}}],[\"同步更新数据库脚本\",{\"1\":{\"354\":1}}],[\"同步升级\",{\"1\":{\"354\":1}}],[\"同步错误\",{\"1\":{\"316\":2}}],[\"同步测试\",{\"1\":{\"314\":1}}],[\"同步\",{\"1\":{\"314\":1}}],[\"同步支持\",{\"1\":{\"314\":1}}],[\"同步至nacos\",{\"1\":{\"209\":1}}],[\"同步至\",{\"1\":{\"209\":2}}],[\"同步至内存\",{\"1\":{\"205\":1,\"209\":2}}],[\"同步一下元数据\",{\"1\":{\"208\":1}}],[\"同步网关数据到内存\",{\"1\":{\"210\":2}}],[\"同步网关数据\",{\"1\":{\"208\":1}}],[\"同步初始化数据\",{\"1\":{\"200\":2}}],[\"同步数据方式\",{\"1\":{\"787\":1}}],[\"同步数据的过程\",{\"1\":{\"208\":1}}],[\"同步数据不是很友好\",{\"1\":{\"208\":1}}],[\"同步数据原理\",{\"1\":{\"208\":1}}],[\"同步数据\",{\"1\":{\"200\":1,\"208\":1}}],[\"同步数据策略就分析清楚了\",{\"1\":{\"158\":1}}],[\"同步数据给\",{\"0\":{\"158\":1}}],[\"同步数据到网关原理\",{\"1\":{\"203\":1}}],[\"同步数据到网关\",{\"0\":{\"197\":1,\"203\":1}}],[\"同步数据到\",{\"1\":{\"92\":3}}],[\"同步完成结束阻塞\",{\"1\":{\"144\":1}}],[\"同步到\",{\"1\":{\"112\":1,\"316\":1}}],[\"同时前端有对应显示\",{\"1\":{\"834\":1}}],[\"同时期待更多小伙伴的参与~\",{\"1\":{\"832\":1}}],[\"同时可将编写的文档一键开启分享\",{\"1\":{\"831\":1}}],[\"同时可以覆盖多种场景\",{\"1\":{\"774\":1}}],[\"同时保留了\",{\"1\":{\"771\":1}}],[\"同时配置方式也发生了变化\",{\"1\":{\"740\":1}}],[\"同时不再强制要求数据库名分开配置\",{\"1\":{\"735\":1}}],[\"同时我们也希望开发者们能在团队中推广并分享\",{\"1\":{\"652\":1}}],[\"同时启动\",{\"1\":{\"644\":1}}],[\"同时移除对应的\",{\"1\":{\"624\":1}}],[\"同时支持动态多数据源代码生成\",{\"1\":{\"608\":1}}],[\"同时老的域名也是可以访问的\",{\"1\":{\"500\":1}}],[\"同时更换了新的项目\",{\"1\":{\"498\":1}}],[\"同时\",{\"1\":{\"397\":1,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1,\"633\":1,\"727\":4}}],[\"同时兼顾更详细错误信息的返回\",{\"1\":{\"372\":1,\"387\":1}}],[\"同时降低互相影响和干扰\",{\"1\":{\"367\":1,\"382\":1}}],[\"同时给用户带来更好的\",{\"1\":{\"367\":1,\"382\":1}}],[\"同时提供常规及\",{\"1\":{\"397\":1}}],[\"同时提供\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"409\":1,\"419\":1}}],[\"同时又是新时代的最初一位诗人\",{\"1\":{\"352\":1}}],[\"同时你需要提供\",{\"1\":{\"325\":1}}],[\"同时使用\",{\"1\":{\"282\":1}}],[\"同时设置了\",{\"1\":{\"278\":1}}],[\"同时也是项目的官网\",{\"1\":{\"739\":1}}],[\"同时也补全了测试用例\",{\"1\":{\"475\":1}}],[\"同时也提供\",{\"1\":{\"409\":1,\"419\":1}}],[\"同时也开启了线程做后台监听请求\",{\"1\":{\"149\":1}}],[\"同时也支持\",{\"1\":{\"64\":1}}],[\"同时请求的还有选择器\",{\"1\":{\"92\":1}}],[\"同时对对象进行转换和赋值\",{\"1\":{\"86\":1,\"88\":1}}],[\"同时基于\",{\"1\":{\"57\":1}}],[\"同学们就可以在开源之夏官网\",{\"1\":{\"36\":1}}],[\"云\",{\"1\":{\"808\":1}}],[\"云片短信并未能如期的创建一个完整的实现\",{\"1\":{\"750\":1}}],[\"云存储\",{\"1\":{\"608\":1}}],[\"云边协同\",{\"0\":{\"455\":1},\"1\":{\"452\":1,\"464\":1}}],[\"云上的\",{\"1\":{\"442\":1}}],[\"云计算和大数据\",{\"1\":{\"91\":1}}],[\"云容器\",{\"1\":{\"57\":1}}],[\"云原生大数据平台cloudeon\",{\"0\":{\"330\":1,\"337\":1}}],[\"云原生等领域的监控模板\",{\"1\":{\"55\":1}}],[\"云原生等热门话题\",{\"1\":{\"15\":1}}],[\"云原生\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"奖金支持\",{\"1\":{\"57\":1}}],[\"下划线\",{\"1\":{\"825\":1}}],[\"下文件名带\",{\"1\":{\"724\":1}}],[\"下文我会讲解\",{\"1\":{\"61\":1}}],[\"下拉框\",{\"1\":{\"694\":1}}],[\"下拉图标选择组件优化\",{\"1\":{\"604\":1}}],[\"下无法启动成功\",{\"1\":{\"624\":1}}],[\"下方法搜索非数字字段时\",{\"1\":{\"606\":1}}],[\"下半年重点就搞这个\",{\"0\":{\"595\":1}}],[\"下membernotin\",{\"1\":{\"557\":1}}],[\"下进行完整的测试\",{\"1\":{\"482\":1}}],[\"下标获取问题\",{\"1\":{\"476\":1}}],[\"下一个版本\",{\"0\":{\"710\":1}}],[\"下一次循环时要统计的区间为\",{\"1\":{\"406\":1}}],[\"下一秒重新开始计数\",{\"1\":{\"265\":1}}],[\"下类名的\",{\"1\":{\"163\":2}}],[\"下\",{\"1\":{\"163\":2}}],[\"下的启动\",{\"1\":{\"314\":1}}],[\"下的子模块相当于插件模块\",{\"1\":{\"217\":1}}],[\"下的\",{\"1\":{\"162\":1,\"231\":1}}],[\"下的接口\",{\"1\":{\"162\":1}}],[\"下的开源项目\",{\"1\":{\"56\":1}}],[\"下游服务节点路径被确定\",{\"1\":{\"136\":1}}],[\"下面举\",{\"1\":{\"709\":1}}],[\"下面使用genericserice\",{\"1\":{\"289\":1}}],[\"下面就带了\",{\"1\":{\"287\":1}}],[\"下面我只是列举了一下简单的调用图\",{\"1\":{\"783\":1}}],[\"下面我们一起来简单的看一下吧\",{\"1\":{\"738\":1}}],[\"下面我们关注\",{\"1\":{\"287\":1}}],[\"下面我们来看下\",{\"1\":{\"79\":1}}],[\"下面我一个个来看一下\",{\"1\":{\"266\":1}}],[\"下面来重点分析下各个配置项如何使用\",{\"1\":{\"264\":1}}],[\"下面来看看里面的代码\",{\"1\":{\"92\":1}}],[\"下面将简要介绍在\",{\"1\":{\"264\":1}}],[\"下面通过初始化redirectplugin\",{\"1\":{\"259\":1}}],[\"下面通过找到打日志的代码\",{\"1\":{\"92\":1}}],[\"下面分析一下\",{\"1\":{\"208\":1}}],[\"下面记录一下解决过程\",{\"1\":{\"208\":1}}],[\"下面详细记录一下\",{\"1\":{\"208\":1}}],[\"下面需要注意的\",{\"1\":{\"191\":1}}],[\"下面的脚本中\",{\"1\":{\"580\":1}}],[\"下面的配置默认是没有的\",{\"1\":{\"208\":1}}],[\"下面的\",{\"1\":{\"158\":1}}],[\"下面展示下网关监听数据变动的整体流程\",{\"1\":{\"149\":1}}],[\"下面展示下网关启动拉取数据的处理流程\",{\"1\":{\"148\":1}}],[\"下面构造\",{\"1\":{\"126\":1}}],[\"下面紧接着就是更新数据库\",{\"1\":{\"125\":1}}],[\"下面是\",{\"1\":{\"77\":1}}],[\"下载所需要的配置信息动态添加\",{\"1\":{\"609\":1}}],[\"下载最新的\",{\"1\":{\"583\":1,\"585\":1}}],[\"下载替换为使用后端符合\",{\"1\":{\"397\":2}}],[\"下载\",{\"0\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1},\"1\":{\"397\":1,\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1,\"609\":2,\"788\":1,\"817\":2}}],[\"下载进度显示\",{\"1\":{\"397\":1}}],[\"下载等常用方法的封装\",{\"1\":{\"373\":1,\"388\":1}}],[\"下载安装\",{\"0\":{\"323\":1}}],[\"下载数量等活跃度之外\",{\"1\":{\"56\":1}}],[\"下载量\",{\"1\":{\"56\":1}}],[\"下自动创建索引\",{\"1\":{\"47\":1}}],[\"都落后挺多的\",{\"1\":{\"792\":1}}],[\"都能在这里找到归属\",{\"1\":{\"635\":1}}],[\"都执行了\",{\"1\":{\"489\":1}}],[\"都可以在群里问\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"都会走到核心方法\",{\"1\":{\"273\":1}}],[\"都会产生新的\",{\"1\":{\"167\":1}}],[\"都需要实现其\",{\"1\":{\"170\":1}}],[\"都是有\",{\"1\":{\"266\":1}}],[\"都是按照项目默认启动的\",{\"1\":{\"151\":1}}],[\"都是由各自的\",{\"1\":{\"130\":1}}],[\"都是默认的配置\",{\"1\":{\"61\":1}}],[\"都jdk17了\",{\"0\":{\"78\":1}}],[\"都有同步仓库\",{\"1\":{\"56\":1}}],[\"都定义为\",{\"1\":{\"55\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"通用的工具方法\",{\"1\":{\"822\":1}}],[\"通用异常\",{\"1\":{\"802\":1}}],[\"通用枚举\",{\"1\":{\"802\":1}}],[\"通用常量\",{\"1\":{\"802\":1}}],[\"通用协议支持大部分邮件厂商\",{\"1\":{\"608\":1}}],[\"通道号\",{\"1\":{\"740\":1}}],[\"通常用于框架集成\",{\"1\":{\"283\":1}}],[\"通常用于实现基于产品的应用\",{\"1\":{\"215\":1}}],[\"通常由核心系统制定连接规范\",{\"1\":{\"216\":1}}],[\"通信层\",{\"0\":{\"801\":1,\"803\":1}}],[\"通信层组件具有良好的适应性和灵活性\",{\"1\":{\"803\":1}}],[\"通信层组件具有以下特点和功能\",{\"1\":{\"803\":1}}],[\"通信层组件在物联网设备调试系统中扮演着重要的角色\",{\"1\":{\"803\":1}}],[\"通信层组件\",{\"1\":{\"794\":2,\"803\":2}}],[\"通信必须经过核心系统\",{\"1\":{\"216\":1}}],[\"通信类\",{\"1\":{\"161\":1}}],[\"通信的入口类\",{\"1\":{\"162\":1}}],[\"通信的入口\",{\"1\":{\"161\":1}}],[\"通知类是一个大类别\",{\"1\":{\"765\":1}}],[\"通知公告\",{\"1\":{\"609\":1}}],[\"通知支持\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"通知告警平台支持云之家\",{\"1\":{\"420\":1}}],[\"通知告警\",{\"1\":{\"409\":2,\"419\":2}}],[\"通知报警\",{\"1\":{\"409\":1,\"418\":1}}],[\"通知规则元数据变更\",{\"1\":{\"162\":1}}],[\"通知选择器元数据变更\",{\"1\":{\"162\":1}}],[\"通知插件元数据变更\",{\"1\":{\"162\":1}}],[\"通知\",{\"1\":{\"141\":1,\"220\":1}}],[\"通知时段等等\",{\"1\":{\"55\":1}}],[\"通过自研的\",{\"1\":{\"803\":1}}],[\"通过身份验证和密钥交换等方式\",{\"1\":{\"803\":1}}],[\"通过提供开源的解决方案\",{\"1\":{\"794\":1}}],[\"通过提供自定义注解\",{\"1\":{\"47\":1}}],[\"通过mailmessage构建不同的邮件\",{\"1\":{\"774\":1}}],[\"通过额外\",{\"1\":{\"764\":1}}],[\"通过文件版本管理系统\",{\"1\":{\"652\":1}}],[\"通过简单的拖放和连接步骤\",{\"1\":{\"628\":1}}],[\"通过引入不同的实盘网关\",{\"1\":{\"593\":1}}],[\"通过引入一些新的特性和改进对\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"通过服务端\",{\"1\":{\"586\":1}}],[\"通过了全部的测试用例\",{\"1\":{\"482\":1}}],[\"通过静态方法forestproxy\",{\"1\":{\"433\":1}}],[\"通过代码循环\",{\"1\":{\"406\":1}}],[\"通过代码分析\",{\"1\":{\"129\":1}}],[\"通过构建产品生态\",{\"1\":{\"367\":1,\"382\":1}}],[\"通过后端动态配置后\",{\"1\":{\"357\":1}}],[\"通过后端动态配置\",{\"1\":{\"357\":1}}],[\"通过前端开关配置\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"通过集群部署的方式\",{\"1\":{\"321\":1}}],[\"通过数据同步方案\",{\"1\":{\"278\":1}}],[\"通过链式机制执行\",{\"1\":{\"273\":1}}],[\"通过什么角度控制流量\",{\"1\":{\"263\":1}}],[\"通过阅读上述代码已经知晓\",{\"1\":{\"251\":1}}],[\"通过官方文档的阅读我们得知了ratelimiterplugin的两个核心点速率\",{\"1\":{\"241\":1}}],[\"通过上述代码梳理完成后大体逻辑如下\",{\"1\":{\"235\":1}}],[\"通过规则对应的负载均衡策略选择一个地址\",{\"1\":{\"235\":1}}],[\"通过追溯源码得知divideplugin\",{\"1\":{\"234\":1}}],[\"通过负载均衡算法挑选最终分发的服务\",{\"1\":{\"229\":1}}],[\"通过在\",{\"1\":{\"220\":1}}],[\"通过的返回\",{\"1\":{\"193\":1}}],[\"通过检查它各个方法的调用处\",{\"1\":{\"176\":1}}],[\"通过匹配路径头做筛选\",{\"1\":{\"171\":1}}],[\"通过选择器id\",{\"1\":{\"131\":1}}],[\"通过\",{\"0\":{\"284\":1,\"285\":1},\"1\":{\"112\":1,\"117\":1,\"126\":1,\"127\":2,\"145\":1,\"168\":1,\"182\":1,\"203\":1,\"228\":1,\"266\":1,\"276\":2,\"324\":1,\"325\":1,\"359\":1,\"379\":1,\"394\":1,\"401\":1,\"428\":1,\"457\":1,\"608\":1,\"617\":1,\"624\":1,\"723\":1,\"794\":1,\"808\":1}}],[\"通过异步\",{\"1\":{\"61\":1}}],[\"通过华为云商店部署\",{\"1\":{\"57\":1}}],[\"通过一对多映射可以更加优雅解决此类需求\",{\"1\":{\"47\":1}}],[\"恢复翻页\",{\"1\":{\"604\":1}}],[\"恢复执行被暂停的任务\",{\"1\":{\"405\":1}}],[\"恢复\",{\"1\":{\"55\":1}}],[\"也希望大家拥有开源的心态\",{\"1\":{\"792\":1}}],[\"也希望各位小伙伴提交\",{\"1\":{\"792\":1}}],[\"也更容易让人理解整个代码\",{\"1\":{\"792\":1}}],[\"也遭受很多小白用户的摧残\",{\"1\":{\"792\":1}}],[\"也修复了先前版本中的诸多问题\",{\"1\":{\"743\":1}}],[\"也太绕口\",{\"1\":{\"738\":1}}],[\"也欢迎大家参与到我们之中\",{\"1\":{\"762\":1}}],[\"也欢迎大家关注\",{\"1\":{\"60\":1}}],[\"也欢迎您加入到我们之中\",{\"1\":{\"736\":1}}],[\"也有\",{\"1\":{\"792\":1}}],[\"也有很多灵活自由的空间\",{\"1\":{\"715\":1}}],[\"也有转发到\",{\"1\":{\"108\":1}}],[\"也吸收了更多开源社区的优秀人才的加入\",{\"1\":{\"704\":1}}],[\"也挺好记\",{\"1\":{\"693\":1}}],[\"也无法再继续更新\",{\"1\":{\"612\":1}}],[\"也可通过前端页面添加数据源\",{\"1\":{\"608\":1}}],[\"也可以玩的更好\",{\"1\":{\"791\":1}}],[\"也可以在\",{\"1\":{\"788\":1}}],[\"也可以把配置放在\",{\"1\":{\"709\":1}}],[\"也可以使用\",{\"1\":{\"709\":1}}],[\"也可以选中单行\",{\"1\":{\"678\":1}}],[\"也可以指定一个或多个表达式\",{\"1\":{\"516\":1}}],[\"也可以被框架管理\",{\"1\":{\"409\":1,\"419\":1}}],[\"也可以自定义\",{\"1\":{\"116\":1}}],[\"也可以加微信和\",{\"1\":{\"77\":1}}],[\"也可以对内置模版修改更新\",{\"1\":{\"54\":1}}],[\"也可以发送电子邮件至\",{\"1\":{\"5\":1}}],[\"也许有人想问\",{\"1\":{\"593\":1}}],[\"也要守疆土\",{\"1\":{\"507\":1}}],[\"也象征着\",{\"1\":{\"499\":1}}],[\"也为后续的管理平台系列打下一个基础\",{\"1\":{\"493\":1}}],[\"也适用于很多开源项目的发展策略\",{\"1\":{\"456\":1}}],[\"也不利于单独使用\",{\"1\":{\"367\":1,\"382\":1}}],[\"也同步进行升级及适配\",{\"1\":{\"353\":1,\"358\":1}}],[\"也发布了一个插件数据变更的事件通知\",{\"1\":{\"247\":1}}],[\"也得知了\",{\"1\":{\"239\":1}}],[\"也看不到数据\",{\"1\":{\"208\":1}}],[\"也特别高\",{\"1\":{\"135\":1}}],[\"也涉及到\",{\"1\":{\"132\":1}}],[\"也是解决\",{\"1\":{\"720\":1}}],[\"也是支持\",{\"1\":{\"482\":1}}],[\"也是国内优秀的社区驱动型开源项目\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"也是按同样的方式分布式并行统计\",{\"1\":{\"406\":1}}],[\"也是西方最杰出的诗人之一\",{\"1\":{\"352\":1}}],[\"也是网关实现\",{\"1\":{\"277\":1}}],[\"也是业务网关必须要关注处理的问题\",{\"1\":{\"262\":1}}],[\"也是持有通过构造方法传入的插件链\",{\"1\":{\"220\":1}}],[\"也是枚举\",{\"1\":{\"154\":1}}],[\"也是\",{\"1\":{\"113\":1,\"467\":1,\"473\":1,\"480\":1}}],[\"也是通过定时线程池来执行\",{\"1\":{\"92\":1}}],[\"也是通过上面的步骤重新来一遍\",{\"1\":{\"92\":1}}],[\"也逐渐开始在移动端和物联网领域崭露头角\",{\"1\":{\"91\":1}}],[\"也被称为\",{\"1\":{\"79\":1}}],[\"也支持了外置\",{\"1\":{\"448\":1}}],[\"也支持\",{\"1\":{\"64\":1}}],[\"也支持多平台告警消息渠道\",{\"1\":{\"55\":1}}],[\"也就是configid这里可以是任意值\",{\"1\":{\"772\":2}}],[\"也就是把某个事件告诉的所有与这个事件相关的监听器\",{\"1\":{\"200\":1}}],[\"也就是说在我们代码中的实现里\",{\"1\":{\"165\":1}}],[\"也就是说针对每个未知的\",{\"1\":{\"133\":1}}],[\"也就是\",{\"1\":{\"61\":1,\"205\":1}}],[\"也都为异步的调用\",{\"1\":{\"61\":1}}],[\"已知问题\",{\"0\":{\"736\":1}}],[\"已基本可尝试生产使用\",{\"1\":{\"612\":1}}],[\"已登录系统的在线用户信息监控与强制踢出操作\",{\"1\":{\"609\":1}}],[\"已停止维护\",{\"1\":{\"608\":1}}],[\"已选择图标高亮回显\",{\"1\":{\"604\":1}}],[\"已实现\",{\"1\":{\"456\":1}}],[\"已集成\",{\"1\":{\"409\":1,\"419\":1}}],[\"已支持\",{\"0\":{\"445\":1,\"449\":1,\"459\":1},\"1\":{\"409\":1,\"419\":1}}],[\"已支持企业微信\",{\"1\":{\"409\":1,\"419\":1}}],[\"已支持应用服务\",{\"1\":{\"55\":1}}],[\"已接入的业务系统重启\",{\"1\":{\"125\":1}}],[\"已经在进行开源了\",{\"1\":{\"786\":1}}],[\"已经提供了非常丰富的功能\",{\"1\":{\"783\":1}}],[\"已经正式加入了\",{\"1\":{\"627\":1}}],[\"已经支持了\",{\"1\":{\"482\":1}}],[\"已经绑定上需要组合的注解即可\",{\"1\":{\"430\":1}}],[\"已经统计到了\",{\"1\":{\"406\":1}}],[\"已经得知修改的插件数据除了更改了\",{\"1\":{\"247\":1}}],[\"已经看到了全部的网关数据\",{\"1\":{\"208\":1}}],[\"已经接入过\",{\"1\":{\"125\":1}}],[\"已经接入\",{\"0\":{\"125\":1}}],[\"已经注册过\",{\"1\":{\"123\":1}}],[\"已经宣布将在未来两年内发布两个新的\",{\"1\":{\"91\":1}}],[\"已经成为了许多云计算平台和大数据处理框架的首选语言之一\",{\"1\":{\"91\":1}}],[\"已经成为目前为止全球最大的开源软件基金会\",{\"1\":{\"11\":1}}],[\"已经发布一段时间了\",{\"1\":{\"78\":1}}],[\"已经实现了三个\",{\"1\":{\"57\":1}}],[\"而非默认\",{\"1\":{\"722\":1}}],[\"而非拉取整个数据\",{\"1\":{\"503\":1}}],[\"而我们在\",{\"1\":{\"627\":1}}],[\"而引入的方式也是相当直观的\",{\"1\":{\"593\":1}}],[\"而策略编写则主要取决于指标框架开发的难易程度与策略逻辑编写的难易程度\",{\"1\":{\"590\":1}}],[\"而忽略其他\",{\"1\":{\"516\":1}}],[\"而下限则是这个开源框架的测试用例的完备性\",{\"1\":{\"507\":1}}],[\"而事实情况是\",{\"1\":{\"489\":1}}],[\"而对于开源商业化\",{\"1\":{\"456\":1}}],[\"而此次\",{\"1\":{\"431\":1}}],[\"而往往都是因细节考虑欠缺\",{\"1\":{\"396\":1}}],[\"而导致错误问题\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"而闻名\",{\"1\":{\"352\":1}}],[\"而设计\",{\"1\":{\"269\":1}}],[\"而直接把系统拉升到高水位可能瞬间把系统压垮\",{\"1\":{\"263\":1}}],[\"而第二种场景主要考虑的是服务本身出现了不可避免\",{\"1\":{\"262\":1}}],[\"而针对于ratelimiterplugin而言\",{\"1\":{\"247\":1}}],[\"而丢弃任何请求\",{\"1\":{\"241\":1}}],[\"而调用上游服务的工作是由其他相应的\",{\"1\":{\"219\":1}}],[\"而又不影响整体系统的稳定\",{\"1\":{\"215\":1}}],[\"而没有使用\",{\"1\":{\"200\":1}}],[\"而它的\",{\"1\":{\"179\":1}}],[\"而这些代码的作用便是将\",{\"1\":{\"170\":1}}],[\"而传参是\",{\"1\":{\"167\":1}}],[\"而子类实现它\",{\"1\":{\"166\":1}}],[\"而是改为更加自由的自定义\",{\"1\":{\"770\":1}}],[\"而是打印在了\",{\"1\":{\"750\":1}}],[\"而是在原有方式的基础上抽象简化\",{\"1\":{\"370\":1,\"385\":1}}],[\"而是在遍历时查找\",{\"1\":{\"167\":1}}],[\"而是编辑资源文件\",{\"1\":{\"165\":1}}],[\"而是通知所有数据刷新类\",{\"1\":{\"148\":1}}],[\"而是\",{\"1\":{\"145\":1}}],[\"而是直接使用其父类的\",{\"1\":{\"144\":1}}],[\"而在以后\",{\"1\":{\"469\":1}}],[\"而在\",{\"1\":{\"144\":1}}],[\"而在参与者中\",{\"1\":{\"71\":1}}],[\"而后台则是做好数据的更新\",{\"1\":{\"143\":1}}],[\"而权重分大的节点\",{\"1\":{\"135\":1}}],[\"而被选中的节点\",{\"1\":{\"135\":1}}],[\"而选择器和规则这两个概念也是\",{\"1\":{\"113\":1}}],[\"而网关作为所有服务的统一入口\",{\"1\":{\"113\":1}}],[\"而不是返回\",{\"1\":{\"624\":1}}],[\"而不用添加配置后去重启网关\",{\"1\":{\"92\":1}}],[\"而不需要重启网关\",{\"1\":{\"92\":1}}],[\"而不需要依赖第三方库\",{\"1\":{\"83\":1}}],[\"而\",{\"1\":{\"54\":1,\"81\":1,\"113\":1,\"144\":1,\"174\":1,\"195\":1,\"234\":1,\"251\":1,\"277\":1,\"430\":1,\"482\":1}}],[\"而且集群本身就是我们社区协作的产物\",{\"1\":{\"456\":1}}],[\"而且这样不仅仅只是程序员之间的贡献代码协作\",{\"1\":{\"456\":1}}],[\"而且之后的\",{\"1\":{\"92\":1}}],[\"而且还可以为集合对象指定初始容量和类型参数\",{\"1\":{\"81\":1}}],[\"而且\",{\"1\":{\"53\":1}}],[\"方便进行接口测试等\",{\"1\":{\"628\":1}}],[\"方便处理等待场景\",{\"1\":{\"628\":1}}],[\"方便引入\",{\"1\":{\"624\":1}}],[\"方便本地调试三方回调\",{\"1\":{\"577\":1}}],[\"方便排查问题\",{\"1\":{\"574\":1}}],[\"方便镜像构建\",{\"1\":{\"541\":1}}],[\"方便开发者咨询\",{\"1\":{\"529\":1}}],[\"方便开发人员理解和定位问题\",{\"1\":{\"372\":1,\"387\":1}}],[\"方便集成管理各种三方包线程池\",{\"1\":{\"420\":1}}],[\"方便的话给项目一个\",{\"1\":{\"415\":1,\"424\":1}}],[\"方便记忆和使用\",{\"1\":{\"397\":1}}],[\"方便业务接口代码编写\",{\"1\":{\"354\":1}}],[\"方\",{\"1\":{\"308\":1}}],[\"方式使用\",{\"1\":{\"714\":1}}],[\"方式使用泛化调用\",{\"0\":{\"284\":1},\"1\":{\"276\":1}}],[\"方式安装\",{\"1\":{\"457\":1}}],[\"方式参数多\",{\"1\":{\"372\":1,\"387\":1}}],[\"方式重新实现\",{\"1\":{\"360\":1}}],[\"方式声明注册使用泛化调用\",{\"1\":{\"284\":1}}],[\"方式实现\",{\"1\":{\"170\":1}}],[\"方式\",{\"1\":{\"160\":2,\"293\":1,\"356\":1,\"360\":1,\"395\":1,\"397\":1,\"402\":1,\"428\":1,\"723\":1,\"783\":1,\"792\":2}}],[\"方式的存储我就不介绍了\",{\"1\":{\"64\":1}}],[\"方式的配置\",{\"1\":{\"64\":2}}],[\"方式暴露\",{\"1\":{\"54\":1}}],[\"方法用起来不太方便\",{\"1\":{\"747\":1}}],[\"方法了\",{\"1\":{\"717\":1}}],[\"方法需要参与分布式事务\",{\"1\":{\"709\":2}}],[\"方法描述截断\",{\"0\":{\"680\":1},\"1\":{\"675\":1}}],[\"方法上\",{\"1\":{\"426\":1}}],[\"方法上打上断点\",{\"1\":{\"206\":1}}],[\"方法以及方法参数\",{\"1\":{\"374\":1,\"389\":1}}],[\"方法主要做如下事情\",{\"1\":{\"293\":1}}],[\"方法抛出的异常\",{\"1\":{\"286\":1}}],[\"方法没有什么核心逻辑\",{\"1\":{\"237\":1}}],[\"方法作用\",{\"1\":{\"234\":1}}],[\"方法名称\",{\"1\":{\"278\":1}}],[\"方法名\",{\"1\":{\"234\":1,\"286\":1}}],[\"方法如下所示\",{\"1\":{\"232\":1}}],[\"方法同时更新了\",{\"1\":{\"225\":1}}],[\"方法处理请求时\",{\"1\":{\"221\":1}}],[\"方法负责插件链执行指标度量的采集\",{\"1\":{\"220\":1}}],[\"方法为抽象方法\",{\"1\":{\"219\":1}}],[\"方法进行发送\",{\"1\":{\"774\":1}}],[\"方法进行具体处理\",{\"1\":{\"219\":1}}],[\"方法进行回滚\",{\"1\":{\"62\":1}}],[\"方法监听事件到事件\",{\"1\":{\"209\":1}}],[\"方法会监听事件变化\",{\"1\":{\"200\":1}}],[\"方法会调用事件发布器进行事件发布\",{\"1\":{\"200\":1}}],[\"方法会调用\",{\"1\":{\"200\":1}}],[\"方法会在容器中查找类型是\",{\"1\":{\"200\":1}}],[\"方法会通知到所有注入为\",{\"1\":{\"162\":1}}],[\"方法匹配信息类型\",{\"1\":{\"162\":1}}],[\"方法通知\",{\"1\":{\"160\":1}}],[\"方法发送出去了\",{\"1\":{\"157\":1}}],[\"方法后\",{\"1\":{\"131\":1}}],[\"方法供调用者使用\",{\"1\":{\"130\":1}}],[\"方法一样\",{\"1\":{\"125\":1}}],[\"方法都会先走\",{\"1\":{\"92\":1}}],[\"方法执行完了之后\",{\"1\":{\"92\":1}}],[\"方法把更新的数据发到\",{\"1\":{\"92\":1}}],[\"方法中主要目的就是封装一个soulcontext\",{\"1\":{\"232\":1}}],[\"方法中\",{\"1\":{\"92\":1,\"156\":1,\"158\":1,\"171\":1,\"195\":1,\"235\":1}}],[\"方法可以使某些插件在某些请求中被跳过\",{\"1\":{\"128\":1}}],[\"方法可以创建一个包含一个非空元素或空元素的\",{\"1\":{\"81\":1}}],[\"方法可以根据指定的条件从流中选择元素\",{\"1\":{\"81\":1}}],[\"方法异常怎么办呢\",{\"0\":{\"68\":1}}],[\"方法异常\",{\"0\":{\"68\":1}}],[\"方法的开发\",{\"1\":{\"710\":1}}],[\"方法的执行会查找\",{\"1\":{\"200\":1}}],[\"方法的\",{\"1\":{\"67\":1}}],[\"方法绑定了一个\",{\"1\":{\"428\":1}}],[\"方法绑定\",{\"1\":{\"61\":1}}],[\"方法\",{\"0\":{\"67\":1,\"250\":1,\"747\":1},\"1\":{\"52\":1,\"62\":1,\"67\":1,\"81\":2,\"92\":4,\"124\":2,\"126\":1,\"130\":1,\"136\":1,\"144\":1,\"148\":2,\"156\":1,\"158\":1,\"160\":1,\"162\":1,\"164\":1,\"166\":2,\"171\":1,\"176\":1,\"177\":1,\"195\":3,\"200\":4,\"219\":6,\"220\":3,\"236\":1,\"259\":1,\"287\":1,\"293\":1,\"315\":1,\"370\":1,\"385\":1,\"397\":1,\"617\":1,\"618\":1,\"624\":2,\"723\":3,\"747\":1,\"822\":1}}],[\"mss\",{\"1\":{\"808\":1}}],[\"msg\",{\"1\":{\"153\":3,\"783\":1}}],[\"mm\",{\"1\":{\"802\":6,\"824\":1}}],[\"mmanager\",{\"1\":{\"802\":1}}],[\"mp\",{\"1\":{\"608\":1}}],[\"mgt中分离到新建maxkey\",{\"1\":{\"535\":1}}],[\"mgt\",{\"1\":{\"529\":1}}],[\"mxk9\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"mxj\",{\"1\":{\"171\":3}}],[\"mqtt\",{\"1\":{\"794\":2}}],[\"mq\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"m\",{\"1\":{\"406\":1}}],[\"mdcrunnable\",{\"1\":{\"421\":1}}],[\"mdctaskwrapper\",{\"1\":{\"409\":1,\"419\":1}}],[\"mdc\",{\"1\":{\"397\":1,\"421\":1}}],[\"md5digestashex\",{\"1\":{\"191\":1}}],[\"md5\",{\"1\":{\"141\":1,\"605\":1}}],[\"md5utils\",{\"1\":{\"141\":1}}],[\"md5=\",{\"1\":{\"92\":10}}],[\"mr\",{\"1\":{\"308\":1,\"458\":2}}],[\"must\",{\"0\":{\"516\":1},\"1\":{\"516\":3}}],[\"mutated\",{\"1\":{\"259\":2,\"273\":2}}],[\"mutate\",{\"1\":{\"259\":2,\"273\":2}}],[\"multipartfile\",{\"1\":{\"816\":5}}],[\"multipart\",{\"1\":{\"677\":1}}],[\"multiple\",{\"1\":{\"88\":1}}],[\"multiselect\",{\"1\":{\"604\":1}}],[\"multivaluemap<string\",{\"1\":{\"149\":1,\"232\":1}}],[\"multi\",{\"1\":{\"66\":1}}],[\"mvc\",{\"1\":{\"121\":1,\"122\":2,\"259\":3,\"316\":1,\"797\":1}}],[\"mvn\",{\"1\":{\"98\":1}}],[\"miui\",{\"1\":{\"723\":1}}],[\"michelle\",{\"1\":{\"615\":1}}],[\"microsoft\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"micrometercore\",{\"1\":{\"529\":1}}],[\"micrometer\",{\"1\":{\"315\":1,\"409\":1,\"419\":1}}],[\"microbenchmark\",{\"1\":{\"84\":2}}],[\"mit\",{\"1\":{\"576\":1,\"577\":1}}],[\"mikezzb\",{\"1\":{\"458\":4,\"461\":1}}],[\"miller\",{\"1\":{\"406\":1}}],[\"milliseconds\",{\"1\":{\"66\":1,\"67\":1,\"121\":1,\"144\":2,\"273\":1}}],[\"misaya295\",{\"1\":{\"317\":1}}],[\"midnight2104\",{\"1\":{\"317\":1}}],[\"minidle\",{\"1\":{\"709\":1}}],[\"minio\",{\"1\":{\"368\":3,\"370\":4,\"372\":6,\"373\":2,\"374\":11,\"385\":4,\"387\":6,\"388\":2,\"389\":11,\"397\":2,\"603\":1,\"608\":1,\"808\":1}}],[\"minimum\",{\"1\":{\"271\":1}}],[\"minimumnumberofcalls\",{\"1\":{\"270\":1}}],[\"minrequestamount\",{\"1\":{\"265\":1}}],[\"minutes\",{\"1\":{\"149\":2}}],[\"min\",{\"1\":{\"135\":1,\"252\":1,\"271\":1,\"811\":4,\"817\":1}}],[\"m1\",{\"0\":{\"719\":1,\"721\":1},\"1\":{\"78\":1,\"720\":1}}],[\"macos\",{\"1\":{\"639\":1,\"646\":1}}],[\"mac\",{\"1\":{\"637\":1}}],[\"machine\",{\"1\":{\"74\":1}}],[\"mailimapconfig配置\",{\"1\":{\"775\":1}}],[\"mailclient\",{\"1\":{\"774\":1}}],[\"mailfactory\",{\"1\":{\"774\":2}}],[\"mailsmtpconfig\",{\"1\":{\"774\":2}}],[\"mail\",{\"1\":{\"608\":1,\"765\":1,\"774\":2}}],[\"mainclass有误\",{\"1\":{\"557\":1}}],[\"main\",{\"1\":{\"101\":5,\"166\":1,\"167\":1,\"173\":2,\"174\":1,\"198\":2,\"199\":8,\"208\":10,\"324\":1,\"325\":1,\"575\":1,\"637\":1,\"667\":1,\"788\":1,\"815\":1}}],[\"markdown\",{\"1\":{\"831\":1}}],[\"mariadb\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"574\":1}}],[\"marcus\",{\"1\":{\"308\":1}}],[\"mahaitao617\",{\"1\":{\"317\":1}}],[\"maybe\",{\"1\":{\"308\":1}}],[\"matlab\",{\"1\":{\"792\":1}}],[\"math\",{\"1\":{\"252\":3,\"271\":11}}],[\"matchertable\",{\"1\":{\"723\":1}}],[\"matches\",{\"1\":{\"458\":2}}],[\"matchifmissing\",{\"1\":{\"156\":2,\"160\":1}}],[\"matching\",{\"1\":{\"79\":1,\"86\":3,\"88\":3,\"89\":2,\"90\":3}}],[\"matchrule\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":2}}],[\"matchselector\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":2}}],[\"matchmodeenum\",{\"1\":{\"124\":1,\"126\":1}}],[\"matchmode\",{\"1\":{\"124\":1,\"126\":1,\"313\":2}}],[\"match的方式支持模糊匹配\",{\"1\":{\"114\":1}}],[\"match\",{\"1\":{\"105\":2,\"108\":12,\"114\":1,\"124\":1,\"126\":2,\"129\":2,\"314\":1}}],[\"mapconverter\",{\"1\":{\"724\":1}}],[\"maputil\",{\"1\":{\"723\":1}}],[\"mapwrapper\",{\"1\":{\"722\":1}}],[\"mapper\",{\"1\":{\"608\":2,\"619\":1}}],[\"mappings\",{\"1\":{\"259\":3}}],[\"mappingbeans\",{\"1\":{\"259\":2}}],[\"mapping\",{\"1\":{\"92\":1,\"259\":2,\"458\":1,\"651\":1,\"660\":1}}],[\"mapstruct\",{\"1\":{\"616\":1}}],[\"maps\",{\"1\":{\"191\":1}}],[\"map<class<\",{\"1\":{\"176\":1,\"178\":1,\"181\":1}}],[\"map<string\",{\"1\":{\"162\":1,\"178\":1,\"179\":1,\"180\":1,\"183\":7,\"191\":1,\"259\":3,\"328\":1}}],[\"map<rpctypeenum\",{\"1\":{\"126\":1}}],[\"maptodata\",{\"1\":{\"153\":1,\"209\":1}}],[\"map\",{\"1\":{\"81\":1,\"125\":2,\"126\":1,\"135\":7,\"148\":8,\"161\":7,\"165\":1,\"177\":1,\"191\":7,\"195\":1,\"206\":1,\"209\":6,\"225\":7,\"227\":4,\"247\":2,\"249\":1,\"283\":1,\"316\":1,\"515\":1,\"692\":1,\"724\":3}}],[\"management\",{\"1\":{\"313\":1,\"788\":1}}],[\"manager\",{\"1\":{\"71\":2,\"205\":1,\"457\":4,\"458\":1,\"465\":4,\"802\":1}}],[\"many\",{\"1\":{\"74\":1,\"249\":3,\"266\":4}}],[\"maven\",{\"0\":{\"255\":1,\"739\":1,\"758\":1},\"1\":{\"73\":1,\"98\":1,\"254\":1,\"303\":1,\"315\":1,\"354\":1,\"608\":1,\"616\":1,\"617\":1,\"664\":1,\"764\":1,\"796\":1}}],[\"master\",{\"0\":{\"73\":1},\"1\":{\"109\":2,\"174\":1,\"326\":1,\"327\":1,\"328\":1,\"583\":1,\"657\":1}}],[\"mastername\",{\"1\":{\"64\":1,\"77\":1}}],[\"maxlifetime\",{\"1\":{\"709\":1}}],[\"maxactive\",{\"1\":{\"709\":1}}],[\"maxsso\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"maxkey改为org\",{\"1\":{\"547\":1}}],[\"maxkey\",{\"1\":{\"525\":1,\"526\":1,\"529\":18,\"531\":1,\"532\":1,\"535\":9,\"537\":1,\"538\":1,\"541\":12,\"543\":1,\"544\":1,\"547\":18,\"553\":1,\"554\":1,\"557\":12,\"563\":1,\"564\":1,\"567\":13,\"615\":1}}],[\"maxkey单点登录认证系统4\",{\"0\":{\"542\":1,\"552\":1,\"562\":1}}],[\"maxkey单点登录认证系统\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"maxkey单点登录认证系统3\",{\"0\":{\"524\":1,\"530\":1,\"536\":1}}],[\"maxwaitseconds\",{\"1\":{\"504\":5}}],[\"maximumsize\",{\"1\":{\"313\":2}}],[\"maximumweight\",{\"1\":{\"71\":1}}],[\"maxcurrent\",{\"1\":{\"135\":3}}],[\"max\",{\"1\":{\"67\":3,\"71\":2,\"74\":1,\"109\":2,\"144\":2,\"252\":1,\"271\":12,\"313\":2}}],[\"myclient\",{\"1\":{\"428\":2,\"430\":2}}],[\"mybatisjpaextra\",{\"1\":{\"547\":1}}],[\"mybatis\",{\"1\":{\"397\":1,\"547\":1,\"608\":5,\"616\":2,\"798\":1}}],[\"mybatisplus\",{\"1\":{\"354\":1}}],[\"mysite注解的host和port属性从外部传入根地址信息了\",{\"1\":{\"430\":1}}],[\"mysite注解添加host和port属性\",{\"1\":{\"430\":1}}],[\"mysite的注解\",{\"1\":{\"430\":1}}],[\"mysite\",{\"1\":{\"430\":6}}],[\"myself\",{\"1\":{\"154\":3,\"158\":5,\"162\":1}}],[\"mysql>\",{\"1\":{\"126\":2}}],[\"mysql\",{\"0\":{\"170\":1,\"172\":1,\"319\":1,\"582\":1},\"1\":{\"55\":1,\"64\":3,\"65\":1,\"74\":2,\"77\":2,\"100\":1,\"127\":2,\"170\":2,\"171\":5,\"172\":2,\"173\":2,\"175\":1,\"331\":1,\"397\":1,\"445\":2,\"449\":2,\"459\":2,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"575\":1,\"582\":3,\"583\":1,\"586\":1,\"606\":1,\"608\":2,\"615\":1,\"617\":1,\"706\":1,\"709\":3,\"713\":1,\"741\":2,\"788\":1,\"792\":1,\"798\":1}}],[\"my\",{\"1\":{\"117\":1,\"118\":1,\"296\":1}}],[\"mymaster\",{\"1\":{\"77\":1}}],[\"myth\",{\"1\":{\"66\":1,\"200\":2,\"792\":1}}],[\"mocks\",{\"1\":{\"822\":2}}],[\"mock\",{\"1\":{\"314\":1,\"316\":1}}],[\"modify\",{\"1\":{\"444\":1}}],[\"modifyresponse\",{\"1\":{\"316\":1}}],[\"mod\",{\"1\":{\"313\":1}}],[\"module\",{\"1\":{\"232\":2,\"383\":1}}],[\"model\",{\"1\":{\"314\":1,\"802\":1}}],[\"mode\",{\"1\":{\"126\":1,\"624\":1}}],[\"moremind\",{\"1\":{\"317\":1}}],[\"more\",{\"1\":{\"101\":1,\"459\":1}}],[\"motan框架不支持注解方式的使用\",{\"1\":{\"708\":1,\"714\":1}}],[\"motan<\",{\"1\":{\"76\":1,\"77\":1}}],[\"motan\",{\"0\":{\"76\":1},\"1\":{\"65\":1,\"77\":1,\"316\":1,\"409\":1,\"419\":1,\"701\":1,\"712\":1,\"714\":1}}],[\"montan\",{\"1\":{\"706\":1}}],[\"monitor回调对象\",{\"1\":{\"775\":1}}],[\"monitorfactory\",{\"1\":{\"775\":2}}],[\"monitorid\",{\"1\":{\"458\":1}}],[\"monitoring\",{\"1\":{\"57\":2,\"458\":7,\"459\":1}}],[\"monitorplugin\",{\"1\":{\"208\":1,\"231\":2}}],[\"monitor\",{\"1\":{\"131\":2,\"208\":2,\"231\":1,\"458\":3,\"459\":1,\"787\":1}}],[\"monorepo\",{\"0\":{\"366\":1,\"381\":1},\"1\":{\"366\":1,\"381\":1,\"395\":2,\"402\":2}}],[\"mono<object>\",{\"1\":{\"288\":1,\"289\":1}}],[\"mono<t>>\",{\"1\":{\"273\":2}}],[\"mono<t>\",{\"1\":{\"273\":6}}],[\"mono<ratelimiterresponse>\",{\"1\":{\"249\":1}}],[\"mono<clientresponse>\",{\"1\":{\"136\":1}}],[\"mono<void>\",{\"1\":{\"129\":1,\"130\":2,\"131\":1,\"136\":3,\"137\":1,\"220\":2,\"224\":2,\"231\":1,\"232\":1,\"234\":1,\"235\":1,\"236\":3,\"237\":1,\"249\":1,\"259\":2,\"266\":2,\"273\":4,\"287\":2,\"288\":1,\"290\":1}}],[\"mono\",{\"1\":{\"130\":2,\"136\":1,\"137\":1,\"220\":3,\"231\":2,\"237\":1,\"266\":1,\"287\":2,\"289\":1,\"290\":1}}],[\"mongdb\",{\"1\":{\"64\":1,\"65\":1}}],[\"mongoclient\",{\"1\":{\"722\":1}}],[\"mongouserpwd\",{\"1\":{\"64\":1,\"77\":1}}],[\"mongousername\",{\"1\":{\"64\":1,\"77\":1}}],[\"mongodb4\",{\"1\":{\"722\":1}}],[\"mongodbname\",{\"1\":{\"64\":1,\"77\":1}}],[\"mongodburl\",{\"1\":{\"64\":1,\"77\":1}}],[\"mongodb\",{\"1\":{\"64\":2,\"77\":1,\"354\":1,\"445\":1,\"449\":1,\"459\":1,\"706\":1,\"713\":1,\"720\":1,\"792\":1}}],[\"mongodb>redis\",{\"1\":{\"64\":1}}],[\"mongo\",{\"1\":{\"64\":1,\"74\":1,\"714\":1}}],[\"mericol\",{\"1\":{\"335\":1}}],[\"menglujing\",{\"1\":{\"317\":1}}],[\"menglg\",{\"1\":{\"308\":1}}],[\"me\",{\"1\":{\"317\":1,\"624\":1}}],[\"mediatype\",{\"1\":{\"149\":1}}],[\"methodtype\",{\"1\":{\"669\":1}}],[\"methodname\",{\"1\":{\"278\":1}}],[\"methodproxy\",{\"1\":{\"208\":2}}],[\"method\",{\"1\":{\"136\":3,\"156\":4,\"208\":3,\"232\":2,\"236\":3,\"286\":4,\"294\":5,\"430\":2,\"694\":1}}],[\"methodweightmap\",{\"1\":{\"135\":4}}],[\"metasubscribers\",{\"1\":{\"161\":2,\"205\":4,\"210\":2}}],[\"metadata的parametertypes\",{\"1\":{\"288\":1}}],[\"metadataservice\",{\"1\":{\"200\":1}}],[\"metadatasubscriber\",{\"1\":{\"161\":1,\"231\":1}}],[\"metadatasubscribers\",{\"1\":{\"148\":3,\"161\":2,\"205\":5}}],[\"metadatapath\",{\"1\":{\"200\":2}}],[\"metadatahandler\",{\"1\":{\"161\":1}}],[\"metadatalist\",{\"1\":{\"157\":2}}],[\"metadata\",{\"1\":{\"156\":1,\"201\":1,\"203\":1,\"284\":1,\"288\":10,\"289\":7,\"383\":1,\"809\":1}}],[\"metadatarefresh\",{\"1\":{\"148\":1}}],[\"metadatamapper\",{\"1\":{\"122\":1}}],[\"metadatado\",{\"1\":{\"122\":1}}],[\"meta\",{\"1\":{\"92\":3,\"141\":1,\"148\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"161\":1,\"167\":1,\"176\":1,\"200\":1,\"205\":2,\"208\":1,\"288\":4,\"308\":1,\"313\":2,\"709\":1,\"723\":1}}],[\"metricslabelenum\",{\"1\":{\"220\":2}}],[\"metricstrackerfacade\",{\"1\":{\"130\":1,\"220\":3}}],[\"metrics\",{\"1\":{\"33\":1,\"57\":3,\"458\":2,\"706\":1,\"707\":1,\"713\":1,\"787\":1}}],[\"memorysafewindowtinylfumap\",{\"1\":{\"316\":1}}],[\"memory\",{\"1\":{\"89\":3,\"90\":1,\"199\":1}}],[\"message\",{\"1\":{\"57\":1,\"148\":3,\"149\":2,\"158\":11,\"245\":1,\"272\":1,\"368\":1,\"774\":1,\"783\":1}}],[\"mbean\",{\"1\":{\"54\":1}}],[\"就引入对应的\",{\"1\":{\"814\":1}}],[\"就这\",{\"1\":{\"789\":1}}],[\"就这么简单\",{\"1\":{\"77\":1}}],[\"就当是\",{\"1\":{\"764\":1}}],[\"就相当于加上了content\",{\"1\":{\"430\":1}}],[\"就重新初始化限流实例和连接池实例放入\",{\"1\":{\"247\":1}}],[\"就看到了\",{\"1\":{\"208\":1}}],[\"就进行注入\",{\"1\":{\"200\":1}}],[\"就等\",{\"1\":{\"149\":1}}],[\"就由这个类在\",{\"1\":{\"141\":1}}],[\"就在其中\",{\"1\":{\"131\":1}}],[\"就把他剔除出去\",{\"1\":{\"125\":1}}],[\"就跟盗梦空间似的\",{\"1\":{\"125\":1}}],[\"就能发挥重要的作用了\",{\"1\":{\"783\":1}}],[\"就能适配一款新的监控类型\",{\"1\":{\"442\":1}}],[\"就能立刻适配一款\",{\"1\":{\"441\":1}}],[\"就能对任何接入网关的流量进行管理\",{\"1\":{\"113\":1}}],[\"就能使用这些协议去自定义采集想要的指标\",{\"1\":{\"452\":1,\"464\":1}}],[\"就能使用这些协议去自定义采集任何您想要的指标\",{\"1\":{\"53\":1}}],[\"就能使用这些协议来采集想要的指标\",{\"1\":{\"54\":1}}],[\"就会更新\",{\"1\":{\"92\":1}}],[\"就点了这个同步所有数据\",{\"1\":{\"92\":1}}],[\"就算在运行过程中日志保存异常\",{\"1\":{\"69\":1}}],[\"就算存在可能你说的什么断电\",{\"1\":{\"64\":1}}],[\"就是你发版影响了其他模块的使用\",{\"1\":{\"783\":1}}],[\"就是有个运营管理平台的\",{\"1\":{\"783\":1}}],[\"就是在\",{\"1\":{\"783\":1}}],[\"就是为了\",{\"1\":{\"764\":1}}],[\"就是对我们最真挚的鼓励\",{\"1\":{\"629\":1}}],[\"就是触发流控的边界\",{\"1\":{\"263\":1}}],[\"就是基于第二种实现的\",{\"1\":{\"251\":1}}],[\"就是替换发起请求的插件和返回结果处理的插件\",{\"1\":{\"237\":1}}],[\"就是判断请求状态码\",{\"1\":{\"237\":1}}],[\"就是接口\",{\"1\":{\"167\":1}}],[\"就是如下的配置类\",{\"1\":{\"156\":1}}],[\"就是定义了一个模板\",{\"1\":{\"141\":1}}],[\"就是延迟加载所有\",{\"1\":{\"130\":1}}],[\"就是插件链的形成与链式调用\",{\"1\":{\"130\":1}}],[\"就是业务系统下的接口地址\",{\"1\":{\"126\":1}}],[\"就是\",{\"1\":{\"125\":1,\"266\":1}}],[\"就是这个事件方法\",{\"1\":{\"92\":1}}],[\"就是用这个插件来测试网关\",{\"1\":{\"92\":1}}],[\"就是自己写的代码可以部署到成千上万的服务器跑起来中给他人使用\",{\"1\":{\"56\":1}}],[\"就是将\",{\"1\":{\"54\":1}}],[\"就可以满足绝大部分需求\",{\"1\":{\"54\":1}}],[\"针对方法名过于长\",{\"1\":{\"680\":1}}],[\"针对新的\",{\"1\":{\"664\":1}}],[\"针对历史已保存的\",{\"1\":{\"664\":1}}],[\"针对\",{\"1\":{\"607\":1}}],[\"针对的值不同\",{\"1\":{\"232\":1}}],[\"针对于请求的处理入库在defaultsoulpluginchain\",{\"1\":{\"231\":1}}],[\"针对同一个后台会请求多次\",{\"1\":{\"148\":1}}],[\"针对同一个字段\",{\"1\":{\"47\":1}}],[\"针对第二种场景通常的处理方式是设置服务熔断\",{\"1\":{\"264\":1}}],[\"针对第一种场景我们通常的做法是进行流量控制\",{\"1\":{\"263\":1}}],[\"针对第\",{\"1\":{\"145\":3}}],[\"针对高并发时候的参数配置调优\",{\"1\":{\"64\":1}}],[\"针对市面上已有的标准协议\",{\"1\":{\"54\":1}}],[\"因自定义代理地址配置错误\",{\"1\":{\"397\":1}}],[\"因不具备跨业务通用性\",{\"1\":{\"397\":1}}],[\"因仓库提交文件大小限制\",{\"1\":{\"354\":1}}],[\"因为掌控了所有流量这个很容易做\",{\"1\":{\"790\":1}}],[\"因为序列化方式的更改\",{\"1\":{\"781\":1}}],[\"因为调整了架构\",{\"1\":{\"710\":1}}],[\"因为有些情况下\",{\"1\":{\"657\":1}}],[\"因为有点难哈哈\",{\"1\":{\"460\":1}}],[\"因为没有进行系统的测试过\",{\"1\":{\"482\":1}}],[\"因为质数统计是\",{\"1\":{\"406\":1}}],[\"因为限流的最小粒度是规则\",{\"1\":{\"250\":1}}],[\"因为添加子类后仅需用改动资源文件不用变动工厂类\",{\"1\":{\"168\":1}}],[\"因为会直接复用缓存中的对象\",{\"1\":{\"168\":1}}],[\"因为不同类型的元数据处理类的处理方式不同\",{\"1\":{\"162\":1}}],[\"因为默认是采用的\",{\"1\":{\"156\":1}}],[\"因为还没有研究数据库表结构设计\",{\"1\":{\"125\":1}}],[\"因为这里还缺少元数据信息\",{\"1\":{\"208\":1}}],[\"因为这只是为了保证\",{\"1\":{\"92\":1}}],[\"因为这需要大量的生态适配和自生产品强大的影响力才能做到让别人来改造适配\",{\"1\":{\"54\":1}}],[\"因为\",{\"1\":{\"71\":1,\"92\":1}}],[\"因为你上一面才刚刚执行完\",{\"1\":{\"68\":1}}],[\"因为日志状态是\",{\"1\":{\"62\":1}}],[\"因为是压测的\",{\"1\":{\"61\":1}}],[\"因此您可以对它进行复制\",{\"1\":{\"576\":1}}],[\"因此\",{\"1\":{\"367\":1,\"382\":1}}],[\"因此在加入\",{\"1\":{\"352\":1}}],[\"因此方便测试效果直接修改源码的配置\",{\"1\":{\"271\":1}}],[\"因此通常由核心系统提供插件通信机制\",{\"1\":{\"216\":1}}],[\"因此表格中的支持时间仅供参考\",{\"1\":{\"79\":1}}],[\"因此超时的\",{\"1\":{\"62\":1}}],[\"因此其性能与你的\",{\"1\":{\"61\":1}}],[\"因此需要学生新增\",{\"1\":{\"47\":1}}],[\"作用\",{\"1\":{\"200\":8,\"231\":2,\"234\":1}}],[\"作用仅是根据数据类型\",{\"1\":{\"148\":1}}],[\"作为缓存\",{\"1\":{\"763\":1}}],[\"作为变量\",{\"1\":{\"664\":1}}],[\"作为数据库\",{\"1\":{\"631\":1}}],[\"作为数据同步和注册中心\",{\"1\":{\"313\":1}}],[\"作为开发者\",{\"1\":{\"629\":1}}],[\"作为国内优秀的开源网关\",{\"1\":{\"264\":1}}],[\"作为前缀开始\",{\"1\":{\"258\":1}}],[\"作为\",{\"1\":{\"135\":2,\"160\":2,\"161\":1,\"313\":2,\"763\":1}}],[\"作为微服务网关\",{\"1\":{\"113\":1}}],[\"作为一个有良心的作者\",{\"1\":{\"753\":1}}],[\"作为一个中转站\",{\"1\":{\"141\":1}}],[\"作为一个开源项目\",{\"1\":{\"56\":1}}],[\"作为一门优秀的编程语言\",{\"1\":{\"91\":1}}],[\"作为一门长盛不衰的编程语言\",{\"1\":{\"91\":1}}],[\"作为一款新出的监控工具\",{\"1\":{\"54\":1}}],[\"作者介绍\",{\"0\":{\"806\":1}}],[\"作者也是一个很强大的男人\",{\"1\":{\"746\":1}}],[\"作者也有工作\",{\"1\":{\"493\":1}}],[\"作者录制了相关的视频\",{\"1\":{\"613\":1}}],[\"作者简介\",{\"0\":{\"404\":1}}],[\"作者本人过往工作\",{\"1\":{\"396\":1}}],[\"作者\",{\"1\":{\"30\":1,\"33\":1,\"593\":1,\"599\":1,\"632\":1,\"806\":1,\"820\":1}}],[\"能力\",{\"0\":{\"623\":1,\"624\":1},\"1\":{\"624\":1}}],[\"能力有限\",{\"1\":{\"308\":1,\"587\":1}}],[\"能轻松直观地查看指标计算是否正确\",{\"1\":{\"590\":1}}],[\"能否被即时刷新的特点受到了很多开发者的喜爱\",{\"1\":{\"502\":1}}],[\"能监控到每一个节点的各项指标数据\",{\"1\":{\"469\":1}}],[\"能自动帮我汇总结果吗\",{\"1\":{\"406\":1}}],[\"能做的越来越好\",{\"1\":{\"308\":1}}],[\"能帮助开发者和中小团队快速搭建自有监控系统\",{\"1\":{\"53\":1}}],[\"能够提供安全可靠的设备与服务器之间的通信服务\",{\"1\":{\"803\":1}}],[\"能够适应不同的物联网设备调试场景\",{\"1\":{\"803\":1}}],[\"能够处理通信过程中的数据丢失\",{\"1\":{\"803\":1}}],[\"能够用\",{\"0\":{\"502\":1}}],[\"能够智能的挑选正确的数据源\",{\"1\":{\"483\":1}}],[\"能够让你的系统逻辑任意编排\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"能够通过调用本地接口方法的方式发送\",{\"1\":{\"426\":1}}],[\"能够生成一对多的索引关系\",{\"1\":{\"47\":1}}],[\"能够支持对单个类成员变量配置生成索引逻辑\",{\"1\":{\"47\":1}}],[\"低消耗\",{\"1\":{\"790\":1}}],[\"低\",{\"1\":{\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2}}],[\"低头砍树\",{\"0\":{\"469\":1}}],[\"低意义工作\",{\"1\":{\"396\":1}}],[\"低效\",{\"1\":{\"396\":1}}],[\"低耦合\",{\"1\":{\"53\":1,\"452\":1,\"608\":1}}],[\"低码\",{\"1\":{\"46\":1}}],[\"多参与开源\",{\"1\":{\"792\":1}}],[\"多参数\",{\"1\":{\"787\":1}}],[\"多参数未加\",{\"1\":{\"619\":1}}],[\"多租户某些状态下配置存在问题\",{\"1\":{\"776\":1}}],[\"多租户功能\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"多方共用\",{\"0\":{\"767\":1,\"768\":1}}],[\"多久之后\",{\"1\":{\"753\":1}}],[\"多项指标性能监控\",{\"1\":{\"706\":1}}],[\"多适配\",{\"1\":{\"624\":1}}],[\"多环境单测插件\",{\"1\":{\"608\":1}}],[\"多副本存储\",{\"1\":{\"608\":1}}],[\"多分片\",{\"1\":{\"608\":1}}],[\"多硬盘\",{\"1\":{\"608\":1}}],[\"多数据源前后端代码的生成\",{\"1\":{\"609\":1}}],[\"多数据源事务\",{\"1\":{\"608\":1}}],[\"多数据源框架\",{\"1\":{\"608\":1}}],[\"多经常性出问题\",{\"1\":{\"608\":1}}],[\"多主集群等模式\",{\"1\":{\"608\":1}}],[\"多协议\",{\"1\":{\"577\":1}}],[\"多客户端使用\",{\"1\":{\"577\":1}}],[\"多版本本并行等特性\",{\"1\":{\"469\":1}}],[\"多版本兼容性等新特性\",{\"1\":{\"90\":1}}],[\"多采集器集群横向扩展\",{\"1\":{\"454\":1}}],[\"多模式\",{\"1\":{\"409\":1,\"419\":1}}],[\"多配置中心支持\",{\"1\":{\"409\":1,\"419\":1}}],[\"多而不深的问题\",{\"1\":{\"367\":1,\"382\":1}}],[\"多级缓存\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"多余的请求将会直接报错\",{\"1\":{\"266\":1}}],[\"多余的请求首先会进入等待队列\",{\"1\":{\"266\":1}}],[\"多余的请求直接报错返回\",{\"1\":{\"266\":1}}],[\"多余的请求直接拒绝或者加入等待队列\",{\"1\":{\"263\":1}}],[\"多个测试用例全部都是针对于\",{\"1\":{\"482\":1}}],[\"多个采集器名称不能相同\",{\"1\":{\"457\":1,\"465\":1}}],[\"多个参数类型\",{\"1\":{\"278\":1}}],[\"多个业务流程都依赖该服务\",{\"1\":{\"262\":1}}],[\"多个顶级项目以及数十个孵化器项目\",{\"1\":{\"11\":1}}],[\"多层缓存\",{\"0\":{\"178\":1}}],[\"多次清除操作\",{\"1\":{\"606\":1}}],[\"多次同步事件错误\",{\"1\":{\"316\":1}}],[\"多次请求时\",{\"1\":{\"272\":1}}],[\"多次调用拉取数据方法\",{\"1\":{\"148\":1}}],[\"多次调用只会访问同个节点\",{\"1\":{\"133\":1}}],[\"多次执行\",{\"1\":{\"108\":1}}],[\"多种\",{\"1\":{\"706\":1,\"787\":1}}],[\"多种协议\",{\"1\":{\"577\":1}}],[\"多种不同日志序列化方式\",{\"1\":{\"65\":1}}],[\"多种事务日志的存储方式\",{\"1\":{\"65\":1}}],[\"多类型支持\",{\"1\":{\"53\":1,\"452\":1}}],[\"或每隔执行超过\",{\"1\":{\"406\":1}}],[\"或线程数达到阈值后\",{\"1\":{\"266\":1}}],[\"或双\",{\"1\":{\"262\":1}}],[\"或是个人有学习网关的追求\",{\"1\":{\"127\":1}}],[\"或是想为自己的履历增添优势\",{\"1\":{\"36\":1}}],[\"或新节点启动\",{\"1\":{\"125\":1}}],[\"或新节点启动走的逻辑\",{\"1\":{\"125\":1}}],[\"或者提供代码参与开发的朋友也可以加群来进行讨论\",{\"1\":{\"786\":1}}],[\"或者提交\",{\"1\":{\"60\":1}}],[\"或者需要学习交流\",{\"1\":{\"786\":1}}],[\"或者是\",{\"1\":{\"766\":1}}],[\"或者是看了没怎么看懂\",{\"1\":{\"64\":1}}],[\"或者创建\",{\"1\":{\"587\":1}}],[\"或者数据源是从外部获取的\",{\"1\":{\"483\":1}}],[\"或者使用\",{\"1\":{\"457\":1,\"465\":1}}],[\"或者说降低用户的信任门槛\",{\"1\":{\"456\":1}}],[\"或者为什么要做开源\",{\"1\":{\"456\":1}}],[\"或者加我微信拉入其他群\",{\"1\":{\"424\":1}}],[\"或者对项目有什么想法或者建议\",{\"1\":{\"415\":1,\"424\":1}}],[\"或者配合其他项目的一些工作和任务\",{\"1\":{\"306\":1}}],[\"或者直接触发服务降级\",{\"1\":{\"264\":1}}],[\"或者实现\",{\"1\":{\"200\":1}}],[\"或者相同则很直接的随机集群长度即可\",{\"1\":{\"134\":1}}],[\"或者or\",{\"1\":{\"114\":1}}],[\"或者\",{\"0\":{\"68\":1},\"1\":{\"520\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"664\":5}}],[\"或\",{\"1\":{\"53\":1,\"81\":1,\"266\":1,\"326\":1,\"336\":1,\"340\":1,\"359\":1,\"363\":1,\"377\":1,\"379\":1,\"392\":1,\"394\":1,\"401\":1,\"441\":1,\"452\":1,\"464\":1,\"554\":1,\"564\":1,\"608\":1}}],[\"ks3\",{\"1\":{\"808\":1}}],[\"kodo\",{\"1\":{\"808\":1}}],[\"kotlin\",{\"1\":{\"651\":1,\"660\":1}}],[\"konbai\",{\"1\":{\"619\":1}}],[\"koonchen\",{\"1\":{\"317\":1}}],[\"k3s\",{\"1\":{\"340\":1}}],[\"k3u1fbpfcp\",{\"1\":{\"234\":2}}],[\"kyao\",{\"1\":{\"420\":3,\"421\":1,\"422\":1}}],[\"kylin5\",{\"1\":{\"331\":1}}],[\"kyuubi\",{\"1\":{\"331\":2}}],[\"kubernetes\",{\"1\":{\"313\":2,\"336\":1,\"340\":1,\"445\":1,\"449\":1,\"459\":1,\"461\":1}}],[\"kaka996\",{\"1\":{\"642\":1,\"649\":1}}],[\"kakk22\",{\"1\":{\"317\":1}}],[\"kamtohung\",{\"1\":{\"411\":3,\"412\":2,\"413\":3,\"421\":1,\"422\":1}}],[\"kangtomwk\",{\"1\":{\"335\":1}}],[\"kaitoshy\",{\"1\":{\"308\":1}}],[\"kafkalogcollectclient\",{\"1\":{\"316\":1}}],[\"kafka\",{\"1\":{\"79\":1,\"445\":1,\"448\":2,\"449\":1,\"459\":1}}],[\"kerberos\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"keep\",{\"1\":{\"501\":1}}],[\"keepcarry\",{\"1\":{\"308\":1}}],[\"keguo\",{\"1\":{\"317\":1}}],[\"ken\",{\"1\":{\"308\":1}}],[\"key=xxx\",{\"1\":{\"624\":1}}],[\"keys\",{\"0\":{\"251\":1},\"1\":{\"249\":2,\"251\":1,\"252\":3,\"608\":1}}],[\"keyset\",{\"1\":{\"191\":1,\"209\":2}}],[\"key\",{\"1\":{\"71\":16,\"135\":5,\"153\":1,\"158\":3,\"167\":1,\"177\":1,\"179\":1,\"186\":2,\"191\":3,\"195\":2,\"225\":2,\"247\":1,\"249\":1,\"250\":2,\"252\":6,\"278\":1,\"289\":1,\"293\":3,\"294\":2,\"458\":1,\"585\":2,\"604\":1,\"618\":1,\"619\":2,\"671\":2,\"677\":4,\"678\":2,\"759\":2,\"763\":5,\"770\":1,\"772\":2,\"814\":2}}],[\"kv\",{\"1\":{\"183\":1}}],[\"k\",{\"1\":{\"177\":1,\"180\":1,\"183\":7,\"227\":3,\"518\":2}}],[\"kroy>hessian>protostuff>jdk\",{\"1\":{\"64\":1}}],[\"kroy\",{\"1\":{\"64\":1,\"778\":1}}],[\"kryo\",{\"1\":{\"64\":1,\"65\":1,\"74\":2,\"77\":1,\"709\":1,\"713\":1}}],[\"kim\",{\"1\":{\"727\":1,\"741\":1,\"766\":1}}],[\"kimmking\",{\"1\":{\"308\":1}}],[\"kimming\",{\"1\":{\"26\":1,\"30\":1,\"33\":1}}],[\"killall\",{\"1\":{\"637\":1}}],[\"kill\",{\"1\":{\"64\":1}}],[\"k8s模式适用\",{\"1\":{\"313\":1}}],[\"k8s\",{\"1\":{\"53\":1,\"55\":1,\"313\":1,\"314\":1,\"315\":1,\"338\":1,\"340\":2,\"441\":1,\"445\":1,\"449\":1,\"452\":1,\"459\":1,\"464\":1}}],[\"你定好了\",{\"1\":{\"792\":1}}],[\"你又怎么说\",{\"1\":{\"792\":2}}],[\"你又怎么拆分呢\",{\"1\":{\"791\":1}}],[\"你好意思么\",{\"1\":{\"791\":1}}],[\"你不会\",{\"1\":{\"791\":1}}],[\"你想怎么玩都可以\",{\"1\":{\"791\":1}}],[\"你想要使用什么插件\",{\"1\":{\"789\":1}}],[\"你要发布新的版本\",{\"1\":{\"791\":1}}],[\"你要发布商品模块的接口\",{\"1\":{\"791\":1}}],[\"你要发版会造成所有其他的模块也操作不了\",{\"1\":{\"783\":1}}],[\"你需要用到呢\",{\"1\":{\"791\":1}}],[\"你就新增该插件的依赖\",{\"1\":{\"789\":1}}],[\"你怎么处理呢\",{\"1\":{\"784\":2,\"791\":2}}],[\"你的url\",{\"1\":{\"788\":1}}],[\"你的业务系统可能定义的结果并不是上述结构\",{\"1\":{\"783\":1}}],[\"你的\",{\"1\":{\"783\":2}}],[\"你的支持是我们前进的动力\",{\"1\":{\"415\":1,\"424\":1}}],[\"你关注的短信框架终于更新啦\",{\"1\":{\"742\":1}}],[\"你们的反馈和使用经验使得平台不断优化\",{\"1\":{\"633\":1}}],[\"你们的建议对\",{\"1\":{\"633\":1}}],[\"你只需要在网关新增一个适合自己业务的鉴权插件就\",{\"1\":{\"791\":1}}],[\"你只需要开启这个配置即可\",{\"1\":{\"521\":1}}],[\"你只需要把定义换一下就\",{\"1\":{\"474\":1}}],[\"你也可以直接以下这个码来加入新群\",{\"1\":{\"511\":1,\"523\":1}}],[\"你可以引入以下依赖\",{\"1\":{\"789\":1}}],[\"你可以在网关里面\",{\"1\":{\"791\":1}}],[\"你可以在\",{\"1\":{\"789\":1}}],[\"你可以自己实现一个接口\",{\"1\":{\"763\":1}}],[\"你可以以一种极简的方式实现系统的权限认证部分\",{\"1\":{\"624\":1}}],[\"你可以使用\",{\"1\":{\"520\":1}}],[\"你可以如下进行动态构建\",{\"1\":{\"517\":1}}],[\"你可以调用如下方法来传入一个已有的\",{\"1\":{\"474\":1}}],[\"你可以去买彩票了\",{\"1\":{\"69\":1}}],[\"你有任何问题\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"你无需引用全部依赖\",{\"1\":{\"269\":1}}],[\"你值得拥有\",{\"1\":{\"127\":1}}],[\"你还在用8吗\",{\"0\":{\"78\":1}}],[\"你信不信\",{\"1\":{\"64\":1}}],[\"你是失败的\",{\"1\":{\"62\":1}}],[\"你相信\",{\"1\":{\"53\":1}}],[\"你都能找到自己的机会\",{\"1\":{\"36\":1}}],[\"钉钉\",{\"1\":{\"53\":1,\"409\":1,\"419\":1,\"449\":1,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2,\"764\":1}}],[\"集成了网关\",{\"1\":{\"783\":1}}],[\"集成的\",{\"1\":{\"763\":1}}],[\"集成更强大的\",{\"1\":{\"615\":1}}],[\"集成内部\",{\"1\":{\"422\":1}}],[\"集成管理常用第三方组件的线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"集成和兼容内容过多\",{\"1\":{\"367\":1,\"382\":1}}],[\"集成新组件\",{\"1\":{\"338\":2}}],[\"集成\",{\"0\":{\"326\":1},\"1\":{\"631\":1}}],[\"集成测试响应大小\",{\"1\":{\"316\":1}}],[\"集合场景不变更\",{\"1\":{\"671\":1}}],[\"集合里\",{\"1\":{\"158\":1}}],[\"集合\",{\"1\":{\"141\":1,\"177\":1}}],[\"集合工厂方法\",{\"1\":{\"79\":1,\"81\":1}}],[\"集群高性能的关键之一\",{\"1\":{\"790\":1}}],[\"集群配置\",{\"1\":{\"702\":1}}],[\"集群时候负载均衡策略\",{\"0\":{\"702\":1}}],[\"集群需要做很多配置与改造\",{\"1\":{\"608\":1}}],[\"集群心跳保活\",{\"1\":{\"460\":1}}],[\"集群版不仅仅给我们带来了更强大的监控性能\",{\"1\":{\"453\":1}}],[\"集群版如期与大家见面了\",{\"1\":{\"453\":1}}],[\"集群版来啦\",{\"0\":{\"453\":1}}],[\"集群版\",{\"0\":{\"450\":1}}],[\"集群问题\",{\"1\":{\"339\":1}}],[\"集群模式\",{\"1\":{\"321\":1}}],[\"集群中的\",{\"1\":{\"112\":1}}],[\"集群\",{\"1\":{\"64\":1,\"445\":1}}],[\"集群的时候\",{\"1\":{\"71\":1}}],[\"集群的\",{\"1\":{\"64\":1}}],[\"集群>mysql>zookeeper\",{\"1\":{\"64\":1}}],[\"集群环境中定时恢复问题\",{\"1\":{\"63\":1}}],[\"集\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"解压neutrino\",{\"1\":{\"583\":1}}],[\"解决版本依赖管理冲突的问题\",{\"1\":{\"713\":1}}],[\"解决疑难\",{\"0\":{\"708\":1},\"1\":{\"704\":1}}],[\"解决搜索用例后新打开用例名称出现乱码的情况\",{\"1\":{\"631\":1}}],[\"解决无法查看自己创建的角色问题\",{\"1\":{\"617\":1}}],[\"解决修改实体类\",{\"1\":{\"616\":1}}],[\"解决实际推送的告警信息看着不准的问题\",{\"1\":{\"413\":1}}],[\"解决\",{\"0\":{\"714\":1},\"1\":{\"397\":1,\"700\":1,\"714\":1,\"724\":1}}],[\"解决部分包依赖不合理问题\",{\"1\":{\"397\":1}}],[\"解决在新版\",{\"1\":{\"383\":1}}],[\"解决以上问题\",{\"1\":{\"367\":1,\"382\":1}}],[\"解决大量类型校验问题\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"解决方案与咨询\",{\"1\":{\"37\":1}}],[\"解析器\",{\"1\":{\"783\":1}}],[\"解析问题\",{\"1\":{\"755\":2}}],[\"解析\",{\"1\":{\"723\":1}}],[\"解析模块\",{\"1\":{\"713\":1}}],[\"解析优化\",{\"1\":{\"651\":1,\"692\":1}}],[\"解析资源文件为\",{\"1\":{\"183\":1}}],[\"解析资源文件\",{\"1\":{\"180\":1}}],[\"解析出资源文件中写入的实现类类名\",{\"1\":{\"167\":1}}],[\"解读\",{\"1\":{\"52\":1}}],[\"本着\",{\"1\":{\"764\":1}}],[\"本来这个版本应该是\",{\"1\":{\"720\":1}}],[\"本版本优化了众多操作细节\",{\"1\":{\"672\":1}}],[\"本机文件存储\",{\"1\":{\"608\":1}}],[\"本框架\",{\"1\":{\"608\":1,\"609\":1}}],[\"本框架与\",{\"0\":{\"608\":1,\"609\":1}}],[\"本地模式\",{\"1\":{\"713\":1}}],[\"本地\",{\"1\":{\"586\":2,\"640\":1,\"647\":1}}],[\"本地启动被代理服务\",{\"1\":{\"586\":1}}],[\"本地开发调试模式baseurl改为本地地址\",{\"1\":{\"529\":1}}],[\"本地文件监听异常会导致监听线程停止\",{\"1\":{\"492\":1}}],[\"本例中的质数统计流程图如下\",{\"1\":{\"406\":1}}],[\"本身的相关设置\",{\"1\":{\"722\":1}}],[\"本身更加专精和独立\",{\"1\":{\"367\":1,\"382\":1}}],[\"本身在云商店完全免费\",{\"1\":{\"57\":1}}],[\"本次版本中\",{\"1\":{\"776\":1}}],[\"本次版本为大版本更新\",{\"1\":{\"768\":1}}],[\"本次网易云短信来自贡献者\",{\"1\":{\"762\":1}}],[\"本次restful\",{\"1\":{\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"本次\",{\"1\":{\"651\":1,\"663\":1}}],[\"本次更新带来了诸多的新特性\",{\"1\":{\"743\":1}}],[\"本次更新\",{\"0\":{\"637\":1,\"644\":1}}],[\"本次更新列表\",{\"1\":{\"468\":1}}],[\"本次更新总共为\",{\"1\":{\"468\":1}}],[\"本次更新内容\",{\"0\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1,\"438\":1}}],[\"本次新版本主要为增强版本\",{\"1\":{\"468\":1}}],[\"本次大会将邀请\",{\"1\":{\"15\":1}}],[\"本原则为组织的试运行指导方案\",{\"1\":{\"306\":1}}],[\"本章只关注\",{\"1\":{\"287\":1}}],[\"本文不作解释\",{\"1\":{\"287\":1}}],[\"本文首先会介绍熔断和流控的场景及意义\",{\"1\":{\"261\":1}}],[\"本文将介绍如何在\",{\"1\":{\"261\":1}}],[\"本人在这里疑惑的有两点\",{\"1\":{\"252\":1}}],[\"本人理解的就是一个类似于\",{\"1\":{\"232\":1}}],[\"本节重点还是看具体的doexcute方法做了哪些事\",{\"1\":{\"249\":1}}],[\"本篇从微内核架构说起\",{\"1\":{\"221\":1}}],[\"本篇分析一下\",{\"1\":{\"208\":1}}],[\"本篇接着上一篇继续跟踪源码分析\",{\"1\":{\"203\":1}}],[\"本期直播详解\",{\"0\":{\"52\":1}}],[\"快来加入我们吧\",{\"1\":{\"711\":1,\"725\":1}}],[\"快乐成长\",{\"1\":{\"715\":1}}],[\"快乐\",{\"1\":{\"707\":1,\"715\":1}}],[\"快捷键滚轮缩放画布\",{\"1\":{\"824\":1}}],[\"快捷触发\",{\"0\":{\"686\":1},\"1\":{\"683\":1}}],[\"快捷添加\",{\"0\":{\"684\":1},\"1\":{\"683\":1}}],[\"快速入门\",{\"1\":{\"813\":1,\"817\":1}}],[\"快速集成\",{\"1\":{\"712\":1}}],[\"快速与业务系统集成\",{\"1\":{\"706\":1}}],[\"快速掌握\",{\"1\":{\"635\":1}}],[\"快速使用\",{\"0\":{\"578\":1}}],[\"快速切换\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"快速迭代的使用需求\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"快速参与开源之夏\",{\"0\":{\"50\":1}}],[\"快闪演讲\",{\"1\":{\"15\":1}}],[\"常用输入文本位置进行了\",{\"1\":{\"689\":1}}],[\"常用命令\",{\"1\":{\"48\":1}}],[\"常规桌面软件\",{\"0\":{\"639\":1,\"646\":1}}],[\"常规业务\",{\"1\":{\"374\":1,\"389\":1}}],[\"常见连接机制主要有\",{\"1\":{\"216\":1}}],[\"常见的实现方法是插件注册表机制\",{\"1\":{\"216\":1}}],[\"常见问题总结\",{\"1\":{\"30\":1}}],[\"及以后的版本\",{\"1\":{\"810\":1,\"811\":1,\"812\":1}}],[\"及包名改为\",{\"1\":{\"410\":1}}],[\"及重试次数\",{\"1\":{\"235\":1}}],[\"及其相关实现类\",{\"1\":{\"234\":1}}],[\"及能力特点\",{\"1\":{\"52\":1}}],[\"及\",{\"1\":{\"48\":1}}],[\"及微信群成员近\",{\"1\":{\"46\":1}}],[\"掌握\",{\"1\":{\"48\":1}}],[\"掌握更多开源知识和技能\",{\"1\":{\"36\":1}}],[\"有效提升页面性能\",{\"1\":{\"834\":1}}],[\"有效解决\",{\"1\":{\"357\":1}}],[\"有些用户是传统的\",{\"1\":{\"792\":1}}],[\"有些用户\",{\"1\":{\"792\":1}}],[\"有些用户反馈\",{\"1\":{\"792\":1}}],[\"有人又会说\",{\"1\":{\"791\":1}}],[\"有人又会问\",{\"0\":{\"69\":1}}],[\"有所不同\",{\"1\":{\"770\":1}}],[\"有了这个模式\",{\"1\":{\"717\":1}}],[\"有了告警收敛马上解决\",{\"1\":{\"448\":1}}],[\"有道云笔记\",{\"1\":{\"636\":1,\"643\":1}}],[\"有界队列与优先队列\",{\"1\":{\"619\":1}}],[\"有对应的工具类\",{\"1\":{\"608\":1}}],[\"有需要时开启\",{\"1\":{\"574\":1}}],[\"有需要请自行下载\",{\"1\":{\"354\":1}}],[\"有可能\",{\"1\":{\"493\":1}}],[\"有同学报出这个注解有时无法正常的工作\",{\"1\":{\"485\":1}}],[\"有自己的一套数据库连接配置\",{\"1\":{\"483\":1}}],[\"有的同学可能会问\",{\"1\":{\"482\":1}}],[\"有的请求返回如下数据\",{\"1\":{\"272\":1}}],[\"有的请求返回正常数据\",{\"1\":{\"272\":1}}],[\"有非常多的同学报名了\",{\"1\":{\"469\":1}}],[\"有时候抬起头去看看方向也是非常重要的\",{\"1\":{\"469\":1}}],[\"有投入才有回报\",{\"1\":{\"456\":1}}],[\"有过后端\",{\"1\":{\"404\":1}}],[\"有跟多的时间做更有意义的事情\",{\"1\":{\"396\":1}}],[\"有\",{\"1\":{\"308\":1}}],[\"有大用了\",{\"1\":{\"308\":1}}],[\"有误的返回信息\",{\"1\":{\"288\":1}}],[\"有保护后继服务的职责\",{\"1\":{\"262\":1}}],[\"有必要说一些大前提\",{\"1\":{\"259\":1}}],[\"有兴趣的可以查看matchstrategy\",{\"1\":{\"234\":1}}],[\"有一个插件执行完成后传递给下一个插件\",{\"1\":{\"232\":1}}],[\"有一定的影响\",{\"1\":{\"229\":1}}],[\"有看到过一行代码\",{\"1\":{\"164\":1}}],[\"有序增长\",{\"1\":{\"608\":1}}],[\"有序线程池实现\",{\"1\":{\"411\":1}}],[\"有序线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"有序\",{\"1\":{\"133\":1}}],[\"有个小坑需要注意\",{\"1\":{\"130\":1}}],[\"有两个逻辑\",{\"1\":{\"129\":1}}],[\"有定时任务定期探活\",{\"1\":{\"125\":1}}],[\"有什么关系\",{\"1\":{\"92\":1}}],[\"有内置的调度线程池来进行恢复\",{\"1\":{\"68\":1}}],[\"有用户需要检索药品库中某种药品\",{\"1\":{\"47\":1}}],[\"有成千上万的个人及团队在使用\",{\"1\":{\"37\":1}}],[\"长轮询方式\",{\"1\":{\"160\":1}}],[\"长轮询\",{\"1\":{\"156\":1,\"790\":1}}],[\"长轮询分析的最后一篇\",{\"1\":{\"147\":1}}],[\"长轮询分享\",{\"1\":{\"33\":1}}],[\"长轮询不会直接覆盖\",{\"1\":{\"144\":1}}],[\"长轮询实现\",{\"0\":{\"144\":1}}],[\"长轮询实现方式思考\",{\"0\":{\"143\":1}}],[\"长轮询现在要以何种方式去通知网关呢\",{\"1\":{\"142\":1}}],[\"长轮询也肯定要做这事\",{\"1\":{\"142\":1}}],[\"长轮询模块会怎么实现呢\",{\"1\":{\"142\":1}}],[\"长轮询的\",{\"1\":{\"141\":1}}],[\"长轮询篇\",{\"0\":{\"139\":1,\"147\":1},\"1\":{\"149\":1}}],[\"长连接\",{\"1\":{\"126\":1,\"150\":1}}],[\"长连接发送数据\",{\"1\":{\"125\":1}}],[\"长期支持版\",{\"1\":{\"79\":3}}],[\"长期坚持用爱发电\",{\"1\":{\"46\":1}}],[\"qingstor\",{\"1\":{\"808\":1}}],[\"qiniu\",{\"1\":{\"354\":1}}],[\"qiudaozhang\",{\"1\":{\"624\":1}}],[\"qlexpress\",{\"1\":{\"502\":1}}],[\"qyaaaa\",{\"1\":{\"461\":1}}],[\"quickstart\",{\"1\":{\"788\":1}}],[\"quartz\",{\"1\":{\"608\":1}}],[\"quay\",{\"1\":{\"448\":1,\"457\":2,\"465\":2}}],[\"quasar\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"queue\",{\"1\":{\"420\":1}}],[\"querypageresults\",{\"1\":{\"547\":1}}],[\"queryparams\",{\"1\":{\"232\":2}}],[\"query\",{\"1\":{\"92\":1,\"114\":1,\"458\":1}}],[\"qzwml\",{\"1\":{\"308\":1}}],[\"qsli\",{\"1\":{\"296\":1}}],[\"qps\",{\"1\":{\"263\":3,\"266\":8,\"787\":1}}],[\"q\",{\"1\":{\"46\":1}}],[\"qq\",{\"1\":{\"42\":1,\"77\":1,\"465\":1,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1,\"636\":1,\"643\":1,\"711\":1,\"718\":1,\"774\":2,\"782\":1,\"786\":1,\"806\":2}}],[\"倍代码量\",{\"1\":{\"46\":1}}],[\"全景图\",{\"1\":{\"713\":2}}],[\"全屏操作\",{\"1\":{\"667\":1}}],[\"全方位掌握实时\",{\"1\":{\"577\":1}}],[\"全方位的超时控制\",{\"0\":{\"504\":1}}],[\"全\",{\"1\":{\"447\":1,\"452\":1,\"464\":1,\"608\":1}}],[\"全站\",{\"1\":{\"445\":1}}],[\"全栈开发工程师\",{\"1\":{\"806\":1}}],[\"全栈\",{\"1\":{\"404\":1}}],[\"全部转向了\",{\"1\":{\"484\":1}}],[\"全部混在同一个类中\",{\"1\":{\"374\":1,\"389\":1}}],[\"全部获取后\",{\"1\":{\"156\":1}}],[\"全特性支持及扩展\",{\"0\":{\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"全新来袭\",{\"0\":{\"737\":1,\"738\":1}}],[\"全新扁平化图标\",{\"0\":{\"666\":1,\"668\":1},\"1\":{\"667\":1}}],[\"全新背景图\",{\"1\":{\"604\":1}}],[\"全新前端工程\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"全新\",{\"1\":{\"353\":1,\"604\":1}}],[\"全新的安全存储机制\",{\"1\":{\"79\":1}}],[\"全面\",{\"1\":{\"367\":1,\"382\":1}}],[\"全面整合\",{\"1\":{\"357\":1}}],[\"全面融合\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"全面支持\",{\"0\":{\"482\":1},\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"全面的展示了前后端交互涉及\",{\"1\":{\"370\":1,\"385\":1}}],[\"全面的\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"全面拥抱\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"全系更新核心组件及基础设置版本\",{\"0\":{\"351\":1}}],[\"全力支持参与开源贡献自己的微博力量\",{\"1\":{\"308\":1}}],[\"全量服务散列表\",{\"1\":{\"225\":1}}],[\"全局过滤器\",{\"1\":{\"624\":1}}],[\"全局过滤器抽离\",{\"1\":{\"624\":1}}],[\"全局拦截器的改造\",{\"0\":{\"488\":1}}],[\"全局异常处理器\",{\"1\":{\"617\":1}}],[\"全局异常处理\",{\"1\":{\"315\":1}}],[\"全局插件\",{\"1\":{\"231\":1}}],[\"全局查找\",{\"1\":{\"220\":1}}],[\"全局搜索\",{\"1\":{\"122\":1}}],[\"全称为\",{\"1\":{\"165\":1}}],[\"全调用\",{\"1\":{\"148\":1}}],[\"全流量则不走\",{\"1\":{\"114\":1}}],[\"全自动索引托管及数据迁移\",{\"1\":{\"46\":1}}],[\"全球开源技术峰会\",{\"1\":{\"15\":1}}],[\"易于使用和维护\",{\"1\":{\"730\":1}}],[\"易于扩展\",{\"1\":{\"608\":1}}],[\"易使用的柔性分布式事务解决方案\",{\"1\":{\"712\":1}}],[\"易丢失泄漏\",{\"1\":{\"608\":1}}],[\"易部署等特性\",{\"1\":{\"311\":1}}],[\"易扩展\",{\"1\":{\"53\":1,\"452\":1}}],[\"易拓展等特性\",{\"1\":{\"46\":1}}],[\"易用性\",{\"1\":{\"706\":1}}],[\"易用友好\",{\"1\":{\"452\":1,\"464\":1}}],[\"易用友好的开源实时监控系统\",{\"0\":{\"450\":1}}],[\"易用\",{\"1\":{\"46\":1}}],[\"智能电视\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"智能容错和负载均衡\",{\"1\":{\"277\":1}}],[\"智能\",{\"1\":{\"46\":1}}],[\"二维码支持矢量格式印刷\",{\"1\":{\"827\":1}}],[\"二维码\",{\"1\":{\"820\":1}}],[\"二种注册中心\",{\"1\":{\"787\":1}}],[\"二级认证校验\",{\"1\":{\"608\":1}}],[\"二级缓存\",{\"1\":{\"357\":1}}],[\"二次开发修改了\",{\"1\":{\"456\":1}}],[\"二次调用时传入相同\",{\"1\":{\"176\":1}}],[\"二次调用不会再有反射消耗\",{\"1\":{\"167\":1}}],[\"二层缓存之一\",{\"1\":{\"178\":2}}],[\"二是轮询监听变化\",{\"1\":{\"147\":1}}],[\"二是执行插件链上的下个插件\",{\"1\":{\"129\":1}}],[\"二\",{\"0\":{\"45\":1,\"113\":1,\"199\":1,\"205\":1,\"214\":1,\"357\":1}}],[\"申请了域名\",{\"1\":{\"693\":1}}],[\"申请退出流程\",{\"1\":{\"305\":1}}],[\"申请一个令牌\",{\"1\":{\"252\":1}}],[\"申请地址\",{\"1\":{\"44\":1,\"49\":1}}],[\"申请加入组织\",{\"1\":{\"5\":1}}],[\"较强的英文表达能力\",{\"1\":{\"43\":1}}],[\"熟悉相关技术栈\",{\"1\":{\"634\":1}}],[\"熟悉\",{\"1\":{\"43\":2,\"48\":3}}],[\"熟练的前端开发\",{\"1\":{\"43\":1}}],[\"中存在的一些问题\",{\"1\":{\"776\":1}}],[\"中存储规则和脚本\",{\"0\":{\"503\":1}}],[\"中大写转换问题\",{\"1\":{\"724\":1}}],[\"中任意位置右键唤起generate\",{\"1\":{\"696\":1}}],[\"中任意位置右键唤起\",{\"1\":{\"686\":1}}],[\"中包含此\",{\"1\":{\"678\":1}}],[\"中包含所有网关加载的插件\",{\"1\":{\"130\":1}}],[\"中直接输入\",{\"1\":{\"678\":1}}],[\"中可以设置存储一些变量\",{\"1\":{\"677\":1}}],[\"中目录删除\",{\"1\":{\"675\":1}}],[\"中用于获取当前\",{\"1\":{\"656\":1}}],[\"中校验直接返回\",{\"1\":{\"604\":1}}],[\"中启动项目有异常抛出\",{\"1\":{\"598\":1}}],[\"中微子代理仓库\",{\"1\":{\"587\":1}}],[\"中微子代理官网\",{\"1\":{\"587\":1}}],[\"中微子代理\",{\"1\":{\"576\":1,\"578\":1}}],[\"中推出了数据库自动轮询更新模式\",{\"1\":{\"515\":1}}],[\"中文站\",{\"1\":{\"693\":1}}],[\"中文寓意为\",{\"1\":{\"501\":1}}],[\"中文名称为赫兹跳动\",{\"1\":{\"53\":1}}],[\"中小团队和个人无需再为监控自有资源而去部署一套监控系统\",{\"1\":{\"452\":1}}],[\"中显示\",{\"1\":{\"397\":1}}],[\"中部分跨\",{\"1\":{\"383\":1}}],[\"中剥离\",{\"1\":{\"368\":1}}],[\"中进行留言\",{\"1\":{\"334\":1}}],[\"中进行统一管理\",{\"1\":{\"172\":1}}],[\"中发现任何问题\",{\"1\":{\"334\":1}}],[\"中填写\",{\"1\":{\"326\":1}}],[\"中无法加载\",{\"1\":{\"316\":1}}],[\"中缺少执行器依赖项和端口错误\",{\"1\":{\"316\":1}}],[\"中收集\",{\"1\":{\"313\":1}}],[\"中动态配置\",{\"1\":{\"313\":1}}],[\"中获取一种插件进行调用\",{\"1\":{\"287\":1}}],[\"中不管是熔断后请求的处理还是被流控的请求\",{\"1\":{\"266\":1}}],[\"中我们可以针对某一组请求同时设置它的流量控制和熔断策略\",{\"1\":{\"264\":1}}],[\"中我们还有很多的细节没有描述到\",{\"1\":{\"168\":1}}],[\"中如何配置使用\",{\"1\":{\"264\":1}}],[\"中如何实现筛选\",{\"1\":{\"171\":1}}],[\"中处理方案\",{\"1\":{\"263\":1}}],[\"中使用的问题\",{\"1\":{\"331\":1}}],[\"中使用\",{\"1\":{\"315\":1}}],[\"中使用了\",{\"1\":{\"265\":1}}],[\"中使用阿里的\",{\"1\":{\"261\":1}}],[\"中使用反斜杠和$符号来表示特殊字符\",{\"1\":{\"87\":1}}],[\"中间那位特别长的数字是规则\",{\"1\":{\"250\":1}}],[\"中间件线程池管理\",{\"1\":{\"409\":1,\"419\":1}}],[\"中间件\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"中交给下游插件处理\",{\"1\":{\"236\":1}}],[\"中起到一个模板方法的作用\",{\"1\":{\"234\":1}}],[\"中插件一样继承\",{\"1\":{\"273\":1}}],[\"中插件式设计的实现\",{\"1\":{\"221\":1}}],[\"中插件链\",{\"1\":{\"220\":1}}],[\"中所有插件最终均继承自\",{\"1\":{\"219\":1}}],[\"中配置插件\",{\"1\":{\"264\":1}}],[\"中配置\",{\"1\":{\"195\":1,\"266\":1}}],[\"中配置的数据\",{\"1\":{\"112\":1}}],[\"中要使用的实现类呢\",{\"1\":{\"173\":1}}],[\"中要属\",{\"1\":{\"54\":1}}],[\"中关于\",{\"1\":{\"172\":1}}],[\"中注册了多个\",{\"1\":{\"171\":1}}],[\"中最关键的可插拔式驱动设计就是由\",{\"1\":{\"169\":1}}],[\"中有这样的一句定义\",{\"1\":{\"165\":1}}],[\"中被定时检测\",{\"1\":{\"144\":1}}],[\"中被完全移除\",{\"1\":{\"83\":1}}],[\"中维护\",{\"1\":{\"141\":1}}],[\"中是否存在相关插件所在的\",{\"1\":{\"130\":1}}],[\"中还有功能现在还没有使用到\",{\"1\":{\"92\":1}}],[\"中还有其它方法同步数据\",{\"1\":{\"92\":1}}],[\"中就真相大白了\",{\"1\":{\"92\":1}}],[\"中的文件进行上传\",{\"1\":{\"816\":1}}],[\"中的枚举\",{\"1\":{\"770\":1}}],[\"中的并行组件时\",{\"1\":{\"521\":1}}],[\"中的配置获取\",{\"1\":{\"316\":1}}],[\"中的配置项\",{\"1\":{\"264\":1}}],[\"中的请求头放到本次调用的请求头中\",{\"1\":{\"236\":1}}],[\"中的实现改了种方式\",{\"1\":{\"176\":1}}],[\"中的实现类\",{\"1\":{\"168\":1,\"173\":1,\"177\":1}}],[\"中的问题也解开了\",{\"1\":{\"173\":1}}],[\"中的\",{\"1\":{\"130\":1,\"170\":1,\"172\":1,\"174\":1,\"293\":1,\"409\":1,\"419\":1}}],[\"中的一个属性\",{\"1\":{\"130\":1}}],[\"中的呢\",{\"1\":{\"92\":1}}],[\"中的其中之一\",{\"1\":{\"43\":1}}],[\"中默认为空的\",{\"1\":{\"92\":1}}],[\"中调用到的\",{\"1\":{\"131\":1}}],[\"中调用\",{\"1\":{\"89\":1}}],[\"中定义一个\",{\"1\":{\"166\":1}}],[\"中定义接口和枚举类型\",{\"1\":{\"89\":1}}],[\"中定义静态方法和构造方法\",{\"1\":{\"88\":1}}],[\"中嵌入表达式\",{\"1\":{\"86\":1}}],[\"中重新实现了\",{\"1\":{\"85\":1}}],[\"中已被标记为\",{\"1\":{\"83\":1}}],[\"中移除了\",{\"1\":{\"83\":1}}],[\"中引入了独特的流程编排功能\",{\"1\":{\"627\":1}}],[\"中引入了依赖\",{\"1\":{\"103\":1}}],[\"中引入了\",{\"1\":{\"83\":1,\"84\":2}}],[\"中引入了线程局部握手协议\",{\"1\":{\"82\":1}}],[\"中引入了一个新的\",{\"1\":{\"88\":1,\"89\":1}}],[\"中引入了一个\",{\"1\":{\"84\":1}}],[\"中引入了一个全新的\",{\"1\":{\"83\":1}}],[\"中引入了一种新的类\",{\"1\":{\"87\":1}}],[\"中引入了一种新的\",{\"1\":{\"84\":1,\"88\":1,\"89\":1}}],[\"中引入了一种新的垃圾回收器\",{\"1\":{\"83\":1}}],[\"中引入了一种新的语法\",{\"1\":{\"82\":1,\"85\":1,\"86\":2,\"87\":1}}],[\"中引入了一项新的特性\",{\"1\":{\"82\":1}}],[\"中对\",{\"1\":{\"82\":1,\"85\":2,\"86\":2,\"87\":2,\"88\":2,\"89\":2}}],[\"中心仓库\",{\"1\":{\"73\":1}}],[\"中国开源项目评选\",{\"1\":{\"427\":2}}],[\"中国开源加油\",{\"1\":{\"308\":1}}],[\"中国社区做的那篇文章\",{\"1\":{\"61\":1}}],[\"中国在国际基金会的影响力愈发重要\",{\"1\":{\"11\":1}}],[\"中\",{\"0\":{\"195\":1},\"1\":{\"54\":1,\"81\":1,\"92\":4,\"130\":2,\"131\":1,\"136\":1,\"140\":1,\"144\":1,\"148\":1,\"167\":1,\"174\":2,\"180\":1,\"195\":1,\"232\":1,\"247\":2,\"252\":1,\"266\":1,\"278\":1,\"294\":1,\"383\":1,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2,\"628\":1,\"684\":1,\"709\":4,\"722\":1,\"723\":1,\"724\":2,\"750\":1,\"762\":1,\"803\":1}}],[\"其它更多操作\",{\"1\":{\"817\":2}}],[\"其它更新\",{\"1\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"其它操作\",{\"0\":{\"817\":1}}],[\"其它环境参考\",{\"1\":{\"814\":1}}],[\"其它兼容\",{\"1\":{\"808\":1}}],[\"其它\",{\"1\":{\"624\":1}}],[\"其\",{\"1\":{\"428\":1}}],[\"其主要实现了handleplugin的接口\",{\"1\":{\"247\":1}}],[\"其持有通过构造方法传入的插件链\",{\"1\":{\"220\":1}}],[\"其结构如下\",{\"1\":{\"219\":1}}],[\"其核心代码如下\",{\"1\":{\"219\":1}}],[\"其完整继承关系如下所示\",{\"1\":{\"219\":1}}],[\"其继承关系\",{\"1\":{\"156\":1}}],[\"其中轮询拉取模式\",{\"1\":{\"503\":1}}],[\"其中light谐音lite\",{\"1\":{\"501\":1}}],[\"其中lflog这个类是继承自\",{\"1\":{\"474\":1}}],[\"其中job\",{\"1\":{\"406\":1}}],[\"其中对于\",{\"1\":{\"259\":1}}],[\"其中包含两种场景\",{\"1\":{\"253\":1}}],[\"其中包含了我们本章分析的主题ratelimiterplugin\",{\"1\":{\"239\":1}}],[\"其中一种\",{\"1\":{\"239\":1}}],[\"其中一个在项目\",{\"1\":{\"163\":1}}],[\"其中一个是短期支持版本\",{\"1\":{\"91\":1}}],[\"其中执行了一个插件链的模式来完成了请求的处理\",{\"1\":{\"231\":1}}],[\"其中存有实现类的对象\",{\"1\":{\"179\":1}}],[\"其中最核心的类就是\",{\"1\":{\"176\":1}}],[\"其中最重要的是模块化系统\",{\"1\":{\"81\":1}}],[\"其中线程池调用这还有个关键点\",{\"1\":{\"144\":1}}],[\"其中就有网关\",{\"1\":{\"142\":1}}],[\"其中两个最基本的插件类\",{\"1\":{\"128\":1}}],[\"其中表结构及字段含义还需进一步学习和研究\",{\"1\":{\"127\":1}}],[\"其中\",{\"1\":{\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"252\":1,\"264\":1}}],[\"其中不乏尖锐的开源白嫖等话题\",{\"1\":{\"17\":1}}],[\"其次是功能的调整\",{\"0\":{\"740\":1}}],[\"其次\",{\"1\":{\"69\":1,\"141\":1,\"266\":1}}],[\"其次如果出现这种情况\",{\"1\":{\"68\":1}}],[\"其是开源社区\",{\"1\":{\"56\":1}}],[\"其实刚开始并没有这方面的规划\",{\"1\":{\"764\":1}}],[\"其实不吹不黑\",{\"1\":{\"514\":1}}],[\"其实这已经比上一个大版本已经有过之而无不及了\",{\"1\":{\"514\":1}}],[\"其实连作者自己也不知道是否支持\",{\"1\":{\"482\":1}}],[\"其实我们不难发现在defaultsoulpluginchain\",{\"1\":{\"231\":1}}],[\"其实就是\",{\"1\":{\"179\":1}}],[\"其实就是一个个监控模版\",{\"1\":{\"54\":1}}],[\"其实现类初始化时\",{\"1\":{\"172\":1}}],[\"其实现原理仍然可以参考当前已有的单字段注解\",{\"1\":{\"47\":1}}],[\"其实也没必要非得启动业务系统\",{\"1\":{\"150\":1}}],[\"其实\",{\"1\":{\"141\":1,\"482\":1}}],[\"其实原因有二点\",{\"1\":{\"71\":1}}],[\"其实几乎没有\",{\"1\":{\"63\":1}}],[\"其实那么测试时不合理的\",{\"1\":{\"61\":1}}],[\"其底层实现可以参考目前已有的\",{\"1\":{\"47\":1}}],[\"其他各种细节优化\",{\"1\":{\"834\":1}}],[\"其他只作为额外的能力\",{\"1\":{\"764\":1}}],[\"其他的使用方法请参考\",{\"1\":{\"761\":1}}],[\"其他的方面\",{\"0\":{\"741\":1}}],[\"其他配置\",{\"1\":{\"759\":1}}],[\"其他方法过滤\",{\"1\":{\"617\":1}}],[\"其他需自行编写扩展\",{\"1\":{\"608\":2}}],[\"其他环境需手动下载安装\",{\"1\":{\"608\":1}}],[\"其他多个的情况暂时不知道什么时候会出现\",{\"1\":{\"157\":1}}],[\"其他同步策略已经在忙着通知网关了\",{\"1\":{\"142\":1}}],[\"其他同步策略此时在干什么\",{\"0\":{\"142\":1}}],[\"其他类型的插件如果不重写\",{\"1\":{\"129\":1}}],[\"其他改进\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"其他\",{\"1\":{\"42\":1,\"232\":1,\"273\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"700\":1}}],[\"包名的变化\",{\"0\":{\"812\":1}}],[\"包装的工具类不得不进行修改\",{\"1\":{\"720\":1}}],[\"包中的\",{\"1\":{\"663\":1}}],[\"包使用\",{\"1\":{\"619\":1}}],[\"包内独立加载\",{\"1\":{\"617\":1}}],[\"包自行部署\",{\"0\":{\"583\":1}}],[\"包测试\",{\"1\":{\"314\":1}}],[\"包测试用例\",{\"1\":{\"314\":3}}],[\"包含的功能丰富\",{\"1\":{\"370\":1,\"385\":1}}],[\"包含\",{\"1\":{\"311\":1,\"397\":1}}],[\"包含访问密钥\",{\"1\":{\"186\":1}}],[\"包含不限于\",{\"1\":{\"40\":1}}],[\"包括设备管理\",{\"1\":{\"794\":1}}],[\"包括支持现在的\",{\"1\":{\"701\":1}}],[\"包括执行测试用例\",{\"1\":{\"628\":1}}],[\"包括详细的\",{\"1\":{\"373\":1,\"388\":1}}],[\"包括但不限于\",{\"1\":{\"322\":1}}],[\"包括且不限于组织品牌\",{\"1\":{\"306\":1}}],[\"包括调用的方法\",{\"1\":{\"294\":1}}],[\"包括\",{\"1\":{\"130\":1,\"160\":1,\"331\":1,\"426\":1}}],[\"包括模块化\",{\"1\":{\"90\":1}}],[\"包括主页的重新设计\",{\"1\":{\"42\":1}}],[\"包\",{\"0\":{\"77\":1},\"1\":{\"220\":1,\"342\":1,\"354\":1,\"413\":1,\"583\":1,\"585\":1,\"624\":1,\"700\":1,\"709\":1,\"783\":1,\"788\":2}}],[\"这年头\",{\"0\":{\"752\":1}}],[\"这将使得\",{\"1\":{\"732\":1}}],[\"这将会为\",{\"1\":{\"91\":1}}],[\"这使得项目更加轻量级\",{\"1\":{\"731\":1}}],[\"这比捐赠实惠的多\",{\"1\":{\"720\":1}}],[\"这并不能算真正意义上动态\",{\"1\":{\"517\":1}}],[\"这对开发者来说\",{\"1\":{\"515\":1}}],[\"这对一些需要生态的产品是需要的\",{\"1\":{\"456\":1}}],[\"这对一个新晋开源项目来说是不现实的\",{\"1\":{\"54\":1}}],[\"这意味着你可以无学习成本的直接在脚本里用\",{\"1\":{\"502\":1}}],[\"这句\",{\"1\":{\"501\":1}}],[\"这也就是所谓的逆操作\",{\"1\":{\"506\":1}}],[\"这也许和使用者没啥太大关系\",{\"1\":{\"484\":1}}],[\"这也是\",{\"1\":{\"790\":1}}],[\"这也是我们每一次发版的底气\",{\"1\":{\"514\":1}}],[\"这也是开源集群版的原因\",{\"1\":{\"456\":1}}],[\"这也是为什么做\",{\"1\":{\"396\":1}}],[\"这也是离我最近的社区\",{\"1\":{\"308\":1}}],[\"这也是网关最基础的能力\",{\"1\":{\"113\":1}}],[\"这也是个挑战\",{\"1\":{\"41\":1}}],[\"这就没法使用\",{\"1\":{\"483\":1}}],[\"这就导致了往往使用者同一套数据库配置要配置\",{\"1\":{\"483\":1}}],[\"这版本太新了\",{\"1\":{\"482\":1}}],[\"这在闭源程序中是很难做到的\",{\"1\":{\"456\":1}}],[\"这在以前版本是做不到的\",{\"1\":{\"430\":1}}],[\"这多用于多个隔离数据中心或不同厂商云资源和云下资源的统一监控场景\",{\"1\":{\"455\":1}}],[\"这导致数据不互通\",{\"1\":{\"455\":1}}],[\"这次又是给大家带来了诸多的干货\",{\"1\":{\"753\":1}}],[\"这次更新不仅仅改变了项目名称\",{\"1\":{\"738\":1}}],[\"这次版本\",{\"1\":{\"502\":1}}],[\"这次我们推出了全新的\",{\"1\":{\"517\":1}}],[\"这次我们新增了\",{\"1\":{\"503\":1}}],[\"这次我们改造了这个接口的实现参数\",{\"1\":{\"488\":1}}],[\"这次我们支持了让\",{\"1\":{\"483\":1}}],[\"这次这个回调方法改成了如下形式\",{\"1\":{\"487\":1}}],[\"这次修复了社区内提供的\",{\"1\":{\"475\":1}}],[\"这次累计\",{\"1\":{\"448\":1}}],[\"这次有了经验\",{\"1\":{\"140\":1}}],[\"这位人物就是意大利人但丁\",{\"1\":{\"352\":1}}],[\"这三种缓存我将它分为二层\",{\"1\":{\"178\":1}}],[\"这行才是关键调用\",{\"1\":{\"167\":1}}],[\"这行\",{\"1\":{\"164\":1}}],[\"这是中国人在\",{\"1\":{\"792\":1}}],[\"这是未来的重点\",{\"1\":{\"791\":1}}],[\"这是由于\",{\"1\":{\"482\":1}}],[\"这是令牌桶的填充速率\",{\"1\":{\"241\":1}}],[\"这是令牌桶可以保存的令牌数\",{\"1\":{\"241\":1}}],[\"这是一个负载均衡器\",{\"1\":{\"164\":1}}],[\"这是用来长轮询的\",{\"1\":{\"92\":1}}],[\"这时候\",{\"1\":{\"208\":2}}],[\"这时候框架会取缓存中的\",{\"1\":{\"69\":1}}],[\"这时触发\",{\"1\":{\"158\":1}}],[\"这几个处理步骤被分散到下面这些类的方法协作中\",{\"1\":{\"148\":1}}],[\"这可不成\",{\"1\":{\"145\":1}}],[\"这\",{\"1\":{\"145\":1}}],[\"这两个策略的通知方式也不同\",{\"1\":{\"142\":1}}],[\"这两个的作用了解了\",{\"1\":{\"141\":1}}],[\"这一路走来\",{\"1\":{\"792\":1}}],[\"这一切只需要在你原来的配置中加入\",{\"1\":{\"515\":1}}],[\"这一切归功于\",{\"1\":{\"514\":1}}],[\"这一切的前提只需要你在组件中实现rollback方法\",{\"1\":{\"506\":1}}],[\"这一层缓存会借助第二层缓存\",{\"1\":{\"181\":1}}],[\"这一环\",{\"1\":{\"137\":1}}],[\"这一点没弄明白\",{\"1\":{\"92\":1}}],[\"这块其实用的就是\",{\"1\":{\"170\":1}}],[\"这块在后台总结中有具体分析\",{\"1\":{\"149\":1}}],[\"这块在下个模块分析\",{\"1\":{\"148\":1}}],[\"这块我也没有了解过\",{\"1\":{\"145\":1}}],[\"这块分析完了再回到\",{\"1\":{\"144\":1}}],[\"这块的实现\",{\"1\":{\"144\":1}}],[\"这块\",{\"1\":{\"130\":1}}],[\"这篇会持续更新\",{\"1\":{\"92\":1}}],[\"这些都是要考虑的\",{\"1\":{\"792\":1}}],[\"这些问题的解决必须修改原有代码结构\",{\"1\":{\"720\":1}}],[\"这些我们全都要\",{\"1\":{\"442\":1}}],[\"这些项目经历\",{\"1\":{\"396\":1}}],[\"这些配置项主要可以分为\",{\"1\":{\"264\":1}}],[\"这些大型促销时\",{\"1\":{\"262\":1}}],[\"这些监听器是什么时候注入到容器中的呢\",{\"1\":{\"156\":1}}],[\"这些疑问我会在下一章继续分析~\",{\"1\":{\"145\":1}}],[\"这些被调用的方法由子类实现\",{\"1\":{\"162\":1}}],[\"这些被\",{\"1\":{\"145\":1}}],[\"这些节点信息已\",{\"1\":{\"125\":1}}],[\"这些后面有精力再分析\",{\"1\":{\"92\":1}}],[\"这些模块在\",{\"1\":{\"83\":1}}],[\"这些模块相互独立\",{\"1\":{\"81\":1}}],[\"这些新特性和改进都为\",{\"1\":{\"81\":1}}],[\"这些方法可以使代码更加简洁和易读\",{\"1\":{\"81\":1}}],[\"这些方法可以被接口中的其他方法调用\",{\"1\":{\"81\":1}}],[\"这些协议规范可以满足我们绝大部分场景\",{\"1\":{\"54\":1}}],[\"这样网关的环境就已经搭建完成\",{\"1\":{\"788\":1}}],[\"这样网关端会监听到他们的节点变动\",{\"1\":{\"142\":1}}],[\"这样多方便\",{\"1\":{\"783\":1}}],[\"这样就会造成结构不一样\",{\"1\":{\"783\":1}}],[\"这样就保证了对集群环境的支持\",{\"1\":{\"71\":1}}],[\"这样做的好处是\",{\"1\":{\"727\":4}}],[\"这样定义导致有些同学不知道如何取exception\",{\"1\":{\"487\":1}}],[\"这样的模式是可以说非常不错的\",{\"1\":{\"456\":1}}],[\"这样的想法或者说是小梦想我们正在慢慢做到\",{\"1\":{\"56\":1}}],[\"这样可以确保通信过程中的数据安全\",{\"1\":{\"803\":1}}],[\"这样可以使系统有个预热过程\",{\"1\":{\"266\":1}}],[\"这样可以避免在\",{\"1\":{\"81\":1}}],[\"这样可以避免在接口中重复编写相同的代码\",{\"1\":{\"81\":1}}],[\"这样\",{\"1\":{\"176\":1}}],[\"这里默认是\",{\"1\":{\"814\":1}}],[\"这里默认配置是有的\",{\"1\":{\"208\":1}}],[\"这里以阿里云\",{\"1\":{\"814\":1}}],[\"这里空起来\",{\"1\":{\"718\":1}}],[\"这里需要提醒一下限流算法是令牌桶算法\",{\"1\":{\"251\":1}}],[\"这里需要配置成\",{\"1\":{\"101\":1}}],[\"这里主要是依赖\",{\"1\":{\"206\":1}}],[\"这里指的是\",{\"1\":{\"162\":1}}],[\"这里分的类型跟\",{\"1\":{\"157\":1}}],[\"这里存疑\",{\"1\":{\"157\":1}}],[\"这里遍历所有的监听器\",{\"1\":{\"157\":1}}],[\"这里发布的事件用\",{\"1\":{\"154\":1}}],[\"这里可以看出来\",{\"1\":{\"153\":1}}],[\"这里把\",{\"1\":{\"152\":1}}],[\"这里为了验证数据同步流程\",{\"1\":{\"150\":1}}],[\"这里为什么要创建守护线程\",{\"1\":{\"92\":1}}],[\"这里没有去区别信息类型\",{\"1\":{\"148\":1}}],[\"这里将在下个模块分析\",{\"1\":{\"148\":1}}],[\"这里给\",{\"1\":{\"144\":1}}],[\"这里就是采用\",{\"1\":{\"171\":1}}],[\"这里就是\",{\"1\":{\"144\":1,\"170\":1}}],[\"这里就先到此为止\",{\"1\":{\"92\":1}}],[\"这里的key可以是任何可对比类型\",{\"1\":{\"774\":1}}],[\"这里的具体实现类是\",{\"1\":{\"209\":1}}],[\"这里的监听者实现类是\",{\"1\":{\"200\":1}}],[\"这里的监听器对应的就是\",{\"1\":{\"156\":1}}],[\"这里的数据类型指的是\",{\"1\":{\"148\":1}}],[\"这里的最后一句会调用并添加\",{\"1\":{\"144\":1}}],[\"这里的\",{\"1\":{\"144\":1,\"157\":1}}],[\"这里的负载均衡策略也是关键点\",{\"1\":{\"131\":1}}],[\"这里用了一个定时类型的线程池\",{\"1\":{\"144\":1}}],[\"这里也直接贴网关配置\",{\"1\":{\"140\":1}}],[\"这里入口参数使用\",{\"1\":{\"130\":1}}],[\"这里来解释下\",{\"1\":{\"130\":1}}],[\"这里还有个点\",{\"1\":{\"130\":1}}],[\"这里\",{\"1\":{\"126\":1}}],[\"这里先按下不表\",{\"1\":{\"124\":1}}],[\"这里在\",{\"1\":{\"124\":1,\"126\":1}}],[\"这里一个构造方法\",{\"1\":{\"92\":1}}],[\"这里如果是用\",{\"1\":{\"92\":1}}],[\"这里如果日志保存异常了怎么办\",{\"0\":{\"69\":1}}],[\"这里面同步数据会进两个\",{\"1\":{\"92\":1}}],[\"这里通过\",{\"1\":{\"92\":1}}],[\"这里重点看一下在调试方法中\",{\"1\":{\"92\":1}}],[\"这里进的是\",{\"1\":{\"92\":1}}],[\"这里是\",{\"1\":{\"209\":1}}],[\"这里是本次流程的重点\",{\"1\":{\"148\":1}}],[\"这里是关键\",{\"1\":{\"144\":1}}],[\"这里是关键调用\",{\"1\":{\"136\":1}}],[\"这里是异步的回调方法\",{\"1\":{\"136\":1}}],[\"这里是第二个关键\",{\"1\":{\"135\":1}}],[\"这里是第一个关键\",{\"1\":{\"135\":1}}],[\"这里是通过与\",{\"1\":{\"125\":1}}],[\"这里是打日志出来的地方\",{\"1\":{\"92\":1}}],[\"这里是采用多个消费者去处理队列里面的任务\",{\"1\":{\"66\":1}}],[\"这里我着重说一下自定义返回结果\",{\"1\":{\"783\":1}}],[\"这里我们整合了一个完整的\",{\"1\":{\"747\":1}}],[\"这里我们以9101\",{\"1\":{\"584\":1}}],[\"这里我们指定task\",{\"1\":{\"406\":1}}],[\"这里我们就可以用disjob框架提供的分布式并行执行的能力来解决该类问题\",{\"1\":{\"406\":1}}],[\"这里我们已经搞懂了后台这块对长轮询流程的实现\",{\"1\":{\"144\":1}}],[\"这里我们先不具体追究表结构及业务意义\",{\"1\":{\"124\":1}}],[\"这里我只保留了核心点\",{\"1\":{\"131\":1}}],[\"这里我只给出了\",{\"1\":{\"74\":1}}],[\"这里我推荐使用是\",{\"1\":{\"64\":1}}],[\"这里有个小疑惑\",{\"1\":{\"231\":1}}],[\"这里有\",{\"1\":{\"154\":1}}],[\"这里有很多种类型\",{\"1\":{\"154\":1}}],[\"这里有行关键代码阻塞住了请求\",{\"1\":{\"144\":1}}],[\"这里有关键的\",{\"1\":{\"136\":1}}],[\"这里有一个细节就是\",{\"1\":{\"71\":1}}],[\"这里有人可能会问\",{\"0\":{\"68\":1}}],[\"这个过程完全是可视化\",{\"1\":{\"790\":1}}],[\"这个过程遇到了坑\",{\"1\":{\"208\":1}}],[\"这个时候\",{\"1\":{\"783\":1}}],[\"这个时候需要回滚\",{\"1\":{\"62\":1}}],[\"这个新方法可以让您更灵活地管理数据库配置\",{\"1\":{\"727\":1}}],[\"这个特性非常有用\",{\"1\":{\"521\":1}}],[\"这个特性可以很方便的和你自己系统的\",{\"1\":{\"474\":1}}],[\"这个属性了\",{\"1\":{\"486\":1}}],[\"这个属性非常重要\",{\"1\":{\"116\":1}}],[\"这个框架功能点非常多\",{\"1\":{\"484\":1}}],[\"这个版本将完全支持tac\",{\"1\":{\"717\":1}}],[\"这个版本总共带来了\",{\"1\":{\"514\":1}}],[\"这个版本我们支持了\",{\"1\":{\"505\":1}}],[\"这个版本我们支持对freebsd\",{\"1\":{\"448\":1}}],[\"这个版本的\",{\"1\":{\"501\":1}}],[\"这个版本开始\",{\"1\":{\"501\":1}}],[\"这个版本\",{\"1\":{\"482\":1,\"508\":1,\"520\":1}}],[\"这个传入的\",{\"1\":{\"474\":1}}],[\"这个链路中所有的框架日志都会带有\",{\"1\":{\"474\":1}}],[\"这个强大的规则引擎值得一用\",{\"0\":{\"472\":1}}],[\"这个项目有信心并且愿意支持的话\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"这个项目并不是属于作者一个人的\",{\"1\":{\"469\":1}}],[\"这个项目带入中国顶尖开源软件的行列\",{\"1\":{\"469\":1}}],[\"这个阶段奠定了\",{\"1\":{\"469\":1}}],[\"这个函数式编程\",{\"1\":{\"269\":1}}],[\"这个参数规定了我们从哪个角度来设置限流的阈值\",{\"1\":{\"266\":1}}],[\"这个参数只是要大于你的\",{\"1\":{\"64\":1}}],[\"这个策略所针对的场景是系统长期处于低水位的情况下\",{\"1\":{\"263\":1}}],[\"这个问题绊了我好久\",{\"1\":{\"208\":1}}],[\"这个数据在\",{\"1\":{\"195\":1}}],[\"这个迭代器的实现类\",{\"1\":{\"167\":1}}],[\"这个期间如果后台发生数据变化肯定是没法通知到网关的\",{\"1\":{\"149\":1}}],[\"这个\",{\"1\":{\"149\":1,\"158\":2,\"490\":1}}],[\"这个接口和\",{\"1\":{\"286\":1}}],[\"这个接口我们应该非常熟悉了\",{\"1\":{\"141\":1}}],[\"这个接口虽然之前注册过\",{\"1\":{\"125\":1}}],[\"这个算法有点复杂\",{\"1\":{\"135\":1}}],[\"这个概念\",{\"1\":{\"132\":1,\"133\":1}}],[\"这个插件列表是哪里来的\",{\"1\":{\"130\":1}}],[\"这个插件以\",{\"1\":{\"125\":1}}],[\"这个方法的作用其实就像是\",{\"1\":{\"176\":1}}],[\"这个方法的实现\",{\"1\":{\"136\":1}}],[\"这个方法会将阻塞的请求释放\",{\"1\":{\"144\":1}}],[\"这个方法分析完了\",{\"1\":{\"125\":1}}],[\"这个方法执行完之后\",{\"1\":{\"92\":1}}],[\"这个具体改的什么数据\",{\"1\":{\"125\":1}}],[\"这个单词顾名思义就是分配\",{\"1\":{\"113\":1}}],[\"这个刷新本地缓存的方法\",{\"1\":{\"92\":1}}],[\"这个类更是一个\",{\"1\":{\"141\":1}}],[\"这个类中\",{\"1\":{\"92\":1}}],[\"这个类\",{\"1\":{\"92\":1,\"167\":1}}],[\"这个是脚本和\",{\"1\":{\"485\":1}}],[\"这个是响应式\",{\"1\":{\"259\":1}}],[\"这个是否注册元数据信息的判断\",{\"1\":{\"122\":1}}],[\"这个是\",{\"1\":{\"92\":1}}],[\"这个配置类做的切换\",{\"1\":{\"140\":1}}],[\"这个配置注释掉了\",{\"1\":{\"92\":1}}],[\"这个配置文件当然是在下图的这个地方配的\",{\"1\":{\"92\":1}}],[\"这个配置里面拿到配的请求地址\",{\"1\":{\"92\":1}}],[\"这个很重要\",{\"1\":{\"70\":1}}],[\"这种破坏开源协议的才是\",{\"1\":{\"456\":1}}],[\"这种策略非常好理解就是当\",{\"1\":{\"263\":1}}],[\"这种控制场景也是非常有意义的\",{\"1\":{\"263\":1}}],[\"这种宕机往往不是因为业务逻辑的漏洞而是因为请求过多资源不够导致的\",{\"1\":{\"262\":1}}],[\"这种激增的请求很容易导致整个服务完全不可用\",{\"1\":{\"262\":1}}],[\"这种方式无法直观的拿到很多信息\",{\"1\":{\"488\":1}}],[\"这种方式只需定义注解自身\",{\"1\":{\"430\":1}}],[\"这种方式相比与普通的工厂模式\",{\"1\":{\"165\":1}}],[\"这种方式\",{\"1\":{\"145\":1}}],[\"这种想法的\",{\"1\":{\"64\":1}}],[\"这种静态网站框架\",{\"1\":{\"43\":1}}],[\"这么多项目任务\",{\"1\":{\"36\":1}}],[\"等不同格式导入在线编辑\",{\"1\":{\"829\":1}}],[\"等分布式事务中间件\",{\"1\":{\"792\":1}}],[\"等知名\",{\"1\":{\"706\":1}}],[\"等常见业务进行\",{\"1\":{\"624\":1}}],[\"等一系列权限相关问题\",{\"1\":{\"624\":1}}],[\"等一切支持\",{\"1\":{\"608\":1}}],[\"等简化框架大量代码\",{\"1\":{\"608\":1}}],[\"等复杂表达式\",{\"1\":{\"608\":1}}],[\"等开源技术\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"等标准协议\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"等方式接入\",{\"1\":{\"787\":1}}],[\"等方式\",{\"1\":{\"706\":1,\"790\":1}}],[\"等方式消息及时送达\",{\"1\":{\"452\":1,\"464\":1}}],[\"等方式及时送达\",{\"1\":{\"53\":1,\"441\":1,\"447\":1}}],[\"等更多功能\",{\"1\":{\"448\":1}}],[\"等各方面的贡献者加入\",{\"1\":{\"442\":1}}],[\"等价于\",{\"1\":{\"430\":1}}],[\"等信息\",{\"1\":{\"426\":1}}],[\"等平台\",{\"1\":{\"422\":1}}],[\"等组件的线程池管理\",{\"1\":{\"409\":1,\"419\":1}}],[\"等支持\",{\"1\":{\"397\":1}}],[\"等主流组件集成和使用方法\",{\"1\":{\"373\":1,\"388\":1}}],[\"等主流技术栈开发的多租户系统\",{\"1\":{\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"等相关代码\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"等基础设施环境\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"等物联网设备认证的微服务架构\",{\"1\":{\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"等全新版本发布\",{\"1\":{\"353\":1,\"358\":1}}],[\"等最新版本开发的多租户系统\",{\"1\":{\"351\":1}}],[\"等字段\",{\"1\":{\"315\":1}}],[\"等调用成功之后\",{\"1\":{\"289\":1}}],[\"等级\",{\"1\":{\"231\":1}}],[\"等到\",{\"1\":{\"201\":1,\"203\":1}}],[\"等待你的探索哦\",{\"1\":{\"442\":1}}],[\"等待获取令牌的超时时间\",{\"1\":{\"270\":1}}],[\"等待连接\",{\"1\":{\"158\":1}}],[\"等待响应后再在另一个线程中\",{\"1\":{\"136\":1}}],[\"等待编译完成\",{\"1\":{\"98\":1}}],[\"等这个类里面的\",{\"1\":{\"92\":1}}],[\"等新特性\",{\"1\":{\"90\":6}}],[\"等新的监控类型吗\",{\"1\":{\"53\":1,\"441\":1,\"452\":1,\"464\":1}}],[\"等等多种方式实现\",{\"1\":{\"792\":1}}],[\"等等的所有插件\",{\"1\":{\"130\":1}}],[\"等等\",{\"1\":{\"81\":1,\"131\":1,\"420\":1,\"586\":1,\"718\":1,\"783\":1}}],[\"等等协议或格式抽象规范\",{\"1\":{\"54\":1}}],[\"等集合对象\",{\"1\":{\"81\":1}}],[\"等云服务对接\",{\"1\":{\"57\":1}}],[\"等协议规范可配置化\",{\"1\":{\"53\":1,\"452\":1,\"464\":1}}],[\"等\",{\"1\":{\"40\":1,\"65\":2,\"81\":1,\"148\":1,\"161\":1,\"162\":1,\"232\":1,\"356\":1,\"395\":1,\"402\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":2,\"707\":1,\"712\":1,\"820\":2}}],[\"vs\",{\"1\":{\"792\":1}}],[\"v3\",{\"0\":{\"636\":1,\"643\":1}}],[\"v6\",{\"0\":{\"589\":2,\"595\":1},\"1\":{\"590\":1,\"593\":1}}],[\"v1\",{\"0\":{\"330\":1,\"337\":1,\"341\":1,\"408\":1,\"410\":1,\"417\":1,\"420\":1,\"425\":1,\"429\":1,\"439\":1,\"440\":1,\"442\":1,\"446\":1,\"448\":1,\"458\":1,\"589\":1,\"623\":1,\"624\":1,\"832\":1},\"1\":{\"331\":1,\"333\":1,\"409\":1,\"430\":1,\"442\":1,\"443\":1,\"458\":2,\"460\":1,\"541\":1,\"624\":1}}],[\"v2\",{\"0\":{\"466\":1,\"468\":1,\"472\":1,\"474\":1,\"479\":1,\"498\":1,\"512\":1,\"726\":1,\"727\":1},\"1\":{\"312\":2,\"354\":1,\"383\":1,\"474\":1,\"481\":1,\"493\":3,\"498\":1,\"500\":1,\"508\":1,\"514\":1,\"515\":1,\"521\":1,\"644\":1}}],[\"views\",{\"1\":{\"822\":1}}],[\"video\",{\"1\":{\"613\":3,\"672\":1}}],[\"vite4\",{\"1\":{\"373\":1,\"374\":1,\"388\":1,\"389\":1}}],[\"vite\",{\"1\":{\"366\":1,\"381\":1,\"383\":1}}],[\"vite3\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"vilochen\",{\"1\":{\"308\":1}}],[\"via\",{\"1\":{\"208\":1}}],[\"virtual\",{\"1\":{\"133\":2}}],[\"v\",{\"0\":{\"631\":1,\"632\":1},\"1\":{\"177\":1,\"180\":1,\"183\":7,\"227\":2,\"266\":1,\"271\":1,\"273\":1,\"528\":1,\"529\":1,\"534\":1,\"535\":1,\"540\":1,\"541\":1,\"546\":1,\"547\":1,\"556\":1,\"557\":1,\"566\":1,\"567\":1,\"582\":1,\"745\":1}}],[\"vampireachao\",{\"1\":{\"317\":2}}],[\"validation\",{\"1\":{\"370\":1,\"372\":1,\"374\":1,\"385\":1,\"387\":1,\"389\":1,\"608\":1,\"798\":1}}],[\"validate\",{\"1\":{\"121\":1}}],[\"validateutils\",{\"1\":{\"121\":1}}],[\"value`\",{\"1\":{\"406\":1}}],[\"values\",{\"1\":{\"148\":2,\"149\":1,\"155\":1,\"200\":1,\"209\":1,\"259\":3,\"406\":1}}],[\"value\",{\"1\":{\"135\":1,\"141\":1,\"144\":1,\"149\":2,\"155\":1,\"157\":1,\"177\":1,\"179\":3,\"183\":12,\"195\":2,\"200\":1,\"209\":1,\"225\":2,\"247\":1,\"271\":1,\"293\":1,\"604\":2,\"678\":1,\"709\":1,\"763\":2}}],[\"valueof\",{\"1\":{\"123\":1,\"125\":1,\"133\":1,\"136\":1,\"149\":1,\"191\":2,\"236\":1}}],[\"value=\",{\"1\":{\"64\":37,\"74\":10}}],[\"variable\",{\"1\":{\"458\":1}}],[\"variablelinkedblockingqueue\",{\"1\":{\"420\":1}}],[\"varchar\",{\"1\":{\"278\":9,\"444\":1}}],[\"varhandles\",{\"1\":{\"90\":1}}],[\"var\",{\"1\":{\"82\":1}}],[\"var关键字\",{\"1\":{\"82\":1}}],[\"vendor=oracle\",{\"1\":{\"199\":1}}],[\"verify\",{\"1\":{\"195\":3}}],[\"version<\",{\"1\":{\"323\":1,\"326\":1}}],[\"version=1\",{\"1\":{\"199\":1}}],[\"version=3\",{\"1\":{\"199\":1}}],[\"version>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":5,\"282\":1,\"323\":1,\"326\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":2,\"814\":2}}],[\"version\",{\"1\":{\"63\":1,\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"191\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":4,\"282\":1,\"458\":3,\"758\":1}}],[\"vector\",{\"1\":{\"79\":1,\"88\":2,\"90\":1}}],[\"void\",{\"1\":{\"66\":3,\"70\":1,\"71\":2,\"92\":1,\"126\":2,\"141\":10,\"142\":2,\"144\":7,\"148\":4,\"149\":2,\"155\":2,\"156\":5,\"157\":6,\"158\":5,\"161\":2,\"162\":5,\"166\":6,\"167\":3,\"170\":4,\"173\":2,\"180\":1,\"183\":3,\"200\":3,\"205\":2,\"206\":4,\"209\":5,\"210\":3,\"227\":1,\"247\":1,\"259\":1,\"266\":2,\"324\":4,\"325\":4,\"327\":3,\"328\":3,\"487\":2,\"488\":4,\"506\":2,\"709\":10,\"727\":1,\"740\":1,\"773\":1,\"783\":1,\"815\":1}}],[\"vuejs\",{\"1\":{\"822\":1}}],[\"vue2\",{\"1\":{\"608\":1,\"612\":1}}],[\"vue3\",{\"1\":{\"356\":1,\"373\":1,\"374\":2,\"388\":1,\"389\":2,\"395\":1,\"402\":1,\"608\":3,\"820\":1}}],[\"vue\",{\"0\":{\"601\":1,\"611\":1,\"640\":1,\"647\":1},\"1\":{\"40\":1,\"43\":1,\"360\":1,\"368\":1,\"373\":1,\"374\":1,\"388\":1,\"389\":1,\"604\":2,\"606\":1,\"607\":2,\"610\":4,\"612\":1,\"640\":1,\"647\":1,\"822\":1}}],[\"vmware\",{\"1\":{\"15\":1}}],[\"jpg\",{\"1\":{\"811\":4,\"817\":1}}],[\"jpa\",{\"1\":{\"357\":3,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"547\":1}}],[\"jks\",{\"1\":{\"585\":2}}],[\"j\",{\"1\":{\"518\":1}}],[\"jre\",{\"1\":{\"368\":1,\"383\":1}}],[\"jwt\",{\"1\":{\"357\":5,\"364\":5,\"378\":5,\"393\":5,\"400\":5,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1,\"608\":1,\"624\":2}}],[\"jwtutils\",{\"1\":{\"316\":1}}],[\"jibgradleplugin\",{\"1\":{\"547\":1}}],[\"jiagoujishu\",{\"1\":{\"342\":1}}],[\"jieyangxchen\",{\"1\":{\"317\":1}}],[\"jihe\",{\"1\":{\"308\":1}}],[\"jigsaw\",{\"1\":{\"79\":1,\"81\":2}}],[\"jenn\",{\"1\":{\"618\":1,\"619\":1}}],[\"jenkins\",{\"1\":{\"308\":1}}],[\"jetty\",{\"1\":{\"409\":1,\"411\":1,\"419\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"jetcache\",{\"1\":{\"357\":1}}],[\"jep\",{\"1\":{\"88\":3,\"89\":3}}],[\"jtiag\",{\"1\":{\"308\":1}}],[\"junit4\",{\"1\":{\"484\":1}}],[\"junit5\",{\"0\":{\"484\":1},\"1\":{\"484\":1}}],[\"juc\",{\"1\":{\"409\":1,\"419\":1}}],[\"justauth\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"615\":1}}],[\"just\",{\"1\":{\"249\":1}}],[\"juejin\",{\"1\":{\"234\":1}}],[\"job`\",{\"1\":{\"406\":1}}],[\"job\",{\"1\":{\"338\":1,\"406\":1,\"608\":1,\"637\":2}}],[\"jooks\",{\"1\":{\"317\":1}}],[\"john\",{\"1\":{\"308\":1}}],[\"jo\",{\"1\":{\"209\":1}}],[\"joining\",{\"1\":{\"191\":1}}],[\"joininstances\",{\"0\":{\"181\":1},\"1\":{\"178\":1,\"181\":4,\"183\":4}}],[\"join\",{\"1\":{\"123\":1,\"125\":1,\"149\":1,\"183\":3,\"191\":1}}],[\"jfr\",{\"1\":{\"86\":1,\"88\":1,\"89\":1}}],[\"jlink\",{\"1\":{\"81\":1}}],[\"jmysy<\",{\"1\":{\"323\":1,\"326\":1}}],[\"jmod\",{\"1\":{\"81\":1}}],[\"jmx\",{\"1\":{\"53\":1,\"54\":2,\"199\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"jakarta\",{\"1\":{\"547\":1}}],[\"jacky\",{\"1\":{\"397\":1}}],[\"jackson\",{\"1\":{\"316\":1,\"411\":1,\"608\":3,\"624\":4}}],[\"jasper\",{\"1\":{\"308\":1}}],[\"jar启动客户端\",{\"1\":{\"585\":1}}],[\"jar启动服务端完成部署\",{\"1\":{\"583\":1}}],[\"jar同级别目录下新建app\",{\"1\":{\"585\":1}}],[\"jar\",{\"0\":{\"77\":1,\"583\":1},\"1\":{\"170\":1,\"208\":5,\"342\":1,\"354\":1,\"547\":1,\"575\":2,\"583\":5,\"585\":2,\"608\":1,\"663\":1,\"700\":1,\"709\":1,\"788\":6}}],[\"javase\",{\"1\":{\"758\":1}}],[\"javascript\",{\"1\":{\"79\":1,\"502\":1,\"636\":1,\"643\":1}}],[\"javascrpt\",{\"1\":{\"43\":1}}],[\"java8\",{\"1\":{\"583\":1,\"585\":1}}],[\"javax\",{\"1\":{\"547\":1,\"751\":1}}],[\"java17下进行完整的测试用例测试\",{\"1\":{\"492\":1}}],[\"javabeanserializeutil\",{\"1\":{\"294\":1}}],[\"javabeandescriptor\",{\"1\":{\"293\":2,\"294\":2}}],[\"javadoc\",{\"1\":{\"98\":1,\"608\":1}}],[\"java\",{\"0\":{\"165\":1,\"168\":1,\"175\":1,\"195\":1,\"485\":1,\"502\":1,\"757\":1},\"1\":{\"4\":2,\"30\":1,\"48\":2,\"54\":3,\"66\":5,\"67\":4,\"71\":2,\"79\":2,\"81\":5,\"82\":8,\"83\":10,\"84\":7,\"85\":6,\"86\":6,\"87\":6,\"88\":7,\"89\":8,\"90\":2,\"91\":16,\"93\":1,\"121\":1,\"122\":2,\"123\":1,\"124\":2,\"125\":1,\"126\":4,\"153\":2,\"155\":1,\"156\":1,\"157\":2,\"158\":1,\"164\":1,\"167\":1,\"168\":2,\"170\":5,\"171\":4,\"172\":1,\"173\":2,\"174\":2,\"175\":1,\"199\":3,\"208\":14,\"273\":8,\"277\":1,\"286\":2,\"294\":1,\"308\":1,\"311\":1,\"353\":3,\"354\":3,\"358\":3,\"360\":1,\"368\":2,\"370\":2,\"372\":2,\"373\":1,\"383\":2,\"385\":2,\"387\":2,\"388\":1,\"397\":5,\"426\":1,\"485\":2,\"502\":3,\"517\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":2,\"609\":1,\"616\":1,\"624\":2,\"644\":1,\"719\":1,\"754\":1,\"757\":2,\"778\":1,\"783\":2,\"788\":1,\"791\":3,\"796\":1,\"798\":1}}],[\"jdk20\",{\"1\":{\"482\":2}}],[\"jdk1\",{\"1\":{\"420\":1}}],[\"jdk18on\",{\"1\":{\"397\":1}}],[\"jdk16\",{\"0\":{\"88\":1},\"1\":{\"88\":2,\"90\":1}}],[\"jdk15to18\",{\"1\":{\"354\":1,\"383\":1}}],[\"jdk15\",{\"0\":{\"87\":1},\"1\":{\"87\":2,\"90\":1}}],[\"jdk14\",{\"0\":{\"86\":1},\"1\":{\"86\":2,\"90\":1}}],[\"jdk13\",{\"0\":{\"85\":1},\"1\":{\"85\":2,\"90\":1}}],[\"jdk12\",{\"0\":{\"84\":1},\"1\":{\"84\":2,\"90\":1}}],[\"jdk11\",{\"0\":{\"83\":1},\"1\":{\"83\":2,\"90\":1}}],[\"jdk10\",{\"0\":{\"82\":1},\"1\":{\"82\":3,\"90\":1}}],[\"jdk17重大升级\",{\"0\":{\"542\":1}}],[\"jdk17\",{\"0\":{\"89\":1,\"482\":1},\"1\":{\"78\":1,\"89\":2,\"90\":2,\"482\":5}}],[\"jdk9\",{\"0\":{\"81\":1},\"1\":{\"90\":2}}],[\"jdk9~jdk17\",{\"1\":{\"79\":1}}],[\"jdk8\",{\"1\":{\"78\":1,\"269\":1,\"316\":1,\"482\":1}}],[\"jdk6\",{\"1\":{\"78\":1}}],[\"jdk\",{\"1\":{\"64\":1,\"79\":9,\"81\":9,\"82\":2,\"83\":2,\"84\":2,\"85\":2,\"86\":2,\"87\":2,\"88\":3,\"89\":3,\"165\":1,\"170\":1,\"547\":2,\"713\":1}}],[\"jdbc驱动\",{\"1\":{\"741\":1}}],[\"jdbc等协议规范可配置化\",{\"1\":{\"441\":1,\"447\":1}}],[\"jdbc\",{\"0\":{\"169\":1,\"172\":1,\"173\":1},\"1\":{\"53\":1,\"54\":2,\"64\":2,\"74\":2,\"77\":2,\"169\":1,\"170\":4,\"171\":4,\"172\":3,\"173\":1,\"175\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"452\":1,\"458\":1,\"464\":1,\"582\":2,\"709\":2,\"741\":2,\"771\":1,\"788\":1}}],[\"jvmti\",{\"1\":{\"420\":1}}],[\"jvm\",{\"0\":{\"64\":1},\"1\":{\"55\":1,\"79\":1,\"82\":3,\"84\":2,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"101\":1,\"112\":1,\"208\":1,\"247\":1,\"278\":1,\"340\":1,\"445\":2,\"449\":2,\"459\":2,\"713\":1,\"790\":1}}],[\"jshell\",{\"1\":{\"79\":1,\"81\":3,\"90\":1}}],[\"jsonconfig\",{\"1\":{\"722\":1}}],[\"jsondb\",{\"1\":{\"644\":2}}],[\"jsonbody\",{\"1\":{\"438\":1}}],[\"json头和host\",{\"1\":{\"430\":1}}],[\"jsonutil\",{\"1\":{\"411\":1}}],[\"jsonutils\",{\"1\":{\"290\":1}}],[\"jsonlog\",{\"1\":{\"409\":1,\"419\":1}}],[\"json格式\",{\"1\":{\"278\":1}}],[\"jsonarray\",{\"1\":{\"149\":1}}],[\"jsonobject\",{\"1\":{\"148\":11,\"149\":1,\"209\":2,\"722\":1}}],[\"json\",{\"1\":{\"54\":1,\"125\":1,\"141\":3,\"148\":6,\"149\":2,\"161\":4,\"162\":2,\"314\":1,\"315\":1,\"374\":1,\"389\":1,\"411\":1,\"430\":3,\"438\":1,\"442\":1,\"458\":1,\"654\":1,\"677\":1,\"722\":5,\"724\":4,\"755\":2,\"783\":1,\"820\":1}}],[\"js\",{\"1\":{\"40\":2,\"43\":3,\"608\":1,\"644\":1,\"820\":1}}],[\"npm\",{\"1\":{\"821\":3}}],[\"npe\",{\"1\":{\"316\":2,\"421\":1,\"624\":1}}],[\"nmqs\",{\"1\":{\"794\":2,\"801\":1,\"803\":8}}],[\"nnnnnn\",{\"1\":{\"753\":1}}],[\"nsrule\",{\"1\":{\"635\":1}}],[\"ncy\",{\"1\":{\"308\":1}}],[\"nb\",{\"1\":{\"308\":1}}],[\"nicholasld505\",{\"1\":{\"806\":1}}],[\"nicholasld\",{\"1\":{\"806\":1}}],[\"niverkk\",{\"1\":{\"308\":1}}],[\"nio\",{\"1\":{\"271\":9}}],[\"nil\",{\"1\":{\"252\":2}}],[\"nginx\",{\"1\":{\"266\":1,\"783\":1}}],[\"n\",{\"1\":{\"208\":1,\"271\":1,\"406\":1,\"624\":1}}],[\"numberconverter\",{\"1\":{\"724\":1}}],[\"number\",{\"1\":{\"271\":2,\"313\":2}}],[\"num\",{\"1\":{\"133\":2,\"252\":3}}],[\"nullpointerexception\",{\"1\":{\"170\":1,\"208\":4}}],[\"null\",{\"1\":{\"66\":1,\"70\":1,\"126\":1,\"129\":5,\"135\":5,\"136\":1,\"137\":2,\"144\":1,\"148\":2,\"149\":2,\"158\":1,\"167\":12,\"170\":3,\"171\":4,\"172\":2,\"176\":1,\"181\":1,\"183\":11,\"195\":2,\"208\":1,\"224\":1,\"234\":1,\"235\":3,\"236\":2,\"237\":2,\"245\":1,\"249\":1,\"259\":1,\"266\":7,\"273\":7,\"278\":16,\"288\":4,\"290\":1,\"293\":1,\"294\":3,\"444\":1,\"458\":1,\"604\":3,\"606\":1,\"617\":2,\"624\":1,\"724\":2,\"773\":1,\"816\":1}}],[\"neutrino\",{\"1\":{\"575\":3,\"576\":3,\"580\":1,\"581\":2,\"582\":8,\"583\":8,\"585\":3,\"587\":2}}],[\"neutrinoproxy\",{\"0\":{\"573\":1}}],[\"need\",{\"1\":{\"458\":1}}],[\"neal\",{\"1\":{\"308\":1}}],[\"nelson\",{\"1\":{\"308\":1}}],[\"nested\",{\"1\":{\"208\":3}}],[\"negotiated\",{\"1\":{\"199\":2}}],[\"nextservice\",{\"1\":{\"167\":2}}],[\"nextelement\",{\"1\":{\"167\":1,\"183\":1}}],[\"nextname\",{\"1\":{\"167\":5}}],[\"next\",{\"1\":{\"144\":1,\"167\":3,\"170\":1,\"173\":2,\"259\":1,\"313\":3,\"314\":2,\"406\":1}}],[\"nextint\",{\"1\":{\"134\":2,\"229\":1,\"272\":1}}],[\"newly\",{\"1\":{\"206\":1}}],[\"newhashmapwithexpectedsize\",{\"1\":{\"191\":1}}],[\"newarraylistwithcapacity\",{\"1\":{\"227\":1}}],[\"newarraylist\",{\"1\":{\"149\":1}}],[\"newval\",{\"1\":{\"141\":4}}],[\"newmap\",{\"1\":{\"135\":3}}],[\"newinstance\",{\"1\":{\"126\":1,\"167\":1,\"181\":1,\"183\":1}}],[\"newbuilder\",{\"1\":{\"71\":1}}],[\"new\",{\"1\":{\"66\":14,\"67\":3,\"70\":1,\"71\":5,\"92\":1,\"121\":3,\"123\":1,\"124\":1,\"125\":1,\"126\":2,\"130\":3,\"133\":1,\"135\":3,\"141\":4,\"142\":1,\"144\":3,\"148\":12,\"149\":4,\"153\":1,\"155\":2,\"156\":7,\"157\":6,\"158\":1,\"160\":1,\"161\":9,\"167\":4,\"170\":6,\"176\":2,\"178\":3,\"179\":1,\"180\":2,\"181\":1,\"183\":5,\"191\":1,\"200\":9,\"205\":3,\"206\":1,\"209\":6,\"210\":5,\"220\":2,\"226\":1,\"228\":2,\"231\":1,\"247\":2,\"249\":3,\"252\":4,\"259\":4,\"266\":4,\"272\":2,\"273\":1,\"284\":1,\"287\":1,\"289\":5,\"294\":8,\"324\":3,\"325\":4,\"688\":1,\"773\":1,\"817\":1}}],[\"netflix\",{\"1\":{\"269\":2}}],[\"nettywebserver\",{\"1\":{\"101\":1,\"208\":1}}],[\"netty\",{\"1\":{\"101\":2,\"208\":2,\"313\":1,\"460\":1,\"461\":1,\"529\":2,\"576\":1,\"608\":1}}],[\"net\",{\"1\":{\"15\":1,\"60\":1,\"296\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"783\":1}}],[\"namingcase\",{\"1\":{\"724\":1}}],[\"name`\",{\"1\":{\"278\":3,\"406\":1}}],[\"named\",{\"1\":{\"129\":1,\"130\":1,\"219\":1,\"220\":1,\"224\":1,\"234\":1,\"259\":1,\"266\":1}}],[\"namespace\",{\"1\":{\"116\":1,\"208\":5,\"313\":2,\"338\":2,\"706\":1,\"709\":1,\"712\":1}}],[\"name\",{\"1\":{\"105\":2,\"108\":12,\"124\":1,\"126\":3,\"129\":2,\"136\":1,\"141\":2,\"142\":2,\"148\":1,\"149\":1,\"156\":5,\"157\":10,\"158\":1,\"160\":1,\"161\":1,\"179\":2,\"180\":2,\"181\":2,\"183\":15,\"200\":1,\"208\":1,\"210\":1,\"231\":1,\"266\":1,\"294\":2,\"333\":1,\"442\":1,\"448\":2,\"457\":5,\"458\":1,\"465\":5,\"581\":1,\"582\":1,\"741\":7,\"759\":1,\"783\":2,\"814\":1}}],[\"name=10\",{\"1\":{\"199\":1}}],[\"name=\",{\"1\":{\"64\":43,\"74\":11,\"504\":5,\"505\":3,\"516\":2}}],[\"naocs\",{\"1\":{\"313\":1}}],[\"native\",{\"1\":{\"294\":1,\"363\":2,\"377\":2,\"392\":2}}],[\"nativejava\",{\"1\":{\"293\":1,\"294\":2}}],[\"naturalorder\",{\"1\":{\"191\":1}}],[\"na\",{\"1\":{\"208\":9}}],[\"nacosfactory\",{\"1\":{\"210\":1}}],[\"nacosconfig\",{\"1\":{\"210\":5}}],[\"nacosconfigservice\",{\"1\":{\"210\":1}}],[\"nacosconfiguration\",{\"1\":{\"156\":1}}],[\"nacoscachehandler\",{\"1\":{\"208\":4}}],[\"nacossyncdataconfiguration$$enhancerbyspringcglib$$cce084b7$$fastclassbyspringcglib$$3830e886\",{\"1\":{\"208\":1}}],[\"nacossyncdataconfiguration$$enhancerbyspringcglib$$cce084b7\",{\"1\":{\"208\":2}}],[\"nacossyncdataconfiguration\",{\"1\":{\"208\":4,\"210\":5}}],[\"nacossyncdataservice\",{\"1\":{\"208\":9,\"210\":8}}],[\"nacos<\",{\"1\":{\"208\":2}}],[\"nacosdatachangedlistener\",{\"1\":{\"156\":3,\"209\":7}}],[\"nacoslistener\",{\"1\":{\"156\":1}}],[\"nacos\",{\"1\":{\"156\":3,\"160\":1,\"208\":27,\"209\":3,\"210\":10,\"314\":1,\"316\":1,\"351\":1,\"353\":1,\"354\":1,\"358\":1,\"367\":1,\"382\":1,\"383\":1,\"396\":1,\"397\":2,\"409\":1,\"419\":1,\"445\":1,\"449\":1,\"459\":1,\"707\":1,\"709\":3,\"713\":1,\"714\":1,\"787\":2}}],[\"nashorn\",{\"1\":{\"79\":1}}],[\"navpage=org\",{\"1\":{\"49\":1}}],[\"north\",{\"1\":{\"740\":1}}],[\"northstar\",{\"0\":{\"589\":1},\"1\":{\"593\":1,\"599\":1}}],[\"northstar盈富量化平台v6\",{\"0\":{\"588\":1,\"594\":1}}],[\"novohit\",{\"1\":{\"461\":1}}],[\"nos\",{\"1\":{\"808\":1}}],[\"nosql\",{\"1\":{\"368\":1}}],[\"nosuchmethodexception\",{\"1\":{\"294\":1}}],[\"nosuchelementexception\",{\"1\":{\"167\":1}}],[\"now\",{\"1\":{\"135\":3,\"191\":2,\"249\":1,\"252\":3}}],[\"noconfig\",{\"1\":{\"101\":1}}],[\"no\",{\"1\":{\"101\":1,\"136\":1,\"235\":1,\"406\":4}}],[\"nonregisteringdriver\",{\"1\":{\"170\":1,\"171\":2}}],[\"nonnull\",{\"1\":{\"130\":1,\"220\":1,\"247\":1,\"287\":1}}],[\"non\",{\"1\":{\"79\":6}}],[\"notloginexception\",{\"1\":{\"624\":1}}],[\"not表达式\",{\"1\":{\"468\":1}}],[\"nothing\",{\"1\":{\"170\":1}}],[\"note\",{\"1\":{\"74\":1}}],[\"not\",{\"1\":{\"74\":1,\"144\":1,\"148\":1,\"167\":3,\"199\":1,\"249\":1,\"259\":1,\"272\":1,\"278\":9,\"458\":5}}],[\"notifications\",{\"1\":{\"156\":1,\"459\":1}}],[\"notification\",{\"1\":{\"57\":1,\"156\":1,\"458\":1}}],[\"nodecomponent\",{\"1\":{\"488\":2,\"506\":1}}],[\"nodeid\",{\"1\":{\"488\":2}}],[\"node\",{\"1\":{\"40\":1,\"43\":1,\"133\":2,\"206\":2,\"519\":2,\"644\":1}}],[\"博客\",{\"0\":{\"58\":1},\"1\":{\"40\":1}}],[\"新加\",{\"1\":{\"723\":1}}],[\"新加入采集器节点自动调度分担采集压力\",{\"1\":{\"454\":1}}],[\"新加入一个子类不用去修改工厂方法\",{\"1\":{\"165\":1}}],[\"新建\",{\"1\":{\"722\":1}}],[\"新功能\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"新功能与变更介绍\",{\"1\":{\"613\":1}}],[\"新\",{\"1\":{\"499\":1}}],[\"新版本提供了\",{\"1\":{\"519\":1}}],[\"新版发布\",{\"0\":{\"460\":1}}],[\"新版前端界面风格和操作习惯尽量与当前流行方式统一\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"新晋开源项目\",{\"0\":{\"403\":1,\"818\":1}}],[\"新技术研究\",{\"1\":{\"396\":1}}],[\"新年快乐\",{\"1\":{\"308\":1}}],[\"新值\",{\"1\":{\"252\":1}}],[\"新接入的\",{\"1\":{\"124\":1}}],[\"新的项目\",{\"0\":{\"499\":1}}],[\"新的面貌\",{\"0\":{\"496\":1}}],[\"新的登陆页面\",{\"1\":{\"462\":1}}],[\"新的控制台登陆界面和欢迎页面\",{\"1\":{\"461\":1}}],[\"新的监控中心页面\",{\"1\":{\"448\":1}}],[\"新的监控模板概念\",{\"1\":{\"442\":1}}],[\"新的\",{\"0\":{\"501\":1},\"1\":{\"91\":1,\"514\":1}}],[\"新的字符串方法\",{\"1\":{\"90\":1}}],[\"新增文档移动和复制功能\",{\"1\":{\"833\":1}}],[\"新增模板管理功能\",{\"1\":{\"833\":1}}],[\"新增支持\",{\"1\":{\"809\":1}}],[\"新增支持智能电视\",{\"1\":{\"360\":1}}],[\"新增直接读取\",{\"1\":{\"809\":1}}],[\"新增内存\",{\"1\":{\"787\":1}}],[\"新增内容的详细解释\",{\"1\":{\"81\":1}}],[\"新增天翼云短信支持\",{\"0\":{\"745\":1}}],[\"新增了\",{\"1\":{\"709\":1}}],[\"新增了若干增强\",{\"1\":{\"312\":1}}],[\"新增配置中心\",{\"1\":{\"704\":1,\"707\":1}}],[\"新增对\",{\"1\":{\"700\":1}}],[\"新增对象存储\",{\"1\":{\"368\":2}}],[\"新增自动生成用例编码\",{\"1\":{\"631\":1}}],[\"新增自定义\",{\"1\":{\"342\":1}}],[\"新增版本升级记录\",{\"1\":{\"631\":1}}],[\"新增插件\",{\"1\":{\"624\":1}}],[\"新增跨域文章和示例\",{\"1\":{\"624\":1}}],[\"新增彩色日志打印\",{\"1\":{\"624\":1}}],[\"新增循环生成\",{\"1\":{\"624\":1}}],[\"新增字段\",{\"1\":{\"624\":1}}],[\"新增动态\",{\"0\":{\"623\":1,\"624\":1},\"1\":{\"624\":1}}],[\"新增角色使用内置管理员标识符问题\",{\"1\":{\"619\":1}}],[\"新增角色失败\",{\"1\":{\"541\":1}}],[\"新增用户\",{\"1\":{\"609\":1}}],[\"新增打开网页快捷操作\",{\"1\":{\"574\":1}}],[\"新增productenvironment的显示\",{\"1\":{\"567\":1}}],[\"新增身份管理一级菜单包含组织\",{\"1\":{\"547\":1}}],[\"新增cas明文适配器casplainadapter\",{\"1\":{\"529\":1}}],[\"新增告警静默规则即可\",{\"1\":{\"442\":1}}],[\"新增很多朋友期待的监控导入导出功能\",{\"1\":{\"442\":1}}],[\"新增特性\",{\"0\":{\"429\":1}}],[\"新增分群\",{\"1\":{\"424\":1}}],[\"新增若干实用特性\",{\"0\":{\"408\":1,\"417\":1}}],[\"新增基于自定义证书的\",{\"1\":{\"357\":1}}],[\"新增服务优雅停机支持\",{\"1\":{\"354\":1}}],[\"新增功能\",{\"0\":{\"338\":1,\"605\":1,\"618\":1,\"833\":1},\"1\":{\"331\":1,\"631\":1}}],[\"新增约20+个新特性\",{\"1\":{\"312\":1}}],[\"新增\",{\"0\":{\"189\":1,\"596\":1,\"687\":1},\"1\":{\"313\":1,\"354\":3,\"360\":5,\"362\":2,\"368\":13,\"376\":2,\"383\":3,\"391\":2,\"397\":4,\"399\":2,\"577\":1,\"605\":2,\"615\":4,\"618\":2,\"624\":30,\"644\":9,\"683\":1,\"700\":1,\"707\":1,\"713\":10,\"714\":3,\"787\":1,\"823\":1}}],[\"新增或修改\",{\"1\":{\"127\":2}}],[\"新增社区捐赠流程等文档\",{\"1\":{\"42\":1}}],[\"新增社区组织架构与成员文档\",{\"1\":{\"42\":1}}],[\"新特性界面预览\",{\"1\":{\"360\":1}}],[\"新特性背景\",{\"0\":{\"359\":1}}],[\"新特性\",{\"0\":{\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"313\":1,\"723\":1,\"744\":1,\"754\":1,\"769\":1},\"1\":{\"79\":1}}],[\"新闻\",{\"0\":{\"600\":1},\"1\":{\"40\":1}}],[\"新官网除了要表现出大气\",{\"1\":{\"40\":1}}],[\"成功返回文件信息\",{\"1\":{\"816\":3}}],[\"成功返回文件\",{\"1\":{\"816\":1}}],[\"成功\",{\"1\":{\"783\":1,\"792\":1}}],[\"成功加入\",{\"1\":{\"738\":1}}],[\"成功结项的你还将获得丰厚项目奖金\",{\"1\":{\"36\":1}}],[\"成就与认可\",{\"1\":{\"635\":1}}],[\"成为自动化测试领域的佼佼者\",{\"1\":{\"633\":1}}],[\"成为一款出色的产品\",{\"1\":{\"633\":1}}],[\"成为一个独立的项目产品\",{\"1\":{\"368\":1}}],[\"成为团队的成员\",{\"1\":{\"469\":1}}],[\"成为贡献者\",{\"0\":{\"318\":1}}],[\"成员\",{\"0\":{\"309\":1}}],[\"成员列表\",{\"1\":{\"40\":1}}],[\"成龙\",{\"1\":{\"308\":1}}],[\"成长奖励\",{\"1\":{\"135\":1}}],[\"还可以更方便的根据\",{\"1\":{\"817\":1}}],[\"还可以多级继承\",{\"1\":{\"518\":1}}],[\"还要傻乎乎的新增一个\",{\"1\":{\"784\":1,\"791\":1}}],[\"还要梳理出目前社区组织结构\",{\"1\":{\"40\":1}}],[\"还修复了\",{\"1\":{\"776\":1}}],[\"还添加了数据库配置的支持\",{\"1\":{\"741\":1}}],[\"还调整了项目结构\",{\"1\":{\"738\":1}}],[\"还在为请求不知道去哪了\",{\"1\":{\"608\":1}}],[\"还能对模糊路径匹配到的每一个文件进行监听\",{\"1\":{\"520\":1}}],[\"还支持更人性化的操作\",{\"1\":{\"448\":1}}],[\"还提供了更多的功能和服务\",{\"1\":{\"727\":1}}],[\"还提供了更加灵活和丰富的功能\",{\"1\":{\"727\":1}}],[\"还提供了更加稳定和可靠的短信发送服务\",{\"1\":{\"727\":1}}],[\"还提供了一个日志包装类\",{\"1\":{\"474\":1}}],[\"还提供了一些有用的功能\",{\"1\":{\"81\":1}}],[\"还提供\",{\"1\":{\"405\":1}}],[\"还很远\",{\"1\":{\"308\":1}}],[\"还对对应的插件进行下发操作\",{\"1\":{\"247\":1}}],[\"还需要自行设计一套比较复杂的筛选机制\",{\"1\":{\"175\":1}}],[\"还需要后续补充\",{\"1\":{\"158\":1}}],[\"还需要确认下\",{\"1\":{\"130\":1}}],[\"还记得我们在\",{\"1\":{\"144\":1}}],[\"还会将\",{\"1\":{\"144\":1}}],[\"还没有注册过\",{\"1\":{\"123\":1,\"125\":1}}],[\"还有sms4j的版本\",{\"0\":{\"752\":1}}],[\"还有其他的配置方式以及配置内容的详解\",{\"1\":{\"709\":1}}],[\"还有其他各种规则配置后面都可以试一试~\",{\"1\":{\"118\":1}}],[\"还有非常多的细节优化不再一一描述\",{\"1\":{\"697\":1}}],[\"还有可能在社区内获得声望和认可\",{\"1\":{\"635\":1}}],[\"还有一些使用者在实际的环境中\",{\"1\":{\"483\":1}}],[\"还有一个关键动作就是结束\",{\"1\":{\"144\":1}}],[\"还有一个办法是把\",{\"1\":{\"92\":1}}],[\"还有家庭责任的人说出这话你信吗\",{\"1\":{\"456\":1}}],[\"还有\",{\"1\":{\"448\":1}}],[\"还有更多新功能就不一一详述了\",{\"1\":{\"442\":1}}],[\"还有很多的功能需要去完善打磨\",{\"1\":{\"407\":1}}],[\"还有很多好玩的东西\",{\"1\":{\"92\":1}}],[\"还包含一些其他的改进\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"还引入了一些其他的改进和优化\",{\"1\":{\"81\":1}}],[\"还是放在不同的项目\",{\"1\":{\"792\":1}}],[\"还是刚入门的新手\",{\"1\":{\"634\":1}}],[\"还是启动不起来\",{\"1\":{\"208\":1}}],[\"还是or的方式来组合\",{\"1\":{\"114\":1}}],[\"还是\",{\"1\":{\"64\":1,\"293\":1}}],[\"还是学习开源技术和进行开发实践\",{\"1\":{\"36\":1}}],[\"且注解不支持国际化\",{\"1\":{\"608\":1}}],[\"且开源项目非一朝一夕之事\",{\"1\":{\"587\":1}}],[\"且是全局配置\",{\"1\":{\"504\":1}}],[\"且无法应对多个隔离网络的资源的统一纳管\",{\"1\":{\"453\":1}}],[\"且将请求响应的数据以\",{\"1\":{\"428\":1}}],[\"且对大文件分片上传\",{\"1\":{\"370\":1,\"385\":1}}],[\"且插件开启时\",{\"1\":{\"223\":1}}],[\"且极易扩展\",{\"1\":{\"213\":1}}],[\"且阻塞队列的对应请求对象被剔除\",{\"1\":{\"145\":1}}],[\"且调用方法\",{\"1\":{\"144\":1}}],[\"且最大暂停时间不超过几毫秒\",{\"1\":{\"84\":1}}],[\"且最大停顿时间不超过\",{\"1\":{\"83\":1}}],[\"且全程由\",{\"1\":{\"38\":1}}],[\"且后续资金用途仅限于\",{\"1\":{\"9\":1,\"308\":1}}],[\"欢迎提交\",{\"1\":{\"805\":1}}],[\"欢迎开源项目\",{\"0\":{\"793\":1}}],[\"欢迎感兴趣的小伙伴加入\",{\"1\":{\"599\":1}}],[\"欢迎一起完善监控模版里面的\",{\"1\":{\"461\":1}}],[\"欢迎在仓库给颗\",{\"1\":{\"445\":1}}],[\"欢迎在校的你报名加入开源之夏\",{\"1\":{\"36\":1}}],[\"欢迎\",{\"0\":{\"807\":1},\"1\":{\"402\":1,\"449\":1,\"459\":1}}],[\"欢迎扫码阅读\",{\"1\":{\"397\":1}}],[\"欢迎加入社区技术交流\",{\"1\":{\"336\":1,\"340\":1}}],[\"欢迎使用\",{\"1\":{\"334\":1}}],[\"欢迎贡献者以\",{\"1\":{\"318\":1}}],[\"欢迎来跟我一起分析和学习\",{\"1\":{\"127\":1}}],[\"欢迎大家参与进来\",{\"1\":{\"792\":1}}],[\"欢迎大家关注\",{\"1\":{\"786\":1}}],[\"欢迎大家关注了解选择你感兴趣的课题申请\",{\"1\":{\"50\":1}}],[\"欢迎大家关注了解\",{\"1\":{\"38\":1}}],[\"欢迎大家\",{\"1\":{\"703\":1}}],[\"欢迎大家一起贡献你使用过程中自定义的通用监控类型监控模版\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"欢迎大家分享贡献更多自己的监控模版\",{\"1\":{\"442\":1}}],[\"欢迎大家探讨\",{\"1\":{\"342\":1}}],[\"欢迎大家了解\",{\"1\":{\"57\":1}}],[\"欢迎通过上方联系方式\",{\"1\":{\"50\":1}}],[\"数字\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"数组数据错误\",{\"1\":{\"438\":1}}],[\"数组\",{\"1\":{\"438\":1}}],[\"数组阻塞队列\",{\"1\":{\"92\":1}}],[\"数仓\",{\"1\":{\"57\":1}}],[\"数量>=1\",{\"1\":{\"252\":1}}],[\"数量\",{\"1\":{\"56\":1,\"406\":1}}],[\"数量超过十万\",{\"1\":{\"37\":1}}],[\"数据压缩和优化\",{\"1\":{\"803\":1}}],[\"数据访问层\",{\"1\":{\"802\":1}}],[\"数据访问方式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"数据可以来自任意位置\",{\"1\":{\"773\":2}}],[\"数据合并主键冲突重复而发愁\",{\"1\":{\"608\":1}}],[\"数据进行关联跳转\",{\"1\":{\"654\":1}}],[\"数据进行翻译\",{\"1\":{\"608\":1}}],[\"数据进行判断\",{\"1\":{\"195\":1}}],[\"数据翻译\",{\"1\":{\"608\":1}}],[\"数据加解密\",{\"1\":{\"608\":1}}],[\"数据脱敏\",{\"1\":{\"608\":1}}],[\"数据权限\",{\"1\":{\"608\":1}}],[\"数据分页\",{\"1\":{\"608\":1}}],[\"数据分析\",{\"1\":{\"322\":1}}],[\"数据入库问题\",{\"1\":{\"541\":1}}],[\"数据及关联数据\",{\"1\":{\"360\":1}}],[\"数据湖功能\",{\"1\":{\"331\":1}}],[\"数据将遵循驼峰格式封装\",{\"1\":{\"324\":1}}],[\"数据审计\",{\"1\":{\"322\":1}}],[\"数据转换\",{\"1\":{\"321\":1}}],[\"数据转换的\",{\"1\":{\"320\":1}}],[\"数据的\",{\"0\":{\"205\":1},\"1\":{\"203\":1}}],[\"数据初始化\",{\"1\":{\"200\":1}}],[\"数据变化会发布\",{\"1\":{\"201\":1,\"203\":1}}],[\"数据变化监听器\",{\"1\":{\"200\":1}}],[\"数据变动处理类\",{\"1\":{\"161\":1}}],[\"数据变动时对应的处理方法\",{\"1\":{\"156\":1}}],[\"数据变动后使用线程池调到了这个方法\",{\"1\":{\"144\":1}}],[\"数据有错误就不通过\",{\"1\":{\"195\":1}}],[\"数据有无变化\",{\"1\":{\"145\":1}}],[\"数据处理类\",{\"1\":{\"161\":1}}],[\"数据是怎么同步到\",{\"1\":{\"150\":1}}],[\"数据交换\",{\"1\":{\"149\":1}}],[\"数据为空的情况下肯定会更新缓存\",{\"1\":{\"148\":1}}],[\"数据未发生变动则睡眠\",{\"1\":{\"148\":1}}],[\"数据来源\",{\"1\":{\"144\":1}}],[\"数据怎样知道是有变化的\",{\"1\":{\"143\":1,\"145\":1}}],[\"数据\",{\"1\":{\"126\":1,\"288\":1,\"822\":1}}],[\"数据格式\",{\"1\":{\"125\":1}}],[\"数据库字段大小混写导致表数据结果页面报错问题\",{\"1\":{\"835\":1}}],[\"数据库配置下不填写数据库名称会报错的问题\",{\"1\":{\"755\":1}}],[\"数据库配置源\",{\"1\":{\"515\":1}}],[\"数据库账号\",{\"1\":{\"741\":1}}],[\"数据库的名称必须按照一定的规则进行分类配置\",{\"1\":{\"727\":1}}],[\"数据库的配置在上面已经有了\",{\"1\":{\"64\":1}}],[\"数据库名称不再强制要求分类配置\",{\"1\":{\"727\":1}}],[\"数据库刷新和读取的方法进行了优化\",{\"1\":{\"727\":1}}],[\"数据库自增\",{\"1\":{\"608\":1}}],[\"数据库主键\",{\"1\":{\"608\":1}}],[\"数据库连接池\",{\"1\":{\"608\":1}}],[\"数据库日志表索引创建错误\",{\"1\":{\"606\":1}}],[\"数据库密码\",{\"1\":{\"582\":1,\"741\":1}}],[\"数据库帐号\",{\"1\":{\"582\":1}}],[\"数据库初始化脚本\",{\"1\":{\"397\":1}}],[\"数据库初始化脚本移动至\",{\"1\":{\"397\":1}}],[\"数据库支持\",{\"1\":{\"313\":1}}],[\"数据库存储网关数据\",{\"1\":{\"100\":1}}],[\"数据库中对应的表为下图所示\",{\"1\":{\"92\":1}}],[\"数据库\",{\"0\":{\"581\":1,\"582\":1},\"1\":{\"53\":1,\"55\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1,\"583\":2}}],[\"数据同步方式\",{\"1\":{\"787\":1}}],[\"数据同步优化\",{\"0\":{\"550\":1,\"560\":1,\"570\":1}}],[\"数据同步的测试用例\",{\"1\":{\"314\":1}}],[\"数据同步时\",{\"1\":{\"225\":1}}],[\"数据同步配置类\",{\"1\":{\"200\":1}}],[\"数据同步原理解析\",{\"0\":{\"200\":1}}],[\"数据同步策略官网链接\",{\"1\":{\"150\":1}}],[\"数据同步\",{\"1\":{\"92\":3,\"230\":1,\"322\":1,\"783\":1}}],[\"数据同步整体架构分享与介绍\",{\"1\":{\"33\":1}}],[\"数据同步之\",{\"1\":{\"33\":1}}],[\"让人看起来舒服\",{\"1\":{\"792\":1}}],[\"让高性能网关变得如此简单\",{\"0\":{\"787\":1}}],[\"让开发者\",{\"1\":{\"783\":1}}],[\"让开发人员从此不再为搭建环境而烦恼\",{\"1\":{\"608\":1}}],[\"让用户自由选择\",{\"1\":{\"783\":1}}],[\"让它更加轻量级\",{\"1\":{\"730\":1}}],[\"让大家久等了\",{\"1\":{\"704\":1}}],[\"让大家能像打游戏一样玩量化\",{\"1\":{\"592\":1}}],[\"让我们一同构建一个繁荣\",{\"1\":{\"635\":1}}],[\"让我们一起为开源社区的繁荣贡献一份力量\",{\"1\":{\"629\":1}}],[\"让我们共同构建一个充满活力和创造力的开发团队\",{\"1\":{\"634\":1}}],[\"让我们梳理一下该类的方法\",{\"1\":{\"234\":1}}],[\"让程序休息指定毫秒数\",{\"1\":{\"628\":1}}],[\"让您能够轻松定义\",{\"1\":{\"627\":1}}],[\"让你一目了然\",{\"1\":{\"506\":1}}],[\"让事情变成原本就该有的简单\",{\"1\":{\"431\":1}}],[\"让其既符合\",{\"1\":{\"397\":1}}],[\"让技术不再成为禁锢变为进步和提升的基石\",{\"1\":{\"396\":1}}],[\"让更多质量更好\",{\"1\":{\"353\":1,\"358\":1}}],[\"让请求方来自行决定如何处理\",{\"1\":{\"264\":1}}],[\"让实现类自己判定即可\",{\"1\":{\"173\":1}}],[\"让迭代器可以进行\",{\"1\":{\"167\":1}}],[\"让父接口与它的子类在文件中写明\",{\"1\":{\"165\":1}}],[\"让网关接收到响应信息\",{\"1\":{\"144\":1}}],[\"让子类可以按照指定步骤进行工作\",{\"1\":{\"141\":1}}],[\"让\",{\"1\":{\"60\":1,\"367\":1,\"382\":1,\"483\":1,\"633\":2}}],[\"让参与的每一位开源爱好者\",{\"1\":{\"37\":1}}],[\"让每一位开源爱好者享受开源红利\",{\"1\":{\"18\":1}}],[\"让每一位开源爱好者\",{\"1\":{\"1\":1}}],[\"技术选型\",{\"0\":{\"795\":1}}],[\"技术方面大到芯片\",{\"1\":{\"792\":1}}],[\"技术是流行趋势\",{\"1\":{\"636\":1,\"643\":1}}],[\"技术支持群的好处\",{\"0\":{\"635\":1}}],[\"技术支持与培训认证服务\",{\"1\":{\"37\":1}}],[\"技术和\",{\"1\":{\"353\":1,\"358\":1}}],[\"技术栈全面开源共建\",{\"1\":{\"2\":1,\"37\":1}}],[\"调试而生\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"调试工具\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"调试一把\",{\"1\":{\"92\":1}}],[\"调度\",{\"1\":{\"460\":1}}],[\"调度线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"调度编排等一系列开源产品\",{\"1\":{\"37\":1}}],[\"调参\",{\"1\":{\"409\":1,\"419\":1}}],[\"调整底层存储结构\",{\"1\":{\"704\":1}}],[\"调整列表打开对话框和接口请求顺序\",{\"1\":{\"617\":1}}],[\"调整配置文件错误注释\",{\"1\":{\"604\":1}}],[\"调整获取accesstoken次序\",{\"1\":{\"547\":1}}],[\"调整前端\",{\"1\":{\"397\":1}}],[\"调整相关代码\",{\"1\":{\"397\":1}}],[\"调整\",{\"0\":{\"713\":1},\"1\":{\"383\":1}}],[\"调整判断逻辑\",{\"1\":{\"368\":1}}],[\"调取\",{\"1\":{\"142\":1}}],[\"调用无差别\",{\"1\":{\"783\":1}}],[\"调用者缓存\",{\"1\":{\"316\":1}}],[\"调用者认为你是失败的\",{\"1\":{\"62\":1}}],[\"调用方法\",{\"1\":{\"316\":1}}],[\"调用时\",{\"1\":{\"286\":1}}],[\"调用时指代网关调用的前置地址\",{\"1\":{\"232\":1}}],[\"调用所有服务实现\",{\"1\":{\"283\":1}}],[\"调用接口处添加休眠时间\",{\"1\":{\"272\":1}}],[\"调用流程梳理\",{\"1\":{\"249\":1}}],[\"调用链\",{\"0\":{\"249\":1}}],[\"调用http\",{\"1\":{\"245\":1}}],[\"调用类型有\",{\"1\":{\"232\":1}}],[\"调用依次追踪上述四个插件的作用\",{\"1\":{\"231\":1}}],[\"调用构造器初始化对象\",{\"1\":{\"167\":1}}],[\"调用自定义的\",{\"1\":{\"164\":1}}],[\"调用一个看似工具类的方法\",{\"1\":{\"164\":1}}],[\"调用订阅器的\",{\"1\":{\"162\":1}}],[\"调用对应事件抽象方法\",{\"1\":{\"162\":1}}],[\"调用相应的\",{\"1\":{\"161\":1}}],[\"调用插件数据订阅器\",{\"1\":{\"148\":1}}],[\"调用拉取数据的方法\",{\"1\":{\"148\":1}}],[\"调用负载均衡方法并传入策略类型\",{\"1\":{\"131\":1}}],[\"调用了一个handlerequestbody方法\",{\"1\":{\"236\":1}}],[\"调用了\",{\"1\":{\"92\":1}}],[\"调用的流程\",{\"1\":{\"237\":1}}],[\"调用的大体流程\",{\"1\":{\"237\":1}}],[\"调用的真实地址\",{\"1\":{\"236\":1}}],[\"调用的方式目前只支持\",{\"1\":{\"232\":1}}],[\"调用的接口地址为http\",{\"1\":{\"231\":1}}],[\"调用的订阅方法不同\",{\"1\":{\"162\":1}}],[\"调用的超时时间设置\",{\"1\":{\"64\":1}}],[\"调用的时候\",{\"1\":{\"61\":1}}],[\"调用超时\",{\"0\":{\"62\":1}}],[\"调用\",{\"1\":{\"4\":1,\"127\":1,\"136\":1,\"141\":1,\"148\":2,\"150\":1,\"162\":1,\"167\":1,\"170\":1,\"179\":1,\"232\":1,\"237\":1,\"277\":2}}],[\"企业对外的产品帮助文档\",{\"1\":{\"831\":1}}],[\"企业级桌面软件开发框架\",{\"1\":{\"642\":1,\"649\":1}}],[\"企业级认证\",{\"1\":{\"37\":1}}],[\"企业微信\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"企业生产级百亿日\",{\"1\":{\"4\":1}}],[\"税前\",{\"1\":{\"36\":1}}],[\"参照官网客户端配置吊证现有的客户端配置\",{\"1\":{\"575\":1}}],[\"参照官网服务端配置调整现有的服务端配置\",{\"1\":{\"575\":1}}],[\"参照\",{\"1\":{\"397\":2}}],[\"参照微内核架构来看\",{\"1\":{\"217\":1}}],[\"参加开源\",{\"1\":{\"308\":1}}],[\"参考文档\",{\"0\":{\"610\":1},\"1\":{\"610\":1,\"621\":1}}],[\"参考美团\",{\"1\":{\"608\":1}}],[\"参考美团线程池实践\",{\"1\":{\"409\":1,\"419\":1}}],[\"参考资料\",{\"0\":{\"416\":1}}],[\"参考\",{\"0\":{\"296\":1},\"1\":{\"276\":1,\"679\":1,\"822\":1}}],[\"参考链接\",{\"0\":{\"260\":1}}],[\"参考了他们的文章才解决\",{\"1\":{\"208\":1}}],[\"参数定义是一个\",{\"1\":{\"783\":1}}],[\"参数传递的更改\",{\"1\":{\"780\":1}}],[\"参数由\",{\"1\":{\"722\":2}}],[\"参数解析器\",{\"1\":{\"783\":1}}],[\"参数解析\",{\"1\":{\"667\":1}}],[\"参数版和第三方\",{\"1\":{\"624\":1}}],[\"参数管理\",{\"1\":{\"609\":1}}],[\"参数只能从\",{\"1\":{\"608\":1}}],[\"参数\",{\"1\":{\"397\":1,\"644\":3}}],[\"参数多用途不明晰必须查阅源代码\",{\"1\":{\"374\":1,\"389\":1}}],[\"参数层次结构复杂\",{\"1\":{\"374\":1,\"389\":1}}],[\"参数进行重新定义\",{\"1\":{\"372\":1,\"387\":1}}],[\"参数使用\",{\"1\":{\"370\":1,\"385\":1}}],[\"参数增加\",{\"1\":{\"340\":1}}],[\"参数和上下文信息传递给\",{\"1\":{\"294\":1}}],[\"参数值\",{\"1\":{\"294\":2}}],[\"参数值小于默认值\",{\"1\":{\"271\":1,\"274\":1}}],[\"参数校验规则细节多没有文档说明\",{\"1\":{\"374\":1,\"389\":1}}],[\"参数校验\",{\"1\":{\"293\":1,\"294\":2}}],[\"参数列表\",{\"1\":{\"286\":1}}],[\"参数的能力\",{\"1\":{\"624\":1}}],[\"参数的类型以及参数的值就可以直接调用对应方法了\",{\"1\":{\"286\":1}}],[\"参数的本地变量类型推断\",{\"1\":{\"83\":1}}],[\"参数及返回值中的所有\",{\"1\":{\"283\":1}}],[\"参数内容注册到\",{\"1\":{\"282\":1}}],[\"参数类型修改\",{\"1\":{\"619\":1}}],[\"参数类型\",{\"1\":{\"278\":1,\"282\":1,\"286\":1,\"294\":2}}],[\"参数配置\",{\"1\":{\"271\":1}}],[\"参数是两个十位时间戳相减得来\",{\"1\":{\"252\":1}}],[\"参与本次更新的社区成员有\",{\"1\":{\"832\":1}}],[\"参与\",{\"1\":{\"764\":1}}],[\"参与功能开发与测试\",{\"1\":{\"612\":1}}],[\"参与开源\",{\"1\":{\"469\":1,\"792\":1}}],[\"参与方为\",{\"1\":{\"64\":1}}],[\"参与学生有机会与众多开源社区和资深开发者导师进行交流和互动\",{\"1\":{\"36\":1}}],[\"参会攻略出炉\",{\"0\":{\"11\":1}}],[\"无效问题\",{\"1\":{\"724\":1}}],[\"无用的心跳日志\",{\"1\":{\"617\":1}}],[\"无注解零入侵基于\",{\"1\":{\"608\":1}}],[\"无感式过滤\",{\"1\":{\"608\":1}}],[\"无引号报错问题\",{\"1\":{\"606\":1}}],[\"无须在代码中配置\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"无法做到精准的厂商级别拦截\",{\"1\":{\"750\":1}}],[\"无法满足多样化的需求\",{\"1\":{\"627\":1}}],[\"无法鉴权\",{\"1\":{\"374\":1,\"389\":1}}],[\"无法内置登录页面\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"无法在\",{\"1\":{\"331\":1}}],[\"无法修改客户端端口的问题\",{\"1\":{\"331\":1}}],[\"无法匹配的问题\",{\"1\":{\"316\":1}}],[\"无法与\",{\"1\":{\"316\":1}}],[\"无法配置\",{\"1\":{\"316\":1}}],[\"无名\",{\"1\":{\"308\":23}}],[\"无元数据\",{\"1\":{\"208\":1}}],[\"无操作\",{\"1\":{\"126\":1}}],[\"无非是封装\",{\"1\":{\"124\":1}}],[\"无非就是在你\",{\"1\":{\"61\":1}}],[\"无异常的时候去执行\",{\"1\":{\"67\":1}}],[\"无\",{\"0\":{\"66\":1},\"1\":{\"308\":1,\"608\":7,\"609\":2}}],[\"无缝集成\",{\"1\":{\"65\":2}}],[\"无需标记\",{\"1\":{\"617\":1}}],[\"无需再写一大堆的文档注解了\",{\"1\":{\"608\":1}}],[\"无需再翻阅\",{\"1\":{\"370\":1,\"385\":1}}],[\"无需额外组件部署\",{\"1\":{\"454\":1}}],[\"无需修改配置文件加监控\",{\"1\":{\"448\":1}}],[\"无需修改任何配置文件\",{\"1\":{\"151\":1}}],[\"无需回应\",{\"1\":{\"308\":1}}],[\"无需每次都迭代所有\",{\"1\":{\"178\":1}}],[\"无需显式的写出接口对应的实现类\",{\"1\":{\"173\":1}}],[\"无需去写入一个\",{\"1\":{\"165\":1}}],[\"无需\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"451\":1,\"452\":1,\"463\":1,\"464\":1}}],[\"无论多复杂的请求\",{\"1\":{\"790\":1}}],[\"无论是\",{\"1\":{\"766\":1}}],[\"无论是自动化测试\",{\"1\":{\"627\":1}}],[\"无论您是新手还是资深大牛\",{\"1\":{\"635\":1}}],[\"无论您是资深前端开发者\",{\"1\":{\"634\":1}}],[\"无论用户输入的是该药品的中文名称或是汉语拼音甚至英文学名等均可以被检索到对应药品\",{\"1\":{\"47\":1}}],[\"无论你想要贡献代码\",{\"1\":{\"36\":1}}],[\"无侵入分布式监控\",{\"1\":{\"4\":1}}],[\"挑选项目\",{\"1\":{\"36\":1}}],[\"4发布\",{\"0\":{\"466\":1}}],[\"4大版本发布\",{\"0\":{\"408\":1,\"417\":1}}],[\"4340\",{\"1\":{\"316\":1}}],[\"4342\",{\"1\":{\"315\":1}}],[\"4374\",{\"1\":{\"316\":1}}],[\"4368\",{\"1\":{\"316\":1}}],[\"4362\",{\"1\":{\"314\":2}}],[\"4351\",{\"1\":{\"316\":1}}],[\"4355\",{\"1\":{\"315\":1}}],[\"4396\",{\"1\":{\"316\":1}}],[\"4390\",{\"1\":{\"316\":1}}],[\"4394\",{\"1\":{\"315\":1}}],[\"4392\",{\"1\":{\"313\":1,\"315\":1}}],[\"4387\",{\"1\":{\"316\":1}}],[\"4382\",{\"1\":{\"316\":1}}],[\"4386\",{\"1\":{\"315\":1}}],[\"4383\",{\"1\":{\"314\":1}}],[\"4338\",{\"1\":{\"316\":1}}],[\"4331\",{\"1\":{\"316\":1}}],[\"4332\",{\"1\":{\"315\":1}}],[\"4336\",{\"1\":{\"313\":1}}],[\"43\",{\"1\":{\"314\":1,\"315\":1,\"316\":1}}],[\"4319\",{\"1\":{\"314\":1}}],[\"43b9\",{\"1\":{\"208\":4}}],[\"4499\",{\"1\":{\"316\":1}}],[\"4486\",{\"1\":{\"316\":1}}],[\"4488\",{\"1\":{\"314\":1}}],[\"443\",{\"1\":{\"740\":1}}],[\"4430\",{\"1\":{\"316\":1}}],[\"4433\",{\"1\":{\"316\":1}}],[\"4435\",{\"1\":{\"314\":1}}],[\"44\",{\"1\":{\"315\":1,\"316\":1}}],[\"4462\",{\"1\":{\"315\":1}}],[\"4450\",{\"1\":{\"314\":1}}],[\"4451\",{\"1\":{\"314\":1}}],[\"4473\",{\"1\":{\"314\":1}}],[\"4409\",{\"1\":{\"315\":1}}],[\"4409382\",{\"1\":{\"296\":1}}],[\"4403\",{\"1\":{\"315\":1}}],[\"4400\",{\"1\":{\"315\":1}}],[\"4402\",{\"1\":{\"314\":1}}],[\"4413\",{\"1\":{\"316\":1}}],[\"4412\",{\"1\":{\"316\":1}}],[\"4411\",{\"1\":{\"316\":1}}],[\"4414\",{\"1\":{\"315\":1}}],[\"4418\",{\"1\":{\"314\":1}}],[\"4417\",{\"1\":{\"313\":1}}],[\"4410\",{\"1\":{\"313\":1}}],[\"4425\",{\"1\":{\"316\":1}}],[\"4420\",{\"1\":{\"316\":1}}],[\"4429\",{\"1\":{\"315\":1}}],[\"442\",{\"1\":{\"109\":1}}],[\"4756\",{\"1\":{\"316\":1}}],[\"4758\",{\"1\":{\"314\":1}}],[\"4720\",{\"1\":{\"316\":1}}],[\"472ms\",{\"1\":{\"271\":1}}],[\"47\",{\"1\":{\"315\":1,\"316\":1}}],[\"4799\",{\"1\":{\"315\":1}}],[\"4790\",{\"1\":{\"315\":1}}],[\"4795\",{\"1\":{\"313\":1}}],[\"4784\",{\"1\":{\"316\":1}}],[\"4787\",{\"1\":{\"315\":1}}],[\"4780\",{\"1\":{\"315\":1}}],[\"4783\",{\"1\":{\"314\":1}}],[\"4773\",{\"1\":{\"315\":1}}],[\"4772\",{\"1\":{\"315\":1}}],[\"4747\",{\"1\":{\"314\":1}}],[\"4762\",{\"1\":{\"316\":1}}],[\"4763\",{\"1\":{\"316\":1}}],[\"4765\",{\"1\":{\"315\":1}}],[\"4768\",{\"1\":{\"314\":1}}],[\"4766\",{\"1\":{\"313\":1}}],[\"4700\",{\"1\":{\"315\":1}}],[\"4709\",{\"1\":{\"315\":1}}],[\"4705\",{\"1\":{\"314\":1}}],[\"4702\",{\"1\":{\"314\":1}}],[\"4716\",{\"1\":{\"316\":1}}],[\"4710\",{\"1\":{\"315\":1}}],[\"471\",{\"1\":{\"289\":1}}],[\"4681\",{\"1\":{\"316\":1}}],[\"4688\",{\"1\":{\"314\":1}}],[\"4644\",{\"1\":{\"316\":1}}],[\"4645\",{\"1\":{\"314\":1}}],[\"4619\",{\"1\":{\"316\":1}}],[\"4614\",{\"1\":{\"315\":1}}],[\"4679\",{\"1\":{\"315\":1}}],[\"4673\",{\"1\":{\"314\":1,\"315\":1}}],[\"4697\",{\"1\":{\"315\":1}}],[\"4698\",{\"1\":{\"314\":1}}],[\"4669\",{\"1\":{\"315\":1}}],[\"4658\",{\"1\":{\"315\":1}}],[\"4653\",{\"1\":{\"315\":1}}],[\"4657\",{\"1\":{\"313\":1}}],[\"4624\",{\"1\":{\"315\":1}}],[\"4620\",{\"1\":{\"313\":1}}],[\"4639\",{\"1\":{\"316\":1}}],[\"4635\",{\"1\":{\"315\":1}}],[\"4632\",{\"1\":{\"314\":1}}],[\"4637\",{\"1\":{\"313\":1,\"315\":2}}],[\"4636\",{\"1\":{\"313\":1}}],[\"46\",{\"1\":{\"271\":2,\"315\":1,\"316\":1}}],[\"4605\",{\"1\":{\"316\":1}}],[\"4606\",{\"1\":{\"314\":1}}],[\"4600\",{\"1\":{\"313\":1}}],[\"4607\",{\"1\":{\"313\":1}}],[\"460\",{\"1\":{\"108\":3}}],[\"4589\",{\"1\":{\"316\":1}}],[\"4507\",{\"1\":{\"316\":1}}],[\"4509\",{\"1\":{\"316\":1}}],[\"4506\",{\"1\":{\"316\":1}}],[\"4578\",{\"1\":{\"315\":1}}],[\"4579\",{\"1\":{\"314\":1}}],[\"4528\",{\"1\":{\"316\":1}}],[\"4524\",{\"1\":{\"316\":1}}],[\"4526\",{\"1\":{\"315\":1}}],[\"4522\",{\"1\":{\"314\":1}}],[\"4516\",{\"1\":{\"315\":1}}],[\"4557\",{\"1\":{\"314\":1}}],[\"4540\",{\"1\":{\"314\":1}}],[\"4549\",{\"1\":{\"314\":1}}],[\"4541\",{\"1\":{\"314\":1}}],[\"4533\",{\"1\":{\"316\":1}}],[\"4536\",{\"1\":{\"313\":1}}],[\"4532\",{\"1\":{\"313\":1}}],[\"4569\",{\"1\":{\"315\":1}}],[\"4564\",{\"1\":{\"315\":1}}],[\"4564034\",{\"1\":{\"296\":1}}],[\"4567\",{\"1\":{\"314\":1}}],[\"4562\",{\"1\":{\"313\":1}}],[\"45\",{\"1\":{\"266\":1,\"315\":1,\"316\":1}}],[\"4593\",{\"1\":{\"316\":1}}],[\"4595\",{\"1\":{\"316\":1}}],[\"4598\",{\"1\":{\"315\":1}}],[\"4591\",{\"1\":{\"314\":1}}],[\"459\",{\"1\":{\"109\":1}}],[\"4906\",{\"1\":{\"316\":1}}],[\"4941\",{\"1\":{\"316\":1}}],[\"4945\",{\"1\":{\"315\":1}}],[\"4948\",{\"1\":{\"315\":1}}],[\"4951\",{\"1\":{\"314\":1}}],[\"4911\",{\"1\":{\"316\":1}}],[\"4918\",{\"1\":{\"314\":1}}],[\"4919\",{\"1\":{\"314\":1}}],[\"4913\",{\"1\":{\"314\":1}}],[\"49\",{\"1\":{\"208\":2,\"315\":1,\"316\":1}}],[\"49mb\",{\"1\":{\"109\":1}}],[\"4934\",{\"1\":{\"316\":1}}],[\"4938\",{\"1\":{\"314\":1}}],[\"493\",{\"1\":{\"109\":1}}],[\"41亿\",{\"1\":{\"406\":1}}],[\"41854\",{\"1\":{\"354\":1,\"397\":1}}],[\"41\",{\"1\":{\"109\":1,\"314\":1,\"315\":1,\"316\":1}}],[\"4885\",{\"1\":{\"316\":1}}],[\"4889\",{\"1\":{\"316\":1}}],[\"4882\",{\"1\":{\"316\":1}}],[\"4872\",{\"1\":{\"316\":1}}],[\"4879\",{\"1\":{\"315\":1}}],[\"4874\",{\"1\":{\"315\":1}}],[\"4873\",{\"1\":{\"315\":1}}],[\"4867\",{\"1\":{\"316\":1}}],[\"4865\",{\"1\":{\"315\":1}}],[\"486269\",{\"1\":{\"109\":1}}],[\"4825\",{\"1\":{\"315\":1}}],[\"4820\",{\"1\":{\"315\":1}}],[\"4821\",{\"1\":{\"315\":1}}],[\"4837\",{\"1\":{\"315\":1}}],[\"4832\",{\"1\":{\"315\":1}}],[\"4892\",{\"1\":{\"315\":1}}],[\"4899\",{\"1\":{\"314\":1}}],[\"4890\",{\"1\":{\"314\":1}}],[\"4897\",{\"1\":{\"313\":1}}],[\"4844\",{\"1\":{\"316\":1}}],[\"4843\",{\"1\":{\"316\":1}}],[\"4841\",{\"1\":{\"315\":1}}],[\"4849\",{\"1\":{\"314\":1}}],[\"4845\",{\"1\":{\"314\":1}}],[\"4854\",{\"1\":{\"316\":1}}],[\"4852\",{\"1\":{\"316\":1}}],[\"4851\",{\"1\":{\"316\":1}}],[\"4859\",{\"1\":{\"314\":1}}],[\"4855\",{\"1\":{\"314\":1}}],[\"4856\",{\"1\":{\"313\":1}}],[\"4812\",{\"1\":{\"313\":1}}],[\"4805\",{\"1\":{\"316\":1}}],[\"4803\",{\"1\":{\"315\":1}}],[\"4809\",{\"1\":{\"315\":1}}],[\"4806\",{\"1\":{\"314\":1}}],[\"4800\",{\"1\":{\"313\":1}}],[\"4802\",{\"1\":{\"313\":1}}],[\"48\",{\"1\":{\"108\":18,\"199\":9,\"315\":1,\"316\":1}}],[\"4252\",{\"1\":{\"316\":1}}],[\"429951241\",{\"1\":{\"782\":1,\"786\":1}}],[\"429错误编码\",{\"1\":{\"249\":1}}],[\"429\",{\"1\":{\"245\":1}}],[\"42\",{\"1\":{\"105\":3,\"314\":1,\"315\":1,\"316\":1,\"354\":1}}],[\"4k+\",{\"1\":{\"46\":1}}],[\"4\",{\"0\":{\"64\":1,\"71\":1,\"72\":1,\"98\":1,\"110\":1,\"154\":1,\"341\":1,\"347\":1,\"355\":1,\"358\":1,\"365\":1,\"379\":1,\"380\":1,\"394\":1,\"395\":1,\"420\":1,\"458\":1,\"468\":1,\"505\":1,\"586\":1,\"601\":1,\"655\":1,\"662\":1,\"671\":1,\"687\":1,\"697\":1,\"777\":1,\"778\":1,\"780\":1,\"781\":1,\"799\":1},\"1\":{\"36\":1,\"50\":1,\"64\":1,\"66\":1,\"74\":1,\"135\":1,\"150\":3,\"154\":1,\"156\":1,\"158\":1,\"199\":1,\"200\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":2,\"210\":2,\"220\":1,\"231\":1,\"252\":1,\"264\":2,\"271\":6,\"278\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"322\":1,\"338\":1,\"351\":1,\"354\":3,\"368\":2,\"374\":1,\"382\":1,\"383\":2,\"389\":1,\"396\":2,\"397\":1,\"409\":1,\"419\":1,\"424\":1,\"438\":1,\"458\":1,\"460\":1,\"468\":1,\"469\":3,\"499\":3,\"518\":2,\"526\":2,\"529\":3,\"532\":2,\"538\":2,\"544\":2,\"546\":1,\"547\":3,\"554\":2,\"556\":1,\"557\":1,\"564\":2,\"566\":1,\"567\":2,\"577\":1,\"603\":1,\"612\":4,\"616\":3,\"660\":1,\"740\":1,\"779\":1,\"780\":1,\"781\":2}}],[\"40亿\",{\"1\":{\"406\":1}}],[\"4000000001\",{\"1\":{\"406\":1}}],[\"400\",{\"1\":{\"308\":2,\"616\":1}}],[\"404\",{\"1\":{\"272\":1}}],[\"401\",{\"1\":{\"208\":1}}],[\"4094\",{\"1\":{\"66\":1}}],[\"4096\",{\"1\":{\"64\":1,\"74\":1}}],[\"40\",{\"1\":{\"30\":2,\"33\":2,\"108\":6,\"109\":2,\"314\":1,\"315\":1,\"316\":1}}],[\"培养和发掘更多优秀的开发者\",{\"1\":{\"35\":1}}],[\"沈祥俊\",{\"1\":{\"33\":1}}],[\"杜宇航\",{\"1\":{\"33\":1}}],[\"葛天野\",{\"1\":{\"33\":1}}],[\"东江\",{\"1\":{\"308\":1}}],[\"东东\",{\"1\":{\"33\":1,\"308\":1}}],[\"东北口出步行\",{\"1\":{\"12\":1}}],[\"基础功能\",{\"1\":{\"816\":1}}],[\"基础路径\",{\"1\":{\"814\":1}}],[\"基础优化\",{\"1\":{\"574\":1}}],[\"基础数据存储代码\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"基础组件和应用功能组件进行封装\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"基础\",{\"1\":{\"354\":2,\"374\":2,\"389\":2}}],[\"基础信息\",{\"0\":{\"345\":1}}],[\"基础难度项目\",{\"1\":{\"36\":1}}],[\"基本用不上\",{\"1\":{\"617\":1}}],[\"基本开发\",{\"1\":{\"370\":1,\"385\":1}}],[\"基本条件\",{\"0\":{\"299\":1}}],[\"基本理清了\",{\"1\":{\"221\":1}}],[\"基于canvas的开源版\",{\"0\":{\"818\":1}}],[\"基于请求头动态返回不同语种的文本内容\",{\"1\":{\"608\":1}}],[\"基于注解自动生成\",{\"1\":{\"608\":1}}],[\"基于插件化\",{\"1\":{\"608\":1}}],[\"基于数据库锁性能差\",{\"1\":{\"608\":1}}],[\"基于部门角色\",{\"1\":{\"608\":1}}],[\"基于对象几乎不用写\",{\"1\":{\"608\":1}}],[\"基于语法装配\",{\"1\":{\"469\":1}}],[\"基于此可以对框架做自定义开发扩展\",{\"1\":{\"420\":1}}],[\"基于主流配置中心实现线程池参数动态调整\",{\"1\":{\"409\":1,\"419\":1}}],[\"基于自定义\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"基于泛型封装\",{\"1\":{\"321\":1}}],[\"基于时间戳的\",{\"1\":{\"608\":1}}],[\"基于时间\",{\"1\":{\"270\":1}}],[\"基于计数\",{\"1\":{\"270\":1}}],[\"基于信号量的隔离\",{\"1\":{\"269\":1}}],[\"基于\",{\"0\":{\"819\":1},\"1\":{\"33\":1,\"177\":1,\"237\":1,\"351\":3,\"357\":7,\"358\":3,\"364\":5,\"367\":3,\"374\":1,\"378\":5,\"382\":3,\"389\":1,\"393\":5,\"396\":3,\"400\":5,\"409\":1,\"419\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":9,\"615\":2}}],[\"基金会执行董事\",{\"1\":{\"15\":4}}],[\"基金会亚太区和开源中国联合发起\",{\"1\":{\"15\":1}}],[\"婷宝\",{\"1\":{\"308\":1}}],[\"婷\",{\"1\":{\"33\":1,\"308\":1}}],[\"展示\",{\"1\":{\"706\":1}}],[\"展示空\",{\"1\":{\"604\":1}}],[\"展示当前实例的依赖包信息\",{\"0\":{\"346\":1}}],[\"展示当前实例的基础信息\",{\"0\":{\"345\":1}}],[\"展示当前实例信息\",{\"0\":{\"344\":1}}],[\"展示了\",{\"1\":{\"165\":1}}],[\"展示完后台配置\",{\"1\":{\"132\":1}}],[\"展示开源项目\",{\"1\":{\"15\":1}}],[\"展望\",{\"1\":{\"30\":1,\"33\":1}}],[\"总的感觉\",{\"1\":{\"792\":1}}],[\"总的来说\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1}}],[\"总而言之\",{\"1\":{\"789\":1}}],[\"总任务被拆分成\",{\"1\":{\"406\":1}}],[\"总览如下\",{\"1\":{\"178\":1}}],[\"总权重\",{\"1\":{\"134\":1}}],[\"总个数\",{\"1\":{\"134\":1}}],[\"总结起来如下\",{\"0\":{\"461\":1}}],[\"总结网关端的长轮询的实现\",{\"1\":{\"147\":1}}],[\"总结下这两个类命名的意义\",{\"1\":{\"163\":1}}],[\"总结下\",{\"1\":{\"136\":1}}],[\"总结\",{\"0\":{\"90\":1,\"127\":1,\"145\":1,\"172\":1,\"201\":1,\"207\":1,\"211\":1,\"221\":1,\"230\":1,\"274\":1,\"295\":1},\"1\":{\"276\":1}}],[\"总结与\",{\"1\":{\"30\":1,\"33\":1}}],[\"总计有\",{\"1\":{\"481\":1}}],[\"总计\",{\"1\":{\"46\":1,\"514\":1}}],[\"总\",{\"1\":{\"37\":1}}],[\"总经理\",{\"1\":{\"15\":1}}],[\"伟楷\",{\"1\":{\"30\":1}}],[\"蒋文博\",{\"1\":{\"30\":1}}],[\"容量阈值报警\",{\"1\":{\"409\":1,\"419\":1}}],[\"容量除以速率\",{\"1\":{\"252\":1}}],[\"容量\",{\"1\":{\"241\":2,\"252\":1}}],[\"容器关闭前尽可能多的处理队列中的任务\",{\"1\":{\"409\":1,\"419\":1}}],[\"容器缺失\",{\"1\":{\"331\":1}}],[\"容器中\",{\"1\":{\"409\":1,\"419\":1}}],[\"容器中获取\",{\"1\":{\"205\":1,\"409\":1,\"419\":1}}],[\"容器中没有指定的类\",{\"1\":{\"200\":1}}],[\"容器\",{\"1\":{\"200\":1,\"217\":1,\"608\":1}}],[\"容器工具\",{\"1\":{\"8\":1,\"299\":1}}],[\"容错设计\",{\"1\":{\"30\":1}}],[\"阿丢丢\",{\"1\":{\"762\":1}}],[\"阿拉伯数字转换成中文对发票票面金额转换的扩展\",{\"1\":{\"723\":1}}],[\"阿里网盘\",{\"1\":{\"636\":1,\"643\":1}}],[\"阿里\",{\"1\":{\"608\":2}}],[\"阿里云盘\",{\"1\":{\"808\":1}}],[\"阿里云\",{\"1\":{\"808\":1,\"814\":1}}],[\"阿里云向此手机号发送短信\",{\"1\":{\"740\":1}}],[\"阿里云的accesskeysecret\",{\"1\":{\"740\":1}}],[\"阿里云的accesskey\",{\"1\":{\"740\":1}}],[\"阿里云短信在某些极端情况下会出现签名错误\",{\"1\":{\"776\":1}}],[\"阿里云短信发送会不定期报错\",{\"1\":{\"755\":1}}],[\"阿里云短信的返回值未能如期的通过\",{\"1\":{\"750\":1}}],[\"阿里云短信\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"阿里云商业版\",{\"1\":{\"411\":1}}],[\"阿利基耶里\",{\"1\":{\"352\":1}}],[\"阿行\",{\"1\":{\"30\":1,\"308\":1}}],[\"阿超\",{\"1\":{\"15\":1,\"308\":1,\"720\":1}}],[\"朱明\",{\"1\":{\"30\":1,\"33\":1,\"158\":1}}],[\"地域\",{\"1\":{\"567\":1}}],[\"地理库精准\",{\"1\":{\"554\":1,\"564\":1}}],[\"地址定位库\",{\"1\":{\"605\":1}}],[\"地址无法外部访问\",{\"1\":{\"339\":1}}],[\"地址\",{\"1\":{\"42\":1,\"77\":1,\"253\":1,\"414\":2,\"423\":2,\"576\":1,\"608\":1,\"703\":2,\"782\":2,\"786\":2}}],[\"地点\",{\"1\":{\"29\":1,\"32\":1}}],[\"地铁\",{\"1\":{\"12\":2}}],[\"6发布\",{\"0\":{\"479\":1}}],[\"61\",{\"1\":{\"397\":1}}],[\"6freeair2016\",{\"1\":{\"317\":1}}],[\"65\",{\"1\":{\"529\":2}}],[\"65536\",{\"1\":{\"313\":1}}],[\"651\",{\"1\":{\"208\":1}}],[\"64\",{\"1\":{\"278\":1,\"308\":1}}],[\"64583\",{\"1\":{\"199\":7}}],[\"64500\",{\"1\":{\"199\":9}}],[\"66\",{\"1\":{\"208\":1,\"308\":24}}],[\"66ms\",{\"1\":{\"109\":1}}],[\"620\",{\"1\":{\"92\":1}}],[\"600\",{\"1\":{\"709\":1}}],[\"600000\",{\"1\":{\"709\":1}}],[\"6000\",{\"1\":{\"210\":1,\"709\":1}}],[\"60l\",{\"1\":{\"148\":1}}],[\"60s\",{\"1\":{\"144\":1}}],[\"609\",{\"1\":{\"108\":3}}],[\"60\",{\"1\":{\"74\":2,\"109\":1,\"145\":3,\"271\":1,\"308\":29,\"709\":3}}],[\"6379\",{\"1\":{\"64\":1,\"325\":1,\"326\":1}}],[\"68\",{\"1\":{\"64\":2,\"77\":1,\"109\":1}}],[\"6k\",{\"1\":{\"56\":1}}],[\"6\",{\"0\":{\"158\":1,\"310\":1,\"349\":1,\"358\":1,\"367\":1,\"657\":1,\"689\":1,\"801\":1,\"830\":1,\"832\":1},\"1\":{\"29\":1,\"78\":1,\"79\":6,\"101\":1,\"109\":1,\"199\":1,\"200\":1,\"208\":1,\"308\":2,\"312\":2,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"338\":1,\"351\":1,\"353\":1,\"360\":1,\"467\":1,\"469\":2,\"473\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":1,\"485\":1,\"486\":1,\"491\":1,\"493\":1,\"497\":1,\"513\":1,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"547\":4,\"554\":2,\"564\":2,\"567\":1,\"577\":1,\"612\":1,\"616\":1,\"624\":1,\"798\":1}}],[\"6999\",{\"1\":{\"13\":1}}],[\"线段支持双击端点拖拽\",{\"1\":{\"827\":1}}],[\"线条\",{\"1\":{\"820\":1}}],[\"线程\",{\"1\":{\"266\":1,\"412\":1,\"713\":1}}],[\"线程数为\",{\"1\":{\"92\":1}}],[\"线程名称前缀为\",{\"1\":{\"92\":1}}],[\"线程池失效\",{\"1\":{\"755\":1}}],[\"线程池隔离\",{\"0\":{\"521\":1}}],[\"线程池内部注册器模块优化\",{\"1\":{\"413\":1}}],[\"线程池管理支持\",{\"1\":{\"411\":1}}],[\"线程池监控指标\",{\"1\":{\"413\":1}}],[\"线程池监控\",{\"0\":{\"348\":1}}],[\"线程池调用\",{\"1\":{\"144\":1}}],[\"线程池大小为\",{\"1\":{\"92\":1}}],[\"线程池线程的大小\",{\"1\":{\"64\":1}}],[\"线程局部握手协议\",{\"1\":{\"82\":1}}],[\"线上大规模应用\",{\"1\":{\"409\":1,\"419\":1}}],[\"线上腾讯会议室\",{\"1\":{\"29\":1,\"32\":1}}],[\"线上活动\",{\"1\":{\"28\":1,\"31\":1}}],[\"线下和开发者与开源爱好者们接触交流\",{\"1\":{\"18\":1}}],[\"主框架\",{\"0\":{\"797\":1}}],[\"主页点\",{\"1\":{\"720\":1}}],[\"主动停机等等这些都有\",{\"1\":{\"460\":1}}],[\"主动上线下线\",{\"1\":{\"460\":1}}],[\"主流技术网站和媒体的专属账号和频道等\",{\"1\":{\"306\":1}}],[\"主流数据库的\",{\"1\":{\"54\":1}}],[\"主机探活\",{\"0\":{\"225\":1}}],[\"主要作者在摸鱼\",{\"1\":{\"768\":1}}],[\"主要作用是调用其订阅器\",{\"1\":{\"162\":1}}],[\"主要是梳理和解决之前社区反馈的问题\",{\"1\":{\"714\":1}}],[\"主要是因为多了一层转发\",{\"1\":{\"109\":1}}],[\"主要解决\",{\"1\":{\"624\":1}}],[\"主要特点\",{\"0\":{\"577\":1}}],[\"主要加强点在\",{\"1\":{\"485\":1}}],[\"主要功能可以总结为动态调参\",{\"1\":{\"409\":1,\"418\":1}}],[\"主要专注企业信息化项目建设\",{\"1\":{\"396\":1}}],[\"主要存在以下问题\",{\"1\":{\"367\":1,\"382\":1}}],[\"主要更新\",{\"1\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"主要提供了六大核心能力\",{\"1\":{\"277\":1}}],[\"主要以流量为切入点\",{\"1\":{\"264\":1}}],[\"主要为了验证插件是否启用\",{\"1\":{\"244\":1}}],[\"主要做了三个事\",{\"1\":{\"236\":1}}],[\"主要用于对用户的调用行为进行鉴权和认证\",{\"1\":{\"186\":1}}],[\"主要关注于提高\",{\"1\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"主要原理是它将监控采集类型\",{\"1\":{\"55\":1}}],[\"主要产出如下\",{\"0\":{\"42\":1}}],[\"主要参与者\",{\"0\":{\"27\":1}}],[\"主题演讲\",{\"1\":{\"15\":1}}],[\"主题发言\",{\"1\":{\"15\":1}}],[\"崔猫求疵\",{\"1\":{\"308\":1}}],[\"崔\",{\"1\":{\"26\":1,\"30\":1,\"33\":1}}],[\"以满足您不同业务的需求\",{\"1\":{\"727\":1}}],[\"以满足您的不同业务需求\",{\"1\":{\"727\":1}}],[\"以满足不断变化的需求\",{\"1\":{\"91\":1}}],[\"以提高系统的稳定性和可靠性\",{\"1\":{\"727\":1}}],[\"以提高框架的性能\",{\"1\":{\"727\":1}}],[\"以提高代码的质量和效率\",{\"1\":{\"90\":1}}],[\"以为只是简单的一个\",{\"1\":{\"720\":1}}],[\"以后的以后\",{\"0\":{\"718\":1}}],[\"以性能与稳定性闻名天下\",{\"1\":{\"608\":1}}],[\"以全新的姿态继续向前冲~\",{\"1\":{\"498\":1}}],[\"以前一个礼拜一个版本的速度让我觉得过于快了\",{\"1\":{\"469\":1}}],[\"以保持业务相关性\",{\"1\":{\"397\":1}}],[\"以保持系统内核的专注性\",{\"1\":{\"368\":1}}],[\"以更好地的支持查询数据成功\",{\"1\":{\"368\":1}}],[\"以方便\",{\"1\":{\"368\":1}}],[\"以方便代码的统一修改维护和开发使用\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"以兼容更多用户的使用需求\",{\"1\":{\"367\":1,\"382\":1}}],[\"以兼容现有基于\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"以支持\",{\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"以进行登录\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"以长诗\",{\"1\":{\"352\":1}}],[\"以其高性能\",{\"1\":{\"311\":1}}],[\"以便更好地满足您的业务需求\",{\"1\":{\"727\":1}}],[\"以便您更灵活地管理系统配置\",{\"1\":{\"727\":1}}],[\"以便减少数据加载\",{\"1\":{\"722\":1}}],[\"以便我们能够改进\",{\"1\":{\"305\":1}}],[\"以便与服务端调用\",{\"1\":{\"293\":1}}],[\"以下仅做演示\",{\"1\":{\"774\":1}}],[\"以下空字符串仅为演示使用\",{\"1\":{\"727\":1}}],[\"以下我们看一个简单的新的配置方式的示例\",{\"1\":{\"727\":1}}],[\"以下所有版本\",{\"1\":{\"701\":1}}],[\"以下便是我服务器上的目录结构\",{\"1\":{\"593\":1}}],[\"以下两个对服务有严重危害的场景在生产中经常会遇到\",{\"1\":{\"262\":1}}],[\"以下讲解来源于官方文档\",{\"1\":{\"241\":1}}],[\"以下演示代码截图来自于\",{\"1\":{\"231\":1}}],[\"以下是配置成本地模式\",{\"1\":{\"709\":1}}],[\"以下是本例中质数统计的\",{\"1\":{\"406\":1}}],[\"以下是task\",{\"1\":{\"406\":1}}],[\"以下是核心代码\",{\"1\":{\"219\":1}}],[\"以下是\",{\"1\":{\"81\":1,\"405\":1,\"729\":1}}],[\"以硬编码的方式引入各插件\",{\"1\":{\"217\":1}}],[\"以此类推最后一次循环统计\",{\"1\":{\"406\":1}}],[\"以此为入口进行跟踪调试\",{\"1\":{\"200\":1}}],[\"以此来支持实际使用中针对单字段检索时可以既使用中文分词器\",{\"1\":{\"47\":1}}],[\"以\",{\"0\":{\"187\":1},\"1\":{\"692\":1}}],[\"以达到动态刷新网关规则及插件\",{\"1\":{\"92\":1}}],[\"以希腊字母第二个字母命名\",{\"1\":{\"79\":1}}],[\"以上是我们最新版本\",{\"1\":{\"736\":1}}],[\"以上所有\",{\"1\":{\"701\":1}}],[\"以上版本\",{\"1\":{\"701\":1}}],[\"以上配置无法找到则\",{\"1\":{\"664\":1}}],[\"以上的命令\",{\"1\":{\"608\":1}}],[\"以上规定\",{\"0\":{\"307\":1}}],[\"以上从如何配置\",{\"1\":{\"295\":1}}],[\"以上就是\",{\"1\":{\"294\":1}}],[\"以上就是今天分享的内容\",{\"1\":{\"64\":1}}],[\"以上\",{\"0\":{\"72\":1}}],[\"以文字形式写到各自的作业提交区\",{\"1\":{\"24\":1}}],[\"以及混合模式\",{\"1\":{\"787\":1}}],[\"以及社区合作进行新的开发\",{\"1\":{\"714\":1}}],[\"以及其他新功能的支持\",{\"1\":{\"704\":1}}],[\"以及底层保存的\",{\"1\":{\"654\":1}}],[\"以及修复了一些循环表达式中的\",{\"1\":{\"474\":1}}],[\"以及核心\",{\"1\":{\"397\":1}}],[\"以及项目子品牌的著作权和实际拥有权\",{\"1\":{\"306\":1}}],[\"以及不伤害组织\",{\"1\":{\"306\":1}}],[\"以及没有注名字的是服务异常判断方式\",{\"1\":{\"265\":1}}],[\"以及加载器\",{\"1\":{\"167\":1}}],[\"以及各种\",{\"1\":{\"161\":1}}],[\"以及数据流动方式\",{\"1\":{\"147\":1}}],[\"以及注册\",{\"1\":{\"131\":1}}],[\"以及对\",{\"1\":{\"86\":1}}],[\"以及对集合\",{\"1\":{\"84\":1,\"85\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"以及对嵌套的访问控制的改进等等\",{\"1\":{\"83\":1}}],[\"以及对容器\",{\"1\":{\"82\":1}}],[\"以及\",{\"1\":{\"78\":1,\"353\":1,\"356\":1,\"358\":1,\"372\":1,\"374\":1,\"387\":1,\"389\":1,\"395\":1,\"402\":1,\"426\":1,\"498\":1,\"706\":1,\"710\":1,\"787\":1}}],[\"以及集群环境中\",{\"0\":{\"63\":1}}],[\"以及解答\",{\"1\":{\"46\":1}}],[\"以及有机会成为\",{\"1\":{\"36\":1}}],[\"以及来自百度\",{\"1\":{\"15\":1}}],[\"以及开源治理\",{\"1\":{\"15\":1}}],[\"以及越来越多高质量项目的涌现\",{\"1\":{\"11\":1}}],[\"次数循环组件\",{\"1\":{\"476\":1}}],[\"次数去执行你的\",{\"1\":{\"64\":1}}],[\"次方\",{\"1\":{\"64\":1}}],[\"次\",{\"1\":{\"24\":1,\"64\":1,\"265\":1,\"406\":1}}],[\"点亮一颗星星\",{\"1\":{\"629\":1}}],[\"点选按钮不生效问题\",{\"1\":{\"606\":1}}],[\"点赞\",{\"1\":{\"442\":1}}],[\"点\",{\"1\":{\"145\":3}}],[\"点造就了\",{\"0\":{\"72\":1}}],[\"点作业未提交\",{\"1\":{\"24\":1}}],[\"点击恢复按钮\",{\"1\":{\"406\":1}}],[\"点击实例\",{\"0\":{\"345\":1,\"346\":1}}],[\"点击\",{\"1\":{\"264\":1,\"336\":1,\"340\":1,\"813\":1,\"817\":1}}],[\"点击同步数据\",{\"1\":{\"208\":2}}],[\"点击链接\",{\"1\":{\"60\":1}}],[\"点击底部菜单栏\",{\"1\":{\"14\":1}}],[\"点击此处\",{\"1\":{\"13\":1}}],[\"点击查看全部赞助商\",{\"1\":{\"9\":1}}],[\"点击查看全部项目\",{\"1\":{\"4\":1}}],[\"点击查看项目捐赠\",{\"1\":{\"8\":1}}],[\"隔天的早上\",{\"1\":{\"24\":1}}],[\"人左右\",{\"1\":{\"507\":1}}],[\"人总要需要一道光来照亮生命\",{\"1\":{\"501\":1}}],[\"人以上了\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"人\",{\"1\":{\"46\":1,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"人给管理员\",{\"1\":{\"24\":1}}],[\"人工智能\",{\"1\":{\"8\":1,\"299\":1}}],[\"先前版本中短信拦截未生效\",{\"1\":{\"750\":1}}],[\"先给大伙看看\",{\"1\":{\"590\":1}}],[\"先确保本地能正常访问被代理服务\",{\"1\":{\"586\":1}}],[\"先根据当前的机器资源情况来决定拆分任务的数量\",{\"1\":{\"406\":1}}],[\"先从对应的队列中获取令牌\",{\"1\":{\"251\":1}}],[\"先从其最开始会被调用到的\",{\"1\":{\"167\":1}}],[\"先认识handlerequestbody方法\",{\"1\":{\"236\":1}}],[\"先获取到选择器对应的可用服务列表\",{\"1\":{\"224\":1}}],[\"先匹配到对应的选择器和规则\",{\"1\":{\"224\":1}}],[\"先回顾下请求处理类插件的通用流程\",{\"1\":{\"224\":1}}],[\"先关注\",{\"1\":{\"219\":1}}],[\"先在插件链初始化阶段完成插件排序\",{\"1\":{\"217\":1}}],[\"先将网关数据同步至内存\",{\"1\":{\"209\":1}}],[\"先配置一下环境\",{\"1\":{\"208\":1}}],[\"先来看\",{\"1\":{\"176\":1}}],[\"先来分析一下这个代码\",{\"1\":{\"92\":1}}],[\"先分享个我以前写的方式\",{\"1\":{\"173\":1}}],[\"先找到\",{\"1\":{\"171\":1}}],[\"先不去分析这个\",{\"1\":{\"144\":1}}],[\"先暂放一边\",{\"1\":{\"144\":1}}],[\"先思考下我自己设计长轮询\",{\"1\":{\"143\":1}}],[\"先看看关于父类\",{\"1\":{\"144\":1}}],[\"先看看这个方法\",{\"0\":{\"123\":1}}],[\"先看下\",{\"1\":{\"156\":1}}],[\"先看下调用的接口信息如下\",{\"1\":{\"121\":1}}],[\"先看下图\",{\"1\":{\"92\":1}}],[\"先往下走\",{\"1\":{\"122\":1}}],[\"先测试不经过网关转发\",{\"1\":{\"117\":1}}],[\"先启动\",{\"1\":{\"112\":1}}],[\"先手动配置选择器的配置\",{\"1\":{\"110\":1}}],[\"先把这个依赖注释掉再看\",{\"1\":{\"92\":1}}],[\"先上图\",{\"1\":{\"92\":1}}],[\"先交出\",{\"1\":{\"24\":1}}],[\"先是挑选十二位组员进行为期\",{\"1\":{\"24\":1}}],[\"期间成功支持多位使用者生产使用\",{\"1\":{\"612\":1}}],[\"期间进行两次线上分享\",{\"1\":{\"24\":1}}],[\"期\",{\"1\":{\"140\":1}}],[\"期待您的加入\",{\"1\":{\"635\":1}}],[\"期待有更多的人一起参与共建\",{\"1\":{\"407\":1}}],[\"期待下一次再与开源小伙伴们和开发者们线下交流学习\",{\"1\":{\"18\":1}}],[\"期待和各个层次的参与者\",{\"1\":{\"11\":1}}],[\"锻炼语言表达能力\",{\"1\":{\"23\":1}}],[\"锻炼大家的表达能力和提升技术核心力量\",{\"1\":{\"22\":1}}],[\"提示\",{\"1\":{\"644\":1}}],[\"提示不变的问题\",{\"1\":{\"606\":1}}],[\"提取码\",{\"1\":{\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"提醒的问题\",{\"1\":{\"421\":1}}],[\"提交问题\",{\"1\":{\"635\":1}}],[\"提交的\",{\"1\":{\"624\":1}}],[\"提交任务到\",{\"1\":{\"339\":1}}],[\"提交时的校验\",{\"1\":{\"315\":1}}],[\"提交申请\",{\"1\":{\"36\":1}}],[\"提高批量操作数据库效率\",{\"1\":{\"834\":1}}],[\"提高通信效率\",{\"1\":{\"803\":1}}],[\"提高调试效率\",{\"1\":{\"794\":1}}],[\"提高工作效率\",{\"1\":{\"636\":1,\"643\":1,\"794\":1}}],[\"提高了其稳定性和性能\",{\"1\":{\"734\":1}}],[\"提高了系统的响应速度和处理效率\",{\"1\":{\"727\":1}}],[\"提高了整体的稳定可用性\",{\"1\":{\"448\":1}}],[\"提高了代码的可读性和可维护性\",{\"1\":{\"81\":1}}],[\"提高了代码的重用性和可读性\",{\"1\":{\"81\":1}}],[\"提高兼容性和更好监听状态和获取日志\",{\"1\":{\"338\":1}}],[\"提高积极性\",{\"1\":{\"23\":1}}],[\"提供有界面友好的开放文档查看功能\",{\"1\":{\"831\":1}}],[\"提供有富文本和\",{\"1\":{\"831\":1}}],[\"提供在线化的知识库管理功能\",{\"1\":{\"831\":1}}],[\"提供在并行编排中更多的多样性\",{\"1\":{\"516\":1}}],[\"提供高性能\",{\"1\":{\"794\":1}}],[\"提供一套完整的物联网设备调试方案\",{\"1\":{\"794\":1}}],[\"提供传统\",{\"1\":{\"787\":1}}],[\"提供优雅\",{\"1\":{\"719\":1}}],[\"提供优秀的代码与建议\",{\"1\":{\"703\":1}}],[\"提供零侵入性式的\",{\"1\":{\"706\":1}}],[\"提供更精确的未登录异常描述信息\",{\"1\":{\"624\":1}}],[\"提供更准确和交互友好的描述信息\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供框架功能的实际使用案例\",{\"1\":{\"608\":1}}],[\"提供单例测试\",{\"1\":{\"608\":1}}],[\"提供详细的修改方案文档\",{\"1\":{\"608\":1}}],[\"提供详实的注释说明\",{\"1\":{\"372\":1,\"387\":1}}],[\"提供详实的注释\",{\"1\":{\"370\":1,\"385\":1}}],[\"提供用户生命周期管理\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"提供安全\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"提供新特性和新的探索\",{\"1\":{\"507\":1}}],[\"提供后台管理动态生成规则\",{\"1\":{\"469\":1}}],[\"提供规则和脚本版本概念\",{\"1\":{\"469\":1}}],[\"提供云边协同能力\",{\"1\":{\"455\":1}}],[\"提供任务包装功能\",{\"1\":{\"409\":1,\"419\":1}}],[\"提供多种报警维度\",{\"1\":{\"409\":1,\"419\":1}}],[\"提供与后端一致\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供共用化秒传实现\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供前后端使用案例\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供直传机制\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供标准的认证接口以便于其他应用集成\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"提供标准的\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供大量重载方法\",{\"1\":{\"374\":1,\"389\":1}}],[\"提供基于\",{\"1\":{\"373\":1,\"374\":1,\"388\":1,\"389\":1}}],[\"提供统一标准的\",{\"1\":{\"372\":1,\"387\":1}}],[\"提供以\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"提供宽泛的路径策略\",{\"1\":{\"314\":1}}],[\"提供了安全认证机制\",{\"1\":{\"803\":1}}],[\"提供了系统自带的各种插件\",{\"1\":{\"783\":1}}],[\"提供了自己实现的负载均衡策略\",{\"1\":{\"702\":1}}],[\"提供了\",{\"1\":{\"498\":1,\"783\":1}}],[\"提供了增强线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"提供了一系列增强微服务的可用性功能\",{\"1\":{\"269\":1}}],[\"提供了一系列工厂方法\",{\"1\":{\"81\":1}}],[\"提供了可扩展性\",{\"1\":{\"215\":1}}],[\"提供\",{\"1\":{\"160\":1,\"269\":1,\"420\":1,\"617\":1,\"723\":2}}],[\"提供自身的实现子类\",{\"1\":{\"131\":1}}],[\"提供自定义注解\",{\"0\":{\"45\":1},\"1\":{\"38\":1}}],[\"提供doexecute\",{\"1\":{\"128\":1}}],[\"提供的内置能力\",{\"0\":{\"628\":1}}],[\"提供的数据源配置了\",{\"1\":{\"483\":1}}],[\"提供的自定义注解的一种方式\",{\"1\":{\"430\":1}}],[\"提供的超链接或者生成二维码\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"提供的流量控制和服务熔断功能\",{\"1\":{\"264\":1}}],[\"提供的\",{\"1\":{\"116\":1,\"164\":1}}],[\"提供技术支持\",{\"1\":{\"57\":1}}],[\"提供包括分布式事务\",{\"1\":{\"37\":1}}],[\"提升系统性能\",{\"1\":{\"448\":1}}],[\"提升工作效率和质量\",{\"1\":{\"396\":1}}],[\"提升代码内聚性\",{\"1\":{\"383\":1}}],[\"提升\",{\"1\":{\"372\":1,\"387\":1}}],[\"提升自己的技术水平和实践能力\",{\"1\":{\"36\":1}}],[\"提升技术力量\",{\"1\":{\"23\":1}}],[\"提前请假者无需惩罚\",{\"1\":{\"24\":1}}],[\"促进优秀开源软件社区的蓬勃发展\",{\"1\":{\"35\":1}}],[\"促进社区的和谐\",{\"1\":{\"23\":1}}],[\"促进\",{\"1\":{\"22\":1}}],[\"梦码读书会\",{\"0\":{\"21\":1}}],[\"梦码读书会介绍\",{\"0\":{\"20\":1},\"1\":{\"20\":1}}],[\"助力快速掌握突破微服务生态的关键\",{\"1\":{\"397\":1}}],[\"助力企业信息化建设变革的产品\",{\"1\":{\"352\":1}}],[\"助力开发人员对新兴技术的学习和掌握\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"助力开源软件供应链建设\",{\"1\":{\"35\":1}}],[\"助力开源发展\",{\"1\":{\"15\":1}}],[\"助力中小型企业应对高并发洪流\",{\"1\":{\"18\":1}}],[\"猫大人家的菜鸟\",{\"1\":{\"308\":1}}],[\"猫大人威武霸气\",{\"1\":{\"308\":1}}],[\"猫大人威武\",{\"1\":{\"308\":1}}],[\"猫大人及其同仁们威武\",{\"1\":{\"308\":1}}],[\"猫大人帅气\",{\"1\":{\"308\":1}}],[\"猫大人帅哥\",{\"1\":{\"308\":1}}],[\"猫大人的错别字检查员\",{\"1\":{\"308\":1}}],[\"猫大人的小学徒\",{\"1\":{\"308\":1}}],[\"猫大人的小迷弟\",{\"1\":{\"308\":1}}],[\"猫大人的胸毛\",{\"1\":{\"308\":1}}],[\"猫大人的狸猫\",{\"1\":{\"308\":1}}],[\"猫大人的华子\",{\"1\":{\"308\":2}}],[\"猫大人牛逼\",{\"1\":{\"308\":6}}],[\"猫大人牛批\",{\"1\":{\"308\":3}}],[\"猫大人加油\",{\"1\":{\"308\":5}}],[\"猫大人抽华子\",{\"1\":{\"308\":3}}],[\"猫大人\",{\"1\":{\"26\":1,\"30\":2,\"33\":2,\"308\":1}}],[\"猫大\",{\"1\":{\"18\":1}}],[\"猫大也作为开源组织代表发表了自己的见解\",{\"1\":{\"17\":1}}],[\"加微信备注加群\",{\"1\":{\"622\":1}}],[\"加微信进交流群哇\",{\"1\":{\"449\":1}}],[\"加公开群\",{\"0\":{\"622\":1}}],[\"加解密拦截器\",{\"1\":{\"606\":1}}],[\"加解密\",{\"1\":{\"605\":1}}],[\"加解密安全工具类\",{\"1\":{\"605\":1}}],[\"加解密模块\",{\"1\":{\"604\":1}}],[\"加上平台对指标的可视化处理\",{\"1\":{\"590\":1}}],[\"加上用户密码验证\",{\"1\":{\"433\":1}}],[\"加上用户密码验证也十分简单\",{\"1\":{\"432\":1}}],[\"加上\",{\"1\":{\"430\":1}}],[\"加密包使用\",{\"1\":{\"751\":1}}],[\"加密文件过滤及匹配\",{\"1\":{\"637\":1}}],[\"加密模块数据转换异常问题\",{\"1\":{\"619\":1}}],[\"加密实现\",{\"1\":{\"617\":1}}],[\"加密校验方式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"加密校验方式外\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"加密插件支持多个个字段加密\",{\"1\":{\"314\":1}}],[\"加关注\",{\"1\":{\"336\":1,\"340\":1}}],[\"加\",{\"1\":{\"315\":1}}],[\"加油吧\",{\"1\":{\"308\":1}}],[\"加油\",{\"1\":{\"308\":11}}],[\"加入了更多新特性\",{\"1\":{\"738\":1}}],[\"加入过滤条件\",{\"0\":{\"669\":1},\"1\":{\"667\":1}}],[\"加入我们的社区论坛或聊天群\",{\"1\":{\"635\":1}}],[\"加入我们的团队\",{\"1\":{\"634\":1}}],[\"加入回滚\",{\"1\":{\"469\":1}}],[\"加入社群\",{\"0\":{\"415\":1,\"424\":1}}],[\"加入\",{\"0\":{\"319\":1,\"403\":1,\"635\":1,\"793\":1,\"807\":1,\"818\":1}}],[\"加入的第一个组织\",{\"1\":{\"308\":1}}],[\"加入知识星球\",{\"1\":{\"308\":1}}],[\"加入或者退出项目等\",{\"1\":{\"306\":1}}],[\"加入组织\",{\"0\":{\"5\":1},\"1\":{\"10\":1}}],[\"加深对该类的印象\",{\"1\":{\"249\":1}}],[\"加深了开源企业\",{\"1\":{\"17\":1}}],[\"加载本机图片效果\",{\"1\":{\"644\":1}}],[\"加载\",{\"1\":{\"342\":1}}],[\"加载限流插件配置\",{\"1\":{\"247\":1}}],[\"加载路径\",{\"1\":{\"183\":1}}],[\"加载某个接口的实现类时\",{\"1\":{\"182\":1}}],[\"加载资源文件\",{\"1\":{\"167\":1}}],[\"加载了所有插件\",{\"1\":{\"130\":1}}],[\"加载流程以及处理请求分析\",{\"1\":{\"30\":1}}],[\"推动物联网设备调试领域的发展\",{\"1\":{\"794\":1}}],[\"推出\",{\"0\":{\"517\":1}}],[\"推出过动态构建\",{\"1\":{\"517\":1}}],[\"推出过\",{\"1\":{\"516\":1}}],[\"推出基于\",{\"1\":{\"469\":1}}],[\"推出更加高级的语法装配\",{\"1\":{\"469\":1}}],[\"推出了开源\",{\"1\":{\"16\":1}}],[\"推荐用户使用\",{\"1\":{\"783\":1}}],[\"推荐大家使用此特性\",{\"1\":{\"474\":1}}],[\"推荐升级食用\",{\"1\":{\"442\":1}}],[\"推荐\",{\"0\":{\"333\":1}}],[\"推荐的容错方案\",{\"1\":{\"269\":1}}],[\"推荐先了解一下\",{\"1\":{\"252\":1}}],[\"推荐使用latest直接安装最新版\",{\"1\":{\"580\":1}}],[\"推荐使用\",{\"1\":{\"64\":1}}],[\"推荐绿色出行\",{\"1\":{\"12\":2}}],[\"推荐项目或已获得\",{\"1\":{\"8\":1,\"299\":1}}],[\"和普通的\",{\"1\":{\"783\":1}}],[\"和赞助\",{\"1\":{\"764\":1}}],[\"和依赖过多\",{\"1\":{\"729\":1}}],[\"和谐基本原则\",{\"1\":{\"707\":1,\"715\":1}}],[\"和谐快乐做开源\",{\"1\":{\"2\":1}}],[\"和大家见面了\",{\"1\":{\"514\":1}}],[\"和大家一些疑惑的地方\",{\"1\":{\"60\":1}}],[\"和启动了新的域名\",{\"1\":{\"498\":1}}],[\"和更多自定义监控模版\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"和用户验证的需求\",{\"1\":{\"431\":1}}],[\"和尘同光\",{\"1\":{\"308\":1}}],[\"和使用的泛化方式\",{\"1\":{\"294\":1}}],[\"和填写注册中心的连接地址\",{\"1\":{\"281\":1}}],[\"和不存储\",{\"1\":{\"278\":1}}],[\"和熔断最小请求数\",{\"1\":{\"265\":1}}],[\"和现实中的熔断一样服务熔断是会自动恢复的\",{\"1\":{\"264\":1}}],[\"和秘密访问密钥\",{\"1\":{\"186\":1}}],[\"和加载器传给\",{\"1\":{\"167\":1}}],[\"和选择器一一对齐\",{\"1\":{\"116\":1}}],[\"和选择器规则\",{\"1\":{\"113\":1}}],[\"和端口\",{\"1\":{\"101\":1,\"228\":1}}],[\"和谁连接了\",{\"1\":{\"92\":1}}],[\"和修改方法中\",{\"1\":{\"92\":1}}],[\"和垃圾回收器的改进\",{\"1\":{\"87\":1}}],[\"和\",{\"1\":{\"38\":1,\"48\":1,\"64\":1,\"71\":1,\"77\":1,\"79\":1,\"81\":4,\"83\":3,\"85\":1,\"86\":1,\"87\":2,\"88\":2,\"89\":3,\"92\":2,\"108\":1,\"116\":1,\"124\":1,\"126\":1,\"129\":1,\"150\":1,\"154\":1,\"200\":1,\"219\":1,\"225\":1,\"252\":1,\"288\":1,\"289\":1,\"314\":1,\"316\":3,\"331\":1,\"340\":2,\"353\":1,\"354\":2,\"356\":1,\"357\":4,\"358\":1,\"362\":2,\"364\":4,\"368\":1,\"370\":2,\"374\":1,\"376\":2,\"378\":4,\"385\":2,\"389\":1,\"391\":2,\"393\":4,\"395\":1,\"397\":2,\"399\":2,\"400\":4,\"402\":1,\"489\":1,\"499\":1,\"628\":1,\"651\":1,\"663\":1,\"664\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":3,\"805\":1}}],[\"和开发者们分享了开源的故事\",{\"1\":{\"16\":1}}],[\"svg\",{\"1\":{\"820\":1,\"827\":2}}],[\"svc\",{\"1\":{\"167\":2}}],[\"sftp\",{\"1\":{\"808\":1}}],[\"sso\",{\"1\":{\"525\":1,\"526\":1,\"529\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1,\"624\":5}}],[\"ssl证书管理密钥\",{\"1\":{\"585\":1}}],[\"ssl证书密钥\",{\"1\":{\"585\":1}}],[\"ssl\",{\"1\":{\"431\":1,\"445\":1,\"449\":1,\"459\":1,\"577\":2,\"585\":1,\"776\":1}}],[\"sshd\",{\"1\":{\"458\":1}}],[\"ssh\",{\"1\":{\"53\":1,\"54\":2,\"331\":2,\"338\":1,\"441\":1,\"447\":1,\"452\":1,\"458\":1,\"464\":1}}],[\"s3\",{\"1\":{\"397\":1,\"608\":2,\"616\":1,\"808\":2,\"809\":1}}],[\"sm3\",{\"1\":{\"605\":1}}],[\"sm4\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"605\":1,\"608\":1}}],[\"sm2\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"605\":1,\"608\":1}}],[\"smsreadconfig\",{\"1\":{\"773\":1}}],[\"smsresponse\",{\"1\":{\"750\":1,\"770\":2}}],[\"smsblend\",{\"1\":{\"770\":3}}],[\"smsutil类中的getnewmap\",{\"1\":{\"749\":1}}],[\"smsfactory\",{\"1\":{\"740\":2,\"751\":1,\"761\":1,\"770\":1,\"773\":1}}],[\"sms4j3\",{\"1\":{\"770\":1}}],[\"sms4j<\",{\"1\":{\"739\":1,\"758\":1}}],[\"sms4j\",{\"0\":{\"611\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"737\":1,\"738\":1,\"742\":1,\"753\":1,\"767\":1},\"1\":{\"615\":1,\"616\":1,\"620\":1,\"632\":1,\"727\":1,\"729\":2,\"732\":1,\"733\":1,\"736\":2,\"738\":1,\"741\":2,\"749\":1,\"753\":1,\"763\":3,\"764\":3,\"765\":1,\"766\":2,\"768\":1}}],[\"sms\",{\"0\":{\"732\":1},\"1\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1,\"442\":1,\"732\":1,\"738\":1,\"740\":3,\"741\":1,\"759\":1,\"772\":1}}],[\"smn\",{\"1\":{\"57\":1}}],[\"swtracetaskwrapper\",{\"1\":{\"409\":1,\"419\":1}}],[\"swagger3\",{\"1\":{\"372\":1,\"387\":1}}],[\"swagger\",{\"1\":{\"314\":1,\"315\":2,\"374\":1,\"389\":1,\"617\":1}}],[\"switch跳转到设置tag的chain上\",{\"1\":{\"468\":1}}],[\"switchconfig\",{\"1\":{\"314\":1}}],[\"switchifempty\",{\"1\":{\"136\":1,\"259\":1}}],[\"switch\",{\"1\":{\"79\":3,\"84\":4,\"85\":3,\"86\":2,\"88\":1,\"89\":3,\"90\":4,\"141\":1,\"155\":1,\"157\":1,\"162\":1,\"200\":1,\"209\":2,\"445\":4,\"459\":4}}],[\"snakeyaml\",{\"1\":{\"354\":2,\"397\":2}}],[\"sni\",{\"1\":{\"313\":1}}],[\"sneakythrows\",{\"1\":{\"209\":1,\"210\":1}}],[\"snmp\",{\"1\":{\"53\":1,\"54\":2,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"skywalking\",{\"1\":{\"354\":2,\"368\":1,\"397\":2,\"608\":1}}],[\"sk\",{\"0\":{\"186\":1},\"1\":{\"186\":2}}],[\"skip\",{\"1\":{\"128\":1,\"130\":3,\"219\":2,\"220\":3,\"231\":3,\"287\":3}}],[\"skip=true\",{\"1\":{\"98\":4}}],[\"src\",{\"1\":{\"174\":1,\"198\":2,\"208\":2,\"575\":1}}],[\"sqlsever\",{\"1\":{\"714\":1}}],[\"sqlserver\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"608\":1,\"713\":1}}],[\"sqlparser\",{\"1\":{\"713\":1}}],[\"sqlite\",{\"0\":{\"581\":1},\"1\":{\"575\":1,\"583\":1}}],[\"sql目录下找到\",{\"1\":{\"575\":1}}],[\"sql插件支持轮询模式\",{\"1\":{\"522\":1}}],[\"sql插件格式化加入cdata\",{\"1\":{\"509\":1}}],[\"sqlexception\",{\"1\":{\"170\":3,\"171\":5,\"509\":1}}],[\"sql\",{\"0\":{\"483\":1,\"515\":1,\"735\":1},\"1\":{\"170\":4,\"171\":3,\"172\":1,\"316\":3,\"331\":1,\"339\":1,\"444\":1,\"458\":1,\"483\":1,\"522\":1,\"557\":1,\"575\":2,\"608\":9,\"609\":1,\"617\":1,\"628\":4,\"713\":1,\"716\":2,\"735\":1,\"741\":2,\"755\":1,\"833\":1,\"834\":1}}],[\"slogan\",{\"0\":{\"501\":1},\"1\":{\"501\":3}}],[\"slot\",{\"1\":{\"488\":6}}],[\"slave\",{\"1\":{\"326\":1}}],[\"slack\",{\"1\":{\"53\":1,\"449\":1}}],[\"sliding\",{\"1\":{\"271\":2}}],[\"slidingwindowtype\",{\"1\":{\"270\":1}}],[\"slidingwindowsize\",{\"1\":{\"270\":1}}],[\"sleep\",{\"1\":{\"148\":1,\"149\":2,\"272\":1,\"628\":1}}],[\"slf4j\",{\"1\":{\"144\":1,\"158\":1,\"161\":1,\"210\":1,\"474\":2}}],[\"syntax\",{\"1\":{\"458\":1}}],[\"synchronizer\",{\"1\":{\"529\":1}}],[\"synchronized\",{\"1\":{\"170\":2,\"183\":2}}],[\"syncdata\",{\"1\":{\"200\":2}}],[\"syncdataserviceimpl\",{\"1\":{\"200\":2}}],[\"syncdataservice\",{\"1\":{\"148\":1,\"156\":3,\"158\":1,\"161\":1,\"200\":15,\"205\":4,\"208\":2,\"210\":1}}],[\"syncconnected\",{\"1\":{\"199\":2}}],[\"syncall\",{\"1\":{\"158\":1,\"200\":4}}],[\"sync\",{\"1\":{\"92\":2,\"101\":1,\"140\":2,\"141\":1,\"156\":6,\"160\":2,\"161\":5,\"163\":2,\"198\":4,\"199\":1,\"200\":5,\"205\":7,\"206\":2,\"208\":15,\"210\":6,\"313\":2,\"316\":1,\"788\":3}}],[\"sys\",{\"1\":{\"327\":1,\"328\":1,\"604\":1}}],[\"system\",{\"1\":{\"101\":1,\"135\":1,\"141\":1,\"165\":1,\"166\":5,\"167\":3,\"173\":2,\"174\":1,\"191\":1,\"226\":2,\"227\":1,\"231\":2,\"324\":3,\"325\":3,\"327\":3,\"328\":3,\"709\":6}}],[\"side\",{\"1\":{\"501\":1}}],[\"site\",{\"1\":{\"459\":2}}],[\"sitemap\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"silence\",{\"1\":{\"458\":1}}],[\"silent\",{\"1\":{\"308\":1}}],[\"sikm\",{\"1\":{\"308\":1}}],[\"sink\",{\"1\":{\"308\":1}}],[\"sing\",{\"1\":{\"195\":1}}],[\"singleton\",{\"1\":{\"247\":8,\"249\":1}}],[\"singletonlist\",{\"1\":{\"123\":2,\"124\":2,\"125\":2,\"126\":1,\"144\":1,\"153\":1,\"209\":1}}],[\"single\",{\"1\":{\"88\":1,\"118\":1,\"247\":2}}],[\"sissie\",{\"1\":{\"308\":1}}],[\"sirius\",{\"1\":{\"308\":2}}],[\"simplevalueparser\",{\"1\":{\"722\":1}}],[\"simplepostwithsocksproxy\",{\"1\":{\"432\":2}}],[\"simple\",{\"1\":{\"368\":1,\"373\":1,\"388\":1}}],[\"simpleinstantiationstrategy\",{\"1\":{\"208\":4}}],[\"simd\",{\"1\":{\"88\":1}}],[\"sigkey\",{\"1\":{\"195\":1}}],[\"signature\",{\"1\":{\"727\":1,\"740\":2,\"759\":1,\"772\":1}}],[\"signauthdatacache\",{\"1\":{\"195\":1}}],[\"signutils\",{\"1\":{\"195\":1}}],[\"signdata\",{\"1\":{\"195\":2}}],[\"signverify\",{\"1\":{\"195\":1}}],[\"signplugin\",{\"1\":{\"195\":1,\"231\":1,\"232\":2}}],[\"sign<\",{\"1\":{\"188\":1}}],[\"sign\",{\"0\":{\"188\":1,\"194\":1},\"1\":{\"131\":2,\"185\":1,\"188\":2,\"191\":2,\"193\":1,\"195\":5,\"231\":1,\"232\":1,\"308\":1,\"315\":2,\"541\":1,\"624\":2}}],[\"size\",{\"0\":{\"687\":1},\"1\":{\"66\":2,\"71\":1,\"74\":1,\"129\":1,\"130\":1,\"134\":1,\"135\":2,\"148\":3,\"219\":1,\"220\":1,\"224\":1,\"227\":3,\"231\":1,\"234\":2,\"271\":1,\"287\":1,\"313\":2,\"683\":1,\"816\":2}}],[\"sax\",{\"1\":{\"724\":1}}],[\"sayhello\",{\"1\":{\"709\":2}}],[\"saycancel\",{\"1\":{\"709\":4}}],[\"sayconfrim\",{\"1\":{\"709\":4}}],[\"say\",{\"1\":{\"709\":8}}],[\"sacheckor\",{\"1\":{\"624\":1}}],[\"sachin10fi\",{\"1\":{\"317\":1}}],[\"safilter\",{\"1\":{\"624\":1}}],[\"sasignutil\",{\"1\":{\"624\":1}}],[\"sassoutil\",{\"1\":{\"624\":1}}],[\"sastrategy\",{\"1\":{\"624\":4}}],[\"sasession\",{\"1\":{\"624\":1}}],[\"sasl\",{\"1\":{\"199\":1}}],[\"sainterceptor\",{\"1\":{\"617\":1}}],[\"saiph\",{\"1\":{\"567\":1}}],[\"satokenconfig\",{\"1\":{\"624\":1}}],[\"satoken\",{\"1\":{\"616\":1,\"617\":1}}],[\"sa\",{\"0\":{\"623\":1,\"624\":1,\"625\":1},\"1\":{\"608\":2,\"624\":32,\"631\":1}}],[\"saml\",{\"1\":{\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"sameweight\",{\"1\":{\"134\":4,\"229\":2}}],[\"same\",{\"1\":{\"74\":1}}],[\"saas\",{\"1\":{\"452\":1}}],[\"sakila\",{\"1\":{\"308\":1}}],[\"savespringmvcmetadata\",{\"1\":{\"122\":1}}],[\"save\",{\"1\":{\"70\":2}}],[\"s\",{\"1\":{\"74\":2,\"92\":6,\"101\":9,\"105\":1,\"108\":6,\"126\":3,\"144\":1,\"148\":2,\"149\":2,\"167\":3,\"199\":2,\"208\":12,\"209\":2,\"271\":9,\"308\":1,\"406\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"574\":1,\"577\":1}}],[\"scrollbar\",{\"1\":{\"604\":1}}],[\"scripts\",{\"1\":{\"557\":1}}],[\"scriptbean这个注解\",{\"1\":{\"485\":1}}],[\"script\",{\"0\":{\"251\":1},\"1\":{\"249\":1,\"458\":2,\"663\":1}}],[\"scriptargs\",{\"0\":{\"251\":1},\"1\":{\"249\":2,\"251\":1}}],[\"scim\",{\"1\":{\"525\":1,\"526\":2,\"531\":1,\"532\":2,\"537\":1,\"538\":2,\"543\":1,\"544\":2,\"553\":1,\"554\":2,\"563\":1,\"564\":2}}],[\"scope\",{\"1\":{\"357\":2,\"360\":1,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"schema\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"226\":1}}],[\"schedule\",{\"1\":{\"144\":2}}],[\"scheduler\",{\"1\":{\"130\":1,\"144\":7,\"220\":1,\"287\":1}}],[\"scheduledinitdelay\",{\"1\":{\"709\":1}}],[\"scheduledphydeleteddelay\",{\"1\":{\"709\":1}}],[\"scheduledpool\",{\"1\":{\"74\":2}}],[\"scheduledcleandelay\",{\"1\":{\"709\":1}}],[\"scheduledrecoverydelay\",{\"1\":{\"709\":1}}],[\"scheduleddtpexecutor\",{\"1\":{\"409\":1,\"419\":1}}],[\"scheduleddelay\",{\"1\":{\"64\":1,\"74\":3,\"77\":1}}],[\"scheduledtime\",{\"1\":{\"226\":2}}],[\"scheduledthreadpoolexecutor\",{\"1\":{\"226\":1}}],[\"scheduledthreadmax\",{\"1\":{\"64\":1,\"74\":2,\"77\":1,\"709\":1}}],[\"scheduled\",{\"1\":{\"226\":2,\"227\":2}}],[\"scheduledexecutorservice\",{\"1\":{\"144\":1}}],[\"scan\",{\"1\":{\"74\":1,\"608\":1}}],[\"sh1yu\",{\"1\":{\"832\":1}}],[\"shuaiqiyu\",{\"1\":{\"718\":1}}],[\"shutdown\",{\"1\":{\"66\":1}}],[\"showapis\",{\"1\":{\"696\":1}}],[\"show\",{\"0\":{\"686\":1},\"1\":{\"683\":1,\"692\":1,\"707\":1,\"715\":1}}],[\"shell启动脚本错误\",{\"1\":{\"557\":1}}],[\"shell\",{\"1\":{\"331\":1,\"583\":1}}],[\"sheyu\",{\"1\":{\"316\":1}}],[\"sheneyu\",{\"1\":{\"313\":1}}],[\"shenandoah\",{\"1\":{\"84\":3}}],[\"shenyu网关插件\",{\"1\":{\"567\":1}}],[\"shenyu发布了\",{\"1\":{\"312\":1}}],[\"shenyu\",{\"0\":{\"310\":1,\"311\":1},\"1\":{\"16\":1,\"18\":1,\"311\":4,\"312\":1,\"313\":39,\"314\":59,\"315\":79,\"316\":68,\"318\":3,\"445\":1,\"449\":1,\"459\":1}}],[\"shanghai\",{\"1\":{\"814\":1}}],[\"shardingsphere\",{\"1\":{\"716\":1,\"792\":2}}],[\"sharing\",{\"1\":{\"81\":1}}],[\"sha256\",{\"1\":{\"605\":1}}],[\"sha\",{\"1\":{\"515\":1}}],[\"shallwetalk\",{\"1\":{\"308\":1}}],[\"sh\",{\"1\":{\"199\":1,\"458\":1,\"583\":1}}],[\"seinitializer\",{\"1\":{\"760\":1}}],[\"se\",{\"0\":{\"757\":1},\"1\":{\"754\":1,\"757\":2,\"761\":1}}],[\"searcheverywhere\",{\"0\":{\"669\":1},\"1\":{\"663\":1,\"667\":2}}],[\"search分页查询功能\",{\"1\":{\"535\":1}}],[\"search\",{\"1\":{\"461\":1}}],[\"seatunnel\",{\"1\":{\"331\":1}}],[\"sean\",{\"1\":{\"308\":1}}],[\"sealed\",{\"1\":{\"79\":1,\"87\":3,\"89\":4,\"90\":2}}],[\"sessionid\",{\"1\":{\"199\":2}}],[\"sessionkey\",{\"1\":{\"158\":1}}],[\"session\",{\"1\":{\"142\":1,\"158\":39,\"160\":2,\"199\":3,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"567\":1,\"624\":3}}],[\"sessiontimeout=5000\",{\"1\":{\"199\":1}}],[\"sessiontimeout\",{\"1\":{\"64\":1,\"77\":1,\"198\":2}}],[\"sel\",{\"1\":{\"135\":1}}],[\"selectedwrr\",{\"1\":{\"135\":3}}],[\"selectedinvoker\",{\"1\":{\"135\":4}}],[\"select\",{\"1\":{\"126\":1,\"164\":2,\"173\":2,\"229\":1}}],[\"selectormatchcache\",{\"1\":{\"313\":1}}],[\"selectormapper\",{\"1\":{\"92\":2,\"123\":1,\"124\":1,\"125\":1}}],[\"selectorlog\",{\"1\":{\"234\":2}}],[\"selectorparentpath\",{\"1\":{\"142\":2}}],[\"selectors\",{\"1\":{\"129\":3,\"219\":2,\"224\":2,\"234\":3,\"313\":1}}],[\"selectorserviceimpl\",{\"1\":{\"124\":1}}],[\"selectorservice\",{\"1\":{\"123\":2,\"124\":2,\"125\":2,\"200\":1}}],[\"selectortypeenum\",{\"1\":{\"124\":1,\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"selectorid\",{\"1\":{\"122\":2,\"123\":5,\"125\":5,\"126\":5,\"225\":2}}],[\"selector\",{\"0\":{\"123\":1},\"1\":{\"92\":3,\"105\":4,\"108\":24,\"113\":1,\"123\":1,\"124\":2,\"125\":2,\"126\":1,\"127\":3,\"129\":2,\"131\":3,\"141\":1,\"148\":2,\"154\":2,\"155\":1,\"156\":2,\"157\":2,\"161\":1,\"164\":2,\"200\":1,\"201\":1,\"203\":1,\"208\":2,\"219\":2,\"224\":3,\"229\":2,\"235\":3,\"249\":1,\"259\":1,\"266\":1,\"273\":1,\"288\":1,\"313\":2}}],[\"selectorconditionquery\",{\"1\":{\"92\":1}}],[\"selectorconditiondo\",{\"1\":{\"92\":5,\"124\":1}}],[\"selectorconditiondto\",{\"1\":{\"92\":6,\"124\":11}}],[\"selectorconditiondtos\",{\"1\":{\"92\":4,\"124\":3}}],[\"selectorconditionmapper\",{\"1\":{\"92\":3,\"124\":1}}],[\"selectorcount\",{\"1\":{\"92\":4}}],[\"selectordatahandler\",{\"1\":{\"161\":1,\"162\":1}}],[\"selectordatalist\",{\"1\":{\"157\":2,\"200\":2}}],[\"selectordatarefresh\",{\"1\":{\"148\":1}}],[\"selectordata\",{\"1\":{\"123\":4,\"125\":5,\"129\":8,\"131\":1,\"162\":5,\"219\":5,\"224\":6,\"234\":7,\"235\":1,\"249\":1,\"259\":1,\"266\":1,\"273\":1,\"288\":1}}],[\"selectordo\",{\"1\":{\"92\":9,\"123\":7,\"124\":8,\"125\":7}}],[\"selectordto\",{\"1\":{\"92\":5,\"124\":22}}],[\"security\",{\"1\":{\"315\":1,\"357\":2,\"360\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"529\":1,\"608\":1}}],[\"second\",{\"1\":{\"271\":1,\"644\":1}}],[\"seconds\",{\"1\":{\"74\":3,\"101\":1,\"148\":2,\"149\":1,\"208\":1,\"226\":1}}],[\"secretkey=xxx\",{\"1\":{\"624\":1}}],[\"secretkey\",{\"0\":{\"189\":1},\"1\":{\"191\":1,\"208\":2}}],[\"secret\",{\"1\":{\"186\":1,\"624\":1,\"709\":1,\"740\":1,\"759\":1,\"772\":1,\"814\":1}}],[\"sec\",{\"1\":{\"109\":6,\"126\":1}}],[\"see\",{\"1\":{\"101\":1}}],[\"setbasepath\",{\"1\":{\"817\":1}}],[\"setuniconfig\",{\"1\":{\"727\":1}}],[\"setusername\",{\"1\":{\"272\":1,\"324\":1,\"325\":1}}],[\"setuserid\",{\"1\":{\"272\":1}}],[\"setfilename\",{\"1\":{\"817\":1}}],[\"setfields\",{\"1\":{\"723\":1}}],[\"setfailureratethreshold\",{\"1\":{\"271\":1}}],[\"setfallbackuri\",{\"1\":{\"271\":1}}],[\"setobjecttype\",{\"1\":{\"816\":1}}],[\"setobjectid\",{\"1\":{\"816\":1}}],[\"setobjectifabsent\",{\"1\":{\"618\":1}}],[\"setortime\",{\"1\":{\"763\":1}}],[\"setoperator\",{\"1\":{\"124\":1,\"126\":2}}],[\"setel\",{\"1\":{\"517\":2}}],[\"setex\",{\"1\":{\"252\":3}}],[\"setmode\",{\"1\":{\"325\":1}}],[\"setminimumnumberofcalls\",{\"1\":{\"271\":1}}],[\"sethost\",{\"1\":{\"324\":1,\"325\":2}}],[\"sethandle\",{\"1\":{\"123\":2,\"124\":4,\"125\":2}}],[\"setinvoker\",{\"1\":{\"294\":1}}],[\"setinterface\",{\"1\":{\"284\":1}}],[\"setid\",{\"1\":{\"153\":1}}],[\"setattachment\",{\"1\":{\"289\":1,\"293\":1}}],[\"setapplication\",{\"1\":{\"284\":1}}],[\"setaction\",{\"1\":{\"70\":1}}],[\"setgeneric\",{\"1\":{\"284\":1}}],[\"setgrade\",{\"1\":{\"266\":2}}],[\"setname\",{\"1\":{\"282\":1}}],[\"setwaitintervalfunctioninopenstate\",{\"1\":{\"271\":1}}],[\"setweight\",{\"1\":{\"135\":2}}],[\"setchainname\",{\"1\":{\"517\":2}}],[\"setcircuitenable\",{\"1\":{\"271\":1}}],[\"setconfig\",{\"1\":{\"727\":1}}],[\"setcontrolbehavior\",{\"1\":{\"266\":1}}],[\"setcontenttype\",{\"1\":{\"149\":1}}],[\"setcount\",{\"1\":{\"266\":2}}],[\"setcomplete\",{\"1\":{\"259\":1}}],[\"setlimitforperiod\",{\"1\":{\"271\":2}}],[\"setlimitrefreshperiod\",{\"1\":{\"271\":2}}],[\"setlastupdate\",{\"1\":{\"135\":1}}],[\"set<string>\",{\"1\":{\"209\":1}}],[\"set<session>\",{\"1\":{\"158\":1}}],[\"setvalue\",{\"1\":{\"183\":2}}],[\"setthfilename\",{\"1\":{\"817\":1}}],[\"setting\",{\"1\":{\"458\":1}}],[\"settimewindow\",{\"1\":{\"266\":1}}],[\"settimestamp\",{\"1\":{\"227\":1}}],[\"settimeoutduration\",{\"1\":{\"271\":2,\"272\":1}}],[\"settimeoutdurationrate\",{\"1\":{\"271\":1}}],[\"settimeout\",{\"1\":{\"144\":2}}],[\"settargetserviceuniquename\",{\"1\":{\"294\":1}}],[\"settransid\",{\"1\":{\"70\":1}}],[\"setredisconfig\",{\"1\":{\"325\":1}}],[\"setregistry\",{\"1\":{\"284\":1}}],[\"setruleid\",{\"1\":{\"126\":1}}],[\"setruleconditions\",{\"1\":{\"126\":1}}],[\"setrole\",{\"1\":{\"70\":1}}],[\"setplatform\",{\"1\":{\"816\":1,\"817\":1}}],[\"setpluginid\",{\"1\":{\"124\":5}}],[\"setpersistence\",{\"1\":{\"325\":1}}],[\"setpermittednumberofcallsinhalfopenstate\",{\"1\":{\"271\":1}}],[\"setpath\",{\"1\":{\"816\":1,\"817\":1}}],[\"setpassword\",{\"1\":{\"324\":1,\"325\":2}}],[\"setparamvalue\",{\"1\":{\"124\":1}}],[\"setparamname\",{\"1\":{\"124\":1}}],[\"setparamtype\",{\"1\":{\"124\":1}}],[\"setport\",{\"1\":{\"324\":1,\"325\":2}}],[\"setprotocol\",{\"1\":{\"284\":1}}],[\"setserverid\",{\"1\":{\"324\":1,\"325\":1}}],[\"setselectorconditions\",{\"1\":{\"124\":1}}],[\"setselectorid\",{\"1\":{\"92\":2,\"124\":1}}],[\"setslidingwindowtype\",{\"1\":{\"271\":1}}],[\"setslidingwindowsize\",{\"1\":{\"271\":1}}],[\"setstatuscode\",{\"1\":{\"137\":1,\"237\":1,\"249\":1,\"259\":1,\"266\":4,\"273\":1,\"288\":2}}],[\"setstatus\",{\"1\":{\"67\":1,\"227\":2}}],[\"set\",{\"0\":{\"747\":1},\"1\":{\"70\":4,\"81\":1,\"126\":1,\"135\":1,\"158\":7,\"209\":2,\"235\":1,\"278\":10,\"608\":3,\"747\":3}}],[\"setdefaultexceptionhandler\",{\"1\":{\"66\":1}}],[\"serializable\",{\"1\":{\"783\":1}}],[\"serialization\",{\"1\":{\"294\":2}}],[\"serializationcontext\",{\"1\":{\"247\":2}}],[\"serializeenum\",{\"1\":{\"74\":1}}],[\"serializer\",{\"1\":{\"64\":2,\"74\":3,\"77\":1,\"247\":5,\"709\":1,\"713\":1}}],[\"servlet\",{\"1\":{\"664\":3,\"796\":1}}],[\"serverchan\",{\"1\":{\"458\":1}}],[\"serverauthorization\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"serverid\",{\"1\":{\"326\":2}}],[\"serverhttprequest\",{\"1\":{\"232\":1,\"259\":1,\"273\":1}}],[\"serverhttpresponse\",{\"1\":{\"137\":1,\"237\":1,\"259\":1}}],[\"serverendpoint\",{\"1\":{\"158\":2}}],[\"serverendpointexporter\",{\"1\":{\"156\":4}}],[\"serverlist\",{\"1\":{\"148\":6}}],[\"server\",{\"0\":{\"364\":1,\"378\":1,\"379\":1,\"393\":1,\"394\":1,\"400\":1,\"401\":1},\"1\":{\"137\":1,\"144\":2,\"148\":9,\"149\":6,\"199\":4,\"237\":1,\"266\":2,\"272\":1,\"273\":1,\"288\":2,\"351\":2,\"353\":1,\"354\":1,\"357\":10,\"358\":2,\"360\":3,\"364\":8,\"367\":2,\"372\":1,\"373\":1,\"374\":1,\"378\":8,\"382\":2,\"387\":1,\"388\":1,\"389\":1,\"393\":8,\"396\":2,\"397\":1,\"400\":8,\"449\":1,\"459\":1,\"460\":1,\"461\":1,\"557\":1,\"575\":2,\"583\":6,\"585\":2,\"664\":6,\"709\":4}}],[\"serverwebexchange\",{\"1\":{\"129\":1,\"130\":2,\"131\":2,\"136\":3,\"137\":1,\"217\":1,\"220\":2,\"224\":2,\"231\":1,\"232\":1,\"234\":1,\"235\":1,\"236\":3,\"237\":1,\"249\":1,\"259\":3,\"266\":2,\"273\":5,\"287\":2,\"288\":1,\"289\":1,\"290\":1}}],[\"servicecomb\",{\"1\":{\"409\":1,\"419\":1}}],[\"services\",{\"1\":{\"167\":1}}],[\"serviceloaders\",{\"1\":{\"167\":2,\"168\":1}}],[\"serviceloader<driver>\",{\"1\":{\"170\":1}}],[\"serviceloader<>\",{\"1\":{\"167\":1}}],[\"serviceloader<s>\",{\"1\":{\"167\":4}}],[\"serviceloader<animal>\",{\"1\":{\"166\":2,\"167\":2}}],[\"serviceloader<interface>\",{\"1\":{\"165\":1}}],[\"serviceloader\",{\"1\":{\"165\":1,\"166\":3,\"167\":8,\"168\":1,\"170\":1,\"175\":1,\"176\":4,\"177\":2}}],[\"service\",{\"1\":{\"67\":3,\"122\":1,\"137\":4,\"165\":1,\"167\":15,\"200\":5,\"205\":3,\"237\":4,\"266\":2,\"286\":2,\"290\":2,\"314\":2,\"354\":1,\"370\":1,\"374\":2,\"385\":1,\"389\":2,\"702\":1,\"709\":2,\"802\":1}}],[\"sentinelfallbackexception\",{\"1\":{\"266\":3}}],[\"sentinelfallbackhandler\",{\"1\":{\"266\":10}}],[\"sentinelreactortransformer<>\",{\"1\":{\"266\":1}}],[\"sentinelrulehandle\",{\"1\":{\"266\":4}}],[\"sentinelhandle\",{\"1\":{\"266\":19}}],[\"sentinelplugin\",{\"1\":{\"266\":4}}],[\"sentinelurl\",{\"1\":{\"64\":1,\"77\":1}}],[\"sentinel\",{\"1\":{\"64\":1,\"77\":1,\"131\":2,\"261\":3,\"264\":5,\"265\":3,\"266\":15,\"315\":1,\"449\":1}}],[\"sendmessage\",{\"1\":{\"740\":2,\"761\":1,\"770\":1}}],[\"sender\",{\"1\":{\"740\":1}}],[\"sendtext\",{\"1\":{\"158\":2}}],[\"sendresponse\",{\"1\":{\"144\":7}}],[\"send\",{\"1\":{\"57\":1,\"92\":2,\"142\":1,\"144\":1,\"156\":1,\"157\":6,\"158\":5,\"160\":1,\"774\":2}}],[\"stplogic\",{\"1\":{\"624\":3}}],[\"step\",{\"0\":{\"490\":1},\"1\":{\"490\":2}}],[\"stereotype\",{\"1\":{\"66\":1,\"67\":1}}],[\"stulzq\",{\"1\":{\"317\":1}}],[\"styles\",{\"1\":{\"822\":1}}],[\"style\",{\"1\":{\"315\":1,\"604\":1,\"707\":1}}],[\"storage<\",{\"1\":{\"810\":2,\"814\":1}}],[\"storage\",{\"0\":{\"807\":1},\"1\":{\"807\":1,\"808\":6,\"810\":1,\"811\":2,\"812\":4,\"814\":3}}],[\"storedays\",{\"1\":{\"709\":1}}],[\"storedkeys\",{\"1\":{\"191\":2}}],[\"stored\",{\"1\":{\"74\":1}}],[\"store\",{\"1\":{\"57\":2,\"74\":2,\"585\":1,\"822\":2}}],[\"stone\",{\"1\":{\"308\":1,\"619\":1}}],[\"stop\",{\"1\":{\"271\":1}}],[\"stmt\",{\"1\":{\"173\":4}}],[\"stdev\",{\"1\":{\"109\":4}}],[\"strutil\",{\"1\":{\"723\":1}}],[\"strategy\",{\"1\":{\"92\":2,\"156\":1,\"458\":1}}],[\"str\",{\"1\":{\"82\":1,\"458\":1}}],[\"streamutils\",{\"1\":{\"617\":1}}],[\"stream\",{\"1\":{\"79\":1,\"81\":3,\"130\":1,\"191\":2,\"206\":1,\"209\":1,\"220\":1,\"231\":1,\"259\":1,\"266\":4}}],[\"stringredisserializer\",{\"1\":{\"247\":1}}],[\"string>newserializationcontext\",{\"1\":{\"247\":1}}],[\"string>\",{\"1\":{\"149\":1,\"191\":1,\"232\":1,\"247\":2}}],[\"stringbuilder\",{\"1\":{\"148\":2}}],[\"string\",{\"1\":{\"71\":6,\"74\":3,\"122\":5,\"123\":8,\"124\":7,\"125\":8,\"126\":8,\"129\":1,\"131\":2,\"133\":2,\"134\":1,\"135\":3,\"136\":1,\"141\":1,\"142\":3,\"148\":8,\"149\":9,\"153\":4,\"158\":3,\"161\":5,\"162\":2,\"164\":2,\"166\":1,\"167\":4,\"171\":10,\"173\":2,\"176\":1,\"179\":1,\"181\":1,\"183\":10,\"191\":7,\"195\":2,\"200\":4,\"205\":5,\"206\":4,\"209\":3,\"210\":4,\"219\":3,\"224\":4,\"225\":1,\"228\":5,\"229\":3,\"232\":1,\"234\":1,\"235\":3,\"236\":1,\"249\":2,\"259\":1,\"266\":6,\"272\":1,\"273\":1,\"286\":5,\"288\":1,\"289\":3,\"293\":1,\"294\":5,\"324\":1,\"325\":1,\"428\":2,\"430\":1,\"432\":2,\"488\":2,\"624\":1,\"709\":10,\"722\":1,\"740\":2,\"763\":2,\"773\":1,\"783\":2,\"815\":1,\"816\":2}}],[\"stringutils\",{\"1\":{\"71\":2,\"92\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"148\":1,\"153\":4,\"158\":1,\"171\":4,\"183\":3,\"195\":3,\"209\":1,\"228\":3,\"232\":1,\"236\":1,\"259\":1,\"273\":1,\"288\":2,\"289\":2,\"294\":2}}],[\"standalone\",{\"1\":{\"339\":1}}],[\"statintervalms\",{\"1\":{\"265\":1}}],[\"static\",{\"1\":{\"67\":1,\"71\":8,\"81\":1,\"126\":4,\"130\":1,\"141\":2,\"148\":1,\"156\":4,\"158\":3,\"160\":1,\"161\":1,\"164\":1,\"166\":3,\"167\":5,\"170\":6,\"171\":6,\"173\":3,\"176\":3,\"200\":1,\"228\":3,\"229\":1,\"266\":2,\"324\":1,\"325\":1,\"815\":1}}],[\"state`\",{\"1\":{\"406\":1}}],[\"statelesstoken\",{\"1\":{\"315\":1}}],[\"state\",{\"1\":{\"199\":2,\"271\":2,\"741\":1}}],[\"statement\",{\"1\":{\"173\":2}}],[\"statuscallback\",{\"1\":{\"740\":1}}],[\"statuscode\",{\"1\":{\"137\":1,\"236\":1,\"237\":1,\"266\":2}}],[\"status\",{\"1\":{\"125\":1,\"266\":8,\"271\":1,\"273\":5,\"458\":2}}],[\"stats\",{\"1\":{\"109\":2}}],[\"stackoverflowerror\",{\"1\":{\"412\":1}}],[\"stack\",{\"1\":{\"81\":1}}],[\"stable\",{\"1\":{\"79\":1}}],[\"starlight2003\",{\"1\":{\"317\":1}}],[\"stars\",{\"1\":{\"299\":1}}],[\"startwith\",{\"1\":{\"723\":1}}],[\"startup\",{\"1\":{\"458\":1}}],[\"startdatetime\",{\"1\":{\"232\":1}}],[\"startswith\",{\"1\":{\"228\":1,\"259\":1}}],[\"startswithignorecase\",{\"1\":{\"171\":4}}],[\"starting\",{\"1\":{\"199\":3,\"208\":1,\"271\":1}}],[\"startasync\",{\"1\":{\"144\":2}}],[\"starttimer\",{\"1\":{\"130\":1,\"220\":2}}],[\"starter1\",{\"1\":{\"624\":1}}],[\"starter<\",{\"1\":{\"326\":1,\"739\":1}}],[\"starterhmilytransactionhandler\",{\"1\":{\"67\":2}}],[\"starter\",{\"0\":{\"372\":1,\"387\":1},\"1\":{\"67\":1,\"74\":1,\"77\":3,\"103\":1,\"130\":3,\"131\":17,\"161\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":6,\"210\":2,\"217\":1,\"220\":1,\"255\":1,\"270\":1,\"280\":1,\"282\":2,\"316\":1,\"368\":1,\"373\":1,\"388\":1,\"397\":3,\"409\":1,\"419\":1,\"420\":1,\"708\":1,\"709\":1,\"714\":1,\"788\":4,\"789\":4}}],[\"started\",{\"1\":{\"64\":2,\"101\":2,\"148\":1,\"199\":1,\"208\":2}}],[\"start\",{\"0\":{\"77\":1},\"1\":{\"64\":1,\"65\":1,\"66\":3,\"70\":3,\"92\":1,\"148\":3,\"149\":1,\"188\":1,\"198\":1,\"199\":1,\"208\":1,\"210\":3,\"583\":1,\"644\":1,\"741\":2,\"775\":1,\"788\":2,\"789\":4}}],[\"star\",{\"1\":{\"37\":1,\"46\":1,\"56\":3,\"77\":1,\"336\":1,\"340\":1,\"342\":1,\"402\":1,\"415\":1,\"424\":1,\"445\":1,\"449\":1,\"459\":1,\"465\":1,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1,\"703\":1,\"727\":1,\"729\":1,\"736\":1,\"741\":1,\"764\":2,\"766\":1}}],[\"surefire\",{\"1\":{\"616\":1}}],[\"sudarshan\",{\"1\":{\"529\":1}}],[\"sudong\",{\"1\":{\"308\":1}}],[\"supermonkeyc\",{\"1\":{\"317\":1}}],[\"superbenchmarker\",{\"1\":{\"271\":1}}],[\"super\",{\"1\":{\"266\":1}}],[\"supplier\",{\"1\":{\"741\":1,\"772\":1}}],[\"suppliertype\",{\"1\":{\"740\":2,\"761\":1}}],[\"supplierfactory\",{\"0\":{\"747\":1},\"1\":{\"727\":1}}],[\"suppresswarnings\",{\"1\":{\"155\":1,\"157\":1,\"200\":1,\"209\":1}}],[\"support\",{\"1\":{\"57\":5,\"79\":1,\"156\":1,\"208\":3,\"458\":7,\"459\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"suspended\",{\"1\":{\"149\":1}}],[\"subscribe\",{\"1\":{\"206\":1}}],[\"subscribeplugindatachanges\",{\"1\":{\"205\":1}}],[\"subscribechildchanges\",{\"1\":{\"205\":1,\"206\":1}}],[\"subscribedatachanges\",{\"1\":{\"205\":1,\"206\":2}}],[\"subscriberuledatachanges\",{\"1\":{\"206\":2}}],[\"subscribers\",{\"1\":{\"205\":4}}],[\"subscriber\",{\"1\":{\"205\":2}}],[\"subscribeon\",{\"1\":{\"130\":1,\"220\":1,\"287\":1}}],[\"subclass\",{\"1\":{\"183\":3}}],[\"subtype\",{\"1\":{\"167\":1}}],[\"submit\",{\"1\":{\"123\":2,\"124\":1,\"125\":3,\"225\":1}}],[\"success\",{\"1\":{\"92\":1,\"105\":2,\"108\":12,\"122\":1,\"129\":2,\"148\":3,\"153\":2,\"236\":1,\"289\":1,\"290\":5}}],[\"successful\",{\"1\":{\"92\":1,\"101\":1,\"158\":1}}],[\"such\",{\"1\":{\"74\":2}}],[\"suite\",{\"1\":{\"84\":2}}],[\"suffix\",{\"1\":{\"74\":2,\"811\":2}}],[\"summer\",{\"1\":{\"36\":1,\"44\":1,\"49\":1}}],[\"sdk\",{\"0\":{\"731\":1,\"732\":1},\"1\":{\"54\":1,\"314\":1,\"354\":4,\"360\":3,\"368\":2,\"370\":2,\"372\":2,\"373\":2,\"374\":3,\"383\":2,\"385\":2,\"387\":2,\"388\":2,\"389\":3,\"397\":3,\"616\":1,\"727\":6,\"729\":1,\"731\":1,\"732\":1,\"772\":1,\"814\":3}}],[\"spawn\",{\"1\":{\"644\":1}}],[\"spark\",{\"1\":{\"331\":3,\"458\":1}}],[\"spnego\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"spel\",{\"1\":{\"314\":1,\"604\":1,\"608\":1}}],[\"split\",{\"1\":{\"228\":3}}],[\"spring<\",{\"1\":{\"810\":1,\"814\":1}}],[\"springutil\",{\"1\":{\"776\":1}}],[\"springfilestoragetestapplication\",{\"1\":{\"815\":2}}],[\"springfox\",{\"1\":{\"608\":1}}],[\"springframework\",{\"1\":{\"66\":3,\"67\":2,\"208\":8,\"788\":2}}],[\"springkafka\",{\"1\":{\"547\":1}}],[\"springsecurity\",{\"1\":{\"529\":1,\"541\":1,\"547\":1}}],[\"springdata\",{\"1\":{\"547\":1}}],[\"springdataredis\",{\"1\":{\"247\":1}}],[\"springdoc\",{\"1\":{\"354\":1,\"397\":1,\"608\":2,\"616\":1,\"617\":1}}],[\"springmvn\",{\"1\":{\"313\":1}}],[\"springmvcclienteventlistener\",{\"1\":{\"316\":1}}],[\"springmvcclientbeanpostprocessor\",{\"1\":{\"121\":2}}],[\"springmvcregisterdto\",{\"1\":{\"122\":5,\"123\":1,\"125\":1,\"126\":1}}],[\"springmvc\",{\"0\":{\"122\":1},\"1\":{\"121\":1,\"122\":2,\"127\":1,\"150\":1,\"234\":1}}],[\"springmvc<\",{\"1\":{\"103\":1}}],[\"spring4\",{\"1\":{\"220\":1}}],[\"springapplication\",{\"1\":{\"208\":1,\"815\":1}}],[\"springbeanutils\",{\"1\":{\"71\":2,\"158\":1,\"273\":1}}],[\"springbootapplication\",{\"1\":{\"815\":1}}],[\"springboot2\",{\"1\":{\"449\":1,\"612\":1}}],[\"springboot3\",{\"1\":{\"442\":1,\"449\":1,\"482\":1,\"616\":1}}],[\"springboot\",{\"1\":{\"48\":1,\"78\":1,\"200\":1,\"208\":5,\"210\":1,\"217\":2,\"220\":1,\"259\":1,\"313\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"409\":1,\"419\":1,\"420\":2,\"445\":1,\"459\":1,\"529\":1,\"535\":1,\"541\":1,\"547\":2,\"567\":1,\"603\":1,\"608\":2,\"616\":2,\"624\":1,\"763\":1,\"787\":1,\"788\":1,\"792\":1,\"814\":2}}],[\"springcloudalibaba\",{\"1\":{\"547\":1}}],[\"springcloudcache\",{\"1\":{\"314\":1}}],[\"springcloudrulehandle\",{\"1\":{\"126\":1}}],[\"springcloud<\",{\"1\":{\"75\":1,\"77\":1}}],[\"springcloud\",{\"0\":{\"75\":1},\"1\":{\"65\":1,\"77\":1,\"131\":2,\"208\":1,\"278\":1,\"314\":3,\"315\":1,\"316\":4,\"547\":1,\"700\":2,\"701\":1,\"702\":1,\"706\":1,\"709\":1,\"787\":1}}],[\"spring\",{\"0\":{\"77\":1,\"285\":1,\"326\":1,\"364\":1,\"372\":1,\"378\":1,\"379\":1,\"387\":1,\"393\":1,\"394\":1,\"400\":1,\"401\":1,\"701\":1},\"1\":{\"61\":1,\"64\":2,\"65\":2,\"77\":3,\"78\":2,\"92\":2,\"103\":1,\"121\":1,\"122\":2,\"124\":2,\"130\":4,\"131\":20,\"136\":1,\"156\":1,\"160\":1,\"161\":2,\"188\":1,\"198\":1,\"200\":2,\"205\":4,\"208\":6,\"210\":1,\"216\":1,\"217\":1,\"220\":2,\"255\":1,\"260\":2,\"269\":2,\"270\":1,\"276\":1,\"280\":1,\"282\":2,\"314\":2,\"316\":2,\"321\":3,\"326\":2,\"351\":5,\"353\":9,\"354\":2,\"357\":17,\"358\":11,\"360\":4,\"362\":6,\"363\":1,\"364\":12,\"367\":6,\"368\":3,\"370\":2,\"372\":1,\"373\":2,\"374\":2,\"376\":6,\"377\":1,\"378\":12,\"382\":6,\"383\":2,\"385\":2,\"387\":1,\"388\":2,\"389\":2,\"391\":6,\"392\":1,\"393\":12,\"396\":6,\"397\":11,\"399\":6,\"400\":12,\"409\":5,\"419\":5,\"420\":1,\"526\":1,\"529\":2,\"532\":1,\"535\":1,\"538\":1,\"541\":1,\"544\":1,\"547\":2,\"554\":1,\"564\":1,\"567\":1,\"608\":5,\"609\":1,\"616\":1,\"624\":1,\"664\":3,\"692\":1,\"701\":1,\"706\":2,\"707\":2,\"708\":2,\"709\":3,\"712\":3,\"713\":1,\"714\":2,\"739\":1,\"746\":2,\"750\":1,\"755\":1,\"787\":1,\"788\":8,\"789\":4,\"791\":1,\"792\":1,\"797\":3,\"807\":1,\"808\":1,\"811\":1,\"812\":4}}],[\"spi\",{\"0\":{\"165\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"174\":1,\"175\":1},\"1\":{\"30\":2,\"164\":3,\"165\":2,\"166\":2,\"168\":2,\"169\":1,\"170\":3,\"172\":2,\"173\":4,\"174\":7,\"175\":2,\"176\":3,\"177\":1,\"179\":1,\"180\":1,\"183\":5,\"229\":1,\"316\":1,\"409\":4,\"419\":4,\"422\":1,\"707\":3,\"713\":4,\"792\":5}}],[\"solon\",{\"0\":{\"746\":1},\"1\":{\"438\":2,\"746\":3}}],[\"socks即可快速构建\",{\"1\":{\"433\":1}}],[\"socksproxy\",{\"1\":{\"432\":2,\"438\":1}}],[\"socksproxy注解\",{\"1\":{\"432\":1}}],[\"socks\",{\"0\":{\"431\":1,\"432\":1,\"433\":1},\"1\":{\"429\":1,\"431\":2,\"432\":1,\"433\":3,\"438\":1}}],[\"socket\",{\"1\":{\"85\":2,\"199\":2,\"228\":5,\"431\":1}}],[\"social\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"soft\",{\"1\":{\"199\":1}}],[\"sofastack\",{\"1\":{\"442\":1}}],[\"sofarpc\",{\"1\":{\"409\":1,\"419\":1}}],[\"sofarulehandle\",{\"1\":{\"126\":1}}],[\"sofa\",{\"1\":{\"33\":1,\"124\":2,\"126\":1,\"131\":2,\"232\":1,\"314\":2,\"706\":1}}],[\"so\",{\"1\":{\"144\":1}}],[\"sortedmap<long\",{\"1\":{\"133\":1}}],[\"sorted\",{\"1\":{\"130\":1,\"191\":1,\"209\":1,\"220\":1,\"231\":1,\"259\":1}}],[\"sort\",{\"1\":{\"124\":1,\"126\":2,\"259\":3,\"606\":1,\"610\":3}}],[\"soul网关发布2\",{\"0\":{\"787\":1}}],[\"soul网关发布的2\",{\"0\":{\"783\":1}}],[\"soul网关发布1\",{\"0\":{\"777\":1}}],[\"soul网关学习apache\",{\"0\":{\"275\":1}}],[\"soul网关学习admin源码分析\",{\"0\":{\"92\":1}}],[\"soul网关学习resilience4j插件原理解析\",{\"0\":{\"267\":1}}],[\"soul网关学习redirect插件原理解析\",{\"0\":{\"253\":1}}],[\"soul网关学习ratelimiter插件原理解析\",{\"0\":{\"238\":1}}],[\"soul网关学习http请求探险\",{\"0\":{\"231\":1}}],[\"soul网关学习http长轮询解析02\",{\"0\":{\"146\":1}}],[\"soul网关学习http长轮询解析01\",{\"0\":{\"138\":1}}],[\"soul网关学习divide插件源码解读\",{\"0\":{\"222\":1}}],[\"soul网关学习插件链实现\",{\"0\":{\"212\":1}}],[\"soul网关学习插件链与负载均衡解析\",{\"0\":{\"128\":1}}],[\"soul网关学习nacos数据同步\",{\"0\":{\"208\":1}}],[\"soul网关学习zookeeper数据同步02\",{\"0\":{\"202\":1}}],[\"soul网关学习zookeeper数据同步01\",{\"0\":{\"196\":1}}],[\"soul网关学习sentinel插件原理解析\",{\"0\":{\"261\":1}}],[\"soul网关学习sign插件\",{\"0\":{\"184\":1}}],[\"soul网关学习spi学习使用\",{\"0\":{\"164\":1}}],[\"soul网关学习websocket数据同步解析\",{\"0\":{\"150\":1}}],[\"soul网关学习\",{\"0\":{\"93\":1,\"111\":1,\"119\":1,\"120\":1}}],[\"souldubboclient\",{\"1\":{\"282\":2}}],[\"soulbootstrap\",{\"0\":{\"188\":1}}],[\"soulbootstrapapplication\",{\"1\":{\"101\":2,\"208\":4}}],[\"soulwebsocketclient\",{\"1\":{\"161\":3,\"162\":1}}],[\"soulwebhandle\",{\"1\":{\"130\":1}}],[\"soulwebhandler\",{\"1\":{\"130\":8,\"220\":14,\"221\":2,\"231\":3,\"259\":5,\"287\":1}}],[\"souladmin\",{\"1\":{\"195\":1}}],[\"souladminresult\",{\"1\":{\"153\":4}}],[\"souladminbootstrap\",{\"1\":{\"100\":1}}],[\"soulthreadfactory\",{\"1\":{\"148\":1,\"226\":1}}],[\"soulresultwrap\",{\"1\":{\"235\":2,\"236\":1,\"237\":2,\"249\":1,\"266\":3,\"288\":2,\"290\":2}}],[\"soulresultwarp\",{\"1\":{\"137\":2}}],[\"soulresultenum\",{\"1\":{\"137\":4,\"195\":1,\"235\":4,\"236\":2,\"237\":4,\"249\":2,\"266\":6,\"288\":4,\"290\":4}}],[\"soulresultmessage\",{\"1\":{\"122\":1,\"153\":1}}],[\"soulcontext\",{\"0\":{\"232\":1},\"1\":{\"131\":3,\"195\":12,\"219\":3,\"224\":1,\"232\":8,\"235\":4,\"236\":3,\"237\":1,\"266\":3,\"273\":3,\"288\":4}}],[\"soulconfiguration\",{\"1\":{\"130\":1,\"208\":2,\"220\":3,\"221\":1}}],[\"soulclientregisterserviceimpl\",{\"1\":{\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":2}}],[\"soulclientregisterservice\",{\"1\":{\"122\":1}}],[\"soulclientcontroller\",{\"1\":{\"122\":2}}],[\"soulplugins\",{\"1\":{\"130\":3,\"220\":3,\"231\":2,\"259\":3}}],[\"soulpluginchain\",{\"0\":{\"130\":1},\"1\":{\"129\":1,\"130\":3,\"131\":1,\"136\":3,\"137\":1,\"219\":1,\"220\":2,\"224\":2,\"232\":1,\"234\":1,\"235\":1,\"236\":3,\"237\":1,\"249\":1,\"259\":1,\"266\":1,\"273\":3,\"288\":1,\"290\":1}}],[\"soulplugin\",{\"1\":{\"128\":1,\"130\":7,\"131\":1,\"136\":1,\"219\":4,\"220\":5,\"231\":4,\"234\":2,\"259\":4,\"287\":1}}],[\"soulexception\",{\"1\":{\"126\":1,\"148\":3,\"149\":1,\"289\":3}}],[\"soulspringmvcconfig\",{\"1\":{\"121\":7}}],[\"soulspringmvcclient\",{\"1\":{\"103\":1}}],[\"soul源码01期阅读分享会01\",{\"0\":{\"31\":1}}],[\"soul\",{\"0\":{\"28\":1,\"29\":1,\"32\":1,\"95\":2,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"124\":1,\"125\":1,\"158\":1,\"174\":1,\"197\":2,\"200\":1,\"204\":1,\"205\":1,\"206\":1,\"209\":1,\"210\":1,\"217\":1,\"218\":1,\"270\":1,\"280\":1,\"281\":1,\"287\":1,\"778\":1,\"790\":1,\"791\":1},\"1\":{\"30\":5,\"33\":2,\"92\":15,\"93\":4,\"96\":1,\"100\":3,\"101\":4,\"102\":1,\"103\":4,\"105\":2,\"108\":12,\"109\":2,\"110\":1,\"112\":4,\"113\":3,\"116\":2,\"121\":6,\"122\":1,\"125\":4,\"126\":2,\"127\":6,\"130\":4,\"131\":37,\"132\":1,\"133\":1,\"140\":3,\"141\":1,\"148\":1,\"150\":13,\"152\":1,\"156\":6,\"158\":1,\"160\":3,\"161\":6,\"162\":1,\"163\":4,\"174\":2,\"175\":1,\"176\":5,\"179\":1,\"183\":1,\"188\":2,\"198\":8,\"199\":4,\"200\":9,\"201\":2,\"203\":4,\"204\":2,\"205\":6,\"206\":6,\"208\":47,\"209\":3,\"210\":8,\"213\":3,\"217\":4,\"218\":1,\"219\":3,\"220\":6,\"221\":2,\"226\":4,\"229\":1,\"230\":1,\"231\":7,\"232\":1,\"236\":1,\"237\":1,\"239\":2,\"243\":3,\"244\":1,\"251\":1,\"253\":1,\"254\":3,\"255\":1,\"257\":1,\"259\":2,\"261\":4,\"264\":5,\"265\":3,\"266\":13,\"268\":1,\"270\":7,\"272\":1,\"273\":2,\"274\":1,\"276\":2,\"281\":1,\"282\":4,\"289\":1,\"781\":1,\"782\":4,\"783\":14,\"784\":2,\"786\":4,\"787\":2,\"788\":9,\"789\":13,\"790\":5,\"791\":5,\"792\":4}}],[\"source=\",{\"1\":{\"520\":1}}],[\"source\",{\"1\":{\"15\":2,\"515\":1}}],[\"会越来越笨重\",{\"1\":{\"791\":1}}],[\"会同步到每个\",{\"1\":{\"790\":1}}],[\"会不会吐槽你\",{\"1\":{\"783\":1}}],[\"会不在一个线程里\",{\"1\":{\"71\":1}}],[\"会优先接入新用户量相对较大的\",{\"1\":{\"762\":1}}],[\"会发布hmily\",{\"1\":{\"717\":1}}],[\"会发布最新架构的\",{\"1\":{\"716\":1}}],[\"会发布事件\",{\"1\":{\"206\":1}}],[\"会出现\",{\"1\":{\"624\":1}}],[\"会出现平仓异常\",{\"1\":{\"598\":1}}],[\"会出个番外讨论一二\",{\"1\":{\"145\":1}}],[\"会有的\",{\"0\":{\"595\":1}}],[\"会有一个\",{\"1\":{\"234\":1}}],[\"会有一个定时任务来进行回滚\",{\"1\":{\"62\":1}}],[\"会每\",{\"1\":{\"515\":1}}],[\"会从\",{\"1\":{\"501\":1}}],[\"会一直像树叶那样进行光合作用\",{\"1\":{\"499\":1}}],[\"会一直是一个长期维护\",{\"1\":{\"469\":1}}],[\"会带来超多的新增特性\",{\"1\":{\"493\":1}}],[\"会很方便\",{\"1\":{\"474\":1}}],[\"会往以下几个方向进行深度拓展\",{\"1\":{\"469\":1}}],[\"会吸引到更多的用户和贡献者使用反馈大家一起迭代\",{\"1\":{\"456\":1}}],[\"会删除主线程\",{\"1\":{\"421\":1}}],[\"会提交到框架的自定义线程池中执行\",{\"1\":{\"406\":1}}],[\"会抛出大量\",{\"1\":{\"374\":1,\"389\":1}}],[\"会将\",{\"1\":{\"325\":1}}],[\"会被分配\",{\"1\":{\"301\":1}}],[\"会被邀请加入\",{\"1\":{\"301\":1}}],[\"会把这张表的数据同步到网关的\",{\"1\":{\"278\":1}}],[\"会控制每\",{\"1\":{\"266\":1}}],[\"会非常消耗性能\",{\"1\":{\"251\":1}}],[\"会执行\",{\"1\":{\"200\":1,\"209\":2}}],[\"会实读取\",{\"1\":{\"200\":1}}],[\"会返回一个\",{\"1\":{\"176\":1}}],[\"会导致每次获取具体实现类都要反射出类对象以及初始化实例对象\",{\"1\":{\"175\":1}}],[\"会导致下次的监听延后\",{\"1\":{\"149\":1}}],[\"会自动按实际执行的顺序进行逆操作\",{\"1\":{\"506\":1}}],[\"会自动帮你记录执行的顺序\",{\"1\":{\"506\":1}}],[\"会自动重定向到新的域名上\",{\"1\":{\"500\":1}}],[\"会自动加载\",{\"1\":{\"173\":1}}],[\"会自主创建自身对象并注入到\",{\"1\":{\"172\":1}}],[\"会继续下个\",{\"1\":{\"172\":1}}],[\"会加载\",{\"1\":{\"172\":1}}],[\"会匹配\",{\"1\":{\"171\":1}}],[\"会根据你的\",{\"1\":{\"278\":1}}],[\"会根据传入的\",{\"1\":{\"171\":1}}],[\"会根据后台集群开启线程轮询监听\",{\"1\":{\"148\":1}}],[\"会话\",{\"1\":{\"160\":1,\"624\":1}}],[\"会话把信息亲自送过去\",{\"1\":{\"142\":1}}],[\"会先判断\",{\"1\":{\"158\":1}}],[\"会先进行日志的异步保存\",{\"1\":{\"64\":1}}],[\"会连接这个\",{\"1\":{\"158\":1}}],[\"会进到类中对应的方法\",{\"1\":{\"157\":1}}],[\"会进到这里\",{\"1\":{\"125\":1}}],[\"会在容器加载完成后调用这个覆写方法\",{\"1\":{\"156\":1}}],[\"会通过\",{\"1\":{\"150\":1}}],[\"会怎么实现\",{\"1\":{\"143\":1}}],[\"会走到\",{\"1\":{\"136\":1}}],[\"会减少其他节点的权重分之和\",{\"1\":{\"135\":1}}],[\"会持续以自身为基数自增\",{\"1\":{\"135\":1}}],[\"会直接使用默认值\",{\"1\":{\"274\":1}}],[\"会直接赋值默认值\",{\"1\":{\"271\":1}}],[\"会直接走入下个插件\",{\"1\":{\"129\":1}}],[\"会直接跳到下个插件\",{\"1\":{\"129\":1}}],[\"会到这里\",{\"1\":{\"125\":1}}],[\"会打印匹配日志\",{\"1\":{\"114\":1}}],[\"会另外再写一遍文章\",{\"1\":{\"92\":1}}],[\"会去执行下面这些相关的方法\",{\"1\":{\"92\":1}}],[\"会去查询日志返回\",{\"1\":{\"71\":1}}],[\"会造成所有其他的模块使用不了\",{\"1\":{\"791\":1}}],[\"会造成\",{\"1\":{\"71\":1}}],[\"会形成调用链\",{\"1\":{\"70\":1}}],[\"会要求你配置的\",{\"1\":{\"69\":1}}],[\"会调用后台提供的接口拉取数据\",{\"1\":{\"148\":1}}],[\"会调用到下一个插件\",{\"1\":{\"130\":1}}],[\"会调用\",{\"1\":{\"62\":1,\"92\":1,\"121\":1,\"150\":1,\"162\":3}}],[\"会\",{\"1\":{\"43\":1}}],[\"会上众多\",{\"1\":{\"16\":1}}],[\"会议在酒店3\",{\"1\":{\"12\":1}}],[\"在设计之初就是来干这种事情的\",{\"1\":{\"784\":1,\"791\":1}}],[\"在运用\",{\"1\":{\"783\":1}}],[\"在运行复杂的嵌套\",{\"1\":{\"521\":1}}],[\"在集群环境下\",{\"1\":{\"783\":1}}],[\"在集群部署情况下单机的令牌桶算法无法满足集群状态下的限流功能\",{\"1\":{\"243\":1}}],[\"在插件表新增\",{\"1\":{\"781\":1}}],[\"在插件数据过来时\",{\"1\":{\"247\":1}}],[\"在配置中定义的configid\",{\"1\":{\"770\":1,\"773\":1}}],[\"在配置文件中写上对应的配置即可\",{\"1\":{\"156\":1}}],[\"在历经了数月的等待之后\",{\"1\":{\"768\":1}}],[\"在仓库的\",{\"1\":{\"762\":1}}],[\"在发部了这么多版本之后\",{\"1\":{\"757\":1}}],[\"在拖延了\",{\"1\":{\"753\":1}}],[\"在先前的版本中默认的适用了\",{\"1\":{\"763\":1}}],[\"在先前的版本中\",{\"1\":{\"750\":1}}],[\"在先前的版本中我们发现\",{\"1\":{\"750\":1}}],[\"在实际的实用中可以同时支持更多的厂商\",{\"1\":{\"740\":1}}],[\"在实现这部分功能时使用了不同的成熟组件\",{\"1\":{\"261\":1}}],[\"在新的版本中统一改为了\",{\"1\":{\"739\":1}}],[\"在新版\",{\"1\":{\"709\":1}}],[\"在新版本中\",{\"1\":{\"504\":1,\"745\":1}}],[\"在经过了有奖名称征集之后\",{\"1\":{\"738\":1}}],[\"在易用性上提供零侵入性式的\",{\"1\":{\"712\":1}}],[\"在下一个版本\",{\"1\":{\"710\":1}}],[\"在其他模式的支持上将会变得更加容易\",{\"1\":{\"710\":1}}],[\"在事务日志存储上\",{\"1\":{\"708\":1}}],[\"在目标上\",{\"1\":{\"707\":1}}],[\"在代码质量上\",{\"1\":{\"707\":1}}],[\"在依赖包版本上\",{\"1\":{\"707\":1}}],[\"在模块划分上\",{\"1\":{\"707\":1}}],[\"在模式三拉取数据时可以传递任意参数\",{\"1\":{\"624\":1}}],[\"在调用时会偶发性出现签名校验失败的问题\",{\"1\":{\"736\":1}}],[\"在调用方的\",{\"1\":{\"702\":1}}],[\"在调用后我们得到之前在资源文件中写入的实现类\",{\"1\":{\"166\":1}}],[\"在未来继续发展壮大\",{\"1\":{\"633\":1}}],[\"在公司内落地为研发团队提供了强大支持\",{\"1\":{\"633\":1}}],[\"在低版本\",{\"1\":{\"624\":1}}],[\"在所有\",{\"1\":{\"624\":1}}],[\"在登录时强制性检查账号\",{\"1\":{\"624\":1}}],[\"在登录时增加判断当前\",{\"1\":{\"624\":1}}],[\"在全局异常拦截器中增加两类异常处理\",{\"1\":{\"617\":1}}],[\"在全局代理模式下只会注册一个选择器\",{\"1\":{\"234\":1}}],[\"在初始化类时进行数据的处理\",{\"1\":{\"617\":1}}],[\"在初始化后会将对象放入缓存中\",{\"1\":{\"167\":1}}],[\"在策略层\",{\"1\":{\"593\":1}}],[\"在开放性上\",{\"1\":{\"707\":1}}],[\"在开发完一个策略后\",{\"1\":{\"591\":1}}],[\"在开源之夏\",{\"1\":{\"36\":2}}],[\"在线字体文件\",{\"1\":{\"822\":1}}],[\"在线设计\",{\"1\":{\"820\":1}}],[\"在线构建器\",{\"1\":{\"609\":1}}],[\"在线日志\",{\"1\":{\"609\":1}}],[\"在线用户管理\",{\"1\":{\"609\":1}}],[\"在线用户\",{\"1\":{\"604\":1}}],[\"在线状态为在线\",{\"1\":{\"585\":1}}],[\"在线文档\",{\"1\":{\"831\":1}}],[\"在线文档数据库初始化内容也同步更新\",{\"1\":{\"397\":1}}],[\"在线文档和源代码来了解各个\",{\"1\":{\"372\":1,\"387\":1}}],[\"在本次的版本中添加了一个实验性的新特性\",{\"1\":{\"748\":1}}],[\"在本次更新中\",{\"1\":{\"727\":2}}],[\"在本地neutrino\",{\"1\":{\"585\":1}}],[\"在本期\",{\"1\":{\"52\":1}}],[\"在服务器上新建部署目录\",{\"1\":{\"583\":1}}],[\"在服务器上创建目录\",{\"1\":{\"582\":1}}],[\"在该目录下创建app\",{\"1\":{\"582\":1}}],[\"在该模式下阈值指的是单位统计时间内异常请求个数的上限\",{\"1\":{\"265\":1}}],[\"在拥有\",{\"1\":{\"514\":1}}],[\"在自动化测试领域取得更加出色的成就\",{\"1\":{\"635\":1}}],[\"在自动执行完回滚操作后\",{\"1\":{\"506\":1}}],[\"在自己服务中增加一个对外访问的方法\",{\"1\":{\"191\":1}}],[\"在各大企业中用的比较多\",{\"1\":{\"503\":1}}],[\"在isaccess中进行setisend\",{\"1\":{\"476\":1}}],[\"在今年夏天也参加了中国科学院软件研究所发起的开源软件供应链点亮计划\",{\"1\":{\"469\":1}}],[\"在生态中互通有无\",{\"1\":{\"456\":1}}],[\"在社区中\",{\"1\":{\"714\":1}}],[\"在社区中有同学反应\",{\"1\":{\"489\":1}}],[\"在社区群里\",{\"1\":{\"485\":1}}],[\"在社区的驱动下使开源项目越来越好\",{\"1\":{\"456\":1}}],[\"在社区驱动的模式下\",{\"1\":{\"335\":1}}],[\"在以上仅仅只是示例\",{\"1\":{\"740\":1}}],[\"在以前的版本中\",{\"1\":{\"779\":1}}],[\"在以前的\",{\"1\":{\"504\":1}}],[\"在以前版本也可以实现\",{\"1\":{\"431\":1}}],[\"在以往的方案中我们需要在每个网络都部署一套监控系统\",{\"1\":{\"455\":1}}],[\"在多个网络不相通的隔离网络中\",{\"1\":{\"455\":1}}],[\"在暂停时任务会接收到一个中断信号\",{\"1\":{\"406\":1}}],[\"在执行\",{\"1\":{\"521\":1}}],[\"在执行时我们可以使用分批次方式\",{\"1\":{\"406\":1}}],[\"在执行完成\",{\"1\":{\"233\":1}}],[\"在执行完\",{\"1\":{\"131\":1,\"232\":1}}],[\"在国内多个一线大厂待过\",{\"1\":{\"404\":1}}],[\"在用技术老旧\",{\"1\":{\"396\":1}}],[\"在满足直传需求的前提下\",{\"1\":{\"374\":1,\"389\":1}}],[\"在非严格模式下\",{\"1\":{\"368\":1}}],[\"在严格模式下\",{\"1\":{\"368\":1}}],[\"在行业变革的时期\",{\"1\":{\"352\":1}}],[\"在浏览器中访问\",{\"1\":{\"333\":1}}],[\"在不指定泛型的情况下\",{\"1\":{\"328\":1}}],[\"在不违反法律\",{\"1\":{\"306\":1}}],[\"在试运行期内\",{\"1\":{\"306\":1}}],[\"在组织层面做出决策以后\",{\"1\":{\"306\":1}}],[\"在数据库中\",{\"1\":{\"278\":1}}],[\"在半开状态如果请求正常则会进入正常状态如果请求依然不正常则继续熔断\",{\"1\":{\"265\":1}}],[\"在一定时间内逐渐增加阈值直至达到设置\",{\"1\":{\"263\":1}}],[\"在考虑流量控制的策略时\",{\"1\":{\"263\":1}}],[\"在业务网关中熔断和流量控制都是非常必要的功能\",{\"1\":{\"261\":1}}],[\"在解析\",{\"1\":{\"259\":1}}],[\"在获取令牌时实时计算令牌数量\",{\"1\":{\"251\":1}}],[\"在修改插件的配置时\",{\"1\":{\"247\":1}}],[\"在之前打下的基础上\",{\"1\":{\"469\":1}}],[\"在之前梳理soul\",{\"1\":{\"247\":1}}],[\"在之前的版本中\",{\"1\":{\"709\":1,\"727\":1}}],[\"在之前的迭代版本中\",{\"1\":{\"469\":1}}],[\"在之前的\",{\"1\":{\"239\":1}}],[\"在之前分析\",{\"1\":{\"164\":1}}],[\"在流程中需要还需要看一个donext\",{\"1\":{\"236\":1}}],[\"在使用上\",{\"1\":{\"709\":1}}],[\"在使用的过程中\",{\"1\":{\"475\":1}}],[\"在使用\",{\"1\":{\"234\":1,\"266\":1}}],[\"在defaultsoulpluginchain\",{\"1\":{\"231\":1}}],[\"在刚才的回顾中我们已经明白\",{\"1\":{\"231\":1}}],[\"在梳理流程中\",{\"1\":{\"239\":1}}],[\"在梳理请求的相关文章中我们目前只需要重点关注\",{\"1\":{\"231\":1}}],[\"在梳理文章中可以看到核心类是soulplugin\",{\"1\":{\"231\":1}}],[\"在此非常感谢\",{\"1\":{\"652\":1}}],[\"在此刻发布了根网科技内测初版\",{\"1\":{\"633\":1}}],[\"在此模式下阈值指的是单位统计时长内异常请求的比例上限\",{\"1\":{\"265\":1}}],[\"在此模式下阈值指的是判定为慢调用的毫秒数\",{\"1\":{\"265\":1}}],[\"在此处添加的容量及速率都为\",{\"1\":{\"244\":1}}],[\"在此处完成初始化\",{\"1\":{\"220\":1}}],[\"在此创建并开始插件链的处理\",{\"1\":{\"220\":1}}],[\"在探究插件链之前\",{\"1\":{\"218\":1}}],[\"在探究插件化设计之前\",{\"1\":{\"213\":1}}],[\"在容器启动阶段\",{\"1\":{\"217\":1}}],[\"在容器中获取所有类型是\",{\"1\":{\"209\":1}}],[\"在通过\",{\"1\":{\"209\":1}}],[\"在项目neutrino\",{\"1\":{\"575\":1}}],[\"在项目启动后会遍历所有实现\",{\"1\":{\"200\":1}}],[\"在项目中搜索这个接口\",{\"1\":{\"153\":1}}],[\"在网关后台尝试更改\",{\"1\":{\"204\":1}}],[\"在网关中增加鉴权头信息\",{\"0\":{\"192\":1}}],[\"在网管协议\",{\"1\":{\"54\":1}}],[\"在研究它之前\",{\"1\":{\"164\":1}}],[\"在接口的方法实现上则需要添加\",{\"1\":{\"709\":1}}],[\"在接到后台通信后\",{\"1\":{\"162\":1}}],[\"在接收到后台传来的信息后会通知各个订阅器\",{\"1\":{\"161\":1}}],[\"在最后\",{\"1\":{\"150\":1}}],[\"在最后会经由\",{\"1\":{\"149\":1}}],[\"在后台端会劫持住请求\",{\"1\":{\"149\":1}}],[\"在后台保存或者更新数据之后\",{\"1\":{\"92\":1}}],[\"在阻塞队列中遍历所有被\",{\"1\":{\"145\":1}}],[\"在另一个线程中工作\",{\"1\":{\"136\":1}}],[\"在缓存中得到服务节点集群\",{\"1\":{\"131\":1}}],[\"在启动类上加上\",{\"1\":{\"815\":1}}],[\"在启动时候将接口的名称\",{\"1\":{\"282\":1}}],[\"在启动\",{\"1\":{\"110\":1}}],[\"在soul\",{\"1\":{\"105\":1,\"108\":1}}],[\"在左下角这个地方\",{\"1\":{\"92\":1}}],[\"在保存到数据库之后都有一个\",{\"1\":{\"92\":1}}],[\"在上述代码中可以看出是通过redisratelimiter\",{\"1\":{\"249\":1}}],[\"在上述代码中将限流插件的配置和对应的\",{\"1\":{\"247\":1}}],[\"在上述的主题逻辑中我们没有看到参数在哪里\",{\"1\":{\"235\":1}}],[\"在上述的流程图中并没有细化到具体的方法级别的处理\",{\"1\":{\"234\":1}}],[\"在上文中我们还提到了路由规则的选择loadbalanceutils\",{\"1\":{\"237\":1}}],[\"在上两个模块中分析\",{\"1\":{\"175\":1}}],[\"在上篇分析\",{\"1\":{\"140\":1}}],[\"在上篇的演示中\",{\"1\":{\"92\":1}}],[\"在上一篇中\",{\"1\":{\"92\":1}}],[\"在上图可以看到这里是访问\",{\"1\":{\"92\":1}}],[\"在分析源码之前\",{\"1\":{\"92\":1}}],[\"在这一个版本中\",{\"1\":{\"704\":1}}],[\"在这个版本中我们对此进行了修复\",{\"1\":{\"750\":1}}],[\"在这个版本改头换面\",{\"1\":{\"498\":1}}],[\"在这个时间点\",{\"1\":{\"717\":1}}],[\"在这个充满感激之情的阶段\",{\"1\":{\"633\":1}}],[\"在这个成长的过程中\",{\"1\":{\"633\":1}}],[\"在这个配置页面中\",{\"1\":{\"264\":1}}],[\"在这个方法里\",{\"1\":{\"236\":1}}],[\"在这些领域的应用和发展也将会是未来的趋势\",{\"1\":{\"91\":1}}],[\"在这些领域的应用也越来越广泛\",{\"1\":{\"91\":1}}],[\"在这里感谢大家对于我们的支持\",{\"1\":{\"762\":1}}],[\"在这里也感谢\",{\"1\":{\"746\":1}}],[\"在这里细讲也讲不出个啥来\",{\"1\":{\"252\":1}}],[\"在这里插入图片描述\",{\"1\":{\"200\":4,\"204\":4,\"205\":1,\"206\":2,\"207\":1,\"208\":8,\"209\":4,\"210\":2,\"211\":1}}],[\"在这里就是\",{\"1\":{\"125\":1}}],[\"在这里\",{\"1\":{\"66\":1,\"727\":1}}],[\"在你的服务提供者项目引入\",{\"1\":{\"74\":1}}],[\"在你的\",{\"1\":{\"74\":1,\"788\":1}}],[\"在参与者中\",{\"1\":{\"71\":1}}],[\"在参加开源中国年度受欢迎投票\",{\"1\":{\"60\":1}}],[\"在框架启动的时候\",{\"1\":{\"69\":1}}],[\"在我们的压测中\",{\"1\":{\"64\":1}}],[\"在我们测试中表现为\",{\"1\":{\"64\":1}}],[\"在恢复的时候\",{\"1\":{\"63\":1}}],[\"在\",{\"0\":{\"188\":1,\"326\":1,\"702\":1},\"1\":{\"61\":1,\"64\":2,\"68\":1,\"81\":1,\"103\":1,\"142\":1,\"144\":1,\"158\":1,\"167\":1,\"169\":1,\"174\":1,\"200\":2,\"231\":1,\"232\":5,\"234\":1,\"236\":1,\"239\":1,\"243\":1,\"244\":1,\"254\":3,\"255\":1,\"264\":1,\"266\":1,\"270\":2,\"302\":1,\"313\":2,\"314\":1,\"315\":1,\"326\":1,\"331\":1,\"357\":2,\"364\":3,\"378\":3,\"393\":3,\"400\":3,\"482\":1,\"484\":1,\"485\":1,\"486\":1,\"491\":1,\"500\":1,\"519\":1,\"521\":1,\"598\":1,\"606\":1,\"624\":1,\"628\":1,\"678\":1,\"686\":1,\"709\":2,\"740\":1,\"750\":2,\"770\":1,\"771\":1,\"779\":1,\"789\":1,\"790\":1,\"803\":1}}],[\"在第\",{\"1\":{\"60\":1,\"150\":1}}],[\"在东莞圆满落幕\",{\"1\":{\"16\":1}}],[\"在大会展厅\",{\"1\":{\"15\":1}}],[\"|client\",{\"1\":{\"286\":1}}],[\"|genericfilter\",{\"1\":{\"286\":2}}],[\"|genericimplfilter\",{\"1\":{\"286\":2}}],[\"||\",{\"1\":{\"137\":2,\"167\":1,\"195\":2,\"232\":1,\"237\":2,\"247\":2,\"259\":1,\"266\":1,\"273\":1,\"289\":1,\"293\":1,\"294\":3}}],[\"|\",{\"0\":{\"16\":1,\"34\":1,\"51\":1,\"370\":1,\"371\":1,\"385\":1,\"386\":1},\"1\":{\"126\":1,\"183\":1,\"286\":114,\"440\":2,\"447\":2,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"803\":36}}],[\"cdr\",{\"1\":{\"829\":1}}],[\"cj\",{\"1\":{\"741\":1}}],[\"csvreadconfig\",{\"1\":{\"723\":1}}],[\"cszj\",{\"1\":{\"308\":1}}],[\"cts\",{\"1\":{\"633\":2}}],[\"ctor\",{\"1\":{\"271\":9}}],[\"cmp\",{\"1\":{\"488\":4}}],[\"cmpaspect\",{\"1\":{\"488\":2}}],[\"cpu\",{\"1\":{\"406\":3,\"609\":2,\"720\":1,\"787\":1}}],[\"cve\",{\"1\":{\"354\":2,\"397\":2}}],[\"centos\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"center\",{\"1\":{\"313\":1,\"314\":1,\"315\":1}}],[\"ceilzcx\",{\"1\":{\"317\":1,\"458\":4,\"461\":2}}],[\"certificate\",{\"1\":{\"449\":1,\"459\":1}}],[\"cert\",{\"1\":{\"313\":1}}],[\"cycle\",{\"1\":{\"308\":1}}],[\"ciscoswitch\",{\"1\":{\"449\":1}}],[\"cisco\",{\"1\":{\"445\":1,\"459\":1}}],[\"ci\",{\"1\":{\"278\":10,\"714\":1}}],[\"circuit\",{\"1\":{\"271\":1}}],[\"circuitenable配置\",{\"1\":{\"273\":1}}],[\"circuitenable\",{\"1\":{\"270\":1}}],[\"circuitbreakeroperator\",{\"1\":{\"273\":1}}],[\"circuitbreakerstatuscodeexception\",{\"1\":{\"273\":1}}],[\"circuitbreaker<\",{\"1\":{\"269\":1}}],[\"circuitbreaker\",{\"1\":{\"269\":1,\"273\":5}}],[\"cglib\",{\"1\":{\"208\":1}}],[\"cglib$nacossyncdataservice$0\",{\"1\":{\"208\":1}}],[\"c11b7e26bc554b8523dc929761dd28808913f091\",{\"1\":{\"199\":1}}],[\"cfg\",{\"1\":{\"199\":1}}],[\"child\",{\"1\":{\"637\":1}}],[\"childjobpool\",{\"1\":{\"637\":1}}],[\"childjob\",{\"1\":{\"637\":1}}],[\"children\",{\"1\":{\"617\":1}}],[\"childrenlist\",{\"1\":{\"206\":1}}],[\"chung\",{\"1\":{\"615\":1}}],[\"chunhui\",{\"1\":{\"420\":1}}],[\"choose\",{\"1\":{\"458\":1}}],[\"chovi\",{\"1\":{\"308\":1}}],[\"cherryrum\",{\"1\":{\"720\":1}}],[\"cheap\",{\"1\":{\"707\":1,\"715\":1}}],[\"chenxiangxxxxx\",{\"1\":{\"458\":2}}],[\"chenan\",{\"1\":{\"421\":1}}],[\"check=\",{\"1\":{\"702\":1}}],[\"checkobj\",{\"1\":{\"628\":1}}],[\"checkrequest\",{\"1\":{\"624\":1}}],[\"checkrule\",{\"1\":{\"129\":2}}],[\"checkstyle\",{\"1\":{\"715\":1,\"792\":1}}],[\"checksign\",{\"1\":{\"624\":1}}],[\"checkselector\",{\"1\":{\"129\":2}}],[\"checkmetadata\",{\"1\":{\"288\":1}}],[\"checkip\",{\"1\":{\"228\":1}}],[\"checkurl\",{\"1\":{\"227\":1,\"228\":2}}],[\"checkutils\",{\"1\":{\"129\":4}}],[\"check\",{\"1\":{\"226\":4,\"227\":3,\"271\":1,\"315\":2,\"628\":1,\"707\":1}}],[\"checkdata\",{\"1\":{\"153\":1,\"266\":2,\"271\":1,\"272\":1,\"273\":1}}],[\"checkpoint\",{\"1\":{\"136\":1,\"405\":1,\"406\":1}}],[\"chris\",{\"1\":{\"308\":3}}],[\"chasen\",{\"1\":{\"308\":1}}],[\"charsequence\",{\"1\":{\"722\":1}}],[\"charts\",{\"1\":{\"461\":1}}],[\"charlyfeng\",{\"1\":{\"308\":1}}],[\"characterencoding=utf\",{\"1\":{\"582\":1,\"788\":1}}],[\"characterencoding=utf8\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"709\":1}}],[\"character\",{\"1\":{\"278\":10}}],[\"chain3\",{\"1\":{\"505\":1}}],[\"chain2\",{\"1\":{\"505\":1}}],[\"chain>\",{\"1\":{\"504\":5,\"505\":3,\"516\":2,\"518\":5,\"519\":1}}],[\"chainname\",{\"1\":{\"492\":1}}],[\"chain1\",{\"1\":{\"474\":1,\"504\":3,\"505\":1,\"516\":2,\"517\":2,\"519\":1}}],[\"chain\",{\"1\":{\"129\":9,\"131\":2,\"136\":6,\"137\":2,\"219\":3,\"224\":5,\"232\":2,\"234\":7,\"235\":2,\"236\":6,\"237\":2,\"249\":2,\"259\":2,\"266\":2,\"273\":8,\"288\":2,\"290\":2,\"504\":1,\"517\":1,\"518\":1}}],[\"changes\",{\"1\":{\"148\":1,\"156\":1}}],[\"changetime\",{\"1\":{\"144\":1}}],[\"changetime=\",{\"1\":{\"144\":1}}],[\"changedgroups\",{\"1\":{\"144\":6,\"149\":4}}],[\"changed\",{\"1\":{\"126\":1,\"141\":9,\"142\":2,\"144\":3,\"149\":1,\"156\":16,\"199\":2,\"200\":2,\"209\":2}}],[\"change\",{\"1\":{\"123\":1,\"125\":1,\"153\":1,\"209\":1,\"210\":2,\"723\":1}}],[\"c40\",{\"1\":{\"109\":2}}],[\"cc\",{\"1\":{\"497\":1,\"500\":1,\"508\":1,\"511\":1,\"513\":1,\"523\":1}}],[\"cchenxi\",{\"0\":{\"95\":1},\"1\":{\"96\":1}}],[\"cce\",{\"1\":{\"57\":2}}],[\"cronpatternparser\",{\"1\":{\"723\":1}}],[\"cron\",{\"1\":{\"722\":1,\"723\":1}}],[\"crypto\",{\"1\":{\"723\":1}}],[\"cryptofilter\",{\"1\":{\"617\":1}}],[\"cryptorresponse\",{\"1\":{\"314\":1}}],[\"cryptorrequst\",{\"1\":{\"314\":1}}],[\"credentials\",{\"1\":{\"357\":5,\"364\":3,\"378\":3,\"393\":3,\"400\":3}}],[\"creating\",{\"1\":{\"208\":1}}],[\"createmailclient\",{\"1\":{\"774\":1}}],[\"createsmsblend\",{\"1\":{\"740\":2,\"761\":1,\"773\":1}}],[\"createstplogic\",{\"1\":{\"624\":1}}],[\"createstatement\",{\"1\":{\"173\":2}}],[\"createprocess\",{\"1\":{\"637\":1}}],[\"createpersistent\",{\"1\":{\"205\":1}}],[\"createchain\",{\"1\":{\"517\":2}}],[\"createconfigservice\",{\"1\":{\"210\":1}}],[\"createuri\",{\"1\":{\"259\":1,\"266\":1,\"273\":1}}],[\"createnotfounderror\",{\"1\":{\"259\":2}}],[\"createlettuceconnectionfactory\",{\"1\":{\"247\":1}}],[\"createextension\",{\"1\":{\"181\":2,\"183\":3}}],[\"createorupdate\",{\"1\":{\"92\":1,\"153\":2,\"209\":1}}],[\"created`\",{\"1\":{\"278\":1}}],[\"createdefault\",{\"1\":{\"126\":1}}],[\"created\",{\"1\":{\"74\":1,\"126\":1}}],[\"create\",{\"1\":{\"66\":1,\"67\":1,\"142\":1,\"148\":1,\"153\":2,\"154\":2,\"162\":1,\"209\":1,\"226\":1,\"278\":1,\"637\":1}}],[\"crudboy\",{\"1\":{\"317\":1}}],[\"crud\",{\"1\":{\"92\":1,\"122\":1,\"608\":1,\"609\":1}}],[\"c++的函数和库\",{\"1\":{\"89\":1}}],[\"c\",{\"1\":{\"70\":3,\"89\":1,\"167\":4,\"271\":3,\"308\":1,\"406\":1,\"489\":3,\"505\":3,\"516\":3,\"517\":2,\"518\":1,\"519\":1}}],[\"cubic\",{\"0\":{\"341\":1},\"1\":{\"342\":3}}],[\"curl\",{\"1\":{\"667\":1,\"683\":1,\"692\":2}}],[\"currobj没有隔离的情况\",{\"1\":{\"476\":1}}],[\"currentmodulename\",{\"0\":{\"656\":1},\"1\":{\"651\":1}}],[\"currentchildren\",{\"1\":{\"205\":3,\"206\":3}}],[\"currentthread\",{\"1\":{\"167\":1,\"272\":1}}],[\"currenttimemillis\",{\"1\":{\"135\":1,\"141\":1,\"227\":1}}],[\"currenttransaction\",{\"1\":{\"67\":4}}],[\"current\",{\"1\":{\"70\":1,\"278\":1}}],[\"curator\",{\"1\":{\"280\":3,\"707\":1}}],[\"curator<\",{\"1\":{\"280\":3}}],[\"cur\",{\"1\":{\"135\":3}}],[\"cut\",{\"1\":{\"70\":1}}],[\"custom\",{\"1\":{\"57\":1,\"114\":1,\"124\":1,\"313\":1,\"314\":1,\"458\":1,\"459\":1}}],[\"carpe\",{\"1\":{\"461\":1}}],[\"card\",{\"1\":{\"458\":1}}],[\"cards\",{\"1\":{\"458\":1}}],[\"camunda\",{\"1\":{\"354\":1,\"368\":1}}],[\"caojiajun\",{\"1\":{\"317\":1}}],[\"capacity\",{\"1\":{\"252\":4,\"313\":2}}],[\"calcite\",{\"1\":{\"716\":1}}],[\"calculatetotalweight\",{\"1\":{\"229\":1}}],[\"call\",{\"1\":{\"252\":4}}],[\"callerrunspolicy\",{\"1\":{\"421\":1}}],[\"callercl\",{\"1\":{\"171\":1}}],[\"caller\",{\"1\":{\"171\":1}}],[\"calls\",{\"1\":{\"74\":1,\"271\":2}}],[\"caused\",{\"1\":{\"208\":2}}],[\"caslogout\",{\"1\":{\"541\":1}}],[\"cas\",{\"1\":{\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"541\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"cast\",{\"1\":{\"167\":1}}],[\"case\",{\"1\":{\"141\":5,\"155\":5,\"157\":6,\"162\":5,\"200\":1,\"209\":1,\"458\":1}}],[\"canvas\",{\"0\":{\"819\":1},\"1\":{\"822\":1}}],[\"can\",{\"1\":{\"170\":1,\"259\":1,\"458\":2}}],[\"cannot\",{\"1\":{\"167\":2,\"235\":4,\"236\":2,\"458\":1}}],[\"candidate\",{\"1\":{\"79\":1}}],[\"cancelmethod\",{\"1\":{\"709\":2}}],[\"cancel方法名称\",{\"1\":{\"709\":1}}],[\"cancel\",{\"0\":{\"67\":1,\"68\":1},\"1\":{\"61\":1,\"62\":1,\"64\":2,\"67\":3,\"144\":2,\"708\":1,\"709\":2,\"710\":2,\"717\":1}}],[\"cachename\",{\"1\":{\"619\":1}}],[\"cachesize\",{\"1\":{\"313\":2}}],[\"cacheselectdata\",{\"1\":{\"162\":1}}],[\"cacheddefaultname\",{\"1\":{\"183\":1}}],[\"cachedclasses\",{\"0\":{\"180\":1},\"1\":{\"178\":1,\"180\":5,\"183\":5}}],[\"cachedinstances\",{\"0\":{\"179\":1},\"1\":{\"178\":1,\"179\":2,\"183\":6}}],[\"cacheruledata\",{\"1\":{\"162\":1,\"206\":4}}],[\"cacheplugindata\",{\"1\":{\"162\":1,\"205\":2}}],[\"cacheconfigdata\",{\"1\":{\"149\":1}}],[\"cacheconfig\",{\"1\":{\"149\":3}}],[\"cachetcctransaction\",{\"1\":{\"71\":4}}],[\"cacheloader<string\",{\"1\":{\"71\":1}}],[\"cacheloader\",{\"1\":{\"71\":1}}],[\"cachebuilder\",{\"1\":{\"71\":2}}],[\"cache\",{\"1\":{\"71\":16,\"92\":5,\"141\":4,\"144\":1,\"148\":1,\"205\":1,\"313\":12,\"314\":1,\"357\":1,\"458\":1,\"608\":1}}],[\"catch\",{\"1\":{\"67\":1,\"71\":1,\"126\":1,\"148\":2,\"149\":2,\"158\":2,\"167\":3,\"170\":2,\"171\":1,\"173\":3,\"183\":2,\"228\":2,\"294\":3}}],[\"clickhouse\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"clientid\",{\"1\":{\"617\":1}}],[\"clientip\",{\"1\":{\"144\":2}}],[\"clientname\",{\"1\":{\"327\":1,\"328\":1}}],[\"clientconfig\",{\"1\":{\"324\":7,\"325\":10}}],[\"clientcnxn\",{\"1\":{\"199\":4}}],[\"client自动下线\",{\"1\":{\"314\":2}}],[\"client注解生成属性\",{\"1\":{\"314\":1}}],[\"client<\",{\"1\":{\"208\":1,\"280\":1}}],[\"clientrequest\",{\"1\":{\"136\":1}}],[\"clientresponse\",{\"1\":{\"136\":1,\"137\":7,\"236\":1,\"237\":7}}],[\"clients\",{\"1\":{\"92\":1,\"144\":9}}],[\"client\",{\"1\":{\"92\":2,\"103\":1,\"121\":2,\"127\":1,\"136\":1,\"137\":1,\"144\":6,\"150\":1,\"199\":8,\"200\":3,\"205\":2,\"208\":1,\"219\":1,\"236\":3,\"237\":1,\"282\":2,\"289\":1,\"313\":4,\"314\":2,\"315\":1,\"316\":2,\"326\":1,\"357\":4,\"364\":2,\"372\":1,\"378\":2,\"387\":1,\"393\":2,\"400\":2,\"431\":1,\"460\":1,\"461\":1,\"575\":1,\"585\":3,\"783\":1,\"787\":1}}],[\"cl\",{\"1\":{\"167\":5}}],[\"clear\",{\"1\":{\"148\":1,\"158\":3,\"167\":1}}],[\"cleandelaytime\",{\"1\":{\"709\":1}}],[\"clean\",{\"1\":{\"98\":1,\"637\":1}}],[\"clazz\",{\"1\":{\"126\":3,\"176\":5,\"183\":2}}],[\"classpath\",{\"1\":{\"180\":2,\"183\":5,\"585\":1}}],[\"classnotfoundexception\",{\"1\":{\"167\":1,\"173\":2,\"183\":2,\"294\":1}}],[\"classloader\",{\"1\":{\"167\":5,\"183\":5,\"342\":2}}],[\"class<t>\",{\"1\":{\"176\":1}}],[\"class<s>\",{\"1\":{\"167\":3}}],[\"class<\",{\"1\":{\"126\":3,\"167\":1,\"171\":1,\"178\":1,\"180\":2,\"181\":1,\"183\":10,\"294\":1}}],[\"classes\",{\"1\":{\"87\":6,\"89\":4,\"90\":3,\"180\":3,\"183\":25,\"208\":9}}],[\"class\",{\"1\":{\"66\":1,\"67\":1,\"71\":2,\"74\":1,\"81\":1,\"123\":1,\"125\":1,\"126\":12,\"130\":4,\"131\":1,\"136\":1,\"141\":6,\"142\":2,\"144\":7,\"148\":5,\"149\":3,\"153\":2,\"155\":2,\"156\":16,\"157\":1,\"158\":2,\"160\":4,\"161\":6,\"162\":3,\"164\":3,\"165\":1,\"166\":5,\"167\":10,\"168\":1,\"170\":5,\"171\":2,\"173\":2,\"176\":3,\"183\":4,\"200\":13,\"205\":2,\"208\":2,\"209\":4,\"210\":2,\"219\":1,\"224\":1,\"229\":1,\"235\":1,\"247\":6,\"249\":2,\"259\":4,\"266\":6,\"273\":3,\"293\":4,\"294\":4,\"324\":1,\"325\":1,\"327\":1,\"328\":1,\"474\":2,\"488\":6,\"506\":1,\"582\":1,\"709\":3,\"740\":1,\"741\":1,\"773\":2,\"783\":1,\"815\":2,\"816\":1}}],[\"class=\",{\"1\":{\"64\":7,\"74\":2}}],[\"closepage\",{\"1\":{\"604\":1}}],[\"close\",{\"1\":{\"158\":1}}],[\"clone\",{\"0\":{\"96\":1},\"1\":{\"96\":1}}],[\"cloud用户如果使用\",{\"1\":{\"708\":1,\"714\":1}}],[\"cloudeon\",{\"1\":{\"330\":3,\"331\":1,\"333\":2,\"334\":7,\"335\":3,\"336\":9,\"340\":9}}],[\"cloud\",{\"0\":{\"16\":1,\"57\":1,\"351\":1,\"352\":1,\"355\":1,\"358\":1,\"361\":1,\"365\":1,\"367\":1,\"375\":1,\"380\":1,\"382\":1,\"390\":1,\"395\":1,\"396\":1,\"398\":1,\"402\":1},\"1\":{\"16\":1,\"57\":3,\"61\":1,\"124\":2,\"269\":1,\"314\":1,\"321\":1,\"351\":3,\"352\":3,\"353\":6,\"354\":1,\"357\":1,\"358\":7,\"362\":5,\"367\":11,\"368\":2,\"376\":5,\"382\":11,\"391\":5,\"396\":6,\"397\":4,\"399\":5,\"402\":2,\"617\":1,\"709\":2,\"712\":1}}],[\"clusters\",{\"1\":{\"458\":1}}],[\"clustername\",{\"1\":{\"313\":1}}],[\"clusterurl\",{\"1\":{\"64\":1}}],[\"cluster\",{\"1\":{\"64\":1,\"325\":1,\"449\":1,\"458\":1,\"459\":1}}],[\"cn\",{\"1\":{\"36\":1,\"44\":1,\"49\":1,\"60\":1,\"93\":1,\"150\":1,\"167\":6,\"234\":1,\"333\":1,\"406\":2,\"407\":1,\"414\":1,\"416\":1,\"423\":1,\"424\":1,\"440\":1,\"442\":1,\"447\":1,\"580\":1,\"581\":1,\"582\":1,\"624\":1,\"693\":1,\"703\":1,\"709\":1,\"740\":1,\"782\":1,\"786\":1,\"789\":3,\"802\":1,\"808\":2,\"812\":2,\"814\":1}}],[\"cos\",{\"1\":{\"808\":2}}],[\"copyoptions\",{\"1\":{\"724\":1}}],[\"copyonwritearraylist<>\",{\"1\":{\"170\":1}}],[\"copyonwritearraylist<driverinfo>\",{\"1\":{\"170\":1}}],[\"copyonwritearrayset<>\",{\"1\":{\"158\":1}}],[\"co\",{\"1\":{\"637\":1}}],[\"coco\",{\"1\":{\"617\":1}}],[\"coffee\",{\"1\":{\"308\":1}}],[\"code\",{\"1\":{\"231\":1,\"245\":1,\"272\":1,\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"458\":9,\"707\":1,\"715\":1,\"740\":1,\"783\":1}}],[\"column\",{\"1\":{\"723\":1}}],[\"collapseslashes\",{\"1\":{\"314\":1}}],[\"collate\",{\"1\":{\"278\":10}}],[\"collect\",{\"1\":{\"130\":1,\"191\":2,\"209\":1,\"220\":1,\"231\":1,\"259\":1,\"266\":4,\"458\":1}}],[\"collectioncodes\",{\"1\":{\"438\":1}}],[\"collection\",{\"1\":{\"158\":1,\"722\":1}}],[\"collection<datachangedlistener>\",{\"1\":{\"155\":1,\"200\":1,\"209\":1}}],[\"collection<selectordata>\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"collectionutils\",{\"1\":{\"129\":2,\"141\":1,\"148\":1,\"162\":1,\"205\":1,\"206\":1,\"234\":2,\"235\":1}}],[\"collections\",{\"1\":{\"123\":2,\"124\":2,\"125\":2,\"126\":1,\"130\":1,\"144\":1,\"153\":1,\"155\":1,\"161\":2,\"200\":1,\"205\":2,\"209\":2,\"210\":2,\"220\":1,\"259\":2}}],[\"collectors\",{\"1\":{\"130\":1,\"191\":2,\"209\":1,\"220\":1,\"231\":1,\"259\":1,\"266\":4}}],[\"collector\",{\"1\":{\"83\":1,\"457\":4,\"458\":4,\"465\":4}}],[\"colons\",{\"1\":{\"228\":2}}],[\"coobird\",{\"1\":{\"816\":1}}],[\"cookie\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"624\":2}}],[\"cookies\",{\"1\":{\"137\":1,\"237\":1}}],[\"cookbook\",{\"1\":{\"397\":1}}],[\"coordinatorservice\",{\"1\":{\"66\":9,\"71\":6}}],[\"coordinator\",{\"1\":{\"66\":1,\"71\":1}}],[\"could\",{\"1\":{\"101\":1,\"167\":1}}],[\"counterinc\",{\"1\":{\"220\":1}}],[\"count\",{\"1\":{\"71\":2,\"173\":8,\"266\":1,\"406\":2}}],[\"corporation\",{\"1\":{\"199\":1}}],[\"corba\",{\"1\":{\"79\":1,\"83\":2}}],[\"coreos\",{\"1\":{\"449\":1}}],[\"core<\",{\"1\":{\"323\":1}}],[\"core\",{\"1\":{\"64\":1,\"66\":7,\"67\":4,\"71\":3,\"74\":1,\"208\":1,\"406\":1,\"619\":1,\"624\":2,\"644\":4,\"722\":7,\"723\":14,\"724\":12,\"802\":1,\"812\":1}}],[\"concatmap\",{\"1\":{\"259\":1}}],[\"concat\",{\"1\":{\"191\":1}}],[\"concurrentmap<string\",{\"1\":{\"135\":2,\"141\":1}}],[\"concurrentskiplistmap<>\",{\"1\":{\"133\":1}}],[\"concurrentskiplistmap<long\",{\"1\":{\"133\":1}}],[\"concurrenthashmap<>\",{\"1\":{\"126\":1,\"135\":2,\"141\":1,\"176\":1,\"178\":2,\"179\":1,\"181\":1}}],[\"concurrent\",{\"1\":{\"66\":6,\"67\":5,\"71\":1}}],[\"conn\",{\"1\":{\"173\":4}}],[\"connectivity\",{\"1\":{\"459\":1}}],[\"connectiontimeout\",{\"1\":{\"198\":2,\"709\":1}}],[\"connections\",{\"1\":{\"109\":2}}],[\"connection\",{\"1\":{\"101\":1,\"171\":4,\"173\":2,\"199\":3,\"228\":1,\"431\":1,\"458\":1}}],[\"connecttimeoutexception\",{\"1\":{\"236\":1}}],[\"connectstring=localhost\",{\"1\":{\"199\":1}}],[\"connector\",{\"1\":{\"170\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"798\":1}}],[\"connect\",{\"1\":{\"92\":1,\"171\":3,\"228\":1,\"324\":1,\"325\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"449\":1,\"458\":2,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"con\",{\"1\":{\"171\":3}}],[\"converter\",{\"1\":{\"397\":1}}],[\"convert\",{\"1\":{\"148\":1,\"162\":1,\"628\":1}}],[\"conditions\",{\"1\":{\"208\":1}}],[\"conditionalonclass\",{\"1\":{\"161\":1,\"210\":1}}],[\"conditionalonbean与之相反\",{\"1\":{\"200\":1}}],[\"conditionalonbean\",{\"1\":{\"144\":1}}],[\"conditionalonmissingbean\",{\"1\":{\"141\":1,\"156\":7,\"160\":1,\"200\":4}}],[\"conditionalonproperty\",{\"1\":{\"141\":1,\"156\":5,\"160\":1,\"161\":1,\"200\":1,\"210\":1}}],[\"condition\",{\"1\":{\"92\":1,\"124\":1,\"126\":1,\"127\":2,\"315\":1}}],[\"contains\",{\"1\":{\"458\":2}}],[\"contribute\",{\"1\":{\"334\":1}}],[\"contributor\",{\"1\":{\"318\":1,\"458\":9}}],[\"control\",{\"1\":{\"144\":1}}],[\"controller越来越多\",{\"1\":{\"783\":1}}],[\"controller\",{\"1\":{\"92\":2,\"144\":1,\"145\":1,\"271\":9,\"313\":3,\"315\":1,\"354\":2,\"368\":1,\"604\":1,\"686\":1,\"696\":1}}],[\"continue\",{\"1\":{\"142\":1,\"149\":1}}],[\"continued\",{\"1\":{\"124\":1,\"315\":1}}],[\"content\",{\"1\":{\"430\":3,\"438\":1}}],[\"contenttype\",{\"1\":{\"136\":1,\"236\":2}}],[\"contexttransmittalmode\",{\"1\":{\"709\":1}}],[\"context的属性值\",{\"1\":{\"288\":1}}],[\"contextpath\",{\"1\":{\"103\":1,\"116\":4,\"123\":6,\"124\":3,\"125\":9,\"232\":1,\"278\":1}}],[\"context\",{\"1\":{\"67\":2,\"70\":6,\"131\":3,\"195\":1,\"208\":2,\"219\":1,\"232\":1,\"235\":1,\"236\":1,\"259\":4,\"266\":1,\"273\":1,\"288\":1,\"488\":4,\"624\":4,\"664\":4}}],[\"consist\",{\"1\":{\"458\":1}}],[\"consul\",{\"1\":{\"313\":1,\"315\":1,\"316\":3,\"409\":1,\"419\":1}}],[\"consumers\",{\"1\":{\"66\":6}}],[\"consumer\",{\"1\":{\"66\":1,\"286\":2,\"293\":1}}],[\"consumerthreads\",{\"1\":{\"64\":2,\"74\":2,\"709\":1}}],[\"constant\",{\"1\":{\"802\":1}}],[\"constants\",{\"1\":{\"84\":2,\"131\":2,\"136\":1,\"137\":1,\"195\":2,\"219\":4,\"224\":3,\"228\":2,\"232\":1,\"235\":4,\"236\":7,\"237\":1,\"266\":3,\"271\":11,\"273\":1,\"288\":3,\"289\":4,\"290\":1}}],[\"const\",{\"1\":{\"628\":1}}],[\"constructorresolver\",{\"1\":{\"208\":2}}],[\"conf\",{\"1\":{\"199\":1,\"273\":6,\"709\":2}}],[\"confirmmethod\",{\"1\":{\"709\":2}}],[\"confirm\",{\"1\":{\"64\":1,\"67\":2,\"708\":1,\"709\":3,\"710\":1}}],[\"configid\",{\"1\":{\"773\":1}}],[\"configinfo\",{\"1\":{\"209\":2,\"210\":2}}],[\"configmode\",{\"1\":{\"709\":6}}],[\"config=app\",{\"1\":{\"583\":1}}],[\"configeventlistener\",{\"1\":{\"200\":1}}],[\"configdata\",{\"1\":{\"157\":6}}],[\"configdata<\",{\"1\":{\"149\":1}}],[\"configdata<t>\",{\"1\":{\"148\":1}}],[\"configdatacache\",{\"1\":{\"141\":3}}],[\"configdatacache>\",{\"1\":{\"141\":1}}],[\"configservice\",{\"1\":{\"156\":3,\"209\":1,\"210\":4,\"709\":1}}],[\"configs\",{\"1\":{\"144\":1,\"148\":4,\"149\":3,\"167\":5,\"326\":1,\"822\":1}}],[\"configcontroller\",{\"1\":{\"144\":2}}],[\"configurationclassenhancer\",{\"1\":{\"208\":1}}],[\"configurationclassenhancer$beanmethodinterceptor\",{\"1\":{\"208\":1}}],[\"configurationproperties注解\",{\"1\":{\"200\":1}}],[\"configurationproperties\",{\"1\":{\"161\":1,\"200\":2,\"210\":1}}],[\"configuration\",{\"1\":{\"130\":2,\"141\":2,\"144\":1,\"154\":1,\"156\":5,\"160\":2,\"161\":1,\"167\":1,\"200\":2,\"205\":1,\"208\":2,\"210\":1,\"235\":1,\"259\":1}}],[\"configgroupenum\",{\"1\":{\"123\":1,\"125\":1,\"141\":2,\"142\":1,\"144\":1,\"148\":10,\"149\":4,\"153\":1,\"154\":1,\"157\":5,\"161\":9,\"200\":3,\"209\":1}}],[\"config\",{\"1\":{\"64\":6,\"74\":8,\"92\":7,\"121\":1,\"141\":1,\"148\":3,\"149\":1,\"199\":1,\"200\":2,\"313\":3,\"326\":1,\"458\":3,\"582\":3,\"604\":1,\"644\":2,\"709\":3,\"713\":1,\"741\":4,\"772\":1,\"773\":2,\"774\":2}}],[\"confrim\",{\"0\":{\"67\":1,\"68\":1},\"1\":{\"61\":1,\"64\":1,\"67\":1,\"71\":1}}],[\"conference\",{\"1\":{\"15\":1}}],[\"comforyo\",{\"1\":{\"308\":1}}],[\"combined\",{\"1\":{\"273\":3}}],[\"combinedexecutor\",{\"1\":{\"273\":4}}],[\"composition\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"compose\",{\"1\":{\"354\":1,\"356\":1,\"383\":1,\"395\":1,\"402\":1}}],[\"components\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1,\"822\":1}}],[\"componentscan\",{\"1\":{\"220\":1}}],[\"component\",{\"1\":{\"66\":2,\"67\":2,\"74\":1,\"155\":1,\"156\":1,\"200\":2,\"335\":1,\"356\":1,\"395\":1,\"402\":1,\"488\":2,\"773\":2}}],[\"computeifabsent\",{\"1\":{\"316\":1}}],[\"completedfuture\",{\"1\":{\"286\":1}}],[\"complete\",{\"1\":{\"144\":1,\"199\":2}}],[\"completablefuture<object>\",{\"1\":{\"286\":2,\"289\":1}}],[\"completablefuture\",{\"1\":{\"81\":1,\"286\":2}}],[\"comparingindexed\",{\"1\":{\"723\":1}}],[\"comparingint\",{\"1\":{\"130\":1,\"220\":1,\"231\":1,\"259\":1}}],[\"comparison\",{\"1\":{\"458\":1}}],[\"compareutil\",{\"1\":{\"723\":1}}],[\"compare\",{\"0\":{\"371\":1,\"386\":1},\"1\":{\"312\":1}}],[\"comparechangedgroup\",{\"1\":{\"144\":2}}],[\"compareandset\",{\"1\":{\"135\":1,\"148\":1}}],[\"comparator\",{\"1\":{\"130\":1,\"191\":1,\"209\":1,\"220\":1,\"231\":1,\"259\":1}}],[\"comm\",{\"1\":{\"749\":1}}],[\"commit\",{\"1\":{\"444\":1,\"628\":1}}],[\"committers\",{\"1\":{\"301\":2}}],[\"community\",{\"1\":{\"318\":1}}],[\"communityovercode\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"13\":1,\"14\":1}}],[\"comment\",{\"1\":{\"278\":12}}],[\"commandlinerunner\",{\"1\":{\"200\":4}}],[\"commonconstants\",{\"1\":{\"289\":1,\"293\":1,\"294\":1}}],[\"commonplugindatasubscriber\",{\"1\":{\"162\":2}}],[\"commonsfileupload\",{\"1\":{\"535\":1}}],[\"commons\",{\"1\":{\"71\":1,\"800\":1}}],[\"common\",{\"1\":{\"64\":6,\"66\":3,\"67\":3,\"71\":5,\"74\":4,\"101\":1,\"174\":2,\"208\":2,\"314\":2,\"316\":1,\"368\":1,\"458\":1,\"608\":1,\"617\":1,\"619\":1,\"802\":1}}],[\"com\",{\"0\":{\"73\":1,\"625\":1},\"1\":{\"15\":1,\"42\":2,\"44\":1,\"49\":1,\"53\":1,\"56\":2,\"60\":2,\"64\":7,\"66\":15,\"67\":7,\"71\":8,\"74\":7,\"77\":2,\"93\":1,\"96\":1,\"101\":1,\"170\":1,\"173\":1,\"174\":1,\"208\":2,\"234\":1,\"285\":1,\"289\":1,\"300\":2,\"311\":1,\"312\":1,\"313\":20,\"314\":43,\"315\":54,\"316\":55,\"329\":1,\"331\":1,\"333\":1,\"334\":2,\"336\":2,\"340\":2,\"342\":3,\"354\":1,\"357\":1,\"402\":2,\"407\":2,\"414\":2,\"416\":2,\"423\":2,\"424\":2,\"435\":1,\"436\":1,\"437\":1,\"440\":1,\"441\":2,\"442\":1,\"443\":1,\"445\":2,\"447\":3,\"449\":2,\"452\":2,\"458\":47,\"459\":2,\"464\":2,\"465\":2,\"467\":3,\"468\":4,\"471\":1,\"473\":3,\"476\":4,\"478\":1,\"480\":3,\"492\":14,\"495\":1,\"497\":2,\"509\":10,\"513\":2,\"522\":12,\"576\":1,\"580\":1,\"581\":1,\"582\":2,\"583\":1,\"587\":1,\"610\":4,\"613\":3,\"629\":2,\"635\":1,\"636\":2,\"642\":1,\"643\":2,\"649\":1,\"672\":1,\"693\":1,\"703\":2,\"709\":1,\"711\":2,\"718\":2,\"725\":2,\"727\":1,\"740\":3,\"741\":2,\"766\":2,\"782\":2,\"783\":1,\"786\":2,\"792\":1,\"804\":2,\"806\":1,\"808\":2,\"814\":1,\"816\":1,\"817\":4,\"831\":2}}],[\"子类\",{\"1\":{\"722\":1}}],[\"子类注册为\",{\"1\":{\"131\":1}}],[\"子不语\",{\"1\":{\"308\":1}}],[\"子豪\",{\"1\":{\"308\":2}}],[\"子项目的管理和权限约束\",{\"1\":{\"306\":1}}],[\"子房等众多大佬等你线下网友面基\",{\"1\":{\"15\":1}}],[\"子骏\",{\"1\":{\"15\":1}}],[\"铂赛东\",{\"1\":{\"15\":1}}],[\"打造一款高可用\",{\"1\":{\"707\":1}}],[\"打造一场身临其境的沉浸式市集体验\",{\"1\":{\"15\":1}}],[\"打包basename\",{\"1\":{\"547\":1}}],[\"打包插件到\",{\"1\":{\"315\":1}}],[\"打印规则日志\",{\"1\":{\"234\":1}}],[\"打印选择器日志\",{\"1\":{\"234\":1}}],[\"打印日志\",{\"1\":{\"114\":1}}],[\"打印的日志\",{\"1\":{\"92\":1}}],[\"打开代理配置>端口映射页面\",{\"1\":{\"584\":1}}],[\"打开代理配置>license管理页面\",{\"1\":{\"584\":1}}],[\"打开发行版页面\",{\"1\":{\"583\":1,\"585\":1}}],[\"打开的时候\",{\"1\":{\"114\":1}}],[\"打开才会生效\",{\"1\":{\"114\":1}}],[\"打开\",{\"0\":{\"97\":1},\"1\":{\"92\":1}}],[\"打车\",{\"1\":{\"12\":1}}],[\"●\",{\"1\":{\"15\":1}}],[\"火山引擎\",{\"1\":{\"15\":1}}],[\"腾讯云\",{\"1\":{\"808\":1}}],[\"腾讯云短信在某些情况下导致的发送失败\",{\"1\":{\"776\":1}}],[\"腾讯云短信\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"腾讯企业邮件接口优化\",{\"1\":{\"535\":1}}],[\"腾讯\",{\"1\":{\"15\":1,\"608\":2}}],[\"华为分配的app请求地址\",{\"1\":{\"740\":1}}],[\"华为回调地址\",{\"1\":{\"740\":1}}],[\"华为短信向此手机号发送短信\",{\"1\":{\"740\":1}}],[\"华为短信测试\",{\"1\":{\"740\":1}}],[\"华为短信appsecret\",{\"1\":{\"740\":1}}],[\"华为短信appkey\",{\"1\":{\"740\":1}}],[\"华为云短信在群发时签名错误\",{\"1\":{\"776\":1}}],[\"华为云\",{\"1\":{\"617\":1,\"808\":1}}],[\"华为云会给开源团队一定的云服务器费用分成来资助开源团队的发展\",{\"1\":{\"57\":1}}],[\"华为云面向开源软件工具链与环境\",{\"1\":{\"57\":1}}],[\"华为云业务生态全景图\",{\"1\":{\"16\":1}}],[\"华为云一直在倡导和推动开源生态发展\",{\"1\":{\"16\":1}}],[\"华为开发者大会\",{\"1\":{\"16\":1}}],[\"华为\",{\"1\":{\"15\":1}}],[\"bv1gm4y177qu\",{\"1\":{\"672\":1}}],[\"bv1ml411e7ha\",{\"1\":{\"613\":1}}],[\"bv1fg4y137jk\",{\"1\":{\"613\":1}}],[\"bv1fj411y71x\",{\"1\":{\"613\":1}}],[\"bpmn\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"bcprov\",{\"1\":{\"354\":1,\"383\":1,\"397\":1}}],[\"bigexcelwriter\",{\"1\":{\"722\":1}}],[\"bilibili\",{\"1\":{\"613\":3,\"672\":1,\"688\":1,\"692\":1}}],[\"biz\",{\"1\":{\"506\":2}}],[\"biao\",{\"1\":{\"308\":1}}],[\"binlogsubscriber\",{\"1\":{\"327\":2,\"328\":2}}],[\"binlogclientmode\",{\"1\":{\"325\":1}}],[\"binlogclientconfig\",{\"1\":{\"324\":2,\"325\":2}}],[\"binlogclient\",{\"1\":{\"324\":5,\"325\":5}}],[\"binlogevent<user>\",{\"1\":{\"325\":3,\"327\":3,\"328\":3}}],[\"binlogevent\",{\"1\":{\"321\":1,\"324\":3}}],[\"binlog4j\",{\"0\":{\"319\":1},\"1\":{\"320\":1,\"325\":1,\"326\":2,\"329\":1}}],[\"binlog\",{\"0\":{\"319\":1},\"1\":{\"320\":1,\"325\":1}}],[\"bing\",{\"1\":{\"308\":1}}],[\"bin\",{\"1\":{\"199\":3,\"583\":1,\"637\":1,\"644\":8}}],[\"blends\",{\"1\":{\"772\":1}}],[\"bleachtred\",{\"1\":{\"617\":1}}],[\"blizzard\",{\"1\":{\"308\":1}}],[\"bloomfilter\",{\"1\":{\"723\":1}}],[\"blob\",{\"1\":{\"174\":1,\"583\":1}}],[\"blockexception\",{\"1\":{\"266\":1}}],[\"block\",{\"1\":{\"144\":1,\"266\":2}}],[\"blockingqueue\",{\"1\":{\"144\":1}}],[\"blockingwaitstrategy\",{\"1\":{\"66\":2}}],[\"blocksize\",{\"1\":{\"406\":1}}],[\"blocks\",{\"1\":{\"85\":3,\"86\":3,\"87\":3,\"90\":2}}],[\"blog\",{\"1\":{\"42\":1,\"296\":1}}],[\"btree\",{\"1\":{\"278\":1}}],[\"brearer\",{\"1\":{\"458\":1}}],[\"break\",{\"1\":{\"141\":5,\"148\":1,\"155\":5,\"157\":5,\"162\":4,\"200\":1,\"209\":2}}],[\"brendanv\",{\"1\":{\"411\":1}}],[\"brpc\",{\"1\":{\"314\":2,\"316\":1,\"409\":1,\"419\":1,\"710\":1,\"718\":1}}],[\"bruce\",{\"1\":{\"308\":1}}],[\"brien\",{\"1\":{\"15\":1}}],[\"brian\",{\"1\":{\"15\":1}}],[\"bos\",{\"1\":{\"808\":1}}],[\"bom\",{\"1\":{\"624\":1,\"713\":1}}],[\"bogus\",{\"1\":{\"458\":1}}],[\"boyuli4\",{\"1\":{\"317\":1}}],[\"bodyparamplugin\",{\"1\":{\"231\":2}}],[\"bodyextractors\",{\"1\":{\"137\":1,\"237\":1}}],[\"bodyinserters\",{\"1\":{\"136\":1,\"236\":1}}],[\"body\",{\"1\":{\"136\":2,\"137\":1,\"236\":1,\"237\":1,\"266\":3,\"288\":7,\"289\":3,\"426\":1,\"438\":1,\"677\":1,\"779\":1,\"783\":1}}],[\"boolean\",{\"1\":{\"124\":3,\"126\":2,\"130\":1,\"134\":1,\"148\":6,\"167\":2,\"195\":2,\"200\":1,\"220\":1,\"226\":2,\"227\":1,\"228\":3,\"229\":1,\"231\":1,\"249\":1,\"287\":1,\"293\":1,\"763\":1,\"817\":2}}],[\"boot<\",{\"1\":{\"788\":2}}],[\"boot2\",{\"1\":{\"612\":1}}],[\"bootstrap的控制台中输出如下信息\",{\"1\":{\"105\":1,\"108\":1}}],[\"bootstrap的配置\",{\"1\":{\"101\":1}}],[\"bootstrap启动成功\",{\"1\":{\"101\":1}}],[\"bootstrap是网关系统的核心\",{\"1\":{\"101\":1}}],[\"bootstrap\",{\"0\":{\"101\":1,\"158\":1,\"197\":1,\"205\":1,\"206\":1,\"210\":1,\"280\":1},\"1\":{\"64\":1,\"74\":1,\"92\":12,\"112\":3,\"130\":2,\"150\":3,\"158\":1,\"161\":1,\"198\":3,\"199\":1,\"203\":1,\"205\":3,\"206\":1,\"208\":13,\"210\":2,\"217\":1,\"220\":1,\"254\":1,\"255\":1,\"270\":1,\"276\":1,\"282\":1,\"315\":1,\"324\":1,\"325\":1,\"368\":1,\"664\":2,\"788\":1,\"799\":1}}],[\"boot\",{\"0\":{\"77\":1,\"326\":1,\"372\":1,\"387\":1},\"1\":{\"64\":1,\"65\":1,\"77\":3,\"78\":1,\"103\":1,\"130\":3,\"131\":17,\"161\":1,\"188\":1,\"198\":1,\"205\":2,\"208\":2,\"210\":1,\"255\":1,\"270\":1,\"280\":1,\"282\":2,\"313\":1,\"316\":1,\"321\":3,\"326\":1,\"351\":1,\"353\":3,\"354\":1,\"358\":3,\"367\":1,\"368\":1,\"373\":1,\"382\":1,\"383\":1,\"388\":1,\"396\":1,\"397\":8,\"624\":1,\"644\":1,\"706\":1,\"707\":1,\"708\":1,\"709\":1,\"712\":1,\"714\":1,\"739\":1,\"788\":4,\"789\":4,\"797\":1}}],[\"b\",{\"1\":{\"101\":4,\"199\":1,\"208\":3,\"368\":1,\"489\":3,\"504\":3,\"505\":3,\"516\":4,\"517\":2,\"518\":4,\"519\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"790\":1}}],[\"buddy\",{\"1\":{\"693\":3}}],[\"business\",{\"1\":{\"488\":4}}],[\"bucket\",{\"1\":{\"368\":2,\"814\":1}}],[\"bugjson\",{\"1\":{\"608\":1}}],[\"bugfix\",{\"0\":{\"412\":1,\"421\":1},\"1\":{\"458\":10}}],[\"bug\",{\"0\":{\"316\":1,\"339\":1,\"475\":1,\"660\":1,\"708\":1,\"714\":1,\"755\":1},\"1\":{\"262\":1,\"312\":1,\"316\":4,\"442\":1,\"448\":1,\"460\":1,\"461\":1,\"468\":1,\"474\":1,\"475\":1,\"498\":1,\"598\":5,\"608\":2,\"612\":1,\"631\":1,\"644\":1,\"652\":1,\"660\":1,\"700\":1,\"704\":1,\"708\":2,\"714\":4,\"715\":1,\"720\":1,\"727\":1,\"778\":1,\"787\":3}}],[\"burstcapacity\",{\"1\":{\"249\":2}}],[\"built\",{\"1\":{\"199\":1}}],[\"build方法进行追踪\",{\"1\":{\"232\":1}}],[\"buildparameter\",{\"1\":{\"289\":1}}],[\"buildparamsmap\",{\"1\":{\"195\":1}}],[\"buildplugindo\",{\"1\":{\"153\":1}}],[\"buildpluginpath\",{\"1\":{\"142\":1,\"205\":1}}],[\"buildmediatype\",{\"1\":{\"136\":1,\"236\":1}}],[\"buildrealpath\",{\"1\":{\"206\":1}}],[\"buildrealurl\",{\"1\":{\"131\":1,\"219\":1,\"224\":1,\"235\":1}}],[\"buildruleparentpath\",{\"1\":{\"142\":1}}],[\"buildruleconditiondo\",{\"1\":{\"126\":1}}],[\"buildruledo\",{\"1\":{\"126\":1}}],[\"builddomain\",{\"1\":{\"131\":1,\"219\":1,\"224\":1,\"235\":1}}],[\"builddivideupstream\",{\"1\":{\"123\":1,\"124\":1,\"125\":1}}],[\"buildspringcloudselectorhandle\",{\"1\":{\"124\":1}}],[\"buildselectorparentpath\",{\"1\":{\"142\":1}}],[\"buildselectorconditiondo\",{\"1\":{\"92\":2,\"124\":1}}],[\"buildselectordo\",{\"1\":{\"92\":1,\"124\":1}}],[\"builder\",{\"1\":{\"124\":1,\"126\":2,\"232\":1,\"727\":4,\"774\":1}}],[\"buildbyname\",{\"1\":{\"123\":1,\"125\":1}}],[\"buildtcctransaction\",{\"1\":{\"70\":1}}],[\"build\",{\"1\":{\"70\":1,\"71\":1,\"124\":1,\"126\":2,\"136\":2,\"232\":1,\"247\":1,\"259\":2,\"273\":4,\"313\":1,\"363\":1,\"377\":1,\"392\":1,\"458\":1,\"517\":2,\"604\":1,\"644\":1,\"714\":1,\"727\":1,\"774\":1,\"821\":1}}],[\"buffer\",{\"1\":{\"66\":1}}],[\"buffersize\",{\"1\":{\"64\":3,\"66\":4,\"74\":2,\"709\":1}}],[\"bearertoken\",{\"1\":{\"315\":1}}],[\"beancopier\",{\"1\":{\"720\":1,\"722\":1}}],[\"beancreationexception\",{\"1\":{\"208\":1}}],[\"beanname\",{\"1\":{\"259\":1}}],[\"beanfactoryutils\",{\"1\":{\"259\":3}}],[\"beaninstantiationexception\",{\"1\":{\"208\":2}}],[\"beansoftypeincludingancestors\",{\"1\":{\"259\":3}}],[\"beans\",{\"1\":{\"66\":2,\"67\":1,\"208\":9,\"259\":2}}],[\"bean>\",{\"1\":{\"64\":7,\"74\":2}}],[\"bean\",{\"1\":{\"64\":1,\"66\":2,\"67\":2,\"71\":1,\"74\":1,\"121\":1,\"130\":5,\"131\":3,\"141\":3,\"156\":8,\"160\":2,\"161\":5,\"162\":2,\"200\":4,\"205\":3,\"208\":2,\"209\":1,\"210\":3,\"217\":2,\"220\":3,\"259\":1,\"293\":1,\"294\":2,\"383\":1,\"409\":1,\"419\":1,\"421\":1,\"720\":1,\"722\":1,\"783\":1,\"788\":1}}],[\"below\",{\"1\":{\"271\":9}}],[\"betterwp\",{\"1\":{\"308\":1}}],[\"between\",{\"1\":{\"195\":1}}],[\"beta\",{\"1\":{\"79\":2}}],[\"been\",{\"1\":{\"148\":1,\"245\":1}}],[\"be\",{\"1\":{\"101\":1,\"149\":1,\"167\":2,\"458\":1}}],[\"beneath\",{\"1\":{\"101\":1,\"208\":1}}],[\"beforeauth\",{\"1\":{\"624\":1}}],[\"beforeprocess\",{\"1\":{\"488\":2}}],[\"before\",{\"1\":{\"74\":1,\"488\":2}}],[\"begin\",{\"1\":{\"67\":1,\"70\":2,\"628\":1}}],[\"behlendorf\",{\"1\":{\"15\":1}}],[\"byin\",{\"1\":{\"709\":1}}],[\"bytes\",{\"1\":{\"817\":4}}],[\"byte\",{\"1\":{\"293\":2,\"294\":2,\"438\":1,\"816\":1,\"817\":2}}],[\"byteimg\",{\"1\":{\"234\":1}}],[\"by\",{\"1\":{\"30\":10,\"33\":10,\"71\":1,\"74\":1,\"199\":1,\"208\":2,\"397\":1,\"458\":48}}],[\"banner\",{\"1\":{\"397\":1}}],[\"balloon72\",{\"1\":{\"317\":1}}],[\"balance\",{\"1\":{\"315\":1}}],[\"bar\",{\"1\":{\"433\":1}}],[\"barservice\",{\"1\":{\"285\":2}}],[\"barbosa\",{\"1\":{\"15\":1}}],[\"backoff\",{\"1\":{\"236\":2}}],[\"bad\",{\"1\":{\"137\":1,\"237\":1,\"458\":1}}],[\"baseconfig\",{\"1\":{\"773\":1}}],[\"base62\",{\"1\":{\"722\":1}}],[\"base64\",{\"1\":{\"314\":1,\"605\":1,\"608\":1}}],[\"base58\",{\"1\":{\"722\":1}}],[\"base32\",{\"1\":{\"722\":1,\"723\":1}}],[\"base2\",{\"1\":{\"518\":2}}],[\"baseannotationapibeansextractor\",{\"1\":{\"315\":1}}],[\"basedatacache\",{\"1\":{\"129\":3,\"162\":3,\"219\":3,\"224\":3,\"234\":3}}],[\"base\",{\"1\":{\"74\":1,\"101\":1,\"105\":2,\"108\":12,\"131\":1,\"162\":1,\"163\":2,\"208\":1,\"518\":4,\"814\":1}}],[\"bagevent\",{\"1\":{\"15\":1}}],[\"h3cswitch\",{\"1\":{\"449\":1}}],[\"hpeswitch\",{\"1\":{\"449\":1}}],[\"hpe\",{\"1\":{\"445\":1,\"459\":1}}],[\"hzb\",{\"1\":{\"444\":1}}],[\"hdialog\",{\"1\":{\"383\":1,\"397\":1}}],[\"hdfs\",{\"1\":{\"331\":1,\"339\":2}}],[\"hdc\",{\"0\":{\"16\":1}}],[\"h2\",{\"1\":{\"316\":1}}],[\"hbase\",{\"1\":{\"331\":2}}],[\"hb\",{\"1\":{\"308\":1}}],[\"hystrix<\",{\"1\":{\"789\":1}}],[\"hystrixplugin\",{\"1\":{\"231\":1}}],[\"hystrix\",{\"1\":{\"131\":2,\"231\":1,\"269\":4,\"316\":1,\"409\":1,\"419\":1,\"700\":1,\"708\":1,\"714\":1,\"787\":1,\"789\":2}}],[\"hyperledger\",{\"1\":{\"15\":1}}],[\"html\",{\"1\":{\"93\":1,\"101\":1,\"150\":1,\"529\":2,\"609\":2,\"661\":1,\"665\":1,\"673\":1,\"703\":1,\"709\":1,\"774\":2,\"782\":1,\"786\":1,\"788\":1,\"789\":3}}],[\"http长轮询\",{\"1\":{\"783\":1}}],[\"httprequest\",{\"1\":{\"723\":1}}],[\"httpbasic\",{\"1\":{\"608\":1}}],[\"http协议\",{\"1\":{\"277\":1}}],[\"httptestcontroller\",{\"1\":{\"271\":9}}],[\"httpentity\",{\"1\":{\"149\":4}}],[\"http同步\",{\"1\":{\"148\":1}}],[\"httpcomponentscore5\",{\"1\":{\"547\":1}}],[\"httpconstants\",{\"1\":{\"144\":2}}],[\"httpclient\",{\"1\":{\"105\":1,\"108\":6,\"131\":2,\"148\":1,\"149\":1,\"208\":1,\"231\":2,\"431\":1}}],[\"httplongpolling\",{\"1\":{\"313\":1}}],[\"httplongpollingtask\",{\"1\":{\"148\":1,\"149\":3}}],[\"httplongpollinglistener\",{\"1\":{\"141\":1,\"156\":1}}],[\"httplongpollingdatachangedlistener\",{\"0\":{\"144\":1},\"1\":{\"92\":2,\"141\":5,\"144\":5,\"145\":1,\"156\":4}}],[\"httpheaders\",{\"1\":{\"136\":4,\"149\":2,\"232\":1,\"236\":4,\"259\":1}}],[\"httpmethod\",{\"1\":{\"136\":3,\"232\":1,\"236\":2}}],[\"http客户端接入源码解析\",{\"0\":{\"120\":1}}],[\"http代理之divide插件源码解析\",{\"0\":{\"119\":1}}],[\"http代理之divide插件使用\",{\"0\":{\"111\":1}}],[\"http的\",{\"1\":{\"103\":1}}],[\"http项目\",{\"1\":{\"103\":1,\"106\":1}}],[\"http\",{\"0\":{\"102\":1,\"104\":1,\"107\":1,\"139\":1,\"147\":1,\"236\":1,\"237\":1,\"670\":1},\"1\":{\"4\":1,\"33\":2,\"53\":1,\"54\":1,\"79\":2,\"83\":5,\"90\":2,\"92\":5,\"100\":1,\"101\":1,\"103\":6,\"104\":2,\"105\":6,\"107\":2,\"108\":21,\"109\":6,\"110\":1,\"113\":3,\"116\":2,\"117\":3,\"118\":1,\"121\":1,\"125\":2,\"126\":5,\"127\":1,\"129\":1,\"131\":3,\"136\":3,\"140\":3,\"141\":2,\"142\":2,\"144\":2,\"148\":2,\"149\":2,\"150\":2,\"152\":1,\"156\":4,\"160\":1,\"162\":1,\"208\":2,\"219\":5,\"223\":3,\"224\":5,\"228\":3,\"231\":4,\"232\":8,\"235\":4,\"236\":3,\"237\":4,\"239\":1,\"245\":1,\"266\":3,\"270\":1,\"271\":11,\"272\":3,\"278\":1,\"313\":2,\"316\":3,\"333\":1,\"342\":1,\"407\":1,\"426\":3,\"428\":3,\"431\":1,\"432\":2,\"435\":1,\"445\":1,\"448\":1,\"449\":1,\"452\":1,\"457\":1,\"458\":1,\"459\":1,\"464\":1,\"465\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"574\":1,\"576\":1,\"577\":1,\"587\":1,\"628\":2,\"631\":1,\"635\":1,\"644\":1,\"667\":1,\"709\":2,\"723\":4,\"724\":2,\"783\":6,\"788\":1,\"790\":1}}],[\"httpsyncdataservice\",{\"1\":{\"148\":7,\"149\":2}}],[\"httpsyncproperties\",{\"1\":{\"141\":4,\"156\":4}}],[\"httpservletresponse\",{\"1\":{\"144\":3}}],[\"httpservletrequest\",{\"1\":{\"144\":4,\"809\":1,\"816\":3}}],[\"httpstatuscodeexception\",{\"1\":{\"266\":1}}],[\"httpstatus\",{\"1\":{\"137\":3,\"237\":3,\"249\":1,\"259\":1,\"266\":6,\"273\":2,\"288\":2}}],[\"https\",{\"0\":{\"73\":1,\"625\":1},\"1\":{\"3\":1,\"15\":2,\"36\":1,\"42\":2,\"44\":2,\"49\":2,\"53\":1,\"56\":2,\"60\":3,\"77\":1,\"93\":2,\"96\":1,\"150\":1,\"174\":1,\"234\":1,\"289\":1,\"296\":2,\"300\":2,\"302\":1,\"311\":2,\"312\":1,\"313\":25,\"314\":46,\"315\":55,\"316\":56,\"318\":1,\"329\":1,\"331\":1,\"334\":3,\"335\":1,\"336\":3,\"340\":3,\"342\":2,\"354\":1,\"357\":1,\"402\":2,\"407\":2,\"414\":3,\"416\":3,\"423\":3,\"424\":3,\"436\":1,\"437\":1,\"441\":2,\"442\":1,\"443\":1,\"445\":2,\"447\":2,\"449\":2,\"452\":2,\"458\":47,\"459\":2,\"461\":1,\"464\":2,\"465\":2,\"467\":3,\"468\":4,\"471\":1,\"473\":3,\"476\":4,\"478\":1,\"480\":3,\"492\":14,\"495\":1,\"497\":3,\"500\":1,\"508\":1,\"509\":10,\"511\":1,\"513\":3,\"522\":12,\"523\":1,\"574\":1,\"576\":1,\"583\":1,\"587\":1,\"610\":4,\"613\":3,\"621\":1,\"629\":2,\"636\":2,\"642\":1,\"643\":2,\"649\":1,\"665\":1,\"673\":1,\"703\":3,\"709\":1,\"711\":2,\"718\":2,\"725\":2,\"727\":2,\"740\":1,\"766\":3,\"782\":3,\"783\":1,\"786\":3,\"788\":2,\"789\":3,\"792\":1,\"804\":2,\"808\":5,\"814\":1,\"816\":1,\"817\":4,\"822\":1,\"831\":2}}],[\"h\",{\"1\":{\"92\":2,\"271\":9}}],[\"hibernate\",{\"1\":{\"798\":1}}],[\"hikaricp\",{\"1\":{\"608\":1}}],[\"hive\",{\"1\":{\"331\":2}}],[\"hi\",{\"1\":{\"308\":1}}],[\"histogramstarttimer\",{\"1\":{\"220\":1}}],[\"histogramobserveduration\",{\"1\":{\"130\":1,\"220\":1}}],[\"history\",{\"1\":{\"57\":1,\"661\":1,\"665\":1,\"673\":1}}],[\"high\",{\"1\":{\"93\":1}}],[\"hidden\",{\"1\":{\"87\":3,\"90\":1}}],[\"hotp\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"hooks\",{\"1\":{\"356\":2,\"395\":2,\"402\":2,\"822\":2}}],[\"home=\",{\"1\":{\"199\":1}}],[\"horse\",{\"1\":{\"166\":1}}],[\"holder\",{\"1\":{\"179\":1,\"183\":2}}],[\"holder<object>\",{\"1\":{\"179\":1,\"183\":1}}],[\"holder<object>>\",{\"1\":{\"178\":1,\"179\":1}}],[\"holder<>\",{\"1\":{\"178\":1,\"180\":1,\"183\":1}}],[\"holder<map<string\",{\"1\":{\"178\":1,\"180\":1}}],[\"hold\",{\"1\":{\"143\":3,\"144\":5,\"145\":5}}],[\"how\",{\"1\":{\"74\":1}}],[\"host=127\",{\"1\":{\"465\":2}}],[\"hostport\",{\"1\":{\"228\":5}}],[\"host\",{\"1\":{\"64\":1,\"77\":1,\"114\":1,\"136\":1,\"199\":1,\"228\":4,\"236\":1,\"316\":1,\"326\":3,\"430\":5,\"432\":2,\"458\":1}}],[\"hostname\",{\"1\":{\"64\":1,\"340\":1}}],[\"hat\",{\"1\":{\"449\":1}}],[\"hangzhou\",{\"1\":{\"333\":1,\"580\":1,\"581\":1,\"582\":1}}],[\"handshakes\",{\"1\":{\"82\":1}}],[\"handleselectorisnull\",{\"1\":{\"234\":3}}],[\"handledatadeleted\",{\"1\":{\"206\":1}}],[\"handledatachange\",{\"1\":{\"206\":1}}],[\"handleadd\",{\"1\":{\"123\":5,\"125\":6}}],[\"handle\",{\"1\":{\"123\":3,\"125\":7,\"126\":9,\"130\":1,\"161\":1,\"162\":1,\"220\":3,\"221\":1,\"235\":1,\"249\":2,\"259\":7,\"273\":1,\"287\":2}}],[\"handleeventswithworkerpool\",{\"1\":{\"66\":2}}],[\"handler`\",{\"1\":{\"406\":1}}],[\"handler指定了编排的这两个任务处理器\",{\"1\":{\"406\":1}}],[\"handlerresulthandler\",{\"1\":{\"259\":1}}],[\"handlerresulthandler>\",{\"1\":{\"259\":1}}],[\"handlerrule\",{\"1\":{\"162\":1,\"266\":1}}],[\"handleradapters\",{\"1\":{\"259\":2}}],[\"handleradapter\",{\"1\":{\"259\":2}}],[\"handleradapter>\",{\"1\":{\"259\":1}}],[\"handleru\",{\"1\":{\"234\":1}}],[\"handleruleisnull\",{\"1\":{\"234\":2}}],[\"handlerselector\",{\"1\":{\"162\":1}}],[\"handlerspringmvcrule\",{\"0\":{\"126\":1},\"1\":{\"122\":1,\"126\":1}}],[\"handlerspringmvcselector\",{\"0\":{\"123\":1},\"1\":{\"122\":1,\"123\":1,\"125\":2}}],[\"handlerplugin\",{\"1\":{\"162\":1,\"247\":2}}],[\"handlermappings\",{\"1\":{\"259\":3}}],[\"handlermapping\",{\"1\":{\"259\":2}}],[\"handlermapping>\",{\"1\":{\"259\":1}}],[\"handlermap\",{\"1\":{\"162\":4}}],[\"handleresult\",{\"1\":{\"161\":1,\"259\":1}}],[\"handlerequestbody\",{\"1\":{\"136\":3,\"236\":2}}],[\"handler\",{\"1\":{\"66\":1,\"67\":2,\"124\":2,\"162\":8,\"208\":2,\"259\":3,\"315\":1,\"406\":2}}],[\"haiqiqin\",{\"1\":{\"317\":1}}],[\"hakari\",{\"1\":{\"314\":1}}],[\"half\",{\"1\":{\"271\":1}}],[\"happen\",{\"1\":{\"167\":1}}],[\"happylife\",{\"1\":{\"64\":1,\"77\":1}}],[\"have\",{\"1\":{\"144\":1,\"245\":1,\"288\":3,\"458\":1}}],[\"havingvalue\",{\"1\":{\"141\":1,\"156\":3,\"160\":1}}],[\"hasmoreelements\",{\"1\":{\"167\":1,\"183\":1}}],[\"has\",{\"1\":{\"148\":1,\"235\":1}}],[\"hashmap\",{\"1\":{\"286\":3}}],[\"hashmap<>\",{\"1\":{\"183\":1}}],[\"hashvalue\",{\"1\":{\"247\":1}}],[\"hashkey\",{\"1\":{\"247\":1}}],[\"hashset<>\",{\"1\":{\"209\":1}}],[\"hashloadbalance\",{\"1\":{\"164\":1}}],[\"hash\",{\"0\":{\"133\":1},\"1\":{\"133\":6,\"229\":1,\"314\":1,\"460\":1,\"618\":1}}],[\"hasnull\",{\"1\":{\"724\":1}}],[\"hasnextservice\",{\"1\":{\"167\":3}}],[\"hasnext\",{\"1\":{\"144\":1,\"167\":4,\"170\":1}}],[\"hasn\",{\"1\":{\"132\":1}}],[\"haddad\",{\"1\":{\"15\":1}}],[\"hex\",{\"1\":{\"722\":1}}],[\"height\",{\"1\":{\"458\":1}}],[\"hertabeat\",{\"1\":{\"457\":1,\"465\":1}}],[\"hertzbeat的强大自定义\",{\"1\":{\"452\":1}}],[\"hertzbeatgitee\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"465\":1}}],[\"hertzbeat\",{\"0\":{\"51\":1,\"53\":1,\"54\":1,\"55\":1,\"57\":1,\"439\":1,\"440\":1,\"441\":1,\"446\":1,\"447\":1,\"450\":1,\"451\":1,\"460\":1,\"463\":1},\"1\":{\"18\":1,\"52\":4,\"53\":5,\"54\":3,\"55\":1,\"56\":5,\"57\":6,\"440\":2,\"441\":3,\"442\":6,\"443\":1,\"445\":1,\"447\":5,\"448\":5,\"449\":1,\"451\":1,\"452\":2,\"453\":1,\"455\":3,\"456\":2,\"457\":9,\"458\":50,\"459\":1,\"460\":1,\"463\":1,\"464\":2,\"465\":9}}],[\"heng\",{\"1\":{\"317\":1}}],[\"head\",{\"1\":{\"458\":1}}],[\"headers\",{\"1\":{\"136\":1,\"137\":1,\"149\":3,\"232\":2,\"236\":1,\"237\":1,\"430\":2,\"677\":1}}],[\"header\",{\"1\":{\"114\":1,\"426\":1,\"430\":1,\"624\":1,\"779\":1}}],[\"health\",{\"1\":{\"313\":1,\"788\":1}}],[\"helm\",{\"1\":{\"461\":1}}],[\"helle\",{\"1\":{\"709\":2}}],[\"hellboy0621\",{\"1\":{\"308\":1}}],[\"hellocontroller\",{\"1\":{\"709\":1}}],[\"helloservice=\",{\"1\":{\"709\":1}}],[\"helloserviceimpl\",{\"1\":{\"709\":2}}],[\"helloservice\",{\"1\":{\"709\":11}}],[\"helloworld\",{\"1\":{\"308\":1,\"783\":1}}],[\"hello\",{\"1\":{\"82\":1,\"272\":1,\"282\":1,\"428\":4,\"432\":2,\"709\":17}}],[\"helper\",{\"1\":{\"71\":1}}],[\"hession\",{\"1\":{\"65\":1}}],[\"hessian\",{\"1\":{\"64\":1,\"713\":1}}],[\"hmiy\",{\"1\":{\"61\":1}}],[\"hmily分布式事务重启月度报告\",{\"0\":{\"712\":1}}],[\"hmily发布2\",{\"0\":{\"699\":1}}],[\"hmilyconsumerdatahandler\",{\"1\":{\"66\":7}}],[\"hmilytcc\",{\"1\":{\"709\":3}}],[\"hmilytransactionexecutor\",{\"1\":{\"67\":14}}],[\"hmilytransactioneventpublisher\",{\"1\":{\"66\":2,\"70\":1}}],[\"hmilytransactioneventtranslator\",{\"1\":{\"66\":2}}],[\"hmilytransactioneventfactory\",{\"1\":{\"66\":2}}],[\"hmilytransactionevent\",{\"1\":{\"66\":1}}],[\"hmilytransactionhandler\",{\"1\":{\"67\":2}}],[\"hmilytransactionbootstrap\",{\"1\":{\"64\":2,\"74\":2}}],[\"hmilythreadfactory\",{\"1\":{\"66\":2,\"67\":2}}],[\"hmily\",{\"0\":{\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"72\":1,\"73\":3,\"77\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"713\":1,\"714\":1},\"1\":{\"60\":5,\"61\":4,\"62\":1,\"63\":1,\"64\":11,\"66\":11,\"67\":8,\"68\":1,\"70\":1,\"71\":4,\"74\":9,\"75\":1,\"76\":1,\"77\":5,\"700\":1,\"702\":6,\"703\":3,\"708\":1,\"709\":20,\"710\":1,\"711\":2,\"712\":1,\"713\":11,\"714\":3,\"715\":1,\"716\":1,\"718\":2,\"792\":1}}],[\"husky\",{\"1\":{\"720\":1}}],[\"hudongdong129\",{\"1\":{\"317\":1}}],[\"huanccwang\",{\"1\":{\"317\":1}}],[\"huangxiaofeng\",{\"1\":{\"154\":1,\"156\":1}}],[\"huaweiswitch\",{\"1\":{\"449\":1}}],[\"huawei\",{\"0\":{\"57\":1},\"1\":{\"57\":3,\"445\":1,\"459\":1,\"740\":2,\"811\":2,\"817\":1}}],[\"huaweicloud\",{\"1\":{\"16\":1,\"57\":4,\"442\":3}}],[\"hugo\",{\"1\":{\"43\":1}}],[\"hutool\",{\"0\":{\"719\":1,\"720\":1},\"1\":{\"15\":1,\"308\":4,\"315\":1,\"354\":1,\"413\":1,\"603\":1,\"608\":1,\"616\":1,\"719\":1,\"720\":6,\"725\":2,\"800\":1}}],[\"pdf\",{\"1\":{\"829\":1}}],[\"px\",{\"1\":{\"824\":1}}],[\"pc\",{\"1\":{\"636\":1,\"643\":1}}],[\"pgsql\",{\"1\":{\"631\":1}}],[\"p6spy\",{\"1\":{\"608\":1}}],[\"pig整合maxkey方案\",{\"1\":{\"567\":1}}],[\"ping\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"pinia\",{\"1\":{\"373\":1,\"388\":1,\"820\":1,\"822\":2}}],[\"ppt\",{\"0\":{\"508\":1},\"1\":{\"508\":2}}],[\"python\",{\"1\":{\"502\":1}}],[\"pytorch\",{\"1\":{\"15\":1}}],[\"pnpm\",{\"0\":{\"366\":1,\"381\":1},\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"png\",{\"1\":{\"192\":1,\"278\":1,\"281\":1,\"286\":2,\"291\":1,\"811\":2,\"817\":6,\"836\":3}}],[\"pkce\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"pb\",{\"1\":{\"317\":1}}],[\"p2c\",{\"1\":{\"314\":1}}],[\"php\",{\"1\":{\"783\":1}}],[\"phydeleted\",{\"1\":{\"709\":1}}],[\"phoenix\",{\"1\":{\"308\":1}}],[\"phantom\",{\"1\":{\"308\":1}}],[\"pmc\",{\"1\":{\"301\":2,\"305\":1}}],[\"psd\",{\"1\":{\"829\":1}}],[\"psw\",{\"1\":{\"741\":1}}],[\"ps\",{\"1\":{\"234\":1,\"235\":1,\"236\":1,\"241\":1,\"247\":1,\"251\":1,\"637\":1}}],[\"p9\",{\"1\":{\"234\":1}}],[\"peachyy\",{\"1\":{\"422\":1}}],[\"pear\",{\"1\":{\"327\":1,\"328\":1}}],[\"peixy\",{\"1\":{\"308\":1}}],[\"peng\",{\"1\":{\"317\":1}}],[\"pengfei\",{\"1\":{\"317\":1}}],[\"pengshao\",{\"1\":{\"308\":1}}],[\"pending\",{\"1\":{\"167\":4,\"316\":1}}],[\"perhaps\",{\"1\":{\"458\":1}}],[\"persistence\",{\"1\":{\"325\":1}}],[\"period\",{\"1\":{\"271\":2}}],[\"permitted\",{\"1\":{\"271\":1}}],[\"permittednumberofcallsinhalfopenstate\",{\"1\":{\"270\":1}}],[\"permanent\",{\"1\":{\"259\":1}}],[\"performance\",{\"1\":{\"93\":1}}],[\"perform\",{\"1\":{\"74\":1}}],[\"p\",{\"1\":{\"101\":1,\"167\":3,\"333\":1,\"406\":1,\"442\":1,\"448\":2,\"457\":4,\"465\":4,\"581\":2,\"582\":2}}],[\"platform\",{\"1\":{\"811\":2,\"814\":2,\"816\":1}}],[\"plus\",{\"0\":{\"601\":1,\"611\":1},\"1\":{\"397\":1,\"604\":1,\"607\":1,\"608\":3,\"610\":4,\"616\":2,\"621\":1}}],[\"plutokaito\",{\"1\":{\"317\":1}}],[\"plugn\",{\"1\":{\"316\":1}}],[\"plug\",{\"1\":{\"313\":1}}],[\"plugin<\",{\"1\":{\"758\":1}}],[\"pluginversion\",{\"1\":{\"697\":1}}],[\"pluginzks\",{\"1\":{\"205\":2}}],[\"pluginparent\",{\"1\":{\"205\":3}}],[\"pluginpath\",{\"1\":{\"142\":3,\"200\":2,\"205\":5}}],[\"plugintransfer\",{\"1\":{\"153\":1,\"209\":1}}],[\"pluginmapper\",{\"1\":{\"153\":2}}],[\"plugindo\",{\"1\":{\"153\":6,\"209\":1}}],[\"plugindto\",{\"1\":{\"153\":13,\"209\":4}}],[\"plugindatarefresh\",{\"1\":{\"148\":2}}],[\"plugindatasubscriber\",{\"1\":{\"148\":9,\"161\":6,\"162\":4,\"205\":7,\"206\":1}}],[\"plugindatalist\",{\"1\":{\"142\":2,\"157\":2,\"200\":2}}],[\"plugindatahandler>\",{\"1\":{\"162\":1}}],[\"plugindatahandler\",{\"1\":{\"131\":1,\"161\":1,\"162\":4,\"163\":1,\"231\":1,\"266\":1}}],[\"plugindata\",{\"1\":{\"129\":5,\"142\":1,\"162\":6,\"219\":3,\"224\":4,\"234\":4,\"247\":5}}],[\"plugincontroller\",{\"1\":{\"153\":2}}],[\"pluginlist\",{\"1\":{\"130\":2,\"220\":2,\"231\":1,\"259\":2}}],[\"plugins的插件都是有固定的执行顺序的\",{\"1\":{\"231\":1}}],[\"pluginsubscriber\",{\"1\":{\"161\":2,\"205\":4,\"210\":2}}],[\"pluginserviceimpl\",{\"1\":{\"153\":1}}],[\"pluginservice\",{\"1\":{\"141\":1,\"153\":1,\"200\":1}}],[\"plugins就是\",{\"1\":{\"130\":1}}],[\"plugins\",{\"1\":{\"130\":13,\"217\":1,\"220\":6,\"231\":3,\"259\":2,\"287\":4,\"822\":1}}],[\"plugin02\",{\"1\":{\"130\":1}}],[\"pluginnamed\",{\"1\":{\"266\":1}}],[\"pluginname\",{\"1\":{\"129\":11,\"205\":7,\"219\":2,\"224\":3,\"234\":9}}],[\"plugin关系图\",{\"1\":{\"128\":1}}],[\"pluginenum\",{\"1\":{\"124\":5,\"129\":2,\"220\":1,\"231\":5,\"266\":3}}],[\"plugin\",{\"1\":{\"92\":4,\"105\":3,\"108\":18,\"130\":7,\"131\":37,\"141\":2,\"142\":1,\"144\":1,\"148\":4,\"152\":2,\"153\":5,\"154\":2,\"155\":1,\"156\":2,\"157\":2,\"161\":1,\"162\":1,\"163\":4,\"188\":3,\"200\":2,\"201\":1,\"203\":1,\"205\":3,\"208\":5,\"209\":2,\"217\":1,\"220\":4,\"231\":5,\"255\":1,\"259\":1,\"270\":1,\"280\":1,\"287\":3,\"313\":3,\"314\":4,\"315\":4,\"316\":1,\"354\":1,\"383\":1,\"438\":1,\"616\":1,\"789\":13}}],[\"plguin\",{\"1\":{\"315\":1}}],[\"please\",{\"1\":{\"74\":1,\"101\":1,\"245\":1}}],[\"punycode\",{\"1\":{\"722\":1}}],[\"push\",{\"1\":{\"657\":1}}],[\"pull\",{\"0\":{\"805\":1},\"1\":{\"312\":1,\"313\":19,\"314\":42,\"315\":54,\"316\":55,\"458\":47,\"805\":1}}],[\"putattr\",{\"1\":{\"816\":1}}],[\"putall\",{\"1\":{\"137\":2,\"237\":2}}],[\"put中自定义的标识\",{\"1\":{\"775\":1}}],[\"putplugin\",{\"1\":{\"315\":1}}],[\"putmapping\",{\"1\":{\"153\":1}}],[\"putifabsent\",{\"1\":{\"135\":2,\"176\":1,\"181\":1,\"183\":2}}],[\"put\",{\"0\":{\"659\":1},\"1\":{\"71\":1,\"126\":3,\"131\":1,\"133\":1,\"135\":1,\"141\":1,\"148\":5,\"149\":1,\"152\":1,\"158\":1,\"161\":5,\"167\":1,\"183\":1,\"191\":3,\"209\":1,\"219\":3,\"224\":3,\"227\":1,\"232\":1,\"235\":3,\"236\":3,\"289\":2,\"651\":1,\"774\":1,\"775\":1}}],[\"publishconfig\",{\"1\":{\"209\":5}}],[\"publishevent\",{\"1\":{\"66\":2,\"70\":2,\"92\":5,\"123\":1,\"124\":2,\"125\":3,\"126\":2,\"153\":1,\"200\":3,\"209\":2}}],[\"publisher\",{\"1\":{\"66\":2}}],[\"publish\",{\"1\":{\"66\":1,\"123\":1,\"125\":1,\"153\":1,\"209\":1,\"458\":1}}],[\"publicipv6\",{\"1\":{\"637\":1}}],[\"publicipv4\",{\"1\":{\"637\":1}}],[\"public\",{\"1\":{\"66\":5,\"67\":3,\"70\":2,\"71\":6,\"74\":1,\"92\":1,\"121\":1,\"122\":2,\"124\":1,\"126\":3,\"129\":1,\"130\":8,\"133\":1,\"134\":1,\"135\":1,\"136\":2,\"137\":1,\"141\":7,\"142\":4,\"144\":7,\"148\":6,\"149\":1,\"153\":3,\"154\":2,\"155\":4,\"156\":9,\"157\":7,\"158\":6,\"160\":2,\"161\":7,\"162\":7,\"164\":2,\"166\":6,\"167\":8,\"170\":6,\"171\":5,\"173\":2,\"176\":3,\"179\":1,\"183\":2,\"191\":1,\"200\":13,\"205\":5,\"206\":2,\"209\":4,\"210\":6,\"220\":3,\"224\":1,\"225\":1,\"228\":1,\"229\":2,\"231\":2,\"232\":1,\"234\":1,\"236\":1,\"237\":1,\"247\":1,\"249\":1,\"259\":2,\"266\":13,\"271\":1,\"272\":1,\"273\":2,\"282\":1,\"286\":1,\"287\":2,\"289\":1,\"290\":1,\"293\":2,\"294\":2,\"324\":5,\"325\":5,\"327\":4,\"328\":4,\"428\":1,\"430\":4,\"487\":2,\"488\":6,\"506\":3,\"624\":1,\"709\":14,\"727\":1,\"740\":2,\"773\":5,\"783\":2,\"815\":2,\"816\":6}}],[\"powerjob\",{\"1\":{\"615\":1,\"617\":3,\"620\":1}}],[\"powerjob密集来袭\",{\"0\":{\"611\":1}}],[\"poi\",{\"1\":{\"535\":1,\"608\":1,\"722\":1,\"723\":5,\"724\":2}}],[\"point\",{\"1\":{\"67\":3,\"70\":4,\"814\":1}}],[\"pool\",{\"1\":{\"521\":1,\"608\":1}}],[\"ponfee\",{\"1\":{\"404\":1,\"406\":2,\"407\":1}}],[\"pod\",{\"1\":{\"331\":2,\"339\":1}}],[\"polaris\",{\"1\":{\"313\":2,\"409\":1,\"419\":1}}],[\"pollingenabled\",{\"1\":{\"515\":1}}],[\"polling\",{\"1\":{\"92\":8,\"148\":2,\"149\":2,\"156\":1}}],[\"pojoutils\",{\"1\":{\"294\":1}}],[\"pojo\",{\"1\":{\"283\":1,\"286\":3}}],[\"position\",{\"1\":{\"325\":1}}],[\"pos\",{\"1\":{\"272\":1}}],[\"postconstruct\",{\"1\":{\"773\":1}}],[\"postgres\",{\"1\":{\"606\":1}}],[\"postgresql\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"608\":1,\"619\":1,\"713\":1,\"714\":1}}],[\"postforentity\",{\"1\":{\"149\":1}}],[\"postmapping\",{\"1\":{\"122\":1,\"144\":1,\"816\":5}}],[\"postman\",{\"1\":{\"117\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"post\",{\"0\":{\"659\":1},\"1\":{\"114\":1,\"121\":1,\"232\":1,\"432\":2,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"651\":1}}],[\"pom\",{\"0\":{\"188\":1,\"280\":1,\"282\":1},\"1\":{\"92\":1,\"102\":1,\"103\":1,\"130\":1,\"198\":1,\"208\":2,\"217\":1,\"254\":1,\"255\":1,\"276\":2,\"315\":1,\"316\":1,\"363\":1,\"377\":1,\"392\":1,\"789\":1,\"814\":1}}],[\"port=8080\",{\"1\":{\"664\":1}}],[\"port=1158\",{\"1\":{\"457\":2,\"465\":2}}],[\"port没有改\",{\"1\":{\"110\":1}}],[\"port\",{\"1\":{\"64\":1,\"101\":1,\"103\":1,\"208\":1,\"228\":3,\"326\":3,\"430\":6,\"432\":2,\"449\":1,\"459\":1,\"557\":1,\"585\":1,\"637\":1,\"664\":3}}],[\"paho\",{\"1\":{\"801\":1}}],[\"pad\",{\"1\":{\"723\":1}}],[\"pagehelper\",{\"1\":{\"608\":1}}],[\"pages\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"508\":1,\"511\":1,\"523\":1,\"610\":4,\"693\":2}}],[\"payment\",{\"1\":{\"709\":1}}],[\"pay\",{\"1\":{\"368\":1,\"741\":1}}],[\"pan3793\",{\"1\":{\"335\":1}}],[\"pandas886\",{\"1\":{\"335\":1}}],[\"passive\",{\"1\":{\"709\":2}}],[\"pass\",{\"1\":{\"227\":2}}],[\"passwd\",{\"1\":{\"171\":1,\"173\":2}}],[\"password=\",{\"1\":{\"788\":1}}],[\"password\",{\"1\":{\"64\":4,\"74\":1,\"77\":2,\"171\":1,\"326\":3,\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"432\":1,\"433\":1,\"582\":1,\"585\":1,\"709\":1,\"740\":1,\"741\":1,\"788\":1}}],[\"pair<string\",{\"1\":{\"289\":1}}],[\"pair\",{\"0\":{\"195\":1},\"1\":{\"195\":3,\"289\":5}}],[\"patch\",{\"0\":{\"659\":1},\"1\":{\"651\":1}}],[\"pattern\",{\"1\":{\"79\":1,\"86\":3,\"88\":3,\"89\":2,\"90\":3,\"328\":1}}],[\"path=\",{\"1\":{\"664\":1}}],[\"pathpattern\",{\"1\":{\"316\":1}}],[\"pathvariable\",{\"1\":{\"153\":1,\"316\":1}}],[\"path\",{\"1\":{\"74\":1,\"77\":1,\"101\":1,\"126\":9,\"131\":2,\"191\":1,\"206\":2,\"208\":2,\"232\":1,\"259\":1,\"278\":3,\"282\":1,\"288\":1,\"585\":1,\"664\":3,\"677\":1,\"814\":1}}],[\"parentpath\",{\"1\":{\"205\":1,\"206\":2}}],[\"parent\",{\"1\":{\"200\":2,\"205\":1}}],[\"parser\",{\"1\":{\"716\":1}}],[\"parseint\",{\"1\":{\"226\":1,\"228\":1}}],[\"parseboolean\",{\"1\":{\"226\":1}}],[\"parseurl\",{\"1\":{\"171\":3}}],[\"parse\",{\"1\":{\"167\":1}}],[\"parallelstream\",{\"1\":{\"148\":1}}],[\"parallel\",{\"1\":{\"106\":1,\"406\":1,\"505\":3}}],[\"param`\",{\"1\":{\"406\":1}}],[\"paramcheckutils\",{\"1\":{\"289\":1}}],[\"params\",{\"1\":{\"148\":3,\"149\":3,\"195\":1,\"288\":2,\"294\":3,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"677\":2,\"683\":1,\"692\":1}}],[\"paramvalue\",{\"1\":{\"126\":1}}],[\"paramname\",{\"1\":{\"126\":1}}],[\"paramtype\",{\"1\":{\"126\":1}}],[\"paramtypeenum\",{\"1\":{\"124\":1,\"126\":1}}],[\"parametertypes\",{\"1\":{\"278\":1,\"286\":4,\"289\":1}}],[\"parameters\",{\"1\":{\"74\":1,\"195\":2}}],[\"parameter\",{\"1\":{\"74\":2}}],[\"param\",{\"1\":{\"66\":4,\"70\":2,\"71\":3,\"121\":1,\"122\":1,\"126\":2,\"153\":3,\"156\":10,\"158\":8,\"200\":6,\"205\":9,\"209\":1,\"231\":2,\"266\":1,\"271\":1,\"286\":3,\"288\":2,\"458\":2,\"608\":1,\"617\":1,\"619\":1}}],[\"participants\",{\"1\":{\"74\":1}}],[\"participant\",{\"1\":{\"70\":7}}],[\"packages\",{\"1\":{\"461\":1}}],[\"package=\",{\"1\":{\"74\":1}}],[\"package\",{\"1\":{\"66\":1,\"67\":1,\"71\":1,\"74\":1,\"98\":1}}],[\"pr416\",{\"1\":{\"619\":1}}],[\"pr410\",{\"1\":{\"617\":1}}],[\"pr400\",{\"1\":{\"619\":1}}],[\"pr402\",{\"1\":{\"617\":1}}],[\"pr397\",{\"1\":{\"617\":1}}],[\"pr390\",{\"1\":{\"617\":1}}],[\"pr366\",{\"1\":{\"619\":1}}],[\"pr360\",{\"1\":{\"619\":1}}],[\"pr362\",{\"1\":{\"618\":1}}],[\"pr363\",{\"1\":{\"617\":1}}],[\"pr367\",{\"1\":{\"615\":1}}],[\"pr377\",{\"1\":{\"615\":1}}],[\"pr379\",{\"1\":{\"615\":1}}],[\"pr370\",{\"1\":{\"615\":1}}],[\"pr359\",{\"1\":{\"615\":1}}],[\"pr349\",{\"1\":{\"615\":1}}],[\"primeaccumulatejobhandler\",{\"1\":{\"406\":1}}],[\"primecountjobhandler\",{\"1\":{\"406\":1}}],[\"prime\",{\"1\":{\"406\":1}}],[\"primary\",{\"1\":{\"153\":1,\"278\":1}}],[\"print\",{\"1\":{\"491\":1}}],[\"printstacktrace\",{\"1\":{\"173\":3}}],[\"println\",{\"1\":{\"165\":1,\"166\":5,\"167\":2,\"173\":2,\"191\":1,\"231\":2,\"324\":3,\"325\":3,\"327\":3,\"328\":3,\"709\":6}}],[\"privilegedaction<void>\",{\"1\":{\"170\":1}}],[\"private\",{\"1\":{\"66\":2,\"67\":3,\"71\":8,\"74\":15,\"81\":2,\"92\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":4,\"130\":2,\"136\":2,\"141\":1,\"144\":1,\"148\":6,\"149\":1,\"155\":2,\"158\":2,\"161\":3,\"162\":2,\"166\":2,\"167\":6,\"170\":2,\"171\":4,\"176\":2,\"178\":3,\"179\":1,\"180\":2,\"181\":2,\"183\":5,\"200\":5,\"205\":6,\"206\":2,\"209\":2,\"210\":1,\"226\":1,\"227\":2,\"228\":2,\"229\":1,\"236\":2,\"266\":1,\"273\":2,\"293\":1,\"458\":1,\"474\":1,\"709\":1,\"783\":2,\"816\":1}}],[\"preauthorize\",{\"1\":{\"357\":2}}],[\"press\",{\"1\":{\"271\":1}}],[\"prefix\",{\"1\":{\"77\":1,\"156\":2,\"161\":2,\"167\":3,\"171\":8,\"200\":1,\"210\":2,\"259\":1}}],[\"pre\",{\"1\":{\"64\":1,\"79\":1}}],[\"pr\",{\"1\":{\"56\":1,\"60\":1,\"77\":1,\"124\":1,\"313\":13,\"314\":43,\"315\":53,\"316\":55,\"456\":1,\"489\":1,\"624\":1,\"722\":2,\"723\":14,\"724\":5,\"764\":1,\"792\":2}}],[\"profiles\",{\"1\":{\"664\":3}}],[\"problem\",{\"1\":{\"406\":1}}],[\"prometheus\",{\"1\":{\"313\":1,\"469\":1,\"787\":1}}],[\"promethues\",{\"1\":{\"54\":1}}],[\"proxy\",{\"1\":{\"208\":1,\"313\":1,\"314\":1,\"315\":1,\"433\":2,\"575\":4,\"576\":3,\"580\":1,\"581\":2,\"582\":6,\"583\":9,\"585\":4,\"587\":2}}],[\"proxy=\",{\"1\":{\"74\":1}}],[\"providers\",{\"1\":{\"167\":2}}],[\"provider\",{\"1\":{\"165\":1,\"167\":3,\"286\":2,\"294\":1}}],[\"protected\",{\"1\":{\"131\":1,\"141\":4,\"144\":1,\"148\":1,\"162\":1,\"210\":1,\"224\":1,\"235\":1,\"249\":1,\"259\":2,\"266\":1,\"273\":1,\"288\":1}}],[\"protobuf\",{\"1\":{\"713\":1}}],[\"protocolutils\",{\"1\":{\"293\":3,\"294\":4}}],[\"protocol\",{\"1\":{\"125\":1,\"458\":2}}],[\"protostuff\",{\"1\":{\"64\":1,\"65\":1}}],[\"process直接抛异常会导致isend失效\",{\"1\":{\"522\":1}}],[\"process\",{\"1\":{\"506\":1,\"644\":1}}],[\"processing\",{\"1\":{\"174\":1}}],[\"processor\",{\"1\":{\"121\":1}}],[\"proceed\",{\"1\":{\"67\":1}}],[\"proceedingjoinpoint\",{\"1\":{\"67\":2,\"70\":1}}],[\"props\",{\"1\":{\"171\":1}}],[\"property\",{\"1\":{\"313\":2}}],[\"property>\",{\"1\":{\"64\":6,\"74\":1}}],[\"properties\",{\"1\":{\"171\":4,\"180\":5,\"183\":5,\"210\":4,\"326\":1,\"383\":1,\"664\":1,\"709\":1}}],[\"properly\",{\"1\":{\"101\":1,\"144\":1}}],[\"proposal\",{\"1\":{\"88\":1,\"89\":1}}],[\"producertype\",{\"1\":{\"66\":2}}],[\"prodetail\",{\"1\":{\"44\":1,\"49\":1}}],[\"projects\",{\"1\":{\"583\":1}}],[\"project\",{\"1\":{\"60\":1,\"130\":1,\"198\":1,\"205\":1,\"208\":1,\"270\":1,\"280\":1}}],[\"pv\",{\"1\":{\"4\":1}}],[\"dysmsapi\",{\"1\":{\"740\":1}}],[\"dynamictp\",{\"0\":{\"409\":1,\"418\":1,\"419\":1},\"1\":{\"409\":2,\"410\":1,\"414\":1,\"416\":1,\"418\":1,\"419\":1,\"423\":1,\"424\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"dynamic\",{\"1\":{\"278\":1,\"414\":2,\"416\":2,\"423\":2,\"424\":2,\"608\":2,\"616\":1}}],[\"dhmily\",{\"1\":{\"709\":2}}],[\"ds\",{\"1\":{\"616\":1}}],[\"dsl\",{\"1\":{\"66\":2}}],[\"dm\",{\"1\":{\"449\":1,\"458\":1}}],[\"dmaven\",{\"1\":{\"98\":2}}],[\"ddd\",{\"0\":{\"382\":1,\"396\":1},\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"dj\",{\"1\":{\"308\":1}}],[\"d19cf79f647a465ab9c5c66f430cad28\",{\"1\":{\"191\":1}}],[\"dup结尾标注\",{\"1\":{\"671\":1}}],[\"duration\",{\"1\":{\"136\":1,\"236\":3,\"271\":2}}],[\"dubbo框架不支持注解方式的使用\",{\"1\":{\"708\":1,\"714\":1}}],[\"dubbo3\",{\"1\":{\"624\":4}}],[\"dubbobodyisempty\",{\"1\":{\"289\":1}}],[\"dubbotagroutefromhttpheaders\",{\"1\":{\"289\":3}}],[\"dubbotest\",{\"1\":{\"282\":6,\"783\":3}}],[\"dubboparamresolveservice\",{\"1\":{\"289\":1}}],[\"dubboparams\",{\"1\":{\"232\":1}}],[\"dubboproxyservice\",{\"1\":{\"288\":1}}],[\"dubbo协议\",{\"1\":{\"277\":1}}],[\"dubboresponseplugin\",{\"0\":{\"290\":1},\"1\":{\"276\":1}}],[\"dubborulehandle\",{\"1\":{\"126\":1}}],[\"dubbo插件原理解析\",{\"0\":{\"275\":1}}],[\"dubbo<\",{\"1\":{\"74\":1,\"77\":1,\"280\":2,\"282\":1,\"709\":2,\"789\":2}}],[\"dubbo\",{\"0\":{\"74\":1,\"187\":1,\"277\":1,\"279\":1,\"282\":1,\"283\":1,\"287\":1,\"292\":1,\"293\":1,\"779\":1},\"1\":{\"62\":1,\"65\":1,\"77\":1,\"101\":1,\"124\":2,\"126\":1,\"129\":1,\"131\":4,\"163\":1,\"165\":1,\"174\":4,\"191\":1,\"208\":2,\"231\":2,\"232\":2,\"276\":6,\"277\":5,\"278\":3,\"281\":1,\"282\":2,\"284\":1,\"287\":2,\"288\":5,\"289\":4,\"290\":1,\"292\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"314\":2,\"316\":2,\"409\":1,\"419\":1,\"420\":1,\"624\":2,\"701\":1,\"702\":2,\"706\":1,\"708\":1,\"709\":7,\"712\":1,\"714\":1,\"778\":1,\"779\":1,\"780\":1,\"783\":5,\"784\":2,\"787\":4,\"789\":8,\"791\":2,\"792\":3}}],[\"dtflyx\",{\"1\":{\"435\":1}}],[\"dtprunnable\",{\"1\":{\"421\":1}}],[\"dtppostprocessor\",{\"1\":{\"412\":1}}],[\"dtp\",{\"1\":{\"412\":1,\"413\":1,\"422\":1}}],[\"dtpexecutor\",{\"1\":{\"409\":1,\"419\":1}}],[\"dts\",{\"1\":{\"383\":1}}],[\"dtse\",{\"0\":{\"51\":1}}],[\"dto\",{\"1\":{\"122\":8,\"123\":6,\"125\":6,\"126\":5,\"314\":1}}],[\"d30s\",{\"1\":{\"109\":2}}],[\"dcheckstyle\",{\"1\":{\"98\":1}}],[\"d751713988987e9331980363e24189ce\",{\"1\":{\"92\":2}}],[\"d\",{\"1\":{\"92\":6,\"101\":4,\"105\":3,\"108\":18,\"199\":1,\"208\":5,\"271\":9,\"406\":1,\"442\":1,\"448\":2,\"457\":3,\"465\":3,\"516\":2,\"517\":2,\"518\":1,\"581\":1,\"582\":1,\"692\":1}}],[\"dict\",{\"1\":{\"723\":1}}],[\"dicttag\",{\"1\":{\"604\":1}}],[\"dir\",{\"1\":{\"709\":2}}],[\"directives\",{\"1\":{\"397\":1}}],[\"directly\",{\"1\":{\"266\":1}}],[\"directory\",{\"1\":{\"176\":1,\"183\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"dinky\",{\"1\":{\"331\":1,\"339\":1}}],[\"diant\",{\"1\":{\"832\":1}}],[\"dian\",{\"1\":{\"317\":1}}],[\"digestutils\",{\"1\":{\"191\":1}}],[\"divide<\",{\"1\":{\"130\":1}}],[\"divideplugindatahandler\",{\"1\":{\"131\":2,\"162\":1}}],[\"dividepluginconfiguration\",{\"1\":{\"130\":1,\"220\":1}}],[\"divideplugin\",{\"0\":{\"233\":1,\"235\":1},\"1\":{\"129\":2,\"130\":3,\"131\":5,\"136\":1,\"219\":5,\"224\":2,\"231\":2,\"239\":2}}],[\"dividerulehandle\",{\"1\":{\"126\":2,\"131\":2,\"219\":2,\"224\":2,\"235\":2}}],[\"divideupstream>\",{\"1\":{\"133\":2}}],[\"divideupstream\",{\"1\":{\"123\":3,\"124\":4,\"125\":3,\"131\":3,\"133\":2,\"134\":5,\"135\":3,\"164\":3,\"219\":3,\"224\":3,\"227\":8,\"229\":7,\"235\":4}}],[\"divide\",{\"0\":{\"113\":1,\"116\":1},\"1\":{\"92\":1,\"105\":2,\"108\":12,\"112\":1,\"113\":4,\"116\":2,\"118\":1,\"124\":2,\"125\":1,\"131\":3,\"152\":2,\"162\":1,\"163\":1,\"164\":1,\"179\":1,\"204\":1,\"206\":1,\"219\":1,\"223\":1,\"224\":2,\"225\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"235\":2,\"236\":1,\"237\":1,\"314\":1,\"315\":1,\"316\":1}}],[\"dist\",{\"1\":{\"644\":1}}],[\"distuptor\",{\"1\":{\"64\":1}}],[\"disjob\",{\"0\":{\"403\":1,\"405\":1},\"1\":{\"404\":1,\"405\":2,\"406\":4,\"407\":3}}],[\"discovery\",{\"1\":{\"314\":1,\"315\":2}}],[\"discordslacktelegrammailpinningwechatflybooksmswebhook\",{\"1\":{\"459\":1}}],[\"discordslacktelegram邮件钉钉微信飞书短信webhook\",{\"1\":{\"445\":1,\"459\":1}}],[\"discord\",{\"1\":{\"53\":1,\"449\":1}}],[\"dispatcherhandler\",{\"1\":{\"258\":1,\"259\":7,\"273\":4}}],[\"display\",{\"1\":{\"208\":1,\"458\":2}}],[\"disposablebean\",{\"1\":{\"66\":2}}],[\"disruptor<>\",{\"1\":{\"66\":1}}],[\"disruptor<hmilytransactionevent>\",{\"1\":{\"66\":1}}],[\"disruptor\",{\"0\":{\"66\":2},\"1\":{\"61\":1,\"64\":1,\"66\":25,\"74\":2}}],[\"druiddatasource\",{\"1\":{\"723\":1}}],[\"druid\",{\"1\":{\"608\":2,\"798\":1}}],[\"dragon\",{\"1\":{\"317\":1,\"411\":2,\"413\":1,\"420\":2,\"422\":1}}],[\"drat\",{\"1\":{\"98\":1}}],[\"dropwhile\",{\"1\":{\"81\":2}}],[\"dromara团队发布全新架构hmily分布式事务的2\",{\"0\":{\"704\":1}}],[\"dromara<\",{\"1\":{\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":1,\"255\":1,\"270\":1,\"280\":1,\"282\":1,\"709\":3,\"788\":2,\"789\":4}}],[\"dromara课题项目介绍之系列一\",{\"0\":{\"34\":1}}],[\"dromara社区在华为云开发者大会精彩花絮\",{\"0\":{\"16\":1}}],[\"dromara开源社区将在开源集市展位等待大家\",{\"1\":{\"15\":1}}],[\"dromara\",{\"0\":{\"15\":1,\"20\":1,\"21\":2,\"28\":1,\"29\":1,\"31\":1,\"32\":1,\"37\":1,\"38\":1,\"39\":1,\"95\":1,\"307\":1,\"319\":1,\"403\":1,\"625\":1,\"626\":1,\"627\":1,\"635\":1,\"793\":1,\"807\":1,\"818\":1},\"1\":{\"3\":2,\"4\":1,\"5\":2,\"7\":3,\"8\":2,\"9\":4,\"10\":1,\"15\":1,\"16\":3,\"17\":1,\"18\":2,\"20\":1,\"22\":1,\"23\":1,\"27\":1,\"28\":1,\"31\":1,\"36\":1,\"37\":3,\"38\":3,\"39\":2,\"42\":3,\"44\":2,\"49\":1,\"50\":2,\"53\":1,\"56\":3,\"60\":1,\"93\":2,\"100\":1,\"150\":1,\"174\":1,\"200\":5,\"204\":2,\"205\":2,\"206\":2,\"208\":14,\"209\":2,\"210\":2,\"220\":2,\"231\":2,\"289\":1,\"299\":2,\"300\":3,\"301\":3,\"302\":2,\"303\":1,\"304\":4,\"305\":8,\"306\":2,\"308\":11,\"329\":1,\"331\":1,\"334\":2,\"336\":2,\"340\":2,\"342\":2,\"352\":1,\"354\":1,\"357\":1,\"402\":2,\"404\":2,\"407\":3,\"410\":1,\"414\":2,\"416\":2,\"423\":2,\"424\":2,\"436\":1,\"437\":1,\"440\":1,\"441\":2,\"443\":1,\"445\":2,\"447\":3,\"449\":2,\"452\":2,\"458\":47,\"459\":2,\"464\":2,\"465\":2,\"467\":2,\"468\":4,\"473\":2,\"476\":4,\"480\":2,\"492\":14,\"497\":2,\"509\":10,\"513\":2,\"522\":12,\"547\":1,\"576\":2,\"583\":1,\"587\":3,\"604\":1,\"610\":4,\"621\":1,\"627\":1,\"629\":2,\"632\":1,\"636\":2,\"643\":2,\"661\":1,\"665\":1,\"673\":1,\"702\":1,\"703\":2,\"709\":1,\"711\":2,\"718\":1,\"725\":2,\"727\":1,\"738\":1,\"739\":2,\"741\":1,\"749\":1,\"758\":1,\"763\":1,\"766\":2,\"782\":3,\"783\":1,\"786\":3,\"789\":3,\"804\":2,\"806\":2,\"807\":1,\"808\":3,\"809\":1,\"810\":1,\"811\":1,\"812\":2,\"814\":2,\"820\":2}}],[\"driverinfo\",{\"1\":{\"170\":1,\"171\":1}}],[\"driveraction\",{\"1\":{\"170\":1}}],[\"driversiterator\",{\"1\":{\"170\":3}}],[\"drivermanager\",{\"1\":{\"170\":7,\"171\":3,\"172\":4,\"173\":5}}],[\"driver\",{\"0\":{\"171\":1},\"1\":{\"64\":1,\"74\":1,\"77\":1,\"170\":18,\"171\":10,\"172\":6,\"173\":3,\"582\":2,\"709\":1,\"741\":2}}],[\"driverclassname\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"709\":1}}],[\"db\",{\"1\":{\"64\":1,\"74\":3,\"77\":1,\"123\":1,\"125\":1,\"582\":1,\"722\":1,\"723\":4,\"833\":1,\"834\":2}}],[\"deepin\",{\"1\":{\"639\":1,\"646\":1}}],[\"debian\",{\"1\":{\"448\":1,\"449\":1}}],[\"debezimu\",{\"1\":{\"383\":1}}],[\"debezium\",{\"1\":{\"354\":1}}],[\"debug\",{\"0\":{\"249\":1},\"1\":{\"70\":1,\"149\":1,\"167\":1,\"204\":1,\"205\":1,\"208\":1,\"209\":1,\"231\":1,\"235\":1,\"287\":1}}],[\"december\",{\"1\":{\"317\":1}}],[\"dengliming\",{\"1\":{\"317\":1}}],[\"detect\",{\"1\":{\"458\":1}}],[\"detectorofflinelinks\",{\"1\":{\"316\":1}}],[\"determining\",{\"1\":{\"249\":1}}],[\"design\",{\"0\":{\"818\":1,\"819\":1},\"1\":{\"640\":1,\"647\":1,\"820\":1}}],[\"designer\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"deserialize\",{\"1\":{\"294\":3}}],[\"desc\",{\"1\":{\"282\":1}}],[\"desc`\",{\"1\":{\"278\":1}}],[\"destroy\",{\"1\":{\"66\":1}}],[\"degradeexception\",{\"1\":{\"266\":1}}],[\"degrade\",{\"1\":{\"266\":1}}],[\"degraderule\",{\"1\":{\"266\":2}}],[\"degraderulemanager\",{\"1\":{\"266\":4}}],[\"degraderules\",{\"1\":{\"266\":3}}],[\"delta\",{\"1\":{\"252\":5}}],[\"delay\",{\"1\":{\"195\":2}}],[\"deleted\",{\"1\":{\"458\":2}}],[\"deletezkpathrecursive\",{\"1\":{\"142\":3}}],[\"deletebyquery\",{\"1\":{\"92\":1}}],[\"delete\",{\"0\":{\"659\":1},\"1\":{\"92\":1,\"142\":2,\"154\":3,\"161\":1,\"162\":1,\"604\":1,\"651\":1,\"817\":2}}],[\"dev33sa\",{\"1\":{\"624\":1}}],[\"device\",{\"0\":{\"379\":1,\"394\":1,\"401\":1},\"1\":{\"359\":5,\"360\":2,\"379\":5,\"394\":5,\"401\":5}}],[\"developer\",{\"1\":{\"313\":1,\"314\":1}}],[\"dev\",{\"1\":{\"79\":1,\"313\":1,\"334\":1,\"335\":1,\"644\":1,\"709\":1,\"741\":1,\"821\":1}}],[\"def\",{\"1\":{\"817\":4}}],[\"definition\",{\"1\":{\"788\":1}}],[\"defined用户自定义\",{\"1\":{\"567\":1}}],[\"defined\",{\"1\":{\"208\":1}}],[\"define\",{\"1\":{\"57\":1,\"444\":1}}],[\"defer\",{\"1\":{\"130\":1,\"136\":1,\"137\":1,\"220\":2,\"231\":1,\"237\":1,\"287\":1,\"290\":1}}],[\"defaultexcelresult\",{\"1\":{\"606\":1}}],[\"defaultk8ssecretname\",{\"1\":{\"313\":1}}],[\"defaultk8ssecretnamespace\",{\"1\":{\"313\":1}}],[\"defaultsignservice\",{\"1\":{\"195\":1}}],[\"defaults\",{\"1\":{\"171\":1,\"788\":1}}],[\"defaultsoulpluginchain\",{\"1\":{\"130\":4,\"220\":7,\"287\":2}}],[\"defaultwebclient\",{\"1\":{\"136\":2}}],[\"default\",{\"1\":{\"74\":1,\"126\":3,\"141\":6,\"155\":1,\"156\":6,\"157\":1,\"162\":1,\"199\":1,\"200\":1,\"209\":2,\"266\":1,\"271\":1,\"273\":1,\"278\":5,\"286\":1,\"313\":1,\"338\":1,\"406\":1,\"444\":1,\"709\":1,\"811\":2,\"814\":1}}],[\"deprecate\",{\"1\":{\"637\":1}}],[\"dependencies\",{\"1\":{\"411\":1}}],[\"dependency>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":5,\"282\":1,\"323\":1,\"326\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":2,\"814\":2}}],[\"deployment\",{\"1\":{\"340\":1}}],[\"deploy\",{\"1\":{\"73\":1,\"313\":1}}],[\"democontroller\",{\"1\":{\"740\":1}}],[\"demo地址调整\",{\"1\":{\"529\":1}}],[\"demo\",{\"0\":{\"73\":1,\"166\":1,\"173\":1},\"1\":{\"61\":1,\"74\":1,\"166\":1,\"173\":1,\"231\":1,\"370\":1,\"385\":1,\"608\":1,\"624\":1,\"639\":4,\"644\":2,\"646\":4,\"679\":1,\"702\":1,\"714\":2,\"773\":1}}],[\"dws\",{\"1\":{\"57\":1}}],[\"dologin\",{\"1\":{\"740\":1}}],[\"dolongpolling\",{\"1\":{\"144\":5,\"149\":3}}],[\"dos\",{\"1\":{\"603\":1}}],[\"doselect\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"229\":2}}],[\"doiphode\",{\"1\":{\"529\":1}}],[\"doris等新的监控类型和指标\",{\"1\":{\"448\":1}}],[\"dorefresh\",{\"1\":{\"162\":1}}],[\"double\",{\"1\":{\"249\":2}}],[\"doupdate\",{\"1\":{\"162\":2}}],[\"do\",{\"1\":{\"170\":1,\"458\":2,\"504\":1,\"505\":3,\"506\":2}}],[\"doprivileged\",{\"1\":{\"170\":1}}],[\"dog\",{\"1\":{\"166\":1}}],[\"dodelete\",{\"1\":{\"162\":1}}],[\"dofetchgroupconfig\",{\"1\":{\"148\":3,\"149\":3}}],[\"doexcute方法具体做了哪些事\",{\"1\":{\"234\":1}}],[\"doexcute\",{\"1\":{\"234\":1}}],[\"doexecute\",{\"1\":{\"129\":4,\"131\":3,\"219\":4,\"224\":3,\"234\":1,\"235\":1,\"249\":1,\"259\":1,\"266\":1,\"273\":3,\"288\":1}}],[\"does\",{\"1\":{\"144\":1}}],[\"doonerror\",{\"1\":{\"136\":1,\"236\":1,\"249\":1,\"273\":1}}],[\"doonsuccess\",{\"1\":{\"130\":1,\"220\":1,\"266\":1,\"273\":1}}],[\"domain\",{\"1\":{\"131\":2,\"219\":2,\"224\":2,\"235\":2,\"814\":1}}],[\"doc是一款适合企业和个人私有化部署使用的\",{\"1\":{\"831\":1}}],[\"documented\",{\"1\":{\"430\":2}}],[\"document\",{\"1\":{\"315\":1,\"458\":2}}],[\"documents\",{\"1\":{\"199\":1}}],[\"doc添加tag\",{\"1\":{\"314\":1}}],[\"doc\",{\"0\":{\"443\":1,\"830\":1},\"1\":{\"314\":3,\"315\":1,\"458\":4,\"610\":3,\"621\":1,\"831\":1}}],[\"docs\",{\"1\":{\"93\":1,\"150\":1,\"313\":5,\"314\":3,\"315\":1,\"334\":1,\"335\":1,\"442\":1,\"458\":1,\"703\":1,\"709\":1,\"782\":1,\"786\":1,\"789\":3}}],[\"dockerfile\",{\"1\":{\"458\":1}}],[\"dockerhub\",{\"1\":{\"56\":1,\"448\":1,\"457\":1,\"465\":1}}],[\"docker\",{\"0\":{\"333\":1,\"580\":1},\"1\":{\"53\":1,\"331\":1,\"333\":3,\"354\":2,\"356\":1,\"383\":1,\"395\":1,\"397\":1,\"402\":1,\"441\":1,\"442\":2,\"445\":1,\"448\":3,\"449\":1,\"452\":1,\"457\":5,\"459\":1,\"464\":1,\"465\":4,\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1,\"575\":1,\"577\":2,\"581\":1,\"582\":1,\"608\":1}}],[\"download\",{\"1\":{\"817\":2}}],[\"downloadobject\",{\"1\":{\"374\":1,\"389\":1}}],[\"down\",{\"1\":{\"64\":1,\"69\":1,\"74\":1}}],[\"donext\",{\"1\":{\"136\":2,\"236\":2}}],[\"done\",{\"1\":{\"18\":1}}],[\"dalston\",{\"1\":{\"701\":1}}],[\"david\",{\"1\":{\"619\":1}}],[\"damon\",{\"1\":{\"459\":1}}],[\"damonxue\",{\"1\":{\"317\":1}}],[\"dashboard\",{\"1\":{\"458\":2}}],[\"dag\",{\"1\":{\"405\":1,\"406\":1}}],[\"dante\",{\"0\":{\"351\":1,\"352\":1,\"355\":1,\"358\":1,\"361\":1,\"365\":1,\"367\":1,\"369\":1,\"375\":1,\"380\":1,\"382\":1,\"384\":1,\"390\":1,\"395\":1,\"396\":1,\"398\":1,\"402\":1},\"1\":{\"351\":1,\"352\":3,\"353\":2,\"354\":1,\"357\":1,\"358\":2,\"367\":8,\"368\":1,\"370\":1,\"374\":4,\"382\":8,\"385\":1,\"389\":4,\"396\":3,\"397\":6,\"402\":2}}],[\"daniela\",{\"1\":{\"15\":1}}],[\"day\",{\"1\":{\"308\":1}}],[\"da\",{\"1\":{\"170\":2}}],[\"datetimeutils\",{\"1\":{\"397\":1}}],[\"datetime\",{\"1\":{\"278\":2}}],[\"date\",{\"1\":{\"126\":2,\"148\":1,\"397\":1}}],[\"data`\",{\"1\":{\"278\":1}}],[\"dataid\",{\"1\":{\"209\":2,\"210\":5,\"709\":1}}],[\"datapath\",{\"1\":{\"206\":3}}],[\"datalist\",{\"1\":{\"162\":7}}],[\"datahandler>\",{\"1\":{\"161\":1}}],[\"datahandler\",{\"1\":{\"161\":2,\"162\":3}}],[\"datasource\",{\"1\":{\"608\":2,\"788\":3}}],[\"datasubscriber\",{\"1\":{\"161\":1}}],[\"datasync\",{\"1\":{\"150\":1}}],[\"datasyncconfiguration\",{\"1\":{\"140\":1,\"141\":2,\"156\":2,\"160\":3,\"200\":1}}],[\"datarefresh\",{\"1\":{\"148\":3}}],[\"datarefresh>\",{\"1\":{\"148\":1}}],[\"datarefreshfactory\",{\"1\":{\"148\":6}}],[\"database\",{\"1\":{\"126\":1,\"324\":1,\"325\":1,\"327\":2,\"328\":2,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"458\":1,\"709\":1,\"741\":1}}],[\"dataeventtypeenum\",{\"1\":{\"123\":1,\"125\":1,\"141\":7,\"142\":3,\"144\":1,\"153\":3,\"154\":1,\"156\":5,\"157\":5,\"158\":5,\"162\":2,\"200\":3,\"209\":1}}],[\"datachangetask\",{\"1\":{\"144\":3}}],[\"datachangedlistener\",{\"0\":{\"141\":1},\"1\":{\"141\":7,\"142\":2,\"155\":2,\"156\":7,\"157\":3,\"200\":5,\"209\":3}}],[\"datachangedevent\",{\"1\":{\"123\":1,\"125\":1,\"141\":1,\"153\":1,\"154\":1,\"155\":1,\"157\":1,\"200\":4,\"201\":1,\"203\":1,\"204\":1,\"209\":6}}],[\"datachangedeventdispatcher\",{\"1\":{\"92\":1,\"141\":2,\"142\":1,\"145\":2,\"155\":3,\"156\":1,\"157\":1,\"200\":6,\"204\":1,\"209\":6}}],[\"datacompare\",{\"1\":{\"15\":1}}],[\"data\",{\"1\":{\"15\":1,\"57\":1,\"74\":2,\"81\":1,\"88\":1,\"92\":3,\"101\":1,\"141\":3,\"142\":5,\"148\":13,\"149\":1,\"154\":4,\"155\":1,\"156\":1,\"157\":2,\"161\":3,\"163\":2,\"198\":2,\"199\":1,\"200\":10,\"205\":10,\"206\":7,\"208\":13,\"209\":7,\"210\":5,\"245\":1,\"272\":1,\"282\":1,\"288\":4,\"313\":1,\"357\":3,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"515\":1,\"520\":1,\"582\":1,\"683\":1,\"783\":1,\"788\":2}}],[\"dao\",{\"1\":{\"124\":1,\"126\":1,\"624\":6,\"802\":1}}],[\"lcn\",{\"1\":{\"792\":1}}],[\"ldap\",{\"1\":{\"526\":3,\"532\":3,\"538\":3,\"544\":3,\"554\":3,\"564\":3}}],[\"lq\",{\"1\":{\"461\":1}}],[\"l646505418\",{\"1\":{\"458\":2,\"461\":1}}],[\"luelueking\",{\"1\":{\"461\":1}}],[\"luxx\",{\"1\":{\"461\":1}}],[\"luoxuanzao\",{\"1\":{\"458\":2}}],[\"lu\",{\"1\":{\"420\":1}}],[\"luakeys\",{\"1\":{\"252\":1}}],[\"lua\",{\"0\":{\"252\":1},\"1\":{\"251\":2,\"252\":2,\"502\":1}}],[\"l2\",{\"1\":{\"313\":4}}],[\"l1\",{\"1\":{\"313\":2}}],[\"l3nvy\",{\"1\":{\"308\":1}}],[\"ls\",{\"1\":{\"209\":3}}],[\"lettuce\",{\"1\":{\"608\":1}}],[\"lettuceconnectionfactory\",{\"1\":{\"247\":4}}],[\"letter\",{\"1\":{\"458\":1}}],[\"least\",{\"1\":{\"315\":1}}],[\"leo\",{\"1\":{\"308\":1}}],[\"leisnull\",{\"1\":{\"234\":1}}],[\"left\",{\"1\":{\"149\":1}}],[\"length\",{\"1\":{\"92\":1,\"134\":3,\"293\":1,\"294\":4}}],[\"legacy\",{\"1\":{\"85\":2}}],[\"l\",{\"1\":{\"92\":8,\"249\":2,\"308\":1,\"499\":1}}],[\"lts\",{\"1\":{\"79\":11,\"313\":1}}],[\"lock4j\",{\"1\":{\"616\":1}}],[\"location\",{\"1\":{\"259\":1}}],[\"locating\",{\"1\":{\"167\":1}}],[\"localtime\",{\"1\":{\"651\":1}}],[\"localdate\",{\"1\":{\"651\":1}}],[\"localdatetime\",{\"1\":{\"191\":2,\"651\":1}}],[\"locale\",{\"1\":{\"458\":1}}],[\"localhost\",{\"1\":{\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"107\":1,\"108\":1,\"109\":4,\"117\":2,\"125\":1,\"140\":2,\"152\":1,\"198\":2,\"199\":10,\"208\":2,\"271\":1,\"272\":1,\"313\":1,\"428\":3,\"432\":2,\"457\":1,\"465\":1,\"585\":1,\"741\":1,\"788\":2}}],[\"local\",{\"1\":{\"74\":1,\"82\":1,\"198\":1,\"208\":1,\"252\":15,\"314\":1,\"709\":4}}],[\"lou的帮助\",{\"1\":{\"499\":1}}],[\"lol\",{\"1\":{\"308\":1}}],[\"lookupiterator\",{\"1\":{\"167\":1}}],[\"longs\",{\"1\":{\"249\":3}}],[\"longpollinglistener\",{\"1\":{\"144\":1}}],[\"longpollingclient\",{\"1\":{\"144\":14,\"149\":1}}],[\"long\",{\"1\":{\"79\":1,\"92\":8,\"133\":2,\"135\":4,\"136\":1,\"148\":2,\"149\":2,\"156\":1,\"236\":3,\"249\":1,\"763\":1}}],[\"lombok支持\",{\"1\":{\"529\":1}}],[\"lombok\",{\"1\":{\"74\":1,\"608\":1}}],[\"loadrules\",{\"1\":{\"266\":4}}],[\"loadresources\",{\"1\":{\"180\":2,\"183\":2}}],[\"loaddirectory\",{\"1\":{\"183\":2}}],[\"loadclass\",{\"1\":{\"180\":1,\"183\":2}}],[\"loadextensionclass\",{\"1\":{\"183\":2}}],[\"loadeddrivers\",{\"1\":{\"170\":2}}],[\"loaders\",{\"1\":{\"165\":2,\"176\":4}}],[\"loader\",{\"1\":{\"130\":1,\"167\":7}}],[\"loadinitialdrivers\",{\"1\":{\"170\":2}}],[\"loading\",{\"1\":{\"71\":5,\"644\":1}}],[\"loadingcache<string\",{\"1\":{\"71\":1}}],[\"loadingcache\",{\"1\":{\"71\":1}}],[\"loadbalance=\",{\"1\":{\"702\":2}}],[\"loadbalanceutils\",{\"1\":{\"131\":1,\"164\":2,\"219\":1,\"224\":1,\"229\":1,\"235\":2}}],[\"loadbalance\",{\"1\":{\"126\":1,\"131\":1,\"164\":5,\"171\":3,\"229\":4}}],[\"load\",{\"1\":{\"71\":1,\"165\":1,\"166\":7,\"167\":11,\"170\":1,\"176\":1,\"180\":1,\"183\":2,\"208\":2,\"220\":1,\"259\":1}}],[\"loadfactor\",{\"1\":{\"64\":1,\"74\":1}}],[\"loginid\",{\"1\":{\"624\":1}}],[\"logintype\",{\"1\":{\"624\":1}}],[\"loginuser\",{\"1\":{\"604\":1}}],[\"log=false来进行关闭整个\",{\"1\":{\"491\":1}}],[\"logback\",{\"1\":{\"397\":1,\"604\":1}}],[\"logo\",{\"0\":{\"499\":1},\"1\":{\"397\":1,\"456\":1,\"498\":1,\"499\":2,\"604\":1,\"738\":1,\"764\":1,\"820\":1}}],[\"loged\",{\"1\":{\"124\":1,\"126\":2}}],[\"loggingconsole\",{\"1\":{\"316\":1}}],[\"logging\",{\"1\":{\"101\":1,\"315\":1}}],[\"loggerfactory\",{\"1\":{\"101\":1}}],[\"logger\",{\"1\":{\"70\":1,\"101\":2,\"474\":1}}],[\"log4j2\",{\"1\":{\"567\":1}}],[\"log4j\",{\"1\":{\"101\":5,\"535\":1}}],[\"logutil\",{\"1\":{\"70\":1}}],[\"log\",{\"1\":{\"66\":1,\"74\":1,\"129\":2,\"130\":1,\"136\":1,\"141\":1,\"144\":1,\"148\":7,\"149\":4,\"158\":4,\"161\":1,\"195\":2,\"205\":1,\"210\":1,\"220\":1,\"235\":2,\"236\":2,\"249\":2,\"259\":2,\"272\":1,\"288\":1,\"316\":1,\"608\":1,\"644\":1,\"750\":1}}],[\"lmax\",{\"1\":{\"66\":5}}],[\"layui\",{\"1\":{\"799\":1}}],[\"labels\",{\"1\":{\"458\":1}}],[\"lahmxu\",{\"1\":{\"317\":1}}],[\"lan\",{\"1\":{\"317\":1}}],[\"language\",{\"1\":{\"458\":1,\"683\":1}}],[\"lang3\",{\"1\":{\"71\":1}}],[\"lang\",{\"1\":{\"67\":1,\"208\":3,\"286\":1}}],[\"lang=zh\",{\"1\":{\"44\":1}}],[\"lazyiterator\",{\"1\":{\"167\":4}}],[\"later\",{\"1\":{\"245\":1}}],[\"latest\",{\"1\":{\"148\":1,\"581\":1,\"582\":1}}],[\"latency\",{\"1\":{\"109\":2,\"220\":1}}],[\"last\",{\"1\":{\"188\":1,\"219\":1,\"224\":1,\"252\":10,\"255\":1}}],[\"lastring\",{\"1\":{\"133\":4}}],[\"lastmodifytime=1611248302571\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248301607\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248299419\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248295740\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248419077\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248419075\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248419069\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248419012\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248419010\",{\"1\":{\"92\":1}}],[\"lastmodifytime=1611248118794\",{\"1\":{\"92\":1}}],[\"lambda\",{\"1\":{\"48\":1,\"83\":1,\"84\":1,\"85\":1,\"269\":1,\"723\":1,\"791\":2}}],[\"library搜索\",{\"1\":{\"669\":1}}],[\"lionel\",{\"1\":{\"617\":1}}],[\"liuhao\",{\"1\":{\"617\":1}}],[\"licensekey\",{\"1\":{\"585\":1}}],[\"license\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"574\":1,\"577\":2,\"584\":1,\"585\":3,\"586\":1,\"624\":1}}],[\"light\",{\"1\":{\"501\":1}}],[\"littlezhongzer\",{\"1\":{\"458\":3}}],[\"little\",{\"1\":{\"458\":2}}],[\"liteflowchainelbuilder\",{\"1\":{\"517\":2}}],[\"liteflowcomponent\",{\"1\":{\"506\":1}}],[\"liteflow发布大版本v2\",{\"0\":{\"496\":1}}],[\"liteflowresponse的\",{\"1\":{\"490\":1}}],[\"liteflowresponse\",{\"1\":{\"474\":1}}],[\"liteflow\",{\"0\":{\"466\":1,\"467\":1,\"468\":1,\"470\":1,\"472\":1,\"473\":1,\"474\":1,\"477\":1,\"479\":1,\"480\":1,\"484\":1,\"493\":1,\"494\":1,\"497\":1,\"510\":1,\"512\":1,\"513\":1},\"1\":{\"15\":1,\"467\":6,\"468\":4,\"469\":9,\"470\":1,\"471\":2,\"473\":6,\"474\":1,\"476\":4,\"477\":1,\"478\":2,\"480\":6,\"482\":3,\"483\":4,\"484\":3,\"489\":1,\"491\":1,\"492\":14,\"494\":1,\"495\":2,\"497\":6,\"498\":2,\"499\":3,\"500\":2,\"501\":2,\"502\":3,\"503\":1,\"504\":1,\"505\":1,\"506\":3,\"508\":1,\"509\":10,\"510\":1,\"511\":2,\"513\":6,\"514\":3,\"515\":3,\"517\":2,\"518\":1,\"519\":1,\"520\":2,\"521\":2,\"522\":12,\"523\":2}}],[\"lisongning\",{\"1\":{\"458\":2}}],[\"listitem\",{\"1\":{\"397\":1}}],[\"lists\",{\"1\":{\"149\":1,\"227\":1}}],[\"listen\",{\"1\":{\"144\":1,\"148\":1,\"644\":1}}],[\"listenerbeans\",{\"1\":{\"155\":2,\"200\":2,\"209\":2}}],[\"listenerurl\",{\"1\":{\"149\":3}}],[\"listeners\",{\"1\":{\"141\":2,\"155\":3,\"156\":1,\"157\":1,\"200\":3,\"209\":2,\"210\":1}}],[\"listener\",{\"1\":{\"92\":3,\"141\":6,\"144\":2,\"149\":3,\"155\":6,\"156\":3,\"157\":7,\"200\":9,\"204\":2,\"209\":4,\"210\":8,\"293\":1,\"294\":1}}],[\"listall\",{\"1\":{\"141\":1,\"200\":3}}],[\"list<baseconfig>\",{\"1\":{\"773\":1}}],[\"list<flowrule>\",{\"1\":{\"266\":1}}],[\"list<authdatasubscriber>\",{\"1\":{\"148\":1,\"161\":1,\"205\":2}}],[\"list<appauthdata>\",{\"1\":{\"141\":2,\"155\":1,\"156\":1,\"157\":2,\"200\":1}}],[\"list<metadatasubscriber>\",{\"1\":{\"148\":1,\"161\":1,\"205\":2}}],[\"list<metadata>\",{\"1\":{\"141\":2,\"155\":1,\"156\":1,\"157\":2}}],[\"list<configgroupenum>\",{\"1\":{\"144\":3}}],[\"list<t>\",{\"1\":{\"141\":1,\"162\":1}}],[\"list<plugindata>\",{\"1\":{\"141\":4,\"142\":2,\"144\":1,\"148\":1,\"155\":1,\"156\":1,\"157\":2,\"162\":1,\"200\":1}}],[\"list<degraderule>\",{\"1\":{\"266\":1}}],[\"list<datachangedlistener>\",{\"1\":{\"141\":1,\"155\":1,\"200\":1}}],[\"list<divideupstream>\",{\"1\":{\"123\":1,\"125\":1,\"131\":1,\"133\":1,\"134\":1,\"135\":1,\"164\":1,\"219\":1,\"224\":1,\"225\":1,\"227\":4,\"229\":3,\"235\":1}}],[\"list<string>\",{\"1\":{\"191\":1,\"205\":1,\"206\":1,\"249\":2}}],[\"list<selectordata>\",{\"1\":{\"141\":2,\"155\":1,\"156\":1,\"157\":2,\"200\":1}}],[\"list<selectorconditiondto>\",{\"1\":{\"92\":1,\"124\":1}}],[\"list<soulplugin>\",{\"1\":{\"130\":4,\"220\":2,\"231\":1,\"259\":2}}],[\"list<ruledata>\",{\"1\":{\"129\":1,\"141\":2,\"155\":1,\"156\":1,\"157\":2,\"200\":1,\"209\":3,\"219\":1,\"224\":1,\"234\":1}}],[\"list<ruleconditiondto>\",{\"1\":{\"126\":1}}],[\"list\",{\"1\":{\"81\":1,\"722\":1,\"723\":1}}],[\"list=org\",{\"1\":{\"49\":1}}],[\"list=pro\",{\"1\":{\"44\":1}}],[\"limaiwang\",{\"1\":{\"335\":1}}],[\"liming\",{\"1\":{\"308\":1}}],[\"limit\",{\"1\":{\"271\":2,\"709\":1}}],[\"limitforperiod\",{\"1\":{\"270\":1}}],[\"limitrefreshperiod\",{\"1\":{\"270\":1}}],[\"limiterhandle\",{\"1\":{\"249\":3}}],[\"limiter\",{\"1\":{\"244\":1,\"266\":2}}],[\"lianjunwei\",{\"1\":{\"317\":1}}],[\"liaolzy\",{\"1\":{\"317\":1}}],[\"lijay7674\",{\"1\":{\"317\":1}}],[\"li\",{\"1\":{\"317\":1}}],[\"liquid\",{\"1\":{\"308\":1}}],[\"liquan\",{\"1\":{\"199\":1}}],[\"like\",{\"1\":{\"114\":1}}],[\"lingluojun\",{\"1\":{\"461\":1}}],[\"linzehao\",{\"1\":{\"335\":1}}],[\"linshenkx\",{\"1\":{\"335\":1}}],[\"link\",{\"1\":{\"445\":1,\"459\":1}}],[\"linkedhashmap\",{\"0\":{\"749\":1},\"1\":{\"749\":1}}],[\"linkedmultivaluemap<>\",{\"1\":{\"149\":1}}],[\"linkedblockingqueue<>\",{\"1\":{\"66\":1,\"67\":1,\"121\":1,\"148\":1}}],[\"linkedblockingqueue\",{\"1\":{\"66\":1,\"67\":1,\"420\":1}}],[\"linkplain\",{\"1\":{\"66\":2,\"70\":1,\"71\":2,\"74\":2,\"153\":2,\"200\":1,\"205\":1,\"209\":1,\"271\":2}}],[\"linux\",{\"1\":{\"15\":1,\"54\":1,\"445\":1,\"449\":3,\"458\":1,\"459\":1,\"639\":2,\"646\":2}}],[\"lfloggermanager\",{\"1\":{\"474\":1}}],[\"lflog\",{\"1\":{\"474\":1}}],[\"lf\",{\"1\":{\"15\":1,\"498\":1,\"520\":1}}],[\"十余个分论坛组成\",{\"1\":{\"15\":1}}],[\"由主\",{\"1\":{\"455\":1}}],[\"由此来判断是否需要更新\",{\"1\":{\"515\":1}}],[\"由此验证限流生效\",{\"1\":{\"271\":1}}],[\"由此而言就保证了更改\",{\"1\":{\"247\":1}}],[\"由于一个参数失效\",{\"1\":{\"720\":1}}],[\"由于其驱动本身做了不兼容修改\",{\"1\":{\"720\":1}}],[\"由于\",{\"1\":{\"590\":1,\"612\":1}}],[\"由于关系型数据库不像注册中心会进行推送变更\",{\"1\":{\"515\":1}}],[\"由于终端的显示模式可能受限\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"由于本编文章主要追溯\",{\"1\":{\"232\":1}}],[\"由于是第一次启动\",{\"1\":{\"148\":1}}],[\"由探活任务定期主动更新\",{\"1\":{\"228\":1}}],[\"由\",{\"1\":{\"221\":1}}],[\"由监听事件处理类\",{\"1\":{\"209\":1}}],[\"由一个主论坛\",{\"1\":{\"15\":1}}],[\"由开放原子开源基金会\",{\"1\":{\"15\":1}}],[\"editor\",{\"1\":{\"822\":1}}],[\"eos\",{\"1\":{\"808\":1}}],[\"egg\",{\"1\":{\"636\":2,\"642\":1,\"643\":2,\"649\":1}}],[\"etra优化\",{\"1\":{\"547\":1}}],[\"etcd\",{\"1\":{\"316\":1,\"409\":1,\"419\":1,\"713\":1,\"714\":1}}],[\"eagerdtpexecutor\",{\"1\":{\"409\":1,\"419\":1}}],[\"easley\",{\"1\":{\"308\":1}}],[\"easyexcel\",{\"1\":{\"608\":1,\"616\":1}}],[\"easy\",{\"0\":{\"45\":1},\"1\":{\"38\":1,\"46\":2,\"49\":1}}],[\"eureka\",{\"1\":{\"787\":1}}],[\"eurecalulu\",{\"1\":{\"317\":1}}],[\"eurynome\",{\"1\":{\"352\":1}}],[\"euleros\",{\"1\":{\"57\":1,\"442\":1,\"449\":1}}],[\"e2e\",{\"1\":{\"314\":5,\"315\":2}}],[\"everything\",{\"1\":{\"308\":1}}],[\"eventthread\",{\"1\":{\"199\":2}}],[\"eventtype\",{\"1\":{\"141\":8,\"142\":5,\"144\":1,\"153\":3,\"154\":1,\"156\":10,\"157\":15,\"161\":4,\"162\":3,\"209\":3}}],[\"eventtypeenum\",{\"1\":{\"66\":2,\"70\":1,\"162\":2}}],[\"eventpublisher\",{\"1\":{\"123\":1,\"125\":2,\"153\":1,\"200\":4,\"209\":2}}],[\"event\",{\"1\":{\"15\":1,\"66\":3,\"92\":1,\"123\":1,\"125\":1,\"141\":13,\"153\":1,\"154\":6,\"155\":13,\"156\":8,\"157\":13,\"199\":2,\"200\":6,\"209\":6,\"324\":6,\"325\":6,\"327\":6,\"328\":7,\"397\":3,\"822\":1}}],[\"evan\",{\"1\":{\"308\":1}}],[\"eclipse\",{\"1\":{\"216\":1,\"308\":1,\"801\":1}}],[\"error\",{\"1\":{\"136\":2,\"137\":9,\"149\":1,\"153\":1,\"158\":9,\"167\":2,\"183\":2,\"195\":3,\"199\":1,\"208\":3,\"235\":9,\"236\":5,\"237\":9,\"249\":5,\"259\":1,\"266\":15,\"272\":1,\"273\":1,\"288\":12,\"290\":5,\"293\":2,\"458\":4}}],[\"email\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"587\":1,\"806\":1}}],[\"emptylist\",{\"1\":{\"130\":1,\"161\":2,\"205\":2,\"210\":2,\"220\":1,\"259\":1}}],[\"empty\",{\"1\":{\"130\":1,\"153\":1,\"209\":1,\"220\":1,\"231\":1,\"287\":1,\"289\":1}}],[\"embedded\",{\"1\":{\"101\":1,\"208\":1}}],[\"eq\",{\"1\":{\"126\":1,\"709\":3}}],[\"equals\",{\"1\":{\"123\":1,\"124\":4,\"125\":1,\"129\":2,\"158\":1,\"209\":1,\"232\":1,\"247\":1,\"266\":4,\"271\":1,\"293\":2,\"294\":2}}],[\"elasticseach\",{\"1\":{\"792\":1}}],[\"elasticsearch\",{\"1\":{\"46\":1,\"48\":2,\"331\":1,\"445\":1,\"449\":1,\"458\":1,\"459\":1}}],[\"electron\",{\"1\":{\"636\":3,\"642\":1,\"643\":3,\"644\":3,\"649\":1}}],[\"electronegg\",{\"0\":{\"636\":1,\"643\":1}}],[\"elementplus\",{\"1\":{\"608\":1,\"820\":1}}],[\"element\",{\"1\":{\"608\":1}}],[\"elementtype\",{\"1\":{\"430\":4}}],[\"el表达式动态组装\",{\"1\":{\"522\":1}}],[\"el规则的写法\",{\"1\":{\"521\":1}}],[\"elbus\",{\"1\":{\"517\":2}}],[\"el\",{\"0\":{\"517\":1},\"1\":{\"469\":1,\"483\":1,\"489\":1,\"517\":8,\"519\":1,\"604\":1}}],[\"elif表达式中目前无法加入and\",{\"1\":{\"468\":1}}],[\"elk\",{\"1\":{\"397\":1,\"422\":1}}],[\"else\",{\"1\":{\"92\":1,\"123\":2,\"124\":6,\"125\":2,\"126\":1,\"129\":1,\"130\":2,\"137\":1,\"148\":2,\"153\":1,\"167\":3,\"170\":1,\"171\":1,\"219\":1,\"224\":1,\"227\":2,\"228\":2,\"232\":1,\"234\":1,\"236\":1,\"259\":1,\"266\":3,\"289\":1,\"293\":1,\"294\":4}}],[\"epsilon\",{\"1\":{\"83\":2}}],[\"effectively\",{\"1\":{\"81\":1}}],[\"ee\",{\"1\":{\"79\":1,\"83\":2,\"308\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"547\":1,\"554\":1,\"564\":1,\"644\":11}}],[\"e\",{\"1\":{\"71\":1,\"101\":1,\"126\":2,\"136\":4,\"148\":5,\"149\":6,\"158\":4,\"170\":1,\"173\":6,\"183\":3,\"206\":2,\"208\":1,\"228\":1,\"236\":4,\"271\":9,\"294\":8,\"308\":1,\"457\":6,\"465\":6,\"487\":1,\"516\":1,\"518\":1,\"678\":1}}],[\"exitchildjob\",{\"1\":{\"637\":1}}],[\"existed\",{\"1\":{\"458\":1}}],[\"exists\",{\"1\":{\"200\":3,\"205\":1,\"278\":1,\"458\":2,\"817\":4}}],[\"exist\",{\"1\":{\"122\":2,\"123\":4,\"125\":4}}],[\"example\",{\"1\":{\"316\":1}}],[\"examples\",{\"1\":{\"103\":2,\"106\":1,\"116\":2,\"231\":1,\"270\":1,\"272\":1}}],[\"examples模块添加到\",{\"1\":{\"102\":1}}],[\"extname\",{\"1\":{\"723\":1}}],[\"extra\",{\"1\":{\"624\":1}}],[\"extractor\",{\"1\":{\"315\":1}}],[\"extern\",{\"1\":{\"458\":1}}],[\"extension\",{\"1\":{\"174\":1,\"183\":1,\"335\":1,\"822\":1}}],[\"extensionloader<>\",{\"1\":{\"176\":1}}],[\"extensionloader<\",{\"1\":{\"176\":1}}],[\"extensionloader<t>\",{\"1\":{\"176\":6}}],[\"extensionloader\",{\"0\":{\"176\":1},\"1\":{\"164\":2,\"175\":1,\"176\":7,\"177\":1,\"178\":1,\"182\":1,\"183\":1,\"229\":2,\"294\":1}}],[\"extendapi\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"extend\",{\"1\":{\"174\":1,\"637\":1}}],[\"extends=\",{\"1\":{\"518\":3}}],[\"extends\",{\"1\":{\"126\":3,\"144\":1,\"161\":1,\"162\":1,\"170\":1,\"266\":2,\"506\":1}}],[\"ext\",{\"1\":{\"278\":2,\"315\":1,\"515\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"ext`\",{\"1\":{\"278\":1}}],[\"exeute\",{\"1\":{\"234\":1}}],[\"execpromise\",{\"1\":{\"637\":1}}],[\"exec\",{\"1\":{\"92\":1}}],[\"execution\",{\"1\":{\"74\":1,\"491\":1}}],[\"executionexception\",{\"1\":{\"71\":2}}],[\"execute2respwithrid\",{\"1\":{\"474\":1}}],[\"executequery\",{\"1\":{\"173\":2}}],[\"execute\",{\"0\":{\"251\":1},\"1\":{\"67\":6,\"128\":1,\"129\":6,\"130\":5,\"131\":1,\"136\":3,\"137\":2,\"144\":3,\"148\":1,\"219\":4,\"220\":5,\"224\":4,\"231\":3,\"232\":2,\"234\":2,\"235\":1,\"236\":2,\"237\":2,\"249\":2,\"259\":1,\"266\":1,\"273\":3,\"287\":4,\"288\":1,\"290\":2,\"428\":1}}],[\"executoradapter\",{\"1\":{\"411\":1}}],[\"executor=\",{\"1\":{\"148\":1}}],[\"executorservice\",{\"1\":{\"121\":1}}],[\"executor\",{\"1\":{\"66\":5,\"67\":6,\"148\":6,\"161\":2,\"162\":1,\"273\":1}}],[\"ex\",{\"1\":{\"171\":1}}],[\"excludelist\",{\"1\":{\"624\":2}}],[\"excelwriter\",{\"1\":{\"723\":1}}],[\"excelbase\",{\"1\":{\"723\":2}}],[\"excelreader\",{\"1\":{\"723\":2}}],[\"excelutil\",{\"1\":{\"722\":1}}],[\"excel\",{\"1\":{\"442\":1,\"608\":1,\"617\":3,\"618\":1}}],[\"exception\",{\"1\":{\"67\":1,\"126\":1,\"149\":1,\"153\":1,\"158\":2,\"173\":2,\"208\":5,\"209\":1,\"210\":1,\"236\":1,\"266\":2,\"272\":2,\"289\":4,\"294\":1,\"374\":1,\"389\":1,\"487\":3,\"506\":1,\"637\":1,\"802\":1}}],[\"excute的方法和作用了\",{\"1\":{\"249\":1}}],[\"excute方法进行埋点\",{\"1\":{\"231\":1}}],[\"excute\",{\"1\":{\"219\":1,\"231\":1,\"232\":2,\"234\":1,\"237\":1}}],[\"exchangefunction\",{\"1\":{\"136\":1}}],[\"exchange\",{\"1\":{\"129\":11,\"130\":6,\"131\":6,\"136\":15,\"137\":6,\"195\":2,\"219\":12,\"220\":6,\"224\":12,\"231\":4,\"232\":7,\"234\":9,\"235\":10,\"236\":22,\"237\":6,\"249\":4,\"259\":9,\"266\":11,\"273\":18,\"287\":6,\"288\":12,\"289\":4,\"290\":5}}],[\"export\",{\"1\":{\"286\":1}}],[\"exporter\",{\"1\":{\"54\":1}}],[\"exponential\",{\"1\":{\"236\":1}}],[\"exposure\",{\"1\":{\"313\":1}}],[\"exposing\",{\"1\":{\"101\":1,\"208\":1}}],[\"expose\",{\"1\":{\"74\":1}}],[\"encoded\",{\"1\":{\"677\":1}}],[\"encryptutils\",{\"1\":{\"605\":2,\"617\":1}}],[\"enhance\",{\"1\":{\"458\":1}}],[\"enhancements\",{\"0\":{\"340\":1}}],[\"enhancement\",{\"1\":{\"88\":1,\"89\":1}}],[\"en\",{\"1\":{\"334\":1,\"335\":1}}],[\"env\",{\"1\":{\"313\":1,\"664\":4,\"684\":1,\"709\":1}}],[\"environment\",{\"0\":{\"676\":1,\"684\":1,\"685\":1},\"1\":{\"199\":6,\"458\":1,\"675\":1,\"677\":2,\"678\":2,\"679\":1,\"683\":2,\"692\":1}}],[\"engine\",{\"1\":{\"278\":1,\"368\":1,\"397\":1}}],[\"endwith\",{\"1\":{\"723\":1}}],[\"end\",{\"1\":{\"188\":1,\"252\":3,\"789\":4,\"814\":1}}],[\"endpoints\",{\"1\":{\"313\":1}}],[\"endpoint\",{\"1\":{\"101\":1,\"208\":3,\"409\":1,\"419\":1}}],[\"endpointlinksresolver\",{\"1\":{\"101\":1,\"208\":1}}],[\"enumutil\",{\"1\":{\"723\":1}}],[\"enumeration<url>\",{\"1\":{\"183\":1}}],[\"enummap<>\",{\"1\":{\"148\":1,\"161\":1}}],[\"enummap<configgroupenum\",{\"1\":{\"148\":1,\"161\":1}}],[\"enum\",{\"1\":{\"148\":7,\"154\":5,\"161\":7}}],[\"enums\",{\"1\":{\"66\":1,\"67\":1,\"74\":2,\"314\":1,\"802\":1}}],[\"entry\",{\"1\":{\"724\":1}}],[\"entryset\",{\"1\":{\"135\":1}}],[\"entity\",{\"1\":{\"66\":2,\"67\":1,\"71\":1,\"354\":1}}],[\"enablefilestorage\",{\"1\":{\"815\":1}}],[\"enablefilestorage注解\",{\"1\":{\"815\":1}}],[\"enable需要配置为false\",{\"1\":{\"585\":1}}],[\"enable\",{\"1\":{\"266\":2,\"271\":1,\"585\":1,\"814\":1}}],[\"enableconfigurationproperties\",{\"1\":{\"141\":1,\"156\":2,\"160\":1,\"200\":3}}],[\"enabled\",{\"1\":{\"124\":1,\"126\":2,\"140\":2,\"141\":1,\"156\":4,\"160\":2,\"199\":1,\"208\":3,\"313\":5,\"314\":1,\"702\":1,\"788\":1}}],[\"enable=false\",{\"1\":{\"92\":1}}],[\"enlistparticipant\",{\"1\":{\"70\":1}}],[\"establishment\",{\"1\":{\"199\":2}}],[\"established\",{\"1\":{\"199\":1}}],[\"es\",{\"0\":{\"45\":1},\"1\":{\"38\":1,\"46\":2,\"47\":1,\"49\":1}}],[\"ebpf\",{\"1\":{\"15\":1}}],[\"wget\",{\"1\":{\"788\":1}}],[\"wdhcr\",{\"1\":{\"615\":1}}],[\"wxjava\",{\"1\":{\"354\":1,\"368\":1}}],[\"wujt7eyzztbxxxxxxehsp6xxxx\",{\"1\":{\"740\":1}}],[\"wu\",{\"1\":{\"308\":1}}],[\"wyj\",{\"1\":{\"308\":1}}],[\"word\",{\"1\":{\"834\":1}}],[\"world\",{\"1\":{\"272\":1,\"282\":1,\"709\":6}}],[\"work\",{\"1\":{\"105\":3,\"108\":18,\"583\":1}}],[\"wiki\",{\"1\":{\"610\":1,\"831\":2,\"836\":3}}],[\"wikis\",{\"1\":{\"610\":4}}],[\"witt\",{\"1\":{\"308\":1}}],[\"withoutfallback\",{\"1\":{\"273\":2}}],[\"with\",{\"1\":{\"79\":1,\"81\":2,\"126\":2,\"144\":1,\"208\":2,\"458\":1}}],[\"win\",{\"1\":{\"724\":1}}],[\"wind\",{\"1\":{\"727\":1,\"741\":1,\"766\":1}}],[\"windsearcher\",{\"1\":{\"420\":1}}],[\"windlfu\",{\"1\":{\"316\":1}}],[\"windows\",{\"1\":{\"314\":1,\"445\":1,\"449\":1,\"459\":1,\"639\":1,\"646\":1,\"675\":1}}],[\"window\",{\"1\":{\"271\":2,\"688\":1}}],[\"wincher\",{\"1\":{\"308\":1}}],[\"williamsky\",{\"1\":{\"308\":1}}],[\"will\",{\"1\":{\"149\":1,\"199\":1,\"458\":1}}],[\"what\",{\"0\":{\"441\":1}}],[\"while\",{\"1\":{\"149\":3,\"167\":1,\"170\":1,\"173\":2,\"183\":1,\"505\":1}}],[\"where\",{\"1\":{\"126\":1}}],[\"when线程池隔离支持\",{\"1\":{\"522\":1}}],[\"when增加must语法\",{\"1\":{\"522\":1}}],[\"when\",{\"0\":{\"516\":1,\"521\":1},\"1\":{\"74\":1,\"156\":4,\"458\":4,\"504\":1,\"516\":3,\"517\":2,\"521\":4}}],[\"ws\",{\"1\":{\"140\":1,\"788\":1,\"801\":1}}],[\"writewith\",{\"1\":{\"137\":1,\"237\":1}}],[\"wrk\",{\"1\":{\"109\":2}}],[\"w520\",{\"1\":{\"110\":1}}],[\"w593\",{\"1\":{\"100\":1}}],[\"w693\",{\"1\":{\"107\":1}}],[\"w684\",{\"1\":{\"104\":1}}],[\"w\",{\"1\":{\"101\":2,\"208\":2}}],[\"w917\",{\"1\":{\"101\":1}}],[\"w1675\",{\"1\":{\"110\":1}}],[\"w1096\",{\"1\":{\"108\":1}}],[\"w1104\",{\"1\":{\"106\":1}}],[\"w1186\",{\"1\":{\"100\":1}}],[\"w1262\",{\"1\":{\"100\":1}}],[\"w1723\",{\"1\":{\"98\":1}}],[\"wangbq\",{\"1\":{\"615\":1}}],[\"wang\",{\"1\":{\"461\":1}}],[\"wangkang1\",{\"1\":{\"335\":2}}],[\"wanyaoasiainfo\",{\"1\":{\"317\":2}}],[\"watermark\",{\"1\":{\"234\":1}}],[\"watch\",{\"1\":{\"206\":1}}],[\"watchmetadata\",{\"1\":{\"205\":1}}],[\"watchappauth\",{\"1\":{\"205\":1}}],[\"watcherplugin\",{\"1\":{\"205\":2}}],[\"watcherall\",{\"1\":{\"205\":3}}],[\"watcherdata\",{\"1\":{\"205\":3,\"208\":1,\"210\":5}}],[\"watcher=org\",{\"1\":{\"199\":1}}],[\"waitintervalfunctioninopenstate\",{\"1\":{\"270\":1}}],[\"wait\",{\"1\":{\"148\":1,\"271\":1}}],[\"wafplugin\",{\"1\":{\"231\":1}}],[\"waf\",{\"1\":{\"129\":2,\"131\":2,\"231\":1,\"787\":1}}],[\"warm\",{\"1\":{\"266\":3}}],[\"warmup\",{\"1\":{\"125\":1}}],[\"warning\",{\"1\":{\"458\":1}}],[\"warn\",{\"1\":{\"101\":3,\"148\":2,\"149\":1}}],[\"walking\",{\"1\":{\"81\":1}}],[\"was\",{\"1\":{\"74\":1,\"148\":1,\"156\":4}}],[\"way\",{\"1\":{\"74\":1,\"318\":1}}],[\"wechat\",{\"1\":{\"806\":1}}],[\"wemq应运而生\",{\"1\":{\"794\":1}}],[\"wemq\",{\"0\":{\"793\":1},\"1\":{\"794\":4,\"803\":2,\"804\":2,\"806\":1}}],[\"wei\",{\"1\":{\"619\":1}}],[\"weightedroundrobin\",{\"1\":{\"135\":13}}],[\"weightedroundrobin>\",{\"1\":{\"135\":2}}],[\"weight\",{\"1\":{\"125\":1,\"134\":3,\"135\":5}}],[\"weigher<string\",{\"1\":{\"71\":1}}],[\"weigher\",{\"1\":{\"71\":2}}],[\"webdav\",{\"1\":{\"808\":2}}],[\"web服务\",{\"1\":{\"802\":1}}],[\"website\",{\"1\":{\"449\":1,\"703\":1,\"782\":1}}],[\"webserver\",{\"1\":{\"411\":1}}],[\"websocket<\",{\"1\":{\"788\":1}}],[\"websocketclient\",{\"1\":{\"161\":2}}],[\"websocketcontroller\",{\"1\":{\"157\":1,\"158\":1}}],[\"websocketconfig\",{\"1\":{\"92\":1,\"161\":7}}],[\"websocketcollector\",{\"1\":{\"92\":1,\"142\":1,\"156\":4,\"157\":5,\"158\":2,\"160\":5}}],[\"websocketsyncproperties\",{\"1\":{\"156\":1,\"160\":1}}],[\"websocketsyncdataservice\",{\"1\":{\"101\":1,\"161\":4}}],[\"websocketsyncdataconfiguration\",{\"1\":{\"101\":1,\"161\":2}}],[\"websocketlistener\",{\"1\":{\"156\":2,\"160\":2}}],[\"websocketdatahandler\",{\"1\":{\"161\":6,\"162\":1}}],[\"websocketdata<metadata>\",{\"1\":{\"157\":1}}],[\"websocketdata<appauthdata>\",{\"1\":{\"157\":1}}],[\"websocketdata<ruledata>\",{\"1\":{\"157\":1}}],[\"websocketdata<selectordata>\",{\"1\":{\"157\":1}}],[\"websocketdata<>\",{\"1\":{\"142\":1,\"157\":5}}],[\"websocketdata<plugindata>\",{\"1\":{\"142\":1,\"157\":1}}],[\"websocketdata\",{\"1\":{\"142\":2,\"157\":5,\"161\":6}}],[\"websocketdatachangedlistener\",{\"1\":{\"92\":3,\"142\":1,\"156\":4,\"157\":3}}],[\"websocket\",{\"0\":{\"159\":1,\"160\":1,\"161\":1},\"1\":{\"33\":1,\"92\":14,\"101\":2,\"112\":1,\"125\":1,\"126\":1,\"127\":3,\"140\":3,\"142\":3,\"150\":1,\"156\":8,\"157\":1,\"158\":10,\"160\":6,\"161\":8,\"162\":1,\"163\":2,\"232\":1,\"314\":2,\"315\":1,\"316\":1,\"608\":2,\"617\":1,\"783\":3,\"785\":1,\"788\":3,\"790\":1}}],[\"webjars\",{\"1\":{\"360\":1,\"368\":1}}],[\"webfilter\",{\"1\":{\"315\":1}}],[\"webflux<\",{\"1\":{\"788\":1}}],[\"webfluxresultutils\",{\"0\":{\"291\":1},\"1\":{\"137\":2,\"235\":2,\"236\":1,\"237\":2,\"249\":1,\"266\":1,\"276\":1,\"288\":2,\"290\":2}}],[\"webflux\",{\"1\":{\"30\":1,\"259\":2,\"260\":2}}],[\"webcilentresponseplugin\",{\"1\":{\"239\":1}}],[\"webclientresponse\",{\"1\":{\"237\":1}}],[\"webclientresponseclient\",{\"0\":{\"137\":1},\"1\":{\"137\":1}}],[\"webclientresponseplugin\",{\"0\":{\"237\":1},\"1\":{\"131\":1,\"208\":1,\"231\":2}}],[\"webclient\",{\"1\":{\"136\":4,\"236\":4,\"237\":1}}],[\"webclientplugin\",{\"0\":{\"136\":1,\"236\":1},\"1\":{\"105\":1,\"108\":6,\"131\":1,\"136\":2,\"231\":2,\"239\":1}}],[\"webhandler\",{\"1\":{\"130\":2,\"220\":1,\"259\":3}}],[\"webhook\",{\"1\":{\"53\":1,\"449\":1}}],[\"web\",{\"0\":{\"640\":1,\"647\":1},\"1\":{\"101\":2,\"136\":1,\"208\":2,\"217\":1,\"220\":1,\"313\":1,\"447\":1,\"448\":1,\"452\":1,\"458\":2,\"464\":1,\"526\":1,\"532\":1,\"535\":2,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"586\":1,\"608\":1,\"640\":1,\"647\":1,\"781\":1,\"783\":4,\"784\":1,\"791\":3,\"802\":2}}],[\"web3\",{\"1\":{\"15\":1}}],[\"www\",{\"1\":{\"15\":1,\"60\":1,\"407\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"613\":3,\"642\":1,\"649\":1,\"672\":1}}],[\"各有特点\",{\"1\":{\"503\":1}}],[\"各式各样\",{\"1\":{\"396\":1}}],[\"各种拼装\",{\"1\":{\"137\":1}}],[\"各个子项目在此期间\",{\"1\":{\"306\":1}}],[\"各个数据库连接包中关于\",{\"1\":{\"170\":1}}],[\"各个节点被访问的可能性是一致的\",{\"1\":{\"133\":1}}],[\"各个领域的专家齐聚一堂\",{\"1\":{\"17\":1}}],[\"各个行业的结合与落地实践\",{\"1\":{\"15\":1}}],[\"各票种价格从\",{\"1\":{\"13\":1}}],[\"探针机制\",{\"1\":{\"608\":1}}],[\"探针\",{\"1\":{\"314\":1}}],[\"探活任务\",{\"0\":{\"227\":1}}],[\"探活时间间隔\",{\"1\":{\"226\":1}}],[\"探活时机得从\",{\"1\":{\"226\":1}}],[\"探活时机\",{\"0\":{\"226\":1}}],[\"探活开关\",{\"1\":{\"226\":1}}],[\"探活开关检查\",{\"1\":{\"226\":1}}],[\"探活说起\",{\"1\":{\"225\":1}}],[\"探活分享\",{\"1\":{\"33\":1}}],[\"探讨未来可能的发展方向\",{\"1\":{\"15\":1}}],[\"探讨开源未来\",{\"1\":{\"15\":1}}],[\"探索\",{\"1\":{\"11\":1,\"367\":1,\"382\":1}}],[\"汽车软件\",{\"1\":{\"15\":1}}],[\"与业务逻辑无关的通用组件\",{\"1\":{\"822\":1}}],[\"与业务系统完全融合\",{\"1\":{\"706\":1}}],[\"与代码的优化\",{\"1\":{\"700\":1}}],[\"与存储文件跳转项目配置刷新\",{\"0\":{\"655\":1}}],[\"与存储文件跳转\",{\"0\":{\"654\":1},\"1\":{\"651\":1}}],[\"与其他框架冲突\",{\"1\":{\"776\":1}}],[\"与其他成员分享交流\",{\"1\":{\"635\":1}}],[\"与其他开发者一起共同推动项目的发展\",{\"1\":{\"336\":1,\"340\":1}}],[\"与来自各地的开发者们一起合作\",{\"1\":{\"635\":1}}],[\"与我们一同努力\",{\"1\":{\"634\":1}}],[\"与参数无法快速查看调试问题\",{\"1\":{\"608\":1}}],[\"与执行时间监控\",{\"1\":{\"608\":1}}],[\"与主\",{\"1\":{\"455\":1}}],[\"与前端交互不方便等问题\",{\"1\":{\"372\":1,\"387\":1}}],[\"与内置认证页面统一风格\",{\"1\":{\"360\":1}}],[\"与现有权限体系\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"与新版本代码创建数据表需要启动两个服务机制进行统一\",{\"1\":{\"354\":1}}],[\"与网关\",{\"0\":{\"203\":1}}],[\"与网关的请求时间比较\",{\"1\":{\"143\":1,\"145\":1}}],[\"与\",{\"1\":{\"57\":1,\"92\":3,\"131\":1,\"149\":1,\"180\":1,\"231\":1,\"232\":2,\"321\":2,\"325\":1,\"327\":1,\"328\":1,\"442\":1,\"574\":1,\"612\":1,\"624\":1,\"667\":1,\"701\":1,\"707\":1,\"708\":2,\"709\":1,\"714\":1,\"724\":1,\"768\":1,\"787\":1,\"824\":1}}],[\"与各导师沟通并准备项目申请材料\",{\"1\":{\"50\":1}}],[\"与导师沟通\",{\"1\":{\"42\":1}}],[\"与导师沟通并准备项目申请材料\",{\"1\":{\"36\":1}}],[\"与会者将一起探讨元宇宙\",{\"1\":{\"15\":1}}],[\"与您在全球开源技术峰会\",{\"0\":{\"15\":1}}],[\"tx1\",{\"1\":{\"772\":1}}],[\"txt\",{\"1\":{\"397\":1}}],[\"tzk007\",{\"1\":{\"529\":2,\"557\":1}}],[\"t1\",{\"1\":{\"516\":2}}],[\"t001234\",{\"1\":{\"474\":2}}],[\"tdengine\",{\"1\":{\"444\":1}}],[\"tdengine3\",{\"1\":{\"442\":1,\"444\":1}}],[\"tps\",{\"1\":{\"787\":1}}],[\"tplinkswitch\",{\"1\":{\"449\":1}}],[\"tp\",{\"1\":{\"414\":2,\"416\":2,\"423\":2,\"424\":2,\"445\":1,\"459\":1}}],[\"ts\",{\"1\":{\"370\":1,\"385\":1,\"608\":1}}],[\"tshirt\",{\"1\":{\"308\":1}}],[\"tgluon\",{\"1\":{\"335\":1}}],[\"tcp\",{\"1\":{\"313\":2,\"577\":1,\"581\":1,\"582\":1,\"801\":1}}],[\"tcc模式\",{\"1\":{\"717\":1}}],[\"tccfileconfig\",{\"1\":{\"74\":2}}],[\"tccconfig\",{\"1\":{\"74\":1}}],[\"tcc<\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3}}],[\"tccroleenum\",{\"1\":{\"70\":2}}],[\"tccredisconfig\",{\"1\":{\"64\":6,\"74\":2,\"77\":1}}],[\"tccactionenum\",{\"1\":{\"67\":2,\"70\":1}}],[\"tcctransaction>\",{\"1\":{\"71\":3}}],[\"tcctransactioncachemanager\",{\"1\":{\"71\":7}}],[\"tcctransactioncontext\",{\"1\":{\"67\":2,\"70\":3}}],[\"tcctransaction\",{\"1\":{\"66\":6,\"67\":7,\"70\":10,\"71\":18}}],[\"tcczookeeperconfig\",{\"1\":{\"64\":2,\"74\":2}}],[\"tccmongoconfig\",{\"1\":{\"64\":2,\"74\":2}}],[\"tccdbconfig\",{\"1\":{\"64\":2,\"74\":4,\"77\":1}}],[\"tcc\",{\"0\":{\"72\":1,\"73\":1},\"1\":{\"64\":9,\"66\":10,\"67\":7,\"71\":6,\"74\":9,\"75\":1,\"76\":1,\"77\":7,\"713\":3,\"716\":1,\"717\":2}}],[\"tunnel\",{\"1\":{\"585\":1}}],[\"tusi\",{\"1\":{\"308\":1}}],[\"ture\",{\"1\":{\"226\":1}}],[\"tureen\",{\"1\":{\"148\":1}}],[\"turren\",{\"1\":{\"148\":2}}],[\"ttltaskwrapper\",{\"1\":{\"409\":1,\"419\":1}}],[\"ttl参数的计算\",{\"1\":{\"252\":1}}],[\"ttl\",{\"1\":{\"252\":3}}],[\"ticket\",{\"1\":{\"624\":2}}],[\"tickets这个接口只要用户名正确\",{\"1\":{\"541\":1}}],[\"tian\",{\"1\":{\"317\":1}}],[\"tinyint\",{\"1\":{\"278\":1}}],[\"tips\",{\"0\":{\"163\":1}}],[\"timezone\",{\"1\":{\"458\":1}}],[\"time`\",{\"1\":{\"406\":1}}],[\"timelimiter\",{\"1\":{\"269\":1}}],[\"timetamp\",{\"1\":{\"191\":3}}],[\"times\",{\"1\":{\"149\":2}}],[\"timestamp为毫秒数的字符串形式\",{\"1\":{\"191\":1}}],[\"timestamp\",{\"1\":{\"125\":1,\"191\":1,\"232\":1,\"250\":1,\"252\":3,\"278\":1,\"406\":1}}],[\"time++\",{\"1\":{\"149\":1}}],[\"timeoutms\",{\"1\":{\"709\":1}}],[\"timeout=\",{\"1\":{\"702\":1}}],[\"timeoutexception\",{\"1\":{\"273\":1}}],[\"timeoutduration\",{\"1\":{\"270\":1}}],[\"timeoutdurationrate\",{\"1\":{\"270\":1}}],[\"timeouttime\",{\"1\":{\"144\":3}}],[\"timeout\",{\"0\":{\"623\":1,\"624\":1},\"1\":{\"126\":1,\"136\":4,\"137\":3,\"144\":4,\"195\":1,\"199\":2,\"219\":1,\"236\":5,\"237\":3,\"263\":1,\"271\":2,\"273\":1,\"420\":2,\"624\":4}}],[\"time\",{\"1\":{\"74\":2,\"130\":2,\"149\":5,\"195\":1,\"219\":1,\"220\":2,\"224\":1,\"235\":1,\"236\":1,\"252\":2,\"637\":1,\"763\":2}}],[\"timeunit\",{\"1\":{\"66\":2,\"67\":2,\"121\":1,\"144\":2,\"148\":2,\"149\":2,\"226\":1,\"273\":1}}],[\"t\",{\"1\":{\"130\":1,\"170\":2,\"179\":2,\"181\":2,\"183\":4,\"220\":1,\"273\":4}}],[\"t8\",{\"1\":{\"109\":2}}],[\"typename\",{\"1\":{\"723\":1}}],[\"typescript5\",{\"1\":{\"373\":1,\"374\":1,\"388\":1,\"389\":1}}],[\"typescript\",{\"1\":{\"356\":3,\"373\":1,\"374\":2,\"388\":1,\"389\":2,\"395\":3,\"397\":2,\"402\":3,\"820\":1}}],[\"types\",{\"1\":{\"294\":2,\"822\":1}}],[\"types`\",{\"1\":{\"278\":1}}],[\"type`\",{\"1\":{\"278\":1,\"406\":2}}],[\"type\",{\"1\":{\"66\":3,\"124\":1,\"126\":8,\"154\":3,\"156\":7,\"158\":6,\"161\":2,\"200\":6,\"236\":2,\"271\":1,\"289\":1,\"430\":6,\"438\":1,\"582\":1,\"624\":1,\"741\":1,\"772\":1}}],[\"th\",{\"1\":{\"816\":2}}],[\"thumbnailator\",{\"1\":{\"816\":1}}],[\"thumbnail\",{\"1\":{\"811\":2,\"816\":1}}],[\"thymeleaf\",{\"1\":{\"624\":1,\"799\":1}}],[\"third\",{\"1\":{\"458\":2}}],[\"this\",{\"0\":{\"251\":1},\"1\":{\"66\":3,\"67\":2,\"70\":1,\"71\":1,\"74\":5,\"92\":5,\"121\":1,\"130\":5,\"136\":4,\"141\":3,\"144\":6,\"148\":10,\"149\":2,\"155\":2,\"156\":4,\"167\":1,\"200\":4,\"205\":4,\"206\":1,\"209\":1,\"210\":1,\"220\":4,\"226\":1,\"231\":4,\"249\":2,\"259\":11,\"266\":1,\"287\":4,\"709\":1}}],[\"that\",{\"1\":{\"74\":1,\"206\":1}}],[\"threshold\",{\"1\":{\"271\":1,\"458\":1}}],[\"threw\",{\"1\":{\"208\":2}}],[\"threadutils\",{\"1\":{\"148\":1,\"149\":2}}],[\"threads\",{\"1\":{\"105\":3,\"108\":18,\"109\":2}}],[\"threadsize\",{\"1\":{\"66\":8,\"148\":3}}],[\"threadlocalutil\",{\"1\":{\"158\":5}}],[\"threadlocal\",{\"0\":{\"70\":1},\"1\":{\"70\":2,\"71\":2,\"232\":1,\"709\":1}}],[\"thread\",{\"1\":{\"66\":3,\"67\":3,\"74\":1,\"82\":1,\"109\":2,\"144\":1,\"167\":1,\"199\":2,\"272\":1,\"521\":1}}],[\"threadpooltaskexecutor\",{\"1\":{\"409\":1,\"419\":1}}],[\"threadpoolexecutor\",{\"1\":{\"66\":3,\"67\":3,\"121\":1,\"148\":1}}],[\"threadpool\",{\"1\":{\"66\":1,\"67\":1}}],[\"throw\",{\"1\":{\"67\":1,\"126\":1,\"141\":1,\"148\":2,\"149\":1,\"155\":1,\"157\":1,\"167\":2,\"170\":2,\"183\":2,\"200\":1,\"209\":1,\"249\":1,\"266\":1,\"272\":1,\"273\":1,\"294\":5}}],[\"throwable\",{\"1\":{\"67\":4,\"158\":1,\"167\":1,\"170\":1,\"249\":3,\"266\":8,\"273\":3}}],[\"throws\",{\"1\":{\"67\":1,\"148\":1,\"170\":2,\"171\":4,\"173\":1,\"180\":1,\"183\":2,\"210\":1,\"272\":1,\"286\":3,\"289\":1,\"293\":1,\"294\":1,\"487\":2,\"506\":1}}],[\"thenelwrapper\",{\"1\":{\"517\":1}}],[\"thenapply\",{\"1\":{\"289\":1}}],[\"then\",{\"1\":{\"92\":1,\"137\":1,\"237\":1,\"252\":3,\"288\":1,\"290\":1,\"504\":2,\"505\":3,\"516\":3,\"517\":2,\"518\":2,\"519\":1}}],[\"their\",{\"1\":{\"74\":1}}],[\"the\",{\"1\":{\"15\":1,\"74\":6,\"85\":1,\"101\":1,\"105\":1,\"108\":6,\"121\":1,\"122\":2,\"126\":2,\"144\":1,\"148\":2,\"154\":1,\"156\":13,\"158\":8,\"174\":2,\"200\":10,\"205\":10,\"206\":1,\"208\":1,\"235\":1,\"236\":1,\"271\":1,\"313\":2,\"458\":2,\"501\":1}}],[\"travis\",{\"1\":{\"714\":1}}],[\"trace\",{\"1\":{\"422\":1}}],[\"traceid\",{\"1\":{\"397\":1,\"474\":1}}],[\"transient\",{\"1\":{\"724\":1}}],[\"transformdeferred\",{\"1\":{\"273\":3}}],[\"transform\",{\"1\":{\"266\":1}}],[\"transformmap\",{\"1\":{\"232\":1}}],[\"transfer\",{\"1\":{\"70\":1,\"109\":2}}],[\"transactional\",{\"1\":{\"122\":1,\"153\":1,\"209\":1}}],[\"transactioncontextlocal\",{\"1\":{\"70\":1}}],[\"transaction\",{\"1\":{\"67\":1,\"70\":2,\"71\":2,\"74\":2,\"717\":1}}],[\"translator\",{\"1\":{\"66\":1}}],[\"truing\",{\"1\":{\"308\":1}}],[\"true表示开启宽泛路径支持\",{\"1\":{\"314\":1}}],[\"true\",{\"1\":{\"64\":3,\"74\":1,\"77\":1,\"124\":3,\"125\":1,\"126\":2,\"134\":1,\"135\":1,\"140\":1,\"141\":1,\"148\":3,\"156\":6,\"160\":2,\"167\":3,\"200\":1,\"205\":1,\"227\":1,\"228\":1,\"234\":1,\"236\":1,\"259\":3,\"270\":1,\"284\":1,\"285\":1,\"294\":2,\"313\":2,\"314\":1,\"325\":2,\"406\":1,\"476\":1,\"489\":1,\"505\":3,\"515\":1,\"585\":1,\"702\":1,\"709\":5,\"724\":1,\"788\":1,\"814\":1}}],[\"trigger\",{\"1\":{\"406\":1}}],[\"trino\",{\"1\":{\"338\":1}}],[\"trie\",{\"1\":{\"313\":4,\"316\":1}}],[\"tried\",{\"1\":{\"149\":1}}],[\"trim\",{\"0\":{\"689\":1},\"1\":{\"191\":1,\"294\":1,\"683\":1,\"689\":1}}],[\"treemap\",{\"1\":{\"133\":4}}],[\"tree\",{\"0\":{\"73\":1},\"1\":{\"308\":1}}],[\"trying\",{\"1\":{\"67\":1,\"70\":1}}],[\"try\",{\"1\":{\"62\":1,\"64\":3,\"67\":4,\"68\":2,\"70\":1,\"71\":2,\"79\":1,\"81\":2,\"126\":1,\"135\":1,\"148\":3,\"149\":3,\"158\":3,\"167\":3,\"170\":2,\"171\":1,\"173\":3,\"183\":4,\"228\":2,\"245\":1,\"294\":2,\"308\":1,\"708\":1,\"710\":1}}],[\"totp\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"total\",{\"1\":{\"220\":1}}],[\"total=310mb\",{\"1\":{\"199\":1}}],[\"totalweight\",{\"1\":{\"134\":4,\"135\":3,\"229\":5}}],[\"toel\",{\"1\":{\"517\":1}}],[\"toepochmilli\",{\"1\":{\"191\":2}}],[\"tokenbased\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"token\",{\"0\":{\"623\":1,\"624\":1,\"625\":1},\"1\":{\"357\":13,\"364\":12,\"368\":1,\"378\":12,\"393\":12,\"400\":12,\"458\":1,\"604\":1,\"608\":3,\"616\":1,\"617\":2,\"619\":1,\"624\":41,\"631\":1}}],[\"tokensign\",{\"1\":{\"624\":1}}],[\"tokens参数的计算\",{\"1\":{\"252\":1}}],[\"tokens+\",{\"1\":{\"252\":3}}],[\"tokens\",{\"1\":{\"250\":1,\"252\":14}}],[\"tokensleft\",{\"1\":{\"249\":2}}],[\"torun\",{\"1\":{\"273\":2}}],[\"tonumber\",{\"1\":{\"252\":6}}],[\"tools\",{\"1\":{\"637\":1}}],[\"took\",{\"1\":{\"271\":1}}],[\"too\",{\"1\":{\"249\":3,\"266\":4}}],[\"tos\",{\"1\":{\"234\":1}}],[\"tostring\",{\"1\":{\"148\":1,\"149\":1,\"165\":1,\"235\":1,\"249\":1,\"288\":1}}],[\"touppercase\",{\"1\":{\"191\":1}}],[\"toarray\",{\"1\":{\"191\":1}}],[\"toinstant\",{\"1\":{\"191\":2}}],[\"todatabuffers\",{\"1\":{\"137\":1,\"237\":1}}],[\"todo\",{\"1\":{\"122\":1,\"157\":1,\"158\":1}}],[\"tolist\",{\"1\":{\"130\":1,\"191\":1,\"209\":1,\"220\":1,\"231\":1,\"259\":1,\"266\":4}}],[\"tojson\",{\"1\":{\"123\":2,\"124\":2,\"125\":2,\"126\":1,\"141\":1,\"142\":1,\"157\":5,\"161\":1,\"209\":1}}],[\"topnav\",{\"1\":{\"606\":1}}],[\"topsuder\",{\"1\":{\"411\":1}}],[\"topic\",{\"1\":{\"316\":1}}],[\"top\",{\"1\":{\"60\":1,\"334\":1,\"335\":1,\"336\":1,\"340\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"to\",{\"1\":{\"57\":1,\"126\":6,\"136\":1,\"144\":1,\"148\":1,\"156\":2,\"199\":2,\"206\":1,\"208\":3,\"271\":1,\"273\":8,\"458\":3,\"518\":2}}],[\"tomcat\",{\"1\":{\"409\":1,\"411\":1,\"419\":1,\"420\":1,\"421\":1,\"445\":1,\"449\":1,\"459\":1,\"526\":1,\"529\":1,\"532\":1,\"535\":1,\"538\":1,\"541\":1,\"544\":1,\"547\":1,\"554\":1,\"564\":1,\"608\":1}}],[\"tomsun28\",{\"1\":{\"317\":1,\"458\":16,\"461\":2,\"529\":1}}],[\"tomillis\",{\"1\":{\"273\":1}}],[\"tom\",{\"1\":{\"18\":1,\"308\":1}}],[\"tencloud\",{\"1\":{\"458\":2}}],[\"tencentcloud\",{\"1\":{\"354\":1,\"360\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"tencent\",{\"1\":{\"353\":1,\"358\":2,\"362\":3,\"367\":1,\"368\":1,\"376\":3,\"382\":1,\"391\":3,\"396\":1,\"397\":1,\"399\":3,\"772\":1}}],[\"telnet\",{\"1\":{\"449\":1}}],[\"telegram\",{\"1\":{\"53\":1,\"449\":1}}],[\"teslacn\",{\"1\":{\"317\":1}}],[\"testhub\",{\"0\":{\"626\":1,\"627\":1,\"628\":1,\"635\":1},\"1\":{\"627\":4,\"628\":1,\"629\":2,\"632\":1,\"633\":13,\"634\":4,\"635\":3}}],[\"testchain\",{\"1\":{\"504\":2}}],[\"test\",{\"1\":{\"98\":1,\"104\":1,\"105\":3,\"107\":1,\"108\":13,\"109\":6,\"114\":1,\"166\":3,\"167\":2,\"173\":2,\"231\":1,\"245\":1,\"271\":2,\"272\":1,\"313\":1,\"406\":2,\"585\":1,\"740\":1,\"790\":1,\"814\":1,\"817\":5}}],[\"ted\",{\"1\":{\"308\":1}}],[\"templatename\",{\"1\":{\"727\":1,\"740\":1}}],[\"templateid\",{\"1\":{\"727\":1,\"740\":1}}],[\"template\",{\"1\":{\"442\":1,\"458\":3,\"740\":1,\"759\":2,\"772\":1}}],[\"temp\",{\"1\":{\"225\":5,\"227\":2}}],[\"textarea\",{\"1\":{\"667\":1}}],[\"text\",{\"1\":{\"85\":3,\"86\":3,\"87\":3,\"90\":2}}],[\"term\",{\"1\":{\"79\":1}}],[\"terraform\",{\"1\":{\"57\":1}}],[\"tech\",{\"0\":{\"51\":1}}],[\"technology\",{\"1\":{\"15\":1}}],[\"tac\",{\"1\":{\"710\":1,\"713\":5,\"716\":1,\"717\":1}}],[\"tab\",{\"1\":{\"606\":1,\"677\":1,\"833\":1}}],[\"tablemap\",{\"1\":{\"723\":1}}],[\"table\",{\"1\":{\"74\":2,\"278\":1,\"324\":1,\"325\":1,\"327\":2,\"328\":2,\"444\":1,\"667\":1,\"723\":1,\"741\":1}}],[\"tar\",{\"1\":{\"723\":1}}],[\"target\",{\"1\":{\"430\":2,\"644\":1}}],[\"tars\",{\"1\":{\"124\":2,\"131\":2,\"409\":1,\"419\":1,\"710\":1}}],[\"tangxiuhong\",{\"1\":{\"335\":1}}],[\"tancloud\",{\"1\":{\"52\":1,\"440\":1,\"442\":1,\"447\":1,\"448\":2,\"457\":3,\"465\":3}}],[\"taoren\",{\"1\":{\"324\":1,\"325\":2,\"326\":3}}],[\"tagvalue\",{\"1\":{\"458\":1}}],[\"tags\",{\"1\":{\"314\":1,\"458\":2}}],[\"tag\",{\"1\":{\"289\":3,\"331\":1,\"354\":1,\"443\":1,\"458\":1,\"624\":1}}],[\"tailmap\",{\"1\":{\"133\":1}}],[\"takewhile\",{\"1\":{\"81\":2}}],[\"taskwrapper\",{\"1\":{\"409\":1,\"411\":1,\"419\":1}}],[\"task\",{\"1\":{\"57\":5,\"226\":1,\"406\":1}}],[\"talk\",{\"0\":{\"51\":1},\"1\":{\"707\":1,\"715\":1}}],[\"圆桌\",{\"1\":{\"15\":1}}],[\"论坛\",{\"1\":{\"15\":1}}],[\"论道开源\",{\"1\":{\"14\":1}}],[\"将图片大小调整到\",{\"1\":{\"816\":1}}],[\"将文件上传到对应地方\",{\"1\":{\"816\":1}}],[\"将对\",{\"1\":{\"710\":2}}],[\"将大大简化框架的使用程度\",{\"1\":{\"710\":1}}],[\"将会发布\",{\"1\":{\"710\":1}}],[\"将会为\",{\"1\":{\"91\":1}}],[\"将老版本横向的\",{\"1\":{\"694\":1}}],[\"将自动创建域名\",{\"1\":{\"664\":1}}],[\"将自身的\",{\"1\":{\"131\":1}}],[\"将原先的单机版改成了支持团队协作版\",{\"1\":{\"652\":1}}],[\"将原有配置替换为与\",{\"1\":{\"397\":1}}],[\"将原有实体转换代码\",{\"1\":{\"397\":1}}],[\"将全局过滤器的\",{\"1\":{\"624\":1}}],[\"将抛出未登录异常\",{\"1\":{\"624\":1}}],[\"将部门管理\",{\"1\":{\"617\":1}}],[\"将系统内置配置放置到\",{\"1\":{\"617\":1}}],[\"将框架内的\",{\"1\":{\"617\":1}}],[\"将认证能力从\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"将认证数据会同步到\",{\"1\":{\"208\":1}}],[\"将上面的\",{\"1\":{\"428\":1}}],[\"将其移动到\",{\"1\":{\"397\":1}}],[\"将管理功能封装为\",{\"1\":{\"374\":1,\"389\":1}}],[\"将独立性较强的内容\",{\"1\":{\"367\":1,\"382\":1}}],[\"将所有\",{\"1\":{\"397\":1}}],[\"将所有内置页面静态资源引用改为\",{\"1\":{\"360\":1}}],[\"将所有请求平均负载到了每个节点上\",{\"1\":{\"266\":1}}],[\"将低\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"将名字进行了变更\",{\"1\":{\"352\":1}}],[\"将您遇到的问题和社区分享\",{\"1\":{\"334\":1}}],[\"将缓存数据通过\",{\"1\":{\"315\":1}}],[\"将本次请求\",{\"1\":{\"294\":1}}],[\"将本次请求传递到filterchain的下一个filter中\",{\"1\":{\"294\":1}}],[\"将结果和类型复制到exchagne\",{\"1\":{\"289\":1}}],[\"将请求交给sentinel处理\",{\"1\":{\"266\":1}}],[\"将请求结果放入\",{\"1\":{\"236\":1}}],[\"将令牌数量赋值为设定的容量\",{\"1\":{\"252\":1}}],[\"将状态更改为启用状态\",{\"1\":{\"243\":1}}],[\"将从\",{\"1\":{\"236\":1}}],[\"将真实调用地址\",{\"1\":{\"235\":1}}],[\"将众多插件整合到一起进行统一调度处理\",{\"1\":{\"220\":1}}],[\"将先进行\",{\"1\":{\"219\":1}}],[\"将插件\",{\"1\":{\"217\":1}}],[\"将元数据会同步到\",{\"1\":{\"208\":1}}],[\"将更改的事件转发到每个\",{\"1\":{\"200\":1}}],[\"将资源文件中的类路径反射成类对象\",{\"1\":{\"183\":1}}],[\"将实现类缓存\",{\"1\":{\"177\":1}}],[\"将此\",{\"1\":{\"170\":1}}],[\"将此次连接信息的\",{\"1\":{\"158\":1}}],[\"将初始化的对象放入hash缓存\",{\"1\":{\"167\":1}}],[\"将数据封装为\",{\"1\":{\"157\":1}}],[\"将数据发送给各类数据刷新类\",{\"1\":{\"148\":1}}],[\"将节点信息改变后撒手不管\",{\"1\":{\"142\":1}}],[\"将\",{\"1\":{\"23\":1,\"108\":1,\"150\":1,\"172\":1,\"176\":1,\"220\":1,\"264\":1,\"266\":1,\"286\":3,\"315\":1,\"373\":1,\"388\":1,\"452\":1,\"464\":1,\"583\":1,\"604\":1,\"624\":1,\"709\":2,\"723\":2}}],[\"将以行业展览\",{\"1\":{\"15\":1}}],[\"将于\",{\"1\":{\"15\":1}}],[\"将首次在中国线下举办\",{\"1\":{\"11\":1}}],[\"上述模板的变量\",{\"1\":{\"740\":1}}],[\"上述代码有几个较为关键的点\",{\"1\":{\"247\":1}}],[\"上传图片\",{\"1\":{\"816\":1}}],[\"上传失败\",{\"1\":{\"816\":1}}],[\"上传文件到指定存储平台\",{\"1\":{\"816\":1}}],[\"上传文件\",{\"1\":{\"816\":2}}],[\"上传文件偶现\",{\"1\":{\"809\":1}}],[\"上传\",{\"1\":{\"609\":1,\"618\":1,\"816\":1}}],[\"上百种工具覆盖\",{\"1\":{\"608\":1}}],[\"上百个前沿议题\",{\"1\":{\"11\":1}}],[\"上一个版本是\",{\"1\":{\"514\":1}}],[\"上一篇\",{\"1\":{\"203\":1}}],[\"上效果图\",{\"0\":{\"462\":1}}],[\"上效果\",{\"1\":{\"448\":1}}],[\"上新基础知识篇\",{\"1\":{\"397\":1}}],[\"上配置使用\",{\"1\":{\"261\":1}}],[\"上有了网关的配置信息\",{\"1\":{\"208\":1}}],[\"上面\",{\"1\":{\"586\":1}}],[\"上面几点\",{\"1\":{\"456\":1}}],[\"上面提到\",{\"1\":{\"225\":1,\"229\":1}}],[\"上面看着挺顺利\",{\"1\":{\"208\":1}}],[\"上面都是将信息放入对象实例属性中\",{\"1\":{\"167\":1}}],[\"上的集成\",{\"1\":{\"331\":1}}],[\"上的\",{\"1\":{\"199\":1,\"729\":1}}],[\"上的节点信息\",{\"1\":{\"142\":1}}],[\"上\",{\"1\":{\"150\":1,\"608\":1}}],[\"上下文中已经有了下游服务节点的真实路径\",{\"1\":{\"131\":1}}],[\"上下文中\",{\"1\":{\"131\":1}}],[\"上图画红框的地方是不是很眼熟\",{\"1\":{\"92\":1}}],[\"上进行\",{\"1\":{\"77\":1}}],[\"上看相关文档就好\",{\"1\":{\"64\":1}}],[\"上架到华为云云商店\",{\"1\":{\"57\":1}}],[\"上线仅一年多时间\",{\"1\":{\"46\":1}}],[\"上海浦东软件园\",{\"1\":{\"15\":1}}],[\"oos\",{\"1\":{\"808\":1}}],[\"oomiyashinobu\",{\"1\":{\"557\":1}}],[\"overriding\",{\"1\":{\"788\":1}}],[\"overrideattribute\",{\"1\":{\"430\":2,\"438\":1}}],[\"override\",{\"1\":{\"66\":1,\"67\":1,\"71\":1,\"122\":1,\"124\":1,\"126\":1,\"130\":1,\"131\":1,\"136\":1,\"141\":1,\"142\":2,\"144\":4,\"148\":2,\"149\":1,\"153\":1,\"155\":2,\"157\":6,\"162\":5,\"166\":2,\"200\":4,\"206\":2,\"209\":4,\"210\":1,\"259\":1,\"266\":7,\"273\":2,\"287\":2,\"288\":1,\"290\":1,\"293\":1,\"294\":1,\"324\":3,\"325\":3,\"327\":3,\"328\":3,\"488\":4,\"506\":2,\"773\":2}}],[\"okx\",{\"1\":{\"599\":1}}],[\"ok\",{\"1\":{\"474\":1,\"791\":1}}],[\"okhttpclient\",{\"1\":{\"431\":1}}],[\"okhttp3\",{\"1\":{\"409\":1,\"419\":1,\"420\":1}}],[\"okio\",{\"1\":{\"397\":1}}],[\"oidc\",{\"1\":{\"357\":2,\"359\":1,\"364\":2,\"378\":2,\"379\":1,\"393\":2,\"394\":1,\"400\":2,\"401\":1}}],[\"oauth\",{\"1\":{\"357\":3,\"364\":3,\"378\":3,\"393\":3,\"400\":3,\"525\":1,\"526\":1,\"529\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"oauth2\",{\"0\":{\"379\":1,\"394\":1,\"401\":1},\"1\":{\"315\":1,\"351\":2,\"357\":4,\"358\":2,\"359\":1,\"364\":4,\"367\":2,\"378\":4,\"379\":1,\"382\":2,\"393\":4,\"394\":1,\"396\":2,\"400\":4,\"401\":1,\"624\":1}}],[\"olap\",{\"1\":{\"331\":1}}],[\"oldclass\",{\"1\":{\"183\":2}}],[\"oldval\",{\"1\":{\"141\":2}}],[\"old\",{\"1\":{\"92\":5,\"141\":1,\"458\":1}}],[\"oc\",{\"1\":{\"210\":3}}],[\"other\",{\"1\":{\"156\":1}}],[\"ondelete\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"onupdate\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"oninsert\",{\"1\":{\"324\":1,\"325\":1,\"327\":1,\"328\":1}}],[\"onchange\",{\"1\":{\"210\":1}}],[\"onclose\",{\"1\":{\"158\":2}}],[\"onrulesubscribe\",{\"1\":{\"162\":2,\"206\":1}}],[\"onrulechanged\",{\"1\":{\"92\":1,\"141\":2,\"155\":1,\"156\":1,\"157\":2,\"209\":4}}],[\"onmessage\",{\"1\":{\"158\":2}}],[\"onmetadatachanged\",{\"1\":{\"92\":1,\"141\":2,\"155\":1,\"156\":1,\"157\":2}}],[\"onopen\",{\"1\":{\"158\":3}}],[\"onselectorsubscribe\",{\"1\":{\"162\":2}}],[\"onselectorchanged\",{\"1\":{\"92\":1,\"141\":2,\"155\":1,\"156\":1,\"157\":2}}],[\"onsubscribe\",{\"1\":{\"148\":1,\"162\":5}}],[\"onerror方法增加exception入参\",{\"1\":{\"492\":1}}],[\"onerrormap\",{\"1\":{\"289\":1}}],[\"onerrorresume\",{\"1\":{\"249\":1,\"266\":1,\"273\":4}}],[\"onerror\",{\"1\":{\"158\":2,\"273\":1,\"487\":2}}],[\"one\",{\"1\":{\"148\":1,\"308\":1}}],[\"onappauthchanged\",{\"1\":{\"141\":2,\"155\":1,\"156\":1,\"157\":2,\"200\":1}}],[\"onapplicationevent\",{\"1\":{\"141\":1,\"155\":1,\"157\":1,\"200\":2,\"204\":1,\"209\":3}}],[\"onlyif\",{\"1\":{\"236\":1}}],[\"only\",{\"1\":{\"118\":1}}],[\"onpluginchanged\",{\"1\":{\"92\":1,\"141\":5,\"142\":5,\"144\":2,\"155\":1,\"156\":1,\"157\":2}}],[\"on\",{\"1\":{\"92\":1,\"101\":1,\"156\":1,\"158\":5,\"199\":3,\"208\":1,\"278\":1,\"458\":1,\"501\":1,\"644\":2}}],[\"out\",{\"1\":{\"74\":1,\"148\":1,\"165\":1,\"166\":5,\"167\":2,\"173\":2,\"191\":1,\"219\":1,\"224\":1,\"231\":2,\"235\":1,\"236\":1,\"324\":3,\"325\":3,\"327\":3,\"328\":3,\"709\":6}}],[\"ownership\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"own\",{\"1\":{\"74\":1}}],[\"ofemptyable\",{\"1\":{\"722\":1}}],[\"ofseconds\",{\"1\":{\"236\":1}}],[\"ofmillis\",{\"1\":{\"136\":1,\"236\":2}}],[\"offset\",{\"1\":{\"134\":3,\"229\":3}}],[\"of\",{\"1\":{\"74\":1,\"148\":2,\"156\":1,\"174\":1,\"191\":2,\"195\":2,\"271\":2,\"273\":3,\"282\":1,\"313\":2,\"458\":2,\"816\":5}}],[\"ofnullable\",{\"1\":{\"70\":1,\"71\":2,\"81\":2,\"162\":3,\"206\":2,\"236\":2}}],[\"opt\",{\"1\":{\"438\":1,\"722\":1}}],[\"optimize\",{\"0\":{\"413\":1,\"422\":1}}],[\"optional<histogrammetricstrackerdelegate>\",{\"1\":{\"220\":1}}],[\"optional\",{\"1\":{\"70\":1,\"71\":3,\"162\":3,\"206\":2,\"236\":2}}],[\"opaque\",{\"1\":{\"357\":3,\"364\":3,\"378\":3,\"393\":3,\"400\":3}}],[\"operator\",{\"1\":{\"458\":1}}],[\"operatorenum\",{\"1\":{\"124\":1,\"126\":2}}],[\"opendoc\",{\"1\":{\"695\":1}}],[\"opendevtools\",{\"1\":{\"644\":1}}],[\"openai\",{\"0\":{\"653\":1},\"1\":{\"651\":1,\"653\":1}}],[\"openapi\",{\"1\":{\"370\":1,\"372\":1,\"374\":1,\"385\":1,\"387\":1,\"389\":1,\"535\":1}}],[\"openldap\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"openguass\",{\"1\":{\"442\":2}}],[\"opengauss\",{\"1\":{\"313\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"opentelemetry\",{\"1\":{\"411\":1}}],[\"openfeign\",{\"1\":{\"368\":1}}],[\"openid\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"opening\",{\"1\":{\"199\":1}}],[\"open状态\",{\"1\":{\"270\":1}}],[\"opensuse\",{\"1\":{\"448\":1,\"449\":1}}],[\"openstream\",{\"1\":{\"183\":1}}],[\"openssf\",{\"1\":{\"15\":1}}],[\"openmetrics\",{\"1\":{\"54\":1}}],[\"open\",{\"1\":{\"15\":3,\"92\":1,\"152\":1,\"158\":2,\"271\":2,\"688\":1,\"727\":9}}],[\"obtainauthdata\",{\"1\":{\"195\":1}}],[\"obtainruledata\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"obtainselectordata\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"obtainplugindata\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"objectutil\",{\"1\":{\"724\":1}}],[\"objectholder\",{\"1\":{\"179\":2,\"183\":6}}],[\"object>\",{\"1\":{\"178\":1,\"181\":1,\"328\":1}}],[\"objectprovider<list>\",{\"1\":{\"217\":1}}],[\"objectprovider<list<authdatasubscriber>>\",{\"1\":{\"161\":1,\"205\":1,\"210\":1}}],[\"objectprovider<list<metadatasubscriber>>\",{\"1\":{\"161\":1,\"205\":1,\"210\":1}}],[\"objectprovider<list<soulplugin>>\",{\"1\":{\"130\":1,\"220\":2,\"231\":1,\"259\":1}}],[\"objectprovider<configservice>\",{\"1\":{\"210\":1}}],[\"objectprovider<zkclient>\",{\"1\":{\"205\":1}}],[\"objectprovider<plugindatasubscriber>\",{\"1\":{\"161\":1,\"205\":1,\"210\":1}}],[\"objectprovider<websocketconfig>\",{\"1\":{\"161\":1}}],[\"objectprovider\",{\"1\":{\"130\":1,\"220\":1}}],[\"objects\",{\"1\":{\"70\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":2,\"129\":2,\"137\":1,\"153\":1,\"167\":1,\"219\":1,\"224\":1,\"234\":2,\"235\":2,\"237\":1,\"247\":3,\"259\":2,\"273\":1,\"289\":2,\"290\":1}}],[\"object\",{\"1\":{\"67\":2,\"126\":2,\"137\":2,\"179\":1,\"181\":1,\"183\":2,\"206\":1,\"209\":1,\"235\":2,\"236\":1,\"237\":2,\"249\":1,\"266\":1,\"286\":8,\"288\":2,\"289\":2,\"290\":3,\"293\":4,\"294\":3,\"368\":2,\"763\":2}}],[\"obs\",{\"1\":{\"57\":2,\"808\":2,\"811\":2,\"817\":1}}],[\"omernaci\",{\"1\":{\"317\":1}}],[\"omitted\",{\"1\":{\"208\":2}}],[\"om\",{\"1\":{\"64\":1}}],[\"orange\",{\"1\":{\"308\":1}}],[\"oracle\",{\"1\":{\"79\":1,\"91\":1,\"316\":1,\"445\":1,\"449\":1,\"458\":1,\"459\":1,\"606\":1,\"608\":2,\"706\":1,\"713\":1,\"714\":1,\"723\":1,\"835\":1}}],[\"ordereddtpexecutor\",{\"1\":{\"409\":1,\"411\":1,\"419\":1}}],[\"order\",{\"1\":{\"117\":2,\"126\":2,\"200\":2,\"293\":1,\"294\":1,\"791\":1}}],[\"or\",{\"0\":{\"489\":1},\"1\":{\"89\":1,\"142\":1,\"145\":1,\"148\":1,\"153\":1,\"209\":1,\"266\":1,\"294\":4,\"313\":1,\"468\":1,\"489\":1,\"608\":1,\"709\":1,\"779\":1}}],[\"orelse\",{\"1\":{\"71\":2,\"236\":2}}],[\"origin=zhzd\",{\"1\":{\"60\":1}}],[\"orm\",{\"1\":{\"46\":1,\"608\":1}}],[\"org\",{\"0\":{\"293\":1},\"1\":{\"3\":1,\"5\":1,\"10\":1,\"42\":1,\"44\":1,\"49\":1,\"66\":3,\"67\":3,\"71\":1,\"93\":1,\"100\":1,\"101\":1,\"150\":1,\"174\":2,\"199\":15,\"200\":6,\"204\":2,\"205\":2,\"206\":2,\"208\":22,\"209\":2,\"210\":2,\"220\":2,\"231\":2,\"301\":1,\"302\":1,\"305\":1,\"308\":2,\"311\":1,\"313\":5,\"314\":3,\"315\":1,\"318\":1,\"410\":1,\"440\":1,\"447\":1,\"547\":1,\"576\":1,\"587\":2,\"621\":1,\"702\":1,\"703\":1,\"709\":1,\"782\":1,\"786\":1,\"789\":3,\"808\":1,\"812\":2,\"822\":1}}],[\"oss<\",{\"1\":{\"814\":2}}],[\"ossclient\",{\"1\":{\"619\":2}}],[\"oss\",{\"0\":{\"369\":1,\"384\":1},\"1\":{\"354\":1,\"360\":1,\"368\":1,\"370\":1,\"374\":4,\"383\":2,\"385\":1,\"389\":4,\"397\":10,\"604\":1,\"606\":1,\"618\":1,\"808\":4,\"814\":6,\"816\":1}}],[\"osgi\",{\"1\":{\"216\":1}}],[\"os\",{\"1\":{\"199\":1}}],[\"osc\",{\"1\":{\"46\":1,\"427\":2}}],[\"oschina\",{\"1\":{\"15\":1,\"60\":1,\"296\":1}}],[\"ospp\",{\"1\":{\"36\":1,\"44\":1,\"49\":1}}],[\"o\",{\"1\":{\"15\":1,\"87\":1,\"88\":1,\"89\":1,\"92\":6,\"101\":4,\"105\":3,\"108\":18,\"177\":1,\"181\":3,\"183\":4,\"208\":6,\"271\":9}}],[\"不重样的\",{\"1\":{\"791\":1}}],[\"不就行了么\",{\"1\":{\"791\":1}}],[\"不巧\",{\"1\":{\"784\":1,\"791\":1}}],[\"不是一朝一夕可完善完成的事情\",{\"1\":{\"765\":1}}],[\"不是把\",{\"1\":{\"92\":1}}],[\"不过嘛\",{\"1\":{\"753\":1}}],[\"不过先别着急\",{\"1\":{\"131\":1}}],[\"不断提升自我\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"不断提升自己的技能\",{\"1\":{\"635\":1}}],[\"不管您是一位新手还是资深开发者\",{\"1\":{\"629\":1}}],[\"不管你是新手还是老手\",{\"1\":{\"36\":1}}],[\"不向下兼容\",{\"1\":{\"624\":6,\"722\":1}}],[\"不允许用户随意修改\",{\"1\":{\"617\":1}}],[\"不编译问题\",{\"1\":{\"616\":1}}],[\"不兼容\",{\"1\":{\"768\":1}}],[\"不兼容特性\",{\"0\":{\"722\":1}}],[\"不兼容更新\",{\"1\":{\"615\":4}}],[\"不兼容原框架\",{\"1\":{\"607\":1}}],[\"不限于部门角色\",{\"1\":{\"608\":1}}],[\"不妨尝试下继承特性\",{\"1\":{\"518\":1}}],[\"不妨先想想其他同步方式在此时做了什么\",{\"1\":{\"142\":1}}],[\"不用想代理更不可能\",{\"1\":{\"586\":1}}],[\"不用像之前那样切来切去了\",{\"1\":{\"448\":1}}],[\"不用担心额外的开发任务\",{\"1\":{\"710\":1}}],[\"不用担心\",{\"1\":{\"68\":1}}],[\"不启用时可以通过手动配置关闭\",{\"1\":{\"413\":1}}],[\"不支持集群有单点效应\",{\"1\":{\"608\":1}}],[\"不支持多数据源主键唯一\",{\"1\":{\"608\":1}}],[\"不支持其他业务扩展\",{\"1\":{\"608\":1}}],[\"不支持异构切换\",{\"1\":{\"608\":1}}],[\"不支持同时使用\",{\"1\":{\"608\":1}}],[\"不支持\",{\"1\":{\"374\":1,\"389\":1,\"608\":4,\"609\":1,\"664\":1}}],[\"不提供\",{\"1\":{\"374\":1,\"389\":1}}],[\"不只是上传\",{\"1\":{\"373\":1,\"388\":1}}],[\"不只是简单的\",{\"0\":{\"372\":1,\"387\":1}}],[\"不易理解和使用的细节\",{\"1\":{\"372\":1,\"387\":1}}],[\"不易理解使用\",{\"1\":{\"372\":1,\"387\":1}}],[\"不利于掌握和深入\",{\"1\":{\"367\":1,\"382\":1}}],[\"不再只是基于单机的废物\",{\"1\":{\"608\":1}}],[\"不再局限于只能在某一种基础设施环境中运行\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"不再写死\",{\"1\":{\"338\":1}}],[\"不透明令牌\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"不容易记等问题\",{\"1\":{\"352\":1}}],[\"不忘初心\",{\"1\":{\"308\":1}}],[\"不对社区和用户造成恶劣影响的前提下\",{\"1\":{\"306\":1}}],[\"不涉及抄袭侵权\",{\"1\":{\"306\":1}}],[\"不做介绍\",{\"1\":{\"293\":1}}],[\"不能同时使用多家厂商\",{\"1\":{\"740\":1}}],[\"不能重复\",{\"1\":{\"278\":1}}],[\"不能更改即单位统计时长内全部超过阈值则触发熔断\",{\"1\":{\"265\":1}}],[\"不更新了\",{\"1\":{\"269\":1}}],[\"不超过\",{\"1\":{\"266\":1}}],[\"不开\",{\"1\":{\"265\":1}}],[\"不阻塞上游服务\",{\"1\":{\"264\":1}}],[\"不把请求传输到后面的服务中\",{\"1\":{\"263\":1}}],[\"不可预测的抖动而引发的连锁反应\",{\"1\":{\"262\":1}}],[\"不一致就认为配置是有更改的\",{\"1\":{\"247\":1}}],[\"不懂如何添加的可以先阅读选择器\",{\"1\":{\"244\":1}}],[\"不认识这个响应式编程的东西\",{\"1\":{\"236\":1}}],[\"不难看出\",{\"1\":{\"232\":1}}],[\"不难看出插件与插件之间的顺序关系\",{\"1\":{\"231\":1}}],[\"不跳过则执行\",{\"1\":{\"219\":1}}],[\"不会主动同步网关数据到\",{\"1\":{\"208\":1}}],[\"不会将加入的回滚调用链条中\",{\"1\":{\"62\":1}}],[\"不当\",{\"1\":{\"175\":1}}],[\"不需要可以不写\",{\"1\":{\"816\":4}}],[\"不需要任何更改\",{\"1\":{\"783\":1}}],[\"不需要更改任何代码即可完成多端动态对接\",{\"1\":{\"615\":1}}],[\"不需要我们再去\",{\"1\":{\"173\":1}}],[\"不需要额外创建冗余字段\",{\"1\":{\"47\":1}}],[\"不匹配此\",{\"1\":{\"171\":1}}],[\"不由让我替其性能揪心一下\",{\"1\":{\"166\":1}}],[\"不同的\",{\"1\":{\"162\":1}}],[\"不方便\",{\"1\":{\"157\":1}}],[\"不清楚流程的可以出门左转看下第\",{\"1\":{\"150\":1}}],[\"不然每次调用就直接把网关的阻塞请求放跑了\",{\"1\":{\"145\":1}}],[\"不赘述\",{\"1\":{\"136\":1}}],[\"不止涉及到各种策略\",{\"1\":{\"132\":1}}],[\"不仅仅体现在代码中\",{\"1\":{\"635\":1}}],[\"不仅仅是在管理后台开启这个插件\",{\"1\":{\"130\":1}}],[\"不仅如此\",{\"1\":{\"55\":1}}],[\"不知道什么时候用\",{\"1\":{\"122\":1}}],[\"不知道各位小伙伴是否关注了\",{\"1\":{\"78\":1}}],[\"不要整蓝绿发版啥的\",{\"1\":{\"783\":1}}],[\"不要和前面的同名类混淆\",{\"1\":{\"162\":1}}],[\"不要幻想在插件链上看到它\",{\"1\":{\"130\":1}}],[\"不要固步自封\",{\"1\":{\"78\":1}}],[\"不要会有点懵逼\",{\"1\":{\"70\":1}}],[\"不要花大力气去解决那些偶然的事情\",{\"1\":{\"64\":1}}],[\"不熟悉的也没关系\",{\"1\":{\"64\":1}}],[\"不生产事务\",{\"1\":{\"61\":1}}],[\"不见不散\",{\"0\":{\"15\":1}}],[\"不得从事违法或损人利己的事情\",{\"1\":{\"7\":2}}],[\"摆摊啦\",{\"0\":{\"15\":1}}],[\"我是\",{\"1\":{\"792\":1}}],[\"我在\",{\"1\":{\"791\":1}}],[\"我觉得最大的特色是在流量筛选和管控方面\",{\"1\":{\"790\":1}}],[\"我觉得这样会更加友好\",{\"1\":{\"780\":1}}],[\"我怎么接入\",{\"1\":{\"789\":1}}],[\"我想使用熔断功能\",{\"1\":{\"789\":1}}],[\"我说的是假如\",{\"1\":{\"783\":1}}],[\"我还可以编写一个全自动模组回测功能对全市场的品种进行遍历测试\",{\"1\":{\"591\":1}}],[\"我生产环境正在跑的策略模组\",{\"1\":{\"590\":1}}],[\"我一直在思考打造一个可以集成\",{\"0\":{\"589\":1}}],[\"我相信你们每个公司都有一个后台管理系统吧\",{\"1\":{\"783\":1,\"791\":1}}],[\"我相信\",{\"1\":{\"507\":1}}],[\"我进行了深入研究\",{\"1\":{\"485\":1}}],[\"我都需要补很多测试用例\",{\"1\":{\"484\":1}}],[\"我都可以让他事务失效\",{\"1\":{\"64\":1}}],[\"我仍然会在社区里尽可能的解决你们的问题\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"我也邀请了一些优秀的同学来参与其他课题的研究\",{\"1\":{\"469\":1}}],[\"我希望我自己可以践行\",{\"1\":{\"501\":1}}],[\"我希望有更多的人来参与这个项目\",{\"1\":{\"469\":1}}],[\"我希望可以把\",{\"1\":{\"469\":1}}],[\"我放慢了发版的速度\",{\"1\":{\"469\":1}}],[\"我每年正月初七都会祝你们用这些钱吃的安心\",{\"1\":{\"456\":1}}],[\"我自己都不信\",{\"1\":{\"456\":1}}],[\"我为人人\",{\"1\":{\"308\":1}}],[\"我将\",{\"1\":{\"183\":1}}],[\"我将它理解为\",{\"1\":{\"177\":1}}],[\"我无法去筛选出某一个我需要的缓存在\",{\"1\":{\"168\":1}}],[\"我建了一个\",{\"1\":{\"166\":1}}],[\"我这里再把处理逻辑代码贴出来\",{\"1\":{\"157\":1}}],[\"我这里为了方便\",{\"1\":{\"92\":1}}],[\"我来猜测下它干了什么\",{\"1\":{\"144\":1}}],[\"我解释下核心计算权重的方面\",{\"1\":{\"135\":1}}],[\"我只能说\",{\"1\":{\"64\":1}}],[\"我的电子票\",{\"1\":{\"14\":1}}],[\"我们没有\",{\"1\":{\"792\":1}}],[\"我们来看一下整体的架构图\",{\"1\":{\"784\":1,\"791\":1}}],[\"我们来分析下\",{\"1\":{\"130\":1}}],[\"我们把这样一个大的\",{\"1\":{\"783\":1}}],[\"我们把所有监控的指标采集定义都视为一个个监控模版\",{\"1\":{\"442\":1}}],[\"我们注意到了这个事情\",{\"1\":{\"783\":1}}],[\"我们注意到阿里云短信因时序与阿里云服务器时序无法完全一致\",{\"1\":{\"736\":1}}],[\"我们都将十分感谢\",{\"1\":{\"766\":1}}],[\"我们都欢迎您的加入\",{\"1\":{\"634\":1}}],[\"我们真心的邀请大家参与到我们之中\",{\"1\":{\"765\":1}}],[\"我们拓展了\",{\"1\":{\"763\":1}}],[\"我们收到了很多的厂商接入建议\",{\"1\":{\"762\":1}}],[\"我们添加了用于获取它的实例\",{\"1\":{\"749\":1}}],[\"我们添加了一个新的方法\",{\"1\":{\"727\":1}}],[\"我们定名为\",{\"1\":{\"738\":1}}],[\"我们定义的继承也非常容易看懂\",{\"1\":{\"518\":1}}],[\"我们正在解决这个问题\",{\"1\":{\"736\":1}}],[\"我们正在寻找热爱前端开发的开发者\",{\"1\":{\"634\":1}}],[\"我们非常感谢社区用户对该项目的支持和认可\",{\"1\":{\"729\":1}}],[\"我们放宽了这个要求\",{\"1\":{\"727\":1}}],[\"我们还是先来看看新增功能\",{\"1\":{\"787\":1}}],[\"我们还去除了\",{\"1\":{\"732\":1}}],[\"我们还添加了一种新的配置方式\",{\"1\":{\"727\":1}}],[\"我们还改进了一些界面和操作方式\",{\"1\":{\"727\":1}}],[\"我们还对系统的部分细节进行了优化处理\",{\"1\":{\"727\":1}}],[\"我们修复了\",{\"1\":{\"735\":1}}],[\"我们修复了一些小\",{\"1\":{\"727\":1}}],[\"我们修改端口为\",{\"1\":{\"118\":1}}],[\"我们抽取了公共配置信息\",{\"1\":{\"727\":1}}],[\"我们优化了查询和更新操作的算法和实现方式\",{\"1\":{\"727\":1}}],[\"我们秉承和谐快乐\",{\"1\":{\"711\":1,\"725\":1}}],[\"我们团队重构了整个项目\",{\"1\":{\"704\":1}}],[\"我们费了非常大的精力\",{\"1\":{\"652\":1}}],[\"我们欢迎各级开发者的加入\",{\"1\":{\"635\":1}}],[\"我们欢迎每一位贡献者的加入\",{\"1\":{\"318\":1}}],[\"我们期待您\",{\"1\":{\"634\":1}}],[\"我们期待着您继续的支持和参与\",{\"1\":{\"633\":1}}],[\"我们邀请您加入\",{\"1\":{\"634\":1}}],[\"我们感谢所有使用\",{\"1\":{\"633\":1}}],[\"我们衷心感谢部门总监黎伟的大力支持\",{\"1\":{\"633\":1}}],[\"我们要感谢那些在\",{\"1\":{\"633\":1}}],[\"我们想对所有为\",{\"1\":{\"633\":1}}],[\"我们诚挚地邀请您成为我们社区的一员\",{\"1\":{\"627\":1}}],[\"我们兴奋地宣布\",{\"1\":{\"627\":1}}],[\"我们予以了支持\",{\"1\":{\"520\":1}}],[\"我们推出了链路继承这个特性\",{\"1\":{\"518\":1}}],[\"我们每一个成员都会全部通过测试用例\",{\"1\":{\"514\":1}}],[\"我们这次将测试用例数量提高到近\",{\"1\":{\"507\":1}}],[\"我们这里的是\",{\"1\":{\"126\":1}}],[\"我们不仅要开疆拓土\",{\"1\":{\"507\":1}}],[\"我们不见不散\",{\"1\":{\"14\":1}}],[\"我们支持了全方位的超时控制体系\",{\"1\":{\"504\":1}}],[\"我们支持在分布式环境中调用一个\",{\"1\":{\"62\":1}}],[\"我们对腾讯云短信实现进行了优化\",{\"1\":{\"734\":1}}],[\"我们对腾讯云国内短信实现进行了重构\",{\"1\":{\"727\":1}}],[\"我们对项目结构进行了优化\",{\"1\":{\"730\":1}}],[\"我们对阿里云国内短信实现进行了重构\",{\"1\":{\"727\":1}}],[\"我们对容联云国内短信实现进行了重构\",{\"1\":{\"727\":1}}],[\"我们对数据库刷新和读取的方法进行了优化\",{\"1\":{\"727\":1}}],[\"我们对每一个脚本和规则生成了指纹\",{\"1\":{\"503\":1}}],[\"我们对日志进行了大幅度的改造\",{\"1\":{\"474\":1}}],[\"我们做了非常多的优化\",{\"1\":{\"503\":1}}],[\"我们甚至开发了\",{\"1\":{\"503\":1}}],[\"我们疲惫且努力的追逐那道光\",{\"1\":{\"501\":1}}],[\"我们系统的针对\",{\"1\":{\"482\":1}}],[\"我们参考\",{\"1\":{\"460\":1}}],[\"我们有权利追诉破坏开源并因此获利的团队个人的全部违法所得\",{\"1\":{\"456\":1}}],[\"我们有一张表单独存储\",{\"1\":{\"278\":1}}],[\"我们又为什么要开源集群版\",{\"1\":{\"456\":1}}],[\"我们重写了采集任务调度\",{\"1\":{\"453\":1}}],[\"我们重点需要关注的是\",{\"1\":{\"264\":1}}],[\"我们之前的\",{\"1\":{\"453\":1}}],[\"我们之前的两个疑问点\",{\"1\":{\"168\":1}}],[\"我们将详细介绍这些更新内容\",{\"1\":{\"727\":1}}],[\"我们将复杂的测试流程管理变得直观易用\",{\"1\":{\"628\":1}}],[\"我们将监控采集类型\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"我们将http\",{\"1\":{\"441\":1,\"447\":1}}],[\"我们将测试方法改进下\",{\"1\":{\"167\":1}}],[\"我们改变了线程池以往的使用姿势\",{\"1\":{\"409\":1,\"419\":1}}],[\"我们也在逐步的从中选取厂商进行接入\",{\"1\":{\"762\":1}}],[\"我们也有完备的社区和组织\",{\"1\":{\"507\":1}}],[\"我们也接受其他任何形式的帮助\",{\"1\":{\"334\":1}}],[\"我们也为大家制作了一份详尽的参会攻略\",{\"1\":{\"11\":1}}],[\"我们强调社区协作\",{\"1\":{\"334\":1}}],[\"我们致力为用户提供简单易用的大数据产品\",{\"1\":{\"334\":1}}],[\"我们一起学猫叫\",{\"1\":{\"308\":1}}],[\"我们一般有以下\",{\"1\":{\"263\":1}}],[\"我们首先需要判断出这个服务是否出现了不稳定\",{\"1\":{\"264\":1}}],[\"我们应该主要思考以下几个问题\",{\"1\":{\"263\":1}}],[\"我们明白\",{\"1\":{\"259\":1}}],[\"我们发现一次针对于\",{\"1\":{\"231\":1}}],[\"我们大体梳理了注入到plugins的插件\",{\"1\":{\"231\":1}}],[\"我们已经修复了自定义配置抛出异常的问题\",{\"1\":{\"733\":1}}],[\"我们已经去除了腾讯\",{\"1\":{\"731\":1}}],[\"我们已经知晓该方法的作用是为了选取插件\",{\"1\":{\"234\":1}}],[\"我们已经知晓了\",{\"1\":{\"231\":1}}],[\"我们已经理清它最最基本的长轮询逻辑\",{\"1\":{\"145\":1}}],[\"我们以常用的\",{\"1\":{\"219\":1}}],[\"我们先来看看插件实现\",{\"1\":{\"218\":1}}],[\"我们先不妨研究下\",{\"1\":{\"164\":1}}],[\"我们需要做的还有很多\",{\"1\":{\"765\":1}}],[\"我们需要开打\",{\"1\":{\"272\":1}}],[\"我们需要在配置路径使用\",{\"1\":{\"258\":1}}],[\"我们需要先了解下微内核架构\",{\"1\":{\"213\":1}}],[\"我们需要注意\",{\"1\":{\"116\":1}}],[\"我们知道\",{\"1\":{\"208\":1,\"783\":1}}],[\"我们知道后台配置肯定修改完是要落盘到数据库的\",{\"1\":{\"145\":1}}],[\"我们找到入口方法\",{\"1\":{\"176\":1}}],[\"我们在开启\",{\"1\":{\"790\":1}}],[\"我们在这个版本中对其进行了修复\",{\"1\":{\"750\":1}}],[\"我们在确保新特性推出的同时\",{\"1\":{\"514\":1}}],[\"我们在\",{\"1\":{\"171\":1,\"257\":1}}],[\"我们在接下来的几天陆续推送\",{\"1\":{\"38\":1}}],[\"我们会直接用\",{\"1\":{\"171\":1}}],[\"我们看看\",{\"1\":{\"170\":1}}],[\"我们看看下面的实验\",{\"1\":{\"166\":1}}],[\"我们自己的通常是弟中弟\",{\"1\":{\"167\":1}}],[\"我们继续\",{\"1\":{\"154\":1}}],[\"我们分析了\",{\"1\":{\"150\":1}}],[\"我们现在正在逐步的进行优化\",{\"1\":{\"729\":1}}],[\"我们现在知道了模式是阻塞等待\",{\"1\":{\"145\":1}}],[\"我们现在追踪下\",{\"1\":{\"144\":1}}],[\"我们是如何得知数据有变化的呢\",{\"1\":{\"145\":1}}],[\"我们具体看看各个策略的代码实现\",{\"1\":{\"132\":1}}],[\"我们的后台都划分成很多的微服务\",{\"1\":{\"783\":1,\"791\":1}}],[\"我们的团队正在积极推动\",{\"1\":{\"634\":1}}],[\"我们的开源项目\",{\"1\":{\"627\":1}}],[\"我们的\",{\"1\":{\"131\":1}}],[\"我们的愿景\",{\"0\":{\"1\":1}}],[\"我们总结下\",{\"1\":{\"127\":1}}],[\"我们回退\",{\"1\":{\"125\":1}}],[\"我们再来说一下\",{\"1\":{\"259\":1}}],[\"我们再来看看在\",{\"1\":{\"92\":1}}],[\"我们再进入管理控制台\",{\"1\":{\"118\":1}}],[\"我们启动端口为\",{\"1\":{\"116\":1}}],[\"我们启动两个项目之后就可以通过后台管理系统测试\",{\"1\":{\"112\":1}}],[\"我们可以用强化学习来优化策略并生产信号\",{\"1\":{\"593\":1}}],[\"我们可以在管理后台的调度实例页面\",{\"1\":{\"406\":1}}],[\"我们可以在每循环\",{\"1\":{\"406\":1}}],[\"我们可以使用\",{\"1\":{\"406\":1}}],[\"我们可以选择\",{\"1\":{\"266\":1}}],[\"我们可以大体猜测出基于别\",{\"1\":{\"237\":1}}],[\"我们可以配置一个业务对应一个\",{\"1\":{\"116\":1}}],[\"我们可以想象一下网关到底是做什么的\",{\"1\":{\"113\":1}}],[\"我们最终运行的是\",{\"1\":{\"116\":1}}],[\"我们直接运行\",{\"1\":{\"116\":1}}],[\"我们直接在页面把选择器中的条件\",{\"1\":{\"92\":1}}],[\"我们掌握好它\",{\"1\":{\"113\":1}}],[\"我们打开管理界面上的插件列表\",{\"1\":{\"113\":1}}],[\"我们通过\",{\"1\":{\"112\":1,\"140\":1}}],[\"我们为什么不使用呢\",{\"1\":{\"71\":1}}],[\"我们使用了\",{\"1\":{\"71\":1}}],[\"我们作为程序员可能大家都会有这样一个想法\",{\"1\":{\"56\":1}}],[\"我们\",{\"1\":{\"50\":1}}],[\"我们给大家准备精美礼品~\",{\"1\":{\"15\":1}}],[\"我们很高兴看到越来越多中国的开发者与开源项目加入\",{\"1\":{\"11\":1}}],[\"并保证设备的稳定运行\",{\"1\":{\"794\":1}}],[\"并集成了设备管理\",{\"1\":{\"794\":1}}],[\"并启动\",{\"1\":{\"788\":1}}],[\"并启用了\",{\"1\":{\"763\":1}}],[\"并对其进行一定的处理\",{\"1\":{\"775\":1}}],[\"并实现两个方法\",{\"1\":{\"763\":1}}],[\"并伴随着大版本更新一同发布\",{\"1\":{\"738\":1}}],[\"并提高了整体性能\",{\"1\":{\"731\":1}}],[\"并点图标\",{\"1\":{\"678\":1}}],[\"并引入了更多功能\",{\"1\":{\"633\":1}}],[\"并配置如下内容\",{\"1\":{\"582\":1,\"585\":1}}],[\"并未在\",{\"1\":{\"482\":1}}],[\"并未破坏原有\",{\"1\":{\"370\":1,\"385\":1}}],[\"并可对规则进行全方位的界面式管理\",{\"1\":{\"469\":1}}],[\"并填上host和port就能轻松实现\",{\"1\":{\"432\":1}}],[\"并覆盖\",{\"1\":{\"430\":1}}],[\"并默认使用\",{\"1\":{\"428\":1}}],[\"并用\",{\"1\":{\"428\":1}}],[\"并完成前后端联调验证\",{\"1\":{\"397\":2}}],[\"并与已有的用户权限体系解耦\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"并为最终用户提供更好的物联网设备体验\",{\"1\":{\"794\":1}}],[\"并为您的开发工作带来便利\",{\"1\":{\"736\":1}}],[\"并为其做了一些改动\",{\"1\":{\"608\":1}}],[\"并为插件化做准备\",{\"1\":{\"342\":1}}],[\"并为大家演示了如何通过华为云商店安装部署\",{\"1\":{\"52\":1}}],[\"并乐意与社区分享\",{\"1\":{\"334\":1}}],[\"并支持配置的动态刷新\",{\"1\":{\"707\":1}}],[\"并支持\",{\"1\":{\"315\":1,\"727\":1}}],[\"并支持对\",{\"1\":{\"88\":1}}],[\"并存储到插件数据中\",{\"1\":{\"314\":1}}],[\"并经由投票通过后生效\",{\"1\":{\"306\":1}}],[\"并同步到技术社区\",{\"1\":{\"304\":1}}],[\"并进行持续不断的优化\",{\"1\":{\"783\":1}}],[\"并进行全员公告\",{\"1\":{\"304\":1}}],[\"并进行处理的大体流程\",{\"1\":{\"294\":1}}],[\"并发性能调优等有挑战性的工作\",{\"1\":{\"396\":1}}],[\"并发线程数\",{\"1\":{\"266\":1}}],[\"并发垃圾回收器增强\",{\"1\":{\"87\":1}}],[\"并不断进化的国产开源规则引擎\",{\"1\":{\"469\":1}}],[\"并不是所有内容都对用户有帮助\",{\"1\":{\"367\":1,\"382\":1}}],[\"并不直接向后端服务发起\",{\"1\":{\"224\":1}}],[\"并不会影响程序正确执行\",{\"1\":{\"69\":1}}],[\"并以此为框架分析\",{\"1\":{\"221\":1}}],[\"并监听事件同步更新数据至\",{\"1\":{\"206\":1}}],[\"并通过类对象初始化实例\",{\"1\":{\"181\":1}}],[\"并判断是否与接口符合\",{\"1\":{\"167\":1}}],[\"并返回结果result\",{\"1\":{\"294\":1}}],[\"并返回\",{\"1\":{\"167\":1,\"294\":1}}],[\"并成功调取它们各自的\",{\"1\":{\"166\":1}}],[\"并调用\",{\"1\":{\"195\":1}}],[\"并调用对应的\",{\"1\":{\"162\":1}}],[\"并调用子类\",{\"1\":{\"129\":1}}],[\"并更新缓存\",{\"1\":{\"148\":1}}],[\"并开启多个线程进行轮询监听\",{\"1\":{\"148\":1}}],[\"并将收到的邮件进行自定义的处理\",{\"1\":{\"775\":1}}],[\"并将文档存储到数据库\",{\"1\":{\"314\":1}}],[\"并将该项目历史记录进行归档保存\",{\"1\":{\"305\":1}}],[\"并将其放在了serverwebexchange中\",{\"1\":{\"233\":1}}],[\"并将其拓展为支持一对多的映射关系\",{\"1\":{\"47\":1}}],[\"并将数据发送到各个插件的数据处理类中\",{\"1\":{\"148\":1}}],[\"并确定随机值落在哪个片断上\",{\"1\":{\"134\":1}}],[\"并没有在调用它的时候\",{\"1\":{\"167\":1}}],[\"并没有使用到\",{\"1\":{\"133\":1}}],[\"并没有去创建自有的协议让对端监控去适配\",{\"1\":{\"54\":1}}],[\"并比对treemap\",{\"1\":{\"133\":1}}],[\"并放入\",{\"1\":{\"131\":1}}],[\"并注入到\",{\"1\":{\"130\":1}}],[\"并得到唯一一个匹配的选择器数据\",{\"1\":{\"129\":1}}],[\"并使用模板方法的设计模式\",{\"1\":{\"128\":1}}],[\"并行全垃圾回收器等新特性\",{\"1\":{\"90\":1}}],[\"并行处理引用操作\",{\"1\":{\"85\":1}}],[\"并在插件架构上逐渐推出了\",{\"1\":{\"469\":1}}],[\"并在集合中剔除这个请求\",{\"1\":{\"144\":1}}],[\"并在\",{\"1\":{\"83\":1}}],[\"并在项目启动时感知索引变化\",{\"1\":{\"47\":1}}],[\"并在早上\",{\"1\":{\"12\":1}}],[\"并显著减少开发和运维负担\",{\"1\":{\"46\":1}}],[\"并且支持自定义\",{\"1\":{\"774\":1}}],[\"并且带来了诸多的新特性\",{\"1\":{\"768\":1}}],[\"并且不关注本次短信使用哪个厂商发送时\",{\"1\":{\"748\":1}}],[\"并且移除响应下拉框\",{\"1\":{\"694\":1}}],[\"并且在其他地方使用\",{\"1\":{\"677\":1}}],[\"并且调整了背景色\",{\"1\":{\"659\":1}}],[\"并且需要每个应用实例都进行刷新\",{\"1\":{\"515\":1}}],[\"并且我们的测试用例代码行覆盖率达到了非常高的\",{\"1\":{\"514\":1}}],[\"并且指定监听的\",{\"1\":{\"327\":1}}],[\"并且修复了若干个\",{\"1\":{\"312\":1}}],[\"并且发布到\",{\"1\":{\"303\":1}}],[\"并且采用\",{\"1\":{\"269\":1}}],[\"并且只是最终保证流程处理完\",{\"1\":{\"264\":1}}],[\"并且超过最大忍受时间的请求大于阈值\",{\"1\":{\"264\":1}}],[\"并且使用了\",{\"1\":{\"156\":1}}],[\"并且项目里还有节点信息缓存管理器\",{\"1\":{\"131\":1}}],[\"并且可以快速地查看和修改代码\",{\"1\":{\"81\":1}}],[\"并且全部异步化\",{\"1\":{\"61\":1}}],[\"并且占用的磁盘存储空间也相对更少\",{\"1\":{\"47\":1}}],[\"并且更新文档\",{\"1\":{\"42\":1}}],[\"并且翻译成英文\",{\"1\":{\"41\":1}}],[\"并设置两大圆桌讨论\",{\"1\":{\"15\":1}}],[\"并选择真实的调用地址\",{\"1\":{\"235\":1}}],[\"并选择\",{\"1\":{\"14\":1}}],[\"微博\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"微内核架构的本质\",{\"1\":{\"215\":1}}],[\"微内核架构也被称为插件化架构\",{\"1\":{\"215\":1}}],[\"微内核架构\",{\"0\":{\"214\":1}}],[\"微内核架构分享\",{\"1\":{\"33\":1}}],[\"微基准测试套件\",{\"1\":{\"79\":1}}],[\"微服务列子\",{\"1\":{\"709\":1}}],[\"微服务架构\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"微服务版案例\",{\"1\":{\"373\":1,\"388\":1}}],[\"微服务\",{\"1\":{\"37\":1,\"709\":1}}],[\"微服务框架和工具\",{\"1\":{\"8\":1,\"299\":1}}],[\"微软\",{\"1\":{\"15\":1}}],[\"微信二维码\",{\"1\":{\"587\":1}}],[\"微信号\",{\"1\":{\"587\":1}}],[\"微信交流群请加好友\",{\"1\":{\"465\":1}}],[\"微信小程序\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"微信小程序参数获取未补充错误\",{\"1\":{\"354\":1}}],[\"微信社区\",{\"1\":{\"336\":1,\"340\":1}}],[\"微信\",{\"1\":{\"53\":1,\"449\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"微信搜索并关注微信公众号\",{\"1\":{\"14\":1}}],[\"微信端门票二维码获取方式\",{\"0\":{\"14\":1}}],[\"您将有机会深入了解自动化测试领域的最新动态和最佳实践\",{\"1\":{\"635\":1}}],[\"您是否热衷于技术创新\",{\"1\":{\"634\":1}}],[\"您的sdkappid\",{\"1\":{\"772\":2}}],[\"您的短信签名\",{\"1\":{\"759\":1,\"772\":2}}],[\"您的templatename\",{\"1\":{\"759\":1}}],[\"您的templateid\",{\"1\":{\"759\":1}}],[\"您的支持是我们前进的动力\",{\"1\":{\"741\":1}}],[\"您的支持是我们前进的最大动力\",{\"1\":{\"736\":1}}],[\"您的accesskeysecret\",{\"1\":{\"740\":1,\"759\":1,\"772\":2}}],[\"您的accesskey\",{\"1\":{\"740\":1,\"759\":1,\"772\":2}}],[\"您的贡献将会被广泛认可\",{\"1\":{\"635\":1}}],[\"您的努力推动\",{\"1\":{\"633\":1}}],[\"您的每颗星星都对我们意义重大\",{\"1\":{\"629\":1}}],[\"您深知开源社区的力量\",{\"1\":{\"629\":1}}],[\"您相信只需配置下就能立刻适配一款\",{\"1\":{\"452\":1,\"464\":1}}],[\"您相信只需定义\",{\"1\":{\"441\":1}}],[\"您只需配置yml就能使用这些协议去自定义采集任何您想要的指标\",{\"1\":{\"447\":1}}],[\"您只需配置yml监控模版就能使用这些协议去自定义采集任何您想要的指标\",{\"1\":{\"441\":1}}],[\"您也可以在百格活动微信公众号找到您的电子门票\",{\"1\":{\"13\":1}}],[\"您可以根据自己的需求和业务场景\",{\"1\":{\"727\":1}}],[\"您可以更加方便地进行数据库的管理和维护\",{\"1\":{\"727\":1}}],[\"您可以更加方便地管理和配置系统\",{\"1\":{\"727\":1}}],[\"您可以更加稳定地发送短信\",{\"1\":{\"727\":1}}],[\"您可以更快速地发送短信\",{\"1\":{\"727\":2}}],[\"您可以更快速地读取和更新数据库中的数据\",{\"1\":{\"727\":1}}],[\"您可以通过这个新方法来刷新和更新数据库配置\",{\"1\":{\"727\":1}}],[\"您可以通过编写代码\",{\"1\":{\"635\":1}}],[\"您可以\",{\"1\":{\"635\":1}}],[\"您可以构建完整的测试流程\",{\"1\":{\"628\":1}}],[\"您可\",{\"1\":{\"13\":1}}],[\"元素可自定义拖拽设计\",{\"1\":{\"829\":1}}],[\"元素可以自定义大小\",{\"1\":{\"827\":1}}],[\"元素\",{\"1\":{\"827\":1}}],[\"元素及模板中多种格式的\",{\"1\":{\"827\":1}}],[\"元素编辑\",{\"0\":{\"827\":1}}],[\"元信息\",{\"1\":{\"278\":1}}],[\"元数据处理函数\",{\"1\":{\"315\":1}}],[\"元数据作用就是在进行协议转换时候要获取真实的请求\",{\"1\":{\"278\":1}}],[\"元数据\",{\"1\":{\"277\":1,\"809\":1}}],[\"元数据介绍\",{\"0\":{\"278\":1},\"1\":{\"276\":1}}],[\"元数据只有\",{\"1\":{\"208\":1}}],[\"元数据订阅\",{\"1\":{\"205\":1}}],[\"元\",{\"1\":{\"24\":2,\"36\":2,\"308\":1}}],[\"元不等\",{\"1\":{\"13\":1}}],[\"元至\",{\"1\":{\"13\":1}}],[\"从发布\",{\"0\":{\"792\":1}}],[\"从仓库发行版下载最新版本的客户端\",{\"1\":{\"575\":1}}],[\"从这个版本开始有逆向操作了\",{\"1\":{\"506\":1}}],[\"从标签式流程全面转向\",{\"1\":{\"469\":1}}],[\"从上一次的状态中接着继续统计\",{\"1\":{\"406\":1}}],[\"从上到下从左到右分别是\",{\"1\":{\"266\":1}}],[\"从系统核心内容中剥离\",{\"1\":{\"367\":1,\"382\":1}}],[\"从接触\",{\"1\":{\"308\":1}}],[\"从配置信息我们知道熔断器默认是关闭\",{\"1\":{\"272\":1}}],[\"从插件配置中生成sentinel使用的资源名称\",{\"1\":{\"266\":1}}],[\"从流量控制\",{\"1\":{\"264\":1}}],[\"从并发数来考量的话就是请求上下文的线程数目超过多少进行流控\",{\"1\":{\"263\":1}}],[\"从某种意义上讲通过并发进行流控可以一定程度上保护网关服务本身\",{\"1\":{\"263\":1}}],[\"从缓存中获取数据\",{\"1\":{\"149\":1}}],[\"从当前ip得到一个hash值\",{\"1\":{\"133\":1}}],[\"从一个简陋的小工具逐步完善\",{\"1\":{\"633\":1}}],[\"从一个\",{\"0\":{\"166\":1}}],[\"从一个类关系图说起\",{\"1\":{\"128\":1}}],[\"从一个项目成长到今天\",{\"1\":{\"11\":1}}],[\"从而使用用户自己的\",{\"1\":{\"763\":1}}],[\"从而使用自己的方式进行缓存\",{\"1\":{\"763\":1}}],[\"从而使您的业务运行更加稳定和高效\",{\"1\":{\"727\":1}}],[\"从而使得多合约回测变得像看视频一样简单\",{\"1\":{\"591\":1}}],[\"从而找到最合适的品种\",{\"1\":{\"591\":1}}],[\"从而达到快速灵活扩展的目的\",{\"1\":{\"215\":1}}],[\"从而达到时时生效的目地\",{\"1\":{\"92\":1}}],[\"从而提高系统的可靠性和稳定性\",{\"1\":{\"727\":1}}],[\"从而提高系统的响应速度和处理效率\",{\"1\":{\"727\":1}}],[\"从而提高计算效率\",{\"1\":{\"88\":1}}],[\"从而提高代码的可扩展性和互操作性\",{\"1\":{\"89\":1}}],[\"从而提高代码的可读性和灵活性\",{\"1\":{\"89\":1}}],[\"从而提高代码的可维护性\",{\"1\":{\"87\":1}}],[\"从而提高代码的灵活性\",{\"1\":{\"89\":1}}],[\"从而提高代码的灵活性和安全性\",{\"1\":{\"87\":1}}],[\"从而提高了系统的稳定性和用户体验\",{\"1\":{\"727\":1}}],[\"从而提高了系统的响应速度和处理效率\",{\"1\":{\"727\":1}}],[\"从而提高了网络编程的性能和可维护性\",{\"1\":{\"85\":1}}],[\"从而提高了\",{\"1\":{\"82\":1,\"85\":1,\"87\":1}}],[\"从而提高了代码的可维护性和可重用性\",{\"1\":{\"81\":1}}],[\"从而可以更方便地进行对象的创建和操作\",{\"1\":{\"88\":1}}],[\"从而可以更方便地进行流程控制\",{\"1\":{\"84\":1,\"86\":1}}],[\"从而可以更方便地生成动态字符串\",{\"1\":{\"86\":1,\"87\":1}}],[\"从而简化代码编写的复杂度\",{\"1\":{\"85\":1,\"86\":1}}],[\"从而更好地支持动态语言和元编程\",{\"1\":{\"84\":1}}],[\"从而更好地评估\",{\"1\":{\"84\":1}}],[\"从而加速\",{\"1\":{\"82\":1}}],[\"从而到达最终一致性\",{\"1\":{\"62\":1}}],[\"从多个角度探讨开源与各项技术\",{\"1\":{\"15\":1}}],[\"从\",{\"1\":{\"13\":1,\"92\":1,\"205\":1,\"287\":1,\"316\":1,\"368\":1,\"373\":1,\"388\":1,\"575\":1}}],[\"天翼云盘\",{\"1\":{\"808\":1}}],[\"天翼云\",{\"1\":{\"808\":1}}],[\"天翼云短信\",{\"1\":{\"745\":1}}],[\"天天写\",{\"1\":{\"791\":1}}],[\"天生支持多机\",{\"1\":{\"608\":1}}],[\"天生支持分布式\",{\"1\":{\"608\":1}}],[\"天总\",{\"1\":{\"442\":1}}],[\"天地\",{\"1\":{\"308\":1}}],[\"天然支持集群部署\",{\"1\":{\"706\":1}}],[\"天然支持集群\",{\"1\":{\"63\":1}}],[\"天的源码阅读\",{\"1\":{\"24\":1}}],[\"天的开源行业盛会\",{\"1\":{\"15\":1}}],[\"天\",{\"0\":{\"440\":1},\"1\":{\"13\":1}}],[\"皆需凭票扫码入场\",{\"1\":{\"13\":1}}],[\"楼宴会厅\",{\"1\":{\"12\":1}}],[\"酒店停车位有限\",{\"1\":{\"12\":1}}],[\"自由切换\",{\"1\":{\"824\":1}}],[\"自由的告警阈值规则\",{\"1\":{\"452\":1,\"464\":1}}],[\"自研\",{\"1\":{\"794\":1}}],[\"自行搭建\",{\"1\":{\"608\":1}}],[\"自行分析拼接\",{\"1\":{\"608\":1}}],[\"自从\",{\"0\":{\"589\":1}}],[\"自己的数据库实例\",{\"1\":{\"582\":1}}],[\"自己仓库中的\",{\"0\":{\"96\":1}}],[\"自主可控\",{\"1\":{\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"自然会用心去做这个规划\",{\"1\":{\"493\":1}}],[\"自然是为了防止大量的循环的无用拉取\",{\"1\":{\"149\":1}}],[\"自我感觉良好\",{\"1\":{\"460\":1}}],[\"自\",{\"1\":{\"353\":1,\"358\":1}}],[\"自身接口转发\",{\"1\":{\"258\":1}}],[\"自身\",{\"1\":{\"135\":1}}],[\"自定义修改码值\",{\"1\":{\"827\":1}}],[\"自定义二维码内容\",{\"1\":{\"827\":1}}],[\"自定义存储平台等地方获取使用\",{\"1\":{\"816\":1}}],[\"自定义注解\",{\"1\":{\"802\":1}}],[\"自定义插件\",{\"1\":{\"783\":1}}],[\"自定义模块\",{\"1\":{\"707\":1}}],[\"自定义有效期功能\",{\"1\":{\"617\":1}}],[\"自定义有效期\",{\"1\":{\"616\":1}}],[\"自定义证书\",{\"1\":{\"585\":1}}],[\"自定义异步线程池初始化存在并发问题\",{\"1\":{\"522\":1}}],[\"自定义的标识\",{\"1\":{\"772\":2,\"775\":1}}],[\"自定义的\",{\"1\":{\"430\":1,\"822\":1}}],[\"自定义封装组件\",{\"1\":{\"397\":1}}],[\"自定义请求参数实体保持继承结构的同时简化传递参数\",{\"1\":{\"374\":1,\"389\":1}}],[\"自定义实体和转换器简化参数结构\",{\"1\":{\"374\":1,\"389\":1}}],[\"自定义极简\",{\"1\":{\"372\":1,\"387\":1}}],[\"自定义\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"790\":1}}],[\"自定义配置内容和形式\",{\"1\":{\"727\":1}}],[\"自定义配置\",{\"1\":{\"270\":1}}],[\"自定义结束数据变动后要干什么\",{\"1\":{\"141\":1}}],[\"自定义流量就是请求会走你下面的匹配方式与条件\",{\"1\":{\"114\":1}}],[\"自定义开发官网\",{\"1\":{\"40\":1}}],[\"自带的短信拦截功能中\",{\"1\":{\"763\":1}}],[\"自带的响应式编程把数据同步到\",{\"1\":{\"92\":1}}],[\"自带aop拦截需要增强获取tag等信息\",{\"1\":{\"492\":1}}],[\"自带响应式编程的方法\",{\"1\":{\"92\":1}}],[\"自动发现服务\",{\"1\":{\"783\":1}}],[\"自动打包成\",{\"1\":{\"774\":1}}],[\"自动选择托管中的短信服务\",{\"1\":{\"748\":1}}],[\"自动域名优化\",{\"1\":{\"692\":1}}],[\"自动域名解析优化\",{\"1\":{\"667\":1}}],[\"自动域名设置更多详情\",{\"1\":{\"664\":1}}],[\"自动域名\",{\"0\":{\"664\":1},\"1\":{\"663\":1}}],[\"自动化测试工具加入\",{\"0\":{\"626\":1,\"627\":1}}],[\"自动续签\",{\"1\":{\"624\":1}}],[\"自动处理\",{\"1\":{\"617\":1}}],[\"自动排列布局\",{\"1\":{\"608\":1}}],[\"自动合并相同内容\",{\"1\":{\"608\":1}}],[\"自动配置规范\",{\"1\":{\"397\":1}}],[\"自动生成\",{\"1\":{\"383\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"自动装配\",{\"1\":{\"221\":1}}],[\"自动完成索引的创建\",{\"1\":{\"47\":1}}],[\"自动挡模式\",{\"1\":{\"47\":1}}],[\"自动部署\",{\"1\":{\"4\":1}}],[\"自驾\",{\"1\":{\"12\":1}}],[\"5n6fvxxxx920hawhvxxxxxx7fya\",{\"1\":{\"740\":1}}],[\"5版本中scriptbean注解注入bean失败\",{\"1\":{\"492\":1}}],[\"5发布\",{\"0\":{\"472\":1}}],[\"52\",{\"1\":{\"315\":1,\"316\":1}}],[\"5273\",{\"1\":{\"208\":1}}],[\"533\",{\"1\":{\"397\":1}}],[\"53\",{\"1\":{\"315\":2,\"316\":1}}],[\"5<\",{\"1\":{\"280\":1}}],[\"540\",{\"1\":{\"616\":1}}],[\"54\",{\"1\":{\"208\":3,\"316\":1}}],[\"549477611\",{\"1\":{\"42\":1}}],[\"563\",{\"1\":{\"723\":2}}],[\"568\",{\"1\":{\"722\":1}}],[\"56\",{\"1\":{\"208\":6}}],[\"59\",{\"1\":{\"199\":6,\"208\":3}}],[\"584\",{\"1\":{\"724\":1}}],[\"585\",{\"1\":{\"723\":1}}],[\"583\",{\"1\":{\"723\":1}}],[\"581\",{\"1\":{\"723\":1}}],[\"5811b56257e31109621976d39fc226aa\",{\"1\":{\"92\":2}}],[\"580\",{\"1\":{\"722\":1}}],[\"58\",{\"1\":{\"199\":1,\"208\":1}}],[\"58214\",{\"1\":{\"199\":1}}],[\"5min\",{\"1\":{\"193\":1}}],[\"51\",{\"1\":{\"109\":1,\"271\":1,\"315\":1,\"316\":1,\"442\":1}}],[\"572\",{\"1\":{\"724\":1}}],[\"578\",{\"1\":{\"723\":1}}],[\"570\",{\"1\":{\"723\":2}}],[\"57\",{\"1\":{\"105\":3}}],[\"5f79d821e3b601330631a2d53294fb34\",{\"1\":{\"92\":2}}],[\"555\",{\"1\":{\"724\":1}}],[\"554\",{\"1\":{\"723\":1}}],[\"55\",{\"1\":{\"30\":2,\"33\":2,\"316\":1}}],[\"502819\",{\"1\":{\"308\":1}}],[\"508\",{\"1\":{\"101\":1}}],[\"50\",{\"0\":{\"440\":1},\"1\":{\"30\":2,\"33\":2,\"125\":1,\"270\":1,\"271\":1,\"308\":22,\"315\":1,\"316\":1}}],[\"500ms\",{\"1\":{\"266\":2,\"678\":1}}],[\"50000\",{\"1\":{\"702\":1}}],[\"5000\",{\"1\":{\"198\":2,\"199\":2,\"270\":1}}],[\"500\",{\"1\":{\"24\":1,\"270\":1,\"272\":1,\"729\":1}}],[\"5\",{\"0\":{\"155\":1,\"156\":1,\"157\":1,\"341\":1,\"348\":1,\"425\":1,\"429\":1,\"474\":1,\"506\":1,\"524\":1,\"530\":1,\"536\":1,\"611\":1,\"656\":1,\"688\":1,\"719\":1,\"721\":1,\"800\":1},\"1\":{\"12\":1,\"15\":1,\"79\":1,\"92\":3,\"101\":1,\"149\":3,\"152\":1,\"154\":1,\"156\":1,\"199\":1,\"200\":1,\"208\":11,\"209\":2,\"231\":1,\"265\":3,\"266\":1,\"308\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":2,\"316\":1,\"338\":1,\"351\":1,\"354\":2,\"368\":2,\"397\":4,\"430\":1,\"469\":2,\"474\":1,\"498\":1,\"504\":1,\"526\":2,\"528\":1,\"529\":3,\"532\":2,\"534\":1,\"535\":4,\"538\":2,\"540\":1,\"541\":3,\"544\":2,\"547\":1,\"554\":2,\"564\":2,\"577\":1,\"603\":2,\"608\":1,\"612\":2,\"613\":2,\"616\":7,\"644\":1,\"707\":1,\"720\":1,\"724\":1,\"797\":2,\"798\":1,\"799\":1,\"800\":1}}],[\"fn\",{\"1\":{\"458\":1}}],[\"ftp\",{\"1\":{\"445\":1,\"449\":1,\"459\":1,\"808\":1}}],[\"frontend\",{\"1\":{\"644\":2}}],[\"frontend下maxkey\",{\"1\":{\"529\":1}}],[\"fromyaml\",{\"1\":{\"760\":1}}],[\"fromfuture\",{\"1\":{\"289\":1}}],[\"fromiterable\",{\"1\":{\"259\":1}}],[\"fromdatabuffers\",{\"1\":{\"136\":1,\"236\":1}}],[\"fromjson\",{\"1\":{\"131\":1,\"148\":2,\"149\":2,\"161\":1,\"209\":1,\"219\":1,\"224\":1,\"235\":1,\"247\":1,\"249\":1,\"259\":1,\"266\":2,\"273\":1}}],[\"from\",{\"1\":{\"126\":1,\"148\":1,\"173\":2,\"249\":1}}],[\"fromlist\",{\"1\":{\"123\":1,\"125\":1}}],[\"freeotp\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"freebsd\",{\"1\":{\"449\":1}}],[\"framework\",{\"1\":{\"784\":1,\"791\":1,\"797\":1,\"802\":1}}],[\"framework<\",{\"1\":{\"280\":1}}],[\"frames\",{\"1\":{\"208\":2}}],[\"f7\",{\"1\":{\"156\":1}}],[\"f12\",{\"1\":{\"152\":1}}],[\"fedora\",{\"1\":{\"449\":1}}],[\"feat\",{\"1\":{\"438\":2,\"458\":2}}],[\"features\",{\"0\":{\"338\":1}}],[\"feature\",{\"0\":{\"411\":1},\"1\":{\"57\":1,\"458\":7}}],[\"feignclient\",{\"1\":{\"709\":2}}],[\"feign\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"708\":1,\"714\":1}}],[\"fetchpageresults\",{\"1\":{\"547\":1}}],[\"fetch\",{\"1\":{\"148\":4,\"149\":1}}],[\"fetchgroupconfig\",{\"1\":{\"148\":3}}],[\"flatten\",{\"1\":{\"617\":1}}],[\"flatmap\",{\"1\":{\"136\":1,\"236\":1,\"249\":1,\"259\":2}}],[\"flink\",{\"1\":{\"331\":2,\"339\":2,\"445\":1,\"449\":1,\"459\":1}}],[\"floor\",{\"1\":{\"252\":1}}],[\"flowexecutor\",{\"1\":{\"474\":2}}],[\"flowexception的父类\",{\"1\":{\"266\":1}}],[\"flowexception\",{\"1\":{\"266\":1}}],[\"flow认证上线\",{\"0\":{\"358\":1}}],[\"flowrule\",{\"1\":{\"266\":2}}],[\"flowrulemanager\",{\"1\":{\"266\":4}}],[\"flowrules\",{\"1\":{\"266\":3}}],[\"flow\",{\"1\":{\"114\":2,\"124\":1,\"129\":1,\"219\":1,\"224\":1,\"234\":1,\"266\":1,\"359\":3,\"360\":2,\"379\":3,\"394\":3,\"401\":3}}],[\"flux\",{\"1\":{\"249\":1,\"259\":1}}],[\"flux<list<long>>\",{\"1\":{\"249\":1}}],[\"funcfilter\",{\"1\":{\"723\":1}}],[\"function<throwable\",{\"1\":{\"273\":2}}],[\"function\",{\"1\":{\"89\":3,\"90\":1,\"271\":1}}],[\"fullname\",{\"1\":{\"167\":3}}],[\"full=false\",{\"1\":{\"103\":1}}],[\"full\",{\"1\":{\"103\":1,\"114\":1,\"129\":1,\"219\":1,\"224\":1,\"234\":1,\"459\":1}}],[\"future\",{\"1\":{\"15\":1,\"289\":2}}],[\"font\",{\"1\":{\"825\":1}}],[\"fonts\",{\"1\":{\"822\":1}}],[\"fool\",{\"1\":{\"458\":2}}],[\"foo\",{\"1\":{\"285\":1,\"433\":1}}],[\"foobaredbbexone123\",{\"1\":{\"77\":1}}],[\"found\",{\"1\":{\"101\":1,\"167\":1,\"272\":1}}],[\"forname\",{\"1\":{\"167\":1,\"170\":1,\"171\":1,\"173\":2,\"183\":1}}],[\"formbased\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"form\",{\"1\":{\"149\":1,\"677\":1,\"683\":1,\"692\":1,\"723\":1}}],[\"format\",{\"1\":{\"126\":1,\"148\":1,\"149\":1,\"195\":1,\"278\":1}}],[\"foreach\",{\"1\":{\"92\":2,\"124\":1,\"126\":1,\"130\":1,\"148\":3,\"162\":1,\"180\":1,\"183\":1,\"206\":1,\"209\":1,\"220\":1,\"227\":1,\"259\":1}}],[\"foreign\",{\"1\":{\"89\":3,\"90\":1}}],[\"forestproxy\",{\"1\":{\"433\":4}}],[\"forest\",{\"0\":{\"425\":1,\"426\":1},\"1\":{\"15\":1,\"426\":1,\"428\":1,\"430\":1,\"431\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1}}],[\"for\",{\"0\":{\"57\":1},\"1\":{\"16\":1,\"57\":3,\"66\":2,\"79\":1,\"86\":3,\"88\":3,\"89\":2,\"90\":3,\"101\":3,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"133\":2,\"134\":2,\"135\":2,\"141\":1,\"142\":1,\"144\":2,\"148\":4,\"149\":3,\"155\":1,\"157\":1,\"158\":2,\"165\":1,\"166\":3,\"167\":2,\"171\":1,\"200\":1,\"205\":2,\"208\":1,\"209\":1,\"227\":1,\"229\":1,\"271\":1,\"293\":2,\"294\":2,\"458\":10,\"459\":1,\"504\":1,\"505\":1,\"791\":1}}],[\"fork\",{\"0\":{\"95\":1},\"1\":{\"8\":1,\"77\":1,\"299\":1,\"703\":1}}],[\"fieldnameeditor\",{\"1\":{\"724\":1}}],[\"field\",{\"1\":{\"444\":1,\"741\":1}}],[\"fix\",{\"1\":{\"397\":1,\"438\":3,\"458\":2,\"557\":2,\"606\":13,\"619\":28}}],[\"fixes\",{\"0\":{\"339\":1}}],[\"firstentry\",{\"1\":{\"133\":1}}],[\"firstkey\",{\"1\":{\"133\":1}}],[\"filterchain\",{\"1\":{\"294\":1}}],[\"filterrule\",{\"1\":{\"234\":1}}],[\"filterselector\",{\"1\":{\"234\":1}}],[\"filter\",{\"0\":{\"293\":1},\"1\":{\"209\":1,\"266\":4,\"293\":4,\"294\":3}}],[\"filled\",{\"1\":{\"74\":1,\"252\":5}}],[\"fill\",{\"1\":{\"74\":1,\"252\":2}}],[\"fileinfo\",{\"1\":{\"816\":8,\"817\":9}}],[\"filecopier\",{\"1\":{\"724\":1}}],[\"fileappender\",{\"1\":{\"723\":2}}],[\"fileutil\",{\"1\":{\"723\":1,\"724\":2}}],[\"fileextension\",{\"1\":{\"709\":2}}],[\"filebeat\",{\"1\":{\"338\":1}}],[\"filefilter\",{\"1\":{\"316\":1}}],[\"filegroup\",{\"1\":{\"313\":1}}],[\"filedetailcontroller\",{\"1\":{\"816\":1}}],[\"filed\",{\"1\":{\"271\":1}}],[\"filename\",{\"1\":{\"183\":3,\"325\":1}}],[\"filestorageservice\",{\"1\":{\"816\":7,\"817\":7}}],[\"files\",{\"1\":{\"167\":1}}],[\"file\",{\"0\":{\"807\":1},\"1\":{\"57\":1,\"64\":1,\"74\":1,\"77\":1,\"458\":3,\"618\":1,\"713\":1,\"714\":1,\"807\":1,\"808\":5,\"810\":3,\"811\":2,\"812\":4,\"814\":3,\"816\":9}}],[\"finchley\",{\"1\":{\"701\":1}}],[\"finished\",{\"1\":{\"271\":2,\"406\":1}}],[\"findinset\",{\"1\":{\"606\":1}}],[\"findmethodbymethodsignature\",{\"1\":{\"294\":1}}],[\"findperson\",{\"1\":{\"286\":2}}],[\"find\",{\"1\":{\"235\":4,\"236\":2}}],[\"findall\",{\"0\":{\"187\":1},\"1\":{\"191\":1}}],[\"findupstreamlistbyselectorid\",{\"1\":{\"131\":1,\"219\":1,\"224\":1,\"225\":2,\"235\":1}}],[\"findbyname\",{\"1\":{\"123\":1,\"125\":1,\"126\":1}}],[\"findbypath\",{\"1\":{\"122\":1}}],[\"findbyid\",{\"1\":{\"117\":2,\"126\":2}}],[\"findbyuserid\",{\"1\":{\"104\":1,\"105\":2,\"107\":1,\"108\":7,\"109\":4,\"231\":1,\"245\":1,\"271\":1,\"272\":3}}],[\"findbytransid\",{\"1\":{\"71\":2}}],[\"final发布\",{\"0\":{\"588\":1}}],[\"finally\",{\"1\":{\"67\":1,\"81\":1,\"135\":1,\"158\":1}}],[\"final\",{\"1\":{\"66\":8,\"67\":8,\"70\":3,\"71\":10,\"81\":2,\"92\":1,\"121\":1,\"122\":2,\"123\":1,\"124\":5,\"125\":1,\"126\":12,\"129\":6,\"130\":6,\"131\":7,\"133\":3,\"134\":2,\"135\":2,\"136\":9,\"137\":2,\"141\":9,\"142\":4,\"144\":10,\"148\":13,\"149\":1,\"153\":5,\"155\":2,\"156\":5,\"157\":11,\"158\":10,\"161\":14,\"162\":8,\"164\":3,\"166\":2,\"167\":4,\"170\":1,\"171\":4,\"173\":6,\"176\":5,\"178\":3,\"179\":2,\"180\":3,\"181\":2,\"183\":8,\"191\":1,\"195\":1,\"200\":13,\"205\":15,\"206\":5,\"209\":7,\"210\":10,\"219\":8,\"220\":4,\"224\":13,\"225\":1,\"227\":2,\"228\":5,\"229\":7,\"231\":3,\"232\":6,\"234\":6,\"235\":8,\"236\":11,\"237\":2,\"247\":1,\"249\":9,\"259\":7,\"266\":13,\"271\":1,\"272\":1,\"273\":17,\"282\":1,\"287\":2,\"288\":5,\"289\":3,\"290\":3,\"354\":1,\"474\":1,\"529\":2,\"709\":1,\"783\":1}}],[\"family\",{\"1\":{\"825\":1}}],[\"fabric\",{\"1\":{\"820\":1}}],[\"fabian4\",{\"1\":{\"317\":1}}],[\"fast\",{\"0\":{\"650\":1,\"662\":1,\"666\":1,\"674\":1,\"682\":1,\"691\":1},\"1\":{\"651\":4,\"652\":1,\"661\":1,\"663\":4,\"665\":1,\"667\":4,\"673\":1,\"675\":4,\"683\":4,\"688\":1,\"692\":4}}],[\"fastjson\",{\"1\":{\"411\":1,\"608\":1,\"624\":2}}],[\"fastjson2\",{\"1\":{\"354\":1,\"360\":1,\"397\":1,\"624\":2}}],[\"facebook\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"factories\",{\"1\":{\"220\":1,\"316\":1}}],[\"factory\",{\"1\":{\"66\":3,\"67\":1,\"148\":3,\"149\":1,\"165\":1,\"208\":7}}],[\"fangq\",{\"1\":{\"308\":1}}],[\"fans99\",{\"1\":{\"308\":1}}],[\"fallbackcmp\",{\"1\":{\"519\":1}}],[\"fallbackcmp注解用于定义\",{\"1\":{\"519\":1}}],[\"fallbackuri\",{\"1\":{\"270\":1}}],[\"fallbackhandler\",{\"1\":{\"266\":1}}],[\"fallback\",{\"1\":{\"266\":1,\"273\":10,\"316\":1}}],[\"false\",{\"1\":{\"64\":2,\"66\":1,\"67\":1,\"103\":1,\"129\":1,\"134\":1,\"135\":2,\"140\":1,\"144\":1,\"148\":3,\"167\":2,\"195\":2,\"208\":2,\"226\":3,\"227\":1,\"228\":2,\"259\":3,\"270\":2,\"313\":3,\"314\":2,\"406\":2,\"702\":1,\"788\":1}}],[\"failure\",{\"1\":{\"271\":1,\"644\":1}}],[\"failureratethreshold\",{\"1\":{\"270\":1}}],[\"fail\",{\"1\":{\"148\":2,\"149\":1,\"167\":4,\"604\":1}}],[\"failed\",{\"1\":{\"126\":1,\"149\":2,\"208\":4,\"294\":1,\"458\":1}}],[\"faq\",{\"1\":{\"101\":1,\"340\":1}}],[\"f523f655f0014d288b7a4502cc6a08d1~tplv\",{\"1\":{\"234\":1}}],[\"f5\",{\"1\":{\"15\":1}}],[\"f\",{\"1\":{\"12\":1,\"308\":1,\"406\":1,\"499\":1,\"516\":2,\"518\":2}}],[\"分离编码和解码\",{\"1\":{\"722\":3}}],[\"分配用户所属部门\",{\"1\":{\"609\":1}}],[\"分页插件\",{\"1\":{\"608\":2}}],[\"分野\",{\"1\":{\"574\":1}}],[\"分散用户对\",{\"1\":{\"367\":1,\"382\":1}}],[\"分支停止发版\",{\"1\":{\"612\":1}}],[\"分支\",{\"1\":{\"353\":1,\"644\":2}}],[\"分队第一塞拉斯\",{\"1\":{\"308\":1}}],[\"分析插件内部所做工作\",{\"1\":{\"219\":1}}],[\"分析了\",{\"1\":{\"92\":3,\"203\":1}}],[\"分别为声明式接口和编程式接口提供了友好的\",{\"1\":{\"431\":1}}],[\"分别是只存储一条\",{\"1\":{\"278\":1}}],[\"分别是一个\",{\"1\":{\"270\":1}}],[\"分别是\",{\"1\":{\"265\":2,\"502\":1}}],[\"分别针对当监听到\",{\"1\":{\"156\":1}}],[\"分别向\",{\"1\":{\"124\":1,\"126\":1}}],[\"分发任务\",{\"1\":{\"406\":1}}],[\"分发\",{\"1\":{\"259\":1}}],[\"分发到各自方法\",{\"1\":{\"162\":1}}],[\"分发到我们的\",{\"1\":{\"145\":1}}],[\"分发的意思\",{\"1\":{\"113\":1}}],[\"分值从\",{\"1\":{\"135\":1}}],[\"分钟去进行\",{\"1\":{\"515\":1}}],[\"分钟搞定一个高可用高性能网关\",{\"0\":{\"788\":1}}],[\"分钟搞定\",{\"1\":{\"409\":1,\"419\":1}}],[\"分钟\",{\"1\":{\"406\":1}}],[\"分钟执行一次\",{\"1\":{\"92\":1}}],[\"分钟之后\",{\"1\":{\"92\":1}}],[\"分钟到达北京丽亭华苑酒店\",{\"1\":{\"12\":2}}],[\"分享您的知识和经验\",{\"1\":{\"635\":1}}],[\"分享读源码的心得与感悟\",{\"1\":{\"33\":1}}],[\"分享迟到者扣\",{\"1\":{\"24\":1}}],[\"分布式会话\",{\"1\":{\"624\":1}}],[\"分布式\",{\"1\":{\"624\":1}}],[\"分布式文件存储\",{\"1\":{\"608\":1}}],[\"分布式任务调度\",{\"1\":{\"608\":1}}],[\"分布式任务调度框架\",{\"0\":{\"403\":1}}],[\"分布式幂等\",{\"1\":{\"608\":1}}],[\"分布式队列\",{\"1\":{\"608\":1}}],[\"分布式限流\",{\"1\":{\"608\":1}}],[\"分布式集群\",{\"1\":{\"607\":1}}],[\"分布式并行执行\",{\"1\":{\"406\":1}}],[\"分布式日志\",{\"1\":{\"37\":1}}],[\"分布式中间件\",{\"1\":{\"8\":1,\"299\":1}}],[\"分布式事务的接口方法\",{\"1\":{\"709\":1}}],[\"分布式事务\",{\"1\":{\"8\":1,\"299\":1,\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1,\"714\":1,\"792\":1}}],[\"约定大于配置的思想\",{\"1\":{\"172\":1}}],[\"约定大于配置\",{\"0\":{\"171\":1},\"1\":{\"171\":1}}],[\"约\",{\"1\":{\"12\":2}}],[\"米\",{\"1\":{\"12\":2}}],[\"北京丽亭华苑\",{\"1\":{\"14\":1}}],[\"北京丽亭华苑酒店\",{\"1\":{\"12\":1}}],[\"北京市海淀区知春路\",{\"1\":{\"12\":1}}],[\"号线至知春路站下车\",{\"1\":{\"12\":1}}],[\"号\",{\"1\":{\"12\":1}}],[\"95\",{\"1\":{\"208\":1,\"271\":1}}],[\"9991亿\",{\"1\":{\"406\":1}}],[\"9990亿\",{\"1\":{\"406\":1}}],[\"99\",{\"1\":{\"271\":2,\"308\":4}}],[\"990\",{\"1\":{\"208\":1}}],[\"996\",{\"1\":{\"199\":1,\"308\":1}}],[\"977\",{\"1\":{\"108\":1}}],[\"976\",{\"1\":{\"108\":2}}],[\"9002\",{\"1\":{\"585\":1}}],[\"9000\",{\"1\":{\"581\":2,\"582\":2}}],[\"900\",{\"1\":{\"482\":1}}],[\"9095\",{\"1\":{\"92\":1,\"100\":1,\"103\":1,\"112\":1,\"140\":2,\"152\":1,\"788\":2}}],[\"90\",{\"1\":{\"81\":1,\"271\":1,\"514\":2,\"608\":2}}],[\"93\",{\"1\":{\"64\":2,\"77\":1,\"109\":1}}],[\"9200\",{\"1\":{\"581\":2,\"582\":2}}],[\"924\",{\"1\":{\"101\":1}}],[\"92\",{\"1\":{\"64\":2,\"77\":2}}],[\"9195\",{\"1\":{\"101\":1,\"105\":1,\"108\":1,\"109\":2,\"112\":1,\"117\":1,\"208\":1,\"231\":1,\"245\":1,\"271\":1,\"272\":1}}],[\"91\",{\"1\":{\"64\":2,\"77\":1}}],[\"98kb\",{\"1\":{\"109\":1}}],[\"98\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"109\":1,\"271\":1}}],[\"9\",{\"0\":{\"572\":1,\"573\":1,\"682\":1},\"1\":{\"12\":1,\"46\":1,\"79\":6,\"81\":9,\"83\":2,\"85\":1,\"87\":1,\"89\":1,\"208\":1,\"271\":1,\"308\":4,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"396\":1,\"397\":1,\"514\":1,\"526\":1,\"529\":2,\"532\":1,\"535\":1,\"538\":1,\"541\":1,\"544\":1,\"554\":1,\"564\":1,\"575\":1,\"577\":1,\"580\":2,\"603\":1,\"612\":1,\"677\":1}}],[\"请阅读\",{\"1\":{\"816\":1}}],[\"请为我们点上一颗\",{\"1\":{\"727\":1,\"736\":1,\"741\":1}}],[\"请点击\",{\"1\":{\"661\":1,\"665\":1,\"673\":1,\"681\":1,\"690\":1,\"698\":1}}],[\"请给我们点颗星\",{\"0\":{\"629\":1}}],[\"请参考\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1,\"709\":1}}],[\"请参会者根据所选票种安排好自己的行程\",{\"1\":{\"12\":1}}],[\"请多艾特我几遍\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"请先找我们授权否则会有法律风险\",{\"1\":{\"456\":1}}],[\"请在\",{\"1\":{\"336\":1,\"340\":1}}],[\"请查看文档\",{\"1\":{\"816\":1}}],[\"请查看官方文档\",{\"1\":{\"727\":1}}],[\"请查看\",{\"1\":{\"313\":12,\"314\":43,\"315\":53,\"316\":55}}],[\"请师父喝咖啡\",{\"1\":{\"308\":1}}],[\"请老板抽和天下\",{\"1\":{\"308\":1}}],[\"请猫大人抽包华子\",{\"1\":{\"308\":1}}],[\"请猫大人抽华子\",{\"1\":{\"308\":1}}],[\"请猫大人抽根华子\",{\"1\":{\"308\":1}}],[\"请猫大人吃鸡排\",{\"1\":{\"308\":1}}],[\"请猫大人喝咖啡\",{\"1\":{\"308\":2}}],[\"请猫大人喝奶茶\",{\"1\":{\"308\":1}}],[\"请猫大人喝几吨白开水\",{\"1\":{\"308\":1}}],[\"请考虑联系\",{\"1\":{\"308\":1}}],[\"请考虑支持\",{\"1\":{\"9\":1}}],[\"请详细看\",{\"1\":{\"254\":1}}],[\"请求地址\",{\"1\":{\"740\":1}}],[\"请求和导出\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"请求和接收\",{\"1\":{\"83\":1}}],[\"请求重启\",{\"1\":{\"269\":1}}],[\"请求会默认执行\",{\"1\":{\"259\":1}}],[\"请求初探的文章中\",{\"1\":{\"239\":1}}],[\"请求结束后对应的处理\",{\"1\":{\"236\":1}}],[\"请求处理概览概览这篇文章中\",{\"1\":{\"231\":1}}],[\"请求处理的起点\",{\"1\":{\"220\":1}}],[\"请求都由该插件进行负载均衡处理\",{\"1\":{\"223\":1}}],[\"请求调用流程\",{\"1\":{\"237\":1}}],[\"请求调用流程大体已经结束\",{\"1\":{\"237\":1}}],[\"请求调用插件\",{\"0\":{\"236\":1}}],[\"请求调用经过了哪些类\",{\"1\":{\"231\":1}}],[\"请求调用\",{\"1\":{\"199\":2}}],[\"请求信息\",{\"1\":{\"149\":1}}],[\"请求后台的\",{\"1\":{\"148\":1}}],[\"请求类型\",{\"1\":{\"136\":1}}],[\"请求自然也有转发下游和返回响应\",{\"1\":{\"131\":1}}],[\"请求进行各种规则的路由转发\",{\"1\":{\"113\":1}}],[\"请求\",{\"1\":{\"104\":1,\"105\":1,\"107\":1,\"108\":1,\"129\":2,\"131\":1,\"152\":1,\"224\":1,\"426\":1,\"428\":1,\"628\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"请求转发\",{\"0\":{\"102\":1}}],[\"请求的网关调用\",{\"1\":{\"231\":1}}],[\"请求的结果演示\",{\"0\":{\"193\":1}}],[\"请求的\",{\"1\":{\"92\":1,\"113\":1,\"116\":1}}],[\"请尝试在垃圾邮件中寻找\",{\"1\":{\"13\":1}}],[\"请您确保在大会开始前已完成购票注册\",{\"1\":{\"13\":1}}],[\"0<\",{\"1\":{\"709\":3,\"788\":2,\"789\":4,\"810\":1,\"814\":1}}],[\"0更新\",{\"0\":{\"623\":1}}],[\"0开发计划\",{\"1\":{\"529\":1}}],[\"0中catchcondition会把chainendexception也捕获\",{\"1\":{\"468\":1}}],[\"0+\",{\"1\":{\"444\":1,\"547\":2}}],[\"0版本震撼发布\",{\"0\":{\"767\":1}}],[\"0版本正式发布\",{\"0\":{\"742\":1}}],[\"0版本\",{\"1\":{\"717\":1}}],[\"0版本发布\",{\"0\":{\"330\":1,\"337\":1,\"572\":1}}],[\"0版本的支持和参与\",{\"1\":{\"317\":1}}],[\"0x17\",{\"1\":{\"308\":1}}],[\"0x1000b5e22f50002\",{\"1\":{\"199\":1}}],[\"0x1000b5e22f50001\",{\"1\":{\"199\":1}}],[\"0x02\",{\"0\":{\"80\":1}}],[\"0x01\",{\"0\":{\"79\":1}}],[\"0477097\",{\"1\":{\"271\":1}}],[\"04\",{\"1\":{\"149\":1,\"308\":48,\"528\":1,\"529\":1}}],[\"03\",{\"1\":{\"149\":1,\"271\":11,\"308\":161}}],[\"02\",{\"1\":{\"148\":1,\"296\":1,\"308\":11,\"406\":1}}],[\"0l\",{\"1\":{\"121\":1,\"144\":1}}],[\"06z\",{\"1\":{\"397\":1}}],[\"06\",{\"1\":{\"109\":1,\"161\":1,\"208\":1,\"308\":8,\"534\":1,\"535\":2}}],[\"06ms\",{\"1\":{\"109\":1}}],[\"069\",{\"1\":{\"92\":1}}],[\"07\",{\"1\":{\"162\":1,\"308\":6,\"397\":1}}],[\"077\",{\"1\":{\"92\":2}}],[\"075\",{\"1\":{\"92\":1}}],[\"019\",{\"1\":{\"557\":1}}],[\"018\",{\"1\":{\"199\":1}}],[\"01k\",{\"1\":{\"109\":1}}],[\"01mb\",{\"1\":{\"109\":1}}],[\"012\",{\"1\":{\"92\":1,\"199\":2}}],[\"010\",{\"1\":{\"92\":1}}],[\"01\",{\"1\":{\"92\":18,\"101\":10,\"105\":3,\"108\":18,\"126\":2,\"199\":16,\"208\":7,\"308\":8,\"546\":1,\"547\":1}}],[\"052\",{\"1\":{\"208\":1}}],[\"05s\",{\"1\":{\"109\":1}}],[\"05k\",{\"1\":{\"109\":1}}],[\"05\",{\"1\":{\"30\":2,\"33\":2,\"296\":1,\"308\":14,\"534\":1}}],[\"0\",{\"0\":{\"310\":1,\"351\":1,\"358\":1,\"361\":2,\"365\":2,\"367\":1,\"375\":2,\"380\":2,\"390\":2,\"395\":2,\"396\":1,\"458\":1,\"496\":1,\"498\":1,\"542\":2,\"552\":1,\"562\":1,\"573\":1,\"588\":1,\"589\":3,\"601\":1,\"611\":1,\"624\":1,\"631\":1,\"632\":2,\"636\":1,\"643\":1,\"699\":1,\"700\":1,\"702\":1,\"719\":1,\"721\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"737\":1,\"738\":1,\"743\":1,\"753\":1,\"767\":1,\"768\":2,\"777\":1,\"778\":1,\"780\":1,\"781\":2,\"787\":1,\"792\":1},\"1\":{\"15\":1,\"66\":3,\"67\":1,\"78\":3,\"82\":1,\"84\":1,\"92\":2,\"105\":1,\"108\":6,\"125\":4,\"126\":3,\"133\":1,\"134\":6,\"135\":4,\"148\":3,\"166\":1,\"167\":1,\"191\":2,\"199\":31,\"227\":3,\"228\":1,\"229\":3,\"231\":2,\"236\":1,\"245\":2,\"249\":1,\"252\":3,\"265\":5,\"266\":2,\"270\":4,\"271\":1,\"278\":4,\"294\":3,\"308\":1,\"312\":2,\"313\":2,\"315\":2,\"324\":2,\"325\":4,\"326\":6,\"330\":2,\"331\":2,\"333\":1,\"334\":1,\"335\":2,\"336\":1,\"340\":1,\"351\":4,\"353\":11,\"354\":10,\"358\":11,\"360\":3,\"367\":7,\"368\":7,\"382\":5,\"383\":2,\"396\":5,\"397\":3,\"406\":2,\"430\":8,\"432\":4,\"433\":4,\"438\":1,\"442\":1,\"448\":1,\"457\":4,\"458\":1,\"465\":4,\"482\":1,\"493\":3,\"498\":1,\"500\":1,\"501\":1,\"508\":1,\"518\":4,\"525\":1,\"526\":3,\"529\":2,\"531\":1,\"532\":3,\"535\":2,\"537\":1,\"538\":3,\"541\":2,\"543\":1,\"544\":3,\"546\":2,\"547\":9,\"553\":1,\"554\":3,\"556\":1,\"557\":1,\"563\":1,\"564\":3,\"566\":1,\"567\":3,\"574\":1,\"575\":1,\"580\":2,\"584\":2,\"590\":1,\"603\":2,\"612\":1,\"613\":2,\"616\":10,\"617\":1,\"624\":3,\"632\":2,\"637\":1,\"644\":3,\"701\":2,\"702\":1,\"707\":2,\"709\":4,\"716\":1,\"745\":1,\"750\":2,\"753\":1,\"768\":1,\"770\":1,\"771\":1,\"778\":1,\"779\":3,\"780\":1,\"781\":2,\"786\":2,\"796\":1,\"798\":2,\"810\":6,\"811\":4,\"812\":4,\"814\":1,\"816\":2}}],[\"08\",{\"1\":{\"12\":1,\"165\":1,\"199\":1,\"308\":4,\"397\":1,\"540\":1,\"541\":1}}],[\"000000\",{\"1\":{\"740\":1}}],[\"003\",{\"1\":{\"199\":1}}],[\"007\",{\"1\":{\"92\":1}}],[\"00\",{\"1\":{\"12\":1,\"29\":2,\"30\":1,\"32\":2,\"33\":1,\"92\":8,\"126\":1,\"271\":2,\"308\":1,\"406\":2}}],[\"09s\",{\"1\":{\"109\":1}}],[\"09\",{\"1\":{\"12\":1,\"182\":1,\"308\":11,\"406\":1,\"546\":1,\"547\":1,\"556\":1,\"557\":1}}],[\"3<\",{\"1\":{\"810\":1}}],[\"3重磅发布\",{\"0\":{\"650\":1}}],[\"36\",{\"0\":{\"440\":1},\"1\":{\"271\":2,\"314\":1,\"315\":1,\"316\":1,\"442\":1}}],[\"363\",{\"1\":{\"208\":1}}],[\"3639\",{\"1\":{\"109\":1}}],[\"3700+\",{\"1\":{\"643\":1}}],[\"379336\",{\"1\":{\"271\":9}}],[\"37\",{\"1\":{\"208\":1,\"271\":2,\"314\":1,\"315\":1,\"316\":1}}],[\"37ms\",{\"1\":{\"109\":1}}],[\"31fix\",{\"1\":{\"567\":1}}],[\"3128\",{\"1\":{\"433\":2}}],[\"31\",{\"1\":{\"126\":2,\"199\":1,\"308\":12,\"314\":1,\"315\":1,\"316\":1,\"631\":1,\"632\":1}}],[\"317\",{\"1\":{\"108\":3}}],[\"38\",{\"1\":{\"108\":3,\"271\":2,\"314\":1,\"315\":1,\"316\":1,\"383\":1,\"397\":1}}],[\"388\",{\"1\":{\"88\":2}}],[\"35\",{\"0\":{\"623\":1,\"624\":1},\"1\":{\"108\":3,\"199\":7,\"271\":1,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"368\":1,\"616\":1,\"624\":2}}],[\"3500\",{\"1\":{\"497\":1,\"507\":1,\"513\":1}}],[\"350+位\",{\"1\":{\"312\":1}}],[\"350\",{\"1\":{\"11\":1}}],[\"34\",{\"1\":{\"108\":3,\"199\":9,\"314\":1,\"315\":1,\"316\":1,\"616\":1,\"617\":1}}],[\"348\",{\"1\":{\"12\":1}}],[\"390\",{\"1\":{\"109\":1}}],[\"39\",{\"1\":{\"92\":1,\"108\":3,\"126\":2,\"271\":2,\"314\":1,\"315\":1,\"316\":1,\"397\":1}}],[\"391\",{\"1\":{\"89\":2}}],[\"33\",{\"0\":{\"425\":1,\"429\":1},\"1\":{\"92\":1,\"308\":1,\"314\":1,\"315\":1,\"316\":1,\"430\":1}}],[\"3306\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"324\":1,\"325\":1,\"326\":2,\"582\":1,\"709\":1,\"741\":1,\"788\":1}}],[\"3200+\",{\"1\":{\"636\":1}}],[\"32\",{\"1\":{\"64\":2,\"314\":1,\"315\":1,\"316\":1,\"360\":1,\"368\":1,\"383\":1}}],[\"3k\",{\"1\":{\"56\":1}}],[\"3d\",{\"1\":{\"15\":2,\"829\":1}}],[\"3\",{\"0\":{\"63\":1,\"70\":1,\"97\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":2,\"110\":1,\"120\":1,\"127\":1,\"153\":1,\"226\":1,\"227\":1,\"228\":2,\"346\":1,\"354\":1,\"358\":1,\"361\":2,\"364\":1,\"365\":1,\"367\":1,\"374\":1,\"375\":2,\"378\":1,\"380\":1,\"382\":1,\"389\":1,\"390\":2,\"393\":1,\"395\":1,\"396\":2,\"398\":1,\"401\":1,\"402\":2,\"410\":1,\"439\":1,\"440\":1,\"442\":1,\"446\":1,\"448\":1,\"504\":1,\"585\":1,\"641\":1,\"648\":1,\"654\":1,\"670\":1,\"679\":1,\"686\":1,\"696\":1,\"767\":1,\"768\":1,\"798\":1},\"1\":{\"13\":1,\"46\":1,\"64\":2,\"74\":2,\"77\":1,\"78\":2,\"79\":4,\"82\":1,\"84\":1,\"86\":1,\"88\":1,\"126\":1,\"145\":1,\"158\":1,\"165\":1,\"199\":1,\"200\":1,\"204\":1,\"205\":1,\"206\":1,\"208\":2,\"209\":2,\"210\":2,\"219\":1,\"220\":2,\"228\":1,\"231\":1,\"234\":1,\"235\":1,\"236\":1,\"252\":1,\"263\":1,\"264\":2,\"265\":1,\"266\":6,\"272\":1,\"293\":1,\"294\":1,\"306\":2,\"308\":2,\"313\":1,\"314\":1,\"315\":2,\"316\":1,\"321\":1,\"322\":1,\"338\":1,\"353\":4,\"354\":5,\"358\":5,\"360\":3,\"367\":2,\"368\":3,\"374\":1,\"382\":2,\"383\":5,\"389\":1,\"396\":2,\"397\":11,\"409\":2,\"414\":1,\"416\":1,\"419\":1,\"423\":1,\"442\":1,\"443\":1,\"458\":1,\"467\":1,\"469\":2,\"473\":1,\"480\":1,\"481\":1,\"497\":1,\"498\":1,\"499\":1,\"504\":3,\"513\":1,\"514\":1,\"518\":2,\"526\":2,\"528\":1,\"529\":2,\"532\":2,\"534\":1,\"535\":3,\"538\":2,\"540\":1,\"541\":2,\"544\":2,\"547\":8,\"554\":2,\"564\":2,\"567\":1,\"577\":1,\"603\":3,\"616\":23,\"637\":1,\"644\":1,\"660\":1,\"692\":1,\"694\":1,\"701\":1,\"709\":4,\"768\":1,\"771\":1,\"778\":1,\"779\":1,\"786\":2,\"796\":2,\"797\":2,\"798\":1,\"799\":1,\"808\":1,\"836\":1}}],[\"308\",{\"1\":{\"253\":1,\"257\":1,\"259\":1}}],[\"30000\",{\"1\":{\"270\":1,\"709\":1}}],[\"3000l\",{\"1\":{\"236\":1}}],[\"3000\",{\"1\":{\"126\":1,\"467\":1,\"471\":1,\"473\":1,\"478\":1,\"480\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"30s\",{\"1\":{\"109\":2,\"148\":2,\"149\":3}}],[\"30+的项目\",{\"1\":{\"39\":1}}],[\"30\",{\"1\":{\"12\":3,\"30\":1,\"33\":1,\"92\":1,\"109\":2,\"148\":1,\"226\":3,\"230\":1,\"308\":76,\"314\":1,\"315\":1,\"316\":1,\"456\":1,\"709\":1}}],[\"早点下班吧\",{\"1\":{\"308\":1}}],[\"早\",{\"1\":{\"12\":1}}],[\"日发布的\",{\"1\":{\"514\":1}}],[\"日正式发布\",{\"1\":{\"330\":1}}],[\"日正式开启啦\",{\"1\":{\"36\":1}}],[\"日常事务由组织的常任负责人处理\",{\"1\":{\"306\":1}}],[\"日常运维\",{\"1\":{\"4\":1}}],[\"日志存储\",{\"1\":{\"706\":1}}],[\"日志管理\",{\"1\":{\"609\":1}}],[\"日志记录采用异步方式写入\",{\"1\":{\"541\":1}}],[\"日志方面的增强\",{\"0\":{\"491\":1}}],[\"日志输出\",{\"1\":{\"409\":1,\"419\":1}}],[\"日志中心日志收集\",{\"1\":{\"397\":1}}],[\"日志上报\",{\"1\":{\"397\":1}}],[\"日志配置文件\",{\"1\":{\"397\":1}}],[\"日志文件生成\",{\"1\":{\"340\":1}}],[\"日志可观测性\",{\"1\":{\"315\":1}}],[\"日志收集\",{\"1\":{\"313\":1}}],[\"日志打印优化\",{\"1\":{\"547\":1,\"567\":1}}],[\"日志打印\",{\"1\":{\"264\":1}}],[\"日志也可以看到\",{\"1\":{\"112\":1}}],[\"日志还没保存那怎么处理呢\",{\"0\":{\"64\":1}}],[\"日志会有一个\",{\"1\":{\"63\":1}}],[\"日开始接受学生参与项目申请\",{\"1\":{\"50\":1}}],[\"日期范围统一采用\",{\"1\":{\"617\":1}}],[\"日期\",{\"1\":{\"21\":1,\"29\":1,\"32\":1,\"528\":1,\"534\":1,\"540\":1,\"546\":1,\"556\":1,\"566\":1}}],[\"日在上海张江科学会堂隆重举行\",{\"1\":{\"15\":1}}],[\"日至\",{\"1\":{\"13\":1,\"14\":1,\"15\":1}}],[\"日\",{\"1\":{\"12\":2,\"13\":1,\"14\":1,\"21\":1,\"29\":1,\"32\":1,\"353\":1,\"358\":1,\"631\":1,\"632\":1,\"633\":1}}],[\"1<\",{\"1\":{\"814\":1}}],[\"1~2ms\",{\"1\":{\"790\":1}}],[\"1版本正式发布\",{\"0\":{\"726\":1}}],[\"1版本发布\",{\"0\":{\"594\":1}}],[\"1版本\",{\"0\":{\"704\":1},\"1\":{\"567\":1}}],[\"1发布\",{\"0\":{\"512\":1}}],[\"1任务保存的快照数据样例\",{\"1\":{\"406\":1}}],[\"1的执行快照\",{\"1\":{\"406\":1}}],[\"1亿\",{\"1\":{\"406\":1}}],[\"1在第一次循环统计\",{\"1\":{\"406\":1}}],[\"1万亿\",{\"1\":{\"406\":1}}],[\"1s\",{\"1\":{\"271\":2,\"272\":1}}],[\"1l\",{\"1\":{\"249\":3}}],[\"1c10d748\",{\"1\":{\"208\":4}}],[\"1471\",{\"1\":{\"354\":1,\"397\":1}}],[\"147\",{\"1\":{\"108\":3}}],[\"14276\",{\"1\":{\"92\":1}}],[\"14\",{\"1\":{\"79\":1,\"86\":5,\"101\":5,\"105\":3,\"108\":18,\"109\":1,\"126\":2,\"271\":11,\"308\":15,\"314\":1,\"315\":1,\"316\":1,\"541\":1,\"791\":1}}],[\"140ms\",{\"1\":{\"62\":1}}],[\"1321\",{\"1\":{\"352\":1}}],[\"1349650371302551552\",{\"1\":{\"126\":1}}],[\"1349650371868782592\",{\"1\":{\"126\":1}}],[\"139\",{\"1\":{\"109\":1,\"458\":1}}],[\"13\",{\"1\":{\"79\":1,\"85\":5,\"308\":11,\"313\":1,\"314\":2,\"315\":1,\"316\":1,\"352\":1,\"354\":1,\"368\":1}}],[\"19发布\",{\"0\":{\"536\":1}}],[\"19819734\",{\"1\":{\"406\":2}}],[\"19\",{\"1\":{\"92\":7,\"208\":1,\"308\":4,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"540\":1,\"541\":1,\"556\":1}}],[\"192\",{\"1\":{\"64\":10,\"74\":1,\"77\":5,\"709\":3}}],[\"1991\",{\"1\":{\"326\":1}}],[\"1990\",{\"1\":{\"324\":1,\"325\":1,\"326\":1}}],[\"1999ms\",{\"1\":{\"271\":2}}],[\"1997ms\",{\"1\":{\"271\":1}}],[\"1994ms\",{\"1\":{\"271\":1}}],[\"199\",{\"1\":{\"13\":1}}],[\"1168\",{\"1\":{\"458\":1}}],[\"1161\",{\"1\":{\"458\":1}}],[\"1163\",{\"1\":{\"458\":1}}],[\"1162\",{\"1\":{\"458\":1}}],[\"1147\",{\"1\":{\"458\":1}}],[\"114a5e0\",{\"1\":{\"199\":1}}],[\"1129\",{\"1\":{\"458\":1}}],[\"1128\",{\"1\":{\"458\":1}}],[\"1122\",{\"1\":{\"458\":1}}],[\"1127\",{\"1\":{\"458\":1}}],[\"1120\",{\"1\":{\"458\":1}}],[\"1117\",{\"1\":{\"458\":1}}],[\"1118\",{\"1\":{\"458\":1}}],[\"1119\",{\"1\":{\"458\":1}}],[\"1113\",{\"1\":{\"458\":2}}],[\"1116\",{\"1\":{\"458\":1}}],[\"1114\",{\"1\":{\"458\":1}}],[\"1111\",{\"1\":{\"458\":1}}],[\"1155\",{\"1\":{\"458\":1}}],[\"1159\",{\"1\":{\"458\":1}}],[\"1153\",{\"1\":{\"458\":1}}],[\"1152\",{\"1\":{\"458\":1}}],[\"1154\",{\"1\":{\"458\":1}}],[\"1151\",{\"1\":{\"458\":1}}],[\"1158\",{\"1\":{\"457\":5,\"465\":5}}],[\"1157\",{\"1\":{\"442\":2,\"448\":4,\"457\":5,\"458\":1,\"465\":5}}],[\"11亿\",{\"1\":{\"406\":1}}],[\"1101\",{\"1\":{\"458\":1}}],[\"1108\",{\"1\":{\"458\":1}}],[\"1107\",{\"1\":{\"458\":1}}],[\"1106\",{\"1\":{\"458\":1}}],[\"1104\",{\"1\":{\"458\":1}}],[\"1102\",{\"1\":{\"458\":1}}],[\"1103\",{\"1\":{\"458\":1}}],[\"110\",{\"1\":{\"354\":1}}],[\"11ms\",{\"1\":{\"109\":1}}],[\"1138\",{\"1\":{\"458\":1}}],[\"1136\",{\"1\":{\"458\":1}}],[\"1137\",{\"1\":{\"458\":1}}],[\"1131\",{\"1\":{\"458\":1}}],[\"1130\",{\"1\":{\"458\":1}}],[\"113\",{\"1\":{\"101\":1}}],[\"11\",{\"0\":{\"351\":1,\"496\":1,\"498\":1,\"512\":1},\"1\":{\"60\":1,\"79\":1,\"83\":6,\"84\":1,\"105\":3,\"109\":2,\"140\":1,\"262\":1,\"308\":12,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"351\":1,\"353\":2,\"354\":2,\"358\":2,\"367\":1,\"368\":1,\"382\":1,\"396\":1,\"397\":1,\"481\":1,\"493\":4,\"498\":1,\"500\":1,\"501\":1,\"508\":1,\"514\":2,\"515\":1,\"521\":1,\"529\":1,\"547\":2,\"566\":1,\"603\":1,\"612\":2,\"786\":1}}],[\"162614487\",{\"1\":{\"711\":1,\"718\":1}}],[\"160\",{\"1\":{\"308\":1}}],[\"16666666666\",{\"1\":{\"740\":1}}],[\"166\",{\"1\":{\"308\":1}}],[\"1677ms\",{\"1\":{\"271\":1}}],[\"167\",{\"1\":{\"208\":1}}],[\"16179\",{\"1\":{\"109\":1}}],[\"168\",{\"1\":{\"64\":10,\"74\":1,\"77\":6,\"709\":3}}],[\"16\",{\"1\":{\"33\":8,\"79\":1,\"88\":5,\"101\":1,\"135\":1,\"183\":1,\"208\":1,\"271\":9,\"308\":4,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"360\":1,\"368\":1,\"709\":2,\"814\":1}}],[\"1515\",{\"1\":{\"514\":1}}],[\"155\",{\"1\":{\"105\":1,\"108\":6}}],[\"154\",{\"1\":{\"101\":1,\"208\":1,\"368\":1}}],[\"1500\",{\"1\":{\"497\":1,\"513\":1,\"514\":1}}],[\"150\",{\"1\":{\"101\":1,\"308\":1}}],[\"15\",{\"1\":{\"32\":1,\"33\":7,\"79\":1,\"87\":5,\"101\":7,\"271\":2,\"308\":4,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"540\":1,\"541\":1,\"603\":1}}],[\"1\",{\"0\":{\"40\":1,\"61\":1,\"66\":1,\"74\":1,\"93\":1,\"94\":1,\"95\":2,\"96\":1,\"97\":1,\"98\":1,\"100\":1,\"103\":1,\"104\":2,\"105\":1,\"107\":1,\"111\":1,\"121\":1,\"123\":1,\"124\":2,\"125\":1,\"151\":1,\"156\":1,\"215\":1,\"219\":1,\"226\":1,\"330\":1,\"344\":1,\"352\":1,\"359\":1,\"362\":1,\"367\":1,\"368\":1,\"372\":1,\"376\":1,\"382\":3,\"383\":1,\"387\":1,\"391\":1,\"396\":1,\"397\":1,\"398\":1,\"399\":1,\"402\":1,\"408\":1,\"410\":1,\"417\":1,\"420\":1,\"440\":1,\"442\":1,\"502\":1,\"552\":1,\"572\":1,\"573\":1,\"579\":1,\"580\":2,\"583\":1,\"595\":1,\"611\":1,\"631\":2,\"632\":1,\"636\":1,\"639\":1,\"646\":1,\"650\":1,\"652\":1,\"662\":1,\"664\":1,\"666\":1,\"668\":1,\"674\":1,\"676\":1,\"677\":2,\"678\":1,\"679\":1,\"682\":1,\"684\":1,\"691\":1,\"694\":1,\"704\":1,\"727\":1,\"742\":1,\"743\":1,\"778\":1,\"780\":1,\"781\":2,\"783\":1,\"796\":1,\"830\":2,\"832\":1},\"1\":{\"32\":1,\"47\":1,\"56\":1,\"64\":10,\"66\":1,\"67\":1,\"74\":4,\"77\":6,\"78\":1,\"92\":1,\"101\":1,\"108\":3,\"109\":2,\"121\":2,\"124\":1,\"125\":1,\"126\":8,\"129\":1,\"134\":1,\"145\":1,\"148\":2,\"149\":1,\"154\":1,\"173\":4,\"177\":1,\"191\":1,\"198\":1,\"199\":6,\"200\":1,\"204\":1,\"205\":1,\"206\":1,\"208\":3,\"209\":2,\"210\":2,\"219\":2,\"220\":1,\"221\":1,\"224\":2,\"226\":1,\"227\":1,\"228\":3,\"231\":2,\"234\":3,\"235\":1,\"236\":1,\"244\":1,\"245\":2,\"249\":2,\"252\":5,\"265\":8,\"266\":4,\"270\":2,\"271\":2,\"272\":1,\"273\":2,\"294\":2,\"308\":8,\"312\":1,\"313\":2,\"314\":1,\"315\":2,\"316\":1,\"322\":1,\"324\":1,\"325\":2,\"326\":3,\"330\":4,\"331\":3,\"333\":1,\"334\":2,\"335\":4,\"338\":1,\"351\":2,\"353\":5,\"354\":6,\"357\":2,\"358\":7,\"360\":4,\"364\":2,\"367\":7,\"368\":5,\"374\":1,\"378\":2,\"382\":9,\"383\":5,\"389\":1,\"393\":2,\"396\":7,\"397\":11,\"400\":2,\"406\":3,\"409\":1,\"414\":1,\"416\":1,\"420\":1,\"423\":1,\"430\":4,\"432\":2,\"433\":2,\"442\":1,\"443\":1,\"457\":2,\"460\":2,\"465\":2,\"469\":2,\"499\":1,\"514\":2,\"515\":2,\"518\":4,\"521\":1,\"526\":11,\"529\":3,\"532\":11,\"535\":1,\"538\":11,\"544\":11,\"547\":5,\"554\":11,\"556\":1,\"557\":1,\"564\":11,\"567\":1,\"574\":1,\"575\":1,\"577\":1,\"580\":2,\"584\":1,\"593\":1,\"603\":2,\"604\":1,\"612\":3,\"613\":2,\"616\":17,\"632\":1,\"637\":1,\"644\":1,\"651\":1,\"658\":1,\"660\":2,\"694\":1,\"707\":1,\"709\":6,\"716\":1,\"740\":1,\"741\":1,\"745\":1,\"750\":1,\"764\":1,\"778\":1,\"779\":3,\"780\":1,\"781\":2,\"783\":1,\"789\":1,\"798\":1,\"808\":1,\"811\":2,\"814\":2,\"816\":1,\"817\":1,\"836\":1}}],[\"127\",{\"1\":{\"199\":1,\"231\":1,\"245\":1,\"313\":1,\"324\":1,\"325\":2,\"326\":3,\"430\":4,\"432\":2,\"433\":2,\"584\":1,\"709\":1}}],[\"1265\",{\"1\":{\"352\":1}}],[\"126\",{\"1\":{\"105\":1,\"199\":1}}],[\"125\",{\"1\":{\"105\":1}}],[\"123\",{\"1\":{\"105\":1,\"324\":1,\"325\":2,\"326\":3,\"770\":1,\"783\":1}}],[\"123456\",{\"1\":{\"64\":4,\"74\":1,\"77\":2,\"100\":1,\"584\":1,\"585\":1,\"740\":1,\"741\":1,\"788\":1}}],[\"128\",{\"1\":{\"77\":2,\"208\":1,\"278\":1,\"308\":1,\"313\":1}}],[\"1200\",{\"0\":{\"507\":1},\"1\":{\"507\":1}}],[\"12000\",{\"1\":{\"36\":1}}],[\"120\",{\"1\":{\"64\":3,\"74\":2,\"308\":3}}],[\"121\",{\"1\":{\"56\":1,\"105\":1,\"108\":6,\"199\":1}}],[\"12\",{\"1\":{\"21\":1,\"24\":1,\"79\":1,\"84\":5,\"125\":1,\"262\":1,\"271\":9,\"308\":13,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"397\":1,\"514\":1,\"535\":1,\"567\":2,\"616\":2}}],[\"1054466084\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"109\",{\"1\":{\"783\":1}}],[\"1098\",{\"1\":{\"458\":1}}],[\"1097\",{\"1\":{\"458\":1}}],[\"1096\",{\"1\":{\"458\":1}}],[\"1094\",{\"1\":{\"458\":1}}],[\"1092\",{\"1\":{\"458\":1}}],[\"109533\",{\"1\":{\"109\":1}}],[\"1087\",{\"1\":{\"458\":1}}],[\"1084\",{\"1\":{\"458\":1}}],[\"1083\",{\"1\":{\"458\":1}}],[\"1081\",{\"1\":{\"458\":1}}],[\"1080\",{\"1\":{\"458\":1}}],[\"1089\",{\"1\":{\"432\":2}}],[\"1075\",{\"1\":{\"458\":1}}],[\"10亿\",{\"1\":{\"406\":1}}],[\"10s\",{\"1\":{\"271\":1}}],[\"102\",{\"1\":{\"135\":1}}],[\"1024\",{\"1\":{\"92\":1,\"278\":1,\"313\":1}}],[\"10ms\",{\"1\":{\"83\":1}}],[\"10k+\",{\"1\":{\"56\":1}}],[\"10+gvp\",{\"1\":{\"37\":1}}],[\"1003164910267351009\",{\"1\":{\"406\":1}}],[\"1000+\",{\"1\":{\"643\":1}}],[\"1000\",{\"1\":{\"228\":1,\"252\":1,\"271\":2,\"272\":1,\"406\":1,\"484\":1,\"816\":4}}],[\"10000\",{\"1\":{\"71\":1,\"313\":3}}],[\"100000000\",{\"1\":{\"406\":1}}],[\"10000000000\",{\"1\":{\"406\":1}}],[\"100000\",{\"1\":{\"64\":1,\"77\":1}}],[\"10051\",{\"1\":{\"208\":6}}],[\"100ms\",{\"1\":{\"62\":1,\"266\":1}}],[\"100\",{\"1\":{\"24\":1,\"135\":2,\"265\":1,\"270\":2,\"299\":1,\"308\":16}}],[\"10\",{\"0\":{\"466\":1,\"468\":1,\"472\":1,\"474\":1,\"479\":1,\"788\":1},\"1\":{\"12\":1,\"30\":4,\"33\":4,\"77\":1,\"79\":1,\"82\":5,\"92\":1,\"125\":1,\"199\":1,\"226\":1,\"265\":2,\"266\":6,\"270\":2,\"271\":1,\"308\":38,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"406\":5,\"468\":1,\"474\":1,\"481\":1,\"482\":2,\"484\":1,\"485\":1,\"486\":1,\"491\":1,\"492\":1,\"493\":2,\"529\":1,\"541\":1,\"547\":2,\"566\":1,\"567\":1,\"633\":1,\"709\":2,\"783\":1,\"790\":1}}],[\"18888888888\",{\"1\":{\"740\":1,\"770\":1}}],[\"1800000\",{\"1\":{\"709\":1}}],[\"180\",{\"1\":{\"709\":1}}],[\"18发布\",{\"0\":{\"530\":1}}],[\"185\",{\"1\":{\"208\":1}}],[\"18\",{\"1\":{\"12\":2,\"13\":1,\"14\":1,\"109\":1,\"199\":1,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"406\":1,\"534\":1,\"535\":1,\"603\":1,\"616\":1}}],[\"17发布\",{\"0\":{\"524\":1}}],[\"172\",{\"1\":{\"105\":1,\"108\":6}}],[\"17943\",{\"1\":{\"101\":5}}],[\"17\",{\"1\":{\"11\":1,\"32\":1,\"33\":5,\"79\":1,\"89\":5,\"101\":2,\"126\":2,\"199\":16,\"208\":6,\"308\":2,\"314\":1,\"315\":1,\"316\":1,\"353\":1,\"358\":1,\"528\":1,\"529\":1,\"547\":2,\"792\":1}}],[\"月我开源以来\",{\"1\":{\"783\":1}}],[\"月开始构建\",{\"1\":{\"633\":1}}],[\"月底同\",{\"1\":{\"612\":1}}],[\"月底停止维护\",{\"1\":{\"612\":1}}],[\"月初\",{\"1\":{\"612\":1}}],[\"月进入试运行阶段\",{\"1\":{\"306\":1}}],[\"月到\",{\"1\":{\"306\":1}}],[\"月发布\",{\"1\":{\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"月\",{\"1\":{\"12\":2,\"13\":2,\"14\":2,\"15\":1,\"21\":1,\"29\":1,\"32\":1,\"36\":1,\"50\":1,\"79\":9,\"330\":1,\"353\":1,\"358\":1,\"514\":1,\"612\":3,\"631\":1,\"632\":1,\"633\":1}}],[\"878639947\",{\"1\":{\"806\":2}}],[\"8发布\",{\"0\":{\"674\":1}}],[\"8526端口\",{\"1\":{\"547\":1}}],[\"857\",{\"1\":{\"199\":1}}],[\"8d6666\",{\"1\":{\"508\":1}}],[\"8823040504797\",{\"1\":{\"740\":1}}],[\"8888打开后台管理页面\",{\"1\":{\"584\":1}}],[\"8888\",{\"1\":{\"581\":2,\"582\":2}}],[\"88\",{\"1\":{\"308\":4}}],[\"8848\",{\"1\":{\"208\":2,\"709\":1}}],[\"890\",{\"1\":{\"208\":1}}],[\"800+\",{\"1\":{\"636\":1}}],[\"8000\",{\"1\":{\"36\":1}}],[\"80的根地址\",{\"1\":{\"430\":1}}],[\"8093\",{\"1\":{\"313\":1}}],[\"8080映射为例\",{\"1\":{\"584\":1}}],[\"8080\",{\"1\":{\"313\":1,\"428\":3,\"432\":2,\"709\":2}}],[\"80\",{\"1\":{\"271\":1,\"308\":6,\"430\":3,\"608\":1}}],[\"806\",{\"1\":{\"199\":1}}],[\"8265\",{\"1\":{\"208\":4}}],[\"826\",{\"1\":{\"199\":1}}],[\"82\",{\"1\":{\"109\":1}}],[\"847850277\",{\"1\":{\"317\":1}}],[\"84k\",{\"1\":{\"109\":1}}],[\"841\",{\"1\":{\"57\":1}}],[\"861\",{\"1\":{\"199\":1}}],[\"86\",{\"1\":{\"109\":1}}],[\"835\",{\"1\":{\"397\":1}}],[\"832\",{\"1\":{\"101\":1}}],[\"836\",{\"1\":{\"57\":1}}],[\"837\",{\"1\":{\"57\":1}}],[\"838\",{\"1\":{\"57\":1}}],[\"8387611\",{\"1\":{\"15\":1}}],[\"839\",{\"1\":{\"57\":1}}],[\"8192\",{\"1\":{\"709\":1}}],[\"81ms\",{\"1\":{\"109\":1}}],[\"8189\",{\"1\":{\"107\":1,\"108\":4,\"109\":2,\"110\":1,\"118\":1}}],[\"8188\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"108\":6,\"110\":1,\"116\":2,\"117\":2,\"125\":1}}],[\"81\",{\"1\":{\"12\":1}}],[\"8\",{\"0\":{\"659\":1,\"719\":1,\"721\":1},\"1\":{\"12\":2,\"13\":2,\"14\":2,\"24\":1,\"46\":1,\"79\":2,\"109\":2,\"149\":1,\"199\":1,\"208\":1,\"308\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"354\":3,\"368\":1,\"397\":1,\"420\":1,\"526\":2,\"529\":1,\"532\":2,\"538\":2,\"541\":1,\"544\":2,\"554\":2,\"564\":2,\"574\":1,\"577\":1,\"582\":1,\"603\":2,\"612\":1,\"616\":2,\"617\":1,\"631\":1,\"788\":1,\"796\":1,\"798\":1}}],[\"年左右的时候\",{\"1\":{\"792\":1}}],[\"年的时候\",{\"1\":{\"791\":1}}],[\"年双\",{\"1\":{\"786\":1}}],[\"年并不容易\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"年度\",{\"1\":{\"427\":2}}],[\"年\",{\"1\":{\"12\":2,\"21\":1,\"29\":1,\"32\":1,\"79\":12,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"306\":2,\"330\":1,\"352\":2,\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1,\"612\":4,\"631\":1,\"632\":1,\"633\":2}}],[\"大文件会自动分片上传\",{\"1\":{\"816\":1}}],[\"大文件分片上传出错问题\",{\"1\":{\"397\":1}}],[\"大文件分片上传\",{\"1\":{\"397\":1}}],[\"大文件分片\",{\"1\":{\"374\":1,\"389\":1}}],[\"大并发场景验证过的\",{\"1\":{\"786\":1}}],[\"大小\",{\"1\":{\"723\":1}}],[\"大小为\",{\"1\":{\"92\":1}}],[\"大约在冬季\",{\"0\":{\"717\":1}}],[\"大大减少了使用成本以及学习成本\",{\"1\":{\"717\":1}}],[\"大大地提升了工作效率\",{\"1\":{\"591\":1}}],[\"大大的时间小小的我\",{\"1\":{\"308\":1}}],[\"大概只需要几天的时间\",{\"1\":{\"590\":1}}],[\"大盘\",{\"1\":{\"469\":1}}],[\"大量的监控模版\",{\"1\":{\"456\":1}}],[\"大量请求下几乎平均\",{\"1\":{\"229\":1}}],[\"大多数情况下并不是像技术攻关\",{\"1\":{\"396\":1}}],[\"大锅\",{\"1\":{\"308\":1}}],[\"大风起不可当石立\",{\"1\":{\"308\":1}}],[\"大家思考一下\",{\"1\":{\"791\":1}}],[\"大家一起讨论\",{\"1\":{\"715\":1}}],[\"大家一起加油\",{\"1\":{\"308\":1}}],[\"大家可以放心用\",{\"1\":{\"507\":1}}],[\"大家可前往华为云商店参看\",{\"1\":{\"57\":1}}],[\"大黄蜂\",{\"1\":{\"308\":1}}],[\"大熊同学\",{\"1\":{\"308\":1}}],[\"大部分请求还是可以正常处理\",{\"1\":{\"263\":1}}],[\"大体上经历了\",{\"1\":{\"469\":1}}],[\"大体梳理了\",{\"1\":{\"239\":1}}],[\"大体逻辑就是判断请求是否成功\",{\"1\":{\"236\":1}}],[\"大体可以理解为\",{\"1\":{\"236\":1}}],[\"大数据等相关工作经历\",{\"1\":{\"404\":1}}],[\"大数据量下随机和轮询并无太大结果上的差异\",{\"1\":{\"229\":1}}],[\"大数据处理\",{\"1\":{\"8\":1,\"299\":1}}],[\"大有当年从\",{\"1\":{\"78\":1}}],[\"大会官网\",{\"1\":{\"15\":1}}],[\"大会报名通道\",{\"1\":{\"15\":1}}],[\"大会主论坛将邀请国内外多位重磅嘉宾发表致辞\",{\"1\":{\"15\":1}}],[\"大会地址\",{\"1\":{\"12\":1}}],[\"大会时间\",{\"1\":{\"12\":1}}],[\"如复杂的配置流程\",{\"1\":{\"794\":1}}],[\"如不需要可不设置或为空\",{\"1\":{\"740\":1}}],[\"如无特殊改变可以不用设置\",{\"1\":{\"740\":1}}],[\"如身份证\",{\"1\":{\"608\":1}}],[\"如今\",{\"0\":{\"589\":1}}],[\"如今大会已经进入最后的倒计时\",{\"1\":{\"11\":1}}],[\"如同类的继承一样\",{\"1\":{\"518\":1}}],[\"如埃氏筛法\",{\"1\":{\"406\":1}}],[\"如愿\",{\"1\":{\"308\":1}}],[\"如下是参数配置校验\",{\"1\":{\"271\":1}}],[\"如下\",{\"1\":{\"266\":1}}],[\"如下图所示该配置表示的是\",{\"1\":{\"266\":1}}],[\"如下图的\",{\"1\":{\"209\":1}}],[\"如下图\",{\"1\":{\"208\":1,\"247\":1,\"270\":1}}],[\"如装配\",{\"1\":{\"220\":1}}],[\"如刷新\",{\"1\":{\"162\":1}}],[\"如上图配置表示的意思是\",{\"1\":{\"265\":1}}],[\"如上图\",{\"1\":{\"116\":1,\"714\":1}}],[\"如改进的\",{\"1\":{\"81\":1}}],[\"如自动补全\",{\"1\":{\"81\":1}}],[\"如\",{\"1\":{\"81\":2,\"161\":2,\"162\":1,\"286\":2,\"406\":1,\"409\":1,\"419\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"586\":1,\"608\":3,\"609\":1,\"720\":1}}],[\"如果将文件记录保存到数据库中\",{\"1\":{\"817\":1}}],[\"如果想支持更多方式\",{\"1\":{\"816\":1}}],[\"如果想成为\",{\"1\":{\"9\":1,\"308\":1}}],[\"如果贵公司有使用到\",{\"1\":{\"786\":1}}],[\"如果贵公司是\",{\"1\":{\"784\":1,\"791\":1}}],[\"如果被大流量攻击\",{\"1\":{\"784\":1,\"791\":1}}],[\"如果一个接口被攻击\",{\"1\":{\"784\":1,\"791\":1}}],[\"如果一个公司要做开放平台或者入口网关\",{\"1\":{\"784\":1,\"791\":1}}],[\"如果一个配置类只配置\",{\"1\":{\"200\":1}}],[\"如果我想使用限流功能呢\",{\"1\":{\"789\":1}}],[\"如果我没猜错的话\",{\"1\":{\"783\":1,\"791\":1}}],[\"如果我们的项目对您产生了帮助或者您觉得还不错\",{\"1\":{\"741\":1}}],[\"如果我们的项目对您产生了帮助\",{\"1\":{\"727\":1}}],[\"如果我们需要转发到网关自身的\",{\"1\":{\"259\":1}}],[\"如果server\",{\"1\":{\"709\":3}}],[\"如果开关开启\",{\"1\":{\"664\":1}}],[\"如果开启了文件监听功能\",{\"1\":{\"520\":1}}],[\"如果开启了流控\",{\"1\":{\"266\":2}}],[\"如果以上配置文件无法找到\",{\"1\":{\"664\":1}}],[\"如果找到配置\",{\"1\":{\"664\":1}}],[\"如果本地都不能访问\",{\"1\":{\"586\":1}}],[\"如果能支持异步就好了\",{\"1\":{\"505\":1}}],[\"如果觉得日志太多的话\",{\"1\":{\"491\":1}}],[\"如果各位对\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"如果基于\",{\"1\":{\"456\":1}}],[\"如果说我们还在少年可能这话你信\",{\"1\":{\"456\":1}}],[\"如果再加上\",{\"1\":{\"431\":1}}],[\"如果在一个链路中相同请求的日志都拥有同一个请求\",{\"1\":{\"474\":1}}],[\"如果在统计过程中机器宕机后怎么办\",{\"1\":{\"406\":1}}],[\"如果在工作中你有使用网关的需求\",{\"1\":{\"127\":1}}],[\"如果单机单线程\",{\"1\":{\"406\":1}}],[\"如果社区小伙伴有想要扩展组件的需求\",{\"1\":{\"335\":1}}],[\"如果您之前使用的\",{\"0\":{\"781\":1}}],[\"如果您有时间并且对开源感兴趣\",{\"1\":{\"736\":1}}],[\"如果您觉得我们的项目为您带来了帮助\",{\"1\":{\"736\":1}}],[\"如果您想为开源社区做出贡献\",{\"1\":{\"336\":1,\"340\":1}}],[\"如果您或者您的公司正在使用\",{\"1\":{\"334\":1}}],[\"如果您在下载和使用\",{\"1\":{\"334\":1}}],[\"如果申请退出的项目是\",{\"1\":{\"305\":1}}],[\"如果捐赠项目作者加入\",{\"1\":{\"305\":1}}],[\"如果generic=true\",{\"1\":{\"294\":1}}],[\"如果泛化方式为bean\",{\"1\":{\"293\":1}}],[\"如果泛化为nativejava\",{\"1\":{\"293\":1}}],[\"如果小于默认值\",{\"1\":{\"273\":1}}],[\"如果请求预计等待时间超过\",{\"1\":{\"266\":1}}],[\"如果请求都正常则变为正常状态\",{\"1\":{\"265\":1}}],[\"如果流控类型是\",{\"1\":{\"266\":1}}],[\"如果还不正常则继续熔断\",{\"1\":{\"265\":1}}],[\"如果还是异常则继续熔断\",{\"1\":{\"264\":1}}],[\"如果还是有点看不明白监听和之前的\",{\"1\":{\"92\":1}}],[\"如果此服务在\",{\"1\":{\"265\":1}}],[\"如果该请求的预期通过时间小于规则预设的\",{\"1\":{\"263\":1}}],[\"如果当前请求距离上个通过的请求通过的时间间隔不小于预设值\",{\"1\":{\"263\":1}}],[\"如果从\",{\"1\":{\"263\":1}}],[\"如果默认什么都不配置\",{\"1\":{\"259\":1}}],[\"如果网关是集群\",{\"1\":{\"266\":1}}],[\"如果网关只代理\",{\"1\":{\"208\":1}}],[\"如果网关去\",{\"1\":{\"149\":1}}],[\"如果需要按照一定的顺序去执行\",{\"1\":{\"200\":1}}],[\"如果需要用到某个插件\",{\"1\":{\"130\":1}}],[\"如果都校验都通过就完成认证\",{\"1\":{\"195\":1}}],[\"如果可用获取在\",{\"1\":{\"195\":1}}],[\"如果命中它则直接可以得到实现类的对象\",{\"1\":{\"179\":1}}],[\"如果没回答上\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"如果没有则自动生成\",{\"1\":{\"664\":1}}],[\"如果没有则新建\",{\"1\":{\"176\":1}}],[\"如果没有评估好容量\",{\"1\":{\"262\":1}}],[\"如果没有命中则调用\",{\"1\":{\"183\":1}}],[\"如果没捞到数据\",{\"1\":{\"126\":1}}],[\"如果使用其它存储平台\",{\"1\":{\"814\":1}}],[\"如果使用sendmessage的快速发送需此配置\",{\"1\":{\"772\":1}}],[\"如果使用自定义模板发送方法可不设定\",{\"1\":{\"740\":1}}],[\"如果使用\",{\"1\":{\"175\":1}}],[\"如果判断为否则返回\",{\"1\":{\"172\":1}}],[\"如果代码中调用到\",{\"1\":{\"170\":1}}],[\"如果是\",{\"1\":{\"634\":1}}],[\"如果是则登录失败\",{\"1\":{\"624\":1}}],[\"如果是仅仅代码开源而不社区协作\",{\"1\":{\"456\":1}}],[\"如果是我猜测它是在启动时加载到缓存了\",{\"1\":{\"166\":1}}],[\"如果是手动点同步数据时\",{\"1\":{\"92\":1}}],[\"如果对第\",{\"1\":{\"154\":1}}],[\"如果后台出现问题不断的通知数据变动\",{\"1\":{\"149\":1}}],[\"如果后续再分析的话\",{\"1\":{\"92\":1}}],[\"如果拉取的数据与缓存比对后\",{\"1\":{\"149\":1}}],[\"如果返回值中有变化的类型\",{\"1\":{\"149\":1}}],[\"如果变动则结束\",{\"1\":{\"148\":1}}],[\"如果有运营人员在操作其他模块\",{\"1\":{\"783\":1}}],[\"如果有需改改进\",{\"1\":{\"664\":1}}],[\"如果有以下\",{\"1\":{\"489\":1}}],[\"如果有误则返回body错误信息\",{\"1\":{\"288\":1}}],[\"如果有误直接返回\",{\"1\":{\"288\":1}}],[\"如果有重载方法\",{\"1\":{\"286\":1}}],[\"如果有修改的需求则需要自行调整源码\",{\"1\":{\"266\":1}}],[\"如果有更新就直接返回\",{\"1\":{\"143\":1}}],[\"如果有兴趣的朋友\",{\"1\":{\"77\":1}}],[\"如果不支持则打印警告信息\",{\"1\":{\"624\":1}}],[\"如果不存在则设置方法\",{\"1\":{\"618\":1}}],[\"如果不正确就抛出\",{\"1\":{\"195\":1}}],[\"如果不想使用\",{\"1\":{\"156\":1}}],[\"如果不重写它的缓存更新\",{\"1\":{\"141\":1}}],[\"如果不是泛化调用\",{\"1\":{\"294\":1}}],[\"如果不是\",{\"1\":{\"166\":1}}],[\"如果不是同一个节点\",{\"1\":{\"125\":1}}],[\"如果不是删除的话\",{\"1\":{\"92\":1}}],[\"如果分数\",{\"1\":{\"134\":1}}],[\"如果权重相同或权重为0则均等随机\",{\"1\":{\"134\":1}}],[\"如果权重不相同且权重大于0则按总权重数随机\",{\"1\":{\"134\":1}}],[\"如果这里你给注释了或者根本不存在\",{\"1\":{\"130\":1}}],[\"如果捞到了表名已经注册过了\",{\"1\":{\"126\":1}}],[\"如果发现服务节点宕机了\",{\"1\":{\"125\":1}}],[\"如果相同直接返回\",{\"1\":{\"125\":1}}],[\"如果已经至少有1个服务器节点已接入\",{\"1\":{\"125\":1}}],[\"如果\",{\"1\":{\"103\":1,\"129\":1,\"145\":1,\"171\":1,\"294\":2,\"336\":1,\"340\":1,\"489\":1,\"678\":1}}],[\"如果插件数据有更改\",{\"1\":{\"92\":1}}],[\"如果关闭就会去重新连接\",{\"1\":{\"92\":1}}],[\"如果你使用的是\",{\"1\":{\"789\":1}}],[\"如果你使用\",{\"1\":{\"783\":1,\"789\":1}}],[\"如果你希望支持下\",{\"1\":{\"720\":1}}],[\"如果你有时间或者有兴趣的话可以联系我或者直接提交\",{\"1\":{\"764\":1}}],[\"如果你有想法\",{\"1\":{\"711\":1,\"725\":1}}],[\"如果你有此方面的场景\",{\"1\":{\"518\":1}}],[\"如果你想将配置文件放在apollo配置中心\",{\"1\":{\"709\":1}}],[\"如果你想将配置文件放在nacos配置中心\",{\"1\":{\"709\":1}}],[\"如果你想更灵活一点\",{\"1\":{\"430\":1}}],[\"如果你用\",{\"1\":{\"519\":1}}],[\"如果你已经熟悉了\",{\"1\":{\"517\":1}}],[\"如果你本地已经安装了\",{\"1\":{\"333\":1}}],[\"如果你感兴趣\",{\"1\":{\"77\":1}}],[\"如果你是第一次知道这个项目\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"如果你是\",{\"1\":{\"77\":3,\"791\":1}}],[\"如果你采用\",{\"1\":{\"64\":3}}],[\"如果你刚好需要云服务器来部署\",{\"1\":{\"57\":1}}],[\"如果超时了抛出超时异常\",{\"1\":{\"273\":1}}],[\"如果超时了\",{\"1\":{\"62\":1}}],[\"如何不停机发布的问题\",{\"1\":{\"791\":1}}],[\"如何加群\",{\"0\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"如何加载这些插件\",{\"1\":{\"216\":1}}],[\"如何关闭请查看\",{\"1\":{\"313\":1}}],[\"如何判断服务是否恢复正常了\",{\"1\":{\"264\":1}}],[\"如何做呢\",{\"1\":{\"259\":1}}],[\"如何处理\",{\"1\":{\"259\":1}}],[\"如何保证在页面修改\",{\"0\":{\"247\":1}}],[\"如何发起的请求调用\",{\"1\":{\"236\":1}}],[\"如何同步网关数据\",{\"0\":{\"209\":1,\"210\":1}}],[\"如何感知网关数据变化的\",{\"0\":{\"205\":1},\"1\":{\"203\":1}}],[\"如何获取\",{\"0\":{\"205\":1},\"1\":{\"203\":1}}],[\"如何区分出\",{\"1\":{\"173\":1}}],[\"如何实现\",{\"1\":{\"168\":1}}],[\"如何实现以及性能情况也可以得到解答\",{\"1\":{\"168\":1}}],[\"如何使用\",{\"0\":{\"73\":1}}],[\"如何与用户一起\",{\"1\":{\"52\":1}}],[\"如何打开社交面\",{\"1\":{\"30\":1}}],[\"如何增强实现\",{\"1\":{\"30\":1}}],[\"如您未收到邮件\",{\"1\":{\"13\":1}}],[\"今天来看\",{\"1\":{\"791\":1}}],[\"今天很高兴宣布\",{\"1\":{\"330\":1}}],[\"今天早睡了吗\",{\"1\":{\"308\":1}}],[\"今天就来接着继续分析\",{\"1\":{\"150\":1}}],[\"今天就具体看看到底干了点儿啥\",{\"1\":{\"121\":1}}],[\"今天只是演示了\",{\"1\":{\"118\":1}}],[\"今天给大家带来的是\",{\"1\":{\"38\":1}}],[\"今天的明天技术\",{\"1\":{\"11\":1}}],[\"今年的大会为期\",{\"1\":{\"13\":1}}],[\"今年\",{\"1\":{\"11\":1}}],[\"共\",{\"1\":{\"406\":1}}],[\"共同推动项目的发展\",{\"1\":{\"635\":1}}],[\"共同成长\",{\"1\":{\"334\":1}}],[\"共同的事业\",{\"1\":{\"308\":1}}],[\"共同发展\",{\"1\":{\"305\":1}}],[\"共建社区\",{\"1\":{\"308\":1}}],[\"共享模块已进行优化配置\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"共享所有开源资源\",{\"1\":{\"306\":1}}],[\"共享开源盛宴\",{\"0\":{\"11\":1}}],[\"共计78位贡献者参与其中\",{\"1\":{\"312\":1}}],[\"共计\",{\"1\":{\"46\":1}}],[\"共进\",{\"1\":{\"23\":1}}],[\"共赴开源盛宴\",{\"1\":{\"11\":1}}],[\"个应用\",{\"1\":{\"791\":1}}],[\"个插件都处理的情况下\",{\"1\":{\"790\":1}}],[\"个组件\",{\"1\":{\"694\":1}}],[\"个多月的开发\",{\"1\":{\"612\":1}}],[\"个多月又过去了\",{\"1\":{\"460\":1}}],[\"个修复\",{\"1\":{\"514\":1}}],[\"个增强\",{\"1\":{\"514\":1}}],[\"个大特性\",{\"1\":{\"514\":1}}],[\"个大的新特性\",{\"1\":{\"498\":1}}],[\"个左右\",{\"0\":{\"507\":1}}],[\"个不同的部分组成了一片完美的叶子\",{\"1\":{\"499\":1}}],[\"个加强\",{\"1\":{\"498\":1}}],[\"个测试用例以上的开源项目中\",{\"1\":{\"514\":1}}],[\"个测试用例\",{\"1\":{\"484\":1,\"514\":1}}],[\"个阶段\",{\"1\":{\"469\":1}}],[\"个子任务\",{\"1\":{\"406\":1}}],[\"个子任务后\",{\"1\":{\"406\":1}}],[\"个质数\",{\"1\":{\"406\":1}}],[\"个任务\",{\"1\":{\"406\":1}}],[\"个人笔记\",{\"1\":{\"831\":1}}],[\"个人工具\",{\"1\":{\"636\":1,\"643\":1}}],[\"个人博客\",{\"1\":{\"407\":1}}],[\"个人\",{\"1\":{\"305\":1}}],[\"个线程\",{\"1\":{\"271\":1}}],[\"个接口我们配置的流控是\",{\"1\":{\"266\":1}}],[\"个节点上某个服务都触发熔断时\",{\"1\":{\"266\":1}}],[\"个节点\",{\"1\":{\"266\":1}}],[\"个请求传导到后端服务上\",{\"1\":{\"266\":1}}],[\"个请求都出现了异常那么则熔断\",{\"1\":{\"265\":1}}],[\"个选项是关于流量控制的配置\",{\"1\":{\"264\":1}}],[\"个选项是关于熔断的配置\",{\"1\":{\"264\":1}}],[\"个指标判断服务为异常并熔断服务后\",{\"1\":{\"264\":1}}],[\"个方式进行判断\",{\"1\":{\"264\":1}}],[\"个方法\",{\"1\":{\"156\":1}}],[\"个枚举\",{\"1\":{\"154\":1}}],[\"个系统\",{\"0\":{\"151\":1}}],[\"个\",{\"1\":{\"125\":1,\"265\":1,\"266\":1,\"468\":1,\"475\":1,\"481\":2,\"497\":1,\"498\":1,\"507\":1,\"513\":1,\"514\":1,\"694\":1}}],[\"个模块\",{\"1\":{\"81\":1}}],[\"个月的公测与修复工作\",{\"1\":{\"612\":1}}],[\"个月的设计与讨论\",{\"1\":{\"612\":1}}],[\"个月\",{\"1\":{\"79\":6}}],[\"个月内有实际有效的代码提交记录\",{\"1\":{\"8\":1,\"299\":1}}],[\"个社区群内的各种问题\",{\"1\":{\"46\":1}}],[\"个论坛方向\",{\"1\":{\"11\":1}}],[\"囊括\",{\"1\":{\"11\":1}}],[\"原老版本功能文档将不再服务\",{\"1\":{\"693\":1}}],[\"原因为社区不更新功能太少只支持\",{\"1\":{\"615\":1}}],[\"原因就是每次调用\",{\"1\":{\"167\":1}}],[\"原短信功能\",{\"1\":{\"615\":1}}],[\"原先全局拦截器的定义如下\",{\"1\":{\"488\":1}}],[\"原先错误事件回调通知是这样定义的\",{\"1\":{\"487\":1}}],[\"原本相对独立性较高的内容\",{\"1\":{\"367\":1,\"382\":1}}],[\"原有数据存储局限\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"原名\",{\"1\":{\"352\":1,\"807\":1}}],[\"原项目名称\",{\"1\":{\"352\":1}}],[\"原仓库社区群加上\",{\"1\":{\"304\":1}}],[\"原则上我们欢迎任何贡献者参与到我们\",{\"1\":{\"764\":1}}],[\"原则上\",{\"1\":{\"306\":1}}],[\"原则上要求下一个版本\",{\"1\":{\"303\":1}}],[\"原则上需要联系\",{\"1\":{\"302\":1}}],[\"原生支持\",{\"1\":{\"608\":1}}],[\"原生语言来写脚本\",{\"0\":{\"502\":1}}],[\"原生镜像\",{\"0\":{\"363\":1,\"377\":1,\"392\":1}}],[\"原生微服务全家桶三种基础设值切换能力\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"原生微服务全家桶等两种基础设施支持\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"原生\",{\"1\":{\"79\":1,\"608\":1,\"761\":1}}],[\"原\",{\"1\":{\"11\":1}}],[\"为物联网设备调试和管理提供了强大的基础支持\",{\"1\":{\"803\":1}}],[\"为万世开太平\",{\"1\":{\"764\":1}}],[\"为生民立命\",{\"1\":{\"764\":1}}],[\"为天地立心\",{\"1\":{\"764\":1}}],[\"为作者的个人网站\",{\"1\":{\"739\":1}}],[\"为数组的时候\",{\"1\":{\"651\":1,\"660\":1}}],[\"为简化\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"为整个社区做出宝贵的贡献\",{\"1\":{\"635\":1}}],[\"为大家提供更好的体验\",{\"1\":{\"633\":1}}],[\"为让大家真正可以学到技术而开源\",{\"1\":{\"607\":1}}],[\"为学习而开源\",{\"1\":{\"607\":1}}],[\"为兴趣而开源\",{\"1\":{\"607\":1}}],[\"为此这次新版本中推出了全新的\",{\"1\":{\"516\":1}}],[\"为每一个版本都设计一句\",{\"1\":{\"501\":1}}],[\"为http\",{\"1\":{\"428\":1}}],[\"为载体\",{\"1\":{\"396\":1}}],[\"为主\",{\"1\":{\"367\":1,\"382\":1}}],[\"为目标\",{\"1\":{\"367\":1,\"382\":1}}],[\"为方便用户使用\",{\"1\":{\"367\":1,\"382\":1}}],[\"为true是开启springcloud缓存\",{\"1\":{\"314\":1}}],[\"为shenyu\",{\"1\":{\"314\":1}}],[\"为加密插件\",{\"1\":{\"314\":1}}],[\"为泛化调用做好准备\",{\"1\":{\"278\":1}}],[\"为用户提供了好用的流量控制和熔断功能\",{\"1\":{\"266\":1}}],[\"为1\",{\"1\":{\"249\":1}}],[\"为什么使用\",{\"1\":{\"643\":1}}],[\"为什么是终于\",{\"1\":{\"460\":1}}],[\"为什么要开源集群版\",{\"0\":{\"456\":1}}],[\"为什么更名为\",{\"0\":{\"352\":1}}],[\"为什么\",{\"1\":{\"243\":1}}],[\"为什么这里能确定一个唯一\",{\"1\":{\"171\":1}}],[\"为啥这个\",{\"1\":{\"231\":1}}],[\"为使用相同选择器的服务列表\",{\"1\":{\"225\":2}}],[\"为例\",{\"0\":{\"187\":1},\"1\":{\"219\":1,\"814\":1}}],[\"为第三层缓存\",{\"1\":{\"183\":1}}],[\"为标识\",{\"1\":{\"125\":1}}],[\"为你的选择器起一个容易分辨的名字\",{\"1\":{\"114\":1}}],[\"为了解决这些问题\",{\"1\":{\"794\":1}}],[\"为了解决每次大版本升级的可能带来的对老用户的影响\",{\"1\":{\"720\":1}}],[\"为了不打击他们的积极性\",{\"1\":{\"792\":1}}],[\"为了不被时代抛弃\",{\"1\":{\"78\":1}}],[\"为了方便管理\",{\"1\":{\"816\":3}}],[\"为了方便使用和记忆\",{\"1\":{\"749\":1}}],[\"为了方便测试\",{\"1\":{\"102\":1}}],[\"为了更好地了解\",{\"1\":{\"635\":1}}],[\"为了更好的让大家了解\",{\"1\":{\"613\":1}}],[\"为了更好的方便用户基于华为云部署\",{\"1\":{\"57\":1}}],[\"为了保证使用的多样性\",{\"1\":{\"503\":1}}],[\"为了保证数据一致性\",{\"1\":{\"397\":1}}],[\"为了\",{\"1\":{\"488\":1}}],[\"为了使\",{\"1\":{\"487\":1}}],[\"为了防止大家再翻回去看\",{\"1\":{\"157\":1}}],[\"为了提高系统的性能\",{\"1\":{\"727\":1}}],[\"为了提高大家的自觉性我们设立了惩罚制度\",{\"1\":{\"24\":1}}],[\"为了提高社区参与者的积极性\",{\"1\":{\"22\":1}}],[\"为一体\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"为\",{\"0\":{\"45\":1},\"1\":{\"38\":1,\"90\":1,\"129\":1,\"225\":2,\"232\":4,\"314\":3,\"315\":1,\"328\":1,\"438\":2,\"469\":1,\"499\":1,\"501\":1,\"634\":2}}],[\"为行业分享开源的观点\",{\"1\":{\"15\":1}}],[\"为开发者\",{\"1\":{\"15\":1}}],[\"为期\",{\"1\":{\"15\":1}}],[\"为全球提供着几十亿甚至上百亿美元市值的开源软件\",{\"1\":{\"11\":1}}],[\"为往圣继绝学\",{\"1\":{\"1\":1,\"308\":8,\"764\":1,\"792\":1}}],[\"aa\",{\"1\":{\"817\":5}}],[\"aaa\",{\"1\":{\"64\":1}}],[\"aes+rsa\",{\"1\":{\"615\":1}}],[\"aes\",{\"1\":{\"605\":1,\"608\":1}}],[\"aware\",{\"1\":{\"420\":1}}],[\"aws\",{\"1\":{\"397\":1,\"608\":1,\"616\":1}}],[\"aoshiguchen\",{\"1\":{\"317\":1,\"587\":1}}],[\"aop\",{\"1\":{\"61\":2,\"63\":1,\"64\":1,\"67\":1,\"608\":1,\"619\":2,\"750\":1}}],[\"audi\",{\"1\":{\"308\":1}}],[\"authz\",{\"1\":{\"541\":1}}],[\"authenticator\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"authenticate\",{\"1\":{\"199\":1}}],[\"authroization\",{\"1\":{\"360\":1}}],[\"authpath\",{\"1\":{\"200\":2}}],[\"authurl\",{\"1\":{\"191\":2}}],[\"authdatahandler\",{\"1\":{\"161\":1}}],[\"authdatasubscriber\",{\"1\":{\"161\":1}}],[\"authdatasubscribers\",{\"1\":{\"148\":3,\"161\":2,\"205\":5}}],[\"authsubscribers\",{\"1\":{\"161\":2,\"205\":4,\"210\":2}}],[\"auth\",{\"1\":{\"92\":3,\"141\":1,\"148\":1,\"154\":1,\"155\":1,\"157\":2,\"161\":1,\"200\":2,\"205\":2,\"208\":1}}],[\"authorization\",{\"0\":{\"364\":1,\"378\":1,\"379\":2,\"393\":1,\"394\":2,\"400\":1,\"401\":2},\"1\":{\"351\":2,\"353\":1,\"354\":1,\"357\":12,\"358\":2,\"359\":2,\"360\":2,\"364\":10,\"367\":2,\"373\":1,\"374\":1,\"378\":10,\"379\":2,\"382\":2,\"388\":1,\"389\":1,\"393\":10,\"394\":2,\"396\":2,\"397\":1,\"400\":10,\"401\":2}}],[\"author\",{\"1\":{\"66\":1,\"67\":1,\"71\":1,\"74\":1,\"154\":2,\"156\":2,\"200\":2}}],[\"autosql\",{\"1\":{\"709\":1}}],[\"auto\",{\"1\":{\"458\":1,\"710\":1,\"717\":1}}],[\"autoconfigure\",{\"1\":{\"383\":1}}],[\"autocloseable\",{\"1\":{\"148\":1,\"205\":1}}],[\"automatictransitionfromopentohalfopenenabled\",{\"1\":{\"270\":1}}],[\"autoproxy\",{\"1\":{\"74\":1}}],[\"autowired\",{\"1\":{\"66\":2,\"67\":2,\"709\":1,\"773\":1,\"816\":1}}],[\"amazon\",{\"1\":{\"808\":1,\"809\":1}}],[\"am\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"amoro\",{\"1\":{\"338\":1}}],[\"amiron\",{\"1\":{\"308\":1}}],[\"amp\",{\"1\":{\"64\":1,\"74\":1,\"77\":1}}],[\"aflybird0\",{\"1\":{\"317\":1}}],[\"af86\",{\"1\":{\"208\":4}}],[\"afterprocess获取不到\",{\"1\":{\"509\":1}}],[\"afterprocess\",{\"1\":{\"488\":2}}],[\"afterpropertiesset\",{\"1\":{\"155\":1,\"156\":2,\"200\":5,\"209\":2,\"247\":1}}],[\"afterpluginchanged\",{\"1\":{\"141\":2,\"144\":2}}],[\"after\",{\"1\":{\"74\":1,\"149\":1,\"488\":2}}],[\"ak\",{\"0\":{\"186\":1},\"1\":{\"186\":2}}],[\"archivebasename\",{\"1\":{\"547\":1}}],[\"archaius\",{\"1\":{\"269\":1}}],[\"arm架构docker\",{\"1\":{\"529\":1}}],[\"artifacthub\",{\"1\":{\"461\":1}}],[\"artifactid>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":5,\"282\":1,\"323\":1,\"326\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":2,\"814\":2}}],[\"arthas\",{\"0\":{\"347\":1}}],[\"argument\",{\"1\":{\"294\":1}}],[\"arg\",{\"1\":{\"293\":6,\"474\":1}}],[\"argv\",{\"1\":{\"252\":5}}],[\"args的作用redis\",{\"1\":{\"252\":1}}],[\"args\",{\"1\":{\"166\":1,\"167\":1,\"173\":2,\"200\":1,\"286\":4,\"293\":3,\"294\":14,\"324\":1,\"325\":1,\"815\":2}}],[\"are\",{\"1\":{\"195\":2}}],[\"arrayutil\",{\"1\":{\"723\":1}}],[\"arrayutils\",{\"1\":{\"149\":1}}],[\"arraylist\",{\"1\":{\"259\":3}}],[\"arraylist<handlermapping>\",{\"1\":{\"259\":1}}],[\"arraylist<long>\",{\"1\":{\"249\":1}}],[\"arraylist<>\",{\"1\":{\"155\":1,\"200\":1,\"209\":2,\"210\":1}}],[\"arrays\",{\"1\":{\"149\":1,\"191\":1,\"249\":2}}],[\"aggregatio\",{\"1\":{\"740\":1}}],[\"aggregation\",{\"1\":{\"738\":1}}],[\"again\",{\"1\":{\"148\":1,\"149\":1,\"245\":1}}],[\"agent\",{\"1\":{\"37\":1,\"53\":1,\"342\":2,\"354\":2,\"421\":1,\"441\":1,\"447\":1,\"451\":1,\"452\":1,\"463\":1,\"464\":1}}],[\"at\",{\"1\":{\"208\":14,\"271\":2}}],[\"attempt\",{\"1\":{\"199\":1}}],[\"attract\",{\"1\":{\"308\":1}}],[\"attr\",{\"1\":{\"137\":1,\"236\":1,\"237\":1}}],[\"atomicinteger\",{\"1\":{\"66\":3}}],[\"atomic\",{\"1\":{\"66\":1}}],[\"availability\",{\"1\":{\"459\":1}}],[\"availableprocessors\",{\"1\":{\"67\":1,\"74\":2}}],[\"aviator\",{\"1\":{\"458\":1,\"502\":1}}],[\"aviatorscript\",{\"1\":{\"442\":1}}],[\"average\",{\"1\":{\"266\":1}}],[\"avg\",{\"1\":{\"109\":2,\"271\":1}}],[\"abc\",{\"1\":{\"814\":1,\"817\":4}}],[\"absvalueparser\",{\"1\":{\"722\":1}}],[\"abstractmatchstrategy\",{\"1\":{\"234\":1}}],[\"abstractdatahandler<plugindata>\",{\"1\":{\"162\":1}}],[\"abstractdatahandler<t>\",{\"1\":{\"162\":1}}],[\"abstractdatahandler\",{\"1\":{\"161\":1,\"162\":2}}],[\"abstractdatarefresh\",{\"1\":{\"148\":1}}],[\"abstractdatachangedlistener\",{\"1\":{\"92\":5,\"141\":4,\"144\":1}}],[\"abstract\",{\"1\":{\"141\":1,\"162\":1,\"722\":1}}],[\"abstractplugin\",{\"1\":{\"128\":1}}],[\"abstractsoulplugin\",{\"0\":{\"129\":1,\"234\":1},\"1\":{\"105\":2,\"108\":12,\"129\":1,\"131\":1,\"219\":2,\"224\":2,\"234\":3,\"266\":1,\"273\":1}}],[\"ability\",{\"1\":{\"397\":1}}],[\"about\",{\"1\":{\"74\":1}}],[\"abortpolicy\",{\"1\":{\"66\":1,\"67\":1}}],[\"ad\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"advantages\",{\"0\":{\"370\":1,\"385\":1}}],[\"adapterbeans\",{\"1\":{\"259\":2}}],[\"adriver\",{\"1\":{\"171\":3}}],[\"admin地址\",{\"1\":{\"788\":1}}],[\"adminurl\",{\"1\":{\"103\":1}}],[\"admin的\",{\"1\":{\"101\":1}}],[\"admin是\",{\"1\":{\"100\":1}}],[\"admin\",{\"0\":{\"100\":1,\"197\":1,\"203\":2,\"204\":1,\"209\":1,\"281\":1},\"1\":{\"92\":10,\"100\":1,\"112\":2,\"121\":1,\"122\":1,\"150\":4,\"152\":1,\"160\":1,\"198\":2,\"199\":1,\"200\":8,\"201\":1,\"203\":3,\"204\":2,\"206\":2,\"208\":13,\"209\":3,\"230\":1,\"254\":2,\"270\":3,\"276\":1,\"281\":1,\"282\":2,\"313\":1,\"314\":2,\"315\":4,\"316\":6,\"327\":1,\"328\":1,\"333\":2,\"383\":1,\"397\":1,\"457\":1,\"465\":1,\"575\":1,\"583\":3,\"584\":1,\"608\":2,\"616\":1,\"706\":1,\"783\":1,\"787\":1,\"788\":5,\"789\":1,\"790\":1,\"816\":1}}],[\"addimg\",{\"1\":{\"723\":1}}],[\"addifabsent\",{\"1\":{\"170\":1}}],[\"adddaterange\",{\"1\":{\"617\":1}}],[\"adddivideupstream\",{\"1\":{\"123\":5,\"125\":6}}],[\"addpath\",{\"1\":{\"206\":2}}],[\"added\",{\"1\":{\"206\":1}}],[\"addsubscribepath\",{\"1\":{\"206\":3}}],[\"addall\",{\"1\":{\"136\":1,\"236\":1,\"249\":1}}],[\"address注解的host和port属性\",{\"1\":{\"430\":1}}],[\"addresshash\",{\"1\":{\"133\":2}}],[\"address\",{\"1\":{\"133\":3,\"430\":5}}],[\"add\",{\"1\":{\"70\":1,\"92\":1,\"123\":1,\"125\":1,\"144\":3,\"158\":1,\"209\":1,\"210\":1,\"227\":1,\"259\":1,\"266\":2,\"289\":1,\"314\":1,\"438\":2,\"458\":15,\"605\":6,\"618\":4}}],[\"any\",{\"1\":{\"356\":1,\"395\":1,\"402\":1,\"516\":1}}],[\"ant\",{\"1\":{\"640\":1,\"647\":1}}],[\"antisamy\",{\"1\":{\"354\":1}}],[\"antpathmatch\",{\"1\":{\"313\":2}}],[\"animal\",{\"1\":{\"166\":15,\"167\":5}}],[\"another\",{\"1\":{\"148\":1}}],[\"andor\",{\"1\":{\"608\":1}}],[\"andriod\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"and\",{\"1\":{\"89\":3,\"90\":1,\"109\":2,\"114\":1,\"124\":1,\"126\":2,\"156\":1,\"206\":1,\"458\":1,\"459\":1}}],[\"annotationutil\",{\"1\":{\"723\":1}}],[\"annotationawareordercomparator\",{\"1\":{\"259\":3}}],[\"annotation<\",{\"1\":{\"74\":1,\"709\":1}}],[\"annotation\",{\"1\":{\"66\":1,\"67\":1,\"183\":4,\"208\":1,\"314\":1,\"802\":1}}],[\"alone\",{\"1\":{\"624\":1}}],[\"also\",{\"1\":{\"458\":1}}],[\"already\",{\"1\":{\"458\":1}}],[\"almalinux\",{\"1\":{\"449\":1}}],[\"alerts\",{\"1\":{\"458\":1}}],[\"alert\",{\"1\":{\"444\":1,\"458\":4}}],[\"aly\",{\"1\":{\"308\":1}}],[\"alist\",{\"1\":{\"808\":2}}],[\"alias\",{\"1\":{\"723\":2}}],[\"alipay\",{\"1\":{\"354\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"aliyu\",{\"1\":{\"308\":1}}],[\"aliyuncs\",{\"1\":{\"333\":1,\"580\":1,\"581\":1,\"582\":1,\"740\":2,\"814\":1}}],[\"aliyun\",{\"1\":{\"208\":2,\"354\":1,\"360\":1,\"617\":1,\"814\":4,\"816\":1}}],[\"alibabadubboplugin\",{\"1\":{\"129\":1,\"130\":1}}],[\"alibabadubboplugin等\",{\"1\":{\"129\":1}}],[\"alibaba\",{\"1\":{\"101\":1,\"131\":2,\"208\":1,\"231\":2,\"314\":1,\"351\":1,\"353\":1,\"358\":1,\"362\":2,\"367\":1,\"376\":2,\"382\":1,\"391\":2,\"396\":1,\"399\":2,\"608\":2,\"740\":2,\"759\":1,\"761\":1,\"787\":1,\"789\":4,\"792\":1,\"798\":1}}],[\"algorithm\",{\"1\":{\"164\":3,\"229\":2}}],[\"alter\",{\"1\":{\"444\":1}}],[\"alt\",{\"1\":{\"156\":1}}],[\"allcontributors\",{\"1\":{\"458\":9}}],[\"all\",{\"1\":{\"148\":1,\"174\":1,\"354\":1,\"368\":1,\"383\":1,\"397\":1}}],[\"allowunsaferenegotiation\",{\"1\":{\"723\":1}}],[\"allowunsafeservercertchange\",{\"1\":{\"723\":1}}],[\"allowmultiqueries=true\",{\"1\":{\"582\":1}}],[\"allowed\",{\"1\":{\"249\":4,\"252\":5}}],[\"allow\",{\"1\":{\"106\":1,\"788\":1}}],[\"alphago\",{\"0\":{\"589\":1}}],[\"alpha2\",{\"1\":{\"368\":1}}],[\"alpha\",{\"1\":{\"79\":4}}],[\"alarm\",{\"1\":{\"57\":1,\"412\":1,\"458\":2}}],[\"a\",{\"1\":{\"74\":2,\"92\":8,\"93\":1,\"101\":1,\"121\":1,\"126\":1,\"149\":1,\"167\":1,\"200\":1,\"205\":1,\"208\":1,\"282\":1,\"406\":1,\"458\":13,\"489\":3,\"504\":3,\"505\":3,\"506\":1,\"516\":2,\"517\":2,\"518\":4,\"519\":2,\"677\":2,\"790\":1}}],[\"acl\",{\"1\":{\"809\":1}}],[\"aclass\",{\"1\":{\"181\":4,\"183\":6}}],[\"acxxxxxxxxc274b2a8263479b954c1ab5\",{\"1\":{\"740\":1}}],[\"acmp\",{\"1\":{\"506\":1}}],[\"acm\",{\"1\":{\"208\":4}}],[\"accept\",{\"1\":{\"683\":1}}],[\"accesskeysecret\",{\"1\":{\"740\":1}}],[\"accesskeyid\",{\"1\":{\"727\":1,\"740\":1}}],[\"accesskey\",{\"1\":{\"208\":2}}],[\"access\",{\"1\":{\"186\":2,\"759\":2,\"772\":2,\"814\":1}}],[\"accesscontroller\",{\"1\":{\"167\":1,\"170\":1}}],[\"acc\",{\"1\":{\"167\":3}}],[\"accountcontroller\",{\"1\":{\"709\":1}}],[\"accountservice\",{\"1\":{\"702\":2}}],[\"account\",{\"1\":{\"77\":2,\"624\":1,\"702\":1,\"709\":2}}],[\"activity\",{\"1\":{\"624\":1}}],[\"actives=\",{\"1\":{\"702\":1}}],[\"active=\",{\"1\":{\"664\":1}}],[\"activedirectory\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"activemq\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"active\",{\"0\":{\"623\":1,\"624\":1},\"1\":{\"315\":1,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"624\":3,\"664\":3}}],[\"activate\",{\"1\":{\"293\":1,\"294\":1,\"644\":1}}],[\"action\",{\"1\":{\"43\":1,\"70\":1}}],[\"actuator<\",{\"1\":{\"788\":1}}],[\"actuator\",{\"1\":{\"101\":1,\"208\":1,\"313\":2,\"315\":1,\"608\":1}}],[\"acquirebyname\",{\"1\":{\"126\":1,\"161\":1,\"162\":1}}],[\"acquire\",{\"1\":{\"71\":1}}],[\"ac\",{\"1\":{\"36\":1,\"44\":1,\"49\":1}}],[\"ai量化平台前传\",{\"0\":{\"588\":1}}],[\"airflow\",{\"1\":{\"458\":1}}],[\"ain\",{\"1\":{\"199\":2}}],[\"ai\",{\"0\":{\"589\":1},\"1\":{\"15\":2,\"16\":1,\"593\":1}}],[\"aigc\",{\"1\":{\"15\":1}}],[\"asgc\",{\"1\":{\"580\":1,\"581\":1,\"582\":1}}],[\"assistant\",{\"1\":{\"397\":1}}],[\"assets\",{\"1\":{\"822\":1}}],[\"assembly\",{\"1\":{\"315\":1}}],[\"assert\",{\"1\":{\"195\":1,\"235\":1,\"236\":1,\"266\":1,\"273\":1,\"288\":2}}],[\"aslist\",{\"1\":{\"249\":2}}],[\"asyncrepository\",{\"1\":{\"709\":1}}],[\"async\",{\"1\":{\"293\":1,\"294\":1}}],[\"asynccontext\",{\"1\":{\"144\":12,\"145\":1}}],[\"asynctimeoutfuture\",{\"1\":{\"144\":4}}],[\"asyncthreads\",{\"1\":{\"64\":2}}],[\"ashttpheaders\",{\"1\":{\"137\":1,\"237\":1}}],[\"as\",{\"1\":{\"74\":2,\"313\":2,\"458\":9}}],[\"aspect\",{\"1\":{\"74\":1}}],[\"aspectj\",{\"1\":{\"67\":1,\"74\":1,\"802\":1}}],[\"asf\",{\"1\":{\"11\":1}}],[\"asia\",{\"0\":{\"11\":1},\"1\":{\"11\":2,\"13\":1,\"14\":1}}],[\"apollo\",{\"1\":{\"313\":3,\"314\":1,\"316\":1,\"409\":1,\"419\":1,\"707\":1,\"709\":3,\"713\":1,\"714\":1}}],[\"apachdubboplugin\",{\"0\":{\"288\":1},\"1\":{\"276\":1}}],[\"apachedubboproxyservice\",{\"0\":{\"289\":1}}],[\"apachedubboproxyserivce\",{\"1\":{\"276\":1}}],[\"apachedubboplugin\",{\"1\":{\"287\":1}}],[\"apachecon\",{\"1\":{\"11\":1}}],[\"apache\",{\"0\":{\"277\":1,\"279\":1,\"283\":1,\"293\":1,\"310\":1,\"311\":1},\"1\":{\"11\":2,\"16\":1,\"18\":1,\"71\":1,\"101\":1,\"131\":2,\"165\":1,\"174\":3,\"199\":11,\"276\":3,\"277\":1,\"280\":5,\"282\":3,\"287\":1,\"311\":4,\"312\":2,\"313\":25,\"314\":47,\"315\":55,\"316\":55,\"318\":2,\"336\":1,\"340\":1,\"431\":1,\"448\":1,\"458\":2,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":1,\"716\":1,\"787\":1,\"789\":4,\"792\":4,\"796\":1,\"800\":1}}],[\"apple\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"applicationconfigcache\",{\"1\":{\"289\":3}}],[\"applicationconfig\",{\"1\":{\"284\":1}}],[\"applicationcontextholder\",{\"1\":{\"421\":1}}],[\"applicationcontext\",{\"1\":{\"155\":7,\"200\":7,\"208\":1,\"209\":1,\"259\":1}}],[\"applicationlistener<datachangedevent>\",{\"1\":{\"141\":1,\"155\":1,\"200\":1}}],[\"applicationeventpublisher\",{\"1\":{\"124\":1,\"200\":1}}],[\"application\",{\"1\":{\"74\":1,\"81\":1,\"92\":1,\"103\":1,\"149\":1,\"198\":2,\"208\":4,\"313\":1,\"326\":2,\"430\":4,\"438\":1,\"664\":2,\"788\":1,\"814\":1}}],[\"applicationname\",{\"1\":{\"74\":1}}],[\"appid\",{\"1\":{\"313\":1,\"709\":1}}],[\"appkey\",{\"0\":{\"189\":1},\"1\":{\"193\":1,\"232\":1,\"740\":1}}],[\"appclassloader\",{\"1\":{\"167\":1}}],[\"appcds\",{\"1\":{\"82\":1}}],[\"appauthservice\",{\"1\":{\"200\":1}}],[\"appauthdata\",{\"1\":{\"195\":4}}],[\"appauthdatalist\",{\"1\":{\"157\":2}}],[\"appauthdatarefresh\",{\"1\":{\"148\":1}}],[\"appauth\",{\"1\":{\"156\":2}}],[\"append\",{\"1\":{\"148\":4}}],[\"appenders\",{\"1\":{\"101\":1}}],[\"appname\",{\"1\":{\"103\":1,\"116\":1,\"124\":4,\"709\":4}}],[\"app\",{\"1\":{\"92\":3,\"141\":1,\"148\":1,\"154\":1,\"155\":1,\"157\":2,\"161\":1,\"200\":2,\"458\":3,\"644\":2,\"740\":1,\"772\":1}}],[\"apis即可展示当前控制器中的所有\",{\"1\":{\"696\":1}}],[\"apis\",{\"0\":{\"686\":1,\"696\":1},\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1,\"675\":1,\"683\":1,\"686\":1,\"692\":1}}],[\"apidoc\",{\"1\":{\"314\":1,\"315\":1,\"316\":1}}],[\"api治理等功能\",{\"1\":{\"311\":1}}],[\"api文档与\",{\"1\":{\"311\":1}}],[\"api注册\",{\"1\":{\"311\":1}}],[\"api网关\",{\"1\":{\"311\":1}}],[\"api\",{\"0\":{\"284\":1,\"517\":1,\"653\":1,\"654\":1,\"655\":1,\"657\":1,\"688\":1,\"695\":1},\"1\":{\"4\":2,\"54\":1,\"74\":1,\"79\":3,\"81\":4,\"82\":2,\"83\":4,\"84\":3,\"85\":3,\"87\":2,\"88\":5,\"89\":6,\"90\":6,\"93\":1,\"131\":1,\"145\":1,\"208\":2,\"276\":1,\"283\":1,\"284\":1,\"313\":1,\"314\":4,\"315\":4,\"316\":2,\"356\":1,\"370\":4,\"372\":2,\"373\":1,\"374\":9,\"385\":4,\"387\":2,\"388\":1,\"389\":9,\"395\":1,\"397\":4,\"402\":1,\"431\":1,\"445\":1,\"449\":1,\"458\":1,\"459\":1,\"469\":4,\"487\":1,\"488\":1,\"517\":3,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"608\":1,\"609\":1,\"624\":2,\"651\":10,\"652\":1,\"653\":1,\"654\":1,\"656\":1,\"663\":8,\"664\":3,\"667\":9,\"675\":8,\"683\":9,\"686\":1,\"688\":1,\"692\":9,\"693\":2,\"696\":1,\"702\":1,\"727\":9,\"763\":1}}],[\"支持国际上多种码制\",{\"1\":{\"827\":1}}],[\"支持国家\",{\"1\":{\"567\":1}}],[\"支持上传\",{\"1\":{\"826\":1,\"827\":1}}],[\"支持条纹背景多种样式填充\",{\"1\":{\"824\":1}}],[\"支持修改条纹颜色及随机条纹样式\",{\"1\":{\"824\":1}}],[\"支持修改参数生成及随机生成和自定义生成模式\",{\"1\":{\"824\":1}}],[\"支持修改数据存储目录\",{\"1\":{\"644\":1}}],[\"支持网格背景多种样式填充\",{\"1\":{\"824\":1}}],[\"支持网关热加载插件\",{\"1\":{\"313\":1}}],[\"支持线性渐变及经向渐变\",{\"1\":{\"824\":1}}],[\"支持渐变背景多种样式填充\",{\"1\":{\"824\":1}}],[\"支持缩略图\",{\"1\":{\"823\":1}}],[\"支持导出\",{\"1\":{\"820\":1}}],[\"支持文字添加横向和纵向\",{\"1\":{\"825\":1}}],[\"支持文字\",{\"1\":{\"820\":1}}],[\"支持黑白名单\",{\"1\":{\"787\":1}}],[\"支持接入\",{\"1\":{\"787\":1}}],[\"支持接口类配置\",{\"1\":{\"769\":1}}],[\"支持接口化处理\",{\"0\":{\"763\":1},\"1\":{\"754\":1}}],[\"支持正则表达式的匹配\",{\"1\":{\"780\":1}}],[\"支持包括\",{\"1\":{\"774\":1}}],[\"支持短信拦截\",{\"1\":{\"769\":1}}],[\"支持短信失败重试\",{\"1\":{\"769\":1}}],[\"支持邮箱监听\",{\"1\":{\"769\":1}}],[\"支持邮件发送失败自动重试\",{\"1\":{\"769\":1}}],[\"支持邮件发送\",{\"1\":{\"769\":1}}],[\"支持默认负载均衡形式\",{\"1\":{\"769\":1}}],[\"支持自定义选择画布尺寸\",{\"1\":{\"824\":1}}],[\"支持自定义缓存来源\",{\"1\":{\"769\":1}}],[\"支持自动域名\",{\"0\":{\"662\":1}}],[\"支持单厂商多配置使用\",{\"1\":{\"769\":1}}],[\"支持单机\",{\"1\":{\"608\":1}}],[\"支持返回\",{\"1\":{\"722\":1}}],[\"支持所有的配置中心\",{\"1\":{\"716\":1}}],[\"支持本地与注册中心模式\",{\"1\":{\"709\":1}}],[\"支持本地虚拟域名调试\",{\"1\":{\"617\":1}}],[\"支持同步与异步\",{\"1\":{\"708\":1}}],[\"支持模块\",{\"1\":{\"707\":2}}],[\"支持模式少\",{\"1\":{\"608\":1}}],[\"支持各种主流的配置中心\",{\"1\":{\"707\":1}}],[\"支持分布式场景下\",{\"1\":{\"706\":1}}],[\"支持变量\",{\"0\":{\"674\":1}}],[\"支持字段行拷贝\",{\"1\":{\"671\":1}}],[\"支持字段与索引一对多映射关系\",{\"0\":{\"45\":1}}],[\"支持字段与索引一对多映射关系课题任务门槛不会太高的哦\",{\"1\":{\"38\":1}}],[\"支持module\",{\"1\":{\"669\":1}}],[\"支持搜索\",{\"1\":{\"663\":1}}],[\"支持特定分支\",{\"1\":{\"657\":1}}],[\"支持团队协作\",{\"0\":{\"650\":1}}],[\"支持传参\",{\"1\":{\"644\":1}}],[\"支持设置超时时间\",{\"1\":{\"631\":1}}],[\"支持事务管理\",{\"1\":{\"628\":1}}],[\"支持市面上大部分三方登录\",{\"1\":{\"615\":1}}],[\"支持大部分注解内容国际化\",{\"1\":{\"608\":1}}],[\"支持大部分新功能特性\",{\"1\":{\"608\":1}}],[\"支持权限管理\",{\"1\":{\"608\":1}}],[\"支持数据压缩和优化技术\",{\"1\":{\"803\":1}}],[\"支持数据量有限\",{\"1\":{\"608\":1}}],[\"支持数据采集\",{\"1\":{\"331\":1}}],[\"支持性差\",{\"1\":{\"608\":1}}],[\"支持世面大部分数据库\",{\"1\":{\"608\":1}}],[\"支持前端多排序\",{\"1\":{\"608\":1}}],[\"支持注解与工具类校验\",{\"1\":{\"608\":1}}],[\"支持注解\",{\"1\":{\"608\":1}}],[\"支持简单\",{\"1\":{\"604\":1}}],[\"支持代理\",{\"1\":{\"577\":1}}],[\"支持绑定子域名\",{\"1\":{\"577\":1}}],[\"支持用户快速的进行插件的自定义开发\",{\"1\":{\"783\":1}}],[\"支持用户\",{\"1\":{\"577\":1}}],[\"支持配置文件\",{\"1\":{\"574\":1}}],[\"支持配置文件指定重连间隔\",{\"1\":{\"574\":1}}],[\"支持集团下多企业独立管理或企业下不同部门数据隔离的\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"支持集群部署的问题\",{\"0\":{\"63\":1}}],[\"支持chain的继承关系特性\",{\"1\":{\"522\":1}}],[\"支持绝对路径的模糊匹配\",{\"0\":{\"520\":1},\"1\":{\"522\":1}}],[\"支持把规则和脚本存入任意的关系型数据库\",{\"1\":{\"515\":1}}],[\"支持java脚本的书写\",{\"1\":{\"509\":1}}],[\"支持丰富的存储插件\",{\"1\":{\"503\":1}}],[\"支持丰富的第三方存储的支持\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"支持将\",{\"1\":{\"483\":1}}],[\"支持不同模块不同的脱敏条件\",{\"1\":{\"608\":1}}],[\"支持不同告警项配置不同接受人\",{\"1\":{\"420\":1}}],[\"支持不支持\",{\"1\":{\"482\":1}}],[\"支持了所有的\",{\"1\":{\"517\":1}}],[\"支持了\",{\"0\":{\"503\":1}}],[\"支持了原生\",{\"1\":{\"502\":1}}],[\"支持了自定义的\",{\"1\":{\"474\":1}}],[\"支持了采集器集群的\",{\"1\":{\"460\":1}}],[\"支持和赞助\",{\"0\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"支持和帮助\",{\"1\":{\"335\":1}}],[\"支持采集器集群管理\",{\"1\":{\"462\":1}}],[\"支持部署边缘采集器集群\",{\"1\":{\"455\":1}}],[\"支持部署采集器集群\",{\"1\":{\"454\":1}}],[\"支持标签分组展示\",{\"1\":{\"448\":1}}],[\"支持告警收敛\",{\"1\":{\"448\":1}}],[\"支持告警静默功能\",{\"1\":{\"442\":1}}],[\"支持告警静默\",{\"1\":{\"55\":1}}],[\"支持一次性时间段和周期性时间静默\",{\"1\":{\"442\":1}}],[\"支持一下\",{\"1\":{\"308\":1,\"336\":1,\"340\":1,\"766\":1}}],[\"支持时序数据库\",{\"1\":{\"442\":1}}],[\"支持时间\",{\"1\":{\"79\":1}}],[\"支持更自由化的阈值规则\",{\"1\":{\"441\":1,\"447\":1}}],[\"支持通知告警\",{\"1\":{\"411\":1}}],[\"支持通过\",{\"1\":{\"409\":1,\"419\":1}}],[\"支持的存储平台\",{\"1\":{\"808\":1}}],[\"支持的\",{\"1\":{\"709\":1}}],[\"支持的所有方法和操作\",{\"1\":{\"373\":1,\"388\":1}}],[\"支持的多实例自动注入能力\",{\"1\":{\"217\":1}}],[\"支持基于自定义证书的\",{\"1\":{\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"支持智能电视\",{\"1\":{\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"支持iot设备的device\",{\"0\":{\"358\":1}}],[\"支持手机短信验证码\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"支持密码模式\",{\"1\":{\"356\":1}}],[\"支持指定私钥\",{\"1\":{\"331\":1}}],[\"支持实时计算\",{\"1\":{\"331\":1}}],[\"支持多端\",{\"1\":{\"616\":1,\"617\":1}}],[\"支持多数据源不同种类的数据库事务回滚\",{\"1\":{\"608\":1}}],[\"支持多用户\",{\"1\":{\"577\":1}}],[\"支持多达\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"支持多隔离网络监控\",{\"1\":{\"452\":1,\"464\":1}}],[\"支持多采集器集群横向扩展\",{\"1\":{\"452\":1,\"464\":1}}],[\"支持多种颜色的蒙版和自定义样式的滤镜\",{\"1\":{\"826\":1}}],[\"支持多种事务模式以及混合使用\",{\"1\":{\"713\":1}}],[\"支持多种模式\",{\"1\":{\"608\":1}}],[\"支持多种策略\",{\"1\":{\"608\":2}}],[\"支持多种自定义\",{\"1\":{\"608\":1}}],[\"支持多种方式传参\",{\"1\":{\"608\":1}}],[\"支持多种数据库\",{\"1\":{\"374\":1,\"389\":1}}],[\"支持多种验证码类型\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"支持多客户端注册\",{\"1\":{\"315\":1}}],[\"支持多个表达式和\",{\"1\":{\"85\":1}}],[\"支持校验\",{\"1\":{\"315\":1}}],[\"支持nacos\",{\"1\":{\"314\":1}}],[\"支持apollo\",{\"1\":{\"314\":1}}],[\"支持zookeeper客户端自动下线\",{\"1\":{\"314\":1}}],[\"支持共享线程池\",{\"1\":{\"314\":1}}],[\"支持使用\",{\"1\":{\"313\":1}}],[\"支持使用关键字\",{\"1\":{\"86\":1}}],[\"支持插件上传功能\",{\"1\":{\"313\":1}}],[\"支持支持\",{\"1\":{\"308\":3}}],[\"支持喵大人\",{\"1\":{\"308\":2}}],[\"支持下\",{\"1\":{\"308\":1}}],[\"支持猫大人的开源\",{\"1\":{\"308\":1}}],[\"支持猫大人\",{\"1\":{\"308\":6}}],[\"支持开源\",{\"1\":{\"308\":5}}],[\"支持在判断对象类型时\",{\"1\":{\"88\":1}}],[\"支持在启动时指定内存大小\",{\"1\":{\"87\":1}}],[\"支持在\",{\"1\":{\"86\":1,\"87\":1,\"88\":1,\"89\":2}}],[\"支持并行处理引用操作\",{\"1\":{\"85\":1}}],[\"支持内嵌事务的依赖传递\",{\"1\":{\"65\":1}}],[\"支持其他开发者一键部署使用开源组件\",{\"1\":{\"57\":1}}],[\"支持对应用服务\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"452\":1,\"464\":1}}],[\"支持\",{\"0\":{\"9\":1,\"308\":1,\"363\":1,\"377\":1,\"392\":1,\"483\":1,\"656\":1},\"1\":{\"64\":1,\"114\":1,\"308\":2,\"313\":2,\"314\":5,\"315\":1,\"331\":4,\"357\":6,\"364\":5,\"374\":1,\"378\":5,\"389\":1,\"393\":5,\"400\":5,\"411\":1,\"420\":3,\"429\":1,\"438\":1,\"442\":2,\"448\":1,\"461\":1,\"525\":1,\"526\":5,\"531\":1,\"532\":5,\"537\":1,\"538\":5,\"543\":1,\"544\":5,\"547\":3,\"553\":1,\"554\":6,\"563\":1,\"564\":6,\"574\":1,\"577\":1,\"608\":8,\"609\":35,\"616\":1,\"631\":1,\"644\":1,\"651\":1,\"706\":3,\"713\":3,\"718\":1,\"722\":1,\"723\":1,\"724\":1,\"727\":1,\"787\":3,\"790\":1,\"801\":1,\"816\":1}}],[\"赞助日期\",{\"1\":{\"308\":1}}],[\"赞助金额\",{\"1\":{\"308\":1}}],[\"赞助商\",{\"1\":{\"308\":1}}],[\"赞助任何事情\",{\"1\":{\"308\":1}}],[\"赞助\",{\"0\":{\"9\":1,\"308\":1}}],[\"运行报表\",{\"1\":{\"609\":1}}],[\"运行环境\",{\"1\":{\"583\":1,\"585\":1}}],[\"运行监控\",{\"1\":{\"409\":2,\"418\":1,\"419\":1}}],[\"运行期流量调度\",{\"1\":{\"277\":1}}],[\"运行启动类\",{\"1\":{\"100\":1}}],[\"运算符\",{\"1\":{\"89\":1}}],[\"运维都省了\",{\"1\":{\"791\":1}}],[\"运维监控\",{\"1\":{\"37\":1}}],[\"运维相关工具链等领域项目\",{\"1\":{\"8\":1,\"299\":1}}],[\"运营不做任何干涉\",{\"1\":{\"7\":1}}],[\"测试发送固定模板短信\",{\"1\":{\"740\":1}}],[\"测试签名\",{\"1\":{\"740\":1}}],[\"测试平台从\",{\"1\":{\"633\":1}}],[\"测试用例我们是认真的\",{\"1\":{\"514\":1}}],[\"测试用例增加到\",{\"0\":{\"507\":1}}],[\"测试用例全面更新为junit5\",{\"1\":{\"492\":1}}],[\"测试用例是\",{\"1\":{\"484\":1}}],[\"测试用例\",{\"1\":{\"314\":4,\"316\":1,\"497\":1,\"513\":1}}],[\"测试主机是否可连接\",{\"1\":{\"228\":1}}],[\"测试主机是否可连通\",{\"1\":{\"228\":1}}],[\"测试主机是否可达\",{\"1\":{\"228\":3}}],[\"测试网关路由\",{\"0\":{\"117\":1}}],[\"测试网关转发\",{\"0\":{\"105\":1}}],[\"测试负载均衡\",{\"0\":{\"108\":1,\"118\":1}}],[\"测试\",{\"0\":{\"102\":1,\"104\":1,\"107\":1},\"1\":{\"8\":1,\"228\":1,\"299\":1,\"314\":1,\"315\":1}}],[\"开放文档查看页面\",{\"1\":{\"836\":1}}],[\"开放平台\",{\"0\":{\"784\":1},\"1\":{\"791\":1}}],[\"开放准则\",{\"1\":{\"715\":1}}],[\"开放元数据的分析\",{\"1\":{\"469\":1}}],[\"开放自定义语法的扩展\",{\"1\":{\"469\":1}}],[\"开放协作方式\",{\"1\":{\"15\":1}}],[\"开关状态支持动态变更\",{\"1\":{\"783\":1}}],[\"开关\",{\"1\":{\"397\":1}}],[\"开箱即用的连接器\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"开箱即用\",{\"1\":{\"370\":1,\"385\":1}}],[\"开箱即用为用户提供整套全生命周期的\",{\"1\":{\"311\":1}}],[\"开\",{\"1\":{\"265\":1}}],[\"开头自身转发\",{\"1\":{\"259\":1}}],[\"开头的转发到网关自身\",{\"1\":{\"253\":1}}],[\"开启熔断组件\",{\"1\":{\"273\":1}}],[\"开启熔断的最小请求数\",{\"1\":{\"270\":1}}],[\"开启熔断配置\",{\"1\":{\"265\":1}}],[\"开启\",{\"1\":{\"270\":1,\"606\":1}}],[\"开启或关闭\",{\"1\":{\"160\":1}}],[\"开启了一个\",{\"1\":{\"158\":1}}],[\"开启循环调用轮询方法\",{\"1\":{\"149\":1}}],[\"开启同步阻塞请求\",{\"1\":{\"144\":1}}],[\"开始上传\",{\"0\":{\"816\":1}}],[\"开始写开源项目的\",{\"1\":{\"792\":1}}],[\"开始公测\",{\"1\":{\"612\":1}}],[\"开始着手开发\",{\"1\":{\"612\":1}}],[\"开始就喜欢上了\",{\"1\":{\"308\":1}}],[\"开始时间怀疑与监控插件和统计指标模块有联用\",{\"1\":{\"232\":1}}],[\"开始支持的\",{\"1\":{\"220\":1}}],[\"开始异步http调用下游服务\",{\"1\":{\"136\":1}}],[\"开始\",{\"0\":{\"166\":1},\"1\":{\"135\":1,\"167\":1,\"612\":1}}],[\"开始先打个小小的广告\",{\"1\":{\"60\":1}}],[\"开场介绍梦码分享流程\",{\"1\":{\"33\":1}}],[\"开场介绍近期梦码分享情况\",{\"1\":{\"30\":1}}],[\"开源大门永远向所有人敞开\",{\"1\":{\"805\":1}}],[\"开源地址\",{\"0\":{\"804\":1}}],[\"开源iam产品\",{\"0\":{\"524\":1,\"530\":1,\"536\":1}}],[\"开源一个项目并坚持\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"开源将近\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"开源商业化的前提是得有个真正好的\",{\"1\":{\"456\":1}}],[\"开源的产品可以吸引到顶级贡献者一起贡献\",{\"1\":{\"456\":1}}],[\"开源的产品天生容易获取用户的信任和使用耐心\",{\"1\":{\"456\":1}}],[\"开源团队什么都应该无私奉献出来\",{\"1\":{\"456\":1}}],[\"开源是噱头\",{\"1\":{\"456\":1}}],[\"开源是开发者生态中不可或缺的环节\",{\"1\":{\"16\":1}}],[\"开源实时监控\",{\"0\":{\"439\":1,\"446\":1,\"460\":1}}],[\"开源实时监控工具\",{\"0\":{\"440\":1},\"1\":{\"52\":1}}],[\"开源协议\",{\"1\":{\"336\":1,\"340\":1}}],[\"开源万岁\",{\"1\":{\"308\":1}}],[\"开源无敌\",{\"1\":{\"308\":1}}],[\"开源冲\",{\"1\":{\"308\":1}}],[\"开源就是人人为我\",{\"1\":{\"308\":1}}],[\"开源\",{\"1\":{\"57\":1,\"336\":1,\"340\":1,\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1,\"636\":1,\"643\":1}}],[\"开源应用和开源组件与华为云对象存储\",{\"1\":{\"57\":1}}],[\"开源应用构建和开源生态组件构建这三大重点场景\",{\"1\":{\"57\":1}}],[\"开源活动\",{\"1\":{\"57\":1}}],[\"开源项目\",{\"1\":{\"794\":1}}],[\"开源项目重写\",{\"1\":{\"608\":1}}],[\"开源项目免费提供给用户和开发者\",{\"1\":{\"456\":1}}],[\"开源项目离不开小伙伴协助\",{\"0\":{\"56\":1}}],[\"开源项目介绍和与华为云的结合\",{\"1\":{\"18\":1}}],[\"开源之夏和\",{\"1\":{\"461\":1}}],[\"开源之夏是由中科院软件所开源软件供应链点亮计划发起并长期支持的一项暑期开源活动\",{\"1\":{\"35\":1}}],[\"开源之夏\",{\"0\":{\"35\":1},\"1\":{\"36\":1,\"50\":1,\"469\":1}}],[\"开源之夏学生招募中\",{\"0\":{\"34\":1}}],[\"开源演讲\",{\"1\":{\"18\":1}}],[\"开源个人和开源高校的之间的交流认知\",{\"1\":{\"17\":1}}],[\"开源组织成员\",{\"1\":{\"404\":1,\"806\":1,\"820\":1}}],[\"开源组织从\",{\"1\":{\"306\":1}}],[\"开源组织负责人或者秘书\",{\"1\":{\"304\":1}}],[\"开源组织官网设计开发\",{\"0\":{\"39\":1},\"1\":{\"38\":1}}],[\"开源组织\",{\"1\":{\"17\":1,\"807\":1}}],[\"开源生态合作圆桌讨论会\",{\"1\":{\"17\":1}}],[\"开源业务全景图\",{\"1\":{\"16\":1}}],[\"开源理念\",{\"1\":{\"15\":1}}],[\"开源市集\",{\"1\":{\"15\":1}}],[\"开源市集等形式来诠释此次大会主题\",{\"1\":{\"15\":1}}],[\"开源中国等企业的全球开源重磅嘉宾出席\",{\"1\":{\"15\":1}}],[\"开源教育培训\",{\"1\":{\"15\":1}}],[\"开源社区之际\",{\"1\":{\"352\":1}}],[\"开源社区成员对\",{\"1\":{\"330\":1}}],[\"开源社区公众号\",{\"1\":{\"304\":1}}],[\"开源社区的发展也将会对\",{\"1\":{\"91\":1}}],[\"开源社区的发展\",{\"1\":{\"91\":1}}],[\"开源社区目前拥有\",{\"1\":{\"37\":1}}],[\"开源社区\",{\"0\":{\"807\":1},\"1\":{\"18\":1,\"604\":1,\"627\":1,\"809\":1}}],[\"开源社区也作为开源社区组织加入其中\",{\"1\":{\"16\":1}}],[\"开源社区加入\",{\"1\":{\"16\":1}}],[\"开源社区将出席本次大会\",{\"1\":{\"15\":1}}],[\"开源社区组织对捐赠项目有以下最基本条件要求\",{\"1\":{\"8\":1,\"299\":1}}],[\"开源社区官方网站\",{\"1\":{\"3\":1}}],[\"开发人员写了\",{\"1\":{\"784\":1,\"791\":1}}],[\"开发人员在使用时无需再通过翻阅\",{\"1\":{\"372\":1,\"387\":1}}],[\"开发体验\",{\"1\":{\"644\":1}}],[\"开发团队\",{\"1\":{\"634\":1,\"635\":1}}],[\"开发历程\",{\"0\":{\"612\":1}}],[\"开发难度低\",{\"1\":{\"608\":1}}],[\"开发环境下\",{\"1\":{\"598\":1}}],[\"开发更加简洁\",{\"1\":{\"547\":1}}],[\"开发和包容更多常用组件\",{\"1\":{\"367\":1,\"382\":1}}],[\"开发了全新的\",{\"1\":{\"358\":1}}],[\"开发了基于\",{\"1\":{\"353\":1}}],[\"开发的响应式api\",{\"1\":{\"311\":1}}],[\"开发小王\",{\"1\":{\"308\":1}}],[\"开发者可以通过在数据库添加配置来替代配置文件\",{\"1\":{\"741\":1}}],[\"开发者不需要关心\",{\"1\":{\"710\":1}}],[\"开发者需要自行处理修改下标\",{\"1\":{\"671\":1}}],[\"开发者只需要修改域名值即可\",{\"1\":{\"664\":1}}],[\"开发者只要会\",{\"1\":{\"370\":1,\"385\":1}}],[\"开发者提供更多的新特性和改进\",{\"1\":{\"91\":1}}],[\"开发者提供了更多的选择和工具\",{\"1\":{\"90\":1}}],[\"开发者应追逐新的技术发展\",{\"1\":{\"78\":1}}],[\"开发者将开源软件工具\",{\"1\":{\"57\":1}}],[\"开发\",{\"1\":{\"8\":1,\"299\":1}}],[\"物联网爱好者\",{\"1\":{\"806\":1}}],[\"物联网设备运营商可以更轻松地进行设备调试和管理\",{\"1\":{\"794\":1}}],[\"物联网设备的调试和管理是确保设备正常运行和提供稳定服务的关键环节\",{\"1\":{\"794\":1}}],[\"物联网设备调试系统\",{\"0\":{\"793\":1}}],[\"物联网\",{\"1\":{\"8\":1,\"299\":1}}],[\"i4zsgj\",{\"1\":{\"724\":1}}],[\"i4zbn0\",{\"1\":{\"724\":1}}],[\"i4z7bv\",{\"1\":{\"724\":1}}],[\"i4zkcw\",{\"1\":{\"723\":1}}],[\"i4wpf4\",{\"1\":{\"724\":1}}],[\"i4wuwr\",{\"1\":{\"723\":1,\"724\":1}}],[\"i4wh2x\",{\"1\":{\"723\":1}}],[\"i4w5fs\",{\"1\":{\"723\":1}}],[\"i4w427\",{\"1\":{\"723\":1}}],[\"iwc\",{\"1\":{\"547\":1}}],[\"iwangjie\",{\"1\":{\"317\":1}}],[\"i85qpe\",{\"1\":{\"835\":1}}],[\"i85u4i\",{\"1\":{\"567\":1}}],[\"i855ym\",{\"1\":{\"522\":2}}],[\"i8651r新建了应用\",{\"1\":{\"567\":1}}],[\"i83buj4\",{\"1\":{\"567\":1}}],[\"i844ny消除session与authentication来回嵌套\",{\"1\":{\"567\":1}}],[\"i82m4g\",{\"1\":{\"522\":2}}],[\"i821f1\",{\"1\":{\"522\":2}}],[\"i883lb\",{\"1\":{\"522\":2}}],[\"i878wv\",{\"1\":{\"522\":2}}],[\"i590jt\",{\"1\":{\"509\":2}}],[\"i6xpn4\",{\"1\":{\"468\":2}}],[\"i6mlmd\",{\"1\":{\"438\":1}}],[\"i76sv6\",{\"1\":{\"535\":1}}],[\"i7zmvm\",{\"1\":{\"522\":2}}],[\"i7zjrh\",{\"1\":{\"522\":2}}],[\"i7g6bb\",{\"1\":{\"522\":2}}],[\"i7gmts\",{\"1\":{\"492\":2}}],[\"i7yylf\",{\"1\":{\"522\":2}}],[\"i7y0y1\",{\"1\":{\"522\":2}}],[\"i7svzf\",{\"1\":{\"522\":2}}],[\"i7xaib\",{\"1\":{\"522\":2}}],[\"i7tys3\",{\"1\":{\"509\":2}}],[\"i7t53a\",{\"1\":{\"509\":2}}],[\"i7wnda\",{\"1\":{\"509\":2}}],[\"i7q4bn\",{\"1\":{\"509\":2}}],[\"i7q8bx\",{\"1\":{\"509\":2}}],[\"i7qc8v\",{\"1\":{\"509\":2}}],[\"i7qlts\",{\"1\":{\"438\":1}}],[\"i7i3ll\",{\"1\":{\"509\":2}}],[\"i7v6vb\",{\"1\":{\"509\":2}}],[\"i7hjfx\",{\"1\":{\"509\":2}}],[\"i7htr4\",{\"1\":{\"492\":2}}],[\"i7hpan\",{\"1\":{\"492\":2}}],[\"i7lc07\",{\"1\":{\"541\":1}}],[\"i7l5dx\",{\"1\":{\"492\":2}}],[\"i7lgzr\",{\"1\":{\"492\":2}}],[\"i7jhvq\",{\"1\":{\"598\":1}}],[\"i7jo5a\",{\"1\":{\"596\":1}}],[\"i7jl3s\",{\"1\":{\"598\":1}}],[\"i7jlez\",{\"1\":{\"596\":1}}],[\"i7jlc9\",{\"1\":{\"596\":1}}],[\"i7jl8b\",{\"1\":{\"596\":1}}],[\"i7j1vj\",{\"1\":{\"492\":2}}],[\"i7jz4d\",{\"1\":{\"492\":2}}],[\"i7j59v\",{\"1\":{\"492\":2}}],[\"i7kp8t\",{\"1\":{\"598\":1}}],[\"i7kzwl\",{\"1\":{\"598\":1}}],[\"i7kzcz\",{\"1\":{\"492\":2}}],[\"i7kf0n\",{\"1\":{\"598\":1}}],[\"i7kmsj\",{\"1\":{\"541\":1}}],[\"i7k3t1\",{\"1\":{\"492\":2}}],[\"i7khe5\",{\"1\":{\"492\":2}}],[\"i7kopv\",{\"1\":{\"492\":2}}],[\"i7ky2n\",{\"1\":{\"492\":2}}],[\"i7kr2f\",{\"1\":{\"492\":2}}],[\"i7epyo\",{\"1\":{\"541\":1}}],[\"i7e8rn\",{\"1\":{\"476\":2}}],[\"i7ekp3\",{\"1\":{\"476\":2}}],[\"i7eks8\",{\"1\":{\"476\":2}}],[\"i7f567\",{\"1\":{\"476\":2}}],[\"i7f3f0\",{\"1\":{\"438\":1}}],[\"i7cox4\",{\"1\":{\"468\":2}}],[\"i7ccab\",{\"1\":{\"468\":2}}],[\"i7c6vr\",{\"1\":{\"468\":2}}],[\"i7upbr\",{\"1\":{\"438\":1}}],[\"i7do83\",{\"1\":{\"397\":1}}],[\"icmparoundaspect\",{\"1\":{\"488\":2}}],[\"iceberg\",{\"1\":{\"331\":2}}],[\"icon\",{\"1\":{\"314\":1}}],[\"ibm\",{\"1\":{\"808\":1}}],[\"ibinlogclient\",{\"1\":{\"324\":1}}],[\"ibinlogeventhandler<user>\",{\"1\":{\"325\":1,\"327\":1,\"328\":1}}],[\"ibinlogeventhandler\",{\"1\":{\"324\":2,\"327\":1,\"328\":1}}],[\"ibrahim\",{\"1\":{\"15\":1}}],[\"ileonli\",{\"1\":{\"317\":1}}],[\"illegalargumentexception\",{\"1\":{\"183\":1}}],[\"illegalaccessexception\",{\"1\":{\"126\":1,\"183\":1}}],[\"illegalstateexception\",{\"1\":{\"141\":1,\"155\":1,\"157\":1,\"183\":1,\"200\":1,\"209\":1,\"249\":1}}],[\"i18n\",{\"1\":{\"314\":1,\"442\":1,\"461\":1}}],[\"ian\",{\"1\":{\"308\":1}}],[\"iam\",{\"1\":{\"4\":1,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"ignore\",{\"1\":{\"458\":1}}],[\"ignored\",{\"1\":{\"228\":1}}],[\"ignoreexceptionhandler\",{\"1\":{\"66\":2}}],[\"izkdatalistener\",{\"1\":{\"206\":1}}],[\"i0itec\",{\"1\":{\"199\":5,\"200\":1}}],[\"imap\",{\"1\":{\"775\":1}}],[\"image\",{\"1\":{\"162\":1,\"166\":4,\"167\":2,\"170\":1,\"176\":1,\"179\":1,\"192\":1,\"213\":1,\"219\":3,\"220\":3,\"234\":1,\"278\":1,\"281\":1,\"286\":2,\"291\":1,\"816\":2,\"817\":6}}],[\"immutablepair<>\",{\"1\":{\"289\":1}}],[\"img\",{\"1\":{\"215\":1,\"816\":2,\"820\":1}}],[\"implb\",{\"1\":{\"518\":1}}],[\"impla\",{\"1\":{\"518\":1}}],[\"implementation\",{\"1\":{\"174\":1}}],[\"implements\",{\"1\":{\"66\":1,\"67\":1,\"130\":2,\"136\":1,\"141\":2,\"142\":2,\"144\":4,\"148\":1,\"155\":1,\"157\":1,\"162\":2,\"166\":2,\"167\":3,\"170\":1,\"171\":1,\"200\":3,\"205\":1,\"266\":2,\"293\":1,\"294\":1,\"327\":1,\"328\":1,\"488\":2,\"709\":2,\"773\":1,\"783\":1}}],[\"import\",{\"1\":{\"66\":21,\"67\":13,\"71\":10,\"74\":2,\"156\":2,\"200\":1,\"397\":1}}],[\"iphost\",{\"1\":{\"783\":1}}],[\"ip+9101\",{\"1\":{\"586\":1}}],[\"ip地址转换\",{\"1\":{\"567\":1}}],[\"ip2region\",{\"1\":{\"554\":1,\"564\":1,\"567\":1,\"605\":1}}],[\"ipv6\",{\"1\":{\"448\":1}}],[\"ip=127\",{\"1\":{\"457\":2}}],[\"ip=\",{\"1\":{\"144\":1}}],[\"ip\",{\"1\":{\"101\":1,\"114\":1,\"131\":1,\"133\":4,\"134\":1,\"135\":1,\"144\":1,\"164\":3,\"219\":2,\"224\":3,\"225\":1,\"228\":5,\"229\":5,\"235\":2,\"316\":1,\"333\":1,\"340\":1,\"457\":1,\"465\":1,\"554\":1,\"564\":1,\"585\":1,\"605\":1,\"637\":1}}],[\"ipmi\",{\"1\":{\"54\":1}}],[\"idletimeout\",{\"1\":{\"709\":1}}],[\"idm\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"idaas\",{\"1\":{\"525\":1,\"526\":1,\"531\":1,\"532\":1,\"537\":1,\"538\":1,\"543\":1,\"544\":1,\"553\":1,\"554\":1,\"563\":1,\"564\":1}}],[\"id`\",{\"1\":{\"406\":1}}],[\"identity=custom\",{\"1\":{\"457\":2,\"465\":2}}],[\"ide\",{\"1\":{\"383\":1,\"397\":1,\"624\":1}}],[\"idea\",{\"0\":{\"97\":1,\"674\":1,\"682\":1},\"1\":{\"118\":1,\"397\":1,\"598\":1,\"616\":1,\"651\":3,\"660\":1,\"663\":2,\"667\":2,\"675\":2,\"683\":2,\"688\":1,\"692\":2}}],[\"idtoken\",{\"1\":{\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"id\",{\"0\":{\"250\":1},\"1\":{\"126\":2,\"153\":5,\"186\":2,\"209\":4,\"210\":1,\"225\":2,\"249\":2,\"250\":1,\"251\":1,\"278\":1,\"315\":1,\"474\":4,\"516\":1,\"608\":3,\"617\":1,\"624\":1,\"740\":1,\"759\":2,\"772\":3,\"783\":2}}],[\"id=4219382\",{\"1\":{\"610\":1}}],[\"id=4164117\",{\"1\":{\"610\":1}}],[\"id=5473272\",{\"1\":{\"610\":1}}],[\"id=1469725\",{\"1\":{\"610\":3}}],[\"id=1\",{\"1\":{\"117\":2}}],[\"id=\",{\"1\":{\"64\":1,\"74\":1,\"285\":1,\"518\":5,\"519\":1,\"702\":1}}],[\"iterutil\",{\"1\":{\"724\":1}}],[\"iterable<s>\",{\"1\":{\"167\":2}}],[\"iterator<driver>\",{\"1\":{\"170\":1}}],[\"iterator<s>\",{\"1\":{\"167\":1}}],[\"iterator<longpollingclient>\",{\"1\":{\"144\":1}}],[\"iterator\",{\"1\":{\"144\":1,\"170\":1,\"505\":1}}],[\"iter\",{\"1\":{\"144\":4}}],[\"item\",{\"1\":{\"135\":2}}],[\"it\",{\"1\":{\"74\":2,\"144\":1,\"396\":1,\"581\":1,\"582\":1}}],[\"ifpresent\",{\"1\":{\"70\":1,\"130\":1,\"162\":3,\"206\":2,\"220\":1}}],[\"if\",{\"1\":{\"67\":1,\"70\":1,\"71\":1,\"74\":2,\"92\":1,\"122\":2,\"123\":3,\"124\":7,\"125\":3,\"126\":4,\"129\":10,\"130\":2,\"133\":1,\"134\":3,\"135\":6,\"137\":2,\"141\":1,\"142\":1,\"144\":1,\"148\":6,\"149\":3,\"153\":3,\"158\":4,\"162\":1,\"167\":8,\"170\":1,\"171\":4,\"176\":1,\"181\":1,\"183\":12,\"195\":3,\"200\":1,\"205\":2,\"206\":1,\"219\":2,\"220\":2,\"224\":2,\"226\":1,\"227\":4,\"228\":2,\"229\":2,\"231\":2,\"232\":1,\"234\":6,\"235\":2,\"236\":2,\"237\":2,\"247\":3,\"249\":3,\"252\":3,\"259\":2,\"266\":6,\"272\":1,\"273\":5,\"278\":1,\"286\":1,\"287\":2,\"288\":2,\"289\":4,\"290\":1,\"293\":5,\"294\":8,\"458\":1,\"489\":1}}],[\"i++\",{\"1\":{\"66\":2,\"133\":1,\"134\":1,\"166\":1,\"167\":1,\"294\":2}}],[\"i\",{\"1\":{\"66\":6,\"87\":1,\"88\":1,\"89\":1,\"133\":3,\"134\":5,\"166\":2,\"167\":2,\"234\":1,\"272\":2,\"294\":11}}],[\"isorder\",{\"1\":{\"722\":1}}],[\"isolate=true\",{\"1\":{\"521\":1}}],[\"ischildpooljob\",{\"1\":{\"637\":1}}],[\"ischildjob\",{\"1\":{\"637\":1}}],[\"isencrypted\",{\"1\":{\"637\":1}}],[\"isempty\",{\"1\":{\"92\":1,\"124\":1,\"126\":1,\"129\":2,\"133\":1,\"141\":1,\"148\":1,\"234\":2,\"235\":1,\"236\":1,\"289\":1,\"294\":1}}],[\"ismac\",{\"1\":{\"637\":1}}],[\"ismakinggenericcall\",{\"1\":{\"293\":2}}],[\"isdefaultgenericserialization\",{\"1\":{\"294\":1}}],[\"isdriverallowed\",{\"1\":{\"171\":2}}],[\"isgenericreturnrawresult\",{\"1\":{\"294\":1}}],[\"isgeneric\",{\"1\":{\"293\":1}}],[\"isbeangenericserialization\",{\"1\":{\"293\":1,\"294\":1}}],[\"isblank\",{\"1\":{\"123\":1,\"125\":1,\"153\":1,\"195\":3,\"232\":1,\"259\":1,\"273\":1,\"288\":1,\"294\":1}}],[\"isjavagenericserialization\",{\"1\":{\"293\":1,\"294\":1}}],[\"is2xxsuccessful\",{\"1\":{\"236\":1,\"266\":1,\"273\":1}}],[\"isfull\",{\"1\":{\"234\":1}}],[\"isaac\",{\"1\":{\"308\":1}}],[\"isallowed来判断是否获取令牌成功的\",{\"1\":{\"249\":1}}],[\"isallowed\",{\"1\":{\"249\":3}}],[\"isallupstreamsameweight\",{\"1\":{\"229\":1}}],[\"isassignablefrom\",{\"1\":{\"167\":1,\"294\":1}}],[\"isreachable\",{\"1\":{\"228\":1}}],[\"isregistermetadata\",{\"1\":{\"122\":2}}],[\"ishostreachable\",{\"1\":{\"228\":3}}],[\"ishostconnector\",{\"1\":{\"228\":3}}],[\"isstatus\",{\"1\":{\"227\":1}}],[\"issued\",{\"1\":{\"397\":1}}],[\"issues\",{\"0\":{\"805\":1},\"1\":{\"289\":1,\"313\":1,\"314\":1,\"334\":3,\"468\":4,\"476\":4,\"492\":14,\"509\":10,\"522\":12,\"587\":1,\"762\":1,\"783\":1,\"805\":1}}],[\"issue\",{\"0\":{\"714\":1},\"1\":{\"46\":1,\"57\":1,\"289\":1,\"456\":1,\"468\":1,\"481\":2,\"514\":1,\"720\":2,\"722\":1,\"723\":9,\"724\":9}}],[\"isnotblank\",{\"1\":{\"158\":1,\"183\":3,\"289\":1}}],[\"isnotempty\",{\"1\":{\"71\":1,\"149\":1,\"162\":1,\"205\":1,\"206\":1}}],[\"isnoneblank\",{\"1\":{\"153\":2,\"288\":1}}],[\"isnull\",{\"1\":{\"70\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":2,\"129\":2,\"137\":1,\"234\":2,\"235\":1,\"237\":1,\"247\":2,\"259\":1,\"289\":2,\"290\":1}}],[\"is\",{\"0\":{\"441\":1},\"1\":{\"66\":2,\"67\":1,\"70\":1,\"74\":5,\"93\":1,\"101\":1,\"105\":2,\"108\":12,\"124\":1,\"148\":1,\"158\":2,\"183\":1,\"195\":1,\"208\":3,\"236\":2,\"249\":1,\"288\":1,\"294\":2,\"334\":1,\"458\":2,\"707\":1,\"715\":1,\"741\":1}}],[\"inner\",{\"1\":{\"383\":1,\"458\":1}}],[\"innodb\",{\"1\":{\"278\":1}}],[\"ingress\",{\"1\":{\"313\":2,\"315\":1}}],[\"inetaddress\",{\"1\":{\"228\":1}}],[\"inetsocketaddress\",{\"1\":{\"228\":1}}],[\"includelist\",{\"1\":{\"624\":2}}],[\"include\",{\"1\":{\"313\":1}}],[\"incomplete\",{\"1\":{\"195\":2}}],[\"increasecurrent\",{\"1\":{\"135\":1}}],[\"inputstream\",{\"1\":{\"180\":1,\"183\":3,\"816\":1}}],[\"inverted\",{\"1\":{\"722\":1}}],[\"inv\",{\"1\":{\"294\":14}}],[\"invocation\",{\"1\":{\"286\":3,\"293\":12,\"294\":1}}],[\"invoker\",{\"1\":{\"293\":3,\"294\":6}}],[\"invoker<\",{\"1\":{\"293\":1,\"294\":1}}],[\"invokehandler\",{\"1\":{\"259\":1}}],[\"invokesuper\",{\"1\":{\"208\":1}}],[\"invoke\",{\"1\":{\"156\":4,\"208\":1,\"293\":4,\"294\":3,\"296\":1}}],[\"invalidate\",{\"1\":{\"71\":1,\"289\":1}}],[\"initref\",{\"1\":{\"289\":1}}],[\"initrequestbuilder\",{\"1\":{\"136\":2}}],[\"initstrategies\",{\"1\":{\"259\":1}}],[\"initial\",{\"1\":{\"313\":2}}],[\"initialcapacity\",{\"1\":{\"313\":2}}],[\"initializingbean\",{\"1\":{\"141\":2,\"155\":1,\"156\":1,\"200\":2}}],[\"initializer\",{\"1\":{\"760\":1}}],[\"initialized\",{\"1\":{\"249\":2}}],[\"initialize\",{\"1\":{\"101\":1}}],[\"initiating\",{\"1\":{\"199\":2}}],[\"init\",{\"1\":{\"126\":1,\"200\":4,\"773\":1}}],[\"inf\",{\"1\":{\"167\":1,\"176\":1}}],[\"info\",{\"1\":{\"92\":8,\"101\":6,\"105\":3,\"108\":18,\"129\":2,\"130\":1,\"141\":1,\"144\":1,\"148\":5,\"149\":1,\"158\":1,\"161\":1,\"171\":5,\"199\":16,\"205\":1,\"208\":6,\"210\":1,\"220\":1,\"236\":1,\"249\":1,\"259\":1,\"271\":9,\"272\":1,\"313\":1,\"491\":1,\"741\":1}}],[\"influxdb\",{\"1\":{\"442\":2,\"787\":1}}],[\"influx\",{\"1\":{\"57\":1}}],[\"ins\",{\"1\":{\"313\":1}}],[\"insert\",{\"1\":{\"154\":1,\"282\":3,\"406\":1,\"783\":1}}],[\"insertzknode\",{\"1\":{\"142\":1}}],[\"inserter\",{\"1\":{\"136\":2}}],[\"insertselective\",{\"1\":{\"92\":3,\"124\":2,\"126\":2,\"153\":1}}],[\"inst\",{\"1\":{\"247\":8,\"249\":1}}],[\"instant\",{\"1\":{\"249\":1,\"675\":1}}],[\"instantiation\",{\"1\":{\"208\":1}}],[\"instantiationexception\",{\"1\":{\"126\":1,\"183\":1}}],[\"instantiate\",{\"1\":{\"208\":5}}],[\"instantiated\",{\"1\":{\"167\":1}}],[\"instantiates\",{\"1\":{\"121\":1,\"200\":1,\"205\":1}}],[\"instance\",{\"1\":{\"118\":1,\"153\":1,\"209\":1,\"314\":1,\"624\":1,\"644\":1}}],[\"instanceof\",{\"1\":{\"79\":1,\"86\":3,\"88\":3,\"90\":2,\"236\":1,\"266\":3,\"286\":1,\"289\":1,\"293\":1,\"294\":1}}],[\"install\",{\"1\":{\"98\":1,\"792\":1,\"821\":1}}],[\"instruction\",{\"1\":{\"88\":1}}],[\"in\",{\"1\":{\"70\":1,\"74\":2,\"101\":1,\"109\":2,\"126\":1,\"200\":1,\"205\":1,\"208\":2,\"271\":2,\"313\":4,\"458\":49,\"688\":1}}],[\"index++\",{\"1\":{\"130\":1,\"148\":1,\"220\":1,\"231\":1,\"287\":1}}],[\"index索引自增\",{\"1\":{\"130\":1}}],[\"indexof\",{\"1\":{\"126\":1}}],[\"index\",{\"1\":{\"66\":2,\"130\":1,\"148\":5,\"220\":1,\"231\":1,\"287\":1,\"458\":1,\"617\":1,\"703\":1,\"788\":1}}],[\"indexmultifield注解\",{\"1\":{\"47\":1}}],[\"indexfield注解\",{\"1\":{\"47\":2}}],[\"integer\",{\"1\":{\"226\":1,\"228\":1}}],[\"interval\",{\"1\":{\"271\":1}}],[\"interceptor\",{\"1\":{\"802\":1}}],[\"intercept\",{\"1\":{\"208\":1}}],[\"interface=\",{\"1\":{\"285\":1,\"702\":1}}],[\"interface\",{\"1\":{\"141\":1,\"156\":1,\"165\":5,\"166\":1,\"167\":1,\"286\":2,\"426\":1,\"428\":2,\"430\":4,\"709\":3}}],[\"internal\",{\"1\":{\"137\":1,\"237\":1,\"266\":2,\"272\":1,\"273\":1,\"288\":2}}],[\"intel\",{\"1\":{\"15\":1}}],[\"int\",{\"1\":{\"66\":5,\"67\":1,\"71\":3,\"74\":7,\"92\":2,\"133\":1,\"134\":5,\"135\":2,\"148\":2,\"149\":1,\"166\":1,\"167\":1,\"173\":2,\"228\":1,\"229\":3,\"236\":3,\"266\":1,\"272\":1,\"294\":2,\"430\":1}}],[\"into\",{\"1\":{\"15\":1,\"406\":1}}],[\"ios\",{\"1\":{\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1}}],[\"ioc\",{\"1\":{\"200\":1,\"205\":1}}],[\"ioexception\",{\"1\":{\"158\":2,\"167\":1,\"180\":1,\"183\":1,\"228\":2}}],[\"io\",{\"1\":{\"42\":1,\"44\":1,\"145\":1,\"149\":1,\"168\":1,\"296\":1,\"368\":1,\"409\":1,\"419\":1,\"448\":1,\"457\":2,\"461\":1,\"465\":2,\"661\":1,\"665\":1,\"673\":1,\"788\":2}}],[\"iotdb\",{\"1\":{\"445\":1,\"449\":1,\"459\":1}}],[\"iot\",{\"1\":{\"8\":1,\"91\":1,\"299\":1,\"358\":1,\"359\":1,\"360\":2,\"367\":1,\"379\":1,\"382\":1,\"394\":1,\"396\":1,\"401\":1}}],[\"优雅\",{\"1\":{\"715\":1}}],[\"优先级别\",{\"1\":{\"709\":1}}],[\"优先使用绑定域名打开\",{\"1\":{\"574\":1}}],[\"优先考虑\",{\"1\":{\"8\":1,\"299\":1}}],[\"优点\",{\"0\":{\"370\":1,\"385\":1}}],[\"优化文件上传逻辑\",{\"1\":{\"835\":1}}],[\"优化文件删除逻辑\",{\"1\":{\"809\":1}}],[\"优化阿里云实现的部分代码\",{\"1\":{\"751\":1}}],[\"优化了厂商短信的实现\",{\"1\":{\"751\":1}}],[\"优化了细节\",{\"1\":{\"689\":1}}],[\"优化腾讯云短信实现\",{\"0\":{\"734\":1}}],[\"优化部分细节处理\",{\"1\":{\"727\":1}}],[\"优化部分组件的容器资源控制问题\",{\"1\":{\"331\":1}}],[\"优化初始\",{\"1\":{\"723\":1}}],[\"优化项\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"优化项目结构\",{\"1\":{\"809\":1}}],[\"优化项目\",{\"1\":{\"397\":1}}],[\"优化项目的全局版本\",{\"1\":{\"315\":1}}],[\"优化开发体验\",{\"1\":{\"644\":1}}],[\"优化校验\",{\"1\":{\"624\":1}}],[\"优化过期配置\",{\"1\":{\"616\":1}}],[\"优化固定头部页签滚动条被隐藏的问题\",{\"1\":{\"604\":1}}],[\"优化选择图标组件\",{\"1\":{\"604\":1}}],[\"优化$tab\",{\"1\":{\"604\":1}}],[\"优化弹窗后导航栏偏移的问题\",{\"1\":{\"604\":1}}],[\"优化cas注销\",{\"1\":{\"541\":1}}],[\"优化同步api\",{\"1\":{\"529\":1}}],[\"优化告警功能\",{\"1\":{\"413\":1}}],[\"优化当引入\",{\"1\":{\"413\":1}}],[\"优化对象存储相关\",{\"1\":{\"397\":1}}],[\"优化代码生成\",{\"1\":{\"604\":1}}],[\"优化代码编译配置\",{\"1\":{\"383\":1}}],[\"优化代码和\",{\"1\":{\"315\":1}}],[\"优化基础\",{\"1\":{\"368\":1}}],[\"优化数据库初始化脚本\",{\"1\":{\"360\":1}}],[\"优化数据自动初始化脚本放置位置\",{\"1\":{\"354\":1}}],[\"优化客户端动态自动注册相关功能代码及配置方式\",{\"1\":{\"360\":1}}],[\"优化线程抓取功能的逻辑适配\",{\"1\":{\"342\":1}}],[\"优化任务日志输出\",{\"1\":{\"340\":1}}],[\"优化贡献文档\",{\"1\":{\"340\":1}}],[\"优化监控面板\",{\"1\":{\"331\":1}}],[\"优化组件\",{\"1\":{\"331\":1}}],[\"优化改进\",{\"0\":{\"340\":1},\"1\":{\"331\":1}}],[\"优化语法糖\",{\"1\":{\"315\":1}}],[\"优化shenyuwebhandler的\",{\"1\":{\"315\":1}}],[\"优化shenyuconsulconfigwatch的代码\",{\"1\":{\"315\":1}}],[\"优化插件的热加载\",{\"1\":{\"315\":1}}],[\"优化全局插件的排序\",{\"1\":{\"315\":1}}],[\"优化\",{\"0\":{\"597\":1,\"689\":1,\"751\":1,\"756\":1},\"1\":{\"315\":11,\"316\":1,\"340\":2,\"354\":4,\"360\":2,\"368\":1,\"383\":1,\"397\":7,\"422\":1,\"438\":1,\"604\":11,\"615\":2,\"617\":32,\"624\":7,\"644\":8,\"667\":1,\"683\":1,\"723\":3,\"751\":2,\"787\":1,\"809\":1}}],[\"优化的\",{\"0\":{\"176\":1},\"1\":{\"175\":1}}],[\"优选考虑\",{\"1\":{\"8\":1,\"299\":1}}],[\"官方内置序列化\",{\"1\":{\"608\":1}}],[\"官方内置连接池\",{\"1\":{\"608\":1}}],[\"官方推荐\",{\"1\":{\"608\":1}}],[\"官方\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"608\":1}}],[\"官方网站\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"727\":1}}],[\"官方社群\",{\"1\":{\"306\":1}}],[\"官方人员恢复即可\",{\"1\":{\"305\":1}}],[\"官方人员取消\",{\"1\":{\"8\":1,\"299\":1,\"305\":1}}],[\"官方提供的依赖包\",{\"1\":{\"269\":1}}],[\"官方文档https\",{\"1\":{\"741\":1}}],[\"官方文档\",{\"1\":{\"93\":1,\"761\":1,\"766\":1}}],[\"官方政策变化的影响\",{\"1\":{\"79\":1}}],[\"官网文档\",{\"1\":{\"703\":1,\"782\":1}}],[\"官网提供的\",{\"1\":{\"508\":1}}],[\"官网和仓库地址\",{\"0\":{\"434\":1}}],[\"官网地址\",{\"0\":{\"435\":1},\"1\":{\"342\":1,\"576\":1}}],[\"官网负责人\",{\"1\":{\"302\":1}}],[\"官网的配置介绍\",{\"1\":{\"270\":1}}],[\"官网这一块没有做详细说明\",{\"1\":{\"208\":1}}],[\"官网这一点没有提到\",{\"1\":{\"208\":1}}],[\"官网介绍的\",{\"1\":{\"206\":1}}],[\"官网\",{\"0\":{\"3\":1},\"1\":{\"39\":1,\"311\":1,\"336\":1,\"340\":1,\"414\":1,\"423\":1,\"440\":1,\"447\":1,\"788\":1}}],[\"的缩略图\",{\"1\":{\"816\":1}}],[\"的缩写\",{\"1\":{\"499\":1}}],[\"的流进行上传\",{\"1\":{\"809\":1}}],[\"的工作都省了\",{\"1\":{\"783\":1}}],[\"的工程打包进行深度性能优化\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"的返回值存在异常\",{\"1\":{\"776\":1}}],[\"的邮件\",{\"1\":{\"774\":1}}],[\"的伟大理想\",{\"1\":{\"764\":1}}],[\"的能力\",{\"1\":{\"763\":1}}],[\"的作者对于我们的支持\",{\"1\":{\"746\":1}}],[\"的作用是匹配\",{\"1\":{\"131\":1}}],[\"的男人\",{\"1\":{\"746\":1}}],[\"的地址\",{\"1\":{\"739\":1}}],[\"的变化\",{\"0\":{\"739\":1}}],[\"的变量\",{\"1\":{\"81\":1}}],[\"的稳定性和性能\",{\"1\":{\"736\":1}}],[\"的可靠性\",{\"1\":{\"733\":1}}],[\"的解析问题\",{\"1\":{\"724\":1}}],[\"的索引相关接口\",{\"1\":{\"723\":1}}],[\"的原则\",{\"1\":{\"711\":1,\"725\":1}}],[\"的具体使用文档\",{\"0\":{\"703\":1}}],[\"的接口\",{\"1\":{\"702\":1}}],[\"的修护\",{\"1\":{\"700\":1}}],[\"的修复\",{\"0\":{\"475\":1},\"1\":{\"481\":1}}],[\"的共享\",{\"1\":{\"652\":1}}],[\"的同事\",{\"1\":{\"633\":1}}],[\"的同步原理\",{\"1\":{\"206\":1}}],[\"的完善发挥了不可或缺的作用\",{\"1\":{\"633\":1}}],[\"的完整的前端项目作为集成示例\",{\"1\":{\"373\":1,\"388\":1}}],[\"的逻辑\",{\"1\":{\"624\":1}}],[\"的唯一性\",{\"1\":{\"624\":1}}],[\"的算法\",{\"1\":{\"624\":1}}],[\"的用户量特别庞大\",{\"1\":{\"612\":1}}],[\"的说明\",{\"1\":{\"612\":1}}],[\"的业务差异\",{\"0\":{\"609\":1}}],[\"的业务场景中\",{\"1\":{\"47\":1}}],[\"的开发量\",{\"1\":{\"608\":1}}],[\"的开源版\",{\"0\":{\"819\":1}}],[\"的开源迭代\",{\"1\":{\"501\":1}}],[\"的开源活动合作需求\",{\"1\":{\"442\":1}}],[\"的开源大佬的新项目\",{\"1\":{\"442\":1}}],[\"的开源项目中\",{\"1\":{\"406\":1}}],[\"的开源合作需求已经作为\",{\"1\":{\"57\":1}}],[\"的开源实时监控告警系统\",{\"1\":{\"451\":1,\"463\":1}}],[\"的开源实时监控告警工具\",{\"1\":{\"53\":1,\"441\":1,\"447\":1}}],[\"的开源实时监控工具\",{\"0\":{\"51\":1}}],[\"的客户端工具\",{\"1\":{\"608\":1}}],[\"的客户端注册代码\",{\"1\":{\"315\":1}}],[\"的功能差异\",{\"0\":{\"608\":1}}],[\"的不可逆加密算法\",{\"1\":{\"605\":1}}],[\"的不同事件类型的方法\",{\"1\":{\"141\":1}}],[\"的指标框架做了重构\",{\"1\":{\"590\":1}}],[\"的增量\",{\"1\":{\"575\":1}}],[\"的增强\",{\"1\":{\"481\":1}}],[\"的线程池隔离\",{\"1\":{\"521\":1}}],[\"的规则语法\",{\"1\":{\"517\":1}}],[\"的规范\",{\"1\":{\"166\":1}}],[\"的写法完全一致\",{\"1\":{\"517\":1}}],[\"的行覆盖率算得上是一个优秀的程度了\",{\"1\":{\"514\":1}}],[\"的团队小伙伴们\",{\"1\":{\"514\":1}}],[\"的更新日志\",{\"1\":{\"736\":1}}],[\"的更新\",{\"1\":{\"514\":1}}],[\"的更新涵盖了\",{\"1\":{\"90\":1}}],[\"的日志还会把回滚的步骤都打出来\",{\"1\":{\"506\":1}}],[\"的日志声明换成如下形式\",{\"1\":{\"474\":1}}],[\"的循环体系只支持同步\",{\"1\":{\"505\":1}}],[\"的一大特色\",{\"1\":{\"502\":1}}],[\"的一个长期支持版本\",{\"1\":{\"83\":1,\"89\":1}}],[\"的一个短期支持版本\",{\"1\":{\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1}}],[\"的交错变体\",{\"1\":{\"499\":1}}],[\"的记录在之前版本中有些问题\",{\"1\":{\"490\":1}}],[\"的记录问题\",{\"0\":{\"490\":1}}],[\"的短路判断\",{\"0\":{\"489\":1}}],[\"的对象\",{\"1\":{\"485\":1}}],[\"的联动进行加强\",{\"0\":{\"485\":1}}],[\"的测试用例全面转向\",{\"0\":{\"484\":1}}],[\"的logger类的\",{\"1\":{\"474\":1}}],[\"的社区群已经有大约\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"的相关课题的研究\",{\"1\":{\"469\":1}}],[\"的核心语法结构\",{\"1\":{\"469\":1}}],[\"的核心配置类\",{\"1\":{\"220\":1}}],[\"的高性能容器\",{\"1\":{\"608\":1}}],[\"的高性能认证鉴权框架\",{\"1\":{\"4\":1}}],[\"的高\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"的所有请求信息\",{\"1\":{\"426\":1}}],[\"的口号\",{\"1\":{\"407\":1}}],[\"的整体流程图\",{\"1\":{\"405\":1}}],[\"的初衷\",{\"1\":{\"396\":1}}],[\"的初始化\",{\"1\":{\"173\":1}}],[\"的微服务架构\",{\"0\":{\"382\":1,\"396\":1}}],[\"的前端项目案例\",{\"1\":{\"374\":1,\"389\":1}}],[\"的前端开发\",{\"1\":{\"374\":1,\"389\":1}}],[\"的单体版\",{\"1\":{\"373\":1,\"388\":1}}],[\"的形式\",{\"1\":{\"370\":1,\"385\":1}}],[\"的几乎全部功能\",{\"1\":{\"370\":1,\"385\":1}}],[\"的大文件分片存储支持\",{\"1\":{\"368\":1}}],[\"的权限注解\",{\"1\":{\"357\":1}}],[\"的权限配置功能\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"的多级缓存支持\",{\"1\":{\"357\":1}}],[\"的多个服务实例会自动映射到同一个选择器进行负载均衡\",{\"1\":{\"116\":1}}],[\"的标准的\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"的第三方应用登录\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"的新时代\",{\"1\":{\"353\":1,\"358\":1}}],[\"的云原生大数据平台\",{\"1\":{\"336\":1,\"340\":1}}],[\"的序列化数据\",{\"1\":{\"321\":1}}],[\"的精神参与\",{\"1\":{\"318\":1}}],[\"的问题\",{\"1\":{\"316\":2,\"421\":1,\"624\":2,\"724\":2}}],[\"的选择器更新灰色发布删除缓存的问题\",{\"1\":{\"316\":1}}],[\"的选项为\",{\"1\":{\"234\":1}}],[\"的预热时间\",{\"1\":{\"316\":1}}],[\"的内网穿透神器\",{\"1\":{\"576\":1}}],[\"的内存泄漏\",{\"1\":{\"316\":1}}],[\"的内部类\",{\"1\":{\"160\":1,\"220\":1}}],[\"的错误提示\",{\"1\":{\"492\":1}}],[\"的错误\",{\"1\":{\"316\":1}}],[\"的删除操作\",{\"1\":{\"316\":1}}],[\"的路径\",{\"1\":{\"316\":1}}],[\"的路径则返回null\",{\"1\":{\"171\":1}}],[\"的许可证\",{\"1\":{\"315\":1}}],[\"的集成测试\",{\"1\":{\"314\":1}}],[\"的集合式注入\",{\"1\":{\"220\":1}}],[\"的下一个\",{\"1\":{\"294\":1}}],[\"的反射调用非常像\",{\"1\":{\"286\":1}}],[\"的替换方案\",{\"1\":{\"269\":1}}],[\"的每个网关中\",{\"1\":{\"266\":1}}],[\"的上限或者是线程数量\",{\"1\":{\"266\":1}}],[\"的数据库即可\",{\"1\":{\"582\":1}}],[\"的数据同步和注册中心\",{\"1\":{\"313\":1}}],[\"的数据处理器并缓存\",{\"1\":{\"162\":1}}],[\"的数据处理类并缓存\",{\"1\":{\"161\":1}}],[\"的数\",{\"1\":{\"265\":1}}],[\"的请求我们可以选择直接报错\",{\"1\":{\"264\":1}}],[\"的情况下\",{\"1\":{\"438\":1}}],[\"的情况下出现如下接口返回结果\",{\"1\":{\"245\":1}}],[\"的情况\",{\"1\":{\"262\":1}}],[\"的设计及工作原理剖析\",{\"1\":{\"260\":1}}],[\"的设计思想\",{\"1\":{\"174\":1}}],[\"的时候才会读取到这里的配置信息\",{\"1\":{\"709\":3}}],[\"的时候\",{\"1\":{\"482\":1,\"792\":1}}],[\"的时候把\",{\"1\":{\"259\":1}}],[\"的时代\",{\"1\":{\"78\":1}}],[\"的处理核心\",{\"1\":{\"259\":1}}],[\"的处理会异步调用下游服务\",{\"1\":{\"136\":1}}],[\"的重新转发和重定向\",{\"1\":{\"256\":1}}],[\"的目的是为了怕不是整数\",{\"1\":{\"252\":1}}],[\"的理解\",{\"1\":{\"252\":1}}],[\"的令牌桶算法要基于\",{\"1\":{\"243\":1}}],[\"的属性取出来\",{\"1\":{\"236\":1}}],[\"的excute方法中\",{\"1\":{\"236\":1}}],[\"的参数是通过\",{\"1\":{\"779\":1}}],[\"的参数封装可以查看defaultsoulcontextbuilder\",{\"1\":{\"232\":1}}],[\"的参数\",{\"1\":{\"232\":1}}],[\"的值一致\",{\"1\":{\"232\":1}}],[\"的连接操作\",{\"1\":{\"315\":1}}],[\"的连接方式\",{\"1\":{\"171\":1}}],[\"的连通性\",{\"1\":{\"228\":1}}],[\"的呢\",{\"1\":{\"220\":1}}],[\"的插件吧\",{\"1\":{\"764\":1}}],[\"的插件式架构都能够满足您的无限扩展需求\",{\"1\":{\"627\":1}}],[\"的插件是有先后顺序的\",{\"1\":{\"239\":1}}],[\"的插件的\",{\"1\":{\"232\":1}}],[\"的插件生态极其丰富\",{\"1\":{\"219\":1}}],[\"的插件化实现\",{\"0\":{\"218\":1}}],[\"的插件化设计\",{\"0\":{\"217\":1},\"1\":{\"221\":1}}],[\"的插件使用的\",{\"1\":{\"129\":1}}],[\"的灵魂\",{\"1\":{\"213\":1}}],[\"的类进行了一次注入\",{\"1\":{\"200\":1}}],[\"的类对象\",{\"1\":{\"181\":1}}],[\"的映射\",{\"1\":{\"180\":1,\"181\":1}}],[\"的直接匹配实现类方式\",{\"1\":{\"177\":1}}],[\"的思想\",{\"1\":{\"171\":1}}],[\"的静态方法\",{\"1\":{\"170\":1}}],[\"的静态内部类\",{\"1\":{\"130\":1}}],[\"的实体类并执行\",{\"1\":{\"200\":1}}],[\"的实现类全部初始化\",{\"1\":{\"172\":1}}],[\"的实现方式了\",{\"1\":{\"172\":1}}],[\"的实现方式\",{\"1\":{\"167\":1}}],[\"的实现\",{\"0\":{\"167\":1},\"1\":{\"170\":1,\"175\":2,\"220\":1,\"420\":1}}],[\"的实例\",{\"1\":{\"157\":1}}],[\"的加载类\",{\"1\":{\"166\":1}}],[\"的各个实现类\",{\"1\":{\"162\":1}}],[\"的默认参数\",{\"1\":{\"265\":1}}],[\"的默认模式\",{\"1\":{\"265\":1}}],[\"的默认同步策略\",{\"1\":{\"156\":1}}],[\"的默认值是\",{\"1\":{\"66\":1}}],[\"的注册方法实现很简单\",{\"1\":{\"170\":1}}],[\"的注册方法\",{\"1\":{\"170\":1}}],[\"的注册接口\",{\"1\":{\"150\":1}}],[\"的注解\",{\"1\":{\"156\":1}}],[\"的订阅器\",{\"1\":{\"148\":1,\"161\":1}}],[\"的检测代码块\",{\"1\":{\"144\":1}}],[\"的产生\",{\"1\":{\"144\":1}}],[\"的例子\",{\"1\":{\"141\":1}}],[\"的节点进入\",{\"1\":{\"135\":1}}],[\"的方式完成了\",{\"1\":{\"783\":1}}],[\"的方式请参考\",{\"1\":{\"508\":1}}],[\"的方式返回给调用者\",{\"1\":{\"428\":1}}],[\"的方式\",{\"1\":{\"170\":1,\"367\":1,\"382\":1}}],[\"的方式开始写入\",{\"1\":{\"130\":1}}],[\"的方法\",{\"1\":{\"129\":1}}],[\"的我们是不是很熟悉\",{\"1\":{\"122\":1}}],[\"的限制\",{\"1\":{\"118\":1,\"624\":1}}],[\"的这个进程后\",{\"1\":{\"116\":1}}],[\"的后台守护线程\",{\"1\":{\"92\":1}}],[\"的话\",{\"1\":{\"92\":1}}],[\"的依赖\",{\"1\":{\"92\":1,\"315\":1,\"713\":1,\"731\":1}}],[\"的配置不是本文的重点不再介绍\",{\"1\":{\"264\":1}}],[\"的配置工厂\",{\"1\":{\"160\":1,\"161\":1}}],[\"的配置\",{\"1\":{\"92\":1,\"709\":2}}],[\"的配置先注释掉\",{\"1\":{\"92\":1}}],[\"的守护线程\",{\"1\":{\"92\":1}}],[\"的未来将会更加光明\",{\"1\":{\"91\":1}}],[\"的未来产生重要影响\",{\"1\":{\"91\":1}}],[\"的跨平台特性和安全性\",{\"1\":{\"91\":1}}],[\"的堆上运行\",{\"1\":{\"83\":1}}],[\"的改进等等\",{\"1\":{\"82\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1}}],[\"的改进\",{\"1\":{\"82\":1,\"83\":1,\"86\":1,\"88\":1,\"89\":1}}],[\"的支持情况\",{\"0\":{\"701\":1}}],[\"的支持\",{\"0\":{\"188\":1},\"1\":{\"82\":1,\"84\":1,\"313\":2,\"574\":1}}],[\"的启动时间\",{\"1\":{\"82\":1}}],[\"的发展添砖加瓦\",{\"1\":{\"634\":1}}],[\"的发展提供更多的动力和资源\",{\"1\":{\"91\":1}}],[\"的发展\",{\"1\":{\"79\":1}}],[\"的发布\",{\"1\":{\"78\":1}}],[\"的使用方法\",{\"1\":{\"635\":1}}],[\"的使用方式我们已经掰开来了解透彻了\",{\"1\":{\"174\":1}}],[\"的使用需求\",{\"1\":{\"608\":1}}],[\"的使用\",{\"0\":{\"71\":1},\"1\":{\"165\":1,\"357\":3,\"364\":2,\"378\":2,\"393\":2,\"400\":2,\"422\":1}}],[\"的调用栈中会调用\",{\"1\":{\"200\":1}}],[\"的调用可以获取到我们资源中的类名\",{\"1\":{\"167\":1}}],[\"的调用\",{\"1\":{\"70\":1,\"167\":1}}],[\"的并发编程框架\",{\"0\":{\"66\":1}}],[\"的\",{\"0\":{\"188\":1,\"270\":1,\"732\":1},\"1\":{\"64\":1,\"92\":1,\"102\":1,\"108\":1,\"130\":1,\"131\":1,\"144\":1,\"150\":1,\"161\":2,\"162\":3,\"170\":1,\"171\":2,\"172\":1,\"176\":1,\"177\":1,\"183\":3,\"200\":2,\"206\":1,\"209\":1,\"217\":2,\"220\":2,\"228\":1,\"231\":3,\"232\":3,\"234\":2,\"247\":2,\"249\":1,\"254\":1,\"265\":1,\"268\":1,\"314\":5,\"315\":6,\"316\":5,\"325\":1,\"339\":1,\"351\":2,\"358\":2,\"367\":2,\"374\":1,\"382\":2,\"389\":1,\"396\":2,\"420\":1,\"431\":1,\"460\":1,\"469\":1,\"482\":2,\"517\":1,\"604\":1,\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"677\":1,\"683\":1,\"692\":1,\"720\":2,\"732\":1,\"750\":1,\"753\":1,\"768\":1,\"792\":2}}],[\"的人来说\",{\"1\":{\"64\":1}}],[\"的做法是\",{\"1\":{\"62\":1}}],[\"的性能问题\",{\"0\":{\"61\":1}}],[\"的现在离不开开发者们的每一行代码\",{\"1\":{\"56\":1}}],[\"的易用来自于诸多模板支持\",{\"0\":{\"55\":1}}],[\"的最完整规范\",{\"1\":{\"54\":1}}],[\"的强大自定义功能\",{\"0\":{\"54\":1}}],[\"的强大自定义\",{\"1\":{\"53\":1}}],[\"的主题直播中\",{\"1\":{\"52\":1}}],[\"的项目背景源于对物联网设备调试过程中存在问题的深入研究和理解\",{\"1\":{\"794\":1}}],[\"的项目\",{\"1\":{\"8\":1,\"299\":1}}],[\"gz\",{\"1\":{\"723\":1}}],[\"gtis\",{\"1\":{\"608\":1}}],[\"glcc\",{\"1\":{\"461\":1}}],[\"globalinterceptor\",{\"1\":{\"723\":1}}],[\"globalheaders\",{\"1\":{\"723\":1}}],[\"globalplugin\",{\"0\":{\"232\":1},\"1\":{\"231\":3,\"232\":3,\"233\":1,\"239\":1}}],[\"global\",{\"1\":{\"15\":1,\"131\":2,\"195\":1,\"231\":1,\"237\":1}}],[\"greenwich\",{\"1\":{\"701\":1}}],[\"greptimedb\",{\"1\":{\"442\":1}}],[\"groovy\",{\"1\":{\"502\":1}}],[\"groupmembermapper\",{\"1\":{\"557\":1}}],[\"groupid\",{\"1\":{\"410\":1,\"739\":1}}],[\"groupid>\",{\"1\":{\"74\":2,\"75\":1,\"76\":1,\"77\":3,\"103\":1,\"130\":1,\"188\":1,\"198\":1,\"205\":1,\"208\":2,\"255\":1,\"269\":1,\"270\":1,\"280\":5,\"282\":1,\"323\":1,\"326\":1,\"709\":3,\"739\":1,\"758\":1,\"788\":4,\"789\":4,\"810\":2,\"814\":2}}],[\"group`\",{\"1\":{\"406\":1}}],[\"groupversion\",{\"1\":{\"278\":1}}],[\"groupparentpath\",{\"1\":{\"206\":1}}],[\"groupenum\",{\"1\":{\"161\":2}}],[\"groupjson\",{\"1\":{\"149\":4}}],[\"groups\",{\"1\":{\"148\":4}}],[\"groupkeys\",{\"1\":{\"148\":1}}],[\"groupkey\",{\"1\":{\"144\":2,\"148\":2}}],[\"group\",{\"1\":{\"141\":3,\"144\":1,\"149\":4,\"154\":1,\"209\":1,\"210\":1,\"293\":1,\"294\":1,\"308\":1,\"709\":2}}],[\"group=\",{\"1\":{\"92\":10,\"144\":1}}],[\"gradle\",{\"1\":{\"667\":1}}],[\"gradle升级到\",{\"1\":{\"541\":1}}],[\"grafana\",{\"1\":{\"469\":1}}],[\"graalvm\",{\"0\":{\"363\":1,\"377\":1,\"392\":1},\"1\":{\"363\":1,\"377\":1,\"392\":1}}],[\"grant\",{\"0\":{\"379\":1,\"394\":1,\"401\":1},\"1\":{\"359\":2,\"379\":2,\"394\":2,\"401\":2}}],[\"grpc\",{\"1\":{\"315\":1,\"409\":1,\"419\":1,\"624\":2,\"712\":1}}],[\"guide\",{\"1\":{\"313\":3,\"314\":1,\"318\":1,\"661\":1,\"665\":1,\"673\":1}}],[\"guava\",{\"1\":{\"71\":4,\"368\":1,\"383\":1,\"406\":1,\"707\":1}}],[\"guavacache\",{\"0\":{\"71\":1},\"1\":{\"71\":1}}],[\"gmt\",{\"1\":{\"199\":1}}],[\"gson\",{\"1\":{\"148\":1,\"149\":2,\"411\":1}}],[\"gsonutils\",{\"1\":{\"123\":3,\"124\":2,\"125\":3,\"131\":1,\"141\":1,\"142\":1,\"157\":5,\"161\":2,\"209\":2,\"219\":1,\"224\":1,\"235\":1,\"247\":1,\"249\":1,\"259\":1,\"266\":2,\"273\":1}}],[\"geolite2\",{\"1\":{\"554\":1,\"564\":1,\"567\":1}}],[\"george\",{\"1\":{\"308\":1}}],[\"genericinvoker\",{\"1\":{\"288\":1,\"289\":1}}],[\"genericimplfilter\",{\"0\":{\"293\":1},\"1\":{\"286\":1,\"292\":1,\"293\":2}}],[\"genericsservice的异步调用\",{\"1\":{\"288\":1}}],[\"genericservice\",{\"1\":{\"286\":2,\"289\":4,\"294\":1}}],[\"genericserivce\",{\"1\":{\"283\":1}}],[\"genericexception\",{\"1\":{\"286\":3,\"289\":2}}],[\"generic\",{\"1\":{\"286\":2,\"293\":10,\"294\":11,\"296\":1}}],[\"genericfilter\",{\"0\":{\"294\":1},\"1\":{\"286\":1,\"292\":1,\"294\":1}}],[\"generic=bean\",{\"1\":{\"294\":1}}],[\"generic=nativejava\",{\"1\":{\"294\":1}}],[\"generic=\",{\"1\":{\"285\":1}}],[\"generate\",{\"1\":{\"686\":1}}],[\"generateerror\",{\"1\":{\"266\":1}}],[\"generatesign\",{\"1\":{\"195\":1}}],[\"generateresponse\",{\"1\":{\"144\":1}}],[\"get注解\",{\"1\":{\"428\":1}}],[\"get注解修饰接口方法\",{\"1\":{\"428\":1}}],[\"getobject\",{\"1\":{\"374\":1,\"389\":1}}],[\"getorder\",{\"1\":{\"130\":1,\"219\":1,\"220\":1,\"231\":1,\"259\":1,\"266\":1}}],[\"getordefault\",{\"1\":{\"126\":1,\"209\":1,\"210\":1}}],[\"getgenericparametertypes\",{\"1\":{\"294\":1}}],[\"getgson\",{\"1\":{\"273\":1}}],[\"getgrouptype\",{\"1\":{\"161\":1}}],[\"getgroup\",{\"1\":{\"141\":1}}],[\"getgroupkey\",{\"1\":{\"141\":2,\"155\":2,\"157\":2,\"200\":2,\"209\":2}}],[\"getwaitintervalfunctioninopenstate\",{\"1\":{\"271\":1}}],[\"getweight\",{\"1\":{\"134\":3,\"135\":2,\"229\":1}}],[\"getdegraderuletimewindow\",{\"1\":{\"266\":1}}],[\"getdegraderulegrade\",{\"1\":{\"266\":1}}],[\"getdegraderulecount\",{\"1\":{\"266\":1}}],[\"getdegraderuleenable\",{\"1\":{\"266\":1}}],[\"getdata\",{\"1\":{\"148\":1,\"161\":1,\"324\":3,\"325\":3,\"327\":3,\"328\":4,\"624\":1}}],[\"getkeys\",{\"0\":{\"250\":1},\"1\":{\"249\":1,\"251\":1}}],[\"getqueryparams\",{\"1\":{\"232\":1}}],[\"getfileinfobyurl\",{\"1\":{\"817\":1}}],[\"getfirst\",{\"1\":{\"232\":1,\"289\":1}}],[\"getformattedid\",{\"1\":{\"567\":1}}],[\"getforobject\",{\"1\":{\"148\":1}}],[\"getfailureratethreshold\",{\"1\":{\"271\":1}}],[\"getfallbackuri\",{\"1\":{\"266\":1,\"271\":2,\"273\":1}}],[\"getflowrulecontrolbehavior\",{\"1\":{\"266\":1}}],[\"getflowrulecount\",{\"1\":{\"266\":1}}],[\"getflowrulegrade\",{\"1\":{\"266\":1}}],[\"getflowruleenable\",{\"1\":{\"266\":1}}],[\"geturl\",{\"1\":{\"200\":1,\"205\":1,\"293\":1,\"816\":1}}],[\"getupstreamurl\",{\"1\":{\"123\":2,\"125\":2,\"133\":1,\"135\":2,\"227\":1}}],[\"getjoin\",{\"0\":{\"177\":1},\"1\":{\"164\":2,\"175\":1,\"177\":1,\"179\":2,\"183\":1,\"229\":1}}],[\"getelementtype\",{\"1\":{\"724\":1}}],[\"getencryptdir\",{\"1\":{\"637\":1}}],[\"getenable\",{\"1\":{\"219\":1}}],[\"getenabled\",{\"1\":{\"129\":2,\"195\":1,\"224\":1,\"234\":1,\"247\":1}}],[\"getexceptionmessage\",{\"1\":{\"289\":1}}],[\"getextension\",{\"1\":{\"294\":1}}],[\"getextensionclasses\",{\"1\":{\"181\":1,\"183\":2}}],[\"getextensionloader\",{\"1\":{\"164\":2,\"176\":2,\"229\":1,\"294\":1}}],[\"getepochsecond\",{\"1\":{\"249\":1}}],[\"geteventtype\",{\"1\":{\"141\":5,\"155\":5,\"157\":5,\"161\":1,\"200\":1,\"209\":1}}],[\"getmimetype\",{\"1\":{\"724\":1}}],[\"getminimumnumberofcalls\",{\"1\":{\"271\":1}}],[\"getmac\",{\"1\":{\"637\":1}}],[\"getmapping\",{\"1\":{\"191\":1,\"272\":1}}],[\"getmd5\",{\"1\":{\"149\":1}}],[\"getmsg\",{\"1\":{\"137\":2,\"195\":1,\"235\":2,\"236\":1,\"237\":2,\"249\":1,\"266\":3,\"288\":2,\"290\":2}}],[\"getmethods\",{\"1\":{\"724\":1}}],[\"getmethodname\",{\"1\":{\"289\":1,\"293\":2,\"294\":2}}],[\"getmethodvalue\",{\"1\":{\"136\":1,\"236\":1}}],[\"getmessage\",{\"1\":{\"126\":1,\"136\":1,\"148\":1,\"149\":2,\"236\":1,\"249\":1,\"294\":2}}],[\"getbigwriter\",{\"1\":{\"722\":1}}],[\"getburstcapacity\",{\"1\":{\"249\":1}}],[\"getbykey\",{\"1\":{\"763\":1}}],[\"getby\",{\"1\":{\"723\":1}}],[\"getbyname\",{\"1\":{\"228\":1}}],[\"getbytes\",{\"1\":{\"191\":1}}],[\"getbasicremote\",{\"1\":{\"158\":2}}],[\"getbody\",{\"1\":{\"136\":1,\"149\":1,\"236\":1}}],[\"getbeansoftype\",{\"1\":{\"155\":1,\"200\":1,\"209\":1}}],[\"getbean\",{\"1\":{\"71\":1,\"158\":1,\"273\":1}}],[\"get请求orpost请求等\",{\"1\":{\"136\":1}}],[\"getleft\",{\"1\":{\"289\":1}}],[\"getlimitforperiod\",{\"1\":{\"271\":1}}],[\"getlimitrefreshperiod\",{\"1\":{\"271\":1}}],[\"getlastmodifytime\",{\"1\":{\"149\":1}}],[\"getlastupdate\",{\"1\":{\"135\":1}}],[\"getlogger\",{\"1\":{\"474\":1}}],[\"getloged\",{\"1\":{\"129\":2}}],[\"getloadbalance\",{\"1\":{\"131\":1,\"164\":1,\"219\":1,\"224\":1,\"235\":1}}],[\"getvalue\",{\"1\":{\"133\":1,\"135\":1,\"179\":1,\"183\":4}}],[\"getname\",{\"1\":{\"124\":11,\"126\":1,\"129\":4,\"130\":1,\"142\":3,\"162\":1,\"167\":1,\"183\":1,\"220\":3,\"231\":2,\"236\":2,\"259\":1,\"266\":3,\"282\":1,\"289\":1,\"293\":4,\"294\":1}}],[\"getheaders\",{\"1\":{\"136\":1,\"137\":1,\"232\":1,\"236\":1,\"237\":1,\"259\":1,\"289\":1}}],[\"gethandler\",{\"1\":{\"259\":1}}],[\"gethandle\",{\"1\":{\"123\":1,\"125\":1,\"131\":1,\"219\":1,\"224\":1,\"235\":1,\"249\":1,\"259\":1,\"266\":2,\"273\":1}}],[\"gethostaddress\",{\"1\":{\"219\":1,\"224\":1,\"235\":1}}],[\"gethost\",{\"1\":{\"123\":1,\"125\":1}}],[\"getpids\",{\"1\":{\"637\":2}}],[\"getparameter\",{\"1\":{\"293\":1}}],[\"getparametertypes\",{\"1\":{\"288\":1,\"289\":1,\"294\":1}}],[\"getpath\",{\"1\":{\"122\":1,\"126\":1,\"288\":1,\"289\":2}}],[\"getpermittednumberofcallsinhalfopenstate\",{\"1\":{\"271\":1}}],[\"getproperty\",{\"1\":{\"226\":2}}],[\"getpluginname\",{\"1\":{\"162\":2}}],[\"getpluginid\",{\"1\":{\"124\":5}}],[\"getport\",{\"1\":{\"123\":1,\"125\":1,\"644\":1}}],[\"getattachments\",{\"1\":{\"294\":1}}],[\"getattachment\",{\"1\":{\"294\":2}}],[\"getattributes\",{\"1\":{\"131\":1,\"219\":3,\"224\":3,\"232\":1,\"235\":3,\"236\":3,\"289\":2,\"294\":1}}],[\"getattribute\",{\"1\":{\"131\":1,\"136\":1,\"137\":1,\"195\":1,\"219\":1,\"235\":1,\"236\":4,\"237\":1,\"266\":1,\"273\":1,\"288\":3,\"290\":1}}],[\"getarguments\",{\"1\":{\"293\":3,\"294\":5}}],[\"getaddress\",{\"1\":{\"219\":1,\"224\":1,\"235\":1}}],[\"getadminurl\",{\"1\":{\"121\":1}}],[\"getappsecret\",{\"1\":{\"195\":1}}],[\"getappkey\",{\"1\":{\"195\":2}}],[\"getappname\",{\"1\":{\"123\":1,\"125\":1}}],[\"getannotationalias\",{\"1\":{\"723\":1}}],[\"getannotation\",{\"1\":{\"183\":2}}],[\"getandincrement\",{\"1\":{\"66\":1}}],[\"getasjsonarray\",{\"1\":{\"149\":1}}],[\"getasjsonobject\",{\"1\":{\"148\":1}}],[\"getalias\",{\"1\":{\"124\":1,\"126\":2}}],[\"getinvoker\",{\"1\":{\"294\":1}}],[\"getinterface\",{\"1\":{\"289\":1,\"294\":3}}],[\"getint\",{\"1\":{\"173\":2}}],[\"getinstance\",{\"1\":{\"70\":1,\"71\":2,\"123\":3,\"124\":2,\"125\":3,\"129\":3,\"130\":1,\"131\":2,\"141\":1,\"142\":1,\"157\":5,\"158\":1,\"161\":2,\"162\":3,\"195\":1,\"209\":2,\"219\":5,\"220\":3,\"224\":5,\"234\":3,\"235\":2,\"247\":1,\"249\":1,\"259\":1,\"266\":2,\"273\":1,\"289\":3}}],[\"getifavailable\",{\"1\":{\"130\":1,\"161\":4,\"205\":4,\"210\":4,\"220\":1,\"259\":1}}],[\"getid\",{\"1\":{\"92\":4,\"123\":1,\"124\":3,\"125\":1,\"126\":3,\"129\":1,\"131\":1,\"153\":1,\"209\":1,\"219\":2,\"224\":2,\"234\":1,\"235\":1,\"249\":1,\"273\":3}}],[\"getsupplierconfiglist\",{\"1\":{\"773\":1}}],[\"getsupplierconfig\",{\"1\":{\"773\":1}}],[\"getsmsblend\",{\"1\":{\"770\":1}}],[\"getslidingwindowtype\",{\"1\":{\"271\":1}}],[\"getslidingwindowsize\",{\"1\":{\"271\":1}}],[\"getsystemresources\",{\"1\":{\"167\":1,\"183\":1}}],[\"getsystemclassloader\",{\"1\":{\"167\":1}}],[\"getservicename\",{\"1\":{\"284\":1}}],[\"getselectorid\",{\"1\":{\"209\":3,\"266\":1}}],[\"getselectorconditions\",{\"1\":{\"92\":1,\"124\":1}}],[\"getsessiontimeout\",{\"1\":{\"200\":1,\"205\":1}}],[\"getsecuritymanager\",{\"1\":{\"167\":1}}],[\"getsource\",{\"1\":{\"141\":5,\"155\":5,\"157\":5,\"200\":1,\"209\":1}}],[\"getstatuscode\",{\"1\":{\"137\":3,\"237\":3,\"266\":1,\"273\":1}}],[\"getsign\",{\"1\":{\"195\":1}}],[\"getsimplename\",{\"1\":{\"126\":1}}],[\"getsize\",{\"1\":{\"71\":2}}],[\"get\",{\"0\":{\"659\":1},\"1\":{\"71\":1,\"126\":1,\"129\":1,\"130\":1,\"133\":1,\"134\":3,\"135\":6,\"148\":3,\"149\":1,\"158\":1,\"161\":1,\"162\":3,\"176\":2,\"179\":1,\"181\":2,\"183\":6,\"191\":1,\"206\":1,\"219\":2,\"220\":1,\"224\":2,\"225\":1,\"229\":1,\"231\":1,\"232\":1,\"234\":1,\"247\":3,\"249\":4,\"252\":2,\"287\":1,\"289\":2,\"428\":3,\"608\":3,\"637\":1,\"651\":1,\"724\":1}}],[\"gettokentimeout\",{\"1\":{\"624\":1}}],[\"gettokensession\",{\"1\":{\"624\":1}}],[\"getter\",{\"1\":{\"624\":1}}],[\"gettargetserviceuniquename\",{\"1\":{\"294\":1}}],[\"gettimelimiterconfig\",{\"1\":{\"273\":2}}],[\"gettimeoutduration\",{\"1\":{\"271\":1,\"273\":2}}],[\"gettimeoutdurationrate\",{\"1\":{\"271\":1}}],[\"gettimeout\",{\"1\":{\"219\":1,\"224\":1,\"235\":1}}],[\"gettimestamp\",{\"1\":{\"195\":1}}],[\"gettype\",{\"1\":{\"129\":1,\"219\":1,\"224\":1,\"234\":1}}],[\"gettcctransaction\",{\"1\":{\"71\":1}}],[\"gettransid\",{\"1\":{\"70\":1,\"71\":1}}],[\"getchild\",{\"1\":{\"637\":1}}],[\"getchildbypid\",{\"1\":{\"637\":1}}],[\"getcircuitbreakerconfig\",{\"1\":{\"273\":1}}],[\"getcircuitenable\",{\"1\":{\"271\":1,\"273\":1}}],[\"getcallerclass\",{\"1\":{\"171\":1}}],[\"getclassloader\",{\"1\":{\"183\":1}}],[\"getclass\",{\"1\":{\"130\":1,\"220\":1,\"231\":2,\"259\":1,\"293\":3,\"294\":1}}],[\"getconfigandsignlistener\",{\"1\":{\"210\":3}}],[\"getconfig\",{\"1\":{\"209\":2,\"247\":1}}],[\"getconnectiontimeout\",{\"1\":{\"200\":1,\"205\":1}}],[\"getconnection\",{\"1\":{\"171\":5,\"173\":3}}],[\"getcontextbean\",{\"1\":{\"488\":4}}],[\"getcontextclassloader\",{\"1\":{\"167\":1}}],[\"getcontext\",{\"1\":{\"123\":1,\"125\":1,\"167\":1,\"289\":1,\"294\":1}}],[\"getcookies\",{\"1\":{\"137\":1,\"237\":1}}],[\"getcode\",{\"1\":{\"67\":1,\"70\":4,\"124\":2,\"126\":1,\"129\":1,\"137\":2,\"219\":1,\"224\":1,\"234\":1,\"235\":2,\"236\":1,\"237\":2,\"249\":1,\"266\":4,\"288\":2,\"290\":2}}],[\"getcurrenttransaction\",{\"1\":{\"67\":2,\"70\":1}}],[\"getright\",{\"1\":{\"289\":1}}],[\"getringbuffer\",{\"1\":{\"66\":1}}],[\"getratelimiterconfig\",{\"1\":{\"273\":2}}],[\"getredirecturi\",{\"1\":{\"259\":4}}],[\"getreplenishrate\",{\"1\":{\"249\":1}}],[\"getretry\",{\"1\":{\"219\":1,\"224\":1,\"235\":1}}],[\"getremoteaddress\",{\"1\":{\"219\":1,\"224\":1,\"235\":1}}],[\"getresourcename\",{\"1\":{\"266\":8}}],[\"getresource\",{\"1\":{\"266\":4}}],[\"getresources\",{\"1\":{\"167\":1,\"183\":1}}],[\"getresponse\",{\"1\":{\"137\":1,\"144\":1,\"237\":1,\"249\":1,\"259\":1,\"266\":5,\"273\":2,\"288\":2}}],[\"getrequest\",{\"1\":{\"136\":3,\"144\":2,\"219\":1,\"224\":1,\"232\":1,\"235\":1,\"236\":3,\"259\":1,\"273\":1,\"289\":1}}],[\"getrules\",{\"1\":{\"266\":4}}],[\"getruleconditions\",{\"1\":{\"126\":1}}],[\"getrulename\",{\"1\":{\"126\":2}}],[\"getruntime\",{\"1\":{\"67\":1,\"74\":2}}],[\"getrpctype\",{\"1\":{\"123\":1,\"125\":1,\"126\":1}}],[\"given\",{\"1\":{\"126\":1}}],[\"gitignore优化\",{\"1\":{\"529\":1}}],[\"git\",{\"1\":{\"48\":2,\"96\":2,\"109\":2}}],[\"github\",{\"0\":{\"73\":1,\"437\":1},\"1\":{\"42\":2,\"43\":1,\"44\":2,\"53\":1,\"56\":3,\"57\":1,\"60\":2,\"64\":1,\"77\":3,\"93\":2,\"96\":1,\"174\":1,\"269\":1,\"289\":1,\"296\":1,\"300\":2,\"311\":2,\"312\":1,\"313\":20,\"314\":43,\"315\":54,\"316\":55,\"331\":1,\"334\":3,\"336\":3,\"340\":3,\"342\":2,\"402\":2,\"407\":2,\"414\":2,\"416\":1,\"423\":2,\"424\":1,\"437\":1,\"441\":2,\"443\":1,\"445\":2,\"447\":2,\"449\":2,\"452\":2,\"458\":47,\"459\":2,\"464\":2,\"465\":2,\"467\":2,\"473\":2,\"480\":2,\"497\":2,\"513\":2,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"629\":2,\"636\":2,\"643\":2,\"693\":1,\"703\":2,\"711\":2,\"718\":3,\"722\":1,\"723\":7,\"724\":6,\"725\":2,\"766\":3,\"782\":2,\"783\":1,\"786\":2,\"788\":1,\"792\":1,\"804\":2,\"808\":2,\"816\":1}}],[\"gitee\",{\"0\":{\"436\":1,\"625\":1},\"1\":{\"8\":2,\"49\":1,\"56\":4,\"60\":2,\"299\":3,\"300\":2,\"305\":2,\"323\":1,\"326\":1,\"329\":2,\"336\":3,\"340\":3,\"342\":2,\"354\":1,\"357\":1,\"402\":2,\"407\":2,\"414\":2,\"416\":1,\"423\":2,\"424\":1,\"436\":1,\"441\":2,\"445\":1,\"447\":2,\"449\":1,\"452\":2,\"459\":1,\"464\":2,\"465\":1,\"467\":3,\"468\":4,\"473\":3,\"476\":4,\"480\":3,\"492\":14,\"497\":3,\"509\":10,\"513\":3,\"522\":12,\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1,\"576\":2,\"583\":1,\"587\":1,\"610\":4,\"629\":2,\"636\":2,\"643\":2,\"661\":1,\"665\":1,\"673\":1,\"693\":1,\"703\":2,\"711\":2,\"718\":1,\"722\":2,\"723\":15,\"724\":8,\"725\":2,\"727\":2,\"729\":1,\"741\":3,\"766\":3,\"782\":2,\"786\":2,\"804\":2,\"808\":2}}],[\"g\",{\"1\":{\"126\":1}}],[\"gb\",{\"1\":{\"83\":1}}],[\"gan\",{\"1\":{\"599\":1}}],[\"ga\",{\"1\":{\"529\":1,\"535\":1,\"541\":1,\"547\":1,\"557\":1,\"567\":1}}],[\"gateway<\",{\"1\":{\"788\":1}}],[\"gateway启动bug\",{\"1\":{\"529\":1}}],[\"gatewayapplication改为maxkeygatewayapplication\",{\"1\":{\"529\":1}}],[\"gateway\",{\"1\":{\"93\":1,\"137\":2,\"237\":2,\"269\":1,\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1,\"788\":1}}],[\"garbage\",{\"1\":{\"83\":1}}],[\"gaussdb\",{\"1\":{\"57\":1}}],[\"g1\",{\"1\":{\"79\":1,\"82\":2}}],[\"goodboy008\",{\"1\":{\"317\":1}}],[\"googlecloud\",{\"1\":{\"808\":1}}],[\"google\",{\"1\":{\"71\":5,\"526\":2,\"532\":2,\"538\":2,\"544\":2,\"554\":2,\"564\":2}}],[\"goku\",{\"1\":{\"308\":1}}],[\"gotc\",{\"0\":{\"15\":1},\"1\":{\"15\":3}}],[\"gcdd1993\",{\"1\":{\"458\":1,\"461\":1}}],[\"gc\",{\"0\":{\"66\":1},\"1\":{\"82\":1,\"85\":1,\"87\":1,\"340\":1}}],[\"gvp\",{\"1\":{\"8\":4,\"56\":1,\"299\":4,\"305\":3}}],[\"2版本发布\",{\"0\":{\"728\":1}}],[\"2==0\",{\"1\":{\"272\":1}}],[\"26\",{\"1\":{\"308\":6,\"314\":1,\"315\":1,\"316\":1}}],[\"261\",{\"1\":{\"199\":1}}],[\"26379\",{\"1\":{\"64\":6,\"77\":3}}],[\"2n\",{\"1\":{\"64\":1}}],[\"299\",{\"1\":{\"308\":1}}],[\"29812\",{\"1\":{\"105\":3,\"108\":18}}],[\"29\",{\"1\":{\"36\":1,\"50\":1,\"308\":71,\"314\":1,\"315\":1,\"316\":1,\"354\":1,\"541\":1,\"707\":1}}],[\"249\",{\"1\":{\"271\":1}}],[\"244\",{\"1\":{\"208\":1}}],[\"24\",{\"1\":{\"32\":1,\"108\":3,\"271\":1,\"308\":15,\"314\":1,\"315\":1,\"316\":2,\"353\":1,\"358\":1,\"557\":1}}],[\"2222\",{\"1\":{\"724\":1}}],[\"2202\",{\"1\":{\"724\":1}}],[\"2204\",{\"1\":{\"723\":1}}],[\"2210\",{\"1\":{\"724\":1}}],[\"2217\",{\"1\":{\"723\":1}}],[\"2218\",{\"1\":{\"723\":1}}],[\"2213\",{\"1\":{\"723\":1}}],[\"2211\",{\"1\":{\"723\":1}}],[\"2212\",{\"1\":{\"722\":1,\"724\":1}}],[\"22\",{\"1\":{\"30\":5,\"92\":7,\"108\":3,\"109\":1,\"308\":5,\"314\":1,\"315\":1,\"316\":1,\"368\":1,\"709\":3}}],[\"215125134\",{\"1\":{\"740\":1}}],[\"2195\",{\"1\":{\"723\":1}}],[\"2197\",{\"1\":{\"723\":1}}],[\"2179\",{\"1\":{\"723\":1}}],[\"2188\",{\"1\":{\"724\":1}}],[\"2189\",{\"1\":{\"724\":1}}],[\"2180\",{\"1\":{\"723\":1}}],[\"218\",{\"1\":{\"308\":1}}],[\"2181\",{\"1\":{\"64\":1,\"77\":1,\"198\":2,\"199\":11}}],[\"21\",{\"1\":{\"30\":8,\"92\":3,\"108\":3,\"308\":2,\"314\":1,\"315\":1,\"316\":1}}],[\"231012\",{\"1\":{\"567\":1}}],[\"231011\",{\"1\":{\"567\":1}}],[\"231010\",{\"1\":{\"567\":1}}],[\"231009\",{\"1\":{\"567\":1}}],[\"231008\",{\"1\":{\"567\":1}}],[\"231007\",{\"1\":{\"567\":1}}],[\"231006\",{\"1\":{\"567\":1}}],[\"231005\",{\"1\":{\"567\":1}}],[\"231004\",{\"1\":{\"567\":1}}],[\"231003\",{\"1\":{\"567\":1}}],[\"231002\",{\"1\":{\"567\":1}}],[\"231001\",{\"1\":{\"567\":1}}],[\"230911\",{\"1\":{\"557\":1}}],[\"230910\",{\"1\":{\"557\":1}}],[\"230909\",{\"1\":{\"557\":1}}],[\"230908\",{\"1\":{\"557\":1}}],[\"230907\",{\"1\":{\"557\":1}}],[\"230906\",{\"1\":{\"557\":1}}],[\"230905\",{\"1\":{\"557\":1}}],[\"230904\",{\"1\":{\"557\":1}}],[\"230903\",{\"1\":{\"557\":1}}],[\"230902\",{\"1\":{\"557\":1}}],[\"230901\",{\"1\":{\"557\":1}}],[\"230816\",{\"1\":{\"547\":1}}],[\"230815\",{\"1\":{\"547\":1}}],[\"230814\",{\"1\":{\"547\":1}}],[\"230813\",{\"1\":{\"547\":1}}],[\"230812\",{\"1\":{\"547\":1}}],[\"230811\",{\"1\":{\"547\":1}}],[\"230810\",{\"1\":{\"547\":1}}],[\"230809\",{\"1\":{\"547\":1}}],[\"230808\",{\"1\":{\"547\":1}}],[\"230807\",{\"1\":{\"547\":1}}],[\"230806\",{\"1\":{\"547\":1}}],[\"230805\",{\"1\":{\"547\":1}}],[\"230804\",{\"1\":{\"547\":1}}],[\"230803\",{\"1\":{\"547\":1}}],[\"230802\",{\"1\":{\"547\":1}}],[\"230801\",{\"1\":{\"547\":1}}],[\"230711\",{\"1\":{\"541\":1}}],[\"230710\",{\"1\":{\"541\":1}}],[\"230709\",{\"1\":{\"541\":1}}],[\"230708\",{\"1\":{\"541\":1}}],[\"230707\",{\"1\":{\"541\":1}}],[\"230706\",{\"1\":{\"541\":1}}],[\"230705\",{\"1\":{\"541\":1}}],[\"230704\",{\"1\":{\"541\":1}}],[\"230703\",{\"1\":{\"541\":1}}],[\"230702\",{\"1\":{\"541\":1}}],[\"230701\",{\"1\":{\"541\":1}}],[\"230608\",{\"1\":{\"535\":1}}],[\"230607\",{\"1\":{\"535\":1}}],[\"230606\",{\"1\":{\"535\":1}}],[\"230605\",{\"1\":{\"535\":1}}],[\"230604\",{\"1\":{\"535\":1}}],[\"230603\",{\"1\":{\"535\":1}}],[\"230602\",{\"1\":{\"535\":1}}],[\"230601\",{\"1\":{\"535\":1}}],[\"230516\",{\"1\":{\"529\":1}}],[\"230515\",{\"1\":{\"529\":1}}],[\"230514\",{\"1\":{\"529\":1}}],[\"230513\",{\"1\":{\"529\":1}}],[\"230512\",{\"1\":{\"529\":1}}],[\"230511\",{\"1\":{\"529\":1}}],[\"230510\",{\"1\":{\"529\":1}}],[\"230509\",{\"1\":{\"529\":1}}],[\"230508\",{\"1\":{\"529\":1}}],[\"230507\",{\"1\":{\"529\":1}}],[\"230506\",{\"1\":{\"529\":1}}],[\"230505\",{\"1\":{\"529\":1}}],[\"230504\",{\"1\":{\"529\":1}}],[\"230503\",{\"1\":{\"529\":1}}],[\"230502\",{\"1\":{\"529\":1}}],[\"230501\",{\"1\":{\"529\":1}}],[\"236915833\",{\"1\":{\"465\":1}}],[\"23t10\",{\"1\":{\"397\":1}}],[\"23ee40017\",{\"1\":{\"49\":1}}],[\"23ee40016\",{\"1\":{\"44\":1}}],[\"23\",{\"1\":{\"29\":1,\"108\":3,\"109\":1,\"271\":2,\"308\":3,\"314\":1,\"315\":1,\"316\":1,\"397\":1,\"616\":1,\"720\":1}}],[\"28\",{\"1\":{\"15\":1,\"109\":1,\"271\":1,\"308\":8,\"314\":1,\"315\":1,\"316\":1,\"330\":1}}],[\"27017\",{\"1\":{\"64\":1,\"77\":1}}],[\"27\",{\"1\":{\"15\":1,\"21\":1,\"105\":1,\"108\":6,\"308\":7,\"314\":1,\"315\":1,\"316\":1,\"448\":1,\"529\":1,\"535\":1}}],[\"25修复错误的表别名使用\",{\"1\":{\"557\":1}}],[\"250\",{\"1\":{\"271\":5}}],[\"252\",{\"1\":{\"271\":3}}],[\"254\",{\"1\":{\"199\":1}}],[\"255\",{\"1\":{\"109\":1,\"278\":6,\"444\":1}}],[\"25ms\",{\"1\":{\"109\":1}}],[\"25\",{\"1\":{\"12\":1,\"30\":4,\"33\":4,\"108\":3,\"208\":7,\"271\":1,\"308\":2,\"314\":1,\"315\":1,\"316\":1,\"528\":1,\"529\":1}}],[\"20800\",{\"1\":{\"92\":7}}],[\"2011911\",{\"1\":{\"547\":1}}],[\"2019ms\",{\"1\":{\"271\":1}}],[\"2019\",{\"1\":{\"79\":2,\"84\":1,\"85\":1,\"199\":1}}],[\"2017\",{\"1\":{\"79\":1,\"81\":1}}],[\"2018\",{\"1\":{\"60\":1,\"79\":2,\"82\":1,\"83\":1,\"296\":1}}],[\"2001ms\",{\"1\":{\"271\":1}}],[\"200\",{\"1\":{\"135\":1,\"236\":1,\"271\":1,\"308\":11,\"709\":1,\"783\":1,\"816\":4}}],[\"200+\",{\"1\":{\"46\":1}}],[\"20000\",{\"1\":{\"293\":1,\"294\":1}}],[\"2000\",{\"1\":{\"46\":1,\"198\":2,\"272\":1,\"308\":1}}],[\"20w+star\",{\"1\":{\"39\":1}}],[\"2022\",{\"1\":{\"306\":1,\"308\":37,\"353\":4,\"354\":2,\"358\":4,\"367\":3,\"368\":1,\"382\":3,\"396\":3,\"397\":3,\"427\":1,\"547\":1,\"633\":1}}],[\"20210130230250748\",{\"1\":{\"179\":1}}],[\"20210130214402997\",{\"1\":{\"176\":1}}],[\"20210130202512831\",{\"1\":{\"170\":1}}],[\"20210122042354171\",{\"1\":{\"220\":1}}],[\"20210122040245671\",{\"1\":{\"220\":1}}],[\"20210122035525261\",{\"1\":{\"220\":1}}],[\"20210122032336069\",{\"1\":{\"219\":1}}],[\"20210122030444704\",{\"1\":{\"219\":1}}],[\"20210122025700589\",{\"1\":{\"219\":1}}],[\"20210122021834793\",{\"1\":{\"213\":1}}],[\"20210122172333111\",{\"1\":{\"162\":1}}],[\"20210129113307494\",{\"1\":{\"167\":1}}],[\"20210129111231212\",{\"1\":{\"167\":1}}],[\"20210129103451844\",{\"1\":{\"166\":1}}],[\"20210129103047851\",{\"1\":{\"166\":1}}],[\"20210129095703911\",{\"1\":{\"166\":1}}],[\"20210129095623013\",{\"1\":{\"166\":1}}],[\"2021\",{\"0\":{\"29\":1,\"32\":1},\"1\":{\"29\":1,\"32\":1,\"79\":2,\"88\":1,\"89\":1,\"92\":11,\"101\":5,\"105\":3,\"108\":18,\"126\":2,\"199\":16,\"208\":7,\"271\":11,\"306\":1,\"308\":206,\"351\":2,\"427\":1}}],[\"2020ms\",{\"1\":{\"271\":4}}],[\"2020\",{\"0\":{\"21\":1},\"1\":{\"21\":1,\"79\":2,\"86\":1,\"87\":1}}],[\"20230922\",{\"1\":{\"575\":1}}],[\"2023\",{\"0\":{\"11\":1,\"15\":1,\"16\":1,\"35\":1,\"50\":1,\"650\":1,\"662\":1,\"666\":1,\"674\":1,\"682\":1,\"691\":1},\"1\":{\"12\":2,\"13\":1,\"15\":2,\"16\":1,\"36\":2,\"50\":1,\"308\":25,\"330\":1,\"397\":1,\"406\":1,\"469\":1,\"528\":1,\"529\":1,\"534\":1,\"535\":1,\"540\":1,\"541\":1,\"546\":1,\"547\":1,\"556\":1,\"557\":1,\"566\":1,\"567\":1,\"612\":4,\"631\":1,\"632\":1,\"633\":1,\"651\":1,\"660\":1}}],[\"20\",{\"1\":{\"12\":1,\"13\":1,\"14\":1,\"29\":1,\"30\":9,\"33\":2,\"92\":1,\"105\":3,\"108\":18,\"199\":17,\"208\":1,\"236\":1,\"308\":103,\"314\":1,\"315\":1,\"316\":1,\"334\":1,\"354\":1,\"368\":1,\"535\":1,\"603\":2,\"616\":2,\"702\":1,\"709\":1}}],[\"2\",{\"0\":{\"41\":1,\"62\":1,\"67\":1,\"96\":1,\"99\":1,\"100\":1,\"101\":2,\"105\":1,\"106\":1,\"107\":1,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"119\":2,\"120\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":2,\"126\":2,\"151\":2,\"152\":2,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":1,\"216\":1,\"220\":1,\"227\":1,\"310\":1,\"337\":1,\"345\":1,\"351\":1,\"353\":1,\"355\":1,\"360\":1,\"363\":1,\"369\":1,\"373\":1,\"377\":1,\"384\":1,\"388\":1,\"392\":1,\"398\":1,\"400\":1,\"439\":1,\"446\":1,\"448\":1,\"503\":1,\"562\":1,\"583\":1,\"584\":1,\"640\":1,\"647\":1,\"653\":1,\"669\":1,\"678\":1,\"680\":1,\"685\":1,\"691\":1,\"695\":1,\"699\":1,\"700\":2,\"702\":2,\"728\":1,\"729\":2,\"737\":1,\"738\":1,\"742\":1,\"743\":1,\"753\":2,\"781\":1,\"787\":1,\"792\":2,\"797\":1},\"1\":{\"8\":1,\"12\":1,\"15\":1,\"29\":1,\"47\":1,\"64\":1,\"74\":4,\"90\":1,\"92\":7,\"101\":2,\"109\":2,\"124\":1,\"125\":1,\"135\":2,\"145\":1,\"158\":2,\"166\":1,\"167\":1,\"191\":1,\"198\":1,\"199\":1,\"200\":1,\"204\":1,\"205\":1,\"206\":1,\"208\":24,\"209\":2,\"210\":2,\"219\":1,\"220\":1,\"221\":1,\"224\":1,\"227\":1,\"228\":1,\"231\":1,\"234\":1,\"235\":1,\"236\":2,\"252\":5,\"264\":1,\"266\":3,\"271\":4,\"293\":1,\"294\":1,\"299\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"321\":1,\"322\":1,\"336\":1,\"338\":1,\"340\":1,\"351\":5,\"353\":4,\"354\":10,\"357\":3,\"358\":3,\"360\":1,\"364\":3,\"367\":3,\"368\":1,\"373\":1,\"374\":1,\"378\":3,\"382\":2,\"383\":2,\"388\":1,\"389\":1,\"393\":3,\"396\":3,\"397\":6,\"400\":3,\"406\":2,\"414\":1,\"416\":1,\"423\":1,\"438\":1,\"458\":1,\"468\":1,\"469\":2,\"470\":1,\"475\":1,\"477\":1,\"482\":2,\"483\":1,\"484\":1,\"485\":1,\"486\":1,\"491\":1,\"492\":1,\"493\":3,\"494\":1,\"498\":1,\"499\":1,\"501\":1,\"503\":1,\"504\":2,\"505\":1,\"510\":1,\"514\":2,\"525\":2,\"526\":15,\"529\":1,\"531\":2,\"532\":15,\"535\":3,\"537\":2,\"538\":15,\"541\":2,\"543\":2,\"544\":15,\"547\":5,\"553\":2,\"554\":15,\"563\":2,\"564\":15,\"566\":1,\"567\":1,\"577\":1,\"603\":4,\"604\":1,\"612\":1,\"616\":15,\"633\":1,\"644\":1,\"658\":1,\"660\":1,\"701\":1,\"708\":1,\"709\":2,\"716\":1,\"717\":2,\"724\":1,\"745\":1,\"750\":3,\"753\":2,\"768\":1,\"770\":2,\"776\":1,\"779\":1,\"783\":1,\"786\":1,\"788\":6,\"789\":5,\"791\":1,\"797\":1,\"798\":1,\"799\":1,\"808\":1,\"810\":2,\"811\":2,\"812\":2,\"836\":1}}],[\"但未添加\",{\"1\":{\"619\":1}}],[\"但未初始化插件链\",{\"1\":{\"221\":1}}],[\"但实际上这个功能说白了就是个本地账本\",{\"1\":{\"592\":1}}],[\"但实际没有任何变动\",{\"1\":{\"149\":1}}],[\"但交易智能化的前提\",{\"0\":{\"589\":1}}],[\"但在前端方面仍存在一定的人手缺口\",{\"1\":{\"634\":1}}],[\"但在认证系统里面看不到\",{\"1\":{\"567\":1}}],[\"但在这个新版本中\",{\"1\":{\"518\":1}}],[\"但一个快奔\",{\"1\":{\"456\":1}}],[\"但一群人会走得更远\",{\"1\":{\"308\":1}}],[\"但一群人会走的更远\",{\"1\":{\"1\":1,\"407\":1}}],[\"但需要自定义后端的\",{\"1\":{\"431\":1}}],[\"但对实际的开发\",{\"1\":{\"367\":1,\"382\":1}}],[\"但丁\",{\"1\":{\"352\":1}}],[\"但阈值是逐步增长的\",{\"1\":{\"266\":1}}],[\"但其实还有一种思路是从并发数来监控流量\",{\"1\":{\"263\":1}}],[\"但并不影响我们阅读代码\",{\"1\":{\"236\":1}}],[\"但仍有几个点需要着重解释一下\",{\"1\":{\"234\":1}}],[\"但后续服务下线如何维护\",{\"1\":{\"225\":1}}],[\"但这种令牌生成方式在设定阈值特别大时\",{\"1\":{\"251\":1}}],[\"但这种方式还是很傻\",{\"1\":{\"175\":1}}],[\"但这里就有疑问了\",{\"1\":{\"171\":1}}],[\"但我尝试用\",{\"1\":{\"168\":1}}],[\"但多次使用时\",{\"1\":{\"168\":1}}],[\"但主流程就是这些\",{\"1\":{\"168\":1}}],[\"但不管你是否选择赞助\",{\"1\":{\"470\":1,\"477\":1,\"494\":1,\"510\":1}}],[\"但不觉得有多余的代码吗\",{\"1\":{\"173\":1}}],[\"但不影响我们继续分析后面的逻辑\",{\"1\":{\"154\":1}}],[\"但不能被实现该接口的类使用\",{\"1\":{\"81\":1}}],[\"但第1个服务器节点接入\",{\"1\":{\"125\":1}}],[\"但是他们又不完全等同\",{\"1\":{\"792\":1}}],[\"但是有些用户是\",{\"1\":{\"792\":1}}],[\"但是这样又会带来一个新的问题\",{\"1\":{\"791\":1}}],[\"但是这样会引入一个问题\",{\"1\":{\"783\":1}}],[\"但是本次更新是一个长期支持版本\",{\"1\":{\"768\":1}}],[\"但是既然这么多人都问了\",{\"1\":{\"764\":1}}],[\"但是既然我上次已经调查过了\",{\"1\":{\"493\":1}}],[\"但是部分用户反馈他们并没有使用这个\",{\"1\":{\"763\":1}}],[\"但是没有持久化的能力\",{\"1\":{\"763\":1}}],[\"但是可能也带来了一些\",{\"1\":{\"652\":1}}],[\"但是在新版本中\",{\"1\":{\"740\":1}}],[\"但是在社区里有小伙伴碰到真实的场景\",{\"1\":{\"516\":1}}],[\"但是在相同组件复用的情况下\",{\"1\":{\"490\":1}}],[\"但是需要你用redission框架来操作\",{\"1\":{\"503\":1}}],[\"但是不同的语言有不同的语法结构\",{\"1\":{\"502\":1}}],[\"但是之前的版本一直不支持绝对路径的模糊匹配\",{\"1\":{\"520\":1}}],[\"但是之前的版本\",{\"1\":{\"483\":1}}],[\"但是项目并未对\",{\"1\":{\"482\":1}}],[\"但是我会一直打赏\",{\"1\":{\"308\":1}}],[\"但是心意是满满的\",{\"1\":{\"308\":1}}],[\"但是使用\",{\"1\":{\"266\":1}}],[\"但是如果不加保护就有出现多米诺效应导致整个服务不可用\",{\"1\":{\"262\":1}}],[\"但是\",{\"1\":{\"252\":1,\"517\":1,\"783\":1}}],[\"但是即使这样依然不能纵观全局\",{\"1\":{\"231\":1}}],[\"但是细节却非常多\",{\"1\":{\"164\":1}}],[\"但是对调用方来说\",{\"1\":{\"62\":1}}],[\"但是你的方法是执行成功了的\",{\"1\":{\"62\":1}}],[\"但捐赠项目不得从事违法行为或诋毁\",{\"1\":{\"7\":1}}],[\"宣传思想\",{\"1\":{\"792\":1}}],[\"宣传等方面都有优势\",{\"1\":{\"456\":1}}],[\"宣传\",{\"1\":{\"7\":1}}],[\"宣传和项目版本更新日志维护\",{\"1\":{\"6\":1}}],[\"可删除\",{\"1\":{\"828\":1}}],[\"可拖拽图层元素修改元素层级\",{\"1\":{\"828\":1}}],[\"可自定义修改角度\",{\"1\":{\"824\":1}}],[\"可自行扩展\",{\"1\":{\"608\":1}}],[\"可用于企业内部协作的知识库\",{\"1\":{\"831\":1}}],[\"可用于其它操作\",{\"1\":{\"817\":1}}],[\"可用服务列表默认每\",{\"1\":{\"230\":1}}],[\"可插拔\",{\"1\":{\"792\":1}}],[\"可插拔设计势在必行\",{\"1\":{\"792\":1}}],[\"可插拔的设计实在太重要了\",{\"1\":{\"792\":1}}],[\"可视化\",{\"1\":{\"783\":1}}],[\"可视化的服务治理与运维\",{\"1\":{\"277\":1}}],[\"可惜用户提了一些\",{\"1\":{\"720\":1}}],[\"可观测性\",{\"1\":{\"706\":1}}],[\"可观看http\",{\"1\":{\"249\":1}}],[\"可在每次登录时指定\",{\"1\":{\"624\":1}}],[\"可在登录时方便的存储一些客户端特有数据\",{\"1\":{\"624\":1}}],[\"可输出完整\",{\"1\":{\"608\":1}}],[\"可同时使用异构切换\",{\"1\":{\"608\":1}}],[\"可同时构建arm64镜像\",{\"1\":{\"541\":2}}],[\"可控\",{\"1\":{\"591\":1}}],[\"可根据需要自行添加\",{\"1\":{\"584\":1}}],[\"可根据自身实际需求选择\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"可参照\",{\"1\":{\"583\":1}}],[\"可选用脚本书写逻辑\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"可靠性保证\",{\"1\":{\"803\":1}}],[\"可靠性和用户体验\",{\"1\":{\"727\":1}}],[\"可靠性得到大大加强\",{\"1\":{\"717\":1}}],[\"可靠性\",{\"1\":{\"409\":1,\"419\":1}}],[\"可靠消息分布式事务解决方案\",{\"1\":{\"4\":1}}],[\"可清晰的了解\",{\"1\":{\"374\":1,\"389\":1}}],[\"可方便地与系统错误体系融合\",{\"1\":{\"374\":1,\"389\":1}}],[\"可直接调用\",{\"1\":{\"374\":1,\"389\":1}}],[\"可直接使用\",{\"1\":{\"374\":2,\"389\":2}}],[\"可直接集成至系统中使用\",{\"1\":{\"372\":1,\"387\":1}}],[\"可直接用于实际项目或简单改造后构建自己的产品\",{\"1\":{\"370\":1,\"385\":1}}],[\"可直接定位导航至北京丽亭华苑酒店\",{\"1\":{\"12\":1}}],[\"可编译成独立的组件\",{\"1\":{\"366\":1,\"381\":1,\"395\":1,\"402\":1}}],[\"可扩展的大数据解决方案\",{\"1\":{\"336\":1,\"340\":1}}],[\"可扩展性和性能\",{\"1\":{\"89\":1}}],[\"可通过修改配置参数\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"可通过配置动态修改采用策略方式\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"可通过配置动态修改\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"可通过\",{\"1\":{\"283\":1,\"313\":1,\"409\":1,\"419\":1}}],[\"可跳过\",{\"0\":{\"183\":1}}],[\"可考虑优化\",{\"1\":{\"148\":1}}],[\"可重写\",{\"1\":{\"141\":2}}],[\"可能这里需要调用的微服务越来越多\",{\"1\":{\"783\":1}}],[\"可能这部门内容针对熟悉\",{\"1\":{\"64\":1}}],[\"可能你的\",{\"1\":{\"783\":1}}],[\"可能你的方法用了\",{\"1\":{\"62\":1}}],[\"可能兼容问题\",{\"1\":{\"722\":11}}],[\"可能导致异常类无法反序列化问题\",{\"1\":{\"619\":1}}],[\"可能为\",{\"1\":{\"604\":1}}],[\"可能数据源是加密的\",{\"1\":{\"483\":1}}],[\"可能是之前对循环定义的测试用例有些少了\",{\"1\":{\"475\":1}}],[\"可能会存在的越权行为\",{\"1\":{\"619\":1}}],[\"可能会在商业路径上走得更通顺点\",{\"1\":{\"456\":1}}],[\"可能会负载到不同的机器上\",{\"1\":{\"71\":1}}],[\"可能出现流量突然增加时\",{\"1\":{\"263\":1}}],[\"可能就是突发的非常随机的阻塞\",{\"1\":{\"262\":1}}],[\"可能就是在底层用了反射\",{\"1\":{\"166\":1}}],[\"可能与\",{\"1\":{\"232\":2}}],[\"可能存在不均衡的情况\",{\"1\":{\"229\":1}}],[\"可能存在多台机器需要负载均衡的场景\",{\"1\":{\"125\":1}}],[\"可将\",{\"1\":{\"53\":1}}],[\"可以适应不同的网络环境和设备类型\",{\"1\":{\"803\":1}}],[\"可以参考\",{\"1\":{\"788\":1}}],[\"可以参考文档\",{\"1\":{\"335\":1}}],[\"可以去\",{\"1\":{\"720\":1}}],[\"可以去官网或相关的主页进行了解\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"可以快捷将该变量保存到当前\",{\"1\":{\"684\":1}}],[\"可以进行截断设置\",{\"1\":{\"680\":1}}],[\"可以输入\",{\"1\":{\"677\":1}}],[\"可以处理\",{\"1\":{\"605\":1}}],[\"可以轻松地实现实盘网关的任意扩展\",{\"1\":{\"593\":1}}],[\"可以加我微信拉交流群\",{\"1\":{\"587\":1}}],[\"可以加入社群\",{\"1\":{\"415\":1,\"424\":1}}],[\"可以有效提高运行速度并且避免死锁问题\",{\"1\":{\"521\":1}}],[\"可以对链路进行抽象\",{\"1\":{\"518\":1}}],[\"可以通过配置文件控制加载哪些模块\",{\"1\":{\"834\":1}}],[\"可以通过设置liteflow\",{\"1\":{\"491\":1}}],[\"可以通过华为云商店免费使用\",{\"1\":{\"57\":1}}],[\"可以用来回溯整个链路的实际执行情况\",{\"1\":{\"490\":1}}],[\"可以用于提高\",{\"1\":{\"88\":1,\"89\":1}}],[\"可以用于进行\",{\"1\":{\"88\":1}}],[\"可以用于进行微基准测试\",{\"1\":{\"84\":1}}],[\"可以用于限制某个类的子类的数量\",{\"1\":{\"87\":1}}],[\"可以用于定义不可变的数据类\",{\"1\":{\"86\":1}}],[\"可以用于在\",{\"1\":{\"89\":1}}],[\"可以用于在判断对象类型时\",{\"1\":{\"86\":1}}],[\"可以用于在代码中编写多行字符串\",{\"1\":{\"85\":1}}],[\"可以用于在运行时获取常量池中的常量\",{\"1\":{\"84\":1}}],[\"可以用于发送\",{\"1\":{\"83\":1}}],[\"可以用于推断局部变量的类型\",{\"1\":{\"82\":1}}],[\"可以自定义重试次数\",{\"1\":{\"769\":1}}],[\"可以自行扫码加入\",{\"1\":{\"424\":1}}],[\"可以自己提一些好的想法和建议\",{\"1\":{\"42\":1}}],[\"可以扩展自定义线程池执行过程\",{\"1\":{\"420\":1}}],[\"可以支持线程池上下文信息传递\",{\"1\":{\"409\":1,\"419\":1}}],[\"可以交流\",{\"1\":{\"407\":1}}],[\"可以直接用于基于\",{\"1\":{\"374\":1,\"389\":1}}],[\"可以返回更人性化\",{\"1\":{\"372\":1,\"387\":1}}],[\"可以吸引更多用户的青睐\",{\"1\":{\"367\":1,\"382\":1}}],[\"可以以相对便捷的方式切换使用\",{\"1\":{\"362\":1,\"376\":1,\"391\":1,\"399\":1}}],[\"可以成为一款承上启下\",{\"1\":{\"352\":1}}],[\"可以联系\",{\"1\":{\"308\":1}}],[\"可以根据各种条件\",{\"1\":{\"790\":1}}],[\"可以根据设置的权重\",{\"1\":{\"748\":1}}],[\"可以根据已有的方法帮助您快速\",{\"1\":{\"651\":1,\"663\":1,\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"可以根据业务场景选择合适的线程池\",{\"1\":{\"409\":1,\"419\":1}}],[\"可以根据自己需要的功能引用相关的模块即可\",{\"1\":{\"269\":1}}],[\"可以根据配置信息\",{\"1\":{\"160\":1}}],[\"可以理解为针对调用方的方式所针对的不同调用处理\",{\"1\":{\"231\":1}}],[\"可以理解为在请求发起前的前置处理插件\",{\"1\":{\"231\":1}}],[\"可以理解为更细粒度的自定义配置\",{\"1\":{\"115\":1}}],[\"可以保存多对\",{\"1\":{\"195\":1}}],[\"可以说是功能及其单一\",{\"1\":{\"740\":1}}],[\"可以说是\",{\"1\":{\"176\":1}}],[\"可以追溯到\",{\"1\":{\"158\":1}}],[\"可以看一下初始化\",{\"1\":{\"259\":1}}],[\"可以看出ratelimiterplugin限流核心在于令牌桶算法的实现\",{\"1\":{\"241\":1}}],[\"可以看出当时发送事件的类型就是\",{\"1\":{\"154\":1}}],[\"可以看到系统已经自动为初始化了几条端口映射\",{\"1\":{\"584\":1}}],[\"可以看到系统已经自动为管理员初始化了一条\",{\"1\":{\"584\":1}}],[\"可以看到接口中定义了\",{\"1\":{\"156\":1}}],[\"可以看到前台向后台发送了一个\",{\"1\":{\"152\":1}}],[\"可以看到是通过\",{\"1\":{\"130\":1}}],[\"可以看到我启动的这个\",{\"1\":{\"116\":1}}],[\"可以看到\",{\"1\":{\"115\":1,\"131\":1,\"156\":1,\"219\":1,\"220\":1}}],[\"可以看到所有插件都是由两部分组成\",{\"1\":{\"113\":1}}],[\"可以知道\",{\"1\":{\"142\":1}}],[\"可以预见\",{\"1\":{\"135\":1}}],[\"可以继续追溯下它构造器被调用的地方\",{\"1\":{\"130\":1}}],[\"可以得到一些结论\",{\"1\":{\"129\":1}}],[\"可以部署多个服务器节点\",{\"1\":{\"125\":1}}],[\"可以想见\",{\"1\":{\"125\":1}}],[\"可以发现管理控制台\",{\"1\":{\"116\":1}}],[\"可以发现\",{\"1\":{\"109\":1}}],[\"可以实现所有厂商的\",{\"1\":{\"747\":1}}],[\"可以实现负载均衡\",{\"1\":{\"108\":1}}],[\"可以实时反应到网关中去\",{\"1\":{\"92\":1}}],[\"可以观察到请求既有转发到\",{\"1\":{\"108\":1}}],[\"可以观察到网关可以将请求正常转发\",{\"1\":{\"105\":1}}],[\"可以让用户直接在\",{\"1\":{\"92\":1}}],[\"可以使用百度网盘\",{\"1\":{\"808\":1}}],[\"可以使用该工具\",{\"1\":{\"748\":1}}],[\"可以使用下面命令\",{\"1\":{\"448\":1}}],[\"可以使用\",{\"1\":{\"84\":1,\"253\":1,\"580\":1}}],[\"可以这样定义一个字符串类型的局部变量\",{\"1\":{\"82\":1}}],[\"可以更好地管理依赖关系和可见性\",{\"1\":{\"81\":1}}],[\"可以提供你的优秀牛逼轰轰的\",{\"1\":{\"77\":1}}],[\"可以在切面\",{\"1\":{\"816\":1}}],[\"可以在传输过程中对数据进行压缩\",{\"1\":{\"803\":1}}],[\"可以在以下场景中使用\",{\"1\":{\"677\":1}}],[\"可以在官网首先点\",{\"1\":{\"494\":1}}],[\"可以在官网首先点击\",{\"1\":{\"470\":1,\"477\":1,\"510\":1}}],[\"可以在who\",{\"1\":{\"334\":1}}],[\"可以在页面打开或关闭插件\",{\"1\":{\"150\":1}}],[\"可以在运行时动态创建和卸载类\",{\"1\":{\"87\":1}}],[\"可以在非常大的堆上运行\",{\"1\":{\"84\":1}}],[\"可以在不进行垃圾回收的情况下运行应用程序\",{\"1\":{\"83\":1}}],[\"可以在不影响整个\",{\"1\":{\"82\":1}}],[\"可以在数百\",{\"1\":{\"83\":1}}],[\"可以在多个隔离网络部署边缘采集器\",{\"1\":{\"455\":1}}],[\"可以在多个\",{\"1\":{\"82\":1}}],[\"可以在命令行中执行\",{\"1\":{\"81\":1}}],[\"可以在\",{\"1\":{\"77\":1,\"81\":1,\"409\":1,\"419\":1}}],[\"可以配置成\",{\"1\":{\"64\":1}}],[\"可以调大\",{\"1\":{\"64\":2}}],[\"可以把它定义为一款指标监控工具\",{\"1\":{\"53\":1}}],[\"可以点击组织界面\",{\"1\":{\"5\":1}}],[\"rfc3986\",{\"1\":{\"722\":1}}],[\"rfr\",{\"0\":{\"656\":1},\"1\":{\"651\":1}}],[\"ribbon\",{\"1\":{\"702\":1}}],[\"ringbuffer<hmilytransactionevent>\",{\"1\":{\"66\":1}}],[\"ringbuffer\",{\"1\":{\"66\":3}}],[\"rd\",{\"1\":{\"644\":1}}],[\"rj\",{\"1\":{\"567\":1}}],[\"rbac\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"rm\",{\"1\":{\"333\":1}}],[\"rps\",{\"1\":{\"271\":3}}],[\"rpcinvocation\",{\"1\":{\"294\":6}}],[\"rpcexception\",{\"1\":{\"293\":1,\"294\":6}}],[\"rpccontext\",{\"1\":{\"289\":1,\"294\":1}}],[\"rpc的扩展信息\",{\"1\":{\"278\":1}}],[\"rpc类型\",{\"1\":{\"278\":1}}],[\"rpctypeenum\",{\"1\":{\"124\":4,\"126\":5}}],[\"rpctype\",{\"1\":{\"124\":5,\"126\":9,\"223\":1,\"232\":7}}],[\"rpc\",{\"0\":{\"62\":1,\"77\":1,\"293\":1,\"701\":1,\"702\":1},\"1\":{\"4\":1,\"33\":1,\"37\":1,\"61\":3,\"62\":2,\"64\":1,\"65\":1,\"70\":1,\"71\":1,\"74\":1,\"126\":8,\"232\":1,\"237\":2,\"277\":1,\"278\":2,\"289\":2,\"290\":1,\"315\":1,\"706\":4,\"707\":1,\"709\":6,\"710\":1,\"712\":1,\"713\":2,\"714\":1,\"718\":1,\"783\":1}}],[\"rt\",{\"1\":{\"266\":1}}],[\"rsa\",{\"1\":{\"605\":1,\"608\":1}}],[\"rs\",{\"1\":{\"173\":6}}],[\"rkey\",{\"1\":{\"135\":3}}],[\"raincat\",{\"1\":{\"792\":1}}],[\"rar\",{\"1\":{\"724\":1}}],[\"rabin\",{\"1\":{\"406\":1}}],[\"rabbitmq\",{\"1\":{\"368\":2,\"409\":1,\"419\":1,\"445\":1,\"449\":1,\"459\":1}}],[\"ratio\",{\"1\":{\"266\":1}}],[\"rate\",{\"1\":{\"244\":1,\"252\":6,\"266\":2,\"271\":2}}],[\"ratelimiteroperator\",{\"1\":{\"273\":2}}],[\"ratelimiterexecutor\",{\"1\":{\"273\":5}}],[\"ratelimiter<\",{\"1\":{\"270\":1,\"789\":1}}],[\"ratelimiterresponse\",{\"1\":{\"249\":5}}],[\"ratelimiterhandle\",{\"1\":{\"249\":2}}],[\"ratelimiterconfig\",{\"1\":{\"247\":9}}],[\"ratelimiterplugin由于需要对特定规则进行限流\",{\"1\":{\"249\":1}}],[\"ratelimiterplugin\",{\"1\":{\"231\":1}}],[\"ratelimiter\",{\"1\":{\"131\":2,\"231\":1,\"241\":1,\"249\":1,\"269\":1,\"273\":11,\"789\":3}}],[\"randomutils\",{\"1\":{\"272\":1}}],[\"randomloadbalance\",{\"0\":{\"134\":1},\"1\":{\"164\":1,\"229\":2}}],[\"random\",{\"1\":{\"126\":1,\"134\":3,\"179\":1,\"180\":1,\"181\":1,\"229\":7}}],[\"ruoyi\",{\"0\":{\"601\":1,\"608\":1,\"609\":1,\"611\":1},\"1\":{\"607\":2,\"608\":1,\"609\":1,\"610\":4}}],[\"ruoan777\",{\"1\":{\"413\":2}}],[\"runpromise\",{\"1\":{\"637\":1}}],[\"run执行的内容\",{\"1\":{\"273\":1}}],[\"run调用\",{\"1\":{\"273\":1}}],[\"runnable\",{\"1\":{\"144\":5,\"149\":1}}],[\"running\",{\"1\":{\"101\":1,\"109\":2,\"148\":1,\"149\":1,\"208\":1}}],[\"run\",{\"1\":{\"92\":1,\"106\":1,\"144\":5,\"149\":2,\"166\":7,\"167\":1,\"170\":1,\"200\":3,\"208\":2,\"273\":6,\"333\":1,\"420\":1,\"442\":1,\"448\":2,\"457\":3,\"458\":1,\"465\":3,\"581\":1,\"582\":1,\"637\":1,\"815\":1,\"821\":2}}],[\"runtimeexception\",{\"1\":{\"170\":1}}],[\"runtime\",{\"1\":{\"67\":1,\"74\":2,\"430\":2}}],[\"rulematchcache\",{\"1\":{\"313\":1}}],[\"rulemapper\",{\"1\":{\"126\":2}}],[\"rulelog\",{\"1\":{\"234\":2}}],[\"ruleparentpath\",{\"1\":{\"142\":2}}],[\"rules\",{\"1\":{\"129\":5,\"219\":4,\"224\":4,\"234\":5}}],[\"ruleserviceimpl\",{\"1\":{\"126\":1}}],[\"ruleservice\",{\"1\":{\"126\":1,\"200\":1}}],[\"ruleconditiondo\",{\"1\":{\"126\":1}}],[\"ruleconditiondto\",{\"1\":{\"126\":9}}],[\"ruleconditionmapper\",{\"1\":{\"126\":1}}],[\"ruleconditions\",{\"1\":{\"126\":3}}],[\"ruledatahandler\",{\"1\":{\"161\":1,\"162\":1}}],[\"ruledatalist\",{\"1\":{\"157\":2,\"200\":2}}],[\"ruledatarefresh\",{\"1\":{\"148\":1}}],[\"ruledata\",{\"1\":{\"126\":1,\"129\":1,\"131\":1,\"162\":5,\"206\":4,\"219\":1,\"224\":2,\"234\":1,\"235\":1,\"249\":1,\"259\":1,\"266\":18,\"273\":3,\"288\":1}}],[\"ruledto\",{\"1\":{\"126\":11}}],[\"ruledo\",{\"1\":{\"126\":10}}],[\"rulehandle>\",{\"1\":{\"126\":2}}],[\"rulehandle>>\",{\"1\":{\"126\":1}}],[\"rulehandlefactory\",{\"1\":{\"126\":3}}],[\"rulehandle\",{\"1\":{\"126\":12,\"131\":2,\"164\":1,\"219\":4,\"224\":4,\"235\":4}}],[\"rulename\",{\"1\":{\"126\":2}}],[\"rule\",{\"0\":{\"126\":1},\"1\":{\"92\":4,\"126\":12,\"127\":3,\"129\":9,\"131\":2,\"141\":1,\"148\":2,\"154\":2,\"155\":1,\"156\":2,\"157\":2,\"161\":1,\"200\":1,\"201\":1,\"203\":1,\"209\":17,\"210\":1,\"219\":5,\"224\":6,\"234\":7,\"235\":3,\"249\":3,\"257\":1,\"259\":3,\"266\":15,\"273\":8,\"288\":1,\"313\":2,\"315\":1,\"458\":1,\"515\":1,\"520\":2,\"702\":1}}],[\"rc1\",{\"1\":{\"353\":2}}],[\"rc\",{\"1\":{\"79\":2,\"616\":1,\"624\":2}}],[\"r\",{\"1\":{\"66\":2,\"266\":8,\"604\":1}}],[\"roadmap\",{\"0\":{\"548\":1,\"558\":1,\"568\":1}}],[\"rocky\",{\"1\":{\"449\":1}}],[\"rocketmq\",{\"1\":{\"409\":1,\"411\":1,\"419\":1,\"420\":1,\"460\":1}}],[\"router\",{\"1\":{\"606\":1}}],[\"route\",{\"1\":{\"289\":2}}],[\"round\",{\"1\":{\"229\":1}}],[\"roundrobinloadbalance\",{\"0\":{\"135\":1},\"1\":{\"164\":1}}],[\"rollback\",{\"1\":{\"506\":1,\"717\":1}}],[\"rollbackfor\",{\"1\":{\"153\":1,\"209\":1}}],[\"role\",{\"1\":{\"231\":1,\"781\":1,\"816\":1}}],[\"robin\",{\"1\":{\"229\":1}}],[\"rows\",{\"1\":{\"153\":1,\"209\":1}}],[\"row\",{\"1\":{\"126\":2,\"278\":1,\"282\":1}}],[\"rootpath\",{\"1\":{\"64\":1,\"77\":1}}],[\"root\",{\"1\":{\"64\":1,\"74\":1,\"77\":1,\"259\":1,\"324\":1,\"325\":1,\"326\":2,\"432\":1,\"582\":3,\"709\":1,\"741\":1}}],[\"royal\",{\"1\":{\"15\":1}}],[\"revert\",{\"1\":{\"716\":1}}],[\"review\",{\"1\":{\"715\":1}}],[\"renderer\",{\"1\":{\"637\":1,\"644\":1}}],[\"reuse\",{\"1\":{\"458\":1}}],[\"reject\",{\"1\":{\"266\":1,\"420\":1}}],[\"red\",{\"1\":{\"449\":1}}],[\"redhat\",{\"1\":{\"448\":1}}],[\"redick01\",{\"1\":{\"317\":1,\"411\":1}}],[\"redirecthandle\",{\"1\":{\"259\":8}}],[\"redirect<\",{\"1\":{\"255\":1}}],[\"redirecturl\",{\"1\":{\"253\":2}}],[\"redirect\",{\"1\":{\"253\":1,\"254\":2,\"256\":1,\"259\":3}}],[\"redisx\",{\"1\":{\"624\":2}}],[\"redisutils\",{\"1\":{\"618\":2}}],[\"redission\",{\"1\":{\"368\":1}}],[\"redisson\",{\"1\":{\"354\":1,\"397\":1,\"603\":1,\"608\":1,\"616\":1,\"624\":1}}],[\"redisserializationcontext\",{\"1\":{\"247\":1}}],[\"redisserializationcontext<string\",{\"1\":{\"247\":1}}],[\"redisserializer<string>\",{\"1\":{\"247\":1}}],[\"redisconfig\",{\"1\":{\"325\":7}}],[\"redisratelimiter\",{\"1\":{\"249\":2}}],[\"redistemplate\",{\"1\":{\"247\":1,\"608\":1}}],[\"redis\",{\"0\":{\"247\":2,\"503\":1,\"763\":1},\"1\":{\"64\":7,\"65\":1,\"74\":1,\"77\":1,\"243\":3,\"247\":3,\"249\":1,\"250\":1,\"252\":4,\"325\":2,\"326\":1,\"445\":2,\"449\":3,\"459\":2,\"503\":5,\"526\":1,\"532\":1,\"538\":1,\"544\":1,\"554\":1,\"564\":1,\"586\":1,\"608\":6,\"615\":2,\"624\":10,\"706\":1,\"713\":1,\"714\":1,\"754\":1,\"763\":8}}],[\"reduce\",{\"1\":{\"249\":1}}],[\"re\",{\"1\":{\"208\":1}}],[\"reflectutil\",{\"1\":{\"724\":1}}],[\"reflectutils\",{\"1\":{\"294\":1}}],[\"reflection\",{\"1\":{\"171\":1}}],[\"referenceconfig<>\",{\"1\":{\"284\":1}}],[\"referenceconfig<genericservice>\",{\"1\":{\"284\":1,\"289\":1}}],[\"reference\",{\"1\":{\"174\":1,\"284\":6,\"285\":1,\"289\":5,\"702\":1}}],[\"refreshscope\",{\"1\":{\"468\":1}}],[\"refreshed\",{\"1\":{\"252\":4}}],[\"refreshplugindataall\",{\"1\":{\"148\":2}}],[\"refresh\",{\"1\":{\"92\":2,\"148\":8,\"154\":3,\"161\":1,\"162\":1,\"200\":2,\"271\":1,\"357\":3,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"refreshlocalcache\",{\"1\":{\"92\":2}}],[\"relate\",{\"1\":{\"458\":1}}],[\"relation\",{\"1\":{\"314\":1}}],[\"reload\",{\"1\":{\"167\":2}}],[\"release<\",{\"1\":{\"788\":2}}],[\"release版本\",{\"0\":{\"699\":1,\"777\":1}}],[\"releases\",{\"1\":{\"331\":1,\"354\":1,\"443\":1}}],[\"released\",{\"0\":{\"310\":1}}],[\"release\",{\"0\":{\"443\":1,\"691\":1,\"700\":1,\"778\":1,\"830\":1},\"1\":{\"79\":3,\"208\":10,\"354\":1,\"397\":1,\"458\":1,\"583\":1,\"585\":1}}],[\"recipes<\",{\"1\":{\"280\":1}}],[\"receiveconfiginfo\",{\"1\":{\"210\":1}}],[\"received\",{\"1\":{\"156\":4}}],[\"recycleperiod\",{\"1\":{\"135\":1}}],[\"records\",{\"1\":{\"79\":1,\"86\":3,\"88\":4,\"90\":2}}],[\"recovery\",{\"1\":{\"74\":1}}],[\"recoverdelaytime\",{\"1\":{\"64\":2,\"74\":3,\"77\":1,\"709\":1}}],[\"rewritebatchedstatements=true\",{\"1\":{\"834\":1}}],[\"rewrite\",{\"1\":{\"131\":2}}],[\"region\",{\"1\":{\"458\":1}}],[\"registry\",{\"1\":{\"333\":1,\"580\":1,\"581\":1,\"582\":1}}],[\"registryconfig\",{\"1\":{\"284\":1}}],[\"registereventhandler\",{\"1\":{\"324\":1,\"325\":1}}],[\"registereddrivers\",{\"1\":{\"170\":2,\"171\":1}}],[\"registerdriver\",{\"1\":{\"170\":4}}],[\"registerrule\",{\"1\":{\"126\":2}}],[\"registerselector\",{\"1\":{\"123\":1,\"124\":2,\"125\":1}}],[\"registerspringmvc\",{\"1\":{\"122\":3}}],[\"register\",{\"0\":{\"122\":1},\"1\":{\"121\":1,\"122\":4,\"124\":3,\"126\":2,\"127\":1,\"150\":1,\"170\":1,\"200\":1,\"205\":1}}],[\"registerparticipant\",{\"1\":{\"70\":1}}],[\"regex\",{\"1\":{\"114\":1}}],[\"realize\",{\"1\":{\"294\":1}}],[\"realpath\",{\"1\":{\"206\":3}}],[\"realurl\",{\"1\":{\"131\":2,\"219\":2,\"224\":2,\"232\":1,\"235\":2}}],[\"readconfig\",{\"1\":{\"773\":2}}],[\"readme增加安装介绍链接\",{\"1\":{\"541\":1}}],[\"readme\",{\"1\":{\"458\":1,\"604\":1}}],[\"readobject\",{\"1\":{\"294\":1}}],[\"readdata\",{\"1\":{\"205\":1,\"206\":1}}],[\"read\",{\"1\":{\"109\":2}}],[\"reactor\",{\"1\":{\"311\":1,\"790\":1}}],[\"reactiveredistemplate<>\",{\"1\":{\"247\":1}}],[\"reactiveredistemplate<string\",{\"1\":{\"247\":1}}],[\"reactiveredistemplate\",{\"1\":{\"247\":4,\"249\":1}}],[\"reactive\",{\"1\":{\"136\":1}}],[\"react\",{\"0\":{\"640\":1,\"647\":1},\"1\":{\"43\":1}}],[\"requiredargsconstructor\",{\"1\":{\"162\":1}}],[\"requirenonnull\",{\"1\":{\"153\":1,\"167\":1,\"219\":1,\"224\":1,\"235\":1,\"259\":1,\"273\":1}}],[\"requesturl\",{\"1\":{\"740\":1}}],[\"request是一个类似于\",{\"1\":{\"675\":1,\"683\":1,\"692\":1}}],[\"request更新主要内容如下\",{\"1\":{\"667\":1,\"675\":1,\"683\":1,\"692\":1}}],[\"requestid\",{\"1\":{\"474\":2}}],[\"requestattributes\",{\"1\":{\"430\":2}}],[\"requestheaders\",{\"1\":{\"315\":1}}],[\"requestparam\",{\"1\":{\"272\":1}}],[\"requested\",{\"1\":{\"252\":3}}],[\"requestmapping\",{\"1\":{\"144\":1,\"153\":1,\"709\":2,\"740\":2}}],[\"requestbodyspec\",{\"1\":{\"136\":6,\"236\":6}}],[\"requestbody\",{\"1\":{\"122\":1,\"153\":1}}],[\"requests\",{\"0\":{\"805\":1},\"1\":{\"109\":4,\"249\":3,\"266\":4,\"271\":1,\"805\":1}}],[\"request\",{\"0\":{\"650\":1,\"662\":1,\"666\":1,\"674\":1,\"682\":1,\"691\":1},\"1\":{\"105\":1,\"108\":6,\"136\":3,\"144\":5,\"148\":1,\"149\":1,\"220\":2,\"232\":3,\"236\":1,\"259\":3,\"266\":3,\"273\":3,\"312\":1,\"316\":1,\"651\":4,\"652\":1,\"661\":1,\"663\":4,\"665\":1,\"667\":3,\"673\":1,\"675\":2,\"683\":2,\"688\":1,\"692\":2,\"816\":3}}],[\"req\",{\"1\":{\"109\":2,\"624\":2}}],[\"reimplement\",{\"1\":{\"85\":1}}],[\"repeatsubmitaspect\",{\"1\":{\"617\":1}}],[\"replenishrate\",{\"1\":{\"249\":2}}],[\"replace\",{\"1\":{\"231\":2,\"723\":1}}],[\"replication\",{\"1\":{\"171\":3}}],[\"repo=hertzbeat\",{\"1\":{\"461\":1}}],[\"repository\",{\"1\":{\"354\":1,\"709\":2,\"713\":1}}],[\"repositorysuffix\",{\"1\":{\"74\":1}}],[\"repositorysupportenum\",{\"1\":{\"74\":2}}],[\"repositorysupport\",{\"1\":{\"64\":6,\"74\":3,\"77\":5}}],[\"reported\",{\"1\":{\"458\":1}}],[\"report\",{\"1\":{\"208\":1,\"458\":2}}],[\"represents\",{\"1\":{\"74\":1}}],[\"resetexception\",{\"1\":{\"809\":1}}],[\"resilience\",{\"1\":{\"269\":1}}],[\"resilience4jplugn\",{\"1\":{\"273\":2}}],[\"resilience4jplugin\",{\"1\":{\"231\":1,\"273\":3}}],[\"resilience4jregistryfactory\",{\"1\":{\"273\":4}}],[\"resilience4jconf\",{\"1\":{\"273\":11}}],[\"resilience4jbuilder\",{\"1\":{\"273\":3}}],[\"resilience4jhandler\",{\"1\":{\"273\":1}}],[\"resilience4jhandle\",{\"1\":{\"271\":35,\"272\":2,\"273\":7}}],[\"resilience4j处理详解\",{\"1\":{\"270\":1}}],[\"resilience4j<\",{\"1\":{\"269\":1}}],[\"resilience4j\",{\"0\":{\"269\":1,\"270\":1,\"273\":1},\"1\":{\"131\":2,\"231\":1,\"268\":3,\"269\":3,\"270\":2,\"273\":2}}],[\"resilence4j\",{\"1\":{\"269\":1}}],[\"resulthandlers\",{\"1\":{\"259\":2}}],[\"resulthandler\",{\"1\":{\"259\":1}}],[\"results\",{\"1\":{\"249\":3}}],[\"resultset\",{\"1\":{\"173\":2}}],[\"resultflux\",{\"1\":{\"249\":2}}],[\"resultenum\",{\"1\":{\"236\":2,\"289\":1}}],[\"resultlist\",{\"1\":{\"227\":3}}],[\"result\",{\"1\":{\"137\":4,\"148\":3,\"153\":3,\"158\":2,\"161\":2,\"227\":3,\"235\":2,\"236\":3,\"237\":4,\"249\":1,\"259\":2,\"266\":3,\"288\":4,\"289\":3,\"290\":8,\"293\":1,\"294\":3}}],[\"responseparameters\",{\"1\":{\"315\":1}}],[\"response\",{\"0\":{\"687\":1},\"1\":{\"136\":1,\"137\":9,\"144\":5,\"208\":2,\"231\":2,\"236\":3,\"237\":9,\"249\":3,\"259\":4,\"289\":1,\"474\":1,\"683\":1}}],[\"res\",{\"1\":{\"136\":1,\"236\":3}}],[\"resource目录下\",{\"1\":{\"709\":1}}],[\"resourcename\",{\"1\":{\"266\":2}}],[\"resources\",{\"1\":{\"79\":1,\"81\":2,\"183\":1,\"198\":2,\"208\":2,\"575\":1}}],[\"resource\",{\"1\":{\"74\":1,\"208\":1,\"266\":1,\"357\":2,\"364\":2,\"378\":2,\"393\":2,\"400\":2}}],[\"restful\",{\"1\":{\"651\":5,\"652\":1,\"663\":5,\"667\":4,\"675\":4,\"683\":4,\"692\":4}}],[\"restful风格的匹配\",{\"1\":{\"114\":1}}],[\"restart=always\",{\"1\":{\"581\":1,\"582\":1}}],[\"rest新增\",{\"1\":{\"535\":1}}],[\"rest和scim接口日志打印\",{\"1\":{\"529\":1}}],[\"resttemplate\",{\"1\":{\"368\":1}}],[\"restricted\",{\"1\":{\"245\":1}}],[\"restclientexception\",{\"1\":{\"148\":1,\"149\":1}}],[\"restcontroller\",{\"1\":{\"144\":1,\"153\":1,\"709\":1,\"740\":1,\"816\":1}}],[\"rest\",{\"1\":{\"4\":1,\"339\":1,\"368\":1,\"370\":3,\"372\":1,\"374\":4,\"385\":3,\"387\":1,\"389\":4,\"397\":4}}],[\"remote\",{\"1\":{\"70\":1,\"709\":2}}],[\"removeclass\",{\"1\":{\"290\":1}}],[\"removerule\",{\"1\":{\"266\":1}}],[\"removeall\",{\"1\":{\"209\":1}}],[\"removeend\",{\"1\":{\"148\":1}}],[\"removeif\",{\"1\":{\"135\":1}}],[\"removebykey\",{\"1\":{\"71\":1}}],[\"remove\",{\"1\":{\"67\":1,\"71\":1,\"136\":1,\"144\":4,\"158\":2,\"227\":1,\"236\":1,\"458\":2,\"620\":2}}],[\"retentionpolicy\",{\"1\":{\"430\":2}}],[\"retention\",{\"1\":{\"430\":2}}],[\"ret\",{\"1\":{\"289\":5}}],[\"retries=\",{\"1\":{\"702\":1}}],[\"retrieved\",{\"1\":{\"74\":1}}],[\"retrywhen\",{\"1\":{\"236\":1}}],[\"retrytimes\",{\"1\":{\"105\":1,\"108\":6,\"149\":3,\"236\":6}}],[\"retry\",{\"1\":{\"74\":1,\"126\":1,\"219\":1,\"224\":1,\"235\":1,\"236\":2,\"269\":1}}],[\"retrymax\",{\"1\":{\"64\":3,\"74\":2,\"77\":1,\"236\":1,\"709\":1}}],[\"returnvalue\",{\"1\":{\"67\":3}}],[\"return\",{\"1\":{\"66\":1,\"67\":1,\"70\":3,\"71\":9,\"92\":1,\"122\":3,\"123\":2,\"124\":2,\"125\":2,\"126\":4,\"129\":8,\"130\":7,\"131\":1,\"133\":2,\"134\":2,\"135\":2,\"136\":4,\"137\":4,\"141\":2,\"148\":4,\"153\":6,\"156\":7,\"158\":1,\"160\":1,\"161\":2,\"164\":1,\"167\":8,\"170\":1,\"171\":4,\"176\":2,\"179\":1,\"181\":1,\"183\":4,\"191\":1,\"195\":3,\"200\":7,\"205\":4,\"206\":1,\"209\":2,\"210\":4,\"219\":3,\"220\":6,\"224\":3,\"225\":1,\"227\":1,\"228\":6,\"229\":5,\"231\":5,\"232\":1,\"234\":6,\"235\":3,\"236\":4,\"237\":4,\"249\":6,\"252\":1,\"259\":8,\"266\":9,\"271\":2,\"272\":1,\"273\":9,\"282\":1,\"286\":3,\"287\":5,\"288\":3,\"289\":2,\"290\":3,\"293\":2,\"294\":2,\"458\":1,\"709\":1,\"773\":2,\"816\":5}}],[\"rwby\",{\"1\":{\"30\":1}}],[\"史上功能最全的\",{\"1\":{\"4\":1}}],[\"一行代码将文件存储到本地\",{\"1\":{\"808\":1}}],[\"一站式文件存储\",{\"0\":{\"807\":1}}],[\"一站式问题定位解决平台\",{\"0\":{\"341\":1}}],[\"一旦开启就是全局的拦截\",{\"1\":{\"750\":1}}],[\"一旦发布\",{\"1\":{\"79\":1}}],[\"一介绍了\",{\"1\":{\"741\":1}}],[\"一部分\",{\"1\":{\"709\":1}}],[\"一切就交给\",{\"1\":{\"710\":1}}],[\"一切都在统一的平台上高效完成\",{\"1\":{\"628\":1}}],[\"一切还得从\",{\"1\":{\"225\":1}}],[\"一同解决问题\",{\"1\":{\"635\":1}}],[\"一同分享\",{\"1\":{\"627\":1}}],[\"一同停止更新但还会持续维护修复\",{\"1\":{\"612\":1}}],[\"一级菜单无法显示问题\",{\"1\":{\"619\":1}}],[\"一夏\",{\"1\":{\"617\":1}}],[\"一夏千晨\",{\"1\":{\"308\":1}}],[\"一语双关\",{\"1\":{\"501\":1}}],[\"一键搭建所有环境\",{\"1\":{\"608\":1}}],[\"一键生成所有\",{\"1\":{\"608\":1}}],[\"一键部署\",{\"0\":{\"580\":1},\"1\":{\"461\":1,\"577\":1}}],[\"一键开通接入存储指标数据\",{\"1\":{\"442\":1}}],[\"一波来支持我们哦\",{\"1\":{\"459\":1}}],[\"一波来支持我们\",{\"1\":{\"402\":1}}],[\"一方面是以\",{\"1\":{\"396\":1}}],[\"一人一码机制\",{\"1\":{\"357\":1,\"364\":1,\"378\":1,\"393\":1,\"400\":1}}],[\"一款强大的自动化测试工具\",{\"1\":{\"627\":1}}],[\"一款社区驱动型优秀的规则引擎框架\",{\"0\":{\"479\":1}}],[\"一款企业级微服务架构和服务能力开发平台\",{\"1\":{\"351\":1}}],[\"一款使用\",{\"1\":{\"311\":1}}],[\"一款简而轻的低侵入式在线构建\",{\"1\":{\"4\":1}}],[\"一朵云\",{\"1\":{\"308\":1}}],[\"一条小路的距离\",{\"1\":{\"308\":1}}],[\"一条小青龙\",{\"1\":{\"308\":1}}],[\"一如既往的支持\",{\"1\":{\"308\":1}}],[\"一直在做架构迭代\",{\"0\":{\"589\":1}}],[\"一直是单机版本\",{\"1\":{\"453\":1}}],[\"一直想做开源\",{\"1\":{\"308\":1}}],[\"一直没有被选中的节点\",{\"1\":{\"135\":1}}],[\"一只想要奋斗的咸鱼\",{\"1\":{\"308\":1}}],[\"一包辣条奉上\",{\"1\":{\"308\":1}}],[\"一段时间后如果探测到服务恢复了再将流量发送过去\",{\"1\":{\"264\":1}}],[\"一般是触发熔断后的一段时间内服务处于熔断状态不提供服务\",{\"1\":{\"264\":1}}],[\"一般减缓请求量就会自动修复\",{\"1\":{\"262\":1}}],[\"一般来说\",{\"1\":{\"116\":1}}],[\"一种情况是在比如双\",{\"1\":{\"262\":1}}],[\"一种把\",{\"1\":{\"253\":1}}],[\"一种是有个线程不断生成令牌\",{\"1\":{\"251\":1}}],[\"一种动态替换发现的机制\",{\"1\":{\"165\":1}}],[\"一共获取了两个类型的\",{\"1\":{\"250\":1}}],[\"一共有\",{\"1\":{\"156\":1,\"514\":1}}],[\"一样\",{\"1\":{\"220\":1}}],[\"一层缓存\",{\"1\":{\"178\":1}}],[\"一是启动时拉取\",{\"1\":{\"147\":1}}],[\"一是请求路径与选择器和规则的匹配\",{\"1\":{\"129\":1}}],[\"一边遍历一边剔除元素\",{\"1\":{\"144\":1}}],[\"一次增加就远远超越其他节点\",{\"1\":{\"135\":1}}],[\"一找果不其然\",{\"1\":{\"92\":1}}],[\"一\",{\"0\":{\"39\":1,\"112\":1,\"198\":1,\"204\":1,\"213\":1,\"356\":1}}],[\"一起为往圣继绝学\",{\"1\":{\"765\":1}}],[\"一起贡献\",{\"1\":{\"711\":1,\"725\":1}}],[\"一起创造美好未来\",{\"1\":{\"634\":1}}],[\"一起来探索平台更多的可能性\",{\"1\":{\"599\":1}}],[\"一起完善项目\",{\"1\":{\"587\":1}}],[\"一起喵喵喵喵喵~\",{\"1\":{\"308\":1}}],[\"一起探索今夏的无限可能\",{\"1\":{\"36\":1}}],[\"一起进步\",{\"1\":{\"18\":1}}],[\"一个好的开源项目\",{\"1\":{\"792\":1}}],[\"一个好的开源项目生态才能吸引到其它贡献者贡献和分享\",{\"1\":{\"456\":1}}],[\"一个入门简单\",{\"1\":{\"642\":1,\"649\":1}}],[\"一个策略的代码逻辑大概是三百行\",{\"1\":{\"590\":1}}],[\"一个策略从构思到完成编码\",{\"1\":{\"590\":1}}],[\"一个量化交易平台的基础需求无非是四个\",{\"1\":{\"589\":1}}],[\"一个高速迭代\",{\"0\":{\"512\":1}}],[\"一个开源框架的上限是看这个框架所解决的问题和这个框架提供的特性和设计\",{\"1\":{\"507\":1}}],[\"一个parallel关键字搞定\",{\"1\":{\"505\":1}}],[\"一个maxwaitseconds关键字可对任意的组件\",{\"1\":{\"504\":1}}],[\"一个人可能走的更快\",{\"1\":{\"308\":1}}],[\"一个人或许能走的更快\",{\"1\":{\"1\":1,\"407\":1}}],[\"一个基于\",{\"1\":{\"237\":1}}],[\"一个重要的原因是\",{\"1\":{\"168\":1}}],[\"一个\",{\"1\":{\"125\":1,\"270\":2}}],[\"一个接口\",{\"1\":{\"121\":1}}],[\"一个业务下面配置相同\",{\"1\":{\"116\":1}}],[\"一个选择器对应多种规则\",{\"1\":{\"113\":1}}],[\"一个插件有多个选择器\",{\"1\":{\"113\":1}}],[\"一个相关的属性配置\",{\"1\":{\"92\":1}}],[\"一个定时任务线程池\",{\"1\":{\"92\":1}}],[\"一个一个的去请求配置文件配的地址\",{\"1\":{\"92\":1}}],[\"一个注解\",{\"1\":{\"64\":1}}],[\"一个监控类型对应一个监控模版\",{\"1\":{\"54\":1}}],[\"一个使\",{\"1\":{\"4\":1}}],[\"框架核心\",{\"1\":{\"802\":1}}],[\"框架核心功能都提供\",{\"1\":{\"409\":1,\"419\":1}}],[\"框架使用者的尊重\",{\"1\":{\"792\":1}}],[\"框架内部的缓存实现将被替代\",{\"1\":{\"763\":1}}],[\"框架已经得到了多家军工企业的青睐\",{\"1\":{\"746\":1}}],[\"框架支持的更改\",{\"1\":{\"778\":1}}],[\"框架支持\",{\"0\":{\"746\":1}}],[\"框架自定义\",{\"1\":{\"713\":1}}],[\"框架会默认初始化好\",{\"1\":{\"709\":1}}],[\"框架会使用指定的路由算法把子任务分发给这些机器\",{\"1\":{\"406\":1}}],[\"框架以及\",{\"0\":{\"701\":1}}],[\"框架功能结构图\",{\"1\":{\"625\":1}}],[\"框架针对踢人下线\",{\"1\":{\"624\":1}}],[\"框架文档\",{\"0\":{\"621\":1}}],[\"框架为其适配\",{\"1\":{\"608\":1}}],[\"框架还为其扩展了在线日志查看监控\",{\"1\":{\"608\":1}}],[\"框架对其增加了很多功能\",{\"1\":{\"608\":1}}],[\"框架对其进行了扩展\",{\"1\":{\"608\":1}}],[\"框架的支持\",{\"1\":{\"712\":1,\"713\":1,\"718\":1}}],[\"框架的系统日志\",{\"1\":{\"491\":1}}],[\"框架的\",{\"1\":{\"431\":1}}],[\"框架的原理与实现\",{\"1\":{\"165\":1}}],[\"框架的原因\",{\"0\":{\"72\":1}}],[\"框架提供的线程池实现\",{\"1\":{\"409\":1,\"419\":1}}],[\"框架提供了非常强大且方便的表达式来编排任务\",{\"1\":{\"406\":1}}],[\"框架是支持暂停执行中的任务\",{\"1\":{\"406\":1}}],[\"框架新版特性进行代码编写\",{\"1\":{\"356\":1,\"395\":1,\"402\":1}}],[\"框架去引入不同的\",{\"0\":{\"77\":1}}],[\"框架包并没有上传到\",{\"1\":{\"73\":1}}],[\"框架\",{\"1\":{\"4\":2,\"46\":1,\"65\":1,\"608\":2,\"706\":1}}],[\"高扩展\",{\"1\":{\"608\":1,\"792\":1}}],[\"高\",{\"1\":{\"526\":5,\"532\":5,\"538\":5,\"544\":5,\"554\":5,\"564\":5}}],[\"高低版本兼容性报错问题\",{\"1\":{\"421\":1}}],[\"高可靠\",{\"1\":{\"712\":1}}],[\"高可靠性\",{\"1\":{\"706\":1}}],[\"高可扩展\",{\"1\":{\"409\":1,\"419\":1}}],[\"高可用集群\",{\"1\":{\"320\":1}}],[\"高可用可拓展的\",{\"1\":{\"4\":1}}],[\"高度可扩展的\",{\"1\":{\"783\":1}}],[\"高度可扩展能力\",{\"1\":{\"277\":1}}],[\"高度模块化和可配置化\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"高级特性\",{\"0\":{\"325\":1}}],[\"高于阈值时直接拒接服务\",{\"1\":{\"263\":1}}],[\"高性能\",{\"1\":{\"452\":2,\"464\":1,\"706\":1,\"707\":1}}],[\"高性能集群\",{\"0\":{\"454\":1},\"1\":{\"451\":1,\"463\":1}}],[\"高性能异步分布式事务tcc框架\",{\"0\":{\"65\":1}}],[\"高性能一站式分布式事务解决方案\",{\"1\":{\"4\":1}}],[\"高并发的时候请调大\",{\"1\":{\"64\":1}}],[\"高并发的时候\",{\"1\":{\"64\":1}}],[\"高并发事务处理\",{\"0\":{\"60\":1}}],[\"高效和便捷的工具方法\",{\"1\":{\"719\":1}}],[\"高效\",{\"1\":{\"46\":1,\"336\":1,\"340\":1}}],[\"高层的\",{\"1\":{\"4\":1}}],[\"关联对象类型\",{\"1\":{\"816\":1}}],[\"关联对象id\",{\"1\":{\"816\":1}}],[\"关系数据库支持\",{\"1\":{\"608\":1}}],[\"关注请移步\",{\"1\":{\"353\":1}}],[\"关注量大于\",{\"1\":{\"299\":1}}],[\"关注量\",{\"1\":{\"4\":1}}],[\"关闭多租户\",{\"1\":{\"619\":1}}],[\"关闭其他\",{\"1\":{\"606\":1}}],[\"关闭操作异常问题\",{\"1\":{\"383\":1}}],[\"关闭\",{\"1\":{\"270\":1}}],[\"关键字带空格搜索\",{\"1\":{\"667\":1}}],[\"关键字包裹组件\",{\"1\":{\"519\":1}}],[\"关键代码\",{\"1\":{\"183\":1}}],[\"关键就在接下来的两个子模块中\",{\"1\":{\"175\":1}}],[\"关键就在于\",{\"1\":{\"164\":1}}],[\"关键类就是\",{\"1\":{\"170\":1}}],[\"关键步骤\",{\"1\":{\"167\":1}}],[\"关键的第三步\",{\"1\":{\"135\":1}}],[\"关于使用强化学习来进行策略运算的研究\",{\"1\":{\"599\":1}}],[\"关于使用\",{\"0\":{\"780\":1},\"1\":{\"599\":1}}],[\"关于组件回滚的详细文档请参考官网文档中的高级特性\",{\"1\":{\"506\":1}}],[\"关于异步循环的详细文档请参考官网文档中的高级特性\",{\"1\":{\"505\":1}}],[\"关于这块的详细文档请参考官网文档中的高级特性\",{\"1\":{\"504\":1}}],[\"关于注解声明式使用场景liteflowmethodenum增加getdisplayname\",{\"1\":{\"492\":1}}],[\"关于加群的方式\",{\"1\":{\"471\":1,\"478\":1,\"495\":1,\"511\":1,\"523\":1}}],[\"关于限流算法常见的有四种实现令牌桶算法\",{\"1\":{\"241\":1}}],[\"关于什么时候是\",{\"1\":{\"158\":1}}],[\"关于\",{\"0\":{\"0\":1,\"62\":1,\"311\":1,\"405\":1},\"1\":{\"57\":1,\"293\":1,\"502\":1,\"503\":1,\"612\":1}}],[\"是对源码学习中\",{\"1\":{\"792\":1}}],[\"是可插拔的基石\",{\"1\":{\"792\":1}}],[\"是热插拔么\",{\"1\":{\"789\":1}}],[\"是经历过\",{\"1\":{\"786\":1}}],[\"是非结构向数据\",{\"1\":{\"653\":1}}],[\"是为了解决在软件开发旅程中测试流程管理和执行的复杂挑战而诞生的\",{\"1\":{\"627\":1}}],[\"是为扩展更多功能\",{\"1\":{\"395\":1,\"402\":1}}],[\"是重写\",{\"1\":{\"607\":1}}],[\"是交易的程序化与自动化\",{\"0\":{\"589\":1}}],[\"是业界领先的\",{\"1\":{\"525\":1,\"531\":1,\"537\":1,\"543\":1,\"553\":1,\"563\":1}}],[\"是繁琐了点\",{\"1\":{\"515\":1}}],[\"是需要开发者自己手动的去刷新的\",{\"1\":{\"515\":1}}],[\"是天然为支持分布式长任务执行而设计的\",{\"1\":{\"405\":1}}],[\"是在\",{\"1\":{\"359\":1,\"379\":1,\"394\":1,\"401\":1}}],[\"是以一位大人物为标志的\",{\"1\":{\"352\":1}}],[\"是新技术开发应用的典型的\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"是帮助快速跨越架构技术选型\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"是白菜\",{\"1\":{\"308\":1}}],[\"是阿里开源的面向分布式服务架构的流量控制组件\",{\"1\":{\"264\":1}}],[\"是按秒来生成的\",{\"1\":{\"252\":1}}],[\"是枚举实现的单例模式\",{\"1\":{\"247\":1}}],[\"是你允许用户每秒执行多少请求\",{\"1\":{\"241\":1}}],[\"是允许用户在一秒钟内执行的最大请求数\",{\"1\":{\"241\":1}}],[\"是从exchange上下文中获取到的\",{\"1\":{\"235\":1}}],[\"是针对于各个调用方返回结果处理的\",{\"1\":{\"231\":1}}],[\"是将变化封装在插件里面\",{\"1\":{\"215\":1}}],[\"是启动不起来的\",{\"1\":{\"208\":1}}],[\"是没有元数据的\",{\"1\":{\"208\":1}}],[\"是直接触发到检索\",{\"1\":{\"180\":1}}],[\"是依靠三种不同类型的缓存\",{\"1\":{\"178\":1}}],[\"是如何拦截泛化调用\",{\"0\":{\"293\":1}}],[\"是如何使用\",{\"1\":{\"261\":1}}],[\"是如何感知网关数据变化的\",{\"0\":{\"206\":1}}],[\"是如何解决这两个问题的\",{\"1\":{\"175\":1}}],[\"是如何实现插件化设计的呢\",{\"1\":{\"213\":1}}],[\"是如何实现这块的\",{\"1\":{\"170\":1}}],[\"是如何实现的\",{\"1\":{\"144\":1}}],[\"是自己设计的\",{\"1\":{\"174\":1}}],[\"是自定义流量\",{\"1\":{\"114\":1}}],[\"是网关端构建\",{\"1\":{\"161\":1}}],[\"是网关高性能的关键\",{\"1\":{\"112\":1}}],[\"是怎么被调用到的\",{\"1\":{\"144\":1}}],[\"是怎么处理的\",{\"0\":{\"62\":1}}],[\"是好人做到底\",{\"1\":{\"142\":1}}],[\"是观察者模式的一个实现\",{\"1\":{\"124\":1}}],[\"是指根据你请求的真实host\",{\"1\":{\"114\":1}}],[\"是指根据你请求的真实ip\",{\"1\":{\"114\":1}}],[\"是指根据uri的查询条件来进行筛选流量\",{\"1\":{\"114\":1}}],[\"是指根据请求头里面的字段来筛选流量\",{\"1\":{\"114\":1}}],[\"是指你根据uri的方式来筛选流量\",{\"1\":{\"114\":1}}],[\"是指下面多个条件是按照and\",{\"1\":{\"114\":1}}],[\"是全流量\",{\"1\":{\"114\":1}}],[\"是不是很酷\",{\"1\":{\"520\":1}}],[\"是不是很简单\",{\"1\":{\"505\":1}}],[\"是不是很兴奋\",{\"1\":{\"124\":1}}],[\"是不是\",{\"1\":{\"158\":1}}],[\"是不是设置个最后更新时间\",{\"1\":{\"143\":1,\"145\":1}}],[\"是不是可以考虑挪出去一次性批量插入\",{\"1\":{\"124\":1,\"126\":1}}],[\"是不是看到了熟悉了方法了\",{\"1\":{\"92\":1}}],[\"是不是已经跃跃欲试了\",{\"1\":{\"36\":1}}],[\"是否会支持其他的通知\",{\"1\":{\"764\":1}}],[\"是否对自动化测试领域有浓厚兴趣\",{\"1\":{\"634\":1}}],[\"是否支持\",{\"1\":{\"624\":1}}],[\"是否有效\",{\"1\":{\"617\":1}}],[\"是否启用ssl\",{\"1\":{\"585\":1}}],[\"是否需要验证码的配置\",{\"1\":{\"535\":1}}],[\"是否应该想一想你付出给开源软件了什么而不是一味的索取\",{\"1\":{\"456\":1}}],[\"是否遇到了重复告警频繁发送\",{\"1\":{\"448\":1}}],[\"是否\",{\"1\":{\"287\":1}}],[\"是否自动从open状态转换为half\",{\"1\":{\"270\":1}}],[\"是否存在限流配置实例\",{\"1\":{\"247\":1}}],[\"是否为异常值\",{\"1\":{\"624\":1}}],[\"是否为空\",{\"1\":{\"288\":1}}],[\"是否为\",{\"1\":{\"228\":1}}],[\"是否符合其所在\",{\"1\":{\"171\":1}}],[\"是否每次调用\",{\"1\":{\"166\":1}}],[\"是否与选择器匹配\",{\"1\":{\"129\":1}}],[\"是否已经注册过\",{\"1\":{\"123\":1,\"125\":1}}],[\"是否开启无限重连\",{\"1\":{\"574\":1}}],[\"是否开启sql数据轮询自动刷新机制\",{\"1\":{\"515\":1}}],[\"是否开启熔断\",{\"1\":{\"265\":1,\"270\":1}}],[\"是否开启\",{\"1\":{\"114\":1,\"264\":1}}],[\"是否开启aop切面\",{\"1\":{\"74\":1}}],[\"是否关闭\",{\"1\":{\"92\":1}}],[\"是最值得关注的特性之一\",{\"1\":{\"86\":1,\"87\":1,\"89\":1}}],[\"是通过所有验证和测试阶段的最后一个发行候选版\",{\"1\":{\"79\":1}}],[\"是具备成为稳定产品的潜力的\",{\"1\":{\"79\":1}}],[\"是异步保存日志的\",{\"0\":{\"64\":1}}],[\"是和你的应用\",{\"1\":{\"63\":1}}],[\"是采用领域驱动模型\",{\"1\":{\"351\":1,\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"是采用\",{\"1\":{\"61\":1}}],[\"是一款面向物联网设备运营商的开源物联网设备调试系统\",{\"1\":{\"794\":1}}],[\"是一款企业级微服务架构和服务能力开发平台\",{\"1\":{\"358\":1,\"367\":1,\"382\":1,\"396\":1}}],[\"是一款基于\",{\"1\":{\"336\":1,\"340\":1,\"576\":1}}],[\"是一款提供宕机续读\",{\"1\":{\"320\":1}}],[\"是一款高性能\",{\"1\":{\"277\":1,\"712\":1}}],[\"是一款由国内开发者打造并完全开源的\",{\"1\":{\"46\":1}}],[\"是一种面向功能进行拆分的可扩展性架构\",{\"1\":{\"215\":1}}],[\"是一种\",{\"1\":{\"172\":1}}],[\"是一个非常优秀的国产框架\",{\"1\":{\"746\":1}}],[\"是一个小而全的\",{\"1\":{\"719\":1}}],[\"是一个类似于\",{\"1\":{\"651\":1,\"663\":1,\"667\":1}}],[\"是一个轻量级\",{\"1\":{\"624\":1}}],[\"是一个大版本\",{\"1\":{\"498\":1}}],[\"是一个开源编排式规则引擎\",{\"1\":{\"467\":1,\"473\":1,\"480\":1,\"497\":1,\"513\":1}}],[\"是一个开源的\",{\"1\":{\"426\":1}}],[\"是一个基于配置中心实现的轻量级动态线程池监控管理工具\",{\"1\":{\"409\":1,\"418\":1}}],[\"是一个交互式的\",{\"1\":{\"81\":1}}],[\"是一个异步的高性能分布式事务\",{\"0\":{\"72\":1}}],[\"是一个无锁\",{\"0\":{\"66\":1}}],[\"是一个拥有强大自定义监控能力\",{\"1\":{\"53\":1,\"441\":1,\"447\":1,\"451\":1,\"463\":1}}],[\"是什么\",{\"0\":{\"53\":1,\"720\":1}}],[\"是开源中国最受欢迎的组织\",{\"1\":{\"39\":1}}],[\"是由国内顶尖的开源项目作者共同组成的开源社区\",{\"1\":{\"37\":1}}],[\"是推动全球开源软件发展的重要力量\",{\"1\":{\"11\":1}}],[\"是\",{\"1\":{\"3\":1,\"81\":2,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"130\":1,\"157\":1,\"165\":1,\"220\":3,\"266\":1,\"269\":1,\"270\":1,\"406\":1,\"497\":1,\"513\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
